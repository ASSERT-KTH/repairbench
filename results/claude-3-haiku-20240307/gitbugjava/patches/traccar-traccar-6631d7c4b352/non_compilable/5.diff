diff --git a/tmp/0d336e31-bd8c-4a87-a094-9bba0178ba06_buggy.java b/tmp/94879ad4-013a-4875-926d-cbc9a6993ee3_fixed.java
index d87dd79..82f8728 100644
--- a/tmp/0d336e31-bd8c-4a87-a094-9bba0178ba06_buggy.java
+++ b/tmp/94879ad4-013a-4875-926d-cbc9a6993ee3_fixed.java
@@ -1,47 +1,15 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
-        int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
-            if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
-                break;
-            }
-        }
+    int startIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '[');
+    int endIndex = buf.indexOf(startIndex + 1, buf.writerIndex(), (byte) ']');
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
-                        case 0x01:
-                            frame.writeByte('}');
-                            break;
-                        case 0x02:
-                            frame.writeByte('[');
-                            break;
-                        case 0x03:
-                            frame.writeByte(']');
-                            break;
-                        case 0x04:
-                            frame.writeByte(',');
-                            break;
-                        case 0x05:
-                            frame.writeByte('*');
-                            break;
-                        default:
-                            throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
-                    }
-                } else {
-                    frame.writeByte(b1);
-                }
-            }
-            return frame;
+    if (startIndex >= 0 && endIndex > startIndex) {
+        ByteBuf frame = buf.slice(startIndex, endIndex - startIndex + 1);
+        buf.readerIndex(endIndex + 1);
+        return frame.copy();
     }
 
     return null;
 }
\ No newline at end of file
