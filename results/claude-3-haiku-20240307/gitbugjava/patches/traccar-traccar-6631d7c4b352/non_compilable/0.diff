diff --git a/tmp/f966e2d1-3c33-483a-b104-ffadea6f3b9c_buggy.java b/tmp/7ce297f7-36df-4a64-b37f-d2ae4a6fd5ce_fixed.java
index d87dd79..862dd54 100644
--- a/tmp/f966e2d1-3c33-483a-b104-ffadea6f3b9c_buggy.java
+++ b/tmp/7ce297f7-36df-4a64-b37f-d2ae4a6fd5ce_fixed.java
@@ -1,47 +1,13 @@
 @Override
-    protected Object decode(
-            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+protected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+    int startIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '[');
+    int endIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ']');
 
-        int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
-            if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
-                break;
-            }
-        }
-
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
-                        case 0x01:
-                            frame.writeByte('}');
-                            break;
-                        case 0x02:
-                            frame.writeByte('[');
-                            break;
-                        case 0x03:
-                            frame.writeByte(']');
-                            break;
-                        case 0x04:
-                            frame.writeByte(',');
-                            break;
-                        case 0x05:
-                            frame.writeByte('*');
-                            break;
-                        default:
-                            throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
-                    }
-                } else {
-                    frame.writeByte(b1);
-                }
-            }
+    if (startIndex != -1 && endIndex != -1 && endIndex > startIndex) {
+        ByteBuf frame = buf.slice(startIndex, endIndex - startIndex + 1);
+        buf.readerIndex(endIndex + 1);
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
