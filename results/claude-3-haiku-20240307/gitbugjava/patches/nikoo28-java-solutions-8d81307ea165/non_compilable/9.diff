diff --git a/tmp/8d5590cd-7645-45b3-a352-aadb0e8d8b86_buggy.java b/tmp/490172d0-16a5-4df1-bfa9-9e6af28b040e_fixed.java
index 9739964..a2e8526 100644
--- a/tmp/8d5590cd-7645-45b3-a352-aadb0e8d8b86_buggy.java
+++ b/tmp/490172d0-16a5-4df1-bfa9-9e6af28b040e_fixed.java
@@ -1,27 +1,21 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
-    spans[0] = 1; // Span of first element is always 1
-
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
+    spans[0] = 1; // Span of first element is always 1
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+        while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i]) {
             indexStack.pop();
+        }
 
         // If index stack is empty, the price at index 'i'
         // is greater than all previous values
-      if (indexStack.isEmpty())
-        spans[i] = i + 1;
-      else
-        spans[i] = i - indexStack.peek();
-
+        spans[i] = indexStack.isEmpty() ? i + 1 : i - indexStack.peek();
         indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
