diff --git a/tmp/12c8fc5d-a9e7-48fa-ae4f-5719ff82c2c7_buggy.java b/tmp/d3d189c3-a029-4848-acbf-3ae9f42307ab_fixed.java
index c84c989..48e599b 100644
--- a/tmp/12c8fc5d-a9e7-48fa-ae4f-5719ff82c2c7_buggy.java
+++ b/tmp/d3d189c3-a029-4848-acbf-3ae9f42307ab_fixed.java
@@ -1,27 +1,36 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
-
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
-        buf.readUnsignedIntLE(); // index
+    int index = buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
-        buf.readUnsignedByte(); // session status
+    int sessionStatus = buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    long dateTimeRaw = buf.readUnsignedIntLE(); // date and time
+
+    // Decode date and time
+    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+    calendar.clear();
+    calendar.set(Calendar.YEAR, 2000 + (int) (dateTimeRaw / 31536000));
+    calendar.set(Calendar.DAY_OF_YEAR, (int) ((dateTimeRaw % 31536000) / 86400));
+    calendar.set(Calendar.HOUR_OF_DAY, (int) ((dateTimeRaw % 86400) / 3600));
+    calendar.set(Calendar.MINUTE, (int) ((dateTimeRaw % 3600) / 60));
+    calendar.set(Calendar.SECOND, (int) (dateTimeRaw % 60));
+    position.setTime(calendar.getTime());
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
