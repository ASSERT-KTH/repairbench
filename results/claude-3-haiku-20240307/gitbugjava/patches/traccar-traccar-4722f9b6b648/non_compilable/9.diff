diff --git a/tmp/58028d2d-c4b3-4e97-866b-04cdf7f611f3_buggy.java b/tmp/c8f8aaed-cba1-451e-bc9a-7608a385a0de_fixed.java
index c84c989..8111ac8 100644
--- a/tmp/58028d2d-c4b3-4e97-866b-04cdf7f611f3_buggy.java
+++ b/tmp/c8f8aaed-cba1-451e-bc9a-7608a385a0de_fixed.java
@@ -1,27 +1,35 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
-        buf.readUnsignedIntLE(); // index
+    int index = buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
-        buf.readUnsignedByte(); // session status
+    int sessionStatus = buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    long dateTime = buf.readUnsignedIntLE(); // date and time
+
+    // Validate the date and time
+    if (dateTime > System.currentTimeMillis() / 1000 + 86400) {
+        // Reject positions with time more than 24 hours in the future
+        return null;
+    }
+
+    position.setTime(new Date(dateTime * 1000));
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
