diff --git a/tmp/6886fc34-35c0-4f00-91e1-8a2cf5787d63_buggy.java b/tmp/7f24e87d-46f2-4283-bfd6-54583d7b0bb9_fixed.java
index 23f078d..1978add 100644
--- a/tmp/6886fc34-35c0-4f00-91e1-8a2cf5787d63_buggy.java
+++ b/tmp/7f24e87d-46f2-4283-bfd6-54583d7b0bb9_fixed.java
@@ -1,14 +1,18 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
+        } else if (c > 127 && c <= 0xFFFF) { // out of ascii range, but within BMP
             sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (c > 0xFFFF) { // supplementary character
+            // Encode each surrogate pair separately
+            for (char ch : Character.toChars(c)) {
+                sb.append(URLEncoder.encode(String.valueOf(ch), UTF_8.name()));
+            }
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
