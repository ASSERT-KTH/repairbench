diff --git a/tmp/f6c736fc-b3e5-4f00-ab48-6cc8db6e8c3b_buggy.java b/tmp/4a9307d7-ea6f-48e5-a345-52d2a66fe932_fixed.java
index 23f078d..563ab41 100644
--- a/tmp/f6c736fc-b3e5-4f00-ab48-6cc8db6e8c3b_buggy.java
+++ b/tmp/4a9307d7-ea6f-48e5-a345-52d2a66fe932_fixed.java
@@ -1,14 +1,13 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
-            } else {
+        } else if (c <= 0x7F) { // out of ascii range
             sb.append((char) c);
+        } else {
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), StandardCharsets.UTF_8.name()));
         }
     }
 }
\ No newline at end of file
