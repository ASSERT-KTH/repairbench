diff --git a/tmp/0128567b-6118-4967-a0e9-4cd480016942_buggy.java b/tmp/72512603-4f5b-45a7-b93c-4a0fa086cf87_fixed.java
index 23f078d..b12ff2c 100644
--- a/tmp/0128567b-6118-4967-a0e9-4cd480016942_buggy.java
+++ b/tmp/72512603-4f5b-45a7-b93c-4a0fa086cf87_fixed.java
@@ -1,14 +1,15 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (c > 127) { // out of ASCII range
+            byte[] bytes = Character.toChars(c);
+            for (byte b : bytes) {
+                sb.append(URLEncoder.encode(String.valueOf((char) (b & 0xFF)), "UTF-8"));
+            }
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
