diff --git a/tmp/1f7f3cfa-b0d0-44a8-8bdf-ee5b8585fe27_buggy.java b/tmp/9eb3cebe-a71d-4563-af47-bbdbcc6db906_fixed.java
index 23f078d..59caf7f 100644
--- a/tmp/1f7f3cfa-b0d0-44a8-8bdf-ee5b8585fe27_buggy.java
+++ b/tmp/9eb3cebe-a71d-4563-af47-bbdbcc6db906_fixed.java
@@ -1,14 +1,13 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            byte[] bytes = Character.toString((char) c).getBytes(StandardCharsets.UTF_8);
+            sb.append(URLEncoder.encode(new String(bytes, StandardCharsets.UTF_8), StandardCharsets.UTF_8.name()));
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
