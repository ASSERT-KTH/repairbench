diff --git a/tmp/a06bf1e1-e9ef-48a4-958e-b96737a82dbb_buggy.java b/tmp/b6153485-ac7f-4ccd-904c-3db482d1c9b0_fixed.java
index 23f078d..f6ed2ad 100644
--- a/tmp/a06bf1e1-e9ef-48a4-958e-b96737a82dbb_buggy.java
+++ b/tmp/b6153485-ac7f-4ccd-904c-3db482d1c9b0_fixed.java
@@ -1,14 +1,13 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
-            int c = s.codePointAt(i);
-            if (c == ' ') {
+        int codePoint = s.codePointAt(i);
+        if (codePoint == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (codePoint > 127) { // out of ASCII range
+            String encodedChar = URLEncoder.encode(new String(Character.toChars(codePoint)), StandardCharsets.UTF_8.name());
+            sb.append(encodedChar);
         } else {
-                sb.append((char) c);
+            sb.append((char) codePoint);
         }
     }
 }
\ No newline at end of file
