diff --git a/tmp/8d3cc7a8-2329-4725-8b3b-d5eb0d9892b2_buggy.java b/tmp/c7e30a0f-68fc-47bd-a283-e6beaf1bc548_fixed.java
index 016a7f6..574cce2 100644
--- a/tmp/8d3cc7a8-2329-4725-8b3b-d5eb0d9892b2_buggy.java
+++ b/tmp/c7e30a0f-68fc-47bd-a283-e6beaf1bc548_fixed.java
@@ -1,29 +1,26 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
-            trimTrailing = trimLikeBlock && nextSibling() == null;
+        trimTrailing = trimLikeBlock && (nextSibling() == null || nextSibling() instanceof TextNode && ((TextNode) nextSibling()).isBlank());
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
         if (couldSkip && isBlank) return;
 
-            Node prev = previousSibling();
-            if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank)
+                || (out.outline() && siblingNodes().size() > 0 && !isBlank)
+                || (siblingIndex > 0 && previousSibling() instanceof Element && ((Element) previousSibling()).normalName().equals("br"))) // special case wrap on inline <br> - doesn't make sense as a block tag
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
