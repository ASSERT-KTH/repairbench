diff --git a/tmp/c81dc806-fab5-45d8-b7f9-effe4b0e0b2c_buggy.java b/tmp/ca39ce69-3cb0-41e2-a4ac-4a07b6393b34_fixed.java
index 4cce784..c0b322e 100644
--- a/tmp/c81dc806-fab5-45d8-b7f9-effe4b0e0b2c_buggy.java
+++ b/tmp/ca39ce69-3cb0-41e2-a4ac-4a07b6393b34_fixed.java
@@ -1,11 +1,15 @@
 /**
  * Compares this object to another based on size.
  * @param object the object to compare to
  * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
  *         than <tt>object</tt>, 0 if they are equal.
  */
 public int compareTo(Fraction object) {
-        double nOd = doubleValue();
-        double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+    if (object == null) {
+        throw new NullPointerException("Fraction object is null");
+    }
+    // use long arithmetic to compare without converting to double
+    long lhs = (long) this.numerator * object.denominator;
+    long rhs = (long) object.numerator * this.denominator;
+    return (lhs < rhs) ? -1 : ((lhs > rhs) ? +1 : 0);
 }
\ No newline at end of file
