diff --git a/tmp/97246beb-0a41-41b6-803c-b5745f7dbd61_buggy.java b/tmp/209cb09c-8da3-48cb-990f-93fd89bddfee_fixed.java
index 5f96616..8aecb7b 100644
--- a/tmp/97246beb-0a41-41b6-803c-b5745f7dbd61_buggy.java
+++ b/tmp/209cb09c-8da3-48cb-990f-93fd89bddfee_fixed.java
@@ -1,20 +1,24 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
+  // taking each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    ObjectType recordType = constraint.toObjectType();
+    for (String prop : recordType.getOwnPropertyNames()) {
+      JSType propType = recordType.getPropertyType(prop);
+      defineInferredProperty(prop, propType, null);
+    }
   }
 }
\ No newline at end of file
