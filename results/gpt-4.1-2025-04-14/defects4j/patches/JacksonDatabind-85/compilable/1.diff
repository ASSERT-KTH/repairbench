diff --git a/tmp/38a03585-c308-49c5-abcb-bada7875ddf5_buggy.java b/tmp/4adfb90b-7b2e-4248-99fe-bccdddc3fd3b_fixed.java
index d926eea..9a868ed 100644
--- a/tmp/38a03585-c308-49c5-abcb-bada7875ddf5_buggy.java
+++ b/tmp/4adfb90b-7b2e-4248-99fe-bccdddc3fd3b_fixed.java
@@ -1,48 +1,59 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
     // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
     // First: custom pattern will override things
     if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
             || format.hasLocale() || format.hasTimeZone()) {
         TimeZone tz = format.getTimeZone();
         final String pattern = format.hasPattern()
                 ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                : null;
         final Locale loc = format.hasLocale()
                 ? format.getLocale()
                 : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+
+        // If pattern is not specified, and Shape is STRING only due to context,
+        // use provider's DateFormat instance if possible.
+        if (pattern == null) {
+            DateFormat df = serializers.getConfig().getDateFormat();
+            if (df instanceof SimpleDateFormat) {
+                SimpleDateFormat sdf = (SimpleDateFormat) ((SimpleDateFormat) df).clone();
+                if (format.hasLocale()) {
+                    sdf = new SimpleDateFormat(sdf.toPattern(), loc);
+                }
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
-            df.setTimeZone(tz);
-            return withFormat(Boolean.FALSE, df);
+                sdf.setTimeZone(tz);
+                return withFormat(Boolean.FALSE, sdf);
+            }
+            // If not a SimpleDateFormat, fallback: just return this
+            return this;
         }
 
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
+        // If pattern is specified, use it with SimpleDateFormat
+        SimpleDateFormat sdf = new SimpleDateFormat(pattern, loc);
+        if (tz == null) {
+            tz = serializers.getTimeZone();
+        }
+        sdf.setTimeZone(tz);
+        return withFormat(Boolean.FALSE, sdf);
+    }
 
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
     return this;
 }
\ No newline at end of file
