diff --git a/tmp/595e2f0d-6515-4219-84bb-543a0aa32ced_buggy.java b/tmp/d3aa62bf-4a94-4eb6-acad-a200e817f99b_fixed.java
index de9af32..9493857 100644
--- a/tmp/595e2f0d-6515-4219-84bb-543a0aa32ced_buggy.java
+++ b/tmp/d3aa62bf-4a94-4eb6-acad-a200e817f99b_fixed.java
@@ -1,18 +1,31 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+    if (child != null && child.getType() == Token.NAME) {
       changed.add(child.getString());
     }
   }
 
+  // Do not traverse into the callee of a CALL node (the function being called)
+  // Only traverse the arguments and subsequent siblings
+  if (node.getType() == Token.CALL) {
+    Node arg = node.getFirstChild();
+    if (arg != null) {
+      arg = arg.getNext();
+      while (arg != null) {
+        findCalledFunctions(arg, changed);
+        arg = arg.getNext();
+      }
+    }
+  } else {
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
+}
\ No newline at end of file
