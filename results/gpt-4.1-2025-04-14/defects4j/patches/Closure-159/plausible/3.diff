diff --git a/tmp/932288b9-0b2c-42b0-90ec-04f24473a60c_buggy.java b/tmp/2bb6d5d4-5dc5-48d0-9098-a9362c6317d1_fixed.java
index de9af32..c771ae7 100644
--- a/tmp/932288b9-0b2c-42b0-90ec-04f24473a60c_buggy.java
+++ b/tmp/2bb6d5d4-5dc5-48d0-9098-a9362c6317d1_fixed.java
@@ -1,18 +1,22 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
+      // Only add plain function name calls (no "call" or "apply" or ".call/.apply" etc)
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
       }
     }
 
+    // Do not recurse into the first child of a CALL node, as it's the callee
+    Node firstCallee = (node.getType() == Token.CALL) ? node.getFirstChild() : null;
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+      if (c == firstCallee) continue;
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
