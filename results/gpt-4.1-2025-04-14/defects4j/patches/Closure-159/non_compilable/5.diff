diff --git a/tmp/2efa506c-6e39-4052-9710-e21cd8de2a2d_buggy.java b/tmp/75002915-9eeb-41bc-b753-a524f4de2099_fixed.java
index de9af32..9570d86 100644
--- a/tmp/2efa506c-6e39-4052-9710-e21cd8de2a2d_buggy.java
+++ b/tmp/75002915-9eeb-41bc-b753-a524f4de2099_fixed.java
@@ -1,18 +1,26 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
+  if (node.isCall()) {
     Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+    if (child != null && child.isName()) {
       changed.add(child.getString());
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+    // Do not traverse into the callee of a .call() or .apply() call
+    if (node.isCall() && c == node.getFirstChild()
+        && c.isGetProp()) {
+      String propName = c.getLastChild() != null ? c.getLastChild().getString() : null;
+      if ("call".equals(propName) || "apply".equals(propName)) {
+        continue; // skip the callee property itself
+      }
+    }
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
