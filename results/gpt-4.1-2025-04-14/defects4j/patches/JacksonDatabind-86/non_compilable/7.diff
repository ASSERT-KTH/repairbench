diff --git a/tmp/2e2aa0f0-9261-4a50-9726-1c1f2e09e47c_buggy.java b/tmp/4d1f89d8-55f9-44f7-9f35-8def7a60268f_fixed.java
index e69de29..4f36c35 100644
--- a/tmp/2e2aa0f0-9261-4a50-9726-1c1f2e09e47c_buggy.java
+++ b/tmp/4d1f89d8-55f9-44f7-9f35-8def7a60268f_fixed.java
@@ -0,0 +1,36 @@
+@Override
+public List<BeanPropertyDefinition> findProperties(MapperConfig<?> config,
+        JavaType type, MixInResolver r, boolean forSerialization)
+{
+    // 29-May-2017, tatu: [databind#1647]
+    // RecursiveType might be missing super types, so let's do a careful walk.
+    List<BeanPropertyDefinition> result = new ArrayList<>();
+    JavaType currType = type;
+    Set<Class<?>> seen = new HashSet<>();
+    // Only traverse super classes/interfaces for BeanType base
+    while (currType != null && !currType.isJavaLangObject()) {
+        final Class<?> raw = currType.getRawClass();
+        // To avoid infinite loops from recursion
+        if (!seen.add(raw)) {
+            break;
+        }
+        BeanDescription desc = config.introspectForSerialization(currType);
+        List<BeanPropertyDefinition> props = desc.findProperties();
+        // Add in order, but avoid duplicates by name
+        for (BeanPropertyDefinition prop : props) {
+            String name = prop.getName();
+            boolean exists = false;
+            for (BeanPropertyDefinition prevProp : result) {
+                if (prevProp.getName().equals(name)) {
+                    exists = true;
+                    break;
+                }
+            }
+            if (!exists) {
+                result.add(prop);
+            }
+        }
+        currType = currType.getSuperClass();
+    }
+    return result;
+}
\ No newline at end of file
