diff --git a/tmp/ad6a7b22-d6da-41d0-9103-87a75646007b_buggy.java b/tmp/69ca2574-f652-4e46-b1ac-1389efdb4750_fixed.java
index fc8c302..e98824b 100644
--- a/tmp/ad6a7b22-d6da-41d0-9103-87a75646007b_buggy.java
+++ b/tmp/69ca2574-f652-4e46-b1ac-1389efdb4750_fixed.java
@@ -1,23 +1,34 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n.isBinary()) {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
-            if (n.isPojo()) {
+        } else if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
+        } else if (n.isTextual()) {
+            // For textual nodes, must decode with proper variant!
+            String text = n.textValue();
+            if (text != null) {
+                try {
+                    return b64variant.decode(text);
+                } catch (IllegalArgumentException e) {
+                    throw new JsonParseException(this, "Cannot access contents of TextNode as binary due to broken Base64 encoding: "+e.getMessage(), e);
+                }
+            }
         }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
