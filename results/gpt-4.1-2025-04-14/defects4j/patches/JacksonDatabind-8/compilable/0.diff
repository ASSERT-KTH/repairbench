diff --git a/tmp/4ec0ba24-3ca8-484c-b3e0-68c3247cea39_buggy.java b/tmp/fa680779-6a37-47dc-811c-5917b720e341_fixed.java
index c9da1b7..6c31a9e 100644
--- a/tmp/4ec0ba24-3ca8-484c-b3e0-68c3247cea39_buggy.java
+++ b/tmp/fa680779-6a37-47dc-811c-5917b720e341_fixed.java
@@ -1,33 +1,26 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
     if (oldOne != null) {
-
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+            // both explicit: conflict
+            throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
+                    + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
         }
-
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+            // But: Only report error if BOTH explicit, which is already checked above.
+            // Here DO NOT throw, just override with newOne (since neither is explicit)
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
