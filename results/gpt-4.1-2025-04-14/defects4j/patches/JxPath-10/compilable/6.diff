diff --git a/tmp/be147c9a-49e9-4452-a63d-321384f50148_buggy.java b/tmp/e82d1c32-e1b6-49ba-8a9d-a9650e6d0108_fixed.java
index b86b44d..b422481 100644
--- a/tmp/be147c9a-49e9-4452-a63d-321384f50148_buggy.java
+++ b/tmp/e82d1c32-e1b6-49ba-8a9d-a9650e6d0108_fixed.java
@@ -1,4 +1,23 @@
 public final Object computeValue(EvalContext context) {
-        return compute(args[0].computeValue(context), args[1].computeValue(context))
-                ? Boolean.TRUE : Boolean.FALSE;
+    Object left = args[0].computeValue(context);
+    Object right = args[1].computeValue(context);
+
+    // Check for empty left operand (XPath: "an empty node-set is treated as false in comparisons")
+    if ((left instanceof org.apache.commons.jxpath.ri.EvalContext) 
+            && !((org.apache.commons.jxpath.ri.EvalContext) left).hasNext()) {
+        return Boolean.FALSE;
+    }
+    if ((left instanceof java.util.List) && ((java.util.List<?>) left).isEmpty()) {
+        return Boolean.FALSE;
+    }
+    // Check for empty right operand (just in case)
+    if ((right instanceof org.apache.commons.jxpath.ri.EvalContext) 
+            && !((org.apache.commons.jxpath.ri.EvalContext) right).hasNext()) {
+        return Boolean.FALSE;
+    }
+    if ((right instanceof java.util.List) && ((java.util.List<?>) right).isEmpty()) {
+        return Boolean.FALSE;
+    }
+
+    return compute(left, right) ? Boolean.TRUE : Boolean.FALSE;
 }
\ No newline at end of file
