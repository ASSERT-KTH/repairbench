diff --git a/tmp/96a2ce0e-b457-4ed6-a9ea-01cfeb768990_buggy.java b/tmp/72a0b925-ffa1-4039-b07b-52eb0154caf4_fixed.java
index 735a993..563106d 100644
--- a/tmp/96a2ce0e-b457-4ed6-a9ea-01cfeb768990_buggy.java
+++ b/tmp/72a0b925-ffa1-4039-b07b-52eb0154caf4_fixed.java
@@ -1,29 +1,16 @@
-    /**
-     * Appends an object to the builder padding on the right to a fixed length.
-     * The <code>toString</code> of the object is used.
-     * If the object is larger than the length, the right hand side is lost.
-     * If the object is null, null text value is used.
-     * 
-     * @param obj  the object to append, null uses null text
-     * @param width  the fixed field width, zero or negative has no effect
-     * @param padChar  the pad character to use
-     * @return this, to enable chaining
-     */
 public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
     if (width > 0) {
         ensureCapacity(size + width);
         String str = (obj == null ? getNullText() : obj.toString());
         int strLen = str.length();
-            if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
-            } else {
-                int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
-                for (int i = 0; i < padLen; i++) {
-                    buffer[size + strLen + i] = padChar;
-                }
+        int actualLen = Math.min(strLen, width);
+        // Only copy up to 'width' chars if strLen > width
+        str.getChars(0, actualLen, buffer, size);
+        // pad the rest
+        for (int i = actualLen; i < width; i++) {
+            buffer[size + i] = padChar;
         }
         size += width;
     }
     return this;
 }
\ No newline at end of file
