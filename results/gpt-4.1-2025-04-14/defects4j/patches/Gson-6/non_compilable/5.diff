diff --git a/tmp/c4911325-e24c-4055-9176-9032f3f4ef60_buggy.java b/tmp/28459959-a754-4c19-9be9-f51a3de71d73_fixed.java
index 1c53d31..9fd3ca0 100644
--- a/tmp/c4911325-e24c-4055-9176-9032f3f4ef60_buggy.java
+++ b/tmp/28459959-a754-4c19-9be9-f51a3de71d73_fixed.java
@@ -1,20 +1,28 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
-    if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
-    } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+  Object instance = constructorConstructor.get(TypeToken.get(value)).construct();
+
+  if (instance instanceof TypeAdapter) {
+    TypeAdapter<?> typeAdapter = ((TypeAdapter<?>) instance);
+    if (annotation.nullSafe()) {
+      return typeAdapter.nullSafe();
+    } else {
+      return typeAdapter;
+    }
+  } else if (instance instanceof TypeAdapterFactory) {
+    TypeAdapter<?> typeAdapter = ((TypeAdapterFactory) instance).create(gson, fieldType);
+    if (typeAdapter == null) {
+      return null;
+    }
+    if (annotation.nullSafe()) {
+      return typeAdapter.nullSafe();
+    } else {
+      return typeAdapter;
+    }
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
 }
\ No newline at end of file
