diff --git a/tmp/b23d87f6-8e7d-4a40-889c-42f0f889fe56_buggy.java b/tmp/8995a07b-2155-4703-b79a-a86dd56f56e5_fixed.java
index 1c53d31..1153c7f 100644
--- a/tmp/b23d87f6-8e7d-4a40-889c-42f0f889fe56_buggy.java
+++ b/tmp/8995a07b-2155-4703-b79a-a86dd56f56e5_fixed.java
@@ -1,20 +1,29 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
+  Object instance;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    instance = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    if (!(instance instanceof TypeAdapter<?>)) {
+      throw new IllegalArgumentException(
+          "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
+    }
+    TypeAdapter<?> typeAdapter = (TypeAdapter<?>) instance;
+    return typeAdapter.nullSafe();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    instance = constructorConstructor.get(TypeToken.get(typeAdapterFactory)).construct();
+    if (!(instance instanceof TypeAdapterFactory)) {
+      throw new IllegalArgumentException(
+          "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
+    }
+    TypeAdapter<?> typeAdapter = ((TypeAdapterFactory) instance).create(gson, fieldType);
+    // Only wrap with nullSafe if typeAdapter is not null
+    return typeAdapter == null ? null : typeAdapter.nullSafe();
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
 }
\ No newline at end of file
