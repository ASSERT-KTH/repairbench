diff --git a/tmp/e476c0fa-2957-499e-8be3-9d445a49bcb0_buggy.java b/tmp/d637641b-52fb-4585-b569-84953f2bc105_fixed.java
index 39dd8e7..8f52785 100644
--- a/tmp/e476c0fa-2957-499e-8be3-9d445a49bcb0_buggy.java
+++ b/tmp/d637641b-52fb-4585-b569-84953f2bc105_fixed.java
@@ -1,30 +1,31 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
+
+    // If we don't have a key, just return null (and don't try to chomp "=" or value)
+    if (key.length() == 0) {
+        // Do not consume() here as there may be nothing to consume, and we're not skipping invalid input
+        return null;
+    }
+
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
     return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
-            return null;
-        }
 }
\ No newline at end of file
