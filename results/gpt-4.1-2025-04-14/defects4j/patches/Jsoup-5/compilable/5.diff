diff --git a/tmp/5930f5a7-c5d6-4dcb-b9d7-c4cf4b1be978_buggy.java b/tmp/e885c0bd-39a2-40c2-890a-e4ba3039cf43_fixed.java
index 39dd8e7..fb2f796 100644
--- a/tmp/5930f5a7-c5d6-4dcb-b9d7-c4cf4b1be978_buggy.java
+++ b/tmp/e885c0bd-39a2-40c2-890a-e4ba3039cf43_fixed.java
@@ -1,30 +1,31 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
+    if (key.length() == 0) {
+        // No attribute key found, skip invalid tokens to recover gracefully
+        if (!tq.isEmpty()) {
+            tq.consume(); // Advance parser by one character to avoid infinite loop
+        }
+        return null;
+    }
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
     return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
-            return null;
-        }
 }
\ No newline at end of file
