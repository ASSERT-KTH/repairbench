diff --git a/tmp/322f8340-5fdb-4b98-bc9b-390609b5400f_buggy.java b/tmp/eded5816-b14f-4cd4-9aab-81c1f5c9644c_fixed.java
index 670114d..82f6514 100644
--- a/tmp/322f8340-5fdb-4b98-bc9b-390609b5400f_buggy.java
+++ b/tmp/eded5816-b14f-4cd4-9aab-81c1f5c9644c_fixed.java
@@ -1,48 +1,52 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
+        // For issue 284: Do not record sets for assignments to undefined names at the global scope
+        // i.e. only record sets for assignments inside global scope to names that actually exist
+        if (!(t.inGlobalScope() && getName(ns.name, false) == null)) {
           recordSet(ns.name, nameNode);
         }
       }
+    }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
