diff --git a/tmp/30c46dc2-b805-448a-988e-c72dc0dfc80d_buggy.java b/tmp/18c18e71-f37f-4519-ae7b-3e2bd6f4994d_fixed.java
index 4e8b037..aabaf06 100644
--- a/tmp/30c46dc2-b805-448a-988e-c72dc0dfc80d_buggy.java
+++ b/tmp/18c18e71-f37f-4519-ae7b-3e2bd6f4994d_fixed.java
@@ -1,20 +1,29 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // if no values have been set, use the defaults (first argument)
+    if (valueList == null || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // if defaultValues is null or empty, try this.defaultValues as fallback
+    if (valueList == null || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+    
+    // Now augment incomplete valueList with remaining defaults, if available
+    // (e.g. 2 args given, max=3, more defaults: append remaining)
+    List fullDefaults = (List) this.defaultValues.get(option);
+    if (valueList != null && fullDefaults != null 
+        && valueList.size() < fullDefaults.size()) {
+        // copy valueList to avoid mutating original
+        List augmented = new ArrayList(valueList);
+        for (int i = valueList.size(); i < fullDefaults.size(); ++i) {
+            augmented.add(fullDefaults.get(i));
+        }
+        return augmented;
+    }
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
