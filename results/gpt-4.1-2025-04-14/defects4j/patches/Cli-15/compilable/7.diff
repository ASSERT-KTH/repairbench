diff --git a/tmp/9627435e-e1df-4fc8-83b5-cfe8928c1aa3_buggy.java b/tmp/9c8c9dfc-f53d-4e9e-b733-ee545a2c9865_fixed.java
index 4e8b037..e4bab3f 100644
--- a/tmp/9627435e-e1df-4fc8-83b5-cfe8928c1aa3_buggy.java
+++ b/tmp/9c8c9dfc-f53d-4e9e-b733-ee545a2c9865_fixed.java
@@ -1,20 +1,27 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // If valueList is null, set it to an empty list to make processing easier
+    if (valueList == null) {
+        valueList = new ArrayList();
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // If defaultValues is not null, augment valueList with any remaining default values
+    if (defaultValues != null && !defaultValues.isEmpty()) {
+        int numSupplied = valueList.size();
+        for (int i = numSupplied; i < defaultValues.size(); i++) {
+            valueList.add(defaultValues.get(i));
+        }
+    }
+
+    // If after all this, valueList is still empty, try the option-specific defaults
+    if (valueList.isEmpty()) {
+        List optionDefaults = (List) this.defaultValues.get(option);
+        if (optionDefaults != null) {
+            valueList = new ArrayList(optionDefaults);
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return valueList == null || valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
