diff --git a/tmp/b1299182-4a28-49c5-9394-f725acc426b5_buggy.java b/tmp/c12c77c6-f472-4a72-96d2-18aa4f620bf8_fixed.java
index 4e8b037..4cb029e 100644
--- a/tmp/b1299182-4a28-49c5-9394-f725acc426b5_buggy.java
+++ b/tmp/c12c77c6-f472-4a72-96d2-18aa4f620bf8_fixed.java
@@ -1,20 +1,46 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
+    // if there are no parsed values, just use defaultValues or from this.defaultValues
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
-        }
-
-        // augment the list with the default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = (List) this.defaultValues.get(option);
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
-        
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
+
+    // If there are parsed values, we may still need to add more default values to reach the max arity
+    int parsedCount = valueList.size();
+    List defList = null;
+    if (defaultValues != null && !defaultValues.isEmpty()) {
+        defList = defaultValues;
+    } else {
+        defList = (List) this.defaultValues.get(option);
+    }
+
+    if (defList != null && !defList.isEmpty()) {
+        // Figure out how many more values we need, if any
+        int required = 0;
+        if (option instanceof CommandLineOption) {
+            Argument argument = ((CommandLineOption) option).getArgument();
+            if (argument != null && argument.getMaximum() != Integer.MAX_VALUE) {
+                required = argument.getMaximum() - valueList.size();
+            }
+        }
+        // fall back for DefaultOption (as seen in CLI2)
+        if (required <= 0 && option.getArgument() != null && option.getArgument().getMaximum() != Integer.MAX_VALUE) {
+            required = option.getArgument().getMaximum() - valueList.size();
+        }
+        if (required > 0) {
+            List result = new ArrayList(valueList);
+            int toAdd = Math.min(defList.size(), required);
+            for (int i = defList.size() - toAdd; i < defList.size(); i++) {
+                result.add(defList.get(i));
+            }
+            return result;
+        }
+    }
+    return valueList;
+}
\ No newline at end of file
