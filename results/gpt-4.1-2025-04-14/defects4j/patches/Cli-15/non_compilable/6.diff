diff --git a/tmp/c2ce3678-a0cf-471a-8b51-06e84d78bb47_buggy.java b/tmp/bde45350-c055-4813-b09d-716f5c9bb9af_fixed.java
index 4e8b037..c5c276f 100644
--- a/tmp/c2ce3678-a0cf-471a-8b51-06e84d78bb47_buggy.java
+++ b/tmp/bde45350-c055-4813-b09d-716f5c9bb9af_fixed.java
@@ -1,20 +1,35 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
+public List getValues(final Option option, List defaultValues) {
+    // get the provided values for the option
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If not found, try defaultValues argument
+    if (valueList == null) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If still null or empty, try this.defaultValues.get(option)
+    if (valueList == null || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+
+    // Now, if valueList is not null and not empty, 
+    // and if we have both user values and defaults, and the option supports more args,
+    // we need to fill up to the maximum number of allowed arguments using defaults
+    Argument arg = option.getArgument();
+    if (arg != null && valueList != null) {
+        int maxArgs = arg.getMaximum();
+        if (maxArgs != Integer.MAX_VALUE && valueList.size() < maxArgs) {
+            // Try to fill remaining values from defaults
+            List allDefaults = (List) this.defaultValues.get(option);
+            if (allDefaults != null) {
+                List<Object> extended = new ArrayList<Object>(valueList);
+                for (int i = valueList.size(); i < maxArgs && i < allDefaults.size(); i++) {
+                    extended.add(allDefaults.get(i));
+                }
+                valueList = extended;
+            }
+        }
+    }
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
