diff --git a/tmp/906d98de-8109-42b4-8762-ed515035af19_buggy.java b/tmp/d6a09d6f-dd66-4c3d-8cef-16574e7eb08e_fixed.java
index 4e8b037..cb9625c 100644
--- a/tmp/906d98de-8109-42b4-8762-ed515035af19_buggy.java
+++ b/tmp/d6a09d6f-dd66-4c3d-8cef-16574e7eb08e_fixed.java
@@ -1,20 +1,39 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // If valueList is null, new ArrayList
+    List resultList = new ArrayList();
+    if (valueList != null && !valueList.isEmpty()) {
+        resultList.addAll(valueList);
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    int resultSize = resultList.size();
+    int requiredSize = option.getArgument() != null ? option.getArgument().getMinimum() : 0;
+
+    // If not enough args, add as many defaults as necessary to fill up to minimum or provided defaults
+    if (option.getArgument() != null) {
+        List allDefaults = new ArrayList();
+        if (defaultValues != null) {
+            allDefaults.addAll(defaultValues);
+        }
+        List optionDefaults = (List) this.defaultValues.get(option);
+        if (optionDefaults != null) {
+            allDefaults.addAll(optionDefaults);
+        }
+        int defIdx = 0;
+        while (resultList.size() < option.getArgument().getMinimum() && defIdx < allDefaults.size()) {
+            resultList.add(allDefaults.get(defIdx++));
+        }
+        // If still not enough, try to fill up to maximum (if not unlimited) using available defaults
+        int max = option.getArgument().getMaximum();
+        if (max != Integer.MAX_VALUE) {
+            while (resultList.size() < max && defIdx < allDefaults.size()) {
+                resultList.add(allDefaults.get(defIdx++));
+            }
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return resultList.isEmpty() ? Collections.EMPTY_LIST : resultList;
 }
\ No newline at end of file
