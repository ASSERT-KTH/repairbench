diff --git a/tmp/f80d19da-ea67-4ccf-a4e0-3387f0be18f7_buggy.java b/tmp/57ef9641-2b2c-4d48-b75a-fa22b0090627_fixed.java
index 4e8b037..c4493a8 100644
--- a/tmp/f80d19da-ea67-4ccf-a4e0-3387f0be18f7_buggy.java
+++ b/tmp/57ef9641-2b2c-4d48-b75a-fa22b0090627_fixed.java
@@ -1,20 +1,39 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
+    // If no user-supplied values, set to defaultValues
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
+    // If still empty, try other defaultValues map
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+
+    // If we have some user values but not enough, fill in from defaultValues
+    Argument argument = option.getArgument();
+    if (argument != null && valueList != null) {
+        int required = argument.getMinimum();
+        int maximum = argument.getMaximum();
+        int size = valueList.size();
+        // Only augment if less than maximum and argument allows more values
+        if (size < maximum) {
+            List merged = new ArrayList(valueList);
+            // first try artificially supplied defaults
+            List defList = defaultValues;
+            if (defList == null || defList.isEmpty()) {
+                defList = (List) this.defaultValues.get(option);
+            }
+            if (defList != null) {
+                for (int i = size; i < maximum && i < defList.size(); ++i) {
+                    merged.add(defList.get(i));
+                }
+            }
+            valueList = merged;
+        }
+    }
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
