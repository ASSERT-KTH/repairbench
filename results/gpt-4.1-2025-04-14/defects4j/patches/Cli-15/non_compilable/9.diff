diff --git a/tmp/10e11a63-dc23-4455-ad86-b416d879e3b8_buggy.java b/tmp/b40cc394-4e13-45a5-ab6f-b1dccebcab39_fixed.java
index 4e8b037..4e18471 100644
--- a/tmp/10e11a63-dc23-4455-ad86-b416d879e3b8_buggy.java
+++ b/tmp/b40cc394-4e13-45a5-ab6f-b1dccebcab39_fixed.java
@@ -1,20 +1,37 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
     // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    if (valueList == null || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If we still have no values, try this.defaultValues map
+    if (valueList == null || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
+    } else {
+        // If we have some values, and default values exist, augment up to max
+        List argDefaults = (List) this.defaultValues.get(option);
+        if (argDefaults != null && !argDefaults.isEmpty()) {
+            int max = Integer.MAX_VALUE;
+            Argument argument = null;
+            if (option instanceof DefaultOption) {
+                argument = ((DefaultOption) option).getArgument();
+            }
+            if (argument != null && argument.getMaximum() != null) {
+                max = argument.getMaximum().intValue();
+            }
+            // Make a new list so we don't modify the original valueList
+            List newValueList = new ArrayList(valueList);
+            int fillFrom = newValueList.size();
+            for (int i = 0; i < argDefaults.size() && newValueList.size() < max; i++) {
+                newValueList.add(argDefaults.get(i));
+            }
+            valueList = newValueList;
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
