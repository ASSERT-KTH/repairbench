diff --git a/tmp/e8c7af4e-02f6-4a2d-a1f2-582a4e49c1e9_buggy.java b/tmp/96cc1c09-2ebc-41da-bfe5-07309aabc78f_fixed.java
index e5ad041..53da819 100644
--- a/tmp/e8c7af4e-02f6-4a2d-a1f2-582a4e49c1e9_buggy.java
+++ b/tmp/96cc1c09-2ebc-41da-bfe5-07309aabc78f_fixed.java
@@ -1,19 +1,15 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    // When narrowing, if there is a super-class (as with SimpleType), we must
+    // also correctly resolve the super-class and interfaces for the new subclass.
+    // Otherwise, type information used for deserialization can get out of sync.
+    return new SimpleType(subclass, _bindings, 
+            // resolve super-class and interfaces for proper construction
+            _bindings.resolveType(subclass.getGenericSuperclass()),
+            _bindings.resolveTypes(subclass.getGenericInterfaces()),
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
