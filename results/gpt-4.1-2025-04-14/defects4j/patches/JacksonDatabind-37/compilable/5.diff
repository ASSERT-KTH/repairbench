diff --git a/tmp/d194f55c-4deb-45cc-9d38-6de88287e887_buggy.java b/tmp/87dccb2d-d9f5-4aab-8b4c-dbcd28fffd57_fixed.java
index e5ad041..38b45d3 100644
--- a/tmp/d194f55c-4deb-45cc-9d38-6de88287e887_buggy.java
+++ b/tmp/87dccb2d-d9f5-4aab-8b4c-dbcd28fffd57_fixed.java
@@ -1,19 +1,12 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // When narrowing, _superClass and _superInterfaces must be recomputed for the new subclass,
+    // since the given values are for _class. Otherwise, property mapping (e.g. unrecognized fields)
+    // may get messed up due to incorrect type hierarchy.
+    // Only _bindings, _valueHandler, _typeHandler, _asStatic can be reused.
+    return new SimpleType(subclass, _bindings, null, null, _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
