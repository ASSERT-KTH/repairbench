diff --git a/tmp/9cdd310a-313c-4b4f-9204-ed9dd531861e_buggy.java b/tmp/dce06136-5e71-44c6-ad40-6f32893491fb_fixed.java
index 5c5286c..c4e7946 100644
--- a/tmp/9cdd310a-313c-4b4f-9204-ed9dd531861e_buggy.java
+++ b/tmp/dce06136-5e71-44c6-ad40-6f32893491fb_fixed.java
@@ -1,6 +1,19 @@
 public <T> void resetMock(T mock) {
     MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
+
+    // Retrieve the old mock settings and preserve listeners and configuration
+    MockSettingsImpl oldSettings = (MockSettingsImpl) oldMockHandler.getMockSettings();
+
+    // Clone the settings to preserve listeners and other configurations
+    MockSettingsImpl newSettings = oldSettings.clone();
+
+    // Set the default answer as before, but preserve listeners etc.
+    if (newSettings.getDefaultAnswer() == null) {
+        newSettings.defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);
+    }
+
+    MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler, newSettings);
+
+    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, newSettings);
     ((Factory) mock).setCallback(0, newFilter);
 }
\ No newline at end of file
