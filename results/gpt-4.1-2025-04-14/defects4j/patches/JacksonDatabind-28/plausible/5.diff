diff --git a/tmp/8c50434f-4bc2-4c62-904c-4957a1989bc4_buggy.java b/tmp/dad30708-2781-4416-b09c-6a948bedb91c_fixed.java
index 66bb99f..c3a738d 100644
--- a/tmp/8c50434f-4bc2-4c62-904c-4957a1989bc4_buggy.java
+++ b/tmp/dad30708-2781-4416-b09c-6a948bedb91c_fixed.java
@@ -1,14 +1,18 @@
 @Override
 public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
 {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+    JsonToken t = p.getCurrentToken();
+    if (t == JsonToken.START_OBJECT) {
         p.nextToken();
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+    if (t == JsonToken.FIELD_NAME) {
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
+    // Fix: Accept END_OBJECT as valid for empty ObjectNode
+    if (t == JsonToken.END_OBJECT) {
+        // Return empty ObjectNode
+        return ctxt.getNodeFactory().objectNode();
+    }
     throw ctxt.mappingException(ObjectNode.class);
 }
\ No newline at end of file
