diff --git a/tmp/c52a0f7f-268c-4f28-bbe3-c2d434cd1adb_buggy.java b/tmp/04f7e05a-684a-4f96-9fb5-fd780dce23d2_fixed.java
index 1bec4d6..c44e422 100644
--- a/tmp/c52a0f7f-268c-4f28-bbe3-c2d434cd1adb_buggy.java
+++ b/tmp/04f7e05a-684a-4f96-9fb5-fd780dce23d2_fixed.java
@@ -1,14 +1,21 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    if (rawClass == Properties.class) {
+        // Properties is not generic, but we want to treat it as <String,String>
+        JavaType strType = TypeFactory.unknownType().withTypeHandler(null);
+        // Normally, use _unknownType(), but need to actually use String
+        JavaType stringType = _constructSimple(String.class);
+        return MapType.construct(rawClass, stringType, stringType);
+    }
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
