diff --git a/tmp/6b1d0716-cc84-452a-aa23-0962274032a5_buggy.java b/tmp/8c6f94c2-a8f5-49c3-a080-dd978d288acb_fixed.java
index 01967cc..3d7be83 100644
--- a/tmp/6b1d0716-cc84-452a-aa23-0962274032a5_buggy.java
+++ b/tmp/8c6f94c2-a8f5-49c3-a080-dd978d288acb_fixed.java
@@ -1,35 +1,46 @@
 /**
  * Method called to check if the default type handler should be
  * used for given type.
  * Note: "natural types" (String, Boolean, Integer, Double) will never
  * use typing; that is both due to them being concrete and final,
  * and since actual serializers and deserializers will also ignore any
  * attempts to enforce typing.
  */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
+        // [databind#88] Should not apply to JSON tree models:
+        // Also: never generate type info for TreeNode (JsonNode, etc):
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
         // fall through
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
+        // [databind#88] Should not apply to JSON tree models:
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
         return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
-
+                || (!t.isConcrete());
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
+        return !t.isFinal();
     default:
     //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
+        // [databind#88] Should not apply to JSON tree models:
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
         return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file
