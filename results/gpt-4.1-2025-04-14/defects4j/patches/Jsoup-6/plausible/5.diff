diff --git a/tmp/1b263ddc-5ff6-418a-ac14-8e027c70a531_buggy.java b/tmp/5214877a-48b8-4855-bb8a-61d90930562e_fixed.java
index 99141e0..4087c5f 100644
--- a/tmp/1b263ddc-5ff6-418a-ac14-8e027c70a531_buggy.java
+++ b/tmp/5214877a-48b8-4855-bb8a-61d90930562e_fixed.java
@@ -1,33 +1,37 @@
 static String unescape(String string) {
-        if (!string.contains("&"))
+    if (string == null || !string.contains("&"))
         return string;
 
     Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
-        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
-        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
+    StringBuffer accum = new StringBuffer(string.length());
 
     while (m.find()) {
         int charval = -1;
         String num = m.group(3);
         if (num != null) {
             try {
                 int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                 charval = Integer.valueOf(num, base);
             } catch (NumberFormatException e) {
             } // skip
         } else {
             String name = m.group(1);
             if (full.containsKey(name))
                 charval = full.get(name);
         }
 
-            if (charval != -1 || charval > 0xFFFF) { // out of range
-                String c = Character.toString((char) charval);
-                m.appendReplacement(accum, c);
+        String replacement;
+        // Correction: charval must be > 0 and <= 0xFFFF to be valid
+        if (charval != -1 && charval <= 0xFFFF && charval >= 0) {
+            replacement = Character.toString((char) charval);
+        } else if (charval > 0xFFFF && charval <= 0x10FFFF) { // handle supplementary chars
+            replacement = new String(Character.toChars(charval));
         } else {
-                m.appendReplacement(accum, m.group(0));
+            replacement = m.group(0);
         }
+        // Quote replacement to avoid issues with Matcher.appendReplacement syntax
+        m.appendReplacement(accum, Matcher.quoteReplacement(replacement));
     }
     m.appendTail(accum);
     return accum.toString();
 }
\ No newline at end of file
