diff --git a/tmp/a4535b3f-21f7-4ec9-8fdb-ceee51c422bd_buggy.java b/tmp/d517f1b1-b9b5-4527-bb02-dc8634a96151_fixed.java
index a7d0787..24d1185 100644
--- a/tmp/a4535b3f-21f7-4ec9-8fdb-ceee51c422bd_buggy.java
+++ b/tmp/d517f1b1-b9b5-4527-bb02-dc8634a96151_fixed.java
@@ -1,54 +1,55 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
 public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
 {
     if (PatternOptionBuilder.STRING_VALUE == clazz)
     {
         return (T) str;
     }
     else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
     {
         return (T) createObject(str);
     }
     else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
     {
         return (T) createNumber(str);
     }
     else if (PatternOptionBuilder.DATE_VALUE == clazz)
     {
         return (T) createDate(str);
     }
     else if (PatternOptionBuilder.CLASS_VALUE == clazz)
     {
         return (T) createClass(str);
     }
     else if (PatternOptionBuilder.FILE_VALUE == clazz)
     {
         return (T) createFile(str);
     }
     else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
     {
         return (T) openFile(str);
     }
     else if (PatternOptionBuilder.FILES_VALUE == clazz)
     {
         return (T) createFiles(str);
     }
     else if (PatternOptionBuilder.URL_VALUE == clazz)
     {
         return (T) createURL(str);
     }
+    else if (clazz == Number.class || clazz == Byte.class || clazz == Short.class ||
+             clazz == Integer.class || clazz == Long.class || clazz == Float.class ||
+             clazz == Double.class || clazz == java.math.BigInteger.class || 
+             clazz == java.math.BigDecimal.class)
+    {
+        Object value = createNumber(str);
+        if (!clazz.isInstance(value)) {
+            throw new ParseException("Value \"" + str + "\" cannot be converted to " + clazz.getName());
+        }
+        return (T) value;
+    }
     else
     {
-            return null;
+        throw new ParseException("Value type (" + clazz.getName() + ") not supported: " + str);
     }
 }
\ No newline at end of file
