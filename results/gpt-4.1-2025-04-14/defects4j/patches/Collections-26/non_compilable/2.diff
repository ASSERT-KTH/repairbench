diff --git a/tmp/494b26fa-6359-4552-a4bd-05bcbf6c7d27_buggy.java b/tmp/b93e2cbf-fa45-4919-9a9b-fc5c42704bb1_fixed.java
index a667cbe..aafc237 100644
--- a/tmp/494b26fa-6359-4552-a4bd-05bcbf6c7d27_buggy.java
+++ b/tmp/b93e2cbf-fa45-4919-9a9b-fc5c42704bb1_fixed.java
@@ -1,10 +1,32 @@
     /**
      * Recalculate the hash code after deserialization. The hash code of some
      * keys might have change (hash codes based on the system hash code are
      * only stable for the same process).
      * @return the instance with recalculated hash code
      */
     private Object readResolve() {
-        calculateHashCode(keys);
+        calculateHashCode(this.keys);
+        // fixes: also recalculate hashCode for subclasses if necessary
+        if (getClass() != MultiKey.class) {
+            try {
+                java.lang.reflect.Field field = null;
+                Class<?> c = getClass();
+                // Search for the hashCode field in this class or its superclasses
+                while (c != null) {
+                    try {
+                        field = c.getDeclaredField("hashCode");
+                        break;
+                    } catch (NoSuchFieldException nsfe) {
+                        c = c.getSuperclass();
+                    }
+                }
+                if (field != null) {
+                    field.setAccessible(true);
+                    field.setInt(this, calculateHashCode(this.keys));
+                }
+            } catch (Exception ex) {
+                // ignore, best effort only
+            }
+        }
         return this;
     }
\ No newline at end of file
