diff --git a/tmp/8e148814-3917-4c80-9f6d-30de8858b970_buggy.java b/tmp/1ee6749b-5652-4867-a288-5b4403f7431e_fixed.java
index 1a63a66..d9e7179 100644
--- a/tmp/8e148814-3917-4c80-9f6d-30de8858b970_buggy.java
+++ b/tmp/1ee6749b-5652-4867-a288-5b4403f7431e_fixed.java
@@ -1,21 +1,18 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+    // [databind#1125]: Allow subtyping in face of default implementation,
+    // which may not actually be a subtype due to interface-abstract mismatch.
+    if (!_class.isAssignableFrom(subclass)) {
+        // Instead of throwing, return a SimpleType for subclass, 
+        // without supertype and interfaces, to prevent "UnrecognizedPropertyException"
+        return new SimpleType(subclass, _bindings, null, null,
+                _valueHandler, _typeHandler, _asStatic);
+    }
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
