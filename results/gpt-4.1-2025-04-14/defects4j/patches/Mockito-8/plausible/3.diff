diff --git a/tmp/aaa58d4d-f39c-469e-959b-e09c65d3cff3_buggy.java b/tmp/de9877de-a656-418d-9287-57ec3a69cbb3_fixed.java
index 42b58d0..fcf9122 100644
--- a/tmp/aaa58d4d-f39c-469e-959b-e09c65d3cff3_buggy.java
+++ b/tmp/de9877de-a656-418d-9287-57ec3a69cbb3_fixed.java
@@ -1,19 +1,26 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
+    // Fix: Prevent self-referential type variables from causing infinite recursion
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // Don't map T -> T (self-reference), avoid recursion
+        if (actualTypeArgument instanceof TypeVariable && actualTypeArgument.equals(typeParameter)) {
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
