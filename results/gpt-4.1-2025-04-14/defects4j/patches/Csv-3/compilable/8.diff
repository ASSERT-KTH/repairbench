diff --git a/tmp/803e4cfa-d911-4ff3-9a37-08280b123b7d_buggy.java b/tmp/dce4e54c-d1d2-40bd-b954-7d820118c899_fixed.java
index 1ad070d..92da086 100644
--- a/tmp/803e4cfa-d911-4ff3-9a37-08280b123b7d_buggy.java
+++ b/tmp/dce4e54c-d1d2-40bd-b954-7d820118c899_fixed.java
@@ -1,38 +1,33 @@
     /**
      * Handle an escape sequence.
      * The current character must be the escape character.
      * On return, the next character is available by calling {@link ExtendedBufferedReader#getLastChar()}
      * on the input stream.
      * 
      * @return the unescaped character (as an int) or {@link END_OF_STREAM} if char following the escape is invalid. 
      * @throws IOException if there is a problem reading the stream or the end of stream is detected: 
      * the escape character is not allowed at end of strem
      */
     int readEscape() throws IOException {
         // the escape char has just been read (normally a backslash)
         final int c = in.read();
         switch (c) {
         case 'r':
             return CR;
         case 'n':
             return LF;
         case 't':
             return TAB;
         case 'b':
             return BACKSPACE;
         case 'f':
             return FF;
-        case CR:
-        case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
-            return c;
         case END_OF_STREAM:
             throw new IOException("EOF whilst processing escape sequence");
         default:
-            // Now check for meta-characters
+            // For CSV, only well-known escape sequences are handled above.
+            // For others (like \N, \a, \/) it's just treated as the literal character (like in MySQL, CSV, etc.).
+            // So just return the character after the escape, do not "absorb" the escape, i.e., just return c.
             return c;
-            // indicate unexpected char - available from in.getLastChar()
         }
     }
\ No newline at end of file
