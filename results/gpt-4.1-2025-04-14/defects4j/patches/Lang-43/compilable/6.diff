diff --git a/tmp/217b5d31-d0da-4218-a1d4-9f3e06a0aeb4_buggy.java b/tmp/bc645a9a-86fb-489c-84b1-885261a2d66d_fixed.java
index b6b11b6..23ac1ec 100644
--- a/tmp/217b5d31-d0da-4218-a1d4-9f3e06a0aeb4_buggy.java
+++ b/tmp/bc645a9a-86fb-489c-84b1-885261a2d66d_fixed.java
@@ -1,38 +1,45 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            // Escaped quote at the start: "''"
+            pos.setIndex(pos.getIndex() + 2);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+        for (; pos.getIndex() < pattern.length(); ) {
+            char ch = c[pos.getIndex()];
+            if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, pos.getIndex())) {
+                // Append any text up to this point
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, pos.getIndex() - lastHold);
+                    appendTo.append(QUOTE);
+                }
+                pos.setIndex(pos.getIndex() + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
                 continue;
             }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+            if (ch == QUOTE) {
+                // End of quoted string
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, pos.getIndex() - lastHold);
                 }
+                pos.setIndex(pos.getIndex() + 1);
+                return appendTo;
+            }
+            pos.setIndex(pos.getIndex() + 1);
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
