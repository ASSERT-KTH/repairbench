diff --git a/tmp/9f5141dc-76eb-4740-aa1e-bc20f7e5cf49_buggy.java b/tmp/b1abebbf-aae0-45ba-8bc0-c6e4457899e4_fixed.java
index bada2b6..070bb2b 100644
--- a/tmp/9f5141dc-76eb-4740-aa1e-bc20f7e5cf49_buggy.java
+++ b/tmp/b1abebbf-aae0-45ba-8bc0-c6e4457899e4_fixed.java
@@ -1,16 +1,25 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic != null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            // Handles nested generics like List<Set<String>>
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
+        // Could be a TypeVariable or WildcardType or something else, fallback
+        return Object.class;
     }
     
     return Object.class;
 }
\ No newline at end of file
