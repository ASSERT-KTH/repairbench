diff --git a/tmp/a4c44c7c-ca70-4d4a-803f-5a84de4fffb4_buggy.java b/tmp/ba9783bf-4b80-4f72-873d-6cbfda9c85ae_fixed.java
index bada2b6..cb846a5 100644
--- a/tmp/a4c44c7c-ca70-4d4a-803f-5a84de4fffb4_buggy.java
+++ b/tmp/ba9783bf-4b80-4f72-873d-6cbfda9c85ae_fixed.java
@@ -1,16 +1,26 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
+@SuppressWarnings("rawtypes")
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // Unwrap nested ParameterizedType, e.g. List<Set<String>> should yield Set.class
+        if (actual instanceof ParameterizedType) {
+            Type raw = ((ParameterizedType) actual).getRawType();
+            if (raw instanceof Class) {
+                return (Class) raw;
+            }
+        }
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
         }
-        
+        // Can't resolve, fallback
+        return Object.class;
+    }
     return Object.class;
 }
\ No newline at end of file
