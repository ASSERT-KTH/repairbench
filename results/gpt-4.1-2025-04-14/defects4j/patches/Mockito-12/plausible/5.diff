diff --git a/tmp/be02836f-4344-4550-b044-768039a74e3e_buggy.java b/tmp/8e4c8195-1dd8-47de-a20f-2cf52ecd3cb7_fixed.java
index bada2b6..1490b56 100644
--- a/tmp/be02836f-4344-4550-b044-768039a74e3e_buggy.java
+++ b/tmp/8e4c8195-1dd8-47de-a20f-2cf52ecd3cb7_fixed.java
@@ -1,16 +1,22 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
  *
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            Type raw = ((ParameterizedType) actual).getRawType();
+            if (raw instanceof Class) {
+                return (Class<?>) raw;
+            }
+        }
+        // For other Type kinds, fall through
     }
-        
     return Object.class;
 }
\ No newline at end of file
