diff --git a/tmp/10c13f0e-a454-423c-84db-6d0f1c9f2eba_buggy.java b/tmp/640c57a6-f695-4e03-af22-c2d8a3b4269d_fixed.java
index bada2b6..9b5d566 100644
--- a/tmp/10c13f0e-a454-423c-84db-6d0f1c9f2eba_buggy.java
+++ b/tmp/640c57a6-f695-4e03-af22-c2d8a3b4269d_fixed.java
@@ -1,16 +1,23 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // If actual is a Class, return it directly; if it's a ParameterizedType, return its raw type
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
+        // Fallback if none of above
     }
-        
     return Object.class;
 }
\ No newline at end of file
