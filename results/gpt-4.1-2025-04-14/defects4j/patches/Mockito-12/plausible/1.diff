diff --git a/tmp/34df2d96-5eca-4fb7-bc33-8121dab8e804_buggy.java b/tmp/e4cba90f-c8b5-45e7-8528-b56445c9af97_fixed.java
index bada2b6..a7eca03 100644
--- a/tmp/34df2d96-5eca-4fb7-bc33-8121dab8e804_buggy.java
+++ b/tmp/e4cba90f-c8b5-45e7-8528-b56445c9af97_fixed.java
@@ -1,16 +1,22 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            Type raw = ((ParameterizedType) actual).getRawType();
+            if (raw instanceof Class) {
+                return (Class) raw;
+            }
+        }
+        // Could be TypeVariable or WildcardType or something else; return Object.class
     }
-        
     return Object.class;
 }
\ No newline at end of file
