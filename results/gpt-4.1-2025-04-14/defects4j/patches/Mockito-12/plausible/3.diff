diff --git a/tmp/889992fe-1828-40d3-9c4b-b7d812736974_buggy.java b/tmp/1c938dc5-42f1-4523-b08d-b1bfb1d24e3b_fixed.java
index bada2b6..47b3e1b 100644
--- a/tmp/889992fe-1828-40d3-9c4b-b7d812736974_buggy.java
+++ b/tmp/1c938dc5-42f1-4523-b08d-b1bfb1d24e3b_fixed.java
@@ -1,16 +1,24 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // If we get another ParameterizedType, return its raw type
+        if (actual instanceof ParameterizedType) {
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
         }
-        
+        // for other cases, such as wildcards and type variables, fallback to Object.class
+    }
     return Object.class;
 }
\ No newline at end of file
