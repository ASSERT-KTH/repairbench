diff --git a/tmp/1aea9d31-bff7-47f3-ace9-a94a4f08451e_buggy.java b/tmp/a22b86ea-92da-4fd0-a9e8-565348c48c64_fixed.java
index bada2b6..47b3e1b 100644
--- a/tmp/1aea9d31-bff7-47f3-ace9-a94a4f08451e_buggy.java
+++ b/tmp/a22b86ea-92da-4fd0-a9e8-565348c48c64_fixed.java
@@ -1,16 +1,24 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // If we get another ParameterizedType, return its raw type
+        if (actual instanceof ParameterizedType) {
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
         }
-        
+        // for other cases, such as wildcards and type variables, fallback to Object.class
+    }
     return Object.class;
 }
\ No newline at end of file
