diff --git a/tmp/1853f0e9-3e30-4374-8889-3c3d37112977_buggy.java b/tmp/96a9bf81-8afb-43fe-839a-df303f484953_fixed.java
index 227a4ef..634ed14 100644
--- a/tmp/1853f0e9-3e30-4374-8889-3c3d37112977_buggy.java
+++ b/tmp/96a9bf81-8afb-43fe-839a-df303f484953_fixed.java
@@ -1,48 +1,61 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+        // Get remaining text after the wrap point
+        text = text.substring(pos);
+
+        // If after removing leading whitespace the text is empty, we're done
+        text = text.trim();
+        if (text.length() == 0)
+        {
+            break;
+        }
+
+        text = padding + text;
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
+        }
+        // If pos is less than or equal to padding, forcibly break after width
+        if (pos <= padding.length())
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            // If text is still larger than width, forcibly wrap at width
+            pos = Math.max(padding.length() + 1, Math.min(text.length(), width));
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
+
+    return sb;
 }
\ No newline at end of file
