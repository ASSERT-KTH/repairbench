diff --git a/tmp/b8488b05-7f01-45e8-8c63-5a4c05b8262a_buggy.java b/tmp/fc3e733f-3503-4787-ae22-44182512a1b9_fixed.java
index 227a4ef..2883b6d 100644
--- a/tmp/b8488b05-7f01-45e8-8c63-5a4c05b8262a_buggy.java
+++ b/tmp/fc3e733f-3503-4787-ae22-44182512a1b9_fixed.java
@@ -1,48 +1,64 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+            // Don't add padding if text is already all spaces (or empty)
+            String rest = text.substring(pos).trim();
+            if (rest.length() == 0) {
+                break;
+            }
+            text = padding + rest;
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
-            } else
+            }
+            // If lastPos doesn't advance, forcibly break the line at width
             if (pos == lastPos)
             {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+                // Defensive: forcibly break at width if possible to avoid infinite loop
+                pos = width < text.length() ? width : text.length();
+                sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+                // If we just added all remaining text, we are done
+                if (pos >= text.length()) {
+                    break;
+                }
+                text = text.substring(pos);
+                pos = findWrapPos(text, width, 0);
+                continue;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
+        return sb;
     }
\ No newline at end of file
