diff --git a/tmp/f6fec50d-241a-4989-987d-53eaf57f13ab_buggy.java b/tmp/30bf9c7e-3d3e-4fbf-876e-1b085e28df48_fixed.java
index 800e6e1..c0717f5 100644
--- a/tmp/f6fec50d-241a-4989-987d-53eaf57f13ab_buggy.java
+++ b/tmp/30bf9c7e-3d3e-4fbf-876e-1b085e28df48_fixed.java
@@ -1,32 +1,39 @@
 /**
  * Visit a node in a local scope, and add any local variables or catch
  * parameters into the local symbol table.
  *
  * @param t The node traversal.
  * @param n The node being visited.
  * @param parent The parent of n
  */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
+        // Even if the parent is a NAME, we still need to define the function
+        // to handle namespace stubs and ensure jsdoc is assigned.
+        defineDeclaredFunction(n, parent);
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
+    case Token.GETPROP:
+      // Process namespace property stubs & assignment JSDoc stubs like "goog.foo;"
+      maybeDefineStubForQualifiedName(n, parent);
+      break;
   }
 }
\ No newline at end of file
