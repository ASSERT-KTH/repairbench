diff --git a/tmp/19ebd756-2be9-46f3-b540-c3c26f8cd1aa_buggy.java b/tmp/59f81712-837a-4415-bf61-bcbac304cd69_fixed.java
index 800e6e1..545231f 100644
--- a/tmp/19ebd756-2be9-46f3-b540-c3c26f8cd1aa_buggy.java
+++ b/tmp/59f81712-837a-4415-bf61-bcbac304cd69_fixed.java
@@ -1,32 +1,37 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
-            return;
+        // For a function stub of the form: goog.Foo;
+        // We still want to define it as a variable on its parent,
+        // even though its parent is a NAME within an EXPR_RESULT.
+        defineDeclaredFunction(n, parent);
+        break;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
+    case Token.ASSIGN:
+      // Stub property definition (e.g. this.foo;)
+      // or (goog.foo;)
+      defineAssignedVarOrProperty(n, parent);
+      break;
+    case Token.EXPR_RESULT:
+      // Check for stubs such as JSDoc annotated assignment and property stubs.
+      defineExprStub(n, parent);
+      break;
   }
 }
\ No newline at end of file
