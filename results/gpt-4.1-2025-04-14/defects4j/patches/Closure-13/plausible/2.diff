diff --git a/tmp/ca67eeed-bd16-4385-a05b-e38a838fe971_buggy.java b/tmp/61c80275-63a1-42de-9fdf-3fab5e0f89a1_fixed.java
index b5d94e0..232dd8c 100644
--- a/tmp/ca67eeed-bd16-4385-a05b-e38a838fe971_buggy.java
+++ b/tmp/61c80275-63a1-42de-9fdf-3fab5e0f89a1_fixed.java
@@ -1,26 +1,29 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
       Node c = node.getFirstChild();
+      Node next;
+      // In rare cases, visiting a child node could change its siblings,
+      // so we get the "next" sibling before visiting current node.
       while (c != null) {
+        next = c.getNext();
         traverse(c);
-        Node next = c.getNext();
         c = next;
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
