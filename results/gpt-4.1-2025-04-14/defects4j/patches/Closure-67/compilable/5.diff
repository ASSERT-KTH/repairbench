diff --git a/tmp/749676e3-00f7-4612-97c4-15762f171718_buggy.java b/tmp/e2dcd289-c6b6-45bf-88e7-b50a15f0e667_fixed.java
index 939f49b..9995c2e 100644
--- a/tmp/749676e3-00f7-4612-97c4-15762f171718_buggy.java
+++ b/tmp/e2dcd289-c6b6-45bf-88e7-b50a15f0e667_fixed.java
@@ -1,21 +1,25 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        n.getFirstChild().getType() == Token.GETPROP ||
+        (n.getFirstChild().getType() == Token.GETELEM && n.getFirstChild().getFirstChild().getType() == Token.GETPROP);
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node getProp = n.getFirstChild();
+      Node base = getProp.getFirstChild();
+      Node prop = base != null ? base.getNext() : null;
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      if (base != null && prop != null &&
+          prop.getType() == Token.STRING &&
+          prop.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
