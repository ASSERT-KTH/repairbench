diff --git a/tmp/e506d03a-be9b-4c0f-9c0a-f1bffb2a4490_buggy.java b/tmp/fac13de7-c98e-498f-980c-cb392c21a3cd_fixed.java
index 939f49b..3cb6f15 100644
--- a/tmp/e506d03a-be9b-4c0f-9c0a-f1bffb2a4490_buggy.java
+++ b/tmp/fac13de7-c98e-498f-980c-cb392c21a3cd_fixed.java
@@ -1,21 +1,24 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node grandChild = n.getFirstChild(); // GETPROP node
+      Node objectNode = grandChild.getFirstChild();
+      Node prototypeNode = objectNode != null ? objectNode.getNext() : null;
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      if (prototypeNode != null &&
+          prototypeNode.getType() == Token.STRING &&
+          prototypeNode.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
