diff --git a/tmp/40655a74-872e-47c2-8507-3674f21b8768_buggy.java b/tmp/056a8d86-ebd9-4564-9ab8-f33508112ab2_fixed.java
index 939f49b..16435c9 100644
--- a/tmp/40655a74-872e-47c2-8507-3674f21b8768_buggy.java
+++ b/tmp/056a8d86-ebd9-4564-9ab8-f33508112ab2_fixed.java
@@ -1,21 +1,17 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    Node recv = n.getFirstChild();
+    if (recv != null && recv.getType() == Token.GETPROP) {
+      Node prototypeCheck = recv.getFirstChild().getNext();
+      if (prototypeCheck != null &&
+          prototypeCheck.getType() == Token.STRING &&
+          prototypeCheck.getString().equals("prototype")) {
         return true;
       }
     }
   }
-
   return false;
 }
\ No newline at end of file
