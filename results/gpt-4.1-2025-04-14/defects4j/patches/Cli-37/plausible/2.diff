diff --git a/tmp/0eb21622-b820-4452-9a6a-fb2177a1b06a_buggy.java b/tmp/78411e43-e64d-47a9-942f-2d0c24172007_fixed.java
index a7e6997..866e4f1 100644
--- a/tmp/0eb21622-b820-4452-9a6a-fb2177a1b06a_buggy.java
+++ b/tmp/78411e43-e64d-47a9-942f-2d0c24172007_fixed.java
@@ -1,12 +1,25 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
-
-        // remove leading "-" and "=value"
+    // Support short options such as -S, -SV, -S=V, -SV1=V2, -S1S2, -t1, not --longoption
+    if (token == null || !token.startsWith("-") || token.startsWith("--") || token.length() < 2) {
+        return false;
+    }
+    // Remove leading '-'
+    String withoutDash = token.substring(1);
+    // Split on '=' if present (e.g. -t1=foo)
+    int equalIndex = withoutDash.indexOf('=');
+    String optToken = (equalIndex >= 0) ? withoutDash.substring(0, equalIndex) : withoutDash;
+    // Accept if the whole part after '-' is a defined short option, or its first char
+    if (options.hasShortOption(optToken)) {
+        return true;
+    }
+    if (optToken.length() >= 1 && options.hasShortOption(optToken.substring(0, 1))) {
+        return true;
+    }
+    return false;
 }
\ No newline at end of file
