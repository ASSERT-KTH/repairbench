diff --git a/tmp/c71a1255-031a-45c6-b723-54150ee03755_buggy.java b/tmp/9845eaa7-bae1-42a5-a79f-d87a76996ed0_fixed.java
index a7e6997..2d793aa 100644
--- a/tmp/c71a1255-031a-45c6-b723-54150ee03755_buggy.java
+++ b/tmp/9845eaa7-bae1-42a5-a79f-d87a76996ed0_fixed.java
@@ -1,12 +1,28 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+    if (token == null || !token.startsWith("-") || token.startsWith("--") || token.length() < 2) {
+        return false;
+    }
+    String t = token.substring(1);
+    int eqIndex = t.indexOf('=');
+    String opt = eqIndex >= 0 ? t.substring(0, eqIndex) : t;
 
-        // remove leading "-" and "=value"
+    // Look for the longest match among defined short options
+    // If options.hasShortOption returns true for the whole part after '-', accept it
+    if (options.hasShortOption(opt)) {
+        return true;
+    }
+    // Try to match prefix from left to right, to allow compound short options
+    for (int i = 1; i < opt.length(); ++i) {
+        if (options.hasShortOption(opt.substring(0, i + 1))) {
+            return true;
+        }
+    }
+    return false;
 }
\ No newline at end of file
