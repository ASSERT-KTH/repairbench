diff --git a/tmp/81ba4673-8e7e-4a75-9dea-e588e8c4efe8_buggy.java b/tmp/b03eb7ec-afa1-4717-9d8f-91ba9a4a03cf_fixed.java
index a7e6997..fd4fb5a 100644
--- a/tmp/81ba4673-8e7e-4a75-9dea-e588e8c4efe8_buggy.java
+++ b/tmp/b03eb7ec-afa1-4717-9d8f-91ba9a4a03cf_fixed.java
@@ -1,12 +1,20 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
-
-        // remove leading "-" and "=value"
+        // Short options can be like -S, -SV, -S=V, -SV1=V2, -S1S2, or multi-character ones
+        if (!token.startsWith("-") || token.startsWith("--") || token.length() < 2) {
+            return false;
+        }
+        String opt = token.substring(1);
+        // Find the index of '=' (if any), cut off value part
+        int eqIndex = opt.indexOf('=');
+        if (eqIndex != -1) {
+            opt = opt.substring(0, eqIndex);
+        }
+        // Now check the whole substring as a short option
+        return options.hasShortOption(opt);
     }
\ No newline at end of file
