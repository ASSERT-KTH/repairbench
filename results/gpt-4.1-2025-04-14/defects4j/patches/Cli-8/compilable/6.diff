diff --git a/tmp/b1ec1951-0e64-4b9b-9ce2-cb2d3eda14fe_buggy.java b/tmp/7e43f3a1-3e6d-4422-9647-33592da19905_fixed.java
index 8e93a5e..943df2b 100644
--- a/tmp/b1ec1951-0e64-4b9b-9ce2-cb2d3eda14fe_buggy.java
+++ b/tmp/7e43f3a1-3e6d-4422-9647-33592da19905_fixed.java
@@ -1,43 +1,48 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
+    String[] lines = text.split(defaultNewLine);
+    for (int i = 0; i < lines.length; ++i) {
+        if (i > 0) {
+            sb.append(defaultNewLine);
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
+        String line = lines[i];
 
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        int offset = 0;
+        // first line: no padding
+        boolean firstLine = true;
+        while (line.length() > 0) {
+            int pos = findWrapPos(line, width, firstLine ? 0 : nextLineTabStop);
 
-            if (pos == -1)
-            {
-                sb.append(text);
+            if (pos == -1) {
+                if (!firstLine && nextLineTabStop > 0) {
+                    sb.append(createPadding(nextLineTabStop));
+                }
+                sb.append(rtrim(line));
+                break;
+            }
 
-                return sb;
+            if (!firstLine && nextLineTabStop > 0) {
+                sb.append(createPadding(nextLineTabStop));
             }
+            sb.append(rtrim(line.substring(0, pos)))
+              .append(defaultNewLine);
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            line = line.substring(pos).trim();
+            firstLine = false;
         }
     }
+    return sb;
+}
\ No newline at end of file
