diff --git a/tmp/5c3ca0d1-5269-49b6-8c9c-6e7c4e1d78aa_buggy.java b/tmp/daf8987b-92bb-4abe-a0bd-84af2face4ce_fixed.java
index 229b3e7..01745c3 100644
--- a/tmp/5c3ca0d1-5269-49b6-8c9c-6e7c4e1d78aa_buggy.java
+++ b/tmp/daf8987b-92bb-4abe-a0bd-84af2face4ce_fixed.java
@@ -1,55 +1,56 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
-        }
+    // removed the IllegalStateException to force wrapping one char per line if needed
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
         }
 
+        // This if-block ensures proper wrapping even if nextLineTabStop >= width
         if ((text.length() > width) && (pos == nextLineTabStop - 1))
         {
             pos = width;
         }
 
+        // If pos <= 0, force at least one character per line to avoid infinite loops
+        if (pos <= 0) {
+            pos = 1;
+        }
+
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
