diff --git a/tmp/a075b7f2-64da-4cb8-b27a-1cbd8c364587_buggy.java b/tmp/bf115ebb-56ac-4595-a62e-24f44b04f5c5_fixed.java
index 170b3a0..edb9bd4 100644
--- a/tmp/a075b7f2-64da-4cb8-b27a-1cbd8c364587_buggy.java
+++ b/tmp/bf115ebb-56ac-4595-a62e-24f44b04f5c5_fixed.java
@@ -1,32 +1,7 @@
-    /**
-     * Returns the <a href="http://www.xycoon.com/SumOfSquares.htm">
-     * sum of squared errors</a> (SSE) associated with the regression 
-     * model.
-     * <p>
-     * The sum is computed using the computational formula
-     * <p>
-     * <code>SSE = SYY - (SXY * SXY / SXX)</code>
-     * <p>
-     * where <code>SYY</code> is the sum of the squared deviations of the y
-     * values about their mean, <code>SXX</code> is similarly defined and
-     * <code>SXY</code> is the sum of the products of x and y mean deviations.
-     * <p>
-     * The sums are accumulated using the updating algorithm referenced in 
-     * {@link #addData}.  
-     * <p>
-     * The return value is constrained to be non-negative - i.e., if due to 
-     * rounding errors the computational formula returns a negative result, 
-     * 0 is returned.
-     * <p>
-     * <strong>Preconditions</strong>: <ul>
-     * <li>At least two observations (with at least two different x values)
-     * must have been added before invoking this method. If this method is 
-     * invoked before a model can be estimated, <code>Double,NaN</code> is
-     * returned.
-     * </li></ul>
-     *
-     * @return sum of squared errors associated with the regression model
-     */
 public double getSumSquaredErrors() {
-        return sumYY - sumXY * sumXY / sumXX;
+    if (n < 2 || sumXX == 0.0) {
+        return Double.NaN;
+    }
+    double sse = sumYY - sumXY * sumXY / sumXX;
+    return (sse < 0.0) ? 0.0 : sse;
 }
\ No newline at end of file
