diff --git a/tmp/7386df8d-ac0e-4217-9ea9-c1090178f4bb_buggy.java b/tmp/47028e31-a862-43fb-b6ad-d9a05501efb7_fixed.java
index be2af16..8622403 100644
--- a/tmp/7386df8d-ac0e-4217-9ea9-c1090178f4bb_buggy.java
+++ b/tmp/47028e31-a862-43fb-b6ad-d9a05501efb7_fixed.java
@@ -1,29 +1,54 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Try Julian first if clearly before cutover (by year)
+    if (year < iCutoverYear) {
+        return iJulianChronology.getDateTimeMillis(
+                year, monthOfYear, dayOfMonth,
+                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    }
+
+    // Try Gregorian first
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    try {
+        instant = iGregorianChronology.getDateTimeMillis(
+            year, monthOfYear, dayOfMonth,
             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    } catch (IllegalArgumentException e) {
+        // Maybe it's valid in Julian
+        instant = iJulianChronology.getDateTimeMillis(
+            year, monthOfYear, dayOfMonth,
             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+        return instant;
+    }
+    if (instant < iCutoverMillis) {
+        // Double check if it's valid in Julian
+        long julianInstant;
+        try {
+            julianInstant = iJulianChronology.getDateTimeMillis(
+                year, monthOfYear, dayOfMonth,
+                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // Not valid in Julian, so propagate error from Gregorian
+            throw e;
+        }
+        if (julianInstant < iCutoverMillis) {
+            return julianInstant;
+        } else {
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
