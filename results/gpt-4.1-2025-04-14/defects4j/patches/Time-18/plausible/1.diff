diff --git a/tmp/7990dbd5-b1f3-4c8d-bd74-be459bd07326_buggy.java b/tmp/6f1d6e4a-0a50-46d0-93d1-5284dc83ccbc_fixed.java
index be2af16..635bbd6 100644
--- a/tmp/7990dbd5-b1f3-4c8d-bd74-be459bd07326_buggy.java
+++ b/tmp/6f1d6e4a-0a50-46d0-93d1-5284dc83ccbc_fixed.java
@@ -1,29 +1,29 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Try to compute instant in Julian chronology first (for dates before cutover).
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
     instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        // It's after cutover, need to compute in Gregorian
+        instant = iGregorianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant < iCutoverMillis) {
+            // It's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
