diff --git a/tmp/1aa84882-396c-4799-bd75-cb870571ee9e_buggy.java b/tmp/b0d20bf3-3361-4fa3-808f-c4585022b1f8_fixed.java
index be2af16..fe95b1d 100644
--- a/tmp/1aa84882-396c-4799-bd75-cb870571ee9e_buggy.java
+++ b/tmp/b0d20bf3-3361-4fa3-808f-c4585022b1f8_fixed.java
@@ -1,29 +1,36 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        // Determine which chronology to use based on input date, not computed millis.
+        // If the date is before the cutover year/month/day, use Julian.
+        // Otherwise, use Gregorian.
+
+        // Calculate millis in both chronologies to determine which is correct
+        long instantJulian = iJulianChronology.getDateTimeMillis(
+                year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+
+        if (instantJulian < iCutoverMillis) {
+            return instantJulian;
+        }
+
+        long instantGregorian = iGregorianChronology.getDateTimeMillis(
+                year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+
+        if (instantGregorian >= iCutoverMillis) {
+            return instantGregorian;
+        }
+
+        // Date falls into the cutover gap.
         throw new IllegalArgumentException("Specified date does not exist");
     }
\ No newline at end of file
-        }
-        return instant;
-    }
