diff --git a/tmp/2cad8dd9-2584-4bb7-989b-d0fab98e0e21_buggy.java b/tmp/0654c433-c1b1-4ae3-9a15-7a26a633acf0_fixed.java
index 81a6e8b..b5157c3 100644
--- a/tmp/2cad8dd9-2584-4bb7-989b-d0fab98e0e21_buggy.java
+++ b/tmp/0654c433-c1b1-4ae3-9a15-7a26a633acf0_fixed.java
@@ -1,19 +1,36 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
     if (!token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
 
-        // remove leading "-" and "=value"
+    // handle several concatenated short options (e.g. -ab)
+    String tokenBody;
     int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    if (pos == -1) {
+        tokenBody = token.substring(1);
+    } else {
+        tokenBody = token.substring(1, pos);
+    }
+
+    // If the full body is a known short option, return true.
+    if (options.hasShortOption(tokenBody)) {
+        return true;
+    }
+
+    // If all characters in the body are individual short options, return true.
+    for (int i = 0; i < tokenBody.length(); ++i) {
+        String ch = String.valueOf(tokenBody.charAt(i));
+        if (!options.hasShortOption(ch)) {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
