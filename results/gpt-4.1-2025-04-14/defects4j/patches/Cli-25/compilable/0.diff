diff --git a/tmp/b086a38d-db1a-44c5-978a-d91429b79c31_buggy.java b/tmp/f27393d9-03f7-4fc2-967a-62190982bc85_fixed.java
index 875b31b..37e1d0d 100644
--- a/tmp/b086a38d-db1a-44c5-978a-d91429b79c31_buggy.java
+++ b/tmp/f27393d9-03f7-4fc2-967a-62190982bc85_fixed.java
@@ -1,54 +1,32 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
+    // If indent would exceed width, do not indent wrapped lines
+    final String padding = (nextLineTabStop >= width) ? "" : createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
         }
 
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
+        // Remove this special-casing of pos==nextLineTabStop-1, as it's unnecessary and causes the error.
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
