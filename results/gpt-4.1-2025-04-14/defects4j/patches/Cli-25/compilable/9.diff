diff --git a/tmp/aabcd854-5dd1-411b-afa9-5bd127dd3a69_buggy.java b/tmp/0f8a4692-14f9-4750-9d46-1573cb4ccf60_fixed.java
index 875b31b..bc7bb98 100644
--- a/tmp/aabcd854-5dd1-411b-afa9-5bd127dd3a69_buggy.java
+++ b/tmp/0f8a4692-14f9-4750-9d46-1573cb4ccf60_fixed.java
@@ -1,54 +1,35 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            text = padding + text.substring(pos).trim();
+        // remove the leading spaces for subsequent lines only if the original text is longer than the width
+        text = padding + rtrim(text.substring(pos));
+
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
 
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
+        // removed the check that reset pos to width, 
+        // because for chunking long lines (e.g., a class name), we want to add padding at each step, 
+        // not only for the wrapped description lines.        
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
