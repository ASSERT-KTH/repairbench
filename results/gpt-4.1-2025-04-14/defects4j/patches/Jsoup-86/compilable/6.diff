diff --git a/tmp/ba4eacb3-a92c-4449-9c91-5dccccf1ec01_buggy.java b/tmp/7d5ef00f-cfaf-4b75-b816-abdc9f88e482_fixed.java
index b8e7fdb..3200b35 100644
--- a/tmp/ba4eacb3-a92c-4449-9c91-5dccccf1ec01_buggy.java
+++ b/tmp/7d5ef00f-cfaf-4b75-b816-abdc9f88e482_fixed.java
@@ -1,15 +1,35 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
+    // Safely try to parse data as an XML declaration (e.g., "!DOCTYPE html" or "?xml version='1.0'?" etc.)
+    // XML declarations start with ? and DOCTYPE start with !
+    // Must have at least <?...?> or <!DOCTYPE ...>
+    if (data == null || data.length() < 3) {
+        return null;
+    }
+    char first = data.charAt(0);
+    char last = data.charAt(data.length() - 1);
+    if ((first != '!' && first != '?') || (last != '?' && last != '>')) {
+        return null;
+    }
+    // Remove the comment markers if applicable
+    String declData = data.substring(1, data.length() - 1).trim();
+    // Reconstruct a node around the extracted data
+    Document doc;
+    try {
+        doc = Jsoup.parse("<" + declData + ">", baseUri(), Parser.xmlParser());
+    } catch (Exception e) {
+        return null;
+    }
     XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
-            decl.attributes().addAll(el.attributes());
+    for (Node node : doc.childNodes()) {
+        if (node instanceof XmlDeclaration) {
+            decl = (XmlDeclaration) node;
+            break;
+        }
     }
     return decl;
 }
\ No newline at end of file
