diff --git a/tmp/1d8269ad-c249-46f4-8a1d-2fd8f0b91fbd_buggy.java b/tmp/f50f76e7-2b99-4930-b6a9-93472a3319a2_fixed.java
index 7fb120e..06bdc02 100644
--- a/tmp/1d8269ad-c249-46f4-8a1d-2fd8f0b91fbd_buggy.java
+++ b/tmp/f50f76e7-2b99-4930-b6a9-93472a3319a2_fixed.java
@@ -1,16 +1,21 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased/lowercased according to original case.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        if ((charset.startsWith("\"") && charset.endsWith("\"")) || (charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1);
+        }
+        // Certain charsets like "utf-8" are usually returned in lower case.
+        if (charset.equalsIgnoreCase("utf-8"))
+            return "utf-8";
         return charset;
     }
     return null;
 }
\ No newline at end of file
