diff --git a/tmp/e23cb656-fa09-4e28-a1f5-3ce372ac8795_buggy.java b/tmp/3aa7b256-9eed-4ad6-9b65-754f22a819b9_fixed.java
index 7fb120e..91dbfad 100644
--- a/tmp/e23cb656-fa09-4e28-a1f5-3ce372ac8795_buggy.java
+++ b/tmp/3aa7b256-9eed-4ad6-9b65-754f22a819b9_fixed.java
@@ -1,16 +1,27 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return "EUC-JP", or null if not found. Style: If the charset is ASCII case-insensitive "utf-8", returns "utf-8", otherwise returns canonical form.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
-            return charset;
+        // Remove quotes, if any
+        if ((charset.length() > 1 && charset.startsWith("\"") && charset.endsWith("\"")) ||
+            (charset.length() > 1 && charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        if (charset.equalsIgnoreCase("utf-8"))
+            return "utf-8";
+        try {
+            // Validate and get canonical form
+            return java.nio.charset.Charset.forName(charset).name();
+        } catch (Exception e) {
+            return null;
+        }
     }
     return null;
 }
\ No newline at end of file
