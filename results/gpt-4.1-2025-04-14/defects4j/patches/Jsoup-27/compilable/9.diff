diff --git a/tmp/0f9b07a9-6143-4340-89c2-525e1589f692_buggy.java b/tmp/c41d181c-bb3c-48a8-8418-437a542a0ec4_fixed.java
index 7fb120e..b74e726 100644
--- a/tmp/0f9b07a9-6143-4340-89c2-525e1589f692_buggy.java
+++ b/tmp/c41d181c-bb3c-48a8-8418-437a542a0ec4_fixed.java
@@ -1,16 +1,21 @@
     /**
      * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
      * will kick in.)
      * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+     * @return "EUC-JP", or null if not found. Returned as supplied if not all upper or lower case; otherwise, lowercase.
      */
     static String getCharsetFromContentType(String contentType) {
         if (contentType == null) return null;
         Matcher m = charsetPattern.matcher(contentType);
         if (m.find()) {
             String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+            // Remove quotes if present
+            if (charset.length() > 1 && charset.startsWith("\"") && charset.endsWith("\""))
+                charset = charset.substring(1, charset.length() - 1);
+            // Normalize: if all-lowercase, return as lowercase (for 'utf-8'), else as matched (e.g., 'UTF-8', 'ISO-8859-1')
+            if (charset.equals(charset.toLowerCase(Locale.ENGLISH)))
+                return charset;
             return charset;
         }
         return null;
     }
\ No newline at end of file
