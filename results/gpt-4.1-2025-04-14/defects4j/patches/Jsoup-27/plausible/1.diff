diff --git a/tmp/f399f453-46f1-4720-8843-397c70f31ead_buggy.java b/tmp/00f81101-6154-4dc5-acb1-68d353c540f2_fixed.java
index 7fb120e..23b3a79 100644
--- a/tmp/f399f453-46f1-4720-8843-397c70f31ead_buggy.java
+++ b/tmp/00f81101-6154-4dc5-acb1-68d353c540f2_fixed.java
@@ -1,16 +1,26 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return "EUC-JP", or null if not found. Charset is trimmed. Casing is preserved as supplied.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // Remove surrounding quotes if present
+        if (charset.length() > 1 && (charset.startsWith("\"") && charset.endsWith("\"") ||
+                                     charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        // Only return supported charsets
+        try {
+            if (Charset.isSupported(charset))
                 return charset;
+        } catch (Exception e) {
+            // fall through to return null
+        }
     }
     return null;
 }
\ No newline at end of file
