diff --git a/tmp/f8d8a20f-f3a4-41fb-b906-4d840aaedf42_buggy.java b/tmp/bb2e4c19-73b2-4f13-9e15-11bd110cd287_fixed.java
index 07b0792..5cdf09e 100644
--- a/tmp/f8d8a20f-f3a4-41fb-b906-4d840aaedf42_buggy.java
+++ b/tmp/bb2e4c19-73b2-4f13-9e15-11bd110cd287_fixed.java
@@ -1,22 +1,38 @@
 /**
  * @return Whether the variable is only assigned a value once for its
  *     lifetime.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
-      // Make sure this assignment is not in a loop.
+  // Make sure this assignment is not in a loop or a function that can be called multiple times.
   for (BasicBlock block = ref.getBasicBlock();
        block != null; block = block.getParent()) {
+    if (block.isLoop) {
+      return false;
+    }
     if (block.isFunction) {
+      // If the assignment is in a function, only allow if the variable is declared in the same scope,
+      // i.e. not a global variable modified within a function that can be called multiple times.
+      // So if the variable is not declared in the block corresponding to the function, it can be assigned multiple times.
+      if (!declaredInBlock(block)) {
+        return false;
+      }
       break;
-        } else if (block.isLoop) {
-          return false;
     }
   }
 
   return true;
 }
+
+/**
+ * Helper method to check if the variable is declared in the given block.
+ */
+private boolean declaredInBlock(BasicBlock block) {
+  // You may need to adapt this, depending on how declaration info is stored.
+  // This is a stub assuming a 'declaration' field for this variable.
+  return this.declaration != null && this.declaration.getBasicBlock() == block;
+}
\ No newline at end of file
