diff --git a/tmp/55a53ac2-4d27-4823-8b8f-1493166eb909_buggy.java b/tmp/ffa96bea-b0cd-4c60-bc7f-69242d01075a_fixed.java
index 1530b34..cf3713d 100644
--- a/tmp/55a53ac2-4d27-4823-8b8f-1493166eb909_buggy.java
+++ b/tmp/ffa96bea-b0cd-4c60-bc7f-69242d01075a_fixed.java
@@ -1,23 +1,33 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
+        // If the AST parameter already has a declared type on the node (from JSDoc),
+        // then don't override it with jsDocParameter's type. Use that declared type.
+        JSType typeToDeclare = null;
+        if (astParameter.getJSType() != null) {
+          typeToDeclare = astParameter.getJSType();
+        } else if (jsDocParameter != null) {
+          typeToDeclare = jsDocParameter.getJSType();
+        }
+        defineSlot(astParameter, functionNode, typeToDeclare, true);
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
           jsDocParameter = jsDocParameter.getNext();
+        }
+      }
     } else {
-              defineSlot(astParameter, functionNode, null, true);
-            }
+      // This case covers no jsdoc param types at all, declare with what's on the node (from local jsdoc)
+      for (Node astParameter : astParameters.children()) {
+        defineSlot(astParameter, functionNode, astParameter.getJSType(), true);
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
