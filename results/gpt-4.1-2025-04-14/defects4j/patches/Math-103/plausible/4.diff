diff --git a/tmp/46188087-c3cd-422f-ba1a-b449f79a5e94_buggy.java b/tmp/d0f6a576-d022-487a-828e-b6a64ae40dcb_fixed.java
index 6cfa79b..cab2b56 100644
--- a/tmp/46188087-c3cd-422f-ba1a-b449f79a5e94_buggy.java
+++ b/tmp/d0f6a576-d022-487a-828e-b6a64ae40dcb_fixed.java
@@ -1,12 +1,12 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double dev = x - mean;
+    double sd = standardDeviation;
+    // Handle extreme values to avoid convergence issues (MATH-167)
+    if (dev < -20 * sd) {
+        return 0.0;
+    }
+    if (dev > 20 * sd) {
+        return 1.0;
+    }
+    return 0.5 * (1.0 + Erf.erf(dev / (sd * Math.sqrt(2.0))));
 }
\ No newline at end of file
