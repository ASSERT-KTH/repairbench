diff --git a/tmp/7e371ff6-5317-4b52-b969-17367860973d_buggy.java b/tmp/9528b527-9052-4c4c-a324-06b63fde5f57_fixed.java
index 6cfa79b..d41525e 100644
--- a/tmp/7e371ff6-5317-4b52-b969-17367860973d_buggy.java
+++ b/tmp/9528b527-9052-4c4c-a324-06b63fde5f57_fixed.java
@@ -1,12 +1,15 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double dev = x - mean;
+    double sd = standardDeviation;
+    try {
+        return 0.5 * (1.0 + Erf.erf(dev / (sd * Math.sqrt(2.0))));
+    } catch (MaxIterationsExceededException ex) {
+        // x is too far from mean for Erf to converge,
+        // so fallback to 0 or 1 depending on side of mean
+        if (dev < 0) {
+            return 0.0;
+        } else {
+            return 1.0;
+        }
+    }
 }
\ No newline at end of file
