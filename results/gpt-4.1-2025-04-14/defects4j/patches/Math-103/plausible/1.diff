diff --git a/tmp/a148eddf-30fa-4a98-aacf-5d4fd4227a74_buggy.java b/tmp/b3a840f5-4779-48cf-bff5-ad31dadf2102_fixed.java
index 6cfa79b..343f27d 100644
--- a/tmp/a148eddf-30fa-4a98-aacf-5d4fd4227a74_buggy.java
+++ b/tmp/b3a840f5-4779-48cf-bff5-ad31dadf2102_fixed.java
@@ -1,12 +1,16 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    // If x is more than 20 standard deviations from mean, return 0.0 or 1.0 directly
+    double dev = (x - mean) / standardDeviation;
+    if (dev < -20.0) {
+        return 0.0;
+    }
+    if (dev > 20.0) {
+        return 1.0;
+    }
+    try {
+        return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));
+    } catch (MaxIterationsExceededException e) {
+        // Defensive: If somehow exception happens anyway, top-code appropriately
+        return dev < 0 ? 0.0 : 1.0;
+    }
 }
\ No newline at end of file
