diff --git a/tmp/1b43006b-ca4a-45d7-87c4-69be2d2d14e6_buggy.java b/tmp/407874fc-6d47-4604-b69e-36f0cbb46f9e_fixed.java
index 03b03d7..e834172 100644
--- a/tmp/1b43006b-ca4a-45d7-87c4-69be2d2d14e6_buggy.java
+++ b/tmp/407874fc-6d47-4604-b69e-36f0cbb46f9e_fixed.java
@@ -1,25 +1,31 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
+        // Evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
         
-        // work out range of instants that have duplicate local times
+        // Work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // Find the two candidate UTC instants for this local time in this zone
+        long instant1 = convertLocalToUTC(local, false, instantBefore);
+        long instant2 = convertLocalToUTC(local, false, instantAfter);
+
+        // Pick one based on earlierOrLater and the actual instant
+        if (earlierOrLater) {
+            // prefer the *later* offset
+            return (instant1 > instant2) ? instant1 : instant2;
+        } else {
+            // prefer the *earlier* offset
+            return (instant1 < instant2) ? instant1 : instant2;
+        }
     }
\ No newline at end of file
