diff --git a/tmp/efbfdf41-f518-4797-8162-1ed9f8059521_buggy.java b/tmp/87884228-dae3-4ec4-ae0d-3fd6ad63a1a2_fixed.java
index 03b03d7..d533348 100644
--- a/tmp/efbfdf41-f518-4797-8162-1ed9f8059521_buggy.java
+++ b/tmp/87884228-dae3-4ec4-ae0d-3fd6ad63a1a2_fixed.java
@@ -1,25 +1,50 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
     // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+    long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;
+    long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;
+    long offsetBefore = getOffset(instantBefore);
+    long offsetAfter = getOffset(instantAfter);
+    if (offsetBefore == offsetAfter) {
+        return instant;  // not an overlap
     }
 
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    // calculate the local time for the given instant
+    long localInstant = instant + getOffset(instant);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // find the two possible offsets at this local time
+    long earlierOffset;
+    long laterOffset;
+    if (offsetAfter < offsetBefore) {
+        earlierOffset = offsetAfter;
+        laterOffset = offsetBefore;
+    } else {
+        earlierOffset = offsetBefore;
+        laterOffset = offsetAfter;
+    }
+
+    // Figure out which offset applies at this local time
+    long earlierInstant = localInstant - earlierOffset;
+    long laterInstant = localInstant - laterOffset;
+
+    // Return the correct instant according to the flag
+    if (earlierOrLater) {
+        // Later offset
+        if (laterInstant == instant) {
+            return instant;
+        }
+        return laterInstant;
+    } else {
+        // Earlier offset
+        if (earlierInstant == instant) {
+            return instant;
+        }
+        return earlierInstant;
+    }
 }
\ No newline at end of file
