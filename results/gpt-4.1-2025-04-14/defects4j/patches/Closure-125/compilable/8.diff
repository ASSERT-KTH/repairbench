diff --git a/tmp/4524b655-4e75-4bc5-ae98-dd93de2550ed_buggy.java b/tmp/d9bdfac4-85a3-4cfa-ab57-7a387adc9ed9_fixed.java
index 7e43c1c..77a34c7 100644
--- a/tmp/4524b655-4e75-4bc5-ae98-dd93de2550ed_buggy.java
+++ b/tmp/d9bdfac4-85a3-4cfa-ab57-7a387adc9ed9_fixed.java
@@ -1,19 +1,25 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
-    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
+
+  // Fix: Handle the case where restrictByNotNullOrUndefined() returns an empty union type,
+  // which can happen for interfaces, so also check if original type is a function type.
+  if (type.isConstructor() || type.isEmptyType() || type.isUnknownType() || getJSType(constructor).isFunctionType()) {
     FunctionType fnType = type.toMaybeFunctionType();
+    if (fnType == null) {
+      fnType = getJSType(constructor).toMaybeFunctionType();
+    }
     if (fnType != null) {
       visitParameterList(t, n, fnType);
       ensureTyped(t, n, fnType.getInstanceType());
     } else {
       ensureTyped(t, n);
     }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
