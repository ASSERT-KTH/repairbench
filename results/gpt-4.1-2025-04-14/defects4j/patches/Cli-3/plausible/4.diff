diff --git a/tmp/1e1238e1-b6c9-4212-aab5-7207f0a6b1ba_buggy.java b/tmp/18224b05-0b22-4b34-9bb8-5058405cf1bb_fixed.java
index d9b400d..394c09c 100644
--- a/tmp/1e1238e1-b6c9-4212-aab5-7207f0a6b1ba_buggy.java
+++ b/tmp/18224b05-0b22-4b34-9bb8-5058405cf1bb_fixed.java
@@ -1,21 +1,28 @@
 /**
  * <p>Create a number from a String. If a . is present, it creates a 
  *    Double, otherwise a Long. </p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
 public static Number createNumber(String str)
 {
     try
     {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        // To match pattern (and tests) which expect Double (not Float) if decimal is present
+        if (str != null && str.indexOf('.') != -1) {
+            return new Double(str);
+        } else if (str != null) {
+            return new Long(str);
+        } else {
+            return null;
+        }
     }
     catch (NumberFormatException nfe)
     {
         System.err.println(nfe.getMessage());
     }
 
     return null;
 }
\ No newline at end of file
