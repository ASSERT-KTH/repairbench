diff --git a/tmp/a8b2e948-8f6a-4438-b388-0badc4fc859a_buggy.java b/tmp/8bf49c67-3235-4949-bfce-3f291b08b134_fixed.java
index d9b400d..be934fb 100644
--- a/tmp/a8b2e948-8f6a-4438-b388-0badc4fc859a_buggy.java
+++ b/tmp/8bf49c67-3235-4949-bfce-3f291b08b134_fixed.java
@@ -1,21 +1,35 @@
 /**
  * <p>Create a number from a String. If a . is present, it creates a 
  *    Double, otherwise a Long. </p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
 public static Number createNumber(String str)
 {
     try
     {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        Number num = org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        // If it's a Float, return a Double (to match what PatternOptionBuilder expects)
+        if (num instanceof Float) {
+            return Double.valueOf(num.doubleValue());
+        }
+        // If it's a BigDecimal, and it fits in Double, return Double
+        if (num instanceof java.math.BigDecimal) {
+            try {
+                double d = ((java.math.BigDecimal) num).doubleValue();
+                if (Double.valueOf(d).equals(num)) {
+                    return Double.valueOf(d);
+                }
+            } catch (NumberFormatException ignore) {}
+        }
+        return num;
     }
     catch (NumberFormatException nfe)
     {
         System.err.println(nfe.getMessage());
     }
 
     return null;
 }
\ No newline at end of file
