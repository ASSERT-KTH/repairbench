diff --git a/tmp/251f3057-e71e-4645-985e-685b839942d5_buggy.java b/tmp/91d30990-3c51-43d0-9ec4-9b335a0ee9a6_fixed.java
index 10616db..78ec32d 100644
--- a/tmp/251f3057-e71e-4645-985e-685b839942d5_buggy.java
+++ b/tmp/91d30990-3c51-43d0-9ec4-9b335a0ee9a6_fixed.java
@@ -1,19 +1,38 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
+        // We must use a leap-safe base instant to allow for e.g. adding months to MonthDay(2, 29)
+        // Use 2004-06-09T00:00Z as base, since it is a leap year and non-edge month/day
+        // This is consistent with Joda-Time MonthDay behavior
+        // If MonthDay instance, we know how to map fields: assume month=0, day=1
+        long baseInstant = iChronology.getDateTimeMillis(2004, 6, 9, 0, 0, 0, 0); // leap year, safe day
+        // set only month and day from values/partial
         for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+            DateTimeFieldType type = partial.getFieldType(i);
+            if (type == DateTimeFieldType.monthOfYear() || type == DateTimeFieldType.dayOfMonth()) {
+                baseInstant = type.getField(iChronology).set(baseInstant, values[i]);
             }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        }
+        baseInstant = partial.getFieldType(fieldIndex).getField(iChronology).add(baseInstant, valueToAdd);
+
+        // After the add, extract only month and day back (ignore year)
+        int[] result = new int[partial.size()];
+        for (int i = 0, isize = partial.size(); i < isize; i++) {
+            DateTimeFieldType type = partial.getFieldType(i);
+            if (type == DateTimeFieldType.monthOfYear() || type == DateTimeFieldType.dayOfMonth()) {
+                result[i] = type.getField(iChronology).get(baseInstant);
+            } else {
+                result[i] = values[i];
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
