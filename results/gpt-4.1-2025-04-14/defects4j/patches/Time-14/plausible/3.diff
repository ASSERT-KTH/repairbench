diff --git a/tmp/4d78beb5-ea64-46ca-9ddf-0f5373d8441b_buggy.java b/tmp/b50e1d94-eff7-4fc4-9184-9838e7bfbfa5_fixed.java
index 10616db..492292b 100644
--- a/tmp/4d78beb5-ea64-46ca-9ddf-0f5373d8441b_buggy.java
+++ b/tmp/b50e1d94-eff7-4fc4-9184-9838e7bfbfa5_fixed.java
@@ -1,19 +1,22 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
+        // Use year 2000 so that leap year edge cases (e.g., February 29) are handled correctly
+        long instant = iChronology.getDateTimeMillis(2000, 1, 1, 0, 0, 0, 0);
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        // Extract partial back, but ignore the year field
+        int[] newValues = iChronology.get(partial, instant);
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
