diff --git a/tmp/f9912e17-6e3a-4eeb-910a-dba0994ae995_buggy.java b/tmp/06853279-3deb-431a-8257-bf52b966a8d1_fixed.java
index 57f69c5..6458178 100644
--- a/tmp/f9912e17-6e3a-4eeb-910a-dba0994ae995_buggy.java
+++ b/tmp/06853279-3deb-431a-8257-bf52b966a8d1_fixed.java
@@ -1,12 +1,25 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is exactly a do-while or function *statement*,
+ * possibly labeled, and not part of a block with several children.
+ *
+ * If n is a LABEL, then only if its child is a FUNCTION or DO node,
+ * and that child is the only child for the label, do we consider it true.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
+    if (n.getType() == Token.LABEL) {
+        // Unwind single label chain.
+        Node child = n.getFirstChild();
+        // If the label contains a block, skip through single-child blocks.
+        while (child.getType() == Token.BLOCK && child.hasOneChild()) {
+            child = child.getFirstChild();
+        }
+        return (child.getType() == Token.FUNCTION || child.getType() == Token.DO)
+            && child.getNext() == null;
+    } else if (n.getType() == Token.BLOCK && n.hasOneChild()) {
+        // If the only statement in the block is exactly a FUNCTION or DO.
+        Node only = n.getFirstChild();
+        return isOneExactlyFunctionOrDo(only);
+    } else {
         return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
     }
+}
\ No newline at end of file
