diff --git a/tmp/9862e480-358f-4cf8-a8f0-7262c79b100a_buggy.java b/tmp/661d61dd-6efb-4c13-a9bf-f654dd2a92a0_fixed.java
index 57f69c5..ee13c66 100644
--- a/tmp/9862e480-358f-4cf8-a8f0-7262c79b100a_buggy.java
+++ b/tmp/661d61dd-6efb-4c13-a9bf-f654dd2a92a0_fixed.java
@@ -1,12 +1,20 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a BLOCK with exactly one child,
+ * and that child is a DO or FUNCTION (with or without labels).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // The intent is to wrap a DO or FUNCTION (with or without labels) in a block,
+    // so we must check if this is a BLOCK with exactly one child of those types.
+    if (n.getType() == Token.BLOCK && n.hasOneChild()) {
+        Node child = n.getFirstChild();
+        // Unwrap any labels
+        while (child.getType() == Token.LABEL) {
+            if (!child.hasOneChild()) {
+                return false;
+            }
+            child = child.getFirstChild();
+        }
+        return child.getType() == Token.FUNCTION || child.getType() == Token.DO;
+    }
+    return false;
 }
\ No newline at end of file
