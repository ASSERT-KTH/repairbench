diff --git a/tmp/231673a8-348d-49b5-8893-f3cd882b25ce_buggy.java b/tmp/c05062a0-34ef-431e-83d9-bd00af8abf13_fixed.java
index 57f69c5..2fafe12 100644
--- a/tmp/231673a8-348d-49b5-8893-f3cd882b25ce_buggy.java
+++ b/tmp/c05062a0-34ef-431e-83d9-bd00af8abf13_fixed.java
@@ -1,12 +1,24 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a single unlabeled FUNCTION or DO, or a LABEL whose only child is a FUNCTION or DO.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    if (n == null) {
+        return false;
+    }
+    // Either a FUNCTION or DO expression.
+    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+        return true;
+    }
+    // Or, a label (possibly nested many times) wrapping exactly one FUNCTION or DO node as its child.
+    if (n.getType() == Token.LABEL) {
+        Node child = n.getFirstChild();
+        // Unwrap nested labels.
+        while (child != null && child.getType() == Token.LABEL) {
+            child = child.getFirstChild();
+        }
+        return child != null &&
+            (child.getType() == Token.FUNCTION || child.getType() == Token.DO) &&
+            child.getNext() == null; // Only one child
+    }
+    return false;
 }
\ No newline at end of file
