diff --git a/tmp/cc2c03f2-7a01-46e9-b712-d673658b2bff_buggy.java b/tmp/fa325961-7e9f-472f-bb4e-b8c9522a596d_fixed.java
index 57f69c5..ebb7f24 100644
--- a/tmp/cc2c03f2-7a01-46e9-b712-d673658b2bff_buggy.java
+++ b/tmp/fa325961-7e9f-472f-bb4e-b8c9522a596d_fixed.java
@@ -1,12 +1,15 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is EXACTLY a DO or FUNCTION, possibly wrapped in a label.
+ *
+ * For labels, checks that its child is a DO or FUNCTION (and not more), so that
+ * we wrap "A:do foo();while(y)" and "A:function f(){}" but not "A:{...}" or "A:stmt;stmt".
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // Handle labels that point directly to a DO or FUNCTION statement.
+    if (n.getType() == Token.LABEL) {
+        Node labeled = n.getLastChild();
+        // The label must have a single child that is FUNCTION or DO (not a BLOCK).
+        return labeled != null && (labeled.getType() == Token.FUNCTION || labeled.getType() == Token.DO);
+    }
+    return n.getType() == Token.FUNCTION || n.getType() == Token.DO;
 }
\ No newline at end of file
