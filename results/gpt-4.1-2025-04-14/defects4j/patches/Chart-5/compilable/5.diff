diff --git a/tmp/3b352d44-a4e8-4e05-ac9c-cac292d2e733_buggy.java b/tmp/b23486eb-d4fe-41df-b7d4-3fa6ec87ee65_fixed.java
index fd8eae5..961dc9a 100644
--- a/tmp/3b352d44-a4e8-4e05-ac9c-cac292d2e733_buggy.java
+++ b/tmp/b23486eb-d4fe-41df-b7d4-3fa6ec87ee65_fixed.java
@@ -1,47 +1,51 @@
 /**
  * Adds or updates an item in the series and sends a
  * {@link SeriesChangeEvent} to all registered listeners.
  *
  * @param x  the x-value (<code>null</code> not permitted).
  * @param y  the y-value (<code>null</code> permitted).
  *
  * @return A copy of the overwritten data item, or <code>null</code> if no
  *         item was overwritten.
  */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
 
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
     int index = indexOf(x);
     if (index >= 0 && !this.allowDuplicateXValues) {
         XYDataItem existing = (XYDataItem) this.data.get(index);
         try {
             overwritten = (XYDataItem) existing.clone();
         }
         catch (CloneNotSupportedException e) {
             throw new SeriesException("Couldn't clone XYDataItem!");
         }
         existing.setY(y);
     }
     else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+        // Fix: Don't use insertion index from indexOf when allowDuplicateXValues == true.
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            int insertionIndex;
+            if (this.allowDuplicateXValues) {
+                // Always find the insertion point to keep x-values sorted, duplicates allowed
+                insertionIndex = -(Collections.binarySearch(this.data, new XYDataItem(x, y)) + 1);
+            } else {
+                // Use result of indexOf (negative if not found)
+                insertionIndex = (index >= 0) ? index : (-index - 1);
+            }
+            this.data.add(insertionIndex, new XYDataItem(x, y));
         }
         else {
             this.data.add(new XYDataItem(x, y));
         }
         // check if this addition will exceed the maximum item count...
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file
