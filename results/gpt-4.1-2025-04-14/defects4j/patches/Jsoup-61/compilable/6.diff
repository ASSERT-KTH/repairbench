diff --git a/tmp/f2b2e669-a97e-4941-b604-07b62a11d05e_buggy.java b/tmp/bfae3209-55fd-4e67-9a57-1a68a56745bd_fixed.java
index 139579d..42716b3 100644
--- a/tmp/f2b2e669-a97e-4941-b604-07b62a11d05e_buggy.java
+++ b/tmp/bfae3209-55fd-4e67-9a57-1a68a56745bd_fixed.java
@@ -1,43 +1,28 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
+    if (classAttr == null)
+        return false;
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
     int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+    while (start < len) {
+        // skip leading whitespaces
+        while (start < len && Character.isWhitespace(classAttr.charAt(start))) start++;
+        if (start == len) break;
+        int end = start + 1;
+        while (end < len && !Character.isWhitespace(classAttr.charAt(end))) end++;
+        int currLen = end - start;
+        if (currLen == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
             return true;
         }
-                    inClass = false;
-                }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
+        start = end;
     }
 
     return false;
 }
\ No newline at end of file
