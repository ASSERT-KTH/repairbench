diff --git a/tmp/f82d8b36-e4b9-42dc-9982-8619911112e7_buggy.java b/tmp/db03ec4d-5c15-45ed-9cda-be7ce9c1d551_fixed.java
index ec6c9ee..017a5c9 100644
--- a/tmp/f82d8b36-e4b9-42dc-9982-8619911112e7_buggy.java
+++ b/tmp/db03ec4d-5c15-45ed-9cda-be7ce9c1d551_fixed.java
@@ -1,21 +1,32 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+            // Fix: Compose with the remaining part, not just use the separator as both printer/parser
+            return new PeriodFormatter(sep, sep).withFieldsFormatter(f);
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
+
+// The trick is we need to compose the separator and the rest, not just return the separator as printer+parser.
+// So, PeriodFormatter needs to expose a way to set or chain the base formatter (fields) for the PeriodFormatter built for Separator.
+// In Joda-Time, the real PeriodFormatterBuilder code does this via an internal Composite type; here, assuming withFieldsFormatter is a utility to merge/separate the separator and the inner fields based formatter.
+// If you must keep this as only a function patch, then, in the buggy place, replace `return new PeriodFormatter(sep, sep);` with:
+//      Object[] comp = new Object[] { sep, sep };
+//      Object[] rest = createComposite(elementPairs.subList(2, size));
+//      return new PeriodFormatter(new Composite((PeriodPrinter)comp[0], (PeriodPrinter)rest[0]),
+//                                new Composite((PeriodParser)comp[1], (PeriodParser)rest[1]));
+// but the key is: you must *combine* the separator and the inner part, not just return the separator!
\ No newline at end of file
