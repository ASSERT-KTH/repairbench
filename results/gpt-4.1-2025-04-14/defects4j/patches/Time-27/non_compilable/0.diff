diff --git a/tmp/8321bb87-2b50-49aa-96eb-48deca2ef0b5_buggy.java b/tmp/92181b77-56ff-47bc-a91b-4534682d1b50_fixed.java
index ec6c9ee..b7a9286 100644
--- a/tmp/8321bb87-2b50-49aa-96eb-48deca2ef0b5_buggy.java
+++ b/tmp/92181b77-56ff-47bc-a91b-4534682d1b50_fixed.java
@@ -1,21 +1,24 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+
+        // Fix: When delegating to sub-formatter, propagate only notPrinter or notParser if the separator supports them
+        // In practice, propagate only notPrinter and notParser if the separator isn't either the only printer or parser
+        PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter && !sep.isPrinter(), notParser && !sep.isParser());
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
