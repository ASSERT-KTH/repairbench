diff --git a/tmp/9630222f-7cec-4452-ad25-38a69e2457fd_buggy.java b/tmp/91cf419d-2a27-41d0-8a63-17984b958e85_fixed.java
index ec6c9ee..cc7bc72 100644
--- a/tmp/9630222f-7cec-4452-ad25-38a69e2457fd_buggy.java
+++ b/tmp/91cf419d-2a27-41d0-8a63-17984b958e85_fixed.java
@@ -1,21 +1,22 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
+    // Correct separator handling: only skip separator if the list has more than 2 elements
+    if (size > 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
