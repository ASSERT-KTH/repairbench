diff --git a/tmp/349fea23-005b-4cdf-b719-746bae95f67e_buggy.java b/tmp/de403be5-167a-4f1a-89b0-6b6a4943a5ce_fixed.java
index dc93be3..e1b1f62 100644
--- a/tmp/349fea23-005b-4cdf-b719-746bae95f67e_buggy.java
+++ b/tmp/de403be5-167a-4f1a-89b0-6b6a4943a5ce_fixed.java
@@ -1,14 +1,14 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
+    // handle empty known tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        // Don't add to stack for empty elements (they shouldn't have children)
+        // tokeniser.emit(new Token.EndTag(el.tagName())); // this is handled in insertEmpty for known tags as needed
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
