diff --git a/tmp/174bf1d7-4207-46f8-ba82-55b6dfa3abab_buggy.java b/tmp/9c95b850-27bb-4c9e-8108-d070901e58f6_fixed.java
index dc93be3..b3b9841 100644
--- a/tmp/174bf1d7-4207-46f8-ba82-55b6dfa3abab_buggy.java
+++ b/tmp/9c95b850-27bb-4c9e-8108-d070901e58f6_fixed.java
@@ -1,14 +1,16 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        // Don't add to stack unless it's a non-void (unknown) tag
+        if (!el.tag().isKnownTag() || !el.tag().isSelfClosing()) {
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
