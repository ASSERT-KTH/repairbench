diff --git a/tmp/ac2715b7-21a1-4ef6-8a3e-9c79960b8715_buggy.java b/tmp/d5e8a252-7645-4116-bd53-8999b5644446_fixed.java
index dc93be3..1791249 100644
--- a/tmp/ac2715b7-21a1-4ef6-8a3e-9c79960b8715_buggy.java
+++ b/tmp/d5e8a252-7645-4116-bd53-8999b5644446_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+
+        // Only add to stack and emit fake end tag if this is an unknown self-closing tag. 
+        // For known empty tags, don't add to stack; just return.
+        if (!el.tag().isKnownTag() || !el.tag().isEmpty()) {
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName())); // ensure we get out of whatever state we are in. emitted for yielded processing
+        } // else, known self-closing empty tag (img, br, hr, etc.), do not stack or emit
+
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
