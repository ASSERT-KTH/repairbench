diff --git a/tmp/d0239ac9-22ba-4809-8d93-0c4575e13191_buggy.java b/tmp/77601fff-16c0-4144-b176-27f68cf6870d_fixed.java
index dc93be3..e47368e 100644
--- a/tmp/d0239ac9-22ba-4809-8d93-0c4575e13191_buggy.java
+++ b/tmp/77601fff-16c0-4144-b176-27f68cf6870d_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (Tag.valueOf(startTag.name()).isSelfClosing()) {
+            Element el = insertEmpty(startTag);
+            // Do not add to stack: self-closing known tag
+            return el;
+        } else {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
+    }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
