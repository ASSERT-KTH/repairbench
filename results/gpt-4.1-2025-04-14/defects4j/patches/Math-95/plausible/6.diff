diff --git a/tmp/0790d30a-0ec8-4070-8d53-f8a164909f58_buggy.java b/tmp/4f95c902-4aff-4d65-8e83-54be2d292860_fixed.java
index 25c13b3..d253741 100644
--- a/tmp/0790d30a-0ec8-4070-8d53-f8a164909f58_buggy.java
+++ b/tmp/4f95c902-4aff-4d65-8e83-54be2d292860_fixed.java
@@ -1,15 +1,20 @@
 /**
  * Access the initial domain value, based on <code>p</code>, used to
  * bracket a CDF root.  This method is used by
  * {@link #inverseCumulativeProbability(double)} to find critical values.
  * 
  * @param p the desired probability for the critical value
  * @return initial domain value
  */
 protected double getInitialDomain(double p) {
-        double ret;
     double d = getDenominatorDegreesOfFreedom();
+    // For very small denominator degrees of freedom, mean does not exist (d <= 2)
+    // Use 1.0 as safe initial guess that lies within the support [0, +INF)
+    if (d > 2.0) {
         // use mean
-            ret = d / (d - 2.0);
-        return ret;
+        return d / (d - 2.0);
+    } else {
+        // Use midpoint of support
+        return 1.0;
+    }
 }
\ No newline at end of file
