diff --git a/tmp/2999e8a4-7908-4516-a442-89d0d97e21d7_buggy.java b/tmp/e88c3e26-81da-4b3d-989a-e5e3463b09eb_fixed.java
index 0e18f59..b75e07d 100644
--- a/tmp/2999e8a4-7908-4516-a442-89d0d97e21d7_buggy.java
+++ b/tmp/e88c3e26-81da-4b3d-989a-e5e3463b09eb_fixed.java
@@ -1,13 +1,17 @@
 @Override
 InputStream decode(final InputStream in, final Coder coder,
         byte[] password) throws IOException {
     byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
+    long dictSize = ((long) coder.properties[1]) & 0xFF;
     for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
+        dictSize |= (((long) coder.properties[i + 1]) & 0xFF) << (8 * i);
     }
     if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
         throw new IOException("Dictionary larger than 4GiB maximum size");
     }
+    // xz for Java LZMAInputStream does not allow dictSize > Integer.MAX_VALUE
+    if (dictSize > Integer.MAX_VALUE) {
+        throw new IOException("Dictionary larger than " + Integer.MAX_VALUE + " bytes are not supported by this implementation");
+    }
     return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
 }
\ No newline at end of file
