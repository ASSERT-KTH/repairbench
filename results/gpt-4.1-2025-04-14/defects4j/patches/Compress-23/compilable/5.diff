diff --git a/tmp/ca5003ae-5bc2-4127-99cd-7cec1ca3b03e_buggy.java b/tmp/d0bc2843-49ab-4467-a5fa-cd7222f97cd7_fixed.java
index 0e18f59..399523f 100644
--- a/tmp/ca5003ae-5bc2-4127-99cd-7cec1ca3b03e_buggy.java
+++ b/tmp/d0bc2843-49ab-4467-a5fa-cd7222f97cd7_fixed.java
@@ -1,13 +1,15 @@
 @Override
 InputStream decode(final InputStream in, final Coder coder,
         byte[] password) throws IOException {
     byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
-            for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
-            }
+    long dictSize = (long)(coder.properties[1] & 0xFF)
+            | ((long)(coder.properties[2] & 0xFF) << 8)
+            | ((long)(coder.properties[3] & 0xFF) << 16)
+            | ((long)(coder.properties[4] & 0xFF) << 24);
     if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
         throw new IOException("Dictionary larger than 4GiB maximum size");
     }
-            return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
+    // Avoid int overflow, use at least (int)DICT_SIZE_MAX if dictSize exceeds Integer.MAX_VALUE
+    int lzmaDictSize = dictSize > Integer.MAX_VALUE ? LZMAInputStream.DICT_SIZE_MAX : (int) dictSize;
+    return new LZMAInputStream(in, -1, propsByte, lzmaDictSize);
 }
\ No newline at end of file
