diff --git a/tmp/8e218b0a-7478-46b7-906a-3a5725e3d3d3_buggy.java b/tmp/de996c67-2c02-4121-bb7a-90b44b73d517_fixed.java
index 47915ed..db70e06 100644
--- a/tmp/8e218b0a-7478-46b7-906a-3a5725e3d3d3_buggy.java
+++ b/tmp/de996c67-2c02-4121-bb7a-90b44b73d517_fixed.java
@@ -1,22 +1,25 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
             return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
+        // Check if mock is compared to itself
+        Object mock = invocation.getMock();
+        Object[] args = invocation.getArguments();
+        if (args != null && args.length == 1 && mock == args[0]) {
+            return 0;
+        }
         //see issue 184.
         //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
         //Only for compareTo() method by the Comparable interface
         return 1;
     }
 
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
