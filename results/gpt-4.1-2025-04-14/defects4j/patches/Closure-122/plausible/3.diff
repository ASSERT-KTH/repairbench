diff --git a/tmp/910e83c7-31a6-461d-8efb-db608788c85c_buggy.java b/tmp/21ea33b3-33bf-479d-9a0c-f5085a6415eb_fixed.java
index 308b324..08517d9 100644
--- a/tmp/910e83c7-31a6-461d-8efb-db608788c85c_buggy.java
+++ b/tmp/21ea33b3-33bf-479d-9a0c-f5085a6415eb_fixed.java
@@ -1,11 +1,30 @@
   /**
    * Check to see if the given block comment looks like it should be JSDoc.
    */
   private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
+    String value = comment.getValue();
+    // Remove the leading "/*" and trailing "*/"
+    value = value.replaceFirst("^/\\*", "").replaceFirst("\\*/$", "");
+    String[] lines = value.split("\\r?\\n");
+    for (String line : lines) {
+      String trimmed = line.trim();
+      // Check if the line starts with "*" (optionally after spaces), then contains "@"
+      if (trimmed.startsWith("*")) {
+        // Remove the leading "*" and trim again to handle lines like " * @type"
+        String afterStar = trimmed.substring(1).trim();
+        if (afterStar.startsWith("@")) {
           errorReporter.warning(
               SUSPICIOUS_COMMENT_WARNING,
               sourceName,
               comment.getLineno(), "", 0);
+          return;
+        }
+      } else if (trimmed.startsWith("@")) {
+        errorReporter.warning(
+            SUSPICIOUS_COMMENT_WARNING,
+            sourceName,
+            comment.getLineno(), "", 0);
+        return;
+      }
     }
   }
\ No newline at end of file
