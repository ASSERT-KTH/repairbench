diff --git a/tmp/f59fa937-c729-434a-aad0-5e82f40f5590_buggy.java b/tmp/c4afc4db-7464-4cc7-9905-ff5dd405f5ad_fixed.java
index 308b324..9ca5760 100644
--- a/tmp/f59fa937-c729-434a-aad0-5e82f40f5590_buggy.java
+++ b/tmp/c4afc4db-7464-4cc7-9905-ff5dd405f5ad_fixed.java
@@ -1,11 +1,30 @@
 /**
  * Check to see if the given block comment looks like it should be JSDoc.
  */
 private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
+  String value = comment.getValue();
+  // Split the comment into lines to detect @type or similar after "*" possibly preceeded by whitespace
+  String[] lines = value.split("\n");
+  for (String line : lines) {
+    // Remove leading whitespace and leading "*"s and whitespace after that
+    String trimmed = line.trim();
+    if (trimmed.startsWith("*")) {
+      trimmed = trimmed.substring(1).trim();
+    }
+    // Check for @-annotation
+    if (trimmed.startsWith("@")) {
+      errorReporter.warning(
+          SUSPICIOUS_COMMENT_WARNING,
+          sourceName,
+          comment.getLineno(), "", 0);
+      return;
+    }
+  }
+  // Also catch inline block comments like "/* @type {number} */"
+  if (value.indexOf("@") != -1 && value.replaceAll("[ \n\r\t*]", "").matches(".*@\\w+.*")) {
     errorReporter.warning(
         SUSPICIOUS_COMMENT_WARNING,
         sourceName,
         comment.getLineno(), "", 0);
   }
 }
\ No newline at end of file
