diff --git a/tmp/d122c462-009a-4fa3-b77c-1aae547b2611_buggy.java b/tmp/49dd78bc-e0e4-43ed-826b-9588acab6a23_fixed.java
index 308b324..e1be07b 100644
--- a/tmp/d122c462-009a-4fa3-b77c-1aae547b2611_buggy.java
+++ b/tmp/49dd78bc-e0e4-43ed-826b-9588acab6a23_fixed.java
@@ -1,11 +1,32 @@
 /**
  * Check to see if the given block comment looks like it should be JSDoc.
  */
 private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
+  String value = comment.getValue();
+
+  // Split comment into lines to handle multi-line cases
+  String[] lines = value.split("\n");
+  for (String line : lines) {
+    String trimmedLine = line.trim();
+    // Remove leading '*' which is common in block comments
+    if (trimmedLine.startsWith("*")) {
+      trimmedLine = trimmedLine.substring(1).trim();
+    }
+    if (trimmedLine.startsWith("@")) {
+      // Found an @tag at the beginning of a line
+      errorReporter.warning(
+          SUSPICIOUS_COMMENT_WARNING,
+          sourceName,
+          comment.getLineno(), "", 0);
+      return;
+    }
+  }
+
+  // Also handle the single line case, e.g. /* @type {number} */
+  if (value.trim().startsWith("@")) {
     errorReporter.warning(
         SUSPICIOUS_COMMENT_WARNING,
         sourceName,
         comment.getLineno(), "", 0);
   }
 }
\ No newline at end of file
