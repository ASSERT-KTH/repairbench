diff --git a/tmp/262e3a0c-7955-4f0d-aca3-5cf165710a7f_buggy.java b/tmp/cad7f1d9-6faf-46cf-9083-cf7c5c0a528a_fixed.java
index 1b29465..a06fc9c 100644
--- a/tmp/262e3a0c-7955-4f0d-aca3-5cf165710a7f_buggy.java
+++ b/tmp/cad7f1d9-6faf-46cf-9083-cf7c5c0a528a_fixed.java
@@ -1,50 +1,61 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
+    boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>)
     if (tq.matchChomp("/>")) { // close empty element or tag
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
     // pc data only tags (textarea, script): chomp to end tag, add content as text node
     if (tag.isData()) {
         String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
-            
         Node dataNode;
         if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
             dataNode = TextNode.createFromEncoded(data, baseUri);
         else
             dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
         child.appendChild(dataNode);   
+
+        tq.chompTo(">");
+        // Now, process any data that was immediately after the data section, up to and before the close tag.
+        // The following is the fix: process any remaining text between the end of the data and the closing tag
+        if (!tq.isEmpty() && tq.matches("<")) {
+            int savePos = tq.pos();
+            tq.matchChomp("<");
+            if (tq.matchChomp("/") && tq.consumeWord().equalsIgnoreCase(tagName)) {
+                tq.matchChomp(">");
+            } else {
+                tq.pos(savePos);
+            }
+        }
     }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
         if (href.length() != 0) { // ignore <base target> etc
             baseUri = href;
             doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
         }
     }
 }
\ No newline at end of file
