diff --git a/tmp/dda8576a-0e35-4b49-b4f8-614fc33cc108_buggy.java b/tmp/32ae7bf8-ab77-404e-ac0f-a260be1e4cd1_fixed.java
index 0dbce00..1f6ee94 100644
--- a/tmp/dda8576a-0e35-4b49-b4f8-614fc33cc108_buggy.java
+++ b/tmp/32ae7bf8-ab77-404e-ac0f-a260be1e4cd1_fixed.java
@@ -1,33 +1,41 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // Handle shape that is explicitly set as STRING, or ANY with pattern/locale/timezone
+            boolean asString = (shape == JsonFormat.Shape.STRING);
+            // If ANY and has pattern/locale/timezone, serialize as string!
+            if (!asString && (shape == JsonFormat.Shape.ANY)) {
+                if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                    asString = true;
+                }
+            }
+            if (asString) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
     return this;
 }
\ No newline at end of file
