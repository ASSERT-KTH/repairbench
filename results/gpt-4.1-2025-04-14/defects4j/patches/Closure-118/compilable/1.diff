diff --git a/tmp/30af2a22-288f-49d3-9b16-80687a6651a9_buggy.java b/tmp/d905b2d8-30c4-40d5-913e-cd3eb6bb0cf7_fixed.java
index 0b7c52e..b8b2001 100644
--- a/tmp/30af2a22-288f-49d3-9b16-80687a6651a9_buggy.java
+++ b/tmp/d905b2d8-30c4-40d5-913e-cd3eb6bb0cf7_fixed.java
@@ -1,27 +1,29 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child != null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
     String name = child.getString();
-        T type = typeSystem.getType(getScope(), n, name);
+    // Use child as the node for type lookup instead of n (the OBJECTLIT), 
+    // so individual property types (used in prop definition) are inferred from property node
+    T type = typeSystem.getType(getScope(), child, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
