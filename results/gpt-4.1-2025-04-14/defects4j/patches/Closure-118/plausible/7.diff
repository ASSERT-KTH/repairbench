diff --git a/tmp/b3d6526b-23bc-44fa-942f-d4e9e27b0286_buggy.java b/tmp/3226277a-2cc9-4c03-9605-5f697ae03212_fixed.java
index 0b7c52e..c3ab10f 100644
--- a/tmp/b3d6526b-23bc-44fa-942f-d4e9e27b0286_buggy.java
+++ b/tmp/3226277a-2cc9-4c03-9605-5f697ae03212_fixed.java
@@ -1,27 +1,32 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
        child != null;
        child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
+
+    // Patch: Only process properties if they are not quoted strings
+    // (i.e., if they were written as unquoted in object literal)
+    if (!child.isQuotedString()) {
       String name = child.getString();
       T type = typeSystem.getType(getScope(), n, name);
 
       Property prop = getProperty(name);
       if (!prop.scheduleRenaming(child,
                                  processProperty(t, prop, type, null))) {
         // TODO(user): It doesn't look like the user can do much in this
         // case right now.
         if (propertiesToErrorFor.containsKey(name)) {
           compiler.report(JSError.make(
               t.getSourceName(), child, propertiesToErrorFor.get(name),
               Warnings.INVALIDATION, name,
               (type == null ? "null" : type.toString()), n.toString(), ""));
         }
       }
     }
   }
+}
\ No newline at end of file
