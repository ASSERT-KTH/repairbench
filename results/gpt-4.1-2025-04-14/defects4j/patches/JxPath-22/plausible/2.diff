diff --git a/tmp/a6b9ada1-afc8-472e-90ac-4199ef749215_buggy.java b/tmp/7f2251a3-b8e0-4e1c-b03a-38db323f4e04_fixed.java
index 1bd0d7e..8779786 100644
--- a/tmp/a6b9ada1-afc8-472e-90ac-4199ef749215_buggy.java
+++ b/tmp/7f2251a3-b8e0-4e1c-b03a-38db323f4e04_fixed.java
@@ -1,31 +1,38 @@
 /**
  * Get the ns uri of the specified node.
  * @param node Node to check
  * @return String ns uri
  */
 public static String getNamespaceURI(Node node) {
     if (node instanceof Document) {
         node = ((Document) node).getDocumentElement();
     }
 
+    if (!(node instanceof Element)) {
+        return null;
+    }
+
     Element element = (Element) node;
 
     String uri = element.getNamespaceURI();
-        if (uri == null) {
+    // The key fix: Return null if uri is the empty string.
+    if (uri == null || uri.isEmpty()) {
         String prefix = getPrefix(node);
-            String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
+        String qname = prefix == null || prefix.isEmpty() ? "xmlns" : "xmlns:" + prefix;
 
         Node aNode = node;
         while (aNode != null) {
             if (aNode.getNodeType() == Node.ELEMENT_NODE) {
                 Attr attr = ((Element) aNode).getAttributeNode(qname);
                 if (attr != null) {
-                        return attr.getValue();
+                    String value = attr.getValue();
+                    // Per DOM, "" means "no namespace", so return null instead.
+                    return value.isEmpty() ? null : value;
                 }
             }
             aNode = aNode.getParentNode();
         }
         return null;
     }
     return uri;
 }
\ No newline at end of file
