diff --git a/tmp/c6f53521-4af1-4291-923b-1e3eaf616aa5_buggy.java b/tmp/ca75518e-fcec-43a6-a021-1e0b0c29fb41_fixed.java
index 1bd0d7e..7a153e4 100644
--- a/tmp/c6f53521-4af1-4291-923b-1e3eaf616aa5_buggy.java
+++ b/tmp/ca75518e-fcec-43a6-a021-1e0b0c29fb41_fixed.java
@@ -1,31 +1,38 @@
 /**
  * Get the ns uri of the specified node.
  * @param node Node to check
  * @return String ns uri
  */
 public static String getNamespaceURI(Node node) {
     if (node instanceof Document) {
         node = ((Document) node).getDocumentElement();
     }
 
+    if (!(node instanceof Element)) {
+        return null;
+    }
+
     Element element = (Element) node;
-
     String uri = element.getNamespaceURI();
-        if (uri == null) {
+
+    // Important: an empty namespace is "" in DOM, but it should be returned as null per XPath
+    if (uri == null || uri.length() == 0) {
         String prefix = getPrefix(node);
         String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
 
         Node aNode = node;
         while (aNode != null) {
             if (aNode.getNodeType() == Node.ELEMENT_NODE) {
                 Attr attr = ((Element) aNode).getAttributeNode(qname);
                 if (attr != null) {
-                        return attr.getValue();
+                    String value = attr.getValue();
+                    // In DOM, "" means no namespace - return null
+                    return value.length() == 0 ? null : value;
                 }
             }
             aNode = aNode.getParentNode();
         }
         return null;
     }
     return uri;
 }
\ No newline at end of file
