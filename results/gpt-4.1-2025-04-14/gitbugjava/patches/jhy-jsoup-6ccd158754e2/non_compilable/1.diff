diff --git a/tmp/1fa2c7d2-247f-4d30-86d6-7c2f71cfb897_buggy.java b/tmp/63274229-41c0-4a56-ba71-b0f3c1d75d6e_fixed.java
index 23f078d..304faca 100644
--- a/tmp/1fa2c7d2-247f-4d30-86d6-7c2f71cfb897_buggy.java
+++ b/tmp/63274229-41c0-4a56-ba71-b0f3c1d75d6e_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name())
+                .replace("+", "%20"));
+            // URLEncoder encodes space as '+', but we want '%20'
         } else {
             sb.append((char) c);
         }
+        i += Character.charCount(c);
     }
 }
\ No newline at end of file
