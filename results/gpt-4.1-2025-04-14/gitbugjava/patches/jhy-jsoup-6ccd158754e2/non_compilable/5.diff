diff --git a/tmp/d10c1377-26db-4772-af44-574c0558916a_buggy.java b/tmp/c1a66ee8-8069-47ed-90a3-1ac39873446b_fixed.java
index 23f078d..121a8af 100644
--- a/tmp/d10c1377-26db-4772-af44-574c0558916a_buggy.java
+++ b/tmp/c1a66ee8-8069-47ed-90a3-1ac39873446b_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name())
+                .replace("+", "%20")
+                .replace("%3F", "")); // Strip %3F ("?") added URLEncoder bug for surrogate chars
         } else {
             sb.append((char) c);
         }
+        i += Character.charCount(c);
     }
 }
\ No newline at end of file
