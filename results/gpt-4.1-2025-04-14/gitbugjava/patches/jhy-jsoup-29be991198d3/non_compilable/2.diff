diff --git a/tmp/94f099fe-1b6f-49d4-85ac-a2fd2082fcbf_buggy.java b/tmp/d1633d26-ec22-4c1c-bd41-806eac7fccf4_fixed.java
index 862c60c..86be69a 100644
--- a/tmp/94f099fe-1b6f-49d4-85ac-a2fd2082fcbf_buggy.java
+++ b/tmp/d1633d26-ec22-4c1c-bd41-806eac7fccf4_fixed.java
@@ -1,25 +1,29 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
+            // Fixed: allow leading indent when previous sibling is a <br> (for block pretty printing after <br>)
+            Node prev = previousSibling();
+            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
+                (out.outline() && siblingNodes().size() > 0 && !isBlank()) ||
+                (prev instanceof Element && ((Element) prev).tag().normalName().equals("br"))) {
+                indent(accum, depth, out);
+            }
+
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = this.nextSibling();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank()) return;
-
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
-                indent(accum, depth, out);
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
