diff --git a/tmp/64ba3815-90fd-42b6-bd2b-50073bce2f09_buggy.java b/tmp/e34062fa-f738-43fe-8d66-3386e657bcc1_fixed.java
index d87dd79..bbc92a4 100644
--- a/tmp/64ba3815-90fd-42b6-bd2b-50073bce2f09_buggy.java
+++ b/tmp/e34062fa-f738-43fe-8d66-3386e657bcc1_fixed.java
@@ -1,47 +1,81 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    if (!buf.isReadable()) {
+        return null;
+    }
+
+    int startIndex = -1;
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+
+    // 1. Find '[' as start of frame
+    for (int i = buf.readerIndex(); i <= buf.writerIndex() - 1; i++) {
+        if (buf.getByte(i) == '[') {
+            startIndex = i;
+            break;
+        }
+    }
+
+    if (startIndex == -1) {
+        // Not found start marker
+        return null;
+    }
+
+    // 2. Find matching ']' as end of frame
+    for (int i = buf.writerIndex() - 1; i >= startIndex; i--) {
         if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
+            endIndex = i;
             break;
         }
     }
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
+    if (endIndex == -1) {
+        // Not found end marker
+        return null;
+    }
+
+    // 3. Check if the complete frame is available in the buffer
+    if (buf.readableBytes() < (endIndex - buf.readerIndex() + 1)) {
+        return null;
+    }
+
+    // 4. Slice the buffer to the exact frame
+    buf.readerIndex(startIndex);
+    ByteBuf frameBuf = buf.readRetainedSlice(endIndex - startIndex + 1);
+
+    // 5. Unescape content into a new buffer
+    ByteBuf frame = Unpooled.buffer(frameBuf.readableBytes());
+    while (frameBuf.isReadable()) {
+        byte b1 = frameBuf.readByte();
         if (b1 == '}') {
-                    byte b2 = buf.readByte();
+            if (!frameBuf.isReadable()) {
+                throw new IllegalArgumentException("illegal escape at end of buffer");
+            }
+            byte b2 = frameBuf.readByte();
             switch (b2) {
                 case 0x01:
                     frame.writeByte('}');
                     break;
                 case 0x02:
                     frame.writeByte('[');
                     break;
                 case 0x03:
                     frame.writeByte(']');
                     break;
                 case 0x04:
                     frame.writeByte(',');
                     break;
                 case 0x05:
                     frame.writeByte('*');
                     break;
                 default:
                     throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                            "unexpected byte at %d: 0x%02x", frameBuf.readerIndex() - 1, b2));
             }
         } else {
             frame.writeByte(b1);
         }
     }
     return frame;
 }
\ No newline at end of file
-
-        return null;
-    }
