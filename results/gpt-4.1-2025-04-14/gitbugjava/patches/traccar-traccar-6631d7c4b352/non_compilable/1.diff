diff --git a/tmp/67f3ba6b-531d-41dc-ad4c-cd8e998a964d_buggy.java b/tmp/0803bffb-b348-4742-9007-13f4559038ad_fixed.java
index d87dd79..51ce6ea 100644
--- a/tmp/67f3ba6b-531d-41dc-ad4c-cd8e998a964d_buggy.java
+++ b/tmp/0803bffb-b348-4742-9007-13f4559038ad_fixed.java
@@ -1,47 +1,60 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
-        int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    int frameStart = -1;
+    int frameEnd = -1;
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
+        if (buf.getByte(i) == '[' && frameStart == -1) {
+            frameStart = i;
+        }
         if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
+            frameEnd = i;
             break;
         }
     }
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
+    if (frameStart != -1 && frameEnd != -1 && buf.readerIndex() <= frameStart && frameEnd < buf.writerIndex()) {
+        int originalReaderIndex = buf.readerIndex();
+        buf.readerIndex(frameStart);
+        ByteBuf frame = Unpooled.buffer(frameEnd - frameStart + 1);
+        int endIndex = frameEnd + 1;
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
+                if (buf.readerIndex() < endIndex) {
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
+                } else {
+                    // Trailing escape char, treat as normal
+                    frame.writeByte(b1);
+                }
             } else {
                 frame.writeByte(b1);
             }
         }
+        buf.readerIndex(endIndex); // move readerIndex past the frame
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
