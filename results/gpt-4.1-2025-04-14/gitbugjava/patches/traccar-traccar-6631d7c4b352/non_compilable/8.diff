diff --git a/tmp/16c969e1-735b-48e8-85cd-4fb91c09e89d_buggy.java b/tmp/775e4a6f-5244-483a-bc17-3c02bebb5a04_fixed.java
index d87dd79..3167374 100644
--- a/tmp/16c969e1-735b-48e8-85cd-4fb91c09e89d_buggy.java
+++ b/tmp/775e4a6f-5244-483a-bc17-3c02bebb5a04_fixed.java
@@ -1,47 +1,67 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    int startIndex = -1;
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+
+    // Search for '[' as start, ']' as end
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
+        if (buf.getByte(i) == '[' && startIndex == -1) {
+            startIndex = i;
+        }
         if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
+            endIndex = i + 1; // include ']'
+            if (startIndex != -1) {
                 break;
             }
         }
+    }
+
+    if (startIndex != -1 && endIndex != -1 && buf.readableBytes() >= endIndex - buf.readerIndex()) {
+        // Set readerIndex to startIndex
+        buf.readerIndex(startIndex);
+        ByteBuf frame = Unpooled.buffer(endIndex - startIndex);
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
+                if (buf.readerIndex() < endIndex) {
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
+                } else {
+                    // Incomplete escape, back up and break
+                    buf.readerIndex(buf.readerIndex() - 1);
+                    break;
+                }
             } else {
                 frame.writeByte(b1);
             }
         }
+
+        // Discard bytes up to endIndex
+        buf.readerIndex(endIndex);
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
