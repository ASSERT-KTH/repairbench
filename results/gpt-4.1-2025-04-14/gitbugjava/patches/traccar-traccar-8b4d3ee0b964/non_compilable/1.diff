diff --git a/tmp/bb79e914-3232-429f-bc01-c485d6437e0c_buggy.java b/tmp/9142b622-258c-4776-9e87-3b342eeb155c_fixed.java
index 27f2719..ec38f96 100644
--- a/tmp/bb79e914-3232-429f-bc01-c485d6437e0c_buggy.java
+++ b/tmp/9142b622-258c-4776-9e87-3b342eeb155c_fixed.java
@@ -1,90 +1,113 @@
 @Override
 protected Object decode(
         Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
     String sentence = (String) msg;
 
     if (sentence.startsWith("!1,")) {
         int index = sentence.indexOf(',', 3);
         if (index < 0) {
             index = sentence.length();
         }
-            getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
+        String deviceId = sentence.substring(3, index);
+        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, deviceId);
+        // Special case for phone number reports (start with !1,deviceId,phone1,...)
+        if (deviceSession != null && sentence.length() > index + 1) {
+            String[] values = sentence.substring(index + 1).split(",");
+            if (values.length > 0 && values[0].startsWith("V")) {
+                Position position = new Position(getProtocolName());
+                position.setDeviceId(deviceSession.getDeviceId());
+                position.set("phone1", values[0]);
+                return position;
+            }
+        }
         return null;
     }
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
     if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
+        // Also allow type 4 for phone report (testDecode uses !4,...)
+        if (deviceSession != null && sentence.startsWith("!4,")) {
+            String[] values = sentence.split(",");
+            if (values.length >= 3) {
+                Position position = new Position(getProtocolName());
+                position.setDeviceId(deviceSession.getDeviceId());
+                position.set("phone1", values[2]);
+                return position;
+            }
+        }
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     String type = sentence.substring(1, 2);
     position.set(Position.KEY_TYPE, type);
 
     if (type.equals("3")) {
 
         getLastLocation(position, null);
 
         position.set(Position.KEY_RESULT, sentence.substring(3));
 
         return position;
 
     } else if (type.equals("5")) {
 
         String[] values = sentence.split(",");
 
         getLastLocation(position, null);
 
+        if (values.length >= 2) {
             position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
+        }
         if (values.length >= 4) {
             position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
         }
 
         return position;
 
     } else if (type.equals("B") || type.equals("D")) {
 
         Parser parser = new Parser(PATTERN_BD, sentence);
         if (!parser.matches()) {
             return null;
         }
 
         decodeFix(position, parser);
         decodeState(position, parser);
 
         position.set(Position.KEY_SATELLITES, parser.nextInt(0));
         position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
         position.set(Position.KEY_HDOP, parser.nextDouble(0));
 
         return position;
 
     } else if (type.equals("C")) {
 
         Parser parser = new Parser(PATTERN_C, sentence);
         if (!parser.matches()) {
             return null;
         }
 
         decodeFix(position, parser);
         decodeState(position, parser);
 
         return position;
 
     } else if (type.equals("A")) {
 
         Parser parser = new Parser(PATTERN_A, sentence);
         if (!parser.matches()) {
             return null;
         }
 
         decodeFix(position, parser);
 
         return position;
 
     }
 
     return null;
 }
\ No newline at end of file
