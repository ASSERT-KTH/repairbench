diff --git a/tmp/19dd9923-7145-47f8-9660-dd9941f53ef2_buggy.java b/tmp/3d47d204-5d3c-468f-bd61-96b6385ef5e4_fixed.java
index 016a7f6..52d8aa6 100644
--- a/tmp/19dd9923-7145-47f8-9660-dd9941f53ef2_buggy.java
+++ b/tmp/3d47d204-5d3c-468f-bd61-96b6385ef5e4_fixed.java
@@ -1,29 +1,38 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
         trimTrailing = trimLikeBlock && nextSibling() == null;
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
         if (couldSkip && isBlank) return;
 
         Node prev = previousSibling();
+        boolean blockPrev = (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")); // <br>
         if (
             (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            blockPrev
         )
             indent(accum, depth, out);
+
+        // Fix: Only add a space between elements if the parent is not a block
+        if (
+            prev instanceof Element && parent != null && !parent.tag().isBlock() &&
+            !isBlank() && !((Element) prev).tag().isBlock()
+        ) {
+            accum.append(" ");
+        }
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
