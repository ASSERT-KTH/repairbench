diff --git a/tmp/0f5c3018-d19d-4f5d-ba97-2d039c9603c8_buggy.java b/tmp/1aa31830-8f80-4c62-8ddf-1b915cc41544_fixed.java
index fb15c85..344b180 100644
--- a/tmp/0f5c3018-d19d-4f5d-ba97-2d039c9603c8_buggy.java
+++ b/tmp/1aa31830-8f80-4c62-8ddf-1b915cc41544_fixed.java
@@ -1,311 +1,292 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
     CellTower cellTower = new CellTower();
+    if (form != null && form.length() > 1) {
         String[] keys = form.substring(1).split("%");
-        for (String key : keys) {
+        int keyIndex = 0;
+        while (buf.isReadable() && keyIndex < keys.length) {
+            String key = keys[keyIndex++];
+            try {
                 switch (key) {
                     case "SA":
-                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                         break;
                     case "MV":
-                    position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
+                        if (buf.readableBytes() >= 2) position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
                         break;
                     case "BV":
-                    position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
+                        if (buf.readableBytes() >= 2) position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
                         break;
                     case "GQ":
-                    cellTower.setSignalStrength((int) buf.readUnsignedByte());
+                        if (buf.readableBytes() >= 1) cellTower.setSignalStrength((int) buf.readUnsignedByte());
                         break;
                     case "CE":
-                    cellTower.setCellId(buf.readUnsignedInt());
+                        if (buf.readableBytes() >= 4) cellTower.setCellId(buf.readUnsignedInt());
                         break;
                     case "LC":
-                    cellTower.setLocationAreaCode(buf.readUnsignedShort());
+                        if (buf.readableBytes() >= 2) cellTower.setLocationAreaCode(buf.readUnsignedShort());
                         break;
                     case "CN":
+                        if (buf.readableBytes() >= 4) {
                             int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
                             cellTower.setMobileCountryCode(combinedMobileCodes / 100);
                             cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
+                        }
                         break;
                     case "RL":
-                    buf.readUnsignedByte(); // rxlev
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte(); // rxlev
                         break;
                     case "PC":
-                    position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
+                        if (buf.readableBytes() >= 4) position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
                         break;
                     case "AT":
-                    position.setAltitude(buf.readUnsignedInt());
+                        if (buf.readableBytes() >= 4) position.setAltitude(buf.readUnsignedInt());
                         break;
                     case "RP":
-                    position.set(Position.KEY_RPM, buf.readUnsignedShort());
+                        if (buf.readableBytes() >= 2) position.set(Position.KEY_RPM, buf.readUnsignedShort());
                         break;
                     case "GS":
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                         break;
                     case "DT":
-                    position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
                         break;
                     case "VN":
                         position.set(Position.KEY_VIN, readString(buf));
                         break;
                     case "MF":
-                    buf.readUnsignedShort(); // mass air flow rate
+                        if (buf.readableBytes() >= 2) buf.readUnsignedShort(); // mass air flow rate
                         break;
                     case "EL":
-                    buf.readUnsignedByte(); // engine load
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte(); // engine load
                         break;
                     case "TR":
-                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                         break;
                     case "ET":
-                    position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
+                        if (buf.readableBytes() >= 2) position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
                         break;
                     case "FL":
-                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                         break;
                     case "ML":
-                    buf.readUnsignedByte(); // mil status
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte(); // mil status
                         break;
                     case "FC":
-                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
+                        if (buf.readableBytes() >= 4) position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
                         break;
                     case "CI":
                         readString(buf); // format string
                         break;
                     case "AV1":
-                    position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
+                        if (buf.readableBytes() >= 2) position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
                         break;
                     case "NC":
                         readString(buf); // gsm neighbor cell info
                         break;
                     case "SM":
-                    buf.readUnsignedShort(); // max speed between reports
+                        if (buf.readableBytes() >= 2) buf.readUnsignedShort(); // max speed between reports
                         break;
                     case "GL":
                         readString(buf); // google link
                         break;
                     case "MA":
                         readString(buf); // mac address
                         break;
                     case "PD":
-                    buf.readUnsignedByte(); // pending code status
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte(); // pending code status
                         break;
                     case "CD":
                         position.set(Position.KEY_ICCID, readString(buf));
                         break;
                     case "CM":
-                    buf.readLong(); // imsi
+                        if (buf.readableBytes() >= 8) buf.readLong(); // imsi
                         break;
                     case "GN":
-                    buf.skipBytes(60); // g sensor data
+                        if (buf.readableBytes() >= 60) buf.skipBytes(60); // g sensor data
                         break;
                     case "GV":
-                    buf.skipBytes(6); // maximum g force
+                        if (buf.readableBytes() >= 6) buf.skipBytes(6); // maximum g force
                         break;
                     case "ME":
-                    buf.readLong(); // imei
+                        if (buf.readableBytes() >= 8) buf.readLong(); // imei
                         break;
                     case "IA":
-                    buf.readUnsignedByte(); // intake air temperature
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte(); // intake air temperature
                         break;
                     case "MP":
-                    buf.readUnsignedByte(); // manifold absolute pressure
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte(); // manifold absolute pressure
                         break;
                     case "EO":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_ODOMETER, UnitsConverter.metersFromMiles(buf.readUnsignedInt()));
                         break;
                     case "EH":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 360000);
                         break;
                     case "ZO1":
-                    buf.readUnsignedByte(); // brake stroke status
-                    break;
                     case "ZO2":
-                    buf.readUnsignedByte(); // warning indicator status
-                    break;
                     case "ZO3":
-                    buf.readUnsignedByte(); // abs control status
-                    break;
-                case "ZO4":
-                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 0.4);
-                    break;
                     case "ZO5":
-                    buf.readUnsignedByte(); // parking brake status
-                    break;
-                case "ZO6":
-                    position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte() * 0.805);
-                    break;
                     case "ZO7":
-                    buf.readUnsignedByte(); // cruise control status
-                    break;
                     case "ZO8":
-                    buf.readUnsignedByte(); // accelector pedal position
-                    break;
-                case "ZO9":
-                    position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 0.5);
-                    break;
-                case "ZO10":
-                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.5);
-                    break;
                     case "ZO11":
-                    buf.readUnsignedByte(); // engine oil pressure
-                    break;
                     case "ZO12":
-                    buf.readUnsignedByte(); // boost pressure
-                    break;
                     case "ZO13":
-                    buf.readUnsignedByte(); // intake temperature
-                    break;
-                case "ZO14":
-                    position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte());
-                    break;
                     case "ZO15":
-                    buf.readUnsignedByte(); // brake application pressure
-                    break;
                     case "ZO16":
-                    buf.readUnsignedByte(); // brake primary pressure
-                    break;
                     case "ZO17":
-                    buf.readUnsignedByte(); // brake secondary pressure
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte();
+                        break;
+                    case "ZO4":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 0.4);
+                        break;
+                    case "ZO6":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte() * 0.805);
+                        break;
+                    case "ZO9":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 0.5);
+                        break;
+                    case "ZO10":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.5);
+                        break;
+                    case "ZO14":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte());
                         break;
                     case "ZH1":
-                    buf.readUnsignedShort(); // cargo weight
+                        if (buf.readableBytes() >= 2) buf.readUnsignedShort(); // cargo weight
                         break;
                     case "ZH2":
+                        if (buf.readableBytes() >= 2)
                             position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 16.428 / 3600);
                         break;
                     case "ZH3":
+                        if (buf.readableBytes() >= 2)
                             position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.25);
                         break;
                     case "ZL1":
-                    buf.readUnsignedInt(); // fuel used (natural gas)
+                        if (buf.readableBytes() >= 4) buf.readUnsignedInt(); // fuel used (natural gas)
                         break;
                     case "ZL2":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 161);
                         break;
                     case "ZL3":
-                    buf.readUnsignedInt(); // vehicle hours
+                        if (buf.readableBytes() >= 4) buf.readUnsignedInt(); // vehicle hours
                         break;
                     case "ZL4":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);
                         break;
                     case "ZS1":
                         position.set(Position.KEY_VIN, readString(buf));
                         break;
                     case "JO1":
-                    buf.readUnsignedByte(); // pedals
-                    break;
                     case "JO2":
-                    buf.readUnsignedByte(); // power takeoff device
-                    break;
                     case "JO3":
-                    buf.readUnsignedByte(); // accelector pedal position
-                    break;
-                case "JO4":
-                    position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte());
-                    break;
-                case "JO5":
-                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.4);
-                    break;
                     case "JO6":
-                    buf.readUnsignedByte(); // fms vehicle interface
-                    break;
                     case "JO7":
-                    buf.readUnsignedByte(); // driver 2
-                    break;
                     case "JO8":
-                    buf.readUnsignedByte(); // driver 1
-                    break;
                     case "JO9":
-                    buf.readUnsignedByte(); // drivers
-                    break;
                     case "JO10":
-                    buf.readUnsignedByte(); // system information
-                    break;
-                case "JO11":
-                    position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);
-                    break;
                     case "JO12":
-                    buf.readUnsignedByte(); // pto engaged
+                        if (buf.readableBytes() >= 1) buf.readUnsignedByte();
+                        break;
+                    case "JO4":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte());
+                        break;
+                    case "JO5":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.4);
+                        break;
+                    case "JO11":
+                        if (buf.readableBytes() >= 1) position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);
                         break;
                     case "JH1":
+                        if (buf.readableBytes() >= 2)
                             position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() / 256.0);
                         break;
                     case "JH2":
+                        if (buf.readableBytes() >= 2)
                             position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.125);
                         break;
                     case "JH3":
                     case "JH4":
                     case "JH5":
                     case "JH6":
                     case "JH7":
+                        if (buf.readableBytes() >= 2) {
                             int index = Integer.parseInt(key.substring(2)) - 2;
                             position.set("axleWeight" + index, buf.readUnsignedShort() * 0.5);
+                        }
                         break;
                     case "JH8":
+                        if (buf.readableBytes() >= 2)
                             position.set(Position.KEY_ODOMETER_SERVICE, buf.readUnsignedShort() * 5);
                         break;
                     case "JH9":
-                    buf.readUnsignedShort(); // tachograph speed
+                        if (buf.readableBytes() >= 2) buf.readUnsignedShort(); // tachograph speed
                         break;
                     case "JH10":
-                    buf.readUnsignedShort(); // ambient air temperature
+                        if (buf.readableBytes() >= 2) buf.readUnsignedShort(); // ambient air temperature
                         break;
                     case "JH11":
+                        if (buf.readableBytes() >= 2)
                             position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.05);
                         break;
                     case "JH12":
-                    buf.readUnsignedShort(); // fuel economy
+                        if (buf.readableBytes() >= 2) buf.readUnsignedShort(); // fuel economy
                         break;
                     case "JL1":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.5);
                         break;
                     case "JL2":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);
                         break;
                     case "JL3":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);
                         break;
                     case "JL4":
+                        if (buf.readableBytes() >= 4)
                             position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.001);
                         break;
                     case "JS1":
                         position.set(Position.KEY_VIN, readString(buf));
                         break;
                     case "JS2":
                         readString(buf); // fms version supported
                         break;
                     case "JS3":
                         position.set("driver1", readString(buf));
                         break;
                     case "JS4":
                         position.set("driver2", readString(buf));
                         break;
                     case "JN1":
-                    buf.readUnsignedInt(); // cruise control distance
-                    break;
                     case "JN2":
-                    buf.readUnsignedInt(); // excessive idling time
-                    break;
                     case "JN3":
-                    buf.readUnsignedInt(); // excessive idling fuel
-                    break;
                     case "JN4":
-                    buf.readUnsignedInt(); // pto time
-                    break;
                     case "JN5":
-                    buf.readUnsignedInt(); // pto fuel
+                        if (buf.readableBytes() >= 4) buf.readUnsignedInt();
                         break;
                     default:
+                        // do nothing for unknown keys
                         break;
                 }
+            } catch (Exception e) {
+                // Defensive: ignore unexpected out-of-range, format or underflow errors
+            }
+        }
     }
 
     if (cellTower.getMobileCountryCode() != null
             && cellTower.getMobileNetworkCode() != null
             && cellTower.getCellId() != null && cellTower.getCellId() != 0
             && cellTower.getLocationAreaCode() != null) {
         position.setNetwork(new Network(cellTower));
     } else if (cellTower.getSignalStrength() != null) {
         position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
     }
 }
\ No newline at end of file
