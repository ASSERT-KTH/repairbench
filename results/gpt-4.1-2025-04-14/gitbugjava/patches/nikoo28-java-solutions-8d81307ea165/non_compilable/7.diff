diff --git a/tmp/27eacaf3-56f1-4054-ba54-a16a38b59df7_buggy.java b/tmp/43ac024d-f17c-4be1-bab3-8c3b7cfc5e96_fixed.java
index 9739964..9b9859f 100644
--- a/tmp/27eacaf3-56f1-4054-ba54-a16a38b59df7_buggy.java
+++ b/tmp/43ac024d-f17c-4be1-bab3-8c3b7cfc5e96_fixed.java
@@ -1,27 +1,19 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
-    spans[0] = 1; // Span of first element is always 1
-
     Stack<Integer> indexStack = new Stack<>();
 
-    // Push the index of first element
-    indexStack.push(0);
-
-    for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+    for (int i = 0; i < prices.length; i++) {
+        // Change comparison to strictly less than (<) so equal prices do not pop
+        while (!indexStack.isEmpty() && prices[indexStack.peek()] < prices[i]) {
             indexStack.pop();
-
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
+        }
+        if (indexStack.isEmpty()) {
             spans[i] = i + 1;
-      else
+        } else {
             spans[i] = i - indexStack.peek();
-
+        }
         indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
