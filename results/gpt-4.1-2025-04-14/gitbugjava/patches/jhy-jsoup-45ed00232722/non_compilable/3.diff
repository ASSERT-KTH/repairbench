diff --git a/tmp/fe781971-4dde-4a49-ab8d-a4866684a5a1_buggy.java b/tmp/0162cae4-4f84-4f8f-8a72-f2d91ad7f396_fixed.java
index 855afa5..d0eee82 100644
--- a/tmp/fe781971-4dde-4a49-ab8d-a4866684a5a1_buggy.java
+++ b/tmp/0162cae4-4f84-4f8f-8a72-f2d91ad7f396_fixed.java
@@ -1,13 +1,34 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        // Decompose URL and encode components for path and query
+        String protocol = u.getProtocol();
+        String host = u.getHost();
+        int port = u.getPort();
+        String path = u.getPath();
+        String query = u.getQuery();
+        String fragment = u.getRef();
+
+        // Encode path
+        String encodedPath = path != null ? new URI(null, null, path, null).getRawPath() : null;
+
+        // Encode query
+        String encodedQuery = null;
+        if (query != null)
+            encodedQuery = new URI(null, null, null, query, null).getRawQuery();
+
+        // Rebuild authority (host/port)
+        String authority = host;
+        if (port != -1) {
+            authority += ":" + port;
+        }
+
+        // Compose the URI
+        URI uri = new URI(protocol, authority, encodedPath, encodedQuery, fragment);
+
         return new URL(uri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
