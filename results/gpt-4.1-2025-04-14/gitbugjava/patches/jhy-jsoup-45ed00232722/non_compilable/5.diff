diff --git a/tmp/58018060-d002-41cc-b060-9a99d88dc1f1_buggy.java b/tmp/51285885-c0dd-4579-b020-f4e078d1393f_fixed.java
index 855afa5..0075e70 100644
--- a/tmp/58018060-d002-41cc-b060-9a99d88dc1f1_buggy.java
+++ b/tmp/51285885-c0dd-4579-b020-f4e078d1393f_fixed.java
@@ -1,13 +1,42 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+        String path = u.getPath();
+        String query = u.getQuery();
+        String ref = u.getRef();
+
+        // Encode the path, query, and fragment components individually
+        StringBuilder sb = new StringBuilder();
+        sb.append(u.getProtocol()).append("://");
+        sb.append(u.getHost());
+        if (u.getPort() != -1) {
+            sb.append(":").append(u.getPort());
+        }
+        if (path != null) {
+            sb.append(encodePath(path));
+        }
+        if (query != null) {
+            sb.append("?").append(URLEncoder.encode(query, "UTF-8").replace("+", "%20").replace("%3D", "=").replace("%26", "&"));
+        }
+        if (ref != null) {
+            sb.append("#").append(URLEncoder.encode(ref, "UTF-8").replace("+", "%20"));
+        }
+        return new URL(sb.toString());
+    } catch (Exception e) {
         // give up and return the original input
         return u;
     }
 }
+
+// Helper method to percent-encode the path component:
+private static String encodePath(String path) {
+    try {
+        // Use URI to encode the path correctly
+        return new URI(null, null, path, null).getRawPath();
+    } catch (URISyntaxException e) {
+        // fallback if it fails
+        return path.replace(" ", "%20")
+                   .replace("[", "%5B")
+                   .replace("]", "%5D");
+    }
+}
\ No newline at end of file
