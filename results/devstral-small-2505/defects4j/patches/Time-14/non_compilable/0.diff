diff --git a/tmp/01989700-e01a-49e6-b980-4ef11026d1f0_buggy.java b/tmp/fefcc234-874b-4d28-ba4a-412ecc3b68dd_fixed.java
index 10616db..97662a8 100644
--- a/tmp/01989700-e01a-49e6-b980-4ef11026d1f0_buggy.java
+++ b/tmp/fefcc234-874b-4d28-ba4a-412ecc3b68dd_fixed.java
@@ -1,19 +1,28 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
+
+        // Ensure the day value is valid for the resulting month
+        int month = iChronology.get(partial, instant).getMonthOfYear();
+        int dayOfMonth = iChronology.get(partial, instant).getDayOfMonth();
+        int maxDayOfMonth = iChronology.getMonthOfYear().maximumValue();
+
+        if (dayOfMonth > maxDayOfMonth) {
+            dayOfMonth = maxDayOfMonth;
+        }
+
+        values[partial.indexOf(partial.getFieldType(partial.size() - 1))] = dayOfMonth;
+
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
