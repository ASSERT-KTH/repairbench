diff --git a/tmp/b14f9326-283a-4214-a7da-3e8dfe2eef1d_buggy.java b/tmp/a510f59f-e723-48ad-ab6e-0bf39bc17cdd_fixed.java
index 10616db..4758f76 100644
--- a/tmp/b14f9326-283a-4214-a7da-3e8dfe2eef1d_buggy.java
+++ b/tmp/a510f59f-e723-48ad-ab6e-0bf39bc17cdd_fixed.java
@@ -1,19 +1,23 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
             // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] resultValues = iChronology.get(partial, instant);
+            if (partial.isSupported(partial.DAY_OF_MONTH) && resultValues[partial.DAY_OF_MONTH] > iChronology.getMaxDaysInMonth(resultValues[partial.MONTH_OF_YEAR], resultValues[partial.YEAR])) {
+                resultValues[partial.DAY_OF_MONTH] = iChronology.getMaxDaysInMonth(resultValues[partial.MONTH_OF_YEAR], resultValues[partial.YEAR]);
+            }
+            return resultValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
