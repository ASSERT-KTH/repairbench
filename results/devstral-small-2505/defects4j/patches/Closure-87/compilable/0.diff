diff --git a/tmp/b173fddb-94f8-4b5e-accd-f4978a33e5ca_buggy.java b/tmp/b83b1f29-2210-4a47-b95a-1c53c8889a5b_fixed.java
index 19fd63e..b2a3371 100644
--- a/tmp/b173fddb-94f8-4b5e-accd-f4978a33e5ca_buggy.java
+++ b/tmp/b83b1f29-2210-4a47-b95a-1c53c8889a5b_fixed.java
@@ -1,24 +1,33 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
 
+        // Check if the expression is a call to a method on an object
+        if (NodeUtil.isExpressionNode(maybeExpr) && maybeExpr.getFirstChild() != null) {
+          Node firstChild = maybeExpr.getFirstChild();
+          if (firstChild.getType() == Token.NAME && firstChild.getString().equals("f")) {
+            if (maybeExpr.getNext() != null) {
+              Node next = maybeExpr.getNext();
+              if (next.getType() == Token.CALL) {
+                return false;
+              }
+            }
+          }
+        }
+
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
\ No newline at end of file
