diff --git a/tmp/cbe1123a-6bd2-4086-a7bf-7db581b14f40_buggy.java b/tmp/156f3f1b-cee2-4c3b-92fa-7346389ea779_fixed.java
index 98d89dc..4119036 100644
--- a/tmp/cbe1123a-6bd2-4086-a7bf-7db581b14f40_buggy.java
+++ b/tmp/156f3f1b-cee2-4c3b-92fa-7346389ea779_fixed.java
@@ -1,23 +1,28 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        return ld == rd; // NaN is equal to itself in this context
+    }
+
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
