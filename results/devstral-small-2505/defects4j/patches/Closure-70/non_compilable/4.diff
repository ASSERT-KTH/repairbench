diff --git a/tmp/a97d0de9-25c2-4ce8-bd7d-5b5c1b1b8354_buggy.java b/tmp/dbec62fc-9834-4ee6-8879-4bb2e1762b2a_fixed.java
index 1530b34..45f3a10 100644
--- a/tmp/a97d0de9-25c2-4ce8-bd7d-5b5c1b1b8354_buggy.java
+++ b/tmp/dbec62fc-9834-4ee6-8879-4bb2e1762b2a_fixed.java
@@ -1,23 +1,37 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);
           jsDocParameter = jsDocParameter.getNext();
         } else {
           defineSlot(astParameter, functionNode, null, true);
         }
       }
     }
   }
-    } // end declareArguments
+  // Check for duplicate local variable declarations
+  checkForDuplicateLocalVarDecl(functionNode, astParameters);
+}
+
+private void checkForDuplicateLocalVarDecl(Node functionNode, Node astParameters) {
+  Node body = astParameters.getNext();
+  for (Node child : body.children()) {
+    if (child.isVar()) {
+      for (Node astParameter : astParameters.children()) {
+        if (child.getFirstChild().getString().equals(astParameter.getFirstChild().getString())) {
+          report(JavascriptError.JSC_DUP_VAR_DECLARATION, child);
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
