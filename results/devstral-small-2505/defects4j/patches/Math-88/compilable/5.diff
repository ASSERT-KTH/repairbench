diff --git a/tmp/12be6ef7-7c93-425b-9d6a-05401fc4d2b1_buggy.java b/tmp/fbafb2cb-3826-481c-9b14-5b7a6c5cbd7c_fixed.java
index 544303b..0702c1e 100644
--- a/tmp/12be6ef7-7c93-425b-9d6a-05401fc4d2b1_buggy.java
+++ b/tmp/fbafb2cb-3826-481c-9b14-5b7a6c5cbd7c_fixed.java
@@ -1,29 +1,19 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
+    Integer basicRow = getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         // if multiple variables can take a given value
         // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+        coefficients[i] = (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset()));
         if (basicRow != null) {
             for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
                     coefficients[i] = 0;
                 }
             }
         }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
