You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
    /**
     * Adds 1 to the frequency count for v.
     * <p>
     * If other objects have already been added to this Frequency, v must
     * be comparable to those that have already been added.
     * </p>
     * 
     * @param v the value to add.
     * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
     *         or is not comparable with previous entries
     * @deprecated use {@link #addValue(Comparable)} instead
     */
    @Deprecated
    public void addValue(Object v) {
            addValue((Comparable<?>) v);            
    }

```

The code fails the following tests.

Test `org.apache.commons.math.stat.FrequencyTest::testAddNonComparable`:
```java
    // Check what happens when non-Comparable objects are added
    public void testAddNonComparable(){
        try {
            f.addValue(new Object()); // This was previously OK
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException expected) {
        }
        f.clear();
        f.addValue(1);
        try {
            f.addValue(new Object());
            fail("Expected IllegalArgumentException");
        } catch (IllegalArgumentException expected) {
        }
    }

```
Test `org.apache.commons.math.stat.FrequencyTest::testAddNonComparable` error:
```
java.lang.ClassCastException: java.lang.Object cannot be cast to java.lang.Comparable
```


Please provide a fixed version of the buggy function, and only that function, inside a code block.
