diff --git a/tmp/a29fa35d-eb42-4b2c-9a0a-5e0260315b91_buggy.java b/tmp/2bcbfc2e-6041-4731-a1b7-a832caa4aa54_fixed.java
index 0dbce00..2d9920d 100644
--- a/tmp/a29fa35d-eb42-4b2c-9a0a-5e0260315b91_buggy.java
+++ b/tmp/2bcbfc2e-6041-4731-a1b7-a832caa4aa54_fixed.java
@@ -1,33 +1,35 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
-        return this;
+    // If no format is specified, use the default behavior of the serializer
+    // which is determined by the WRITE_DATES_AS_TIMESTAMPS feature
+    return withFormat(serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS), null);
 }
\ No newline at end of file
