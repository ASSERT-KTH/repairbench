diff --git a/tmp/cf1c1ad1-634f-41a8-8a5c-75ac3b7fa1af_buggy.java b/tmp/cb0b3630-6187-4f9b-a44e-50811a294d91_fixed.java
index be2af16..9b0b6f4 100644
--- a/tmp/cf1c1ad1-634f-41a8-8a5c-75ac3b7fa1af_buggy.java
+++ b/tmp/cb0b3630-6187-4f9b-a44e-50811a294d91_fixed.java
@@ -1,29 +1,30 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+            long julianInstant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
+            if (julianInstant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            instant = julianInstant;
         }
         return instant;
     }
\ No newline at end of file
