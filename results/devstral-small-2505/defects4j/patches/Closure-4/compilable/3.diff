diff --git a/tmp/ea676a6c-20af-41d3-bb38-3b572c242b7b_buggy.java b/tmp/aea2d1ea-4366-4fd0-ae3d-dd155e01b030_fixed.java
index d6a560a..5934784 100644
--- a/tmp/ea676a6c-20af-41d3-bb38-3b572c242b7b_buggy.java
+++ b/tmp/aea2d1ea-4366-4fd0-ae3d-dd155e01b030_fixed.java
@@ -1,33 +1,36 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
     // TODO(user): Investigate whether it is really necessary to keep two
     // different mechanisms for resolving named types, and if so, which order
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
 
     if (resolved) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
 
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
 
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
+
+    // Check for cycles again after super.resolveInternal
+    if (detectImplicitPrototypeCycle()) {
+      handleTypeCycle(t);
+    }
+
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
\ No newline at end of file
