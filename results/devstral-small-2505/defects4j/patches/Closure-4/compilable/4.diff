diff --git a/tmp/468a2dd3-9297-44d9-80f9-385de5016aed_buggy.java b/tmp/bc9eb33a-86c2-45e6-833b-29a3b35fc052_fixed.java
index d6a560a..c764266 100644
--- a/tmp/468a2dd3-9297-44d9-80f9-385de5016aed_buggy.java
+++ b/tmp/bc9eb33a-86c2-45e6-833b-29a3b35fc052_fixed.java
@@ -1,33 +1,38 @@
   /**
    * Resolve the referenced type within the enclosing scope.
    */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
     // TODO(user): Investigate whether it is really necessary to keep two
     // different mechanisms for resolving named types, and if so, which order
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
 
     if (resolved) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
 
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
 
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
+
+    if (detectImplicitPrototypeCycle()) {
+      handleTypeCycle(t);
+    }
+
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
\ No newline at end of file
