diff --git a/tmp/aef5c62d-42cf-4ff8-90e8-c6792d39a9f5_buggy.java b/tmp/fbbbefcc-d760-409b-bff3-1ad8d3d62ed3_fixed.java
index 5f8ac1a..2322eee 100644
--- a/tmp/aef5c62d-42cf-4ff8-90e8-c6792d39a9f5_buggy.java
+++ b/tmp/fbbbefcc-d760-409b-bff3-1ad8d3d62ed3_fixed.java
@@ -1,34 +1,44 @@
 private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2)
 {
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
     if (depth1 == 1) {
+        // Check if one of the pointers is a variable
+        if (p1.isVariable() || p2.isVariable()) {
+            // If both are variables, compare their values
+            if (p1.isVariable() && p2.isVariable()) {
+                return p1.getValue().compareTo(p2.getValue());
+            }
+            // If one is a variable, return 0 to indicate they are different
+            return 0;
+        }
+
         throw new JXPathException(
                 "Cannot compare pointers that do not belong to the same tree: '"
                         + p1 + "' and '" + p2 + "'");
     }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
