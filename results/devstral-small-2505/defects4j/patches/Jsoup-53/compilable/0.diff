diff --git a/tmp/396bb9b8-fbcb-41c0-b187-67113c2d0b58_buggy.java b/tmp/5558da71-05c1-4d11-bd14-4a04633e5721_fixed.java
index fecb896..e7e8a6a 100644
--- a/tmp/396bb9b8-fbcb-41c0-b187-67113c2d0b58_buggy.java
+++ b/tmp/5558da71-05c1-4d11-bd14-4a04633e5721_fixed.java
@@ -1,34 +1,27 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
-        char last = 0;
+    boolean escaped = false;
 
     do {
         if (isEmpty()) break;
-            Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+        char c = consume();
+        if (escaped) {
+            escaped = false;
+        } else if (c == '\\') {
+            escaped = true;
+        } else if (c == open) {
+            if (depth == 0) start = pos - 1; // set start to the position before the opening bracket
             depth++;
-                    if (start == -1)
-                        start = pos;
-                }
-                else if (c.equals(close))
+        } else if (c == close) {
             depth--;
+            if (depth == 0) {
+                end = pos; // set end to the position of the closing bracket
+                break;
+            }
         }
-
-            if (depth > 0 && last != 0)
-                end = pos; // don't include the outer match pair in the return
-            last = c;
     } while (depth > 0);
+
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
