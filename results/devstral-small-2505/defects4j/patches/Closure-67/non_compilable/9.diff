diff --git a/tmp/5e3eb7b6-ba16-4f77-b982-a8acc4b3f003_buggy.java b/tmp/1ea5dcbb-ca10-4435-bc24-934c804dddeb_fixed.java
index 939f49b..b273f58 100644
--- a/tmp/5e3eb7b6-ba16-4f77-b982-a8acc4b3f003_buggy.java
+++ b/tmp/1ea5dcbb-ca10-4435-bc24-934c804dddeb_fixed.java
@@ -1,21 +1,31 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
+
+    // Check for prototype property assignment
+    if (n.getNext() != null && n.getNext().getType() == Token.DOT) {
+      Node propertyNode = n.getNext().getFirstChild();
+      if (propertyNode.getType() == Token.IDENTIFIER &&
+          propertyNode.getString().equals("prototype")) {
+        return true;
+      }
+    }
+
   }
 
   return false;
 }
\ No newline at end of file
