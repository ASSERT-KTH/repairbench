diff --git a/tmp/60e45646-7b2b-4072-bd53-1b2473e8910a_buggy.java b/tmp/7c100798-58a5-4225-865a-312184cd1e43_fixed.java
index dc93be3..72ff1bd 100644
--- a/tmp/60e45646-7b2b-4072-bd53-1b2473e8910a_buggy.java
+++ b/tmp/7c100798-58a5-4225-865a-312184cd1e43_fixed.java
@@ -1,14 +1,17 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
+    if (startTag.isSelfClosing()) {
+        tokeniser.emit(new Token.EndTag(el.tagName()));  // Ensure self-closing tags emit an end tag
+    }
     return el;
 }
\ No newline at end of file
