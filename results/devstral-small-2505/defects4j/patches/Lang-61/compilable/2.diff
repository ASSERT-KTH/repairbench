diff --git a/tmp/cb005179-00f3-4ed9-80f1-9c373eb384a1_buggy.java b/tmp/bea0a60e-1866-4d2f-89ce-c3b51f817577_fixed.java
index addeb8d..19cb46f 100644
--- a/tmp/cb005179-00f3-4ed9-80f1-9c373eb384a1_buggy.java
+++ b/tmp/bea0a60e-1866-4d2f-89ce-c3b51f817577_fixed.java
@@ -1,38 +1,38 @@
     /**
      * Searches the string builder to find the first reference to the specified
      * string starting searching from the given index.
      * <p>
      * Note that a null input string will return -1, whereas the JDK throws an exception.
      *
      * @param str  the string to find, null returns -1
      * @param startIndex  the index to start at, invalid index rounded to edge
      * @return the first index of the string, or -1 if not found
      */
     public int indexOf(String str, int startIndex) {
         startIndex = (startIndex < 0 ? 0 : startIndex);
         if (str == null || startIndex >= size) {
             return -1;
         }
         int strLen = str.length();
         if (strLen == 1) {
             return indexOf(str.charAt(0), startIndex);
         }
         if (strLen == 0) {
             return startIndex;
         }
         if (strLen > size) {
             return -1;
         }
         char[] thisBuf = buffer;
         int len = thisBuf.length - strLen;
         outer:
-        for (int i = startIndex; i < len; i++) {
+        for (int i = startIndex; i <= len; i++) {
             for (int j = 0; j < strLen; j++) {
                 if (str.charAt(j) != thisBuf[i + j]) {
                     continue outer;
                 }
             }
             return i;
         }
         return -1;
     }
\ No newline at end of file
