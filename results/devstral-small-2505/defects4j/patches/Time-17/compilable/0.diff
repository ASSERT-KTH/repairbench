diff --git a/tmp/7e513719-68e2-4879-bfd2-797089552f54_buggy.java b/tmp/e216a9b9-5bb1-467d-b866-404022480a01_fixed.java
index 03b03d7..18a8958 100644
--- a/tmp/7e513719-68e2-4879-bfd2-797089552f54_buggy.java
+++ b/tmp/e216a9b9-5bb1-467d-b866-404022480a01_fixed.java
@@ -1,25 +1,23 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
 
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
 
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        long adjustedInstant = convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
         // calculate result
+        if (earlierOrLater) {
             // currently in later offset
+            return Math.max(instant, adjustedInstant);
+        } else {
             // currently in earlier offset
+            return Math.min(instant, adjustedInstant);
+        }
     }
\ No newline at end of file
