diff --git a/tmp/f241288f-73f4-44ee-bbc1-12b1cbc365b8_buggy.java b/tmp/da6a20d5-80ce-45d8-a41a-28a7677b5852_fixed.java
index 42b58d0..c94ec05 100644
--- a/tmp/f241288f-73f4-44ee-bbc1-12b1cbc365b8_buggy.java
+++ b/tmp/da6a20d5-80ce-45d8-a41a-28a7677b5852_fixed.java
@@ -1,19 +1,27 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Handle the case where the actual type argument is a TypeVariable
+            TypeVariable actualTypeVar = (TypeVariable) actualTypeArgument;
+            if (contextualActualTypeParameters.containsKey(actualTypeVar)) {
+                contextualActualTypeParameters.put(typeParameter, contextualActualTypeParameters.get(actualTypeVar));
+            } else {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
