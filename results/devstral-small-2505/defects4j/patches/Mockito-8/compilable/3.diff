diff --git a/tmp/6c4f3f70-aef1-4793-81f5-224818b11094_buggy.java b/tmp/dd1e8267-958d-4bb7-bd74-9b66ba82e127_fixed.java
index 42b58d0..6b8a889 100644
--- a/tmp/6c4f3f70-aef1-4793-81f5-224818b11094_buggy.java
+++ b/tmp/dd1e8267-958d-4bb7-bd74-9b66ba82e127_fixed.java
@@ -1,19 +1,28 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
+    // Check for self-referential types to prevent infinite recursion
+    if (classType instanceof Class) {
+        Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+        if (rawType.getTypeParameters().length == 0) {
+            return;
+        }
+    }
+
+    TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
