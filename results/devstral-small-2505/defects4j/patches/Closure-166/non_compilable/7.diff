diff --git a/tmp/345a6385-7685-4310-9e3a-341d6ecb469b_buggy.java b/tmp/40c6b8d3-81bc-4de9-9d8c-7a68e56db5d9_fixed.java
index 5f96616..c8b9a41 100644
--- a/tmp/345a6385-7685-4310-9e3a-341d6ecb469b_buggy.java
+++ b/tmp/40c6b8d3-81bc-4de9-9d8c-7a68e56db5d9_fixed.java
@@ -1,20 +1,18 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint.isUnionType()) {
+      for (JSType type : constraint.toMaybeUnionType().getTypes()) {
+        if (type.isRecordType()) {
+          matchRecordTypeConstraint(type.toObjectType());
+        }
+      }
     }
   }
\ No newline at end of file
