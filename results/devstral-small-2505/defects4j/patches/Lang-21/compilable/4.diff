diff --git a/tmp/4f74827b-8533-4e8f-9d5e-706909a365d1_buggy.java b/tmp/2486a991-9870-4b55-b76b-766eeb7fe82e_fixed.java
index 1650d36..081596c 100644
--- a/tmp/4f74827b-8533-4e8f-9d5e-706909a365d1_buggy.java
+++ b/tmp/2486a991-9870-4b55-b76b-766eeb7fe82e_fixed.java
@@ -1,25 +1,23 @@
-    /**
-     * <p>Checks if two calendar objects represent the same local time.</p>
-     *
-     * <p>This method compares the values of the fields of the two objects.
-     * In addition, both calendars must be the same of the same type.</p>
-     * 
-     * @param cal1  the first calendar, not altered, not null
-     * @param cal2  the second calendar, not altered, not null
-     * @return true if they represent the same millisecond instant
-     * @throws IllegalArgumentException if either date is <code>null</code>
-     * @since 2.1
-     */
 public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
     if (cal1 == null || cal2 == null) {
         throw new IllegalArgumentException("The date must not be null");
     }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
-                cal1.getClass() == cal2.getClass());
+
+    // Create new instances of Calendar in UTC to compare the local times
+    Calendar utcCal1 = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+    Calendar utcCal2 = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+
+    // Set the UTC instances to the same time as the input calendars
+    utcCal1.setTimeInMillis(cal1.getTimeInMillis());
+    utcCal2.setTimeInMillis(cal2.getTimeInMillis());
+
+    // Compare the local times
+    return (utcCal1.get(Calendar.MILLISECOND) == utcCal2.get(Calendar.MILLISECOND) &&
+            utcCal1.get(Calendar.SECOND) == utcCal2.get(Calendar.SECOND) &&
+            utcCal1.get(Calendar.MINUTE) == utcCal2.get(Calendar.MINUTE) &&
+            utcCal1.get(Calendar.HOUR_OF_DAY) == utcCal2.get(Calendar.HOUR_OF_DAY) &&
+            utcCal1.get(Calendar.DAY_OF_YEAR) == utcCal2.get(Calendar.DAY_OF_YEAR) &&
+            utcCal1.get(Calendar.YEAR) == utcCal2.get(Calendar.YEAR) &&
+            utcCal1.get(Calendar.ERA) == utcCal2.get(Calendar.ERA) &&
+            utcCal1.getClass() == utcCal2.getClass());
 }
\ No newline at end of file
