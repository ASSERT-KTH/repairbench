diff --git a/tmp/94371d13-3ba8-4ddc-8fe2-bb341555eeda_buggy.java b/tmp/e3712420-c2e0-4f56-bd14-ff82b85a3117_fixed.java
index 2573d30..6f91f6c 100644
--- a/tmp/94371d13-3ba8-4ddc-8fe2-bb341555eeda_buggy.java
+++ b/tmp/e3712420-c2e0-4f56-bd14-ff82b85a3117_fixed.java
@@ -1,20 +1,31 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
     node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    if (node.isName()) {
+      // Check if the name in the node is assigned to the replacement.
+      if (isNameAssignedTo(node.getString(), replacement)) {
         return false;
       }
+      // Recursively check the parent nodes to ensure safety.
+      Node parent = node.getParent();
+      while (parent != null && parent.isGetProp()) {
+        parent = parent.getFirstChild();
+        if (parent.isName() && isNameAssignedTo(parent.getString(), replacement)) {
+          return false;
+        }
+        parent = parent.getParent();
+      }
+    }
 
     return true;
   }
\ No newline at end of file
