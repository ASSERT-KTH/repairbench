diff --git a/tmp/6d1d9d42-069a-4d62-82bc-f928073760a9_buggy.java b/tmp/4dfc53c4-093b-44c7-a8a7-314568fb2319_fixed.java
index 2573d30..d7191f9 100644
--- a/tmp/6d1d9d42-069a-4d62-82bc-f928073760a9_buggy.java
+++ b/tmp/4dfc53c4-093b-44c7-a8a7-314568fb2319_fixed.java
@@ -1,20 +1,22 @@
-  /**
-   * Checks name referenced in node to determine if it might have
-   * changed.
-   * @return Whether the replacement can be made.
-   */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
     node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    if (node.isName() && isNameAssignedTo(node.getString(), replacement)) {
       return false;
     }
 
+    // Additional check for nested property access
+    if (node.isGetProp()) {
+      Node propNode = node.getFirstChild();
+      if (propNode.isName() && isNameAssignedTo(propNode.getString(), replacement)) {
+        return false;
+      }
+    }
+
     return true;
   }
\ No newline at end of file
