diff --git a/tmp/6d299fa3-bef5-453f-89b5-417ed69d8643_buggy.java b/tmp/6b3fd291-3583-4926-833e-25d7c29686c8_fixed.java
index 98b456f..cdd112c 100644
--- a/tmp/6d299fa3-bef5-453f-89b5-417ed69d8643_buggy.java
+++ b/tmp/6b3fd291-3583-4926-833e-25d7c29686c8_fixed.java
@@ -1,17 +1,24 @@
 final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
     final int sz = size;
     for (int i = 0; i < sz; i++) {
         // inlined from Attribute.html()
         final String key = keys[i];
         final String val = vals[i];
         accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+        if (out.syntax() == Document.OutputSettings.Syntax.html) {
+            if (val == null || (val.equals(key) && Attribute.isBooleanAttribute(key))) {
+                // Do not append value for boolean attributes if they are null or equal to the key
+            } else {
+                accum.append("=\"");
+                Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
+                accum.append('"');
+            }
+        } else {
+            // For other syntaxes, always append the value
             accum.append("=\"");
             Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
             accum.append('"');
         }
     }
 }
\ No newline at end of file
