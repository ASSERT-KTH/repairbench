diff --git a/tmp/3704084d-6b3e-483a-b233-6497ca9c3b09_buggy.java b/tmp/6d3f1bd3-e44e-4ae2-8671-558bd38dfb03_fixed.java
index 388771b..93b214e 100644
--- a/tmp/3704084d-6b3e-483a-b233-6497ca9c3b09_buggy.java
+++ b/tmp/6d3f1bd3-e44e-4ae2-8671-558bd38dfb03_fixed.java
@@ -1,37 +1,36 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {
                 TimeSeriesDataItem item
                         = (TimeSeriesDataItem) this.data.get(index);
                 TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
                 try {
                     copy.add(clone);
                 }
                 catch (SeriesException e) {
                     e.printStackTrace();
                 }
             }
         }
+        copy.setMaxY(Double.NEGATIVE_INFINITY);
+        copy.setMinY(Double.POSITIVE_INFINITY);
+        for (int index = 0; index < copy.getItemCount(); index++) {
+            double value = copy.getValue(index).doubleValue();
+            if (value > copy.getMaxY()) {
+                copy.setMaxY(value);
+            }
+            if (value < copy.getMinY()) {
+                copy.setMinY(value);
+            }
+        }
         return copy;
     }
\ No newline at end of file
