diff --git a/tmp/28a2af1c-baf5-404f-90da-c85a90a45aa7_buggy.java b/tmp/71212cde-685d-4dd9-9b7d-c5d248260f95_fixed.java
index 46817a7..3ba3f37 100644
--- a/tmp/28a2af1c-baf5-404f-90da-c85a90a45aa7_buggy.java
+++ b/tmp/71212cde-685d-4dd9-9b7d-c5d248260f95_fixed.java
@@ -1,16 +1,25 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    RecordType thatRecordType = that.toMaybeRecordType();
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+      if (thatRecordType.hasProperty(property)) {
+        JSType thisType = getPropertyType(property);
+        JSType thatType = thatRecordType.getPropertyType(property);
+        if (thisType.isEquivalentTo(thatType)) {
+          builder.addProperty(property, thisType, getPropertyNode(property));
+        } else {
+          builder.addProperty(property, registry.createUnionType(thisType, thatType), null);
+        }
+      }
+    }
+    for (String property : thatRecordType.getProperties()) {
+      if (!properties.containsKey(property)) {
+        builder.addProperty(property, thatRecordType.getPropertyType(property), null);
       }
     }
     return builder.build();
   }
\ No newline at end of file
