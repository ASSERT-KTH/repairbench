diff --git a/tmp/fbef454c-1847-4e55-8aa0-b21e7aec02cb_buggy.java b/tmp/90fd2787-687e-44bc-8924-fdd8ddc9a28e_fixed.java
index 6cfa79b..ff55a73 100644
--- a/tmp/fbef454c-1847-4e55-8aa0-b21e7aec02cb_buggy.java
+++ b/tmp/90fd2787-687e-44bc-8924-fdd8ddc9a28e_fixed.java
@@ -1,12 +1,28 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>.
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double z = (x - mean) / standardDeviation;
+    if (z > 20.0) {
+        return 1.0;
+    } else if (z < -20.0) {
+        return 0.0;
+    } else {
+        try {
+            return 0.5 * (1.0 + Erf.erf(z / Math.sqrt(2.0)));
+        } catch (MathException e) {
+            if (z > 20.0) {
+                return 1.0;
+            } else if (z < -20.0) {
+                return 0.0;
+            } else {
+                throw e;
+            }
+        }
+    }
 }
\ No newline at end of file
