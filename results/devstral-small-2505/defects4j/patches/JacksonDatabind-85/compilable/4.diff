diff --git a/tmp/d137b5ed-18ce-4dec-8bda-98c7141b4424_buggy.java b/tmp/7cab8aad-76f2-48e2-86a4-57be21b2d9df_fixed.java
index d926eea..ae9a9f2 100644
--- a/tmp/d137b5ed-18ce-4dec-8bda-98c7141b4424_buggy.java
+++ b/tmp/7cab8aad-76f2-48e2-86a4-57be21b2d9df_fixed.java
@@ -1,48 +1,49 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
             return this;
         }
         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
         if (format == null) {
             return this;
         }
         // Simple case first: serialize as numeric timestamp?
         JsonFormat.Shape shape = format.getShape();
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
 
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
         if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                 || format.hasLocale() || format.hasTimeZone()) {
             TimeZone tz = format.getTimeZone();
             final String pattern = format.hasPattern()
                     ? format.getPattern()
                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                     ? format.getLocale()
                     : serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
 
         // Otherwise, need one of these changes:
 
-
         // Jackson's own `StdDateFormat` is quite easy to deal with...
 
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
 //            serializers.reportBadDefinition(handledType(), String.format(
         // Ugh. No way to change `Locale`, create copy; must re-crete completely:
-        return this;
+        SimpleDateFormat defaultFormat = new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale());
+        defaultFormat.setTimeZone(serializers.getTimeZone());
+        return withFormat(Boolean.FALSE, defaultFormat);
     }
\ No newline at end of file
