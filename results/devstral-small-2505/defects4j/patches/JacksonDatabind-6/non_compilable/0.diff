diff --git a/tmp/2030d3fc-549e-4b6a-bb4b-2ebf1fb415c6_buggy.java b/tmp/d7db13ed-a5c5-4f4e-b6f8-04e510e9c59b_fixed.java
index cd412d2..d34e729 100644
--- a/tmp/2030d3fc-549e-4b6a-bb4b-2ebf1fb415c6_buggy.java
+++ b/tmp/d7db13ed-a5c5-4f4e-b6f8-04e510e9c59b_fixed.java
@@ -1,76 +1,95 @@
 protected Date parseAsISO8601(String dateStr, ParsePosition pos)
 {
     /* 21-May-2009, tatu: DateFormat has very strict handling of
      * timezone  modifiers for ISO-8601. So we need to do some scrubbing.
      */
 
     /* First: do we have "zulu" format ('Z' == "GMT")? If yes, that's
      * quite simple because we already set date format timezone to be
      * GMT, and hence can just strip out 'Z' altogether
      */
     int len = dateStr.length();
     char c = dateStr.charAt(len-1);
     DateFormat df;
 
     // [JACKSON-200]: need to support "plain" date...
     if (len <= 10 && Character.isDigit(c)) {
         df = _formatPlain;
         if (df == null) {
             df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);
         }
     } else if (c == 'Z') {
         df = _formatISO8601_z;
         if (df == null) {
             df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
         }
         // [JACKSON-334]: may be missing milliseconds... if so, add
         if (dateStr.charAt(len-4) == ':') {
             StringBuilder sb = new StringBuilder(dateStr);
             sb.insert(len-1, ".000");
             dateStr = sb.toString();
         }
     } else {
         // Let's see if we have timezone indicator or not...
         if (hasTimeZone(dateStr)) {
             c = dateStr.charAt(len-3);
             if (c == ':') { // remove optional colon
                 // remove colon
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.delete(len-3, len-2);
                 dateStr = sb.toString();
             } else if (c == '+' || c == '-') { // missing minutes
                 // let's just append '00'
                 dateStr += "00";
             }
             // Milliseconds partial or missing; and even seconds are optional
             len = dateStr.length();
             // remove 'T', '+'/'-' and 4-digit timezone-offset
             c = dateStr.charAt(len-9);
             if (Character.isDigit(c)) {
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.insert(len-5, ".000");
                 dateStr = sb.toString();
             }
             df = _formatISO8601;
             if (_formatISO8601 == null) {
                 df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
             }
         } else {
             // If not, plain date. Easiest to just patch 'Z' in the end?
             StringBuilder sb = new StringBuilder(dateStr);
             // And possible also millisecond part if missing
             int timeLen = len - dateStr.lastIndexOf('T') - 1;
             if (timeLen <= 8) {
                     sb.append(".000");
             }
             sb.append('Z');
             dateStr = sb.toString();
             df = _formatISO8601_z;
             if (df == null) {
                 df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,
                         _timezone, _locale);
             }
         }
     }
+
+    // Handle partial milliseconds
+    int dotIndex = dateStr.indexOf('.');
+    if (dotIndex != -1) {
+        int endIndex = dateStr.indexOf('+');
+        if (endIndex == -1) {
+            endIndex = dateStr.indexOf('-');
+        }
+        if (endIndex == -1) {
+            endIndex = dateStr.length();
+        }
+        String millisPart = dateStr.substring(dotIndex + 1, endIndex);
+        if (millisPart.length() < 3) {
+            StringBuilder sb = new StringBuilder(dateStr);
+            sb.insert(endIndex, "0".repeat(3 - millisPart.length()));
+            dateStr = sb.toString();
+        }
+    }
+
     return df.parse(dateStr, pos);
 }
\ No newline at end of file
