diff --git a/tmp/0435589c-5973-4a48-a1bb-e18e9da3cf62_buggy.java b/tmp/9910a7ad-84e9-42b8-8ca1-1d5f0ee3e7f3_fixed.java
index 39c4220..7e131b2 100644
--- a/tmp/0435589c-5973-4a48-a1bb-e18e9da3cf62_buggy.java
+++ b/tmp/9910a7ad-84e9-42b8-8ca1-1d5f0ee3e7f3_fixed.java
@@ -1,21 +1,29 @@
 private final static int _parseIndex(String str) {
     final int len = str.length();
     // [Issue#133]: beware of super long indexes; assume we never
     // have arrays over 2 billion entries so ints are fine.
     if (len == 0 || len > 10) {
         return -1;
     }
     for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
+        char c = str.charAt(i);
+        if (c == 'e' || c == 'E') {
+            // Check if the character 'e' or 'E' is followed by a valid exponent
+            if (i + 1 < len && (str.charAt(i + 1) == '+' || str.charAt(i + 1) == '-' || Character.isDigit(str.charAt(i + 1)))) {
+                continue;
+            }
+        }
+        if (c > '9' || c < '0' && c != 'e' && c != 'E' && c != '.') {
             return -1;
         }
     }
-        if (len == 10) {
+    try {
         long l = NumberInput.parseLong(str);
         if (l > Integer.MAX_VALUE) {
             return -1;
         }
+    } catch (NumberFormatException e) {
+        return -1;
     }
     return NumberInput.parseInt(str);
 }
\ No newline at end of file
