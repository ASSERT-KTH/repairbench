diff --git a/tmp/ea3f9752-fb07-4fbd-8421-8cf537615071_buggy.java b/tmp/e7ece166-23ad-4ddb-90c0-48adff900849_fixed.java
index 3c69e10..03c2cf4 100644
--- a/tmp/ea3f9752-fb07-4fbd-8421-8cf537615071_buggy.java
+++ b/tmp/e7ece166-23ad-4ddb-90c0-48adff900849_fixed.java
@@ -1,27 +1,27 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
     private double calculateAsymptoticPValue(final double Umin,
                                              final int n1,
                                              final int n2)
         throws ConvergenceException, MaxCountExceededException {
 
         final int n1n2prod = n1 * n2;
 
         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
         final double EU = n1n2prod / 2.0;
         final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
         final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
         final NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
-        return 2 * standardNormal.cumulativeProbability(z);
+        // Correcting the p-value calculation for large datasets
+        double pValue = 2 * standardNormal.cumulativeProbability(-FastMath.abs(z));
+
+        // Ensure that p-value is within the range [0, 1]
+        if (pValue < 0.0) {
+            pValue = 0.0;
+        } else if (pValue > 1.0) {
+            pValue = 1.0;
+        }
+
+        return pValue;
     }
\ No newline at end of file
