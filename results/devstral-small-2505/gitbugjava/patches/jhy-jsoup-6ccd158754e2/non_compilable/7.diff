diff --git a/tmp/1e098efd-976e-42a4-b683-389567f47520_buggy.java b/tmp/760e9ee7-4642-47f1-af7e-82dbcc56403a_fixed.java
index 23f078d..6204357 100644
--- a/tmp/1e098efd-976e-42a4-b683-389567f47520_buggy.java
+++ b/tmp/760e9ee7-4642-47f1-af7e-82dbcc56403a_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            byte[] utf8Bytes = Character.toString(c).getBytes(StandardCharsets.UTF_8);
+            for (byte b : utf8Bytes) {
+                sb.append('%').append(String.format("%02X", b));
+            }
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
