diff --git a/tmp/513c8a07-5e71-4938-825b-58046efbd7e9_buggy.java b/tmp/eab3e423-abbe-4be9-8819-66692462a996_fixed.java
index 10da689..3037c19 100644
--- a/tmp/513c8a07-5e71-4938-825b-58046efbd7e9_buggy.java
+++ b/tmp/eab3e423-abbe-4be9-8819-66692462a996_fixed.java
@@ -1,7 +1,43 @@
 /** Multiply this by a single digit x.
  * @param x multiplicand
  * @return product of this and x
  */
 public Dfp multiply(final int x) {
-            return multiplyFast(x);
+    // Handle zero
+    if (x == 0) {
+        Dfp result = this.newInstance(this);
+        result.sign = (this.sign == -1) ? -1 : 1;  // preserve sign of zero
+        result.exp = 0;
+        for (int i = 0; i < result.mant.length; i++) {
+            result.mant[i] = 0;
+        }
+        result.nans = FINITE;
+        if (this.isNaN()) {
+            result.nans = QNAN;
+        } else if (this.isInfinite()) {
+            this.getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
+            result.sign = 1;
+            result.nans = QNAN;
+        }
+        return result;
+    }
+
+    if (this.isNaN()) {
+        return this.newInstance(this);
+    }
+
+    if (this.isInfinite()) {
+        Dfp infinity = this.newInstance(this);
+        infinity.sign = (x < 0) ? -this.sign : this.sign;
+        if (x == 0) {
+            this.getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
+            infinity.nans = QNAN;
+            infinity.sign = 1;
+        }
+        return infinity;
+    }
+
+    Dfp result = multiplyFast(Math.abs(x));
+    result.sign = (x < 0) ? -this.sign : this.sign;
+    return result;
 }
\ No newline at end of file
