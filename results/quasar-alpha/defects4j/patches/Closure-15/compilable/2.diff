diff --git a/tmp/01110110-2624-440c-b17b-76eef726c305_buggy.java b/tmp/f849e759-1cf4-45d8-8e14-bbde27729f8c_fixed.java
index b56897c..d9eaf49 100644
--- a/tmp/01110110-2624-440c-b17b-76eef726c305_buggy.java
+++ b/tmp/f849e759-1cf4-45d8-8e14-bbde27729f8c_fixed.java
@@ -1,27 +1,29 @@
 @Override
 public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
+  // When the node is null it means we reached the implicit return
   if (n == null) {
     return false;
   }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+  // For calls with possible side effects
   if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
     return true;
   }
 
+  // For constructor calls with possible side effects
   if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
     return true;
   }
 
+  // in operator has side effects because it throws on bad operands
+  if (n.isIn()) {
+    return true;
+  }
 
   for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
     if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
       return true;
     }
   }
   return false;
 }
\ No newline at end of file
