diff --git a/tmp/0eddd6d7-f39c-4f29-9b2d-e033bd24b72c_buggy.java b/tmp/04771b27-97ba-45b2-9445-c602a0d3ea6f_fixed.java
index d9b400d..eaf04ab 100644
--- a/tmp/0eddd6d7-f39c-4f29-9b2d-e033bd24b72c_buggy.java
+++ b/tmp/04771b27-97ba-45b2-9445-c602a0d3ea6f_fixed.java
@@ -1,21 +1,26 @@
 /**
  * <p>Create a number from a String. If a . is present, it creates a 
  *    Double, otherwise a Long. </p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
 public static Number createNumber(String str)
 {
     try
     {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        // Always return Double type when decimal point exists
+        if (str != null && str.contains(".")) {
+            return new Double(str);
+        } else {
+            return new Long(str);
+        }
     }
     catch (NumberFormatException nfe)
     {
         System.err.println(nfe.getMessage());
     }
 
     return null;
 }
\ No newline at end of file
