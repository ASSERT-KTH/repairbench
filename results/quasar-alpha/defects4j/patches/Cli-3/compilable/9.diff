diff --git a/tmp/d0da461c-c459-4119-8864-86154dc2e3a4_buggy.java b/tmp/d08753d1-0f98-4c4b-9006-179109eae391_fixed.java
index d9b400d..949d78e 100644
--- a/tmp/d0da461c-c459-4119-8864-86154dc2e3a4_buggy.java
+++ b/tmp/d08753d1-0f98-4c4b-9006-179109eae391_fixed.java
@@ -1,21 +1,30 @@
-    /**
-     * <p>Create a number from a String. If a . is present, it creates a 
-     *    Double, otherwise a Long. </p>
-     *
-     * @param str the value
-     * @return the number represented by <code>str</code>, if <code>str</code>
-     * is not a number, null is returned.
-     */
 public static Number createNumber(String str)
 {
     try
     {
         return org.apache.commons.lang.math.NumberUtils.createNumber(str);
     }
     catch (NumberFormatException nfe)
     {
         System.err.println(nfe.getMessage());
     }
 
+    // Attempt to handle special case: parse string as Double explicitly if '.' present
+    try
+    {
+        if (str != null && str.contains("."))
+        {
+            return Double.valueOf(str);
+        }
+        else if (str != null)
+        {
+            return Long.valueOf(str);
+        }
+    }
+    catch (NumberFormatException nfe2)
+    {
+        // Ignore, will return null
+    }
+
     return null;
 }
\ No newline at end of file
