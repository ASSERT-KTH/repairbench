diff --git a/tmp/81de5e62-e23f-4dd0-97e1-90f97dad4af1_buggy.java b/tmp/61340e31-81d6-40c1-be32-76656c9368dd_fixed.java
index 0f439b3..59d0697 100644
--- a/tmp/81de5e62-e23f-4dd0-97e1-90f97dad4af1_buggy.java
+++ b/tmp/61340e31-81d6-40c1-be32-76656c9368dd_fixed.java
@@ -1,38 +1,30 @@
-    /**
-     * Reads bytes from the current tar archive entry.
-     *
-     * This method is aware of the boundaries of the current
-     * entry in the archive and will deal with them as if they
-     * were this stream's start and EOF.
-     *
-     * @param buf The buffer into which to place bytes read.
-     * @param offset The offset at which to place bytes read.
-     * @param numToRead The number of bytes to read.
-     * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
-     */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
     int totalRead = 0;
 
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
 
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
 
-        numToRead = Math.min(numToRead, available());
+    int numToActuallyRead = Math.min(numToRead, available());
 
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
+    int numRead = is.read(buf, offset, numToActuallyRead);
 
-        if (totalRead == -1) {
+    if (numRead == -1) {
+        if (entryOffset < entrySize) {
+            // Truncated entry
+            throw new IOException("Unexpected EOF in the middle of a tar entry");
+        }
         hasHitEOF = true;
-        } else {
-            entryOffset += totalRead;
+        return -1;
     }
 
-        return totalRead;
+    count(numRead);
+    entryOffset += numRead;
+
+    return numRead;
 }
\ No newline at end of file
