diff --git a/tmp/bd9b2da4-1a28-4287-8f3c-8f10a24c8606_buggy.java b/tmp/28c0b5f6-e224-4b1d-83f3-cd7b6ca8b1c2_fixed.java
index 6c0aa19..3a62296 100644
--- a/tmp/bd9b2da4-1a28-4287-8f3c-8f10a24c8606_buggy.java
+++ b/tmp/28c0b5f6-e224-4b1d-83f3-cd7b6ca8b1c2_fixed.java
@@ -1,20 +1,24 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
+    this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
     in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+    current.bytesReadFromEntry = 0; // reset entry byte counter
+    lastStoredEntry = null; // clear last stored entry reference
+    closed = false; // mark stream as open
+    hitCentralDirectory = false; // reset central directory hit flag
+    entriesRead = 0;  // reset entries count
+    firstEntry = true; // signal start of stream
 }
\ No newline at end of file
