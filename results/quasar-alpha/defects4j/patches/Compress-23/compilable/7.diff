diff --git a/tmp/4ae34e51-eb53-4aba-ba44-eec67e3eb18a_buggy.java b/tmp/15d6ac55-3201-447c-b278-479e90bc252f_fixed.java
index 0e18f59..d06cdc6 100644
--- a/tmp/4ae34e51-eb53-4aba-ba44-eec67e3eb18a_buggy.java
+++ b/tmp/15d6ac55-3201-447c-b278-479e90bc252f_fixed.java
@@ -1,13 +1,20 @@
 @Override
 InputStream decode(final InputStream in, final Coder coder,
         byte[] password) throws IOException {
     byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
+    long dictSize = coder.properties[1] & 0xFFL;
     for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
+        dictSize |= ( (coder.properties[i + 1] & 0xFFL) << (8 * i));
     }
     if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
         throw new IOException("Dictionary larger than 4GiB maximum size");
     }
-            return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
+    int dictionarySize;
+    if (dictSize > Integer.MAX_VALUE) {
+        // cap to max int to avoid overflow and avoid xz's too big error
+        dictionarySize = Integer.MAX_VALUE;
+    } else {
+        dictionarySize = (int) dictSize;
+    }
+    return new LZMAInputStream(in, -1, propsByte, dictionarySize);
 }
\ No newline at end of file
