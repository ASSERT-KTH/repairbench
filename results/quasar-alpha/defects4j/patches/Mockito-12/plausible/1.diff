diff --git a/tmp/7d609584-383b-460c-9235-1e05e0b0a282_buggy.java b/tmp/4340bdbd-49af-4a11-b103-2b6cb419ebc6_fixed.java
index bada2b6..db40e8b 100644
--- a/tmp/7d609584-383b-460c-9235-1e05e0b0a282_buggy.java
+++ b/tmp/4340bdbd-49af-4a11-b103-2b6cb419ebc6_fixed.java
@@ -1,16 +1,23 @@
 /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
+ * Finds the generic type (parameterized type) of the field.
+ * If the field is not generic it returns Object.class.
  *
-     * @param field
-     * @return
+ * @param field the field to inspect
+ * @return the generic class or Object.class if unavailable
  */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
+        // Unable to resolve to a class, fall through
     }
-        
     return Object.class;
 }
\ No newline at end of file
