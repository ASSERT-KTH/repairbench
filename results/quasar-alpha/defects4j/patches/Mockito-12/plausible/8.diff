diff --git a/tmp/ed1a10db-d48a-4b19-bc51-51da459a73d0_buggy.java b/tmp/674e16f0-5a69-435a-8139-50099de1e2ef_fixed.java
index bada2b6..9169851 100644
--- a/tmp/ed1a10db-d48a-4b19-bc51-51da459a73d0_buggy.java
+++ b/tmp/674e16f0-5a69-435a-8139-50099de1e2ef_fixed.java
@@ -1,16 +1,24 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
+ * <p>
+ * Handles nested generics by returning the raw type (Class) of the first actual type argument.
  *
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof ParameterizedType) {
+            // If nested generic, extract raw type
+            Type raw = ((ParameterizedType) actual).getRawType();
+            if (raw instanceof Class) {
+                return (Class) raw;
+            }
+        } else if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
         }
-        
+    }
     return Object.class;
 }
\ No newline at end of file
