diff --git a/tmp/88627341-4961-4dad-bd6a-c11633875794_buggy.java b/tmp/1bc6652c-4415-4fa5-9b23-4c5ed04fc372_fixed.java
index bada2b6..94be1c3 100644
--- a/tmp/88627341-4961-4dad-bd6a-c11633875794_buggy.java
+++ b/tmp/1bc6652c-4415-4fa5-9b23-4c5ed04fc372_fixed.java
@@ -1,16 +1,24 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            // Nested parameterized type, return the raw type
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
+        // Other cases: TypeVariable, WildcardType, etc.
+        return Object.class;
     }
-        
     return Object.class;
 }
\ No newline at end of file
