diff --git a/tmp/68a31a7b-294c-4b18-8f22-aefca37fd93a_buggy.java b/tmp/4a7466db-7410-44d8-927c-81ed7847e480_fixed.java
index 0dbce00..2162507 100644
--- a/tmp/68a31a7b-294c-4b18-8f22-aefca37fd93a_buggy.java
+++ b/tmp/4a7466db-7410-44d8-927c-81ed7847e480_fixed.java
@@ -1,33 +1,41 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
+
+            // Simple case first: explicit numeric shape
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            boolean hasPattern = format.hasPattern();
+            boolean hasLocale = format.hasLocale();
+            boolean hasTimeZone = (format.getTimeZone() != null);
+
+            // If explicit STRING shape, OR pattern/locale/timezone are explicitly defined, we'll serialize as String
+            if ((shape == JsonFormat.Shape.STRING)
+                || hasPattern || hasLocale || hasTimeZone) {
                 TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
+                final String pattern = hasPattern
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
+                final Locale loc = hasLocale
                                 ? format.getLocale()
                                 : serializers.getLocale();
+
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+            // else: Shape.ANY with no specific overrides: fall through to default
         }
     }
     return this;
 }
\ No newline at end of file
