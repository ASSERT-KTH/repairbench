diff --git a/tmp/d28a3189-7bf3-42ae-9c36-878c3a65693d_buggy.java b/tmp/b51838db-315f-4860-b88f-11ba4620f38c_fixed.java
index 0dbce00..36ba840 100644
--- a/tmp/d28a3189-7bf3-42ae-9c36-878c3a65693d_buggy.java
+++ b/tmp/b51838db-315f-4860-b88f-11ba4620f38c_fixed.java
@@ -1,33 +1,40 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            boolean hasPattern = format.hasPattern();
+            boolean hasLocale = format.hasLocale();
+            boolean hasTimeZone = (format.getTimeZone() != null);
+
+            if ((shape == JsonFormat.Shape.STRING)
+                || hasPattern
+                || hasLocale
+                || hasTimeZone) {
                 TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
+                final String pattern = hasPattern
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
+                final Locale loc = hasLocale
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
     return this;
 }
\ No newline at end of file
