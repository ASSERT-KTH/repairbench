diff --git a/tmp/fc45a6c6-442f-4365-a210-ba975b36f482_buggy.java b/tmp/ff60d540-caae-4a6b-afa1-3e6bd9e22df8_fixed.java
index be2af16..1aab7b9 100644
--- a/tmp/fc45a6c6-442f-4365-a210-ba975b36f482_buggy.java
+++ b/tmp/ff60d540-caae-4a6b-afa1-3e6bd9e22df8_fixed.java
@@ -1,29 +1,31 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    // Attempt Julian first
     instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
     if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        // Use Gregorian if after cutover
+        instant = iGregorianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
+        if (instant < iCutoverMillis) {
+            // In invalid cutover gap
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
