diff --git a/tmp/2bb8b59a-d15f-407d-a14d-62536a63e8e3_buggy.java b/tmp/15893e8a-ebb4-4356-9ad7-8124d294f9e2_fixed.java
index be2af16..d677c18 100644
--- a/tmp/2bb8b59a-d15f-407d-a14d-62536a63e8e3_buggy.java
+++ b/tmp/15893e8a-ebb4-4356-9ad7-8124d294f9e2_fixed.java
@@ -1,29 +1,38 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    // Try Julian first, since for pre-cutover and cutover-leap-year dates, Julian may accept it
+    instant = iJulianChronology.getDateTimeMillis(
+            year, monthOfYear, dayOfMonth,
             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        // It is after or at cutover instant; Gregorian might be more appropriate
+        long gregorianInstant;
+        try {
+            gregorianInstant = iGregorianChronology.getDateTimeMillis(
+                    year, monthOfYear, dayOfMonth,
+                    hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // Illegal in Gregorian; check if Julian instant is acceptable
+            // but since instant >= cutover, and illegal in Gregorian, then it's invalid
+            throw e;
+        }
+        if (gregorianInstant < iCutoverMillis) {
+            // Gregorian date is before cutover instant, but calendar says otherwise, invalid
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        // use gregorianInstant, because date is post-cutover
+        instant = gregorianInstant;
     }
     return instant;
 }
\ No newline at end of file
