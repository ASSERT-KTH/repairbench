diff --git a/tmp/d25ebeb0-3ef5-4a61-bb51-eded68373766_buggy.java b/tmp/60846a46-e92e-43c4-83b5-5cb2282a3c19_fixed.java
index be2af16..2aebaa0 100644
--- a/tmp/d25ebeb0-3ef5-4a61-bb51-eded68373766_buggy.java
+++ b/tmp/60846a46-e92e-43c4-83b5-5cb2282a3c19_fixed.java
@@ -1,29 +1,28 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
+    // First, try Julian chronology
+    long instant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    if (instant >= iCutoverMillis) {
+        // If it's after or at cutover, recompute using Gregorian
         instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            // falls within the cutover gap
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
