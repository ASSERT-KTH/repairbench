diff --git a/tmp/7f5dd0a0-43f5-4a80-91fc-9ee59e284a5b_buggy.java b/tmp/18975d4f-ce1b-44f3-8727-eca09a6ad46c_fixed.java
index be2af16..5236e67 100644
--- a/tmp/7f5dd0a0-43f5-4a80-91fc-9ee59e284a5b_buggy.java
+++ b/tmp/18975d4f-ce1b-44f3-8727-eca09a6ad46c_fixed.java
@@ -1,29 +1,42 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // First, try Julian calendar for pre-cutover dates or when Gregorian rejects day (e.g., Feb 29 1500)
     long instant;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    } catch (IllegalArgumentException e) {
+        // Gregorian calendar rejected the input, try Julian
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
-                throw new IllegalArgumentException("Specified date does not exist");
+            // Julian result is in Gregorian calendar zone, so invalid date
+            throw e;
+        }
+        return instant;
+    }
+
+    if (instant < iCutoverMillis) {
+        // instant before cutover may require Julian treatment
+        long instantJulian = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instantJulian < iCutoverMillis) {
+            return instantJulian;
         }
     }
+
     return instant;
 }
\ No newline at end of file
