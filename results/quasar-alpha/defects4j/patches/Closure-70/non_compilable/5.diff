diff --git a/tmp/422fe612-a41c-4c70-9e28-b2a950dfd852_buggy.java b/tmp/7659e2ec-334a-4948-8207-fc9c9e21e736_fixed.java
index 1530b34..b3d79e3 100644
--- a/tmp/422fe612-a41c-4c70-9e28-b2a950dfd852_buggy.java
+++ b/tmp/7659e2ec-334a-4948-8207-fc9c9e21e736_fixed.java
@@ -1,23 +1,34 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
+        JSType parameterType = null;
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          parameterType = jsDocParameter.getJSType();
           jsDocParameter = jsDocParameter.getNext();
+        }
+        // Always declare the argument with its JSDoc type or null,
+        // but explicitly allow duplicate declarations to be flagged
+        defineSlot(astParameter, functionNode, parameterType, true);
+      }
     } else {
+      // No parameter docs; declare parameters with no explicit type
+      for (Node astParameter : astParameters.children()) {
         defineSlot(astParameter, functionNode, null, true);
       }
     }
+  } else {
+    // No function type info; declare parameters with no explicit type
+    for (Node astParameter : astParameters.children()) {
+      defineSlot(astParameter, functionNode, null, true);
     }
   }
 } // end declareArguments
\ No newline at end of file
