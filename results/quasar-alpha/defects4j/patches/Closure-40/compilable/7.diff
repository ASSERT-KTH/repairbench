diff --git a/tmp/bda0a92a-bfa3-47c1-9828-843b0a8794f2_buggy.java b/tmp/9d17f100-ed8d-4527-8343-37ef21b32644_fixed.java
index 670114d..3d088f3 100644
--- a/tmp/bda0a92a-bfa3-47c1-9828-843b0a8794f2_buggy.java
+++ b/tmp/9d17f100-ed8d-4527-8343-37ef21b32644_fixed.java
@@ -1,48 +1,63 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
+    Node callTarget = n.getFirstChild();
+    NameInformation ns = createNameInformation(t, callTarget, n);
+    // Handle special case: goog.inherits(A, B);
     if (ns != null && ns.onlyAffectsClassDef) {
+      if (callTarget.isGetProp() && "inherits".equals(callTarget.getLastChild().getString())) {
+        Node subclassNode = callTarget.getNext();
+        if (subclassNode != null) {
+          // Defensive: check subclassNode
+          if (subclassNode.isName() || subclassNode.isGetProp()) {
+            JsName subclassName = getName(subclassNode.getQualifiedName(), false);
+            if (subclassName != null) {
+              refNodes.add(new ClassDefiningFunctionNode(
+                  subclassName, n, parent, parent.getParent()));
+            }
+          }
+        }
+      } else {
         JsName name = getName(ns.name, false);
         if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
         }
       }
     }
   }
+}
\ No newline at end of file
