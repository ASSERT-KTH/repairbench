diff --git a/tmp/60b3d4d2-d4a3-4fee-b0e2-0337fe9a4dd9_buggy.java b/tmp/ec88b861-b4c0-4a9b-a8e1-6be19d4b0397_fixed.java
index 1478ee1..c5ed8e2 100644
--- a/tmp/60b3d4d2-d4a3-4fee-b0e2-0337fe9a4dd9_buggy.java
+++ b/tmp/ec88b861-b4c0-4a9b-a8e1-6be19d4b0397_fixed.java
@@ -1,24 +1,24 @@
-  /** Compute the cross-product of two vectors.
-   * @param v1 first vector
-   * @param v2 second vector
-   * @return the cross product v1 ^ v2 as a new Vector
-   */
 public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {
 
+    double normV2 = v2.getNormSq();
+    if (normV2 == 0) {
+        // avoid division by zero, return the naive computation
+        return new Vector3D(v1.y * v2.z - v1.z * v2.y,
+                            v1.z * v2.x - v1.x * v2.z,
+                            v1.x * v2.y - v1.y * v2.x);
+    }
 
-      // rescale both vectors without losing precision,
-      // to ensure their norm are the same order of magnitude
-
-      // we reduce cancellation errors by preconditioning,
-      // we replace v1 by v3 = v1 - rho v2 with rho chosen in order to compute
-      // v3 without loss of precision. See Kahan lecture
-      // "Computing Cross-Products and Rotations in 2- and 3-Dimensional Euclidean Spaces"
-      // available at http://www.cs.berkeley.edu/~wkahan/MathH110/Cross.pdf
-
-      // compute rho as an 8 bits approximation of v1.v2 / v2.v2
+    // approximate rho as an 8 bits approximation of (v1·v2)/(v2·v2)
+    double dot = v1.dotProduct(v2);
+    double rho = Math.rint((256 * dot) / normV2) / 256.0;
 
+    // compute v3 = v1 - rho * v2 
+    double x3 = v1.x - rho * v2.x;
+    double y3 = v1.y - rho * v2.y;
+    double z3 = v1.z - rho * v2.z;
 
-      // compute cross product from v3 and v2 instead of v1 and v2
-      return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);
+    return new Vector3D(y3 * v2.z - z3 * v2.y,
+                        z3 * v2.x - x3 * v2.z,
+                        x3 * v2.y - y3 * v2.x);
 
 }
\ No newline at end of file
