diff --git a/tmp/22b16dbf-91a1-4d4c-941a-cc94945254ca_buggy.java b/tmp/3002c392-0e18-4164-ac51-d50ee47bc35f_fixed.java
index 0722547..37223d2 100644
--- a/tmp/22b16dbf-91a1-4d4c-941a-cc94945254ca_buggy.java
+++ b/tmp/3002c392-0e18-4164-ac51-d50ee47bc35f_fixed.java
@@ -1,26 +1,27 @@
 @Override
 public void feedInput(byte[] buf, int start, int end) throws IOException
 {
     // Must not have remaining input
     if (_inputPtr < _inputEnd) {
         _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
     }
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
     // and shouldn't have been marked as end-of-input
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
     // Time to update pointers first
     _currInputProcessed += _origBufferLen;
     
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+    // Fix: adjust row start based on actual new buffer length
+    int newBufferLen = end - start;
+    _currInputRowStart = start - newBufferLen;
 
     // And then update buffer settings
     _inputBuffer = buf;
     _inputPtr = start;
     _inputEnd = end;
-        _origBufferLen = end - start;
+    _origBufferLen = newBufferLen;
 }
\ No newline at end of file
