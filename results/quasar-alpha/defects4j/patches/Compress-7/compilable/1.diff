diff --git a/tmp/d3e22c6d-aae7-405e-8ede-1b6f8bd9e93c_buggy.java b/tmp/fab25552-d379-4b3e-89a0-fc666e527d6b_fixed.java
index d6662c7..1e284d0 100644
--- a/tmp/d3e22c6d-aae7-405e-8ede-1b6f8bd9e93c_buggy.java
+++ b/tmp/fab25552-d379-4b3e-89a0-fc666e527d6b_fixed.java
@@ -1,23 +1,21 @@
-    /**
-     * Parse an entry name from a buffer.
-     * Parsing stops when a NUL is found
-     * or the buffer length is reached.
-     *
-     * @param buffer The buffer from which to parse.
-     * @param offset The offset into the buffer from which to parse.
-     * @param length The maximum number of bytes to parse.
-     * @return The entry name.
-     */
 public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
+    byte[] nameBytes;
     int end = offset + length;
-
+    int nameLen = 0;
+    // Find the position of the first NUL byte or length limit
     for (int i = offset; i < end; ++i) {
         if (buffer[i] == 0) {
             break;
         }
-            result.append((char) buffer[i]);
+        nameLen++;
+    }
+    nameBytes = new byte[nameLen];
+    System.arraycopy(buffer, offset, nameBytes, 0, nameLen);
+    try {
+        // Use ISO-8859-1 which maps bytes directly to same char values (preserves 8-bit data)
+        return new String(nameBytes, "ISO-8859-1");
+    } catch (java.io.UnsupportedEncodingException e) {
+        // Fallback in unlikely case encoding is missing
+        return new String(nameBytes);
     }
-
-        return result.toString();
 }
\ No newline at end of file
