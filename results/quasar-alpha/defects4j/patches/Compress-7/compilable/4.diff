diff --git a/tmp/b27db069-6184-40d4-b564-9c1c8488da86_buggy.java b/tmp/ebeeb3f6-599b-4980-941f-0ac8a074f740_fixed.java
index d6662c7..dfe11ca 100644
--- a/tmp/b27db069-6184-40d4-b564-9c1c8488da86_buggy.java
+++ b/tmp/ebeeb3f6-599b-4980-941f-0ac8a074f740_fixed.java
@@ -1,23 +1,24 @@
-    /**
-     * Parse an entry name from a buffer.
-     * Parsing stops when a NUL is found
-     * or the buffer length is reached.
-     *
-     * @param buffer The buffer from which to parse.
-     * @param offset The offset into the buffer from which to parse.
-     * @param length The maximum number of bytes to parse.
-     * @return The entry name.
-     */
 public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
+    byte[] nameBytes;
     int end = offset + length;
 
+    // Find first NUL terminator
+    int nameLength = length;
     for (int i = offset; i < end; ++i) {
         if (buffer[i] == 0) {
+            nameLength = i - offset;
             break;
         }
-            result.append((char) buffer[i]);
     }
 
-        return result.toString();
+    nameBytes = new byte[nameLength];
+    System.arraycopy(buffer, offset, nameBytes, 0, nameLength);
+
+    try {
+        // Use ISO-8859-1 which preserves byte values 0x80-0xFF as single characters
+        return new String(nameBytes, "ISO-8859-1");
+    } catch (java.io.UnsupportedEncodingException e) {
+        // Fallback, though ISO-8859-1 must be supported
+        return new String(nameBytes);
+    }
 }
\ No newline at end of file
