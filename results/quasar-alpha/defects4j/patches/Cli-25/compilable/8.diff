diff --git a/tmp/fa5ff5c3-aeec-4d2c-a73c-88b0b8466e91_buggy.java b/tmp/4fe8c3da-774c-414e-93b0-f06dc5bce1b4_fixed.java
index 875b31b..97a8041 100644
--- a/tmp/fa5ff5c3-aeec-4d2c-a73c-88b0b8466e91_buggy.java
+++ b/tmp/4fe8c3da-774c-414e-93b0-f06dc5bce1b4_fixed.java
@@ -1,54 +1,58 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     if (nextLineTabStop >= width)
     {
         // stops infinite loop happening
         nextLineTabStop = width - 1;
     }
 
     // all following lines must be padded with nextLineTabStop space
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            text = padding + text.substring(pos).trim();
+        text = text.substring(pos).trim();
+
+        // ignore indent for very long chunks
+        if (text.length() > width)
+        {
+            pos = width;
+        }
+        else
+        {
+            text = padding + text;
             pos = findWrapPos(text, width, 0);
-
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
