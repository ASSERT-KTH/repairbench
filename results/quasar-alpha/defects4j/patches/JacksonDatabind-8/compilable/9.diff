diff --git a/tmp/b73a39ba-b21f-4def-923d-0bb35a63831c_buggy.java b/tmp/c5dd4f69-ee17-4fc0-b08f-10c2c39c7cef_fixed.java
index c9da1b7..294b6e3 100644
--- a/tmp/b73a39ba-b21f-4def-923d-0bb35a63831c_buggy.java
+++ b/tmp/c5dd4f69-ee17-4fc0-b08f-10c2c39c7cef_fixed.java
@@ -1,33 +1,29 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+        if ((_explicitCreators & mask) != 0) { // already had explicitly annotated
             if (!explicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            // both explicit: conflict
             throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                     + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
         }
+        // old is implicit, new is explicit? override
+        if (explicit) {
+            _explicitCreators |= mask;
+            _creators[typeIndex] = _fixAccess(newOne);
+            return;
+        }
+        // both implicit (non-explicit), keep existing
+        return;
     }
+    // no existing creator
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
