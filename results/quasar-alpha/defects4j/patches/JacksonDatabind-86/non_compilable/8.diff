diff --git a/tmp/ac8d9662-4b3b-4a83-9900-37d6a22ff8e1_buggy.java b/tmp/f5af4127-673d-4dd5-bf6e-dfc3332cf255_fixed.java
index e69de29..2088f87 100644
--- a/tmp/ac8d9662-4b3b-4a83-9900-37d6a22ff8e1_buggy.java
+++ b/tmp/f5af4127-673d-4dd5-bf6e-dfc3332cf255_fixed.java
@@ -0,0 +1,29 @@
+@Override
+public JavaType constructType(Type type) {
+    JavaType result = _typeCache.get(type);
+    if (result != null) {
+        return result;
+    }
+
+    // For recursive types, pre-add a placeholder to avoid infinite recursion
+    ResolvedRecursiveType resolvedRecursiveType = new ResolvedRecursiveType(type);
+    _typeCache.put(type, resolvedRecursiveType);
+
+    try {
+        result = _fromAny(null, type, TypeBindings.emptyBindings());
+        if (resolvedRecursiveType != result) {
+            resolvedRecursiveType.setReference(result);
+            // Replace placeholder with resolved type in cache
+            _typeCache.put(type, result);
+        } else {
+            // For fully recursive type, ensure recursive placeholder remains in cache
+            _typeCache.put(type, resolvedRecursiveType);
+            result = resolvedRecursiveType;
+        }
+        return result;
+    } catch (Throwable t) {
+        // Remove placeholder on failure
+        _typeCache.remove(type);
+        throw t;
+    }
+}
\ No newline at end of file
