diff --git a/tmp/6b5ce285-3129-48cb-bebe-91031aaf4159_buggy.java b/tmp/a2a0f352-903e-4020-a379-0cf28150b2c5_fixed.java
index 2573d30..b41940d 100644
--- a/tmp/6b5ce285-3129-48cb-bebe-91031aaf4159_buggy.java
+++ b/tmp/a2a0f352-903e-4020-a379-0cf28150b2c5_fixed.java
@@ -1,20 +1,29 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  Node getProp1 = node;
+  Node getProp2 = replacement;
+
+  // Walk down to root object of the property chain for both nodes
+  while (getProp1.isGetProp() && getProp2 != null && getProp2.isGetProp()) {
+    getProp1 = getProp1.getFirstChild();
+    getProp2 = getProp2.getFirstChild();
+  }
+
+  if (getProp1.isName() && getProp2 != null && getProp2.isName()
+      && getProp1.getString().equals(getProp2.getString())) {
+    return true;
+  }
+
+  // Otherwise play it safe and do not replace.
   return false;
 }
\ No newline at end of file
-
-    return true;
-  }
