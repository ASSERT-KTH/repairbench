diff --git a/tmp/71753f7f-8666-46da-9d07-105194a2b05c_buggy.java b/tmp/45951ab7-5b35-4cbf-8434-1ea807f3763c_fixed.java
index 2573d30..1aa0ccf 100644
--- a/tmp/71753f7f-8666-46da-9d07-105194a2b05c_buggy.java
+++ b/tmp/45951ab7-5b35-4cbf-8434-1ea807f3763c_fixed.java
@@ -1,20 +1,33 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
   node = node.getFirstChild();
   if (node.isName()
       && isNameAssignedTo(node.getString(), replacement)) {
     return false;
   }
 
+  // Additional check: if the replacement node's first child references the same root,
+  // it is unsafe to replace, e.g., x.parentNode.parentNode -> x.parentNode.parentNode;
+  if (replacement.isGetProp()) {
+    Node replacementRoot = replacement;
+    while (replacementRoot.isGetProp()) {
+      replacementRoot = replacementRoot.getFirstChild();
+    }
+    if (node.isName() && replacementRoot.isName() &&
+        node.getString().equals(replacementRoot.getString())) {
+      return false;
+    }
+  }
+
   return true;
 }
\ No newline at end of file
