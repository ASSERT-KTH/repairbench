diff --git a/tmp/176fe16b-ebd8-4361-bc2e-1d18b5987e70_buggy.java b/tmp/7f115c3f-5863-480a-879a-f79b816116c4_fixed.java
index 1a63a66..30fbc45 100644
--- a/tmp/176fe16b-ebd8-4361-bc2e-1d18b5987e70_buggy.java
+++ b/tmp/7f115c3f-5863-480a-879a-f79b816116c4_fixed.java
@@ -1,21 +1,18 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
+    // Special inclusion: if subclass has the same superclass (this._class is an interface),
+    // accept narrowing even if not strict subtype (2023-03; for default implementations)
+    if (!_class.isAssignableFrom(subclass)) {
+        if (!_class.isInterface() || !subclass.getSuperclass().equals(Object.class) || !_class.isAssignableFrom(subclass.getSuperclass())) {
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
-                    */
+        }
+    }
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
