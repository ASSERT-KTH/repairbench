diff --git a/tmp/02293c12-ef9b-4554-b91c-7d12816fce08_buggy.java b/tmp/fbb4cb4f-2853-4233-8429-d1854b20f720_fixed.java
index 1a63a66..d15cfc1 100644
--- a/tmp/02293c12-ef9b-4554-b91c-7d12816fce08_buggy.java
+++ b/tmp/fbb4cb4f-2853-4233-8429-d1854b20f720_fixed.java
@@ -1,21 +1,18 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+    // If subclass is NOT assignable to _class, consider error or just new instance
+    if (!_class.isAssignableFrom(subclass)) {
+        // Not a subtype; maybe error or handle as unrelated
+        // For now, construct with subclass explicitly without hierarchy stitching
+        return new SimpleType(subclass, _bindings, null, null,
+                _valueHandler, _typeHandler, _asStatic);
+    }
+    // Compatible subtype: stitch hierarchy with this as super type
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
