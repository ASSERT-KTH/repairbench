diff --git a/tmp/c070b8c2-843b-4f2f-be1b-5fb0c633698f_buggy.java b/tmp/9c1072ca-73a9-4af4-ac58-413f3f7b4809_fixed.java
index 1a63a66..872bc7d 100644
--- a/tmp/c070b8c2-843b-4f2f-be1b-5fb0c633698f_buggy.java
+++ b/tmp/9c1072ca-73a9-4af4-ac58-413f3f7b4809_fixed.java
@@ -1,21 +1,24 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
     // Should we check that there is a sub-class relationship?
     // 15-Jan-2016, tatu: Almost yes, but there are some complications with
     //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
     // TODO: fix in 2.8
         /*
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
                 */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+    // If subclass is a superclass (or unrelated), preserve supertypes info
+    Class<?> currSuper = subclass.getSuperclass();
+    JavaType superClass = null;
+    if (currSuper != null && _class.isAssignableFrom(currSuper)) {
+        superClass = _narrow(currSuper);
+    }
+    return new SimpleType(subclass, _bindings, superClass, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
