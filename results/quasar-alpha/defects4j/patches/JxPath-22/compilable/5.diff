diff --git a/tmp/3ea0cc6a-1e35-471b-9ea5-43971f293ab4_buggy.java b/tmp/21a05f73-5177-4ff6-b345-4d1aa615370d_fixed.java
index 1bd0d7e..4ff45ee 100644
--- a/tmp/3ea0cc6a-1e35-471b-9ea5-43971f293ab4_buggy.java
+++ b/tmp/21a05f73-5177-4ff6-b345-4d1aa615370d_fixed.java
@@ -1,31 +1,38 @@
 /**
  * Get the ns uri of the specified node.
  * @param node Node to check
  * @return String ns uri
  */
 public static String getNamespaceURI(Node node) {
     if (node instanceof Document) {
         node = ((Document) node).getDocumentElement();
     }
 
+    if (!(node instanceof Element)) {
+        return null;
+    }
+
     Element element = (Element) node;
-
     String uri = element.getNamespaceURI();
+
     if (uri == null) {
         String prefix = getPrefix(node);
         String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
 
         Node aNode = node;
-            while (aNode != null) {
-                if (aNode.getNodeType() == Node.ELEMENT_NODE) {
+        String found = null;
+        while (aNode != null && aNode.getNodeType() == Node.ELEMENT_NODE) {
             Attr attr = ((Element) aNode).getAttributeNode(qname);
             if (attr != null) {
+                // Important fix: if namespace has an *empty* value, treat as ""
+                if (!attr.getValue().isEmpty()) {
                     return attr.getValue();
                 }
+                found = ""; // found an explicitly empty namespace decl
             }
             aNode = aNode.getParentNode();
         }
-            return null;
+        return found;
     }
     return uri;
 }
\ No newline at end of file
