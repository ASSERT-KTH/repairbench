diff --git a/tmp/65c78d54-ec0d-49e3-9280-98a4948c90b6_buggy.java b/tmp/04cbd4be-637b-4d18-b280-5c97646293e5_fixed.java
index d357c7e..a0243b2 100644
--- a/tmp/65c78d54-ec0d-49e3-9280-98a4948c90b6_buggy.java
+++ b/tmp/04cbd4be-637b-4d18-b280-5c97646293e5_fixed.java
@@ -1,16 +1,30 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
     
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
-        return deferredBlockStreams.get(0);
+    InputStream currentStream = deferredBlockStreams.get(0);
+
+    // Handle empty stream case:
+    currentStream.mark(1);
+    int b = currentStream.read();
+    if (b == -1) {
+        // stream is empty -- remove and close it
+        deferredBlockStreams.remove(0);
+        currentStream.close();
+        if (deferredBlockStreams.isEmpty()) {
+            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        }
+        currentStream = deferredBlockStreams.get(0);
+    } else {
+        currentStream.reset();
+    }
+
+    return currentStream;
 }
\ No newline at end of file
