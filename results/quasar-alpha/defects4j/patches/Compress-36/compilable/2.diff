diff --git a/tmp/6c97ae21-657d-4e93-a714-1652e6989c5c_buggy.java b/tmp/927e4e57-3b30-416f-a56e-82cc7f1868d3_fixed.java
index d357c7e..b6b90a8 100644
--- a/tmp/6c97ae21-657d-4e93-a714-1652e6989c5c_buggy.java
+++ b/tmp/927e4e57-3b30-416f-a56e-82cc7f1868d3_fixed.java
@@ -1,16 +1,26 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
 
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
-        return deferredBlockStreams.get(0);
+    InputStream current = deferredBlockStreams.get(0);
+    if (current != null) {
+        // check if we've exhausted this stream already
+        current.mark(1);
+        int b = current.read();
+        if (b == -1) {
+            // exhausted current stream, remove it and return an empty ByteArrayInputStream
+            deferredBlockStreams.remove(0);
+            return new ByteArrayInputStream(new byte[0]);
+        } else {
+            current.reset();
+        }
+    }
+    return current;
 }
\ No newline at end of file
