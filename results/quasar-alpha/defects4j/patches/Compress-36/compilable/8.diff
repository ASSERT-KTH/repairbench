diff --git a/tmp/2170dd4c-c5a7-4106-8e9d-c46618b062f7_buggy.java b/tmp/06ec0745-d024-460f-9d21-4f8a5e690ff6_fixed.java
index d357c7e..55eba4c 100644
--- a/tmp/2170dd4c-c5a7-4106-8e9d-c46618b062f7_buggy.java
+++ b/tmp/06ec0745-d024-460f-9d21-4f8a5e690ff6_fixed.java
@@ -1,16 +1,12 @@
 private InputStream getCurrentStream() throws IOException {
-        if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+    while (!deferredBlockStreams.isEmpty()) {
+        if (deferredBlockStreams.size() == 1) {
+            return deferredBlockStreams.get(0);
         }
-        
-        while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
-        return deferredBlockStreams.get(0);
+    // No streams left, treat as empty stream to handle 0-sized entries
+    return new ByteArrayInputStream(new byte[0]);
 }
\ No newline at end of file
