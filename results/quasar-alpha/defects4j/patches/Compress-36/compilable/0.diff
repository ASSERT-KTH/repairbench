diff --git a/tmp/c48d648f-bd63-4a1a-a69d-cc0aec415fd4_buggy.java b/tmp/4036c7d0-cb24-4c7b-9a65-d301b11cabe2_fixed.java
index d357c7e..256dcbf 100644
--- a/tmp/c48d648f-bd63-4a1a-a69d-cc0aec415fd4_buggy.java
+++ b/tmp/4036c7d0-cb24-4c7b-9a65-d301b11cabe2_fixed.java
@@ -1,16 +1,16 @@
 private InputStream getCurrentStream() throws IOException {
-        if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+    while (!deferredBlockStreams.isEmpty()) {
+        if (deferredBlockStreams.size() == 1) {
+            return deferredBlockStreams.get(0);
         }
-        
-        while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder's
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
-        return deferredBlockStreams.get(0);
+    // When entry has empty stream, this list can be empty
+    // In that case, return an empty InputStream instead of throwing
+    return new ByteArrayInputStream(new byte[0]);
 }
\ No newline at end of file
