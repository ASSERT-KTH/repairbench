diff --git a/tmp/345ddb78-4b54-4ea2-9665-131225c81adc_buggy.java b/tmp/2578a33e-955b-4d8e-8d1f-9b1725ae88e8_fixed.java
index 4e8b037..de8c8f7 100644
--- a/tmp/345ddb78-4b54-4ea2-9665-131225c81adc_buggy.java
+++ b/tmp/2578a33e-955b-4d8e-8d1f-9b1725ae88e8_fixed.java
@@ -1,20 +1,33 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
     // grab the correct default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
+    // if still empty, try parser's stored default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // If user provided some values but didn't provide as many as specified, 
+    // we potentially need to augment with extra defaults.
+    List optionDefaults = (List) this.defaultValues.get(option);
+
+    if (valueList == null) {
+        valueList = new ArrayList();
+    } else {
+        valueList = new ArrayList(valueList); // copy values
+    }
+
+    if (optionDefaults != null) {
+        int max = option.getArgument().getMaximum();
+        for (int i = valueList.size(); (max < 0 || i < max) && i < optionDefaults.size(); ++i) {
+            valueList.add(optionDefaults.get(i));
+        }
+    }
+
+    return valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
