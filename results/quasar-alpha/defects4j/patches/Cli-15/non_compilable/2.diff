diff --git a/tmp/471ad383-accd-4d2f-9a2c-441224eba5bc_buggy.java b/tmp/90310ff7-fe77-4126-8924-198bf24a683b_fixed.java
index 4e8b037..d69bda6 100644
--- a/tmp/471ad383-accd-4d2f-9a2c-441224eba5bc_buggy.java
+++ b/tmp/90310ff7-fe77-4126-8924-198bf24a683b_fixed.java
@@ -1,20 +1,35 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    if (valueList == null || valueList.isEmpty()) {
+        // if no user-supplied values, try defaults
         valueList = defaultValues;
-        }
-
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+        if (valueList == null || valueList.isEmpty()) {
             valueList = (List) this.defaultValues.get(option);
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+        if (valueList == null) {
+            valueList = Collections.EMPTY_LIST;
+        }
+        return valueList;
+    }
+
+    // Values present in user command line input, possibly incomplete w.r.t max cardinality
+    int max = option.getArgument().getMaximum();
+    if (max == Integer.MAX_VALUE) {
+        return valueList;
+    }
+
+    List suppliedList = new ArrayList(valueList);
+
+    // fill from the defaults if more defaults exist
+    List argumentDefaults = (List) this.defaultValues.get(option);
+    if (argumentDefaults != null && !argumentDefaults.isEmpty()) {
+        for (int i = suppliedList.size(); i < max && i < argumentDefaults.size(); i++) {
+            suppliedList.add(argumentDefaults.get(i));
+        }
+    }
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return suppliedList;
 }
\ No newline at end of file
