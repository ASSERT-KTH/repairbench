diff --git a/tmp/d2cf37e4-a1fa-462d-8b60-0813b3ad61fe_buggy.java b/tmp/1642ff82-8254-4477-8056-621739ac1cfe_fixed.java
index 4e8b037..b5afe6d 100644
--- a/tmp/d2cf37e4-a1fa-462d-8b60-0813b3ad61fe_buggy.java
+++ b/tmp/1642ff82-8254-4477-8056-621739ac1cfe_fixed.java
@@ -1,20 +1,38 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
+public List getValues(final Option option, List defaultValues) {
+    // Initialize the list with user provided values
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If no values were provided, try provided defaults
+    if (valueList == null || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If still empty, try command-wide defaults
+    if (valueList == null || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // If none found, return empty list
+    if (valueList == null) {
+        return Collections.EMPTY_LIST;
+    }
+
+    // If option specifies a maximum number of values, consider only up to max, and supply defaults to fill if less
+    int maximum = option.getArgument().getMaximum();
+    if (maximum < Integer.MAX_VALUE) {
+        List fullList = new ArrayList();
+        fullList.addAll(valueList);
+
+        // Fill with defaults if existing less than max
+        List allDefaults = (List) this.defaultValues.get(option);
+        if (allDefaults != null) {
+            for (int i = fullList.size(); i < maximum && i < allDefaults.size(); i++) {
+                fullList.add(allDefaults.get(i));
+            }
+        }
+
+        return fullList;
+    }
+
+    return valueList;
 }
\ No newline at end of file
