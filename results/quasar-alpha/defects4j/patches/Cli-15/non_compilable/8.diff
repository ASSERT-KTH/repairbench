diff --git a/tmp/af06177e-5786-4e97-bace-ae37b0331b2b_buggy.java b/tmp/bf0a229c-9ada-4b59-bb08-034b26b262d9_fixed.java
index 4e8b037..0f67316 100644
--- a/tmp/af06177e-5786-4e97-bace-ae37b0331b2b_buggy.java
+++ b/tmp/bf0a229c-9ada-4b59-bb08-034b26b262d9_fixed.java
@@ -1,20 +1,37 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    if (valueList == null || valueList.isEmpty()) {
+        // no values, use defaults
+        valueList = (defaultValues != null) ? new ArrayList(defaultValues) : null;
+    } else if (defaultValues != null && !defaultValues.isEmpty()) {
+        // some values present, possibly add *remaining* defaults
+        int maxArgs = option.getArgument().getMaximum();
+        int supplied = valueList.size();
+
+        if (maxArgs < Integer.MAX_VALUE && supplied < maxArgs) {
+            // clone to new list to avoid mutating internal structures
+            valueList = new ArrayList(valueList);
+            ListIterator iter = defaultValues.listIterator();
+            // skip defaults added as explicit input
+            for (int i = 0; i < supplied && iter.hasNext(); i++) {
+                iter.next();
+            }
+            // add remaining defaults up to max
+            while (supplied < maxArgs && iter.hasNext()) {
+                valueList.add(iter.next());
+                supplied++;
+            }
+        }
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    if ((valueList == null || valueList.isEmpty()) && this.defaultValues != null) {
+        List defaultsFromMap = (List) this.defaultValues.get(option);
+        if (defaultsFromMap != null && !defaultsFromMap.isEmpty()) {
+            valueList = new ArrayList(defaultsFromMap);
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
