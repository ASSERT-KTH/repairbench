diff --git a/tmp/673f6823-d012-4bc3-a98f-4f2ed40f73ab_buggy.java b/tmp/d7324d2f-66cf-4b18-8637-f5a40bf0a73d_fixed.java
index 0313249..831c48f 100644
--- a/tmp/673f6823-d012-4bc3-a98f-4f2ed40f73ab_buggy.java
+++ b/tmp/d7324d2f-66cf-4b18-8637-f5a40bf0a73d_fixed.java
@@ -1,32 +1,32 @@
-    /**
-     * Specialized method for removing specified existing entry.
-     * NOTE: entry MUST exist, otherwise an exception is thrown.
-     */
 public void remove(SettableBeanProperty propToRm)
 {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
     boolean found = false;
 
     for (int i = 1, end = _hashArea.length; i < end; i += 2) {
         SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
         if (prop == null) {
             continue;
         }
         if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
+            // The key in _hashArea is at index (i - 1)
+            Object nameKey = _hashArea[i - 1];
+            if (nameKey instanceof String) {
+                found = key.equals(nameKey);
+            } else {
+                // Fallback in unlikely case nameKey not String
                 found = key.equals(prop.getName());
+            }
             if (found) {
-                    // need to leave a hole here
                 _propsInOrder[_findFromOrdered(prop)] = null;
                 continue;
             }
         }
         props.add(prop);
     }
     if (!found) {
         throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
     }
     init(props);
 }
\ No newline at end of file
