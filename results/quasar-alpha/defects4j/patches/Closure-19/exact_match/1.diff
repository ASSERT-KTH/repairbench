diff --git a/tmp/ec00c112-bc00-4be1-bf01-319b932853bb_buggy.java b/tmp/9342cebe-25d2-4f02-84e3-c3098e8a89e2_fixed.java
index fa42cd9..7b41564 100644
--- a/tmp/ec00c112-bc00-4be1-bf01-319b932853bb_buggy.java
+++ b/tmp/9342cebe-25d2-4f02-84e3-c3098e8a89e2_fixed.java
@@ -1,27 +1,24 @@
-  /**
-   * Declares a refined type in {@code scope} for the name represented by
-   * {@code node}. It must be possible to refine the type of the given node in
-   * the given scope, as determined by {@link #getTypeIfRefinable}.
-   */
 protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
   switch (node.getType()) {
     case Token.NAME:
       scope.inferSlotType(node.getString(), type);
       break;
 
     case Token.GETPROP:
       String qualifiedName = node.getQualifiedName();
       Preconditions.checkNotNull(qualifiedName);
 
       JSType origType = node.getJSType();
       origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
       scope.inferQualifiedSlot(node, qualifiedName, origType, type);
       break;
 
-        // "this" references aren't currently modeled in the CFG.
+    case Token.THIS:
+      // Do not refine 'this' references; no inference
+      break;
 
     default:
       throw new IllegalArgumentException("Node cannot be refined. \n" +
           node.toStringTree());
   }
 }
\ No newline at end of file
