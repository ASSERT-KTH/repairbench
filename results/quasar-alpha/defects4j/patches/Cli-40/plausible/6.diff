diff --git a/tmp/b24d6740-c1ff-4b75-98e7-24fc1329aa0f_buggy.java b/tmp/ff5d4575-3180-458a-b4dc-57b7e7fa1b8e_fixed.java
index a7d0787..b0d3683 100644
--- a/tmp/b24d6740-c1ff-4b75-98e7-24fc1329aa0f_buggy.java
+++ b/tmp/ff5d4575-3180-458a-b4dc-57b7e7fa1b8e_fixed.java
@@ -1,54 +1,57 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
 public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
 {
     if (PatternOptionBuilder.STRING_VALUE == clazz)
     {
         return (T) str;
     }
     else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
     {
         return (T) createObject(str);
     }
     else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
     {
         return (T) createNumber(str);
     }
     else if (PatternOptionBuilder.DATE_VALUE == clazz)
     {
         return (T) createDate(str);
     }
     else if (PatternOptionBuilder.CLASS_VALUE == clazz)
     {
         return (T) createClass(str);
     }
     else if (PatternOptionBuilder.FILE_VALUE == clazz)
     {
         return (T) createFile(str);
     }
     else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
     {
         return (T) openFile(str);
     }
     else if (PatternOptionBuilder.FILES_VALUE == clazz)
     {
         return (T) createFiles(str);
     }
     else if (PatternOptionBuilder.URL_VALUE == clazz)
     {
         return (T) createURL(str);
     }
+    else if (clazz != null && Number.class.isAssignableFrom(clazz))
+    {
+        try {
+            Number number = createNumber(str);
+            if (!clazz.isInstance(number)) {
+                throw new ParseException("Value '" + str + "' is not a valid instance of " + clazz.getName());
+            }
+            return (T) number;
+        } catch (Exception e) {
+            throw new ParseException("Unable to create number of type " + clazz.getName() + " from '" + str + "'");
+        }
+    }
     else
     {
-            return null;
+        // unknown target type
+        throw new ParseException("Unable to handle the class: " + (clazz != null ? clazz.getName() : "null"));
     }
 }
\ No newline at end of file
