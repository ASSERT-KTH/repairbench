diff --git a/tmp/04065af5-cd4f-4ab8-bdf6-427332047576_buggy.java b/tmp/6bc1726f-f559-415c-bf05-f390cec7607a_fixed.java
index a7d0787..dbd5624 100644
--- a/tmp/04065af5-cd4f-4ab8-bdf6-427332047576_buggy.java
+++ b/tmp/6bc1726f-f559-415c-bf05-f390cec7607a_fixed.java
@@ -1,54 +1,72 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
 public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
 {
     if (PatternOptionBuilder.STRING_VALUE == clazz)
     {
         return (T) str;
     }
     else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
     {
         return (T) createObject(str);
     }
     else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
     {
+        try {
             return (T) createNumber(str);
+        } catch (Exception e) {
+            throw new ParseException("Unable to parse the value '" + str + "' as a number");
+        }
     }
     else if (PatternOptionBuilder.DATE_VALUE == clazz)
     {
+        try {
             return (T) createDate(str);
+        } catch (Exception e) {
+            throw new ParseException("Unable to parse the value '" + str + "' as a date");
+        }
     }
     else if (PatternOptionBuilder.CLASS_VALUE == clazz)
     {
+        try {
             return (T) createClass(str);
+        } catch (Exception e) {
+            throw new ParseException("Unable to find or load the class '" + str + "'");
+        }
     }
     else if (PatternOptionBuilder.FILE_VALUE == clazz)
     {
         return (T) createFile(str);
     }
     else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
     {
         return (T) openFile(str);
     }
     else if (PatternOptionBuilder.FILES_VALUE == clazz)
     {
         return (T) createFiles(str);
     }
     else if (PatternOptionBuilder.URL_VALUE == clazz)
     {
+        try {
             return (T) createURL(str);
+        } catch (Exception e) {
+            throw new ParseException("Unable to parse the value '" + str + "' as a URL");
+        }
+    }
+    else if (clazz != null && Number.class.isAssignableFrom(clazz))
+    {
+        try {
+            Number num = createNumber(str);
+            if (!clazz.isInstance(num)) {
+                throw new ParseException("Value '" + str + "' is not of type " + clazz.getSimpleName());
+            }
+            return (T) num;
+        } catch (Exception e) {
+            throw new ParseException("Unable to convert value '" + str + "' to type " + clazz.getSimpleName());
+        }
     }
     else
     {
         return null;
     }
 }
\ No newline at end of file
