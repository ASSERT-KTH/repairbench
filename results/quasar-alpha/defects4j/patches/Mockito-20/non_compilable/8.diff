diff --git a/tmp/375a5aef-5bea-43d3-9bbe-d97fb0f7c31e_buggy.java b/tmp/74cdf95c-6a59-4900-8578-9b3abf61888f_fixed.java
index f9a9b5b..b5ae895 100644
--- a/tmp/375a5aef-5bea-43d3-9bbe-d97fb0f7c31e_buggy.java
+++ b/tmp/74cdf95c-6a59-4900-8578-9b3abf61888f_fixed.java
@@ -1,30 +1,44 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
+        // If mock requires constructor (for spying real objects or init fields), instantiate differently
+        if (settings.isUsingConstructor()) {
+            try {
+                mockInstance = classInstantiator.instantiate(
+                        mockedProxyType,
+                        settings.getOuterClassInstance(),
+                        settings.getConstructorArgs()
+                );
+            } catch (org.mockito.internal.creation.instance.InstantiationException e) {
+                throw new org.mockito.exceptions.base.MockitoException("Unable to create mock instance of type '" +
+                        mockedProxyType.getSimpleName() + "'", e);
+            }
+        } else {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
+        }
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ), cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
         throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
