diff --git a/tmp/d6058a13-2126-4c69-8d85-aeb599b723bb_buggy.java b/tmp/36b9be9a-646a-48bc-b38b-a5d5973ec7e4_fixed.java
index fecb896..37c2e40 100644
--- a/tmp/d6058a13-2126-4c69-8d85-aeb599b723bb_buggy.java
+++ b/tmp/36b9be9a-646a-48bc-b38b-a5d5973ec7e4_fixed.java
@@ -1,34 +1,39 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    boolean inQuote = false;
+    char quoteChar = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+
+        if (last == ESC) {
+            // escaped, skip the logic
+        } else {
+            if (inQuote) {
+                if (c == quoteChar)
+                    inQuote = false;
+            } else {
+                if (c == '\'' || c == '"') {
+                    inQuote = true;
+                    quoteChar = c;
+                } else if (c.equals(open)) {
                     depth++;
                     if (start == -1)
                         start = pos;
-                }
-                else if (c.equals(close))
+                } else if (c.equals(close)) {
                     depth--;
                 }
+            }
+        }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
+
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
