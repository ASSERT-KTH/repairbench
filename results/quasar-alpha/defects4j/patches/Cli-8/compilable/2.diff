diff --git a/tmp/0085e25f-6736-4e40-a55d-01c186f99a86_buggy.java b/tmp/c1b99120-9114-4a7d-a5ef-be87c804c84f_fixed.java
index 8e93a5e..d392542 100644
--- a/tmp/0085e25f-6736-4e40-a55d-01c186f99a86_buggy.java
+++ b/tmp/c1b99120-9114-4a7d-a5ef-be87c804c84f_fixed.java
@@ -1,43 +1,52 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
+    int pos = 0;
+    while (text != null && text.length() > 0)
     {
-            sb.append(rtrim(text));
-
-            return sb;
+        int newLinePos = text.indexOf(defaultNewLine);
+        String line;
+        if (newLinePos != -1 && newLinePos <= width)
+        {
+            line = text.substring(0, newLinePos);
+            text = text.substring(newLinePos + defaultNewLine.length());
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
+        else
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            int wrapPos = findWrapPos(text, width, pos);
 
-            if (pos == -1)
+            if (wrapPos == -1)
             {
-                sb.append(text);
-
-                return sb;
+                line = text;
+                text = "";
             }
+            else
+            {
+                line = text.substring(0, wrapPos);
+                text = text.substring(wrapPos).trim();
+            }
+        }
+
+        sb.append(rtrim(line));
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        if (text.length() > 0)
+        {
+            sb.append(defaultNewLine);
+            // add padding to subsequent lines
+            sb.append(createPadding(nextLineTabStop));
+        }
     }
+
+    return sb;
 }
\ No newline at end of file
