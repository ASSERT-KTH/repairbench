diff --git a/tmp/8ccabf80-64d0-430d-a2b8-cc0a7bafea87_buggy.java b/tmp/ba9f0d2d-ff6d-499d-9423-073458788077_fixed.java
index c6cb157..f81c7f3 100644
--- a/tmp/8ccabf80-64d0-430d-a2b8-cc0a7bafea87_buggy.java
+++ b/tmp/ba9f0d2d-ff6d-499d-9423-073458788077_fixed.java
@@ -1,14 +1,23 @@
 /**
  * Method called to expand size of the current segment, to
  * accommodate for more contiguous content. Usually only
  * used when parsing tokens like names if even then.
  */
 public char[] expandCurrentSegment()
 {
     final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
     final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+
+    int newLen;
+    if (len >= MAX_SEGMENT_LEN) {
+        // Always grow beyond MAX_SEGMENT_LEN, slowly, to guarantee strict growth
+        newLen = len + Math.max(1, len >> 2); // increase by at least 1, otherwise by 25%
+    } else {
+        // usual growth, but limit capped at MAX_SEGMENT_LEN boundary
+        newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        if (newLen == len) { // prevent growth stall at boundary
+            newLen = len + 1;
+        }
+    }
     return (_currentSegment = Arrays.copyOf(curr, newLen));
 }
\ No newline at end of file
