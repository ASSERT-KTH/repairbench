You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
    /**
     * <p>
     * Gets the fraction percentage as a <tt>double</tt>. This calculates the
     * fraction as the numerator divided by denominator multiplied by 100.
     * </p>
     *
     * @return the fraction percentage as a <tt>double</tt>.
     */
    public double percentageValue() {
        return multiply(100).doubleValue();
    }

```

The code fails the following tests.

Test `org.apache.commons.math3.fraction.FractionTest::testMath835`:
```java
    @Test
    public void testMath835() {
        final int numer = Integer.MAX_VALUE / 99;
        final int denom = 1;
        final double percentage = 100 * ((double) numer) / denom;
        final Fraction frac = new Fraction(numer, denom);
        // With the implementation that preceded the fix suggested in MATH-835,
        // this test was failing, due to overflow.
        Assert.assertEquals(percentage, frac.percentageValue(), Math.ulp(percentage));
    }

```
Test `org.apache.commons.math3.fraction.FractionTest::testMath835` error:
```
junit.framework.AssertionFailedError: expected:<2.1691754E9> but was:<-2.125791896E9>
```


Please provide a fixed version of the buggy function, and only that function, inside a code block.
