diff --git a/tmp/585d5fa6-1b87-4d79-9f7b-9c2e24bbd228_buggy.java b/tmp/1cb8507c-deea-47e4-8ddc-003fb76eb10e_fixed.java
index fa6828a..aa2a198 100644
--- a/tmp/585d5fa6-1b87-4d79-9f7b-9c2e24bbd228_buggy.java
+++ b/tmp/1cb8507c-deea-47e4-8ddc-003fb76eb10e_fixed.java
@@ -1,5 +1,23 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
+        // prioritize exact type matches first
+        Set<Object> exactTypeMocks = new LinkedHashSet<>();
+        Set<Object> assignableMocks = new LinkedHashSet<>();
+        for (Object mock : mocks) {
+            Class<?> mockClass = mock.getClass();
+            Class<?> fieldType = field.getType();
+            if (fieldType.equals(mockClass)) {
+                exactTypeMocks.add(mock);
+            } else if (fieldType.isAssignableFrom(mockClass)) {
+                assignableMocks.add(mock);
+            }
+        }
+        if (!exactTypeMocks.isEmpty()) {
+            mockCandidateFilter.filterCandidate(exactTypeMocks, field, fieldInstance).thenInject();
+        } else if (!assignableMocks.isEmpty()) {
+            mockCandidateFilter.filterCandidate(assignableMocks, field, fieldInstance).thenInject();
+        } else {
             mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
         }
     }
+}
\ No newline at end of file
