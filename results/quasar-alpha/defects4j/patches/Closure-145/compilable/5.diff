diff --git a/tmp/f85d596c-4a65-4efc-aa88-ec7b2cc7ae05_buggy.java b/tmp/23c3df85-bd01-4467-92be-7e03577e7c62_fixed.java
index 57f69c5..e1409c6 100644
--- a/tmp/f85d596c-4a65-4efc-aa88-ec7b2cc7ae05_buggy.java
+++ b/tmp/23c3df85-bd01-4467-92be-7e03577e7c62_fixed.java
@@ -1,12 +1,22 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
  * labels).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
     // For labels with block children, we need to ensure that a
     // labeled FUNCTION or DO isn't generated when extraneous BLOCKs
     // are skipped.
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
+    // If this node is a single label, check what's under it.
+    if (n.getType() == Token.LABEL && n.getFirstChild() != null) {
+        Node first = n.getFirstChild();
+        // A label of a single statement, recursively check.
+        return isOneExactlyFunctionOrDo(first);
+    }
+    // Otherwise, if it's a block, check if it contains exactly one child
+    if (n.getType() == Token.BLOCK && n.hasOneChild()) {
+        Node onlyChild = n.getFirstChild();
+        return isOneExactlyFunctionOrDo(onlyChild);
+    }
+    // Base case: single FUNCTION or DO node
     return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
 }
\ No newline at end of file
