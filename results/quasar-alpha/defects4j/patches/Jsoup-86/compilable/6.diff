diff --git a/tmp/1f774d5e-76a3-4ca2-a2a6-e7153e61864b_buggy.java b/tmp/922cd211-3b5d-42a7-a20d-2f89f3bf87b0_fixed.java
index b8e7fdb..b7c98d3 100644
--- a/tmp/1f774d5e-76a3-4ca2-a2a6-e7153e61864b_buggy.java
+++ b/tmp/922cd211-3b5d-42a7-a20d-2f89f3bf87b0_fixed.java
@@ -1,15 +1,38 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+    String inner;
+    if (data.length() > 2) { // Check length to avoid substring errors
+        inner = data.substring(1, data.length() -1);
+    } else {
+        return null;
+    }
+    Document doc;
+    try {
+        doc = Jsoup.parse("<" + inner + ">", baseUri(), Parser.xmlParser());
+    } catch (Exception e) {
+        return null; // fail gracefully if parse fails
+    }
+    if (doc.childNodeSize() == 0) {
+        return null;
+    }
+    Node first = doc.childNode(0);
+    // Ensure first is an Element node representing the declaration
+    if (!(first instanceof Element))
+        return null;
+
+    Element el = (Element) first;
+
+    // sanity check: if it's a script or style or other unexpected pseudo element, don't treat as declaration
+    String tagName = NodeUtils.parser(doc).settings().normalizeTag(el.tagName());
+    if (tagName.equals("script") || tagName.equals("style")) {
+        return null;
+    }
+
+    XmlDeclaration decl = new XmlDeclaration(tagName, data.startsWith("!"));
     decl.attributes().addAll(el.attributes());
-        }
     return decl;
 }
\ No newline at end of file
