diff --git a/tmp/c1019352-31f7-4bfb-bf8d-37cff6afd70c_buggy.java b/tmp/491cec05-ba43-4ab8-8b54-bb34e952ee1e_fixed.java
index b8e7fdb..036746b 100644
--- a/tmp/c1019352-31f7-4bfb-bf8d-37cff6afd70c_buggy.java
+++ b/tmp/491cec05-ba43-4ab8-8b54-bb34e952ee1e_fixed.java
@@ -1,15 +1,42 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+    // Validate that the data is at least 2 chars long (e.g., "!-" or "?x")
+    if (data == null || data.length() < 2) {
+        return null;
+    }
+    String inner;
+    try {
+        inner = data.substring(1, data.length() - 1);
+    } catch (Exception e) {
+        // Defensive against malformed data
+        return null;
+    }
+    Document doc = Jsoup.parse("<" + inner + ">", baseUri(), Parser.xmlParser());
+    if (doc.childNodeSize() == 0) {
+        return null;
+    }
+
+    Node firstChild = doc.childNode(0);
+    // Defensive: check if firstChild is a Element and also an XmlDeclaration
+    if (!(firstChild instanceof Element)) {
+        return null;
+    }
+    Element el = (Element) firstChild;
+
+    // Only generate XmlDeclaration if the parsed element is an XML declaration, which looks like <?xml ... ?> or similar
+    // So tagName usually starts with '?'
+    // When parsing an actual <? declaration parse, the tag name will be e.g., "?xml"
+    // Disallow other tags/comments that might masquerade
+    String tagName = el.tagName();
+    if (!tagName.startsWith("?") && !tagName.startsWith("!")) {
+        return null;
+    }
+
+    XmlDeclaration decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(tagName), data.startsWith("!"));
     decl.attributes().addAll(el.attributes());
-        }
     return decl;
 }
\ No newline at end of file
