diff --git a/tmp/81772dda-4e47-4a10-bcf4-631061ccebf5_buggy.java b/tmp/d60ec200-5702-4838-b424-f554b75ead94_fixed.java
index 939f49b..8436983 100644
--- a/tmp/81772dda-4e47-4a10-bcf4-631061ccebf5_buggy.java
+++ b/tmp/d60ec200-5702-4838-b424-f554b75ead94_fixed.java
@@ -1,21 +1,27 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+      && n.getType() == Token.GETPROP) {
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    Node target = n;
+    // Handle chained assignments like: a.b.c = a.b.d = function() {...};
+    while (target.getType() == Token.GETPROP) {
+      Node prop = target.getLastChild();
+      if (prop.getType() != Token.STRING) {
+        break;
+      }
+      Node recv = target.getFirstChild();
+      if (recv.getType() == Token.GETPROP) {
+        Node recvProp = recv.getLastChild();
+        if (recvProp.getType() == Token.STRING &&
+            recvProp.getString().equals("prototype")) {
           return true;
         }
+        target = recv;
+      } else {
+        break;
+      }
     }
   }
-
   return false;
 }
\ No newline at end of file
