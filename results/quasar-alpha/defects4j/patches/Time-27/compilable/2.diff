diff --git a/tmp/23693581-a7de-4bb4-b253-8380b9c44939_buggy.java b/tmp/4e82cd7c-ddb4-4210-bb9c-8e1cdfc16c0d_fixed.java
index ec6c9ee..cd82c47 100644
--- a/tmp/23693581-a7de-4bb4-b253-8380b9c44939_buggy.java
+++ b/tmp/4e82cd7c-ddb4-4210-bb9c-8e1cdfc16c0d_fixed.java
@@ -1,21 +1,21 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
         sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+        return new PeriodFormatter(sep, f.getParser());  // FIX: combine sep as printer, parser from nested
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
