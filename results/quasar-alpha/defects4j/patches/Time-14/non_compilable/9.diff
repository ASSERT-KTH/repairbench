diff --git a/tmp/cd591667-ab5f-4880-8afe-9782a4c1fd74_buggy.java b/tmp/213574a0-fd21-4134-bb83-041897b31734_fixed.java
index 10616db..c9a5840 100644
--- a/tmp/cd591667-ab5f-4880-8afe-9782a4c1fd74_buggy.java
+++ b/tmp/213574a0-fd21-4134-bb83-041897b31734_fixed.java
@@ -1,19 +1,35 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+
+        // Check if dayOfMonth exists in partial
+        for (int i = 0; i < partial.size(); i++) {
+            DateTimeFieldType fieldType = partial.getFieldType(i);
+            if (fieldType == DateTimeFieldType.monthOfYear()) {
+                int newMonth = newValues[i];
+                for (int j = 0; j < partial.size(); j++) {
+                    if (partial.getFieldType(j) == DateTimeFieldType.dayOfMonth()) {
+                        int maxDay = iChronology.dayOfMonth().getMaximumValue(0L, newValues);
+                        newValues[j] = Math.min(newValues[j], maxDay);
+                        break;
+                    }
+                }
+                break;
+            }
+        }
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
