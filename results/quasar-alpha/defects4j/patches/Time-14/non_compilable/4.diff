diff --git a/tmp/2c18317d-18e8-4573-af60-6c9afb9c98b9_buggy.java b/tmp/f127d886-6005-4cd5-9066-d1301f4ecadb_fixed.java
index 10616db..de60218 100644
--- a/tmp/2c18317d-18e8-4573-af60-6c9afb9c98b9_buggy.java
+++ b/tmp/f127d886-6005-4cd5-9066-d1301f4ecadb_fixed.java
@@ -1,19 +1,48 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        // Store original day-of-month if available
+        DateTimeField field = partial.getField(fieldIndex);
+        int originalDom = 0;
+        boolean isMonthLike = false;
+        for (int i = 0; i < partial.size(); i++) {
+            DateTimeField f = partial.getField(i);
+            if ("dayOfMonth".equals(f.getName())) {
+                originalDom = values[i];
+                isMonthLike = true;
+                break;
+            }
+        }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+
+        // If the partial has a dayOfMonth, and the day dropped (e.g. 31->28),
+        // then adjust back up if possible to match originalDom
+        if (isMonthLike) {
+            for (int i = 0; i < partial.size(); i++) {
+                DateTimeField f = partial.getField(i);
+                if ("dayOfMonth".equals(f.getName())) {
+                    int max = f.getMaximumValue(instant);
+                    if (originalDom > max) {
+                        result[i] = max;
+                    } else {
+                        result[i] = originalDom;
+                    }
+                    break;
+                }
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
