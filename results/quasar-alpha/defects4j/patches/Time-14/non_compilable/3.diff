diff --git a/tmp/23b569a1-3ebc-41ff-9959-8d8a58ed26df_buggy.java b/tmp/71c89cf2-4789-432e-b4e7-7c604dea5beb_fixed.java
index 10616db..f398de9 100644
--- a/tmp/23b569a1-3ebc-41ff-9959-8d8a58ed26df_buggy.java
+++ b/tmp/71c89cf2-4789-432e-b4e7-7c604dea5beb_fixed.java
@@ -1,19 +1,44 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
+        // set starting instant
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
-            instant = add(instant, valueToAdd);
+        // save original dayOfMonth if available
+        int originalDom = -1;
+        DurationFieldType dayOfMonthType = DateTimeFieldType.dayOfMonth();
+        DateTimeField dayField = null;
+        // Check if partial includes dayOfMonth
+        for (int i = 0, isize = partial.size(); i < isize; i++) {
+            if (partial.getFieldType(i).equals(dayOfMonthType)) {
+                dayField = partial.getFieldType(i).getField(iChronology);
+                originalDom = values[i];
+                break;
+            }
+        }
+        // apply addition
+        instant = partial.getFieldType(fieldIndex).getField(iChronology).add(instant, valueToAdd);
+        // fix day-of-month if needed
+        if (dayField != null && originalDom > 0) {
+            int dom = dayField.get(instant);
+            int maxDom = dayField.getMaximumValue(instant);
+            if (dom < originalDom) {
+                if (originalDom <= maxDom) {
+                    try {
+                        instant = dayField.set(instant, originalDom);
+                    } catch (IllegalArgumentException ex) {
+                        // ignore, keep as-is if still invalid
+                    }
+                }
+            }
+        }
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
