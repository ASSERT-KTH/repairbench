diff --git a/tmp/9aa081f0-214b-426f-87da-232c928a53b1_buggy.java b/tmp/b2eb320d-b2f9-4fdd-bf8a-99ff38f7f73d_fixed.java
index 10616db..c89537e 100644
--- a/tmp/9aa081f0-214b-426f-87da-232c928a53b1_buggy.java
+++ b/tmp/b2eb320d-b2f9-4fdd-bf8a-99ff38f7f73d_fixed.java
@@ -1,19 +1,30 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+        // adjust day-of-month if needed
+        DateTimeField field = partial.getField(fieldIndex);
+        if (field.getDurationField().getType().getName().equals("months") || 
+            field.getDurationField().getType().getName().equals("days")) {
+            int newDay = newValues[partial.size() - 1]; // usually the last is dayOfMonth
+            int newMonth = newValues[partial.indexOf(DateTimeFieldType.monthOfYear())];
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+            if (newDay > maxDay) {
+                newValues[partial.size() - 1] = maxDay;
+            }
+        }
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
