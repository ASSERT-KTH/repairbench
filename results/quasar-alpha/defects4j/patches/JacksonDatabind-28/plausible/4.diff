diff --git a/tmp/cf7bdaf0-10ae-4963-8f1c-439a4554f5ec_buggy.java b/tmp/a978144d-597f-4640-9d86-6f5739cba189_fixed.java
index 66bb99f..dfb088b 100644
--- a/tmp/cf7bdaf0-10ae-4963-8f1c-439a4554f5ec_buggy.java
+++ b/tmp/a978144d-597f-4640-9d86-6f5739cba189_fixed.java
@@ -1,14 +1,19 @@
 @Override
 public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
 {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+    JsonToken t = p.getCurrentToken();
+    if (t == JsonToken.START_OBJECT) {
         p.nextToken();
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+    // Also accept when pointing to field name(s)
+    if (t == JsonToken.FIELD_NAME) {
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
+    //  fix: support empty object, positioned at END_OBJECT
+    if (t == JsonToken.END_OBJECT) {
+        // empty object, create and return
+        return ctxt.getNodeFactory().objectNode();
+    }
     throw ctxt.mappingException(ObjectNode.class);
 }
\ No newline at end of file
