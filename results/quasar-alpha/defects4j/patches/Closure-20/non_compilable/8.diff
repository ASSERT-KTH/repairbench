diff --git a/tmp/f3028f89-26f3-4425-b877-8fc65db42b19_buggy.java b/tmp/d3345c25-0498-4ce0-b792-42cf815b6963_fixed.java
index d4e6d48..9f4bf68 100644
--- a/tmp/f3028f89-26f3-4425-b877-8fc65db42b19_buggy.java
+++ b/tmp/d3345c25-0498-4ce0-b792-42cf815b6963_fixed.java
@@ -1,23 +1,25 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
   Preconditions.checkState(n.isCall());
   Node callTarget = n.getFirstChild();
   if (callTarget != null && callTarget.isName() &&
         callTarget.getString().equals("String")) {
     // Fold String(a) to '' + (a) on immutable literals,
     // which allows further optimizations
     //
     // We can't do this in the general case, because String(a) has
     // slightly different semantics than '' + (a). See
     // http://code.google.com/p/closure-compiler/issues/detail?id=759
+    if (n.getChildCount() == 2) { // only one argument
       Node value = callTarget.getNext();
-      if (value != null) {
+      if (value.isImmutableValue()) {
         Node addition = IR.add(
             IR.string("").srcref(callTarget),
             value.detachFromParent());
         n.getParent().replaceChild(n, addition);
         reportCodeChange();
         return addition;
       }
     }
+  }
   return n;
 }
\ No newline at end of file
