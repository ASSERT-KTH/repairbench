diff --git a/tmp/2448d5a4-8891-4a6b-8419-514587ec4bde_buggy.java b/tmp/e63e6e1b-7faf-423d-8343-883d8ac4f2c8_fixed.java
index 4aff4e4..fe1a3b0 100644
--- a/tmp/2448d5a4-8891-4a6b-8419-514587ec4bde_buggy.java
+++ b/tmp/e63e6e1b-7faf-423d-8343-883d8ac4f2c8_fixed.java
@@ -1,15 +1,26 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
+    String value = attr.getValue();
+    if (!preserveRelativeLinks) {
+        // Update to absolute URL if possible
+        String abs = el.absUrl(attr.getKey());
+        if (!abs.isEmpty())
+            value = abs;
         attr.setValue(value);
+    } else {
+        // Get the value as is, no rewriting
+        String abs = el.absUrl(attr.getKey());
+        if (!abs.isEmpty())
+            value = abs;
+    }
 
+    String lowerValue = value.toLowerCase();
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        String prot = protocol.toString().toLowerCase() + ":";
+        if (lowerValue.startsWith(prot)) {
             return true;
         }
     }
-        return false;
+    // Allow relative URLs (without a protocol) as safe
+    return !org.jsoup.internal.StringUtil.in(lowerValue, "", null)
+            && !(lowerValue.contains(":") && !lowerValue.startsWith("#") && !lowerValue.startsWith("/"));
 }
\ No newline at end of file
