diff --git a/tmp/d5958d9c-2f65-4ebd-9969-20fc3ca37e11_buggy.java b/tmp/9d69a80e-9592-44e2-b78d-6748a3e8062a_fixed.java
index 4aff4e4..8002c58 100644
--- a/tmp/d5958d9c-2f65-4ebd-9969-20fc3ca37e11_buggy.java
+++ b/tmp/9d69a80e-9592-44e2-b78d-6748a3e8062a_fixed.java
@@ -1,15 +1,27 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
+    String value = attr.getValue();
     // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
     // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
+    String absUrl = el.absUrl(attr.getKey());
+    if (!preserveRelativeLinks) {
+        // if it's a relative link and conversion to abs succeeded, update the attr
+        if (!absUrl.isEmpty()) {
+            value = absUrl;
             attr.setValue(value);
+        }
+    } else {
+        // if preserveRelativeLinks, but absUrl resolving failed, keep original value
+        if (!absUrl.isEmpty()) {
+            value = absUrl;
+        }
+    }
 
+    String lowerValue = value.toLowerCase();
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        String prot = protocol.toString().toLowerCase() + ":";
+        if (lowerValue.startsWith(prot)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
