diff --git a/tmp/ca61287f-cbcb-4945-af83-fb4f330e1fa5_buggy.java b/tmp/4e8816b4-a0b2-4e0a-a6eb-5b7e14598003_fixed.java
index 4aff4e4..ac87801 100644
--- a/tmp/ca61287f-cbcb-4945-af83-fb4f330e1fa5_buggy.java
+++ b/tmp/4e8816b4-a0b2-4e0a-a6eb-5b7e14598003_fixed.java
@@ -1,15 +1,23 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
+    String value;
+    if (preserveRelativeLinks) {
+        value = attr.getValue();
+    } else {
+        value = el.absUrl(attr.getKey());
         attr.setValue(value);
+    }
 
+    String checkVal = value.trim().toLowerCase();
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        String prot = protocol.toString().toLowerCase() + ":";
+        if (checkVal.startsWith(prot)) {
             return true;
         }
     }
+    // If it looks like a relative or root-relative URL, allow if no protocols specified
+    if (protocols.isEmpty()) {
+        return true;
+    }
+
     return false;
 }
\ No newline at end of file
