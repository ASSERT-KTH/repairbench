diff --git a/tmp/cef02a6c-e2fb-45f3-a743-cb677a33b8d7_buggy.java b/tmp/fa797d42-7cd7-4e98-9705-db99429f335b_fixed.java
index e1fc51f..d6bdd6a 100644
--- a/tmp/cef02a6c-e2fb-45f3-a743-cb677a33b8d7_buggy.java
+++ b/tmp/fa797d42-7cd7-4e98-9705-db99429f335b_fixed.java
@@ -1,9 +1,23 @@
 public boolean hasSameMethod(Invocation candidate) {        
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    if (m1.equals(m2)) {
+        return true;
+    }
+
+    // check if methods have the same name and are declared in interfaces implemented by the same class hierarchy
+    if (!m1.getName().equals(m2.getName())) {
+        return false;
+    }
+
+    if (!Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())) {
+        return false;
+    }
+
+    // One method might be a bridge (generated by the compiler)
+    // Accept methods with same signature name and params, even if declared in different classes/interfaces
+    return true;
 }
\ No newline at end of file
