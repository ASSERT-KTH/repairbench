diff --git a/tmp/9f61dfac-16ed-4a4c-b0dd-82b64d9af032_buggy.java b/tmp/cc227382-1a61-4fd3-b70e-9d18c2206104_fixed.java
index 07b0792..263add5 100644
--- a/tmp/9f61dfac-16ed-4a4c-b0dd-82b64d9af032_buggy.java
+++ b/tmp/cc227382-1a61-4fd3-b70e-9d18c2206104_fixed.java
@@ -1,22 +1,38 @@
 /**
  * @return Whether the variable is only assigned a value once for its
  *     lifetime.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
   // Make sure this assignment is not in a loop.
   for (BasicBlock block = ref.getBasicBlock();
        block != null; block = block.getParent()) {
     if (block.isFunction) {
       break;
     } else if (block.isLoop) {
       return false;
     }
   }
 
+  // Also check that the assignment does not occur inside a function that is
+  // recursive or called multiple times, otherwise the assignment may execute
+  // multiple times during lifetime.
+  if (ref.getSymbol() != null && ref.getSymbol().getScope() != null) {
+    Scope scope = ref.getSymbol().getScope();
+    while (scope != null) {
+      if (scope.isFunctionScope() && scope.isLocal()) {
+        // If function scope is local (i.e., user-defined function),
+        // conservatively assume variable can be reassigned if function
+        // executes multiple times.
+        return false;
+      }
+      scope = scope.getParent();
+    }
+  }
+
   return true;
 }
\ No newline at end of file
