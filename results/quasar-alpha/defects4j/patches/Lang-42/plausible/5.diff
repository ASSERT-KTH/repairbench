diff --git a/tmp/a547f56b-4e6a-4c5f-8af9-b7f18c33cfee_buggy.java b/tmp/9f9d51f2-ebbd-4905-a2a2-365695abf2a1_fixed.java
index 822447c..fa6abe1 100644
--- a/tmp/a547f56b-4e6a-4c5f-8af9-b7f18c33cfee_buggy.java
+++ b/tmp/9f9d51f2-ebbd-4905-a2a2-365695abf2a1_fixed.java
@@ -1,37 +1,36 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
-        for (int i = 0; i < len; i++) {
+    int i = 0;
+    while (i < len) {
         char c = str.charAt(i);
         String entityName = this.entityName(c);
-            if (entityName == null) {
+        if (entityName != null) {
+            writer.write('&');
+            writer.write(entityName);
+            writer.write(';');
+            i++;
+            continue;
+        }
+
+        if (Character.isHighSurrogate(c) && i + 1 < len) {
+            char d = str.charAt(i + 1);
+            if (Character.isLowSurrogate(d)) {
+                int codePoint = Character.toCodePoint(c, d);
+                writer.write("&#");
+                writer.write(Integer.toString(codePoint, 10));
+                writer.write(';');
+                i += 2;
+                continue;
+            }
+        }
+
         if (c > 0x7F) {
             writer.write("&#");
             writer.write(Integer.toString(c, 10));
             writer.write(';');
         } else {
             writer.write(c);
         }
-            } else {
-                writer.write('&');
-                writer.write(entityName);
-                writer.write(';');
-            }
+        i++;
     }
 }
\ No newline at end of file
