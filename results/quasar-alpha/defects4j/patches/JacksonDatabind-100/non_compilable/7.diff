diff --git a/tmp/1a887b96-a83e-4802-a2cf-a55cde1f97a2_buggy.java b/tmp/a415ea74-11b9-4e0a-8f5a-3a7f2d861a58_fixed.java
index fc8c302..513b07e 100644
--- a/tmp/1a887b96-a83e-4802-a2cf-a55cde1f97a2_buggy.java
+++ b/tmp/a415ea74-11b9-4e0a-8f5a-3a7f2d861a58_fixed.java
@@ -1,23 +1,32 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n.isBinary()) { // genuine binary node
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+        }
+        if (n.isTextual()) {
+            String text = n.textValue();
+            if (text != null) {
+                try {
+                    return b64variant.decode(text);
+                } catch (IllegalArgumentException e) {
+                    throw new JsonParseException(_parsingContext,
+                        "Cannot access contents of TextNode as binary due to broken Base64 encoding: "+e.getMessage(), e);
+                }
+            }
+        }
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
