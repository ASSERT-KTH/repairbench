diff --git a/tmp/1f54a5c6-36d9-4abe-858d-3fddec74a3d4_buggy.java b/tmp/202b050f-1fa8-428b-997f-88664c602e0a_fixed.java
index fc8c302..e09e0fe 100644
--- a/tmp/1f54a5c6-36d9-4abe-858d-3fddec74a3d4_buggy.java
+++ b/tmp/202b050f-1fa8-428b-997f-88664c602e0a_fixed.java
@@ -1,23 +1,33 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // First: attempt to coerce TextNode value, WITH variant
+        if (n.isTextual()) {
+            String text = n.textValue();
+            if (text != null) {
+                try {
+                    return b64variant.decode(text);
+                } catch (IllegalArgumentException e) {
+                    throw new JsonParseException(
+                        _parser, "Cannot access contents of TextNode as binary due to broken Base64 encoding: "+e.getMessage(), e);
+                }
+            }
+        }
+        // Next: If fully binary node, use its method
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
