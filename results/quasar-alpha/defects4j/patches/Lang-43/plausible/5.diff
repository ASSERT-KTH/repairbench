diff --git a/tmp/991c23fa-4558-46f4-9d73-675391612cf6_buggy.java b/tmp/3bcd0dd0-3e53-4f4c-ba71-2df56c810fc1_fixed.java
index b6b11b6..ef5adb1 100644
--- a/tmp/991c23fa-4558-46f4-9d73-675391612cf6_buggy.java
+++ b/tmp/3bcd0dd0-3e53-4f4c-ba71-2df56c810fc1_fixed.java
@@ -1,38 +1,44 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
+
+    // Handle empty pattern or starting at or beyond pattern end
+    if (start >= c.length) {
+        throw new IllegalArgumentException("Unterminated quoted string at position " + start);
+    }
+
     if (escapingOn && c[start] == QUOTE) {
+        // It's just an escaped quote, consume it and append a single quote
+        pos.setIndex(start + 1);
         return appendTo == null ? null : appendTo.append(QUOTE);
     }
+
     int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
-                lastHold = pos.getIndex();
+    int i = start;
+    while (i < pattern.length()) {
+        if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, i)) {
+            // Append chars from lastHold up to current position
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+            }
+            i += ESCAPED_QUOTE.length();
+            pos.setIndex(i);
+            lastHold = i;
             continue;
         }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+        char ch = pattern.charAt(i);
+        if (ch == QUOTE) {
+            i++;
+            pos.setIndex(i);
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold - 1);
             }
+            return appendTo;
+        }
+        i++;
+        pos.setIndex(i);
     }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
