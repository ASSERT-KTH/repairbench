diff --git a/tmp/51af0e0e-f4dd-4ebb-9b22-13a25770cabf_buggy.java b/tmp/fdeda71e-2085-4f93-9a79-9279d0820e64_fixed.java
index b6b11b6..d0291b2 100644
--- a/tmp/51af0e0e-f4dd-4ebb-9b22-13a25770cabf_buggy.java
+++ b/tmp/fdeda71e-2085-4f93-9a79-9279d0820e64_fixed.java
@@ -1,38 +1,34 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
     if (escapingOn && c[start] == QUOTE) {
+        pos.setIndex(start + 1);  // <-- advance pos to avoid infinite loop
         return appendTo == null ? null : appendTo.append(QUOTE);
     }
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
         if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+            }
+            i += ESCAPED_QUOTE.length() - 1;
+            pos.setIndex(i + 1);
             lastHold = pos.getIndex();
             continue;
         }
-            switch (c[pos.getIndex()]) {
+        switch (c[i]) {
         case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+            pos.setIndex(i + 1);
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold);
+            }
+            return appendTo;
         default:
-                next(pos);
+            // nothing to do, just advance
+            pos.setIndex(i + 1);
         }
     }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
