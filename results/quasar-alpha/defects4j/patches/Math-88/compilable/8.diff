diff --git a/tmp/98c6c593-61e7-4ab9-99f4-07c93bb5259f_buggy.java b/tmp/221ec73b-57cd-45fc-bec1-64a99b1bc048_fixed.java
index 544303b..ab11a64 100644
--- a/tmp/98c6c593-61e7-4ab9-99f4-07c93bb5259f_buggy.java
+++ b/tmp/221ec73b-57cd-45fc-bec1-64a99b1bc048_fixed.java
@@ -1,29 +1,31 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         // if multiple variables can take a given value 
         // then we choose the first and set the rest equal to 0
         coefficients[i] =
             (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
             (restrictToNonNegative ? 0 : mostNegative);
         if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+            for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + coefficients.length; j++) {
+                // fix: check all slack variables, not just for j up to i
+                if (tableau.getEntry(basicRow, j) == 1 && (j - getNumObjectiveFunctions()) != i) {
                     coefficients[i] = 0;
+                    break;
                 }
             }
         }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
