diff --git a/tmp/6bc7a003-6d47-4f90-84dd-3bf982ab1b68_buggy.java b/tmp/6e05dc4e-2f99-4f95-bf34-fae27de12240_fixed.java
index de9af32..1c4edeb 100644
--- a/tmp/6bc7a003-6d47-4f90-84dd-3bf982ab1b68_buggy.java
+++ b/tmp/6e05dc4e-2f99-4f95-bf34-fae27de12240_fixed.java
@@ -1,18 +1,25 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+    // Skip .call or .apply calls -- the real function being called is the first child
+    if (child != null && child.getType() == Token.GETPROP) {
+      String propName = child.getLastChild().getString();
+      if ("call".equals(propName) || "apply".equals(propName)) {
+        child = child.getFirstChild();
+      }
+    }
+    if (child != null && child.getType() == Token.NAME) {
       changed.add(child.getString());
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
