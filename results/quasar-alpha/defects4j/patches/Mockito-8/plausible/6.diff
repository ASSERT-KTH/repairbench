diff --git a/tmp/e60e0713-b9d5-4b04-b700-5c9dd1e2a31d_buggy.java b/tmp/2c7a1205-5f95-4864-95a5-6a826e834446_fixed.java
index 42b58d0..ebb6b97 100644
--- a/tmp/e60e0713-b9d5-4b04-b700-5c9dd1e2a31d_buggy.java
+++ b/tmp/2c7a1205-5f95-4864-95a5-6a826e834446_fixed.java
@@ -1,19 +1,24 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // Avoid registering a type variable pointing to itself directly, which causes infinite recursion
+        if (actualTypeArgument instanceof TypeVariable && actualTypeArgument.equals(typeParameter)) {
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
