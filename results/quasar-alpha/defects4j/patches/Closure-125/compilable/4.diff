diff --git a/tmp/15075ee4-9467-47b9-825d-330f91f569f1_buggy.java b/tmp/0ed7124f-0458-4784-9083-ab434537cbc5_fixed.java
index 7e43c1c..ff754ad 100644
--- a/tmp/15075ee4-9467-47b9-825d-330f91f569f1_buggy.java
+++ b/tmp/0ed7124f-0458-4784-9083-ab434537cbc5_fixed.java
@@ -1,19 +1,25 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
+  FunctionType fnType = null;
+
   if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
-      FunctionType fnType = type.toMaybeFunctionType();
+    // Defensive: avoid IllegalStateException if restrictByNotNullOrUndefined
+    // returns a union unrelated to FunctionType, i.e., avoid calling toMaybeFunctionType on non-function
+    fnType = type.toMaybeFunctionType();
+  }
+
   if (fnType != null) {
     visitParameterList(t, n, fnType);
     ensureTyped(t, n, fnType.getInstanceType());
-      } else {
+  } else if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
+    // Might be missing constructor info, but do not throw
     ensureTyped(t, n);
-      }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
