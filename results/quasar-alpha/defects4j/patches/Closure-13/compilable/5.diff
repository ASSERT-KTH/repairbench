diff --git a/tmp/03d1b3d7-e0df-4eb6-88f3-71883ee5fe12_buggy.java b/tmp/06870c3a-3814-45a7-9a55-eb5fc861af11_fixed.java
index b5d94e0..6460905 100644
--- a/tmp/03d1b3d7-e0df-4eb6-88f3-71883ee5fe12_buggy.java
+++ b/tmp/06870c3a-3814-45a7-9a55-eb5fc861af11_fixed.java
@@ -1,26 +1,27 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
+  boolean firstTraversal = true;
   do {
+    if (!firstTraversal && !shouldRetraverse(node)) {
+      break;
+    }
+    firstTraversal = false;
+
     Node c = node.getFirstChild();
     while (c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
     visit(node);
     visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+    Preconditions.checkState(visits < 10000, "too many iterations");
+  } while (true);
 
   exitNode(node);
 }
\ No newline at end of file
