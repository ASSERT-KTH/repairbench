diff --git a/tmp/7e9a7e7c-dec1-4582-a77b-b6514f181e0d_buggy.java b/tmp/e6aae49b-ccb3-477e-9a7a-693263854433_fixed.java
index e69de29..cd33b0f 100644
--- a/tmp/7e9a7e7c-dec1-4582-a77b-b6514f181e0d_buggy.java
+++ b/tmp/e6aae49b-ccb3-477e-9a7a-693263854433_fixed.java
@@ -0,0 +1,22 @@
+private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException {
+    in.defaultReadObject();
+    Serializer serializer = new Serializer(in);
+    this.map = (Map<K, Collection<V>>) serializer.readObject();
+    this.valueCollectionClass = (Class<? extends Collection>) serializer.readClass();
+
+    // Add security check: only allow certain collection classes during deserialization
+    if (valueCollectionClass != null) {
+        if (!(Collection.class.isAssignableFrom(valueCollectionClass))) {
+            throw new UnsupportedOperationException("Deserialized unauthorized type: " + valueCollectionClass);
+        }
+        // Only allow known safe immutable collection classes, or common implementations
+        if (!(valueCollectionClass.equals(ArrayList.class) ||
+              valueCollectionClass.equals(LinkedList.class) ||
+              valueCollectionClass.equals(HashSet.class) ||
+              valueCollectionClass.equals(LinkedHashSet.class) ||
+              valueCollectionClass.equals(TreeSet.class) ||
+              valueCollectionClass.equals(Vector.class))) {
+            throw new UnsupportedOperationException("Unsupported valueCollectionClass during deserialization: " + valueCollectionClass.getName());
+        }
+    }
+}
\ No newline at end of file
