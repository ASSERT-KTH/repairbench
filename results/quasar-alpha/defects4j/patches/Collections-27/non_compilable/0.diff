diff --git a/tmp/c78ac300-f50d-4ed8-80da-af1c5b545783_buggy.java b/tmp/9926cd90-7fe3-4171-90c7-2d5fd8afcc6b_fixed.java
index e69de29..8eca3e5 100644
--- a/tmp/c78ac300-f50d-4ed8-80da-af1c5b545783_buggy.java
+++ b/tmp/9926cd90-7fe3-4171-90c7-2d5fd8afcc6b_fixed.java
@@ -0,0 +1,22 @@
+private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {
+    ois.defaultReadObject();
+
+    // Defensive check of valueCollectionClass
+    if (valueCollectionClass != null) {
+        // Reject known vulnerable or unsafe classes
+        if (!Collection.class.isAssignableFrom(valueCollectionClass)
+                || valueCollectionClass == String.class
+                || valueCollectionClass == Object.class
+                || valueCollectionClass.isInterface()
+                || Modifier.isAbstract(valueCollectionClass.getModifiers())
+                || !Modifier.isPublic(valueCollectionClass.getModifiers())) {
+            throw new UnsupportedOperationException("Unsupported valueCollectionClass: " + valueCollectionClass.getName());
+        }
+        try {
+            // Defensive instantiation to ensure it's safe/valid
+            Collection<?> test = (Collection<?>) valueCollectionClass.getDeclaredConstructor().newInstance();
+        } catch (Exception e) {
+            throw new UnsupportedOperationException("Unsupported valueCollectionClass: " + valueCollectionClass.getName(), e);
+        }
+    }
+}
\ No newline at end of file
