diff --git a/tmp/757dbd2f-eedf-4695-9f98-c214a6d9c558_buggy.java b/tmp/2093f86f-6c03-46e6-9c2a-0512bd851adc_fixed.java
index 5f96616..d80f637 100644
--- a/tmp/757dbd2f-eedf-4695-9f98-c214a6d9c558_buggy.java
+++ b/tmp/2093f86f-6c03-46e6-9c2a-0512bd851adc_fixed.java
@@ -1,20 +1,21 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
   if (constraint.isRecordType()) {
     matchRecordTypeConstraint(constraint.toObjectType());
   }
+
+  // Handle the case where the constraint is a union of types.
+  if (constraint.isUnionType()) {
+    for (JSType alt : constraint.toMaybeUnionType().getAlternates()) {
+      if (alt.isRecordType()) {
+        matchRecordTypeConstraint(alt.toObjectType());
+      }
+    }
+  }
 }
\ No newline at end of file
