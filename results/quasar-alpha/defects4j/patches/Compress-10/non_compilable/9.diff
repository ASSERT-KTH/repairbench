diff --git a/tmp/4e747e56-f752-4267-94b9-d10ac5968f0a_buggy.java b/tmp/025d2341-1257-489b-8dd9-ae3b41024ec8_fixed.java
index 85e6a42..23c95ea 100644
--- a/tmp/4e747e56-f752-4267-94b9-d10ac5968f0a_buggy.java
+++ b/tmp/025d2341-1257-489b-8dd9-ae3b41024ec8_fixed.java
@@ -1,50 +1,64 @@
 /**
  * Walks through all recorded entries and adds the data available
  * from the local file header.
  *
  * <p>Also records the offsets for the data to read from the
  * entries.</p>
  */
 private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                                         entriesWithoutUTF8Flag)
     throws IOException {
     // changing the name of a ZipArchiveEntry is going to change
     // the hashcode - see COMPRESS-164
     // Map needs to be reconstructed in order to keep central
     // directory order
     for (ZipArchiveEntry ze : entries.keySet()) {
         OffsetEntry offsetEntry = entries.get(ze);
         long offset = offsetEntry.headerOffset;
         archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
         byte[] b = new byte[SHORT];
         archive.readFully(b);
         int fileNameLen = ZipShort.getValue(b);
         archive.readFully(b);
         int extraFieldLen = ZipShort.getValue(b);
         int lenToSkip = fileNameLen;
+        byte[] fileNameBytes = new byte[fileNameLen];
+        int totalRead = 0;
         while (lenToSkip > 0) {
-                int skipped = archive.skipBytes(lenToSkip);
-                if (skipped <= 0) {
-                    throw new RuntimeException("failed to skip file name in"
-                                               + " local file header");
+            int read = archive.read(fileNameBytes, totalRead, lenToSkip);
+            if (read < 0) {
+                throw new RuntimeException("failed to read file name in local file header");
             }
-                lenToSkip -= skipped;
+            totalRead += read;
+            lenToSkip -= read;
         }
+
         byte[] localExtraData = new byte[extraFieldLen];
         archive.readFully(localExtraData);
         ze.setExtra(localExtraData);
         offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
             + SHORT + SHORT + fileNameLen + extraFieldLen;
 
         if (entriesWithoutUTF8Flag.containsKey(ze)) {
             String orig = ze.getName();
             NameAndComment nc = entriesWithoutUTF8Flag.get(ze);
             ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,
                                                      nc.comment);
+
+            /*
+             * Fix for bug:
+             * WinZIP creates UTF-8 files with unicode extra field only in central directory,
+             * so local header filename bytes are encoded in the archive's encoding.
+             * Re-set the entry's raw name bytes from local file header to enable correct reading.
+             */
+            if (ze.getRawName() == null || ze.getRawName().length == 0) {
+                ze.setRawName(fileNameBytes);
+            }
+
             if (!orig.equals(ze.getName())) {
                 nameMap.remove(orig);
                 nameMap.put(ze.getName(), ze);
             }
         }
     }
 }
\ No newline at end of file
