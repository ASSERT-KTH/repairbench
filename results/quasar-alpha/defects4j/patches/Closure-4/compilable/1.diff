diff --git a/tmp/58a49546-3423-4261-9b61-eccc181e50b7_buggy.java b/tmp/40e726f0-c0fb-488d-89da-442e0e45ac59_fixed.java
index d6a560a..b8d5ff5 100644
--- a/tmp/58a49546-3423-4261-9b61-eccc181e50b7_buggy.java
+++ b/tmp/40e726f0-c0fb-488d-89da-442e0e45ac59_fixed.java
@@ -1,33 +1,30 @@
 /**
  * Resolve the referenced type within the enclosing scope.
  */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+  // Avoid triggering warnings twice but make sure properties are resolved.
   boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
 
   if (resolved) {
     super.resolveInternal(t, enclosing);
     finishPropertyContinuations();
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
 
+  // Fallback to resolving via properties
   resolveViaProperties(t, enclosing);
+
+  // Now check for cycles
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
   }
 
   super.resolveInternal(t, enclosing);
   if (isResolved()) {
     finishPropertyContinuations();
   }
   return registry.isLastGeneration() ?
       getReferencedType() : this;
 }
\ No newline at end of file
