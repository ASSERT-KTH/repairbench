diff --git a/tmp/3e2cbe0e-1e85-4979-9f0c-cf85dd7f277f_buggy.java b/tmp/6772092c-8c87-4379-8c91-4d63217ff358_fixed.java
index 308b324..d5aea6d 100644
--- a/tmp/3e2cbe0e-1e85-4979-9f0c-cf85dd7f277f_buggy.java
+++ b/tmp/6772092c-8c87-4379-8c91-4d63217ff358_fixed.java
@@ -1,11 +1,38 @@
 /**
  * Check to see if the given block comment looks like it should be JSDoc.
  */
 private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
+  String value = comment.getValue();
+  // Split the comment into lines for multi-line checks
+  String[] lines = value.split("\n");
+  boolean looksLikeJSDoc = false;
+  for (String line : lines) {
+    String trimmed = line.trim();
+    // ignore the comment start/end separators
+    if (trimmed.startsWith("/*") || trimmed.startsWith("*/")) {
+      continue;
+    }
+    // check if line starts with '*' followed by optional spaces and then '@'
+    if (trimmed.startsWith("*")) {
+      int idx = trimmed.indexOf('@');
+      if (idx != -1) {
+        looksLikeJSDoc = true;
+        break;
+      }
+    } else {
+      // Also check for '@' on non-asterisk lines
+      int idx = trimmed.indexOf('@');
+      if (idx != -1) {
+        looksLikeJSDoc = true;
+        break;
+      }
+    }
+  }
+
+  if (looksLikeJSDoc) {
     errorReporter.warning(
         SUSPICIOUS_COMMENT_WARNING,
         sourceName,
         comment.getLineno(), "", 0);
   }
 }
\ No newline at end of file
