diff --git a/tmp/f70df419-6348-4c77-9920-de2203253eff_buggy.java b/tmp/2b3e7b57-c191-4268-b2c9-e4f64e18ce21_fixed.java
index 1bec4d6..7dfbd0c 100644
--- a/tmp/f70df419-6348-4c77-9920-de2203253eff_buggy.java
+++ b/tmp/2b3e7b57-c191-4268-b2c9-e4f64e18ce21_fixed.java
@@ -1,14 +1,20 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    if (rawClass == Properties.class) {
+        // Represent Properties as Map<String,String>
+        JavaType stringType = _constructSimpleType(String.class, null);
+        return MapType.construct(rawClass, stringType, stringType);
+    }
+
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
