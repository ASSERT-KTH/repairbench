diff --git a/tmp/a62e36a6-8277-4701-a530-62054999b4d3_buggy.java b/tmp/63dcf617-4f60-4e10-808b-489d4fe1bf90_fixed.java
index 139579d..91964c0 100644
--- a/tmp/a62e36a6-8277-4701-a530-62054999b4d3_buggy.java
+++ b/tmp/63dcf617-4f60-4e10-808b-489d4fe1bf90_fixed.java
@@ -1,43 +1,30 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
+    int pos = 0;
+    while (pos < len) {
+        // skip whitespace
+        while (pos < len && Character.isWhitespace(classAttr.charAt(pos))) {
+            pos++;
         }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+        int start = pos;
+        // find end of this class token
+        while (pos < len && !Character.isWhitespace(classAttr.charAt(pos))) {
+            pos++;
+        }
+        int end = pos;
+        int tokenLen = end - start;
+        if (tokenLen == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
             return true;
         }
-                    inClass = false;
-                }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
 
     return false;
 }
\ No newline at end of file
