diff --git a/tmp/c0dc42b8-e5d8-4149-9a55-698b673e9120_buggy.java b/tmp/2a4423f6-0aa8-4649-874f-477b6f6d50d3_fixed.java
index 139579d..d430487 100644
--- a/tmp/c0dc42b8-e5d8-4149-9a55-698b673e9120_buggy.java
+++ b/tmp/2a4423f6-0aa8-4649-874f-477b6f6d50d3_fixed.java
@@ -1,43 +1,36 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
+    if (classAttr == null) return false;
     final int len = classAttr.length();
     final int wantLen = className.length();
 
-        if (len == 0 || len < wantLen) {
-            return false;
-        }
+    if (len == 0 || len < wantLen) return false;
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
+        char c = classAttr.charAt(i);
+        if (Character.isWhitespace(c)) {
             if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                if (i - start == wantLen &&
+                    classAttr.regionMatches(true, start, className, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
             }
         } else {
             if (!inClass) {
-                    // we're in a class name : keep the start of the substring
                 inClass = true;
                 start = i;
             }
         }
     }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
+    // Check last class name
+    if (inClass && len - start == wantLen &&
+        classAttr.regionMatches(true, start, className, 0, wantLen)) {
+        return true;
     }
 
     return false;
 }
\ No newline at end of file
