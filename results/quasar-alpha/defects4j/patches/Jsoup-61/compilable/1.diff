diff --git a/tmp/45427a70-269d-434a-80f6-b989aec82b04_buggy.java b/tmp/98a8e36e-6e21-4a3a-a71d-07566fb43395_fixed.java
index 139579d..87bf8c1 100644
--- a/tmp/45427a70-269d-434a-80f6-b989aec82b04_buggy.java
+++ b/tmp/98a8e36e-6e21-4a3a-a71d-07566fb43395_fixed.java
@@ -1,43 +1,29 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
     int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+    while (start < len) {
+        // skip whitespace
+        while (start < len && Character.isWhitespace(classAttr.charAt(start))) {
+            start++;
+        }
+        if (start >= len) break;
+        int end = start;
+        while (end < len && !Character.isWhitespace(classAttr.charAt(end))) {
+            end++;
+        }
+        int segmentLen = end - start;
+        if (segmentLen == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
             return true;
         }
-                    inClass = false;
+        start = end;
     }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
-
     return false;
 }
\ No newline at end of file
