diff --git a/tmp/6448195f-3223-43e9-923b-dfa4a66885eb_buggy.java b/tmp/30f62be2-8a80-481e-a8e7-301a4c2704c8_fixed.java
index 877a1a1..19bd9b9 100644
--- a/tmp/6448195f-3223-43e9-923b-dfa4a66885eb_buggy.java
+++ b/tmp/30f62be2-8a80-481e-a8e7-301a4c2704c8_fixed.java
@@ -1,14 +1,10 @@
-    /**
-      * Returns the percentage of values that are equal to v
-     * (as a proportion between 0 and 1).
-     * <p>
-     * Returns <code>Double.NaN</code> if no values have been added.</p>
-     *
-     * @param v the value to lookup
-     * @return the proportion of values equal to v
-     * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
-     */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    if (!(v instanceof Comparable<?>)) {
+        return 0;
+    }
+    Comparable<?> comparable = (Comparable<?>) v;
+    long count = getCount(comparable);
+    long sumFreq = getSumFreq();
+    return sumFreq == 0 ? Double.NaN : (double) count / (double) sumFreq;
 }
\ No newline at end of file
