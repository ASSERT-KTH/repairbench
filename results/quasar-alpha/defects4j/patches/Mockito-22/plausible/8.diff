diff --git a/tmp/d7e8bd98-e8ac-416c-8767-10f468ecfd6c_buggy.java b/tmp/25e6c0df-7ebb-4463-a0b1-a4da0f2c45ca_fixed.java
index 111ba5e..9a30e9d 100644
--- a/tmp/d7e8bd98-e8ac-416c-8767-10f468ecfd6c_buggy.java
+++ b/tmp/25e6c0df-7ebb-4463-a0b1-a4da0f2c45ca_fixed.java
@@ -1,9 +1,31 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+    }
+    if (isArray(o1) && isArray(o2)) {
+        // Both are arrays, compare elements recursively
+        int len1 = java.lang.reflect.Array.getLength(o1);
+        int len2 = java.lang.reflect.Array.getLength(o2);
+        if (len1 != len2) {
+            return false;
+        }
+        for (int i = 0; i < len1; i++) {
+            Object e1 = java.lang.reflect.Array.get(o1, i);
+            Object e2 = java.lang.reflect.Array.get(o2, i);
+            if (!areEqual(e1, e2)) {
+                return false;
+            }
+        }
+        return true;
+    }
+    if (isArray(o1) || isArray(o2)) {
+        // One is array, one is not
+        return false;
+    }
+    try {
         return o1.equals(o2);
+    } catch (Throwable t) {
+        // Defensive: if equals() throws, fall back to reference identity
+        return o1 == o2;
     }
 }
\ No newline at end of file
