diff --git a/tmp/9d3a2aff-369d-4312-acfa-80aef156a98b_buggy.java b/tmp/e827632d-83f9-449b-88f0-0eb0b3261a4d_fixed.java
index e5ad041..05f5fa9 100644
--- a/tmp/9d3a2aff-369d-4312-acfa-80aef156a98b_buggy.java
+++ b/tmp/e827632d-83f9-449b-88f0-0eb0b3261a4d_fixed.java
@@ -1,19 +1,17 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
+    /* Update _superClass and _superInterfaces to match subclass's hierarchy */
+    // Determine new super-type, if any
+    JavaType superClassType = null;
+    if (_class.isAssignableFrom(subclass)) {
+        // Only if subclass is compatible with _class otherwise, null
+        superClassType = this;
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    // Create new instance with updated subclass but inherited bindings and handlers
+    return new SimpleType(subclass, _bindings, superClassType, null,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
