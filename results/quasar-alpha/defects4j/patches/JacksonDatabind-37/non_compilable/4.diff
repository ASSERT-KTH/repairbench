diff --git a/tmp/9c4bec64-6218-4102-8173-cd752d7cd5d0_buggy.java b/tmp/1ca34957-283a-4192-82da-4f1d8340f135_fixed.java
index e5ad041..1bd56fc 100644
--- a/tmp/9c4bec64-6218-4102-8173-cd752d7cd5d0_buggy.java
+++ b/tmp/1ca34957-283a-4192-82da-4f1d8340f135_fixed.java
@@ -1,19 +1,21 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
+    // Re-resolve super types for new subclass to get correct type hierarchy
+    HierarchicType superClass = _superClass;
+    if (superClass != null) {
+        superClass = superClass.deepCloneWithoutSubtype();
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    HierarchicType[] superInterfaces = _superInterfaces;
+    if (superInterfaces != null) {
+        superInterfaces = new HierarchicType[superInterfaces.length];
+        for (int i = 0; i < superInterfaces.length; i++) {
+            superInterfaces[i] = superInterfaces[i].deepCloneWithoutSubtype();
+        }
+    }
+    return new SimpleType(subclass, _bindings, superClass, superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
