diff --git a/tmp/b921c58a-1dfe-4811-9012-784080e85296_buggy.java b/tmp/a3310525-c008-4354-b072-2f6353cbaf23_fixed.java
index e5ad041..13b6d29 100644
--- a/tmp/b921c58a-1dfe-4811-9012-784080e85296_buggy.java
+++ b/tmp/a3310525-c008-4354-b072-2f6353cbaf23_fixed.java
@@ -1,19 +1,21 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
+    // Attempt to adjust super-class and super-interfaces based on subclass hierarchy
+    // to keep `_superClass` and `_superInterfaces` consistent with the new subclass
+    HierarchicType newSuperClass = (_superClass == null) ? null : _superClass.deepCloneWithoutSubtype();
+
+    List<JavaType> newSuperInterfaces = null;
+    if (_superInterfaces != null && !_superInterfaces.isEmpty()) {
+        newSuperInterfaces = new ArrayList<>(_superInterfaces.size());
+        for (JavaType iface : _superInterfaces) {
+            newSuperInterfaces.add(iface);
         }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    }
+
+    return new SimpleType(subclass, _bindings, newSuperClass, newSuperInterfaces,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
