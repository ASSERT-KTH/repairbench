diff --git a/tmp/5eb4efc9-1a3c-4e22-b876-78bcd4007828_buggy.java b/tmp/15b5c51e-028b-4fe0-828a-28c2945dec78_fixed.java
index e5ad041..6d51e3f 100644
--- a/tmp/5eb4efc9-1a3c-4e22-b876-78bcd4007828_buggy.java
+++ b/tmp/15b5c51e-028b-4fe0-828a-28c2945dec78_fixed.java
@@ -1,19 +1,31 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    // create narrowed super-class type, if any
+    JavaType newSuper = (_superClass == null) ? null : _superClass._narrow(subclass.getSuperclass());
+    // create narrowed super-interfaces types, if any
+    JavaType[] newSupers = null;
+    if (_superInterfaces != null && _superInterfaces.length > 0) {
+        newSupers = new JavaType[_superInterfaces.length];
+        for (int i = 0; i < _superInterfaces.length; ++i) {
+            Class<?> superIface = null;
+            Class<?>[] ifaces = subclass.getInterfaces();
+            for (Class<?> iface : ifaces) {
+                if (_superInterfaces[i].getRawClass().isAssignableFrom(iface)) {
+                    superIface = iface;
+                    break;
+                }
+            }
+            if (superIface != null) {
+                newSupers[i] = _superInterfaces[i]._narrow(superIface);
+            } else {
+                newSupers[i] = _superInterfaces[i];
+            }
+        }
+    }
+    return new SimpleType(subclass, _bindings, newSuper, newSupers,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
