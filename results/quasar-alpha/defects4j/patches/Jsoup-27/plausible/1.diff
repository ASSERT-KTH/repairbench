diff --git a/tmp/1c6647de-4205-4591-b9a0-848580d2c6cb_buggy.java b/tmp/e5bc0159-34f5-464b-a4da-70a24578f475_fixed.java
index 7fb120e..041e1a8 100644
--- a/tmp/1c6647de-4205-4591-b9a0-848580d2c6cb_buggy.java
+++ b/tmp/e5bc0159-34f5-464b-a4da-70a24578f475_fixed.java
@@ -1,16 +1,27 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return "EUC-JP", or null if not found. Charset is trimmed and original case preserved.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // strip quotes if present
+        if ((charset.startsWith("\"") && charset.endsWith("\"")) || (charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() -1).trim();
+        }
+        // validate charset: check if supported
+        try {
+            if (!charset.isEmpty()) {
+                java.nio.charset.Charset.forName(charset);
                 return charset;
             }
+        } catch (Exception e) {
+            // unsupported charset, fall through to return null
+        }
+    }
     return null;
 }
\ No newline at end of file
