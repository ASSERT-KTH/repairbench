diff --git a/tmp/b9b73a63-4744-46c5-9959-7c82b563e13a_buggy.java b/tmp/10b54c01-6bf4-473f-8896-6eeebeee5456_fixed.java
index 7fb120e..a8c9576 100644
--- a/tmp/b9b73a63-4744-46c5-9959-7c82b563e13a_buggy.java
+++ b/tmp/10b54c01-6bf4-473f-8896-6eeebeee5456_fixed.java
@@ -1,16 +1,25 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return "EUC-JP", or null if not found. Charset is trimmed. Known UTF-8 aliases normalized to "utf-8" in lowercase, others not modified.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
-            return charset;
+        // remove optional quotes around charset value
+        if ((charset.startsWith("\"") && charset.endsWith("\"")) || (charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        // normalize known aliases
+        String norm = charset;
+        if (norm.equalsIgnoreCase("UTF-8")) {
+            return "utf-8"; // normalized lowercase for known common UTF-8 encoding
+        } else {
+            return norm;
+        }
     }
     return null;
 }
\ No newline at end of file
