diff --git a/tmp/c92278f8-c3fb-4f9f-a5d9-49fe5c9bd053_buggy.java b/tmp/b84f3e32-0803-4f95-8aa8-ed4c3d9f23d2_fixed.java
index 7fb120e..95a3078 100644
--- a/tmp/c92278f8-c3fb-4f9f-a5d9-49fe5c9bd053_buggy.java
+++ b/tmp/b84f3e32-0803-4f95-8aa8-ed4c3d9f23d2_fixed.java
@@ -1,16 +1,25 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return normalized lower-case charset (e.g., "utf-8"), or null if not found or unsupported.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
-            return charset;
+        // remove potential quotes
+        if (charset.startsWith("\"") && charset.endsWith("\"") && charset.length() > 1) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        try {
+            Charset cs = Charset.forName(charset);
+            return cs.name().toLowerCase(Locale.ENGLISH);
+        } catch (Exception e) {
+            // unsupported charset
+            return null;
+        }
     }
     return null;
 }
\ No newline at end of file
