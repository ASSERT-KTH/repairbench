diff --git a/tmp/f4641cab-8b6d-43c9-9c3a-383fbaf9b279_buggy.java b/tmp/bf6faedc-109c-4057-949c-70d2693d147c_fixed.java
index 25c13b3..29c6c8a 100644
--- a/tmp/f4641cab-8b6d-43c9-9c3a-383fbaf9b279_buggy.java
+++ b/tmp/bf6faedc-109c-4057-949c-70d2693d147c_fixed.java
@@ -1,15 +1,17 @@
 /**
  * Access the initial domain value, based on <code>p</code>, used to
  * bracket a CDF root.  This method is used by
  * {@link #inverseCumulativeProbability(double)} to find critical values.
  * 
  * @param p the desired probability for the critical value
  * @return initial domain value
  */
 protected double getInitialDomain(double p) {
-        double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+    // For degree <= 2, mean is infinite or undefined, so use a positive heuristic
+    if (d > 2.0) {
+        return d / (d - 2.0); // mean of F-distribution
+    } else {
+        return 1.0; // positive default guess to avoid negative initial guess
+    }
 }
\ No newline at end of file
