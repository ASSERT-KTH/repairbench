diff --git a/tmp/24ce107e-eff0-4aa7-b556-d773a1b2d7c8_buggy.java b/tmp/5f973c8e-1db8-4704-bfee-895cb4fc3bec_fixed.java
index dc93be3..2989394 100644
--- a/tmp/24ce107e-eff0-4aa7-b556-d773a1b2d7c8_buggy.java
+++ b/tmp/5f973c8e-1db8-4704-bfee-895cb4fc3bec_fixed.java
@@ -1,14 +1,17 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+    // handle empty known and unknown tags
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        // Only add to stack if it's an unknown tag; known tags should be auto-closed
+        if (!el.tag().isKnownTag()) {
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        }
+        // Emit fake end tag to close properly
+        tokeniser.emit(new Token.EndTag(el.tagName()));
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
