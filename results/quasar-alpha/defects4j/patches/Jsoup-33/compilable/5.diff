diff --git a/tmp/be419107-6f96-472b-ba79-910f236e5121_buggy.java b/tmp/f5665a5d-8192-4c5a-a600-5f3c8f508f2d_fixed.java
index dc93be3..3355e94 100644
--- a/tmp/be419107-6f96-472b-ba79-910f236e5121_buggy.java
+++ b/tmp/f5665a5d-8192-4c5a-a600-5f3c8f508f2d_fixed.java
@@ -1,14 +1,17 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        if (!el.tag().isKnownTag() || !el.tag().isSelfClosing()) {
+            // for unknown tags or known non-empty tags, add to stack and emit fake end tag to close it immediately
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
+        // known empty tags: don't add to the stack, don't generate end tag
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
