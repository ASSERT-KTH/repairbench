diff --git a/tmp/7eea7f02-9804-4231-ad81-1fe90b6bcc48_buggy.java b/tmp/3cd72503-46cb-494f-9730-9a0d37299787_fixed.java
index dc93be3..4cac2ce 100644
--- a/tmp/7eea7f02-9804-4231-ad81-1fe90b6bcc48_buggy.java
+++ b/tmp/3cd72503-46cb-494f-9730-9a0d37299787_fixed.java
@@ -1,14 +1,18 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        boolean isKnownEmptyTag = el.tag().isEmpty();  // e.g. br, img, hr
+        if (!isKnownEmptyTag) {
+            // unknown tag, leave as self-closing
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
