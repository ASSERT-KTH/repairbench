diff --git a/tmp/305f48c1-ff7e-4bd9-9af0-1635e2b08afc_buggy.java b/tmp/3ae3375e-aa1c-4051-bfbe-1bda32d598c7_fixed.java
index dc93be3..a797a06 100644
--- a/tmp/305f48c1-ff7e-4bd9-9af0-1635e2b08afc_buggy.java
+++ b/tmp/3ae3375e-aa1c-4051-bfbe-1bda32d598c7_fixed.java
@@ -1,14 +1,14 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        if (el.tag().isKnownTag()) {
+            // force an end tag for known empty tags so parser generates appropriate end elements
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
