diff --git a/tmp/a29e4af3-186d-42b3-9bc1-3799a91ab5cf_buggy.java b/tmp/34efeb37-8634-44b7-ba46-a9d2526958c0_fixed.java
index dc93be3..7c16c95 100644
--- a/tmp/a29e4af3-186d-42b3-9bc1-3799a91ab5cf_buggy.java
+++ b/tmp/34efeb37-8634-44b7-ba46-a9d2526958c0_fixed.java
@@ -1,14 +1,17 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        if (!el.tag().isKnownTag() || !el.tag().isEmpty()) {
+            // for unknown tags or non-empty known tags, put the element on the stack and emit a fake end tag immediately
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
