diff --git a/tmp/36ad9c67-845e-48e6-96be-ac010fa9df5c_buggy.java b/tmp/dd704e7b-f672-4076-8b41-29c020fd7359_fixed.java
index dc93be3..f66ce47 100644
--- a/tmp/36ad9c67-845e-48e6-96be-ac010fa9df5c_buggy.java
+++ b/tmp/dd704e7b-f672-4076-8b41-29c020fd7359_fixed.java
@@ -1,14 +1,16 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        if (el.tag().isEmpty() == false) {  // Known (non-empty) tags emit fake end tag to force close
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
