diff --git a/tmp/527f2102-6b2b-4961-9508-a9b99cc150d6_buggy.java b/tmp/d70db9de-d51d-4e0e-9752-2bea8bbae3d3_fixed.java
index 6cfa79b..f84ea78 100644
--- a/tmp/527f2102-6b2b-4961-9508-a9b99cc150d6_buggy.java
+++ b/tmp/d70db9de-d51d-4e0e-9752-2bea8bbae3d3_fixed.java
@@ -1,12 +1,26 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>.
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
+    try {
         return 0.5 * (1.0 + Erf.erf((x - mean) /
                 (standardDeviation * Math.sqrt(2.0))));
+    } catch (MaxIterationsExceededException e) {
+        double devs = Math.abs(x - mean) / standardDeviation;
+        if (x < mean) {
+            if (devs > 20.0) {
+                return 0.0;
+            }
+        } else {
+            if (devs > 20.0) {
+                return 1.0;
+            }
+        }
+        throw new MathException(e);
+    }
 }
\ No newline at end of file
