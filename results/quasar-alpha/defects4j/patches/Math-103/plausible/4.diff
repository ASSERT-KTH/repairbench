diff --git a/tmp/091aabad-a19a-4206-aaf8-25868c43207f_buggy.java b/tmp/936108c9-f8e1-47e2-a49f-6e458e2fb47a_fixed.java
index 6cfa79b..070aa5b 100644
--- a/tmp/091aabad-a19a-4206-aaf8-25868c43207f_buggy.java
+++ b/tmp/936108c9-f8e1-47e2-a49f-6e458e2fb47a_fixed.java
@@ -1,12 +1,20 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    try {
+        return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));
+    } catch (MaxIterationsExceededException ex) {
+        double devs = Math.abs(x - mean) / standardDeviation;
+        if (x < mean) {
+            if (devs > 20.0) {
+                return 0.0;
+            } else {
+                throw new MathException(ex);
+            }
+        } else {
+            if (devs > 20.0) {
+                return 1.0;
+            } else {
+                throw new MathException(ex);
+            }
+        }
+    }
 }
\ No newline at end of file
