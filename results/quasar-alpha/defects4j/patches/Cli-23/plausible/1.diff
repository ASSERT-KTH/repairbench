diff --git a/tmp/0f6525fa-c562-4637-8eaf-b703e4963ec6_buggy.java b/tmp/4c53d2a8-974b-4235-b5a1-106c729b57bc_fixed.java
index 227a4ef..bae9116 100644
--- a/tmp/0f6525fa-c562-4637-8eaf-b703e4963ec6_buggy.java
+++ b/tmp/4c53d2a8-974b-4235-b5a1-106c729b57bc_fixed.java
@@ -1,48 +1,53 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         int lastPos = pos;
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
+        // FIX: if findWrapPos cannot find wrap and line is too long just append whole and return
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
-            } else
-            if (pos == lastPos)
+        } 
+        // If wrap pos doesn't move forward (wrapped line cannot be split),
+        // then to avoid infinite loop, just append whole text in this line
+        else if (pos == lastPos)
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            sb.append(text);
+
+            return sb;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
