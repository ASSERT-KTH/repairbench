diff --git a/tmp/851df3ca-6948-4f62-a74b-813dd8eee5cf_buggy.java b/tmp/5ab764ed-0741-44c5-a8b3-9360a44f16c3_fixed.java
index 800e6e1..b3ecd04 100644
--- a/tmp/851df3ca-6948-4f62-a74b-813dd8eee5cf_buggy.java
+++ b/tmp/5ab764ed-0741-44c5-a8b3-9360a44f16c3_fixed.java
@@ -1,32 +1,32 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
+  
+  // Always collect function or property stubs from JsDoc
+  // This needs to be outside the switch to collect on all nodes,
+  // to handle property declaration stubs like "goog.foo;"
+  if (n.getJSDocInfo() != null) {
+    defineSlotFromDocInfo(n, parent);
+  }
+
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file
