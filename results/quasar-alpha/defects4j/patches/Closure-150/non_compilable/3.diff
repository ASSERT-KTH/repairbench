diff --git a/tmp/af3ddb3e-f07e-45bb-ab51-f863544dd765_buggy.java b/tmp/a8c8e2d0-f804-4cde-800a-a4c0c97c4f33_fixed.java
index 800e6e1..b8041fb 100644
--- a/tmp/af3ddb3e-f07e-45bb-ab51-f863544dd765_buggy.java
+++ b/tmp/a8c8e2d0-f804-4cde-800a-a4c0c97c4f33_fixed.java
@@ -1,32 +1,34 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
+
+  // First, handle property type stubs attached to qualified names or object literals.
+  if (n.getType() == Token.GETPROP || n.getType() == Token.STRING) {
+    JSDocInfo info = n.getJSDocInfo();
+    if (info != null && info.hasType()) {
+      // For stubs like /** @type {number} */ x.y;
+      defineDeclaredProperty(n, parent);
+    }
+  }
+
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file
