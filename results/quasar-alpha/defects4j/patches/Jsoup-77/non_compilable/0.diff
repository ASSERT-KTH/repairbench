diff --git a/tmp/76f18abc-60ed-465e-8cd7-608ee59e7bc8_buggy.java b/tmp/4e11fa75-c53c-4c97-a3ff-4a8fecb75b61_fixed.java
index 9a3a9db..e578dd0 100644
--- a/tmp/76f18abc-60ed-465e-8cd7-608ee59e7bc8_buggy.java
+++ b/tmp/4e11fa75-c53c-4c97-a3ff-4a8fecb75b61_fixed.java
@@ -1,27 +1,41 @@
 /**
  * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
  * found, skips.
  *
  * @param endTag tag to close
  */
 private void popStackToClose(Token.EndTag endTag) {
     String elName = endTag.name();
     Element firstFound = null;
 
     for (int pos = stack.size() -1; pos >= 0; pos--) {
         Element next = stack.get(pos);
         if (next.nodeName().equals(elName)) {
             firstFound = next;
             break;
         }
     }
     if (firstFound == null)
         return; // not found, skip
 
+    // Remove elements from the top *down to and including* firstFound
     for (int pos = stack.size() -1; pos >= 0; pos--) {
         Element next = stack.get(pos);
         stack.remove(pos);
         if (next == firstFound)
             break;
     }
+
+    // Also remove children of the new last element to ensure correct tree closure
+    if (!stack.isEmpty()) {
+        Element last = stack.get(stack.size() - 1);
+        while (!last.children().isEmpty() && last.childNode(last.childNodeSize() - 1) instanceof Element) {
+            Element lastChild = (Element) last.childNode(last.childNodeSize() -1);
+            if (lastChild.nodeName().equals(elName)) {
+                last.removeChild(lastChild);
+            } else {
+                break;
+            }
+        }
+    }
 }
\ No newline at end of file
