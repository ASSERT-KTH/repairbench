diff --git a/tmp/bfdb9a8e-3aa1-45b6-83f6-545b9651397e_buggy.java b/tmp/6cb9418c-2f34-4018-8af4-e35e79986bff_fixed.java
index 56b2d66..2f4f850 100644
--- a/tmp/bfdb9a8e-3aa1-45b6-83f6-545b9651397e_buggy.java
+++ b/tmp/6cb9418c-2f34-4018-8af4-e35e79986bff_fixed.java
@@ -1,45 +1,64 @@
 /**
  * Removes the phase 1 objective function, positive cost non-artificial variables,
  * and the non-basic artificial variables from this tableau.
  */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
     columnsToDrop.add(0);
 
     // positive cost non-artificial variables
     for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
     for (int i = 0; i < getNumArtificialVariables(); i++) {
         int col = i + getArtificialVariableOffset();
         if (getBasicRow(col) == null) {
             columnsToDrop.add(col);
         }
     }
 
     double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
     for (int i = 1; i < getHeight(); i++) {
         int col = 0;
         for (int j = 0; j < getWidth(); j++) {
             if (!columnsToDrop.contains(j)) {
                 matrix[i - 1][col++] = tableau.getEntry(i, j);
             }
         }
     }
 
+    // Remove phase 1 row from columnLabels (first row corresponds to phase 1 objective function)
+    // Remove in descending order to maintain correct indices
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
         columnLabels.remove((int) columnsToDrop.get(i));
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
-        this.numArtificialVariables = 0;
+
+    // Adjust numArtificialVariables: retain only those that remain basic variables
+    int newNumArtificial = 0;
+    for (int i = 0; i < getNumArtificialVariables(); i++) {
+        int col = getArtificialVariableOffset() + i;
+        // Check if this artificial var column was NOT dropped (i.e., still exists)
+        boolean stillExists = true;
+        for (int dropCol : columnsToDrop) {
+            if (dropCol == col) {
+                stillExists = false;
+                break;
+            }
+        }
+        if (stillExists) {
+            newNumArtificial++;
+        }
+    }
+    this.numArtificialVariables = newNumArtificial;
 }
\ No newline at end of file
