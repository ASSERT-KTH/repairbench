diff --git a/tmp/678e999c-d2b2-4060-8830-0710ad4dce6b_buggy.java b/tmp/ab492ccf-1814-4571-bda6-260c2071a625_fixed.java
index 56b2d66..c8dc1f4 100644
--- a/tmp/678e999c-d2b2-4060-8830-0710ad4dce6b_buggy.java
+++ b/tmp/ab492ccf-1814-4571-bda6-260c2071a625_fixed.java
@@ -1,45 +1,66 @@
 /**
  * Removes the phase 1 objective function, positive cost non-artificial variables,
  * and the non-basic artificial variables from this tableau.
  */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
     columnsToDrop.add(0);
 
     // positive cost non-artificial variables
     for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
     for (int i = 0; i < getNumArtificialVariables(); i++) {
         int col = i + getArtificialVariableOffset();
         if (getBasicRow(col) == null) {
             columnsToDrop.add(col);
         }
     }
 
     double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
     for (int i = 1; i < getHeight(); i++) {
         int col = 0;
         for (int j = 0; j < getWidth(); j++) {
             if (!columnsToDrop.contains(j)) {
                 matrix[i - 1][col++] = tableau.getEntry(i, j);
             }
         }
     }
 
+    // Fix: Remove artificial variable labels *before* dropping objective row and variable columns
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
         columnLabels.remove((int) columnsToDrop.get(i));
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
+
+    // Also adjust the objective function value coefficients vector
+    double[][] newTableau = new double[getHeight()][getWidth() - columnsToDrop.size()];
+    // Copy the objective row (skip the removed row 0 entirely, as phase 1 objective is dropped)
+    double[][] data = tableau.getData();
+    // Rebuild tableau including the new objective row (row index zero)
+    newTableau[0] = new double[newTableau[0].length];
+    int col = 0;
+    for (int j = 0; j < getWidth(); j++) {
+        if (!columnsToDrop.contains(j)) {
+            newTableau[0][col++] = data[0][j];
+        }
+    }
+    // Copy the rest of the rows (already copied at the beginning)
+    for (int i = 1; i < newTableau.length; i++) {
+        for (int j = 0; j < newTableau[i].length; j++) {
+            newTableau[i][j] = matrix[i -1][j];
+        }
+    }
+    this.tableau = new Array2DRowRealMatrix(newTableau);
 }
\ No newline at end of file
