diff --git a/tmp/183dab1d-7a6a-42dd-a3fa-d7549eaf62f5_buggy.java b/tmp/8229b917-9248-4271-b306-4b3767ad8081_fixed.java
index e69de29..87618c1 100644
--- a/tmp/183dab1d-7a6a-42dd-a3fa-d7549eaf62f5_buggy.java
+++ b/tmp/8229b917-9248-4271-b306-4b3767ad8081_fixed.java
@@ -0,0 +1,29 @@
+@Override
+public JavaType constructType(Type type, TypeBindings bindings) {
+    JavaType result = _typeCache.get(type);
+    if (result != null) {
+        // ensure bindings propagation if missing
+        if (result.getBindings().isEmpty() && bindings != null && !bindings.isEmpty()) {
+            result = result.withBindings(bindings);
+        }
+        return result;
+    }
+
+    // Resolve the type, caching recursive references early
+    if (type instanceof Class<?>) {
+        result = _fromClass(null, (Class<?>) type, EMPTY_BINDINGS);
+    } else if (type instanceof ParameterizedType) {
+        result = _fromParamType(null, (ParameterizedType) type, EMPTY_BINDINGS);
+    } else if (type instanceof GenericArrayType) {
+        result = _fromArrayType(null, (GenericArrayType) type, EMPTY_BINDINGS);
+    } else if (type instanceof TypeVariable<?>) {
+        result = _fromVariable(null, (TypeVariable<?>) type, bindings);
+    } else if (type instanceof WildcardType) {
+        result = _fromWildcard(null, (WildcardType) type, bindings);
+    } else {
+        throw new IllegalArgumentException("Unrecognized Type: " + type.toString());
+    }
+
+    _typeCache.put(type, result);
+    return result;
+}
\ No newline at end of file
