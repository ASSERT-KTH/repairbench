diff --git a/tmp/ec85af67-a5e0-412b-9b33-38df4dfae229_buggy.java b/tmp/e01681c5-4461-4841-aa24-7c8cad417885_fixed.java
index e69de29..cde2d02 100644
--- a/tmp/ec85af67-a5e0-412b-9b33-38df4dfae229_buggy.java
+++ b/tmp/e01681c5-4461-4841-aa24-7c8cad417885_fixed.java
@@ -0,0 +1,28 @@
+@Override
+public AnnotatedMember resolveMemberAnnotations(AnnotatedMember member) {
+    // Fix: During class resolution, ensure base type's annotations are included
+    if (member == null) {
+        return null;
+    }
+    // If member is from a subtype, try to find overridden member in supertypes
+    AnnotatedMember resolved = _resolveOverrides(member);
+    if (resolved != null) {
+        return resolved;
+    }
+    return member;
+}
+
+private AnnotatedMember _resolveOverrides(AnnotatedMember member) {
+    Class<?> declaringClass = member.getDeclaringClass();
+    Class<?> superClass = declaringClass.getSuperclass();
+    while (superClass != null && superClass != Object.class) {
+        AnnotatedClass superAC = _introspector.forClass(superClass, _bindings);
+        for (AnnotatedMember superMember : superAC.fields()) {
+            if (superMember.getName().equals(member.getName())) {
+                return superMember;
+            }
+        }
+        superClass = superClass.getSuperclass();
+    }
+    return null;
+}
\ No newline at end of file
