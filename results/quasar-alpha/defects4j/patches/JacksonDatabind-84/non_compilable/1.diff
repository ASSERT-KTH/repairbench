diff --git a/tmp/c7687504-3af1-425d-bff0-4c9312bf5f51_buggy.java b/tmp/18eb6de7-9a66-4ad3-a3bc-b791c9715885_fixed.java
index e69de29..b301eca 100644
--- a/tmp/c7687504-3af1-425d-bff0-4c9312bf5f51_buggy.java
+++ b/tmp/18eb6de7-9a66-4ad3-a3bc-b791c9715885_fixed.java
@@ -0,0 +1,35 @@
+@Override
+public JavaType constructType(Type type, TypeBindings bindings) {
+    if (type instanceof Class<?>) {
+        Class<?> clazz = (Class<?>) type;
+        if (clazz.isArray()) {
+            return ArrayType.construct(constructType(clazz.getComponentType(), bindings), bindings);
+        }
+        JavaType cachedType = _typeCache.get(type);
+        if (cachedType != null) {
+            return cachedType;
+        }
+        // Recursive type resolution
+        JavaType result = _fromClass(null, clazz, bindings);
+        _typeCache.put(type, result);
+        return result;
+    }
+    if (type instanceof ParameterizedType) {
+        ParameterizedType pt = (ParameterizedType) type;
+        Class<?> rawType = (Class<?>) pt.getRawType();
+        JavaType cachedType = _typeCache.get(type);
+        if (cachedType != null) {
+            return cachedType;
+        }
+        Type[] args = pt.getActualTypeArguments();
+        JavaType[] paramTypes = new JavaType[args.length];
+        for (int i = 0; i < args.length; ++i) {
+            paramTypes[i] = constructType(args[i], bindings);
+        }
+        JavaType result = _fromParameterized(rawType, paramTypes, bindings);
+        _typeCache.put(type, result);
+        return result;
+    }
+    // Handle other cases as default
+    return _constructType(type, bindings);
+}
\ No newline at end of file
