diff --git a/tmp/de5177a9-c6db-462b-9ece-64b30f92f2b5_buggy.java b/tmp/4b348872-4313-4e8e-85d3-058c7ba3d4a2_fixed.java
index 855afa5..5d59934 100644
--- a/tmp/de5177a9-c6db-462b-9ece-64b30f92f2b5_buggy.java
+++ b/tmp/4b348872-4313-4e8e-85d3-058c7ba3d4a2_fixed.java
@@ -1,13 +1,41 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        String path = u.getPath();
+        String query = u.getQuery();
+        String fragment = u.getRef();
+
+        // Encode path (each segment separately)
+        StringBuilder encodedPath = new StringBuilder();
+        if (path != null && !path.isEmpty()) {
+            String[] segments = path.split("/");
+            for (int i = 0; i < segments.length; i++) {
+                if (i > 0) encodedPath.append("/");
+                // encode segment
+                encodedPath.append(URLEncoder.encode(segments[i], "UTF-8").replace("+", "%20"));
+            }
+            // preserve leading slash
+            if (path.startsWith("/") && !encodedPath.toString().startsWith("/"))
+                encodedPath.insert(0, "/");
+        }
+
+        // Encode query
+        String encodedQuery = null;
+        if (query != null) {
+            encodedQuery = URLEncoder.encode(query, "UTF-8").replace("+", "%20");
+        }
+
+        URI uri = new URI(
+            u.getProtocol(),
+            u.getUserInfo(),
+            u.getHost(),
+            u.getPort(),
+            encodedPath.length() > 0 ? encodedPath.toString() : null,
+            encodedQuery,
+            fragment);
         return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+    } catch (Exception e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
