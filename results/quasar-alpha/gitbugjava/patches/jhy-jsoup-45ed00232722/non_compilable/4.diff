diff --git a/tmp/954860bc-1f70-456f-bd47-cae06c6fa9c5_buggy.java b/tmp/1450524c-9bb9-43a1-908e-551107844b04_fixed.java
index 855afa5..c74540b 100644
--- a/tmp/954860bc-1f70-456f-bd47-cae06c6fa9c5_buggy.java
+++ b/tmp/1450524c-9bb9-43a1-908e-551107844b04_fixed.java
@@ -1,13 +1,40 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        String path = u.getPath();
+        String encodedPath = path != null ? URLEncoder.encode(path, "UTF-8").replace("+", "%20").replace("%2F", "/") : null;
+
+        // encode query if present
+        String query = u.getQuery();
+        String encodedQuery = null;
+        if (query != null) {
+            encodedQuery = Arrays.stream(query.split("&"))
+                    .map(param -> {
+                        int idx = param.indexOf('=');
+                        if (idx >= 0) {
+                            String key = param.substring(0, idx);
+                            String value = param.substring(idx + 1);
+                            return URLEncoder.encode(key, java.nio.charset.StandardCharsets.UTF_8).replace("+", "%20") +
+                                    "=" +
+                                    URLEncoder.encode(value, java.nio.charset.StandardCharsets.UTF_8).replace("+", "%20");
+                        } else {
+                            return URLEncoder.encode(param, java.nio.charset.StandardCharsets.UTF_8).replace("+", "%20");
+                        }
+                    })
+                    .collect(java.util.stream.Collectors.joining("&"));
+        }
+
+        URI uri = new URI(
+                u.getProtocol(),
+                u.getUserInfo(),
+                u.getHost(),
+                u.getPort(),
+                encodedPath,
+                encodedQuery,
+                u.getRef());
+        return uri.toURL();
+    } catch (Exception e) {
+        // fallback to the original URL if encoding fails
         return u;
     }
 }
\ No newline at end of file
