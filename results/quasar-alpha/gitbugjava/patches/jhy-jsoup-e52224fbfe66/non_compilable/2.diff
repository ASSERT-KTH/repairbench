diff --git a/tmp/091b84d7-08ed-4723-90e7-9e2d9d2d1a0e_buggy.java b/tmp/89586d6a-59b7-433d-86ff-b9d9fe5aa611_fixed.java
index acd5eb5..0dbc78f 100644
--- a/tmp/091b84d7-08ed-4723-90e7-9e2d9d2d1a0e_buggy.java
+++ b/tmp/89586d6a-59b7-433d-86ff-b9d9fe5aa611_fixed.java
@@ -1,32 +1,36 @@
 @Override
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
         trimTrailing = trimLikeBlock && nextSibling() == null;
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         Node prev = previousSibling();
         boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
-                || (prev instanceof Element && ((Element) prev).isBlock())
-                ;
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && (((TextNode) next).isBlank()))
+            || (prev instanceof Element && ((Element) prev).isBlock());
         if (couldSkip && isBlank) return;
 
+        // fix: do NOT indent before a blank text node containing just whitespace (e.g. " ") after <br>
+        // indent only if this node is NOT blank
         if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && isNode(prev, "br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            ((!isBlank) &&
+                (
+                    (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock())
+                    || (out.outline() && siblingNodes().size() > 0)
+                    || (siblingIndex > 0 && isNode(prev, "br"))
+                )
+            )
         )
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
