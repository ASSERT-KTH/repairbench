diff --git a/tmp/892af73e-53a7-4e12-a057-2c97bdf49436_buggy.java b/tmp/c03eba88-2ab3-46a1-a831-45151a2ee8b4_fixed.java
index 1098336..4c9d097 100644
--- a/tmp/892af73e-53a7-4e12-a057-2c97bdf49436_buggy.java
+++ b/tmp/c03eba88-2ab3-46a1-a831-45151a2ee8b4_fixed.java
@@ -1,16 +1,24 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
     final var source = new InputSource(new StringReader(code));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
     var formattedCode = sheet.getCssText(this.formatter);
 
     // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
     formattedCode = formattedCode.replace("\t;", "\\9;");
 
+    // Normalize line endings to match the desired style
+    String systemLineSeparator = System.lineSeparator();
+    if (!systemLineSeparator.equals(ending.getChars())) {
+        formattedCode = formattedCode.replace(systemLineSeparator, ending.getChars());
+    }
+    // Additionally, convert any lone CR or LF to the desired ending, to handle inconsistent inputs
+    formattedCode = formattedCode.replace("\r\n", "\n").replace("\r", "\n").replace("\n", ending.getChars());
+
     if (code.equals(formattedCode)) {
         return null;
     }
     return formattedCode;
 }
\ No newline at end of file
