diff --git a/tmp/e97eb5b1-a00f-47da-a826-40b749170c30_buggy.java b/tmp/7963e8ac-1007-4eaf-abe9-9b3b8f17a038_fixed.java
index 862c60c..64800b7 100644
--- a/tmp/e97eb5b1-a00f-47da-a826-40b749170c30_buggy.java
+++ b/tmp/7963e8ac-1007-4eaf-abe9-9b3b8f17a038_fixed.java
@@ -1,25 +1,37 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
+        if (couldSkip && isBlank())
+            return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        // Add indentation if:
+        // (a) this is the first sibling, the parent formats as block, not blank
+        // (b) or we are outlining, have siblings, not blank
+        // (c) or the previous sibling is <br> - ensure indentation follows <br> inside a block element
+        boolean indentFirst = (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank());
+        boolean indentOutline = (out.outline() && siblingNodes().size() > 0 && !isBlank());
+        boolean indentAfterBr = false;
+        if (!isBlank() && parent != null && parent.tag().isBlock() && siblingIndex > 0) {
+            Node prev = siblingIndex > 0 ? siblingNodes().get(siblingIndex -1) : null;
+            if (prev instanceof Element && ((Element) prev).normalName().equals("br"))
+                indentAfterBr = true;
+        }
+        if (indentFirst || indentOutline || indentAfterBr)
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
