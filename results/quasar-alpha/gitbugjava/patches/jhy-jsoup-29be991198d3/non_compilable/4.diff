diff --git a/tmp/2cd9671d-bf57-40bb-ab41-e0f92c222ae5_buggy.java b/tmp/8fde1a5c-1bb0-4733-98f5-6151da6267d4_fixed.java
index 862c60c..3e44c48 100644
--- a/tmp/2cd9671d-bf57-40bb-ab41-e0f92c222ae5_buggy.java
+++ b/tmp/8fde1a5c-1bb0-4733-98f5-6151da6267d4_fixed.java
@@ -1,25 +1,28 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && (((TextNode) next).isBlank()));
         if (couldSkip && isBlank()) return;
 
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+            (out.outline() && siblingNodes().size() > 0 && !isBlank())) {
             indent(accum, depth, out);
+        } else if (previousSibling() instanceof Element && ((Element) previousSibling()).normalName().equals("br")) {
+            // Fix: indent after <br> with prettyPrint enabled
+            indent(accum, depth, out);
+        }
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
