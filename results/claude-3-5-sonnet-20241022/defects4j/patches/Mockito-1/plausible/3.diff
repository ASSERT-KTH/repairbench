diff --git a/tmp/7853dc0c-24ef-4483-8d2f-96949e4e396c_buggy.java b/tmp/c434930f-2743-437e-a390-b326c48cab14_fixed.java
index 1c875ad..2e78f2b 100644
--- a/tmp/7853dc0c-24ef-4483-8d2f-96949e4e396c_buggy.java
+++ b/tmp/c434930f-2743-437e-a390-b326c48cab14_fixed.java
@@ -1,31 +1,17 @@
 public void captureArgumentsFrom(Invocation invocation) {
-        if (invocation.getMethod().isVarArgs()) {
-            int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
-
-        } else {
     for (int position = 0; position < matchers.size(); position++) {
         Matcher m = matchers.get(position);
         if (m instanceof CapturesArguments) {
+            if (invocation.getMethod().isVarArgs() && position >= invocation.getRawArguments().length - 1) {
+                Object array = invocation.getRawArguments()[invocation.getRawArguments().length - 1];
+                if (array != null) {
+                    for (int i = 0; i < Array.getLength(array); i++) {
+                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
+                    }
+                }
+            } else if (position < invocation.getRawArguments().length) {
                 ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
             }
         }
     }
-
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
 }
\ No newline at end of file
