diff --git a/tmp/03f427e5-daee-4241-bb24-fe0b8c338229_buggy.java b/tmp/195ad2ce-c48c-4d4d-b787-6b947320ba0f_fixed.java
index 5f1dcf2..066cff0 100644
--- a/tmp/03f427e5-daee-4241-bb24-fe0b8c338229_buggy.java
+++ b/tmp/195ad2ce-c48c-4d4d-b787-6b947320ba0f_fixed.java
@@ -1,41 +1,39 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
-
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
-
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
-                if (comparator.compare(reflected, expanded) <= 0) {
+            if (comparator.compare(expanded, reflected) < 0) {
+                // accept the expanded simplex
+                return;
+            } else {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
-                }
-
                 return;
-
+            }
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
+        if (comparator.compare(contracted, original[original.length - 1]) < 0) {
             // accept the contracted simplex
-
-            // check convergence
             return;
         }
 
+        // perform a shrink step
+        evaluateNewSimplex(original, sigma, comparator);
     }
-
 }
\ No newline at end of file
