diff --git a/tmp/0ca3ed96-b39a-46cb-a41d-19e44668edd4_buggy.java b/tmp/ad3d5e34-2402-4a2a-a6fe-a59b8334e234_fixed.java
index 5f1dcf2..71d103c 100644
--- a/tmp/0ca3ed96-b39a-46cb-a41d-19e44668edd4_buggy.java
+++ b/tmp/ad3d5e34-2402-4a2a-a6fe-a59b8334e234_fixed.java
@@ -1,41 +1,40 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
         while (true) {
-
             incrementIterationsCounter();
 
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
 
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
-
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
-                if (comparator.compare(reflected, expanded) <= 0) {
+                if (comparator.compare(expanded, reflected) < 0) {
+                    // accept the expanded simplex
+                    return;
+                } else {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
-                }
-
                     return;
-
+                }
             }
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
-
-            // check convergence
                 return;
             }
 
+            // perform a shrink step
+            evaluateNewSimplex(original, sigma, comparator);
+            return;
         }
-
     }
\ No newline at end of file
