diff --git a/tmp/29a6fab2-e7bc-4dba-9934-a284c0276507_buggy.java b/tmp/9a5c5f62-7924-406f-8832-72d4573b6cc8_fixed.java
index 1ad070d..42dcb9a 100644
--- a/tmp/29a6fab2-e7bc-4dba-9934-a284c0276507_buggy.java
+++ b/tmp/9a5c5f62-7924-406f-8832-72d4573b6cc8_fixed.java
@@ -1,38 +1,27 @@
-    /**
-     * Handle an escape sequence.
-     * The current character must be the escape character.
-     * On return, the next character is available by calling {@link ExtendedBufferedReader#getLastChar()}
-     * on the input stream.
-     * 
-     * @return the unescaped character (as an int) or {@link END_OF_STREAM} if char following the escape is invalid. 
-     * @throws IOException if there is a problem reading the stream or the end of stream is detected: 
-     * the escape character is not allowed at end of strem
-     */
 int readEscape() throws IOException {
     // the escape char has just been read (normally a backslash)
     final int c = in.read();
     switch (c) {
     case 'r':
-            return CR;
+        return '\\' | ('r' << 8);  // Return escaped 'r'
     case 'n':
-            return LF;
+        return '\\' | ('n' << 8);  // Return escaped 'n'
     case 't':
-            return TAB;
+        return '\\' | ('t' << 8);  // Return escaped 't'
     case 'b':
-            return BACKSPACE;
+        return '\\' | ('b' << 8);  // Return escaped 'b'
     case 'f':
-            return FF;
+        return '\\' | ('f' << 8);  // Return escaped 'f'
     case CR:
     case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
+    case FF:
+    case TAB:
+    case BACKSPACE:
         return c;
     case END_OF_STREAM:
         throw new IOException("EOF whilst processing escape sequence");
     default:
-            // Now check for meta-characters
-                return c;
-            // indicate unexpected char - available from in.getLastChar()
+        // For any other character, return the escape character and the character
+        return '\\' | (c << 8);
     }
 }
\ No newline at end of file
