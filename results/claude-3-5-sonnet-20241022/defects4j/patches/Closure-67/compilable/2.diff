diff --git a/tmp/d41a0799-db24-4756-9009-f0bd543e9c7b_buggy.java b/tmp/cb8bd7af-b611-4e07-8d18-597327ff0034_fixed.java
index 939f49b..2d99a3f 100644
--- a/tmp/d41a0799-db24-4756-9009-f0bd543e9c7b_buggy.java
+++ b/tmp/cb8bd7af-b611-4e07-8d18-597327ff0034_fixed.java
@@ -1,21 +1,24 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        && n.getType() == Token.GETPROP) {
         
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        Node firstChild = n.getFirstChild();
+        while (firstChild != null && firstChild.getType() == Token.GETPROP) {
+            Node child = firstChild.getNext();
+            if (child != null && child.getType() == Token.STRING 
+                && child.getString().equals("prototype")) {
                 return true;
             }
-        }
+            firstChild = firstChild.getFirstChild();
         }
 
+        // Check one more time at the final level
+        Node child = firstChild != null ? firstChild.getNext() : null;
+        if (child != null && child.getType() == Token.STRING 
+            && child.getString().equals("prototype")) {
+            return true;
+        }
+    }
     return false;
 }
\ No newline at end of file
