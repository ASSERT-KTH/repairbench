diff --git a/tmp/3231aed8-a28a-4d31-be7e-bf723cf67cd3_buggy.java b/tmp/b0be2387-f50f-45be-9b2b-79a3dd885ea9_fixed.java
index 939f49b..b5ffb09 100644
--- a/tmp/3231aed8-a28a-4d31-be7e-bf723cf67cd3_buggy.java
+++ b/tmp/b0be2387-f50f-45be-9b2b-79a3dd885ea9_fixed.java
@@ -1,21 +1,27 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
+        Node firstChild = n.getFirstChild();
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+            firstChild.getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
+          Node child = firstChild.getFirstChild().getNext();
+          if (child.getType() == Token.STRING &&
+              child.getString().equals("prototype")) {
+            return true;
+          }
+        } else {
+          Node child = firstChild.getNext();
           if (child.getType() == Token.STRING &&
               child.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
