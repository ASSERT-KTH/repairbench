diff --git a/tmp/ee81dac4-6c35-480f-ae25-e8d9bd7ec6d6_buggy.java b/tmp/6e451f74-84b2-41bd-80eb-ccbc866370b4_fixed.java
index 939f49b..c85d8da 100644
--- a/tmp/ee81dac4-6c35-480f-ae25-e8d9bd7ec6d6_buggy.java
+++ b/tmp/6e451f74-84b2-41bd-80eb-ccbc866370b4_fixed.java
@@ -1,21 +1,26 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        n.getFirstChild().getType() == Token.GETPROP || n.getFirstChild().getType() == Token.NAME;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node child;
+      if (n.getFirstChild().getType() == Token.GETPROP) {
+        child = n.getFirstChild().getFirstChild().getNext();
+      } else {
+        child = n.getFirstChild().getNext();
+      }
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
