diff --git a/tmp/7e4a2751-ee11-49aa-846b-4872ef99a961_buggy.java b/tmp/92183c81-637f-430e-ac4c-649a29e7d7a3_fixed.java
index 939f49b..1e67103 100644
--- a/tmp/7e4a2751-ee11-49aa-846b-4872ef99a961_buggy.java
+++ b/tmp/92183c81-637f-430e-ac4c-649a29e7d7a3_fixed.java
@@ -1,21 +1,26 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
         && n.getType() == Token.GETPROP
         ) {
+        Node firstChild = n.getFirstChild();
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        boolean isChainedProperty = firstChild.getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
+            Node child = firstChild.getFirstChild().getNext();
             if (child.getType() == Token.STRING &&
                 child.getString().equals("prototype")) {
                 return true;
             }
+        } else {
+            // Handle direct prototype assignments
+            Node child = firstChild.getNext();
+            if (child != null && child.getType() == Token.STRING &&
+                child.getString().equals("prototype")) {
+                return true;
+            }
         }
     }
-
     return false;
 }
\ No newline at end of file
