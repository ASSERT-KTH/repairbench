diff --git a/tmp/a1fbb442-5742-4d85-a787-8668f122a991_buggy.java b/tmp/6e30a3da-21cf-46ab-844f-0612f4b1fb9f_fixed.java
index d6a560a..ee9807a 100644
--- a/tmp/a1fbb442-5742-4d85-a787-8668f122a991_buggy.java
+++ b/tmp/6e30a3da-21cf-46ab-844f-0612f4b1fb9f_fixed.java
@@ -1,33 +1,31 @@
 /**
  * Resolve the referenced type within the enclosing scope.
  */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
+    if (detectImplicitPrototypeCycle()) {
+        handleTypeCycle(t);
+        return this;
+    }
+
     // TODO(user): Investigate whether it is really necessary to keep two
     // different mechanisms for resolving named types, and if so, which order
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
 
     if (resolved) {
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
         return registry.isLastGeneration() ?
             getReferencedType() : this;
     }
 
     resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
         finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
 }
\ No newline at end of file
