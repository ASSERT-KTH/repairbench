diff --git a/tmp/b830e924-d27d-4363-8adf-6719b5d0a741_buggy.java b/tmp/a98b8c83-3bac-4d14-8a96-0855119f7798_fixed.java
index 70cafe0..5689e5e 100644
--- a/tmp/b830e924-d27d-4363-8adf-6719b5d0a741_buggy.java
+++ b/tmp/a98b8c83-3bac-4d14-8a96-0855119f7798_fixed.java
@@ -1,18 +1,28 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon)) {
                 if (row == null) {
+                    // Check if all other entries in column are zero
+                    boolean isBasic = true;
+                    for (int k = getNumObjectiveFunctions(); k < getHeight(); k++) {
+                        if (k != i && !MathUtils.equals(getEntry(k, col), 0.0, epsilon)) {
+                            isBasic = false;
+                            break;
+                        }
+                    }
+                    if (isBasic) {
                         row = i;
+                    }
                 } else {
                     return null;
                 }
             }
         }
         return row;
     }
\ No newline at end of file
