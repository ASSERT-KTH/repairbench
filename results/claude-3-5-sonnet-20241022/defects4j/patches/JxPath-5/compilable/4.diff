diff --git a/tmp/5a953e49-d2e9-45c6-919a-324d2e7e5a5d_buggy.java b/tmp/70be7bf0-14ea-424f-acbf-6a627356c541_fixed.java
index 5f8ac1a..dd8b7ab 100644
--- a/tmp/5a953e49-d2e9-45c6-919a-324d2e7e5a5d_buggy.java
+++ b/tmp/70be7bf0-14ea-424f-acbf-6a627356c541_fixed.java
@@ -1,34 +1,38 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
+    // Handle case where nodes are from different trees
+    if (p1 == null || p2 == null || !p1.getClass().equals(p2.getClass())) {
+        return p1.getClass().getName().compareTo(p2.getClass().getName());
+    }
+
     if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
+        return p1.compareChildNodePointers(p1, p2);
     }
+    
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
