diff --git a/tmp/a058bd7e-1181-44f6-b736-ed3f41814fb1_buggy.java b/tmp/e03367b4-86c6-4848-af0e-652aeedc2ed0_fixed.java
index fecb896..d6c2b29 100644
--- a/tmp/a058bd7e-1181-44f6-b736-ed3f41814fb1_buggy.java
+++ b/tmp/e03367b4-86c6-4848-af0e-652aeedc2ed0_fixed.java
@@ -1,34 +1,30 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    char quote = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+        if (last != ESC) {
+            if (quote == 0 && (c == '\'' || c == '"'))
+                quote = c;
+            else if (c == quote && last != ESC)
+                quote = 0;
+            else if (quote == 0 && c.equals(open)) {
                 depth++;
                 if (start == -1)
                     start = pos;
             }
-                else if (c.equals(close))
+            else if (quote == 0 && c.equals(close))
                 depth--;
         }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
