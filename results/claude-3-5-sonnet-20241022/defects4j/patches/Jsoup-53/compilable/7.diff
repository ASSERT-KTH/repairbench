diff --git a/tmp/ca73d752-d929-499e-bb82-701d6bde26b5_buggy.java b/tmp/d6957608-17c3-4ba5-8d15-faf087eb98ea_fixed.java
index fecb896..73a7b86 100644
--- a/tmp/ca73d752-d929-499e-bb82-701d6bde26b5_buggy.java
+++ b/tmp/d6957608-17c3-4ba5-8d15-faf087eb98ea_fixed.java
@@ -1,34 +1,32 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    char inQuote = 0; // track quote state
 
     do {
         if (isEmpty()) break;
         Character c = consume();
         if (last == 0 || last != ESC) {
+            if ((c == '\'' || c == '"') && inQuote == 0) // start quote
+                inQuote = c;
+            else if (c == inQuote && last != ESC) // end quote
+                inQuote = 0;
+            else if (inQuote == 0) { // only check balanced markers outside of quotes
                 if (c.equals(open)) {
                     depth++;
                     if (start == -1)
                         start = pos;
                 }
                 else if (c.equals(close))
                     depth--;
             }
+        }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
