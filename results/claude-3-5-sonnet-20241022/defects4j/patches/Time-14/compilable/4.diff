diff --git a/tmp/d040b005-fc98-4fbc-85fd-5817114a7036_buggy.java b/tmp/66c11577-670e-4c6e-990c-4bb9947a5a00_fixed.java
index 10616db..8c45e6f 100644
--- a/tmp/d040b005-fc98-4fbc-85fd-5817114a7036_buggy.java
+++ b/tmp/66c11577-670e-4c6e-990c-4bb9947a5a00_fixed.java
@@ -1,19 +1,35 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+    
+    // Calculate the current year to check for leap year
+    boolean isLeapDay = false;
+    if (partial.size() >= 2) {
+        if (values[0] == 2 && values[1] == 29) {
+            isLeapDay = true;
+        }
+    }
+    
+    // Use chronology's datetime calculations for contiguous fields
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        
+        // Special handling for February 29th
+        int[] result = iChronology.get(partial, instant);
+        if (isLeapDay && result[0] != 2) {
+            // If we started with Feb 29 and moved to another month, keep the 29th if possible
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+            if (maxDay >= 29) {
+                result[1] = 29;
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
