diff --git a/tmp/b41533c9-6a61-4016-adc9-a9bd26883873_buggy.java b/tmp/f0c0111a-91fb-4e37-807a-6b22de2b2d51_fixed.java
index 10616db..c2373df 100644
--- a/tmp/b41533c9-6a61-4016-adc9-a9bd26883873_buggy.java
+++ b/tmp/f0c0111a-91fb-4e37-807a-6b22de2b2d51_fixed.java
@@ -1,19 +1,36 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
+    // handle leap year special cases
+    if (partial instanceof MonthDay) {
+        int month = values[0];
+        int day = values[1];
+        if ((month == 2 && day == 29) || (day > 28 && month + valueToAdd == 2)) {
+            // Creating a temporary date to handle the leap year calculation
+            Chronology chrono = partial.getChronology();
+            int year = chrono.year().get(DateTimeUtils.currentTimeMillis());
+            // Find next or previous leap year based on valueToAdd
+            while (!chrono.year().isLeap(year)) {
+                year += valueToAdd > 0 ? 1 : -1;
+            }
+            
+            LocalDate date = new LocalDate(year, month, day, chrono);
+            date = date.plusMonths(valueToAdd);
+            return new int[] {date.getMonthOfYear(), date.getDayOfMonth()};
+        }
+    }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
