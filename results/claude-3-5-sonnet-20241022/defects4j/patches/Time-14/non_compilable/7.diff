diff --git a/tmp/9667e9a8-eb4d-41e4-8c10-cb095dd6b43e_buggy.java b/tmp/530296cb-ecd0-46ad-a0d6-e42e26ce73f7_fixed.java
index 10616db..93ebe66 100644
--- a/tmp/9667e9a8-eb4d-41e4-8c10-cb095dd6b43e_buggy.java
+++ b/tmp/530296cb-ecd0-46ad-a0d6-e42e26ce73f7_fixed.java
@@ -1,19 +1,34 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
+    if (partial instanceof MonthDay) {
+        // Special handling for MonthDay to preserve leap day
+        int month = values[0];
+        int day = values[1];
+        // If it's February 29th or the last day of a month
+        if ((month == 2 && day == 29) || day > 28) {
+            int newMonth = ((month - 1 + valueToAdd) % 12 + 12) % 12 + 1;
+            // Adjust day for the target month
+            int maxDay = iChronology.getDaysInMonthMax(newMonth);
+            if (day > maxDay) {
+                day = maxDay;
+            }
+            values[0] = newMonth;
+            values[1] = day;
+            return values;
+        }
+    }
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
