diff --git a/tmp/44a5c786-a5cf-465c-bcf5-7b89a301c437_buggy.java b/tmp/b54b8eac-e747-40cb-88de-7b64309048fe_fixed.java
index d926eea..298be13 100644
--- a/tmp/44a5c786-a5cf-465c-bcf5-7b89a301c437_buggy.java
+++ b/tmp/b54b8eac-e747-40cb-88de-7b64309048fe_fixed.java
@@ -1,48 +1,50 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
             return this;
         }
         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
         if (format == null) {
             return this;
         }
         // Simple case first: serialize as numeric timestamp?
         JsonFormat.Shape shape = format.getShape();
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
 
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
         if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                 || format.hasLocale() || format.hasTimeZone()) {
             TimeZone tz = format.getTimeZone();
             final String pattern = format.hasPattern()
                     ? format.getPattern()
                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                     ? format.getLocale()
                     : serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
 
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        // If no specific pattern defined, use the mapper's default DateFormat
+        DateFormat df = serializers.getConfig().getDateFormat();
+        if (df instanceof SimpleDateFormat) {
+            SimpleDateFormat sdf = (SimpleDateFormat) df;
+            // Need to clone to maintain thread-safety
+            SimpleDateFormat newSdf = (SimpleDateFormat) sdf.clone();
+            TimeZone tz = format.getTimeZone();
+            if (tz != null) {
+                newSdf.setTimeZone(tz);
+            }
+            return withFormat(Boolean.FALSE, newSdf);
+        }
         return this;
     }
\ No newline at end of file
