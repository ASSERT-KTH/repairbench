diff --git a/tmp/67436555-bfed-4b1a-8bd4-d2befdeca805_buggy.java b/tmp/e0b051ba-6aad-4ac6-8b10-4fe8e09806a8_fixed.java
index 822447c..db5a16f 100644
--- a/tmp/67436555-bfed-4b1a-8bd4-d2befdeca805_buggy.java
+++ b/tmp/e0b051ba-6aad-4ac6-8b10-4fe8e09806a8_fixed.java
@@ -1,37 +1,28 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
         for (int i = 0; i < len; i++) {
             char c = str.charAt(i);
             String entityName = this.entityName(c);
             if (entityName == null) {
                 if (c > 0x7F) {
+                    if (Character.isHighSurrogate(c) && i + 1 < len) {
+                        int codePoint = str.codePointAt(i);
+                        writer.write("&#");
+                        writer.write(Integer.toString(codePoint, 10));
+                        writer.write(';');
+                        i++; // Skip the low surrogate
+                    } else if (!Character.isLowSurrogate(c)) {
                         writer.write("&#");
                         writer.write(Integer.toString(c, 10));
                         writer.write(';');
+                    }
                 } else {
                     writer.write(c);
                 }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
         }
     }
\ No newline at end of file
