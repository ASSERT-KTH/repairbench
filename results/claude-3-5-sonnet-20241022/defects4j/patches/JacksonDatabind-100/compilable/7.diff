diff --git a/tmp/3d45e6a2-2c00-458b-8e65-04a428d058df_buggy.java b/tmp/e5a33a5b-d6de-4d05-a122-f94dc75794e2_fixed.java
index fc8c302..7c87362 100644
--- a/tmp/3d45e6a2-2c00-458b-8e65-04a428d058df_buggy.java
+++ b/tmp/e5a33a5b-d6de-4d05-a122-f94dc75794e2_fixed.java
@@ -1,23 +1,33 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // Try getting binary value directly first
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+        // Then check for POJO node containing byte array
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
+        // Then try decoding text value as Base64
+        if (n.isTextual()) {
+            String text = n.textValue();
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException iae) {
+                throw new JsonParseException(this,
+                    "Cannot access contents of TextNode as binary due to broken Base64 encoding: "
+                    + iae.getMessage());
+            }
+        }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
