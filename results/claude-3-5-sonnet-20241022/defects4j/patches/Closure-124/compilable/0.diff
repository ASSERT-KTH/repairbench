diff --git a/tmp/a3f3d88c-9fa1-418b-b0b4-967b1895376e_buggy.java b/tmp/4dcd5625-1d15-40d8-8adf-162b16187d8b_fixed.java
index 2573d30..ff0a65d 100644
--- a/tmp/a3f3d88c-9fa1-418b-b0b4-967b1895376e_buggy.java
+++ b/tmp/4dcd5625-1d15-40d8-8adf-162b16187d8b_fixed.java
@@ -1,20 +1,27 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
-      return true;
+        return !isNameAssignedTo(node.getString(), replacement);
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    // For property accesses, we need to check the entire chain
+    Node current = node.getFirstChild();
+    while (current != null) {
+        if (current.isName() && isNameAssignedTo(current.getString(), replacement)) {
             return false;
         }
+        if (current.isGetProp()) {
+            current = current.getFirstChild();
+        } else {
+            current = null;
+        }
+    }
 
     return true;
 }
\ No newline at end of file
