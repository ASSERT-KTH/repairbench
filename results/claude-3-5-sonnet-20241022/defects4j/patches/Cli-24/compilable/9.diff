diff --git a/tmp/e1069faf-3b74-4488-8180-5eb048eef4d8_buggy.java b/tmp/d7c3f446-a6fc-4589-a21e-7ed40a941373_fixed.java
index 229b3e7..f7d7744 100644
--- a/tmp/e1069faf-3b74-4488-8180-5eb048eef4d8_buggy.java
+++ b/tmp/d7c3f446-a6fc-4589-a21e-7ed40a941373_fixed.java
@@ -1,55 +1,52 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
-        }
-
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
+            
+            // If the text length is less than the width, just append it
+            if (text.length() <= width)
+            {
+                sb.append(text);
+                return sb;
+            }
+            
+            // If the width is less than the padding, output one character at a time
+            if (width <= nextLineTabStop)
+            {
+                sb.append(text.substring(0, width)).append(defaultNewLine);
+                pos = width;
+                continue;
+            }
+
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
 
             if ((text.length() > width) && (pos == nextLineTabStop - 1))
             {
                 pos = width;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
