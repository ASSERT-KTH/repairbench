diff --git a/tmp/99088e00-bdf5-4d08-a2c7-0b99812aa2d7_buggy.java b/tmp/e13bdebe-44d8-40cb-9a06-db0422a63f7d_fixed.java
index 46817a7..d0cfca6 100644
--- a/tmp/99088e00-bdf5-4d08-a2c7-0b99812aa2d7_buggy.java
+++ b/tmp/e13bdebe-44d8-40cb-9a06-db0422a63f7d_fixed.java
@@ -1,16 +1,25 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
+    
+    // If the properties don't match exactly, we need to return a union type
+    if (!properties.keySet().equals(that.toMaybeRecordType().getOwnPropertyNames())) {
+        return registry.createUnionType(this, that);
+    }
+    
+    // Only create a new record type if all properties are equivalent
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
         if (that.toMaybeRecordType().hasProperty(property) &&
             that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
                 getPropertyType(property))) {
             builder.addProperty(property, getPropertyType(property),
                 getPropertyNode(property));
+        } else {
+            return registry.createUnionType(this, that);
         }
     }
     return builder.build();
 }
\ No newline at end of file
