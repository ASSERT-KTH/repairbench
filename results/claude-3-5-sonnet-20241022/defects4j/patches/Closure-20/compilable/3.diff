diff --git a/tmp/19c55947-a3c0-41bf-93f6-02d09e0ee769_buggy.java b/tmp/71f0900c-74b6-48e7-9435-17f65acd4609_fixed.java
index d4e6d48..b3357d7 100644
--- a/tmp/19c55947-a3c0-41bf-93f6-02d09e0ee769_buggy.java
+++ b/tmp/71f0900c-74b6-48e7-9435-17f65acd4609_fixed.java
@@ -1,23 +1,23 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
       // Fold String(a) to '' + (a) on immutable literals,
       // which allows further optimizations
       //
       // We can't do this in the general case, because String(a) has
       // slightly different semantics than '' + (a). See
       // http://code.google.com/p/closure-compiler/issues/detail?id=759
       Node value = callTarget.getNext();
-      if (value != null) {
+      if (value != null && value.getNext() == null) {  // Check that there's exactly one argument
         Node addition = IR.add(
             IR.string("").srcref(callTarget),
             value.detachFromParent());
         n.getParent().replaceChild(n, addition);
         reportCodeChange();
         return addition;
       }
     }
     return n;
 }
\ No newline at end of file
