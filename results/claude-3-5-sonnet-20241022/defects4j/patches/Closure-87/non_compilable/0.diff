diff --git a/tmp/d765256e-b785-43be-93ea-73c537551d57_buggy.java b/tmp/0395b07a-ddb0-4d6a-b104-25a961fd0c96_fixed.java
index 19fd63e..867e040 100644
--- a/tmp/d765256e-b785-43be-93ea-73c537551d57_buggy.java
+++ b/tmp/0395b07a-ddb0-4d6a-b104-25a961fd0c96_fixed.java
@@ -1,24 +1,29 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
         if (n.hasOneChild()) {
             Node maybeExpr = n.getFirstChild();
             // IE has a bug where event handlers behave differently when
             // their return value is used vs. when their return value is in
             // an EXPR_RESULT. It's pretty freaking weird. See:
             // http://code.google.com/p/closure-compiler/issues/detail?id=291
             // We try to detect this case, and not fold EXPR_RESULTs
             // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
+            if (maybeExpr.isExprResult()) {
+                Node expr = maybeExpr.getFirstChild();
+                if (expr.isCall()) {
+                    Node callee = expr.getFirstChild();
+                    if (callee.isGetProp() && callee.getLastChild().getString().startsWith("on")) {
+                        return false;
+                    }
+                }
+            }
             
             return NodeUtil.isExpressionNode(maybeExpr);
         }
     }
-
     return false;
 }
\ No newline at end of file
