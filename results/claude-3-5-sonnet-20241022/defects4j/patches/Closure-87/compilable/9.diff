diff --git a/tmp/9f582ca8-01f0-47bf-8372-30e8c30f1898_buggy.java b/tmp/bb91c6a4-4967-4a4f-bf11-b08902e89121_fixed.java
index 19fd63e..47e0d7e 100644
--- a/tmp/9f582ca8-01f0-47bf-8372-30e8c30f1898_buggy.java
+++ b/tmp/bb91c6a4-4967-4a4f-bf11-b08902e89121_fixed.java
@@ -1,24 +1,33 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
         if (n.hasOneChild()) {
             Node maybeExpr = n.getFirstChild();
             // IE has a bug where event handlers behave differently when
             // their return value is used vs. when their return value is in
             // an EXPR_RESULT. It's pretty freaking weird. See:
             // http://code.google.com/p/closure-compiler/issues/detail?id=291
             // We try to detect this case, and not fold EXPR_RESULTs
             // into other expressions.
-
+            if (NodeUtil.isExpressionNode(maybeExpr)) {
+                Node expr = maybeExpr.getFirstChild();
+                if (expr.getType() == Token.CALL) {
+                    Node callee = expr.getFirstChild();
                     // We only have to worry about methods with an implicit 'this'
                     // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+                    if (callee.getType() == Token.GETPROP) {
+                        String propName = callee.getLastChild().getString();
+                        if (propName.startsWith("on")) {
+                            return false;
+                        }
+                    }
+                }
+                return true;
+            }
         }
     }
-
     return false;
 }
\ No newline at end of file
