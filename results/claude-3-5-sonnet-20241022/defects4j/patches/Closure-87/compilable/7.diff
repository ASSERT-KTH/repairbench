diff --git a/tmp/835db753-8ee9-46da-849b-5817b525c1c5_buggy.java b/tmp/364b247f-274f-49ed-bf05-59781c006b52_fixed.java
index 19fd63e..6f27192 100644
--- a/tmp/835db753-8ee9-46da-849b-5817b525c1c5_buggy.java
+++ b/tmp/364b247f-274f-49ed-bf05-59781c006b52_fixed.java
@@ -1,24 +1,33 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
+          if (NodeUtil.isExpressionNode(maybeExpr)) {
+            Node expr = maybeExpr.getFirstChild();
+            if (expr.getType() == Token.CALL) {
+              Node callee = expr.getFirstChild();
               // We only have to worry about methods with an implicit 'this'
               // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+              if (callee.getType() == Token.GETPROP &&
+                  callee.getLastChild().getString().startsWith("on")) {
+                return false;
+              }
+            }
+            return true;
+          }
       }
     }
 
     return false;
   }
\ No newline at end of file
