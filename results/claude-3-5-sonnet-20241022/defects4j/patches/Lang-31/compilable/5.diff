diff --git a/tmp/d18fb9fb-d3d6-4d3d-a494-3042355d0d3a_buggy.java b/tmp/e859a9d4-ec3c-4111-ad0d-8b1a4da7aedd_fixed.java
index eea9e73..9fde470 100644
--- a/tmp/d18fb9fb-d3d6-4d3d-a494-3042355d0d3a_buggy.java
+++ b/tmp/e859a9d4-ec3c-4111-ad0d-8b1a4da7aedd_fixed.java
@@ -1,41 +1,27 @@
-    /**
-     * <p>Checks if the CharSequence contains any character in the given
-     * set of characters.</p>
-     *
-     * <p>A <code>null</code> CharSequence will return <code>false</code>.
-     * A <code>null</code> or zero length search array will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.containsAny(null, *)                = false
-     * StringUtils.containsAny("", *)                  = false
-     * StringUtils.containsAny(*, null)                = false
-     * StringUtils.containsAny(*, [])                  = false
-     * StringUtils.containsAny("zzabyycdxx",['z','a']) = true
-     * StringUtils.containsAny("zzabyycdxx",['b','y']) = true
-     * StringUtils.containsAny("aba", ['z'])           = false
-     * </pre>
-     *
-     * @param cs  the CharSequence to check, may be null
-     * @param searchChars  the chars to search for, may be null
-     * @return the <code>true</code> if any of the chars are found,
-     * <code>false</code> if no match or null input
-     * @since 2.4
-     */
 public static boolean containsAny(CharSequence cs, char[] searchChars) {
     if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
         return false;
     }
     int csLength = cs.length();
     int searchLength = searchChars.length;
     for (int i = 0; i < csLength; i++) {
         char ch = cs.charAt(i);
+        if (Character.isHighSurrogate(ch)) {
+            if (i + 1 < csLength) {
+                char ch2 = cs.charAt(i + 1);
+                if (Character.isLowSurrogate(ch2)) {
+                    // This is a supplementary character
+                    continue;
+                }
+            }
+        }
         for (int j = 0; j < searchLength; j++) {
             if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+                if (!Character.isHighSurrogate(ch) && !Character.isLowSurrogate(ch)) {
                     return true;
                 }
             }
         }
+    }
     return false;
 }
\ No newline at end of file
