diff --git a/tmp/21b709ea-c7ee-4e86-8703-86995f20abe7_buggy.java b/tmp/d1d3dc52-31d5-4a2c-8297-1756a0749b22_fixed.java
index 4e8b037..38b1b96 100644
--- a/tmp/21b709ea-c7ee-4e86-8703-86995f20abe7_buggy.java
+++ b/tmp/d1d3dc52-31d5-4a2c-8297-1756a0749b22_fixed.java
@@ -1,20 +1,30 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
     
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    if (valueList == null) {
+        valueList = new ArrayList();
     }
     
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // if we have no values or an empty list, use all the defaults
+    if (valueList.isEmpty()) {
+        if (defaultValues != null) {
+            valueList.addAll(defaultValues);
+        } else {
+            List defaults = (List) this.defaultValues.get(option);
+            if (defaults != null) {
+                valueList.addAll(defaults);
+            }
+        }
+    } else {
+        // we have some values, add remaining defaults if needed
+        List defaults = (List) this.defaultValues.get(option);
+        if (defaults != null && defaults.size() > valueList.size()) {
+            for (int i = valueList.size(); i < defaults.size(); i++) {
+                valueList.add(defaults.get(i));
+            }
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
     
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
