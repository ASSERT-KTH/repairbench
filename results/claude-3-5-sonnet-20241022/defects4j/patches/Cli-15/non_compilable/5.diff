diff --git a/tmp/807286b0-e86d-48a8-8d44-2c1ea9caeb30_buggy.java b/tmp/ad2fa053-6316-4a57-a4cb-d34c0e38ce5c_fixed.java
index 4e8b037..b954b1c 100644
--- a/tmp/807286b0-e86d-48a8-8d44-2c1ea9caeb30_buggy.java
+++ b/tmp/ad2fa053-6316-4a57-a4cb-d34c0e38ce5c_fixed.java
@@ -1,20 +1,29 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
+    List result = new ArrayList();
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // add any user-provided values first
+    if (valueList != null && !valueList.isEmpty()) {
+        result.addAll(valueList);
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // if we don't have enough values, add from the first default list
+    if (defaultValues != null && result.size() < option.getMaximum()) {
+        int startIndex = result.size();
+        for (int i = startIndex; i < defaultValues.size() && result.size() < option.getMaximum(); i++) {
+            result.add(defaultValues.get(i));
+        }
+    }
+
+    // if we still don't have enough values, add from the second default list
+    List secondDefaultList = (List) this.defaultValues.get(option);
+    if (secondDefaultList != null && result.size() < option.getMaximum()) {
+        int startIndex = result.size();
+        for (int i = startIndex; i < secondDefaultList.size() && result.size() < option.getMaximum(); i++) {
+            result.add(secondDefaultList.get(i));
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return result.isEmpty() ? Collections.EMPTY_LIST : result;
 }
\ No newline at end of file
