diff --git a/tmp/b9decc54-4fee-4b65-91ea-194d882086c6_buggy.java b/tmp/358ecbcf-d644-4841-9f76-bbf2bd3d2afc_fixed.java
index 4e8b037..165b95b 100644
--- a/tmp/b9decc54-4fee-4b65-91ea-194d882086c6_buggy.java
+++ b/tmp/358ecbcf-d644-4841-9f76-bbf2bd3d2afc_fixed.java
@@ -1,20 +1,35 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
+    List result = new ArrayList();
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // if we have values, add them first
+    if (valueList != null && !valueList.isEmpty()) {
+        result.addAll(valueList);
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // if we need more values and have user-specified defaults, add them
+    if (defaultValues != null) {
+        int currentSize = result.size();
+        for (int i = currentSize; i < option.getArgument().getMaximum(); i++) {
+            if (i < defaultValues.size()) {
+                result.add(defaultValues.get(i));
+            }
+        }
+    }
+
+    // if we still need more values and have system defaults, add them
+    if (result.size() < option.getArgument().getMaximum()) {
+        List systemDefaults = (List) this.defaultValues.get(option);
+        if (systemDefaults != null) {
+            int currentSize = result.size();
+            for (int i = currentSize; i < option.getArgument().getMaximum(); i++) {
+                if (i < systemDefaults.size()) {
+                    result.add(systemDefaults.get(i));
+                }
+            }
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return result.isEmpty() ? Collections.EMPTY_LIST : result;
 }
\ No newline at end of file
