diff --git a/tmp/f1d627fa-9019-454a-b4b3-027bc23f9d79_buggy.java b/tmp/de51449b-d8de-455f-b2f5-f9d3b731c3b7_fixed.java
index dc93be3..60429a7 100644
--- a/tmp/f1d627fa-9019-454a-b4b3-027bc23f9d79_buggy.java
+++ b/tmp/de51449b-d8de-455f-b2f5-f9d3b731c3b7_fixed.java
@@ -1,14 +1,21 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+        Tag tag = Tag.valueOf(startTag.name());
         if (startTag.isSelfClosing()) {
+            if (tag.isKnownTag()) {
+                Element el = new Element(tag, baseUri, startTag.attributes);
+                insert(el);
+                return el;
+            } else {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
             }
+        }
         
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        Element el = new Element(tag, baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
