diff --git a/tmp/6fc9ca83-172e-4f28-a3c3-0cf99b4f212c_buggy.java b/tmp/5f8cb3e5-489b-4884-97ae-2594e99ee286_fixed.java
index dc93be3..5d71fe4 100644
--- a/tmp/6fc9ca83-172e-4f28-a3c3-0cf99b4f212c_buggy.java
+++ b/tmp/5f8cb3e5-489b-4884-97ae-2594e99ee286_fixed.java
@@ -1,14 +1,15 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        if (!el.tag().isKnownTag()) // unknown tags can be self closing
             return el;
+        // known tag, force an end tag to ensure correct structure
+        startTag.setSelfClosing(false);
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
