diff --git a/tmp/d6ee3ed9-a05a-42bb-b412-62003c113f54_buggy.java b/tmp/87ae86b5-5b5a-402b-baf9-b09d49d118a2_fixed.java
index dc93be3..3e4e4b7 100644
--- a/tmp/d6ee3ed9-a05a-42bb-b412-62003c113f54_buggy.java
+++ b/tmp/87ae86b5-5b5a-402b-baf9-b09d49d118a2_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (startTag.tag().isKnownTag() && !startTag.tag().isEmpty()) {
+            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+            insert(el);
+            return el;
+        } else {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
+    }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
