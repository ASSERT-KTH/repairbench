diff --git a/tmp/c86c2a9b-a4d8-4767-a60a-f7e166328128_buggy.java b/tmp/9ed85386-9eee-4ec8-b812-6b73254b4ce4_fixed.java
index 4f21a3a..972e701 100644
--- a/tmp/c86c2a9b-a4d8-4767-a60a-f7e166328128_buggy.java
+++ b/tmp/9ed85386-9eee-4ec8-b812-6b73254b4ce4_fixed.java
@@ -1,14 +1,22 @@
     /**
      * Helper method used by standard deserializer.
      * 
      * @since 2.3
      */
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
+        JsonToken t = jp.getCurrentToken();
+        // If starting from FIELD_NAME, need to create START_OBJECT token first
+        if (t == JsonToken.FIELD_NAME) {
+            this.writeStartObject();
+        }
         copyCurrentStructure(jp);
         /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
          *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
          *    to assume one did exist.
          */
+        if (t == JsonToken.FIELD_NAME) {
+            this.writeEndObject();
+        }
         return this;
     }
\ No newline at end of file
