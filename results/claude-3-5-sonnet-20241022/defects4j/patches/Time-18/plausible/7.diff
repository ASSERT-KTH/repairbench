diff --git a/tmp/63d26054-21a0-4a3d-b714-16562d24eebf_buggy.java b/tmp/e9839147-d4d1-470e-9308-a433719ce3e8_fixed.java
index be2af16..dca36ca 100644
--- a/tmp/63d26054-21a0-4a3d-b714-16562d24eebf_buggy.java
+++ b/tmp/e9839147-d4d1-470e-9308-a433719ce3e8_fixed.java
@@ -1,29 +1,41 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
-        long instant;
+    long instant = 0;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    } catch (IllegalFieldValueException ex) {
+        // If we get here, it might be a Julian leap year date
+        instant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant >= iCutoverMillis) {
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+        return instant;
+    }
+    
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
