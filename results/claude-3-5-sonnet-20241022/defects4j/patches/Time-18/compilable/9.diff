diff --git a/tmp/9f6cf577-7a41-44a9-844a-89a4bb6c653c_buggy.java b/tmp/b869746f-b937-475b-8760-07391dc14749_fixed.java
index be2af16..a0f9ce2 100644
--- a/tmp/9f6cf577-7a41-44a9-844a-89a4bb6c653c_buggy.java
+++ b/tmp/b869746f-b937-475b-8760-07391dc14749_fixed.java
@@ -1,29 +1,41 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Calculate instant using Julian or Gregorian chronology based on cutover
     long instant;
+    if (year < 1582 || (year == 1582 && monthOfYear <= 10)) {
+        // Before cutover - try Julian first
+        instant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant >= iCutoverMillis) {
+            // Okay, it's in the illegal cutover gap.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+    } else {
+        // After cutover - try Gregorian
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
+    }
     return instant;
 }
\ No newline at end of file
