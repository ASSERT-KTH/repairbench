diff --git a/tmp/537deac8-182c-48c0-992d-0565befb940b_buggy.java b/tmp/f4d7262b-75f3-42e2-9cc0-cacff9dd007a_fixed.java
index e5ad041..17a2bc7 100644
--- a/tmp/537deac8-182c-48c0-992d-0565befb940b_buggy.java
+++ b/tmp/f4d7262b-75f3-42e2-9cc0-cacff9dd007a_fixed.java
@@ -1,19 +1,15 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+        // We should verify subclass relationship to avoid invalid narrowing
         if (!_class.isAssignableFrom(subclass)) {
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
         }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+        // Need to properly re-resolve type parameters
+        JavaType newType = TypeFactory.defaultInstance().constructSpecializedType(this, subclass);
+        return newType;
     }
\ No newline at end of file
