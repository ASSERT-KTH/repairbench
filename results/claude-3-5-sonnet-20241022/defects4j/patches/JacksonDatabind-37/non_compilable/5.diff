diff --git a/tmp/7ca48b72-0deb-44da-ab31-fa2b87f85969_buggy.java b/tmp/ee266c9d-0cbf-4ff9-9526-138fb0d5099c_fixed.java
index e5ad041..b1f16d5 100644
--- a/tmp/7ca48b72-0deb-44da-ab31-fa2b87f85969_buggy.java
+++ b/tmp/ee266c9d-0cbf-4ff9-9526-138fb0d5099c_fixed.java
@@ -1,19 +1,21 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+        JavaType newType = new SimpleType(subclass);
+        // Copy over the type bindings and handlers from the original type
+        newType = newType.withHandlersFrom(this);
+        // Also ensure other properties are maintained
+        if (_valueHandler != null) {
+            newType = newType.withValueHandler(_valueHandler);
+        }
+        if (_typeHandler != null) {
+            newType = newType.withTypeHandler(_typeHandler);
+        }
+        if (_asStatic) {
+            newType = newType.withStaticTyping();
+        }
+        return newType;
     }
\ No newline at end of file
