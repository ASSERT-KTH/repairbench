diff --git a/tmp/4e3d0b0c-a32a-4395-a2c4-fb7255195236_buggy.java b/tmp/1809e8be-1798-4341-9840-082db4e41ceb_fixed.java
index d9b400d..fc64992 100644
--- a/tmp/4e3d0b0c-a32a-4395-a2c4-fb7255195236_buggy.java
+++ b/tmp/1809e8be-1798-4341-9840-082db4e41ceb_fixed.java
@@ -1,21 +1,32 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
+        if (str == null) {
+            return null;
+        }
         try
         {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+            // If the string contains a decimal point, explicitly create a Double
+            if (str.indexOf('.') >= 0) {
+                return Double.valueOf(str);
+            }
+            return Long.valueOf(str);
         }
         catch (NumberFormatException nfe)
         {
-            System.err.println(nfe.getMessage());
+            try {
+                // Try Double if Long parsing fails
+                return Double.valueOf(str);
+            } catch (NumberFormatException e) {
+                // Ignore and return null
+            }
         }
-
         return null;
     }
\ No newline at end of file
