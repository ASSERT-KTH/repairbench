diff --git a/tmp/8f6002c0-c531-487f-900e-5d59a11e44fd_buggy.java b/tmp/49f4b5ca-6e1b-415e-9066-c390e51a6e88_fixed.java
index de9af32..3264abd 100644
--- a/tmp/8f6002c0-c531-487f-900e-5d59a11e44fd_buggy.java
+++ b/tmp/49f4b5ca-6e1b-415e-9066-c390e51a6e88_fixed.java
@@ -1,18 +1,26 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP && 
+                (child.getLastChild().getString().equals("call") ||
+                 child.getLastChild().getString().equals("apply"))) {
+        // Handle function.call() and function.apply() cases
+        Node calledFn = child.getFirstChild();
+        if (calledFn.getType() == Token.NAME) {
+          changed.add(calledFn.getString());
+        }
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
