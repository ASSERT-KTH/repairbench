diff --git a/tmp/5bdb3a8b-4525-463c-acd2-0f15b5ba0462_buggy.java b/tmp/675ae46b-6c27-43d1-8f44-150c6ee99f11_fixed.java
index 42b58d0..4b65bb2 100644
--- a/tmp/5bdb3a8b-4525-463c-acd2-0f15b5ba0462_buggy.java
+++ b/tmp/675ae46b-6c27-43d1-8f44-150c6ee99f11_fixed.java
@@ -1,19 +1,25 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+        TypeVariable[] typeParameters = rawType.getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+        
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
+            // Skip if we've already processed this type parameter to prevent infinite recursion
+            if (contextualActualTypeParameters.containsKey(typeParameter)) {
+                continue;
+            }
+
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
