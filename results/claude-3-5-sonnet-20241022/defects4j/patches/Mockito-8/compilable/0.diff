diff --git a/tmp/6bc166ee-2ec2-4c3b-aafe-78b49c2eae2e_buggy.java b/tmp/82cf8297-7c04-422a-87a5-c95950bb307b_fixed.java
index 42b58d0..eb3bc4d 100644
--- a/tmp/6bc166ee-2ec2-4c3b-aafe-78b49c2eae2e_buggy.java
+++ b/tmp/82cf8297-7c04-422a-87a5-c95950bb307b_fixed.java
@@ -1,19 +1,25 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+        TypeVariable[] typeParameters = rawType.getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+        
+        // Early exit if we've already registered these type variables to prevent infinite recursion
+        if (contextualActualTypeParameters.containsKey(typeParameters[0])) {
+            return;
+        }
+        
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
