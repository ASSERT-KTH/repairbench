diff --git a/tmp/3b61866f-7112-4ec0-b2d7-4ff6bfaff414_buggy.java b/tmp/7fa14497-aa4e-46e7-8944-7dbe14e241ee_fixed.java
index 42b58d0..45b97e0 100644
--- a/tmp/3b61866f-7112-4ec0-b2d7-4ff6bfaff414_buggy.java
+++ b/tmp/7fa14497-aa4e-46e7-8944-7dbe14e241ee_fixed.java
@@ -1,19 +1,32 @@
 protected void registerTypeVariablesOn(Type classType) {
-        if (!(classType instanceof ParameterizedType)) {
+    // Guard against infinite recursion caused by self-referential types
+    if (classType == null || !(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
+    // Guard against null or non-Class raw type
+    if (parameterizedType.getRawType() == null || !(parameterizedType.getRawType() instanceof Class)) {
+        return;
+    }
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    // Guard against mismatched arrays
+    if (typeParameters == null || actualTypeArguments == null || typeParameters.length != actualTypeArguments.length) {
+        return;
+    }
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
         
+        // Skip self-referential type to prevent infinite recursion
+        if (actualTypeArgument == classType) {
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
