diff --git a/tmp/e75d92ba-9bcb-4c2f-9aad-33d559e33f41_buggy.java b/tmp/43ecaf61-80d5-4ccb-99e1-0fcfe3b45d7a_fixed.java
index 42b58d0..2efa71b 100644
--- a/tmp/e75d92ba-9bcb-4c2f-9aad-33d559e33f41_buggy.java
+++ b/tmp/43ecaf61-80d5-4ccb-99e1-0fcfe3b45d7a_fixed.java
@@ -1,19 +1,25 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+        TypeVariable[] typeParameters = rawType.getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+        
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
+            // Skip if we're dealing with a self-reference to avoid infinite recursion
+            if (actualTypeArgument == classType) {
+                continue;
+            }
+
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
