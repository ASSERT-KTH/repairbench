diff --git a/tmp/1225d44c-a8dc-49c3-a07c-39fc58f818f6_buggy.java b/tmp/6b3c91f9-3a2e-448c-824e-4b38b843182c_fixed.java
index 4b163f6..9e73bf1 100644
--- a/tmp/1225d44c-a8dc-49c3-a07c-39fc58f818f6_buggy.java
+++ b/tmp/6b3c91f9-3a2e-448c-824e-4b38b843182c_fixed.java
@@ -1,28 +1,17 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
 public static long skip(InputStream input, long numToSkip) throws IOException {
     long available = numToSkip;
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
         if (skipped == 0) {
+            // Fall back to reading a byte at a time
+            int bytesRead = input.read();
+            if (bytesRead == -1) { // EOF
                 break;
             }
+            skipped = 1;
+        }
         numToSkip -= skipped;
     }
     
     return available - numToSkip;
 }
\ No newline at end of file
