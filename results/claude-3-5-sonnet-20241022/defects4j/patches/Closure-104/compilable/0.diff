diff --git a/tmp/0773b593-582b-4a44-9115-fad63b6cdb99_buggy.java b/tmp/4c36f451-e199-4539-8126-cd54b5fb4749_fixed.java
index b36b2a9..f23e322 100644
--- a/tmp/0773b593-582b-4a44-9115-fad63b6cdb99_buggy.java
+++ b/tmp/4c36f451-e199-4539-8126-cd54b5fb4749_fixed.java
@@ -1,26 +1,47 @@
 JSType meet(JSType that) {
+    if (this.isObject() && that.isObject()) {
         UnionTypeBuilder builder = new UnionTypeBuilder(registry);
         for (JSType alternate : alternates) {
             if (alternate.isSubtype(that)) {
                 builder.addAlternate(alternate);
             }
         }
 
         if (that instanceof UnionType) {
             for (JSType otherAlternate : ((UnionType) that).alternates) {
                 if (otherAlternate.isSubtype(this)) {
                     builder.addAlternate(otherAlternate);
                 }
             }
         } else if (that.isSubtype(this)) {
             builder.addAlternate(that);
         }
         JSType result = builder.build();
         if (result != null) {
             return result;
-    } else if (this.isObject() && that.isObject()) {
+        }
         return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
-    } else {
+    }
+
+    UnionTypeBuilder builder = new UnionTypeBuilder(registry);
+    for (JSType alternate : alternates) {
+        if (alternate.isSubtype(that)) {
+            builder.addAlternate(alternate);
+        }
+    }
+
+    if (that instanceof UnionType) {
+        for (JSType otherAlternate : ((UnionType) that).alternates) {
+            if (otherAlternate.isSubtype(this)) {
+                builder.addAlternate(otherAlternate);
+            }
+        }
+    } else if (that.isSubtype(this)) {
+        builder.addAlternate(that);
+    }
+    JSType result = builder.build();
+    if (result != null) {
+        return result;
+    }
     return getNativeType(JSTypeNative.NO_TYPE);
 }
\ No newline at end of file
-  }
