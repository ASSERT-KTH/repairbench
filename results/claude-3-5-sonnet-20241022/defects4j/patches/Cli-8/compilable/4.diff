diff --git a/tmp/d865d374-2e34-404c-9bb0-8f45a24fe1b5_buggy.java b/tmp/1af46283-830c-4488-b7ab-7b0c34930c73_fixed.java
index 8e93a5e..b16aa28 100644
--- a/tmp/d865d374-2e34-404c-9bb0-8f45a24fe1b5_buggy.java
+++ b/tmp/1af46283-830c-4488-b7ab-7b0c34930c73_fixed.java
@@ -1,43 +1,43 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
+    String[] lines = text.split("\n");
+    boolean firstLine = true;
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
+    for (String line : lines) {
+        if (!firstLine) {
+            sb.append(defaultNewLine);
+        }
         
-            return sb;
+        if (line.length() == 0) {
+            continue;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        String currentLine = firstLine ? line : createPadding(nextLineTabStop) + line.trim();
+        int pos = findWrapPos(currentLine, width, 0);
+
+        if (pos == -1) {
+            sb.append(rtrim(currentLine));
+        } else {
+            sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);
+
+            // all following lines must be padded with nextLineTabStop space characters
             final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            while (true) {
+                currentLine = padding + currentLine.substring(pos).trim();
+                pos = findWrapPos(currentLine, width, 0);
 
-            if (pos == -1)
-            {
-                sb.append(text);
+                if (pos == -1) {
+                    sb.append(rtrim(currentLine));
+                    break;
+                }
+
+                sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);
+            }
+        }
+        firstLine = false;
+    }
 
     return sb;
 }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
