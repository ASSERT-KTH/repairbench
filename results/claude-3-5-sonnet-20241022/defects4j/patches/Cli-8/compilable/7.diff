diff --git a/tmp/73341c74-aa0a-48de-a61a-fe13853fa324_buggy.java b/tmp/608ea220-1fac-4ded-8232-8510a5bdba8b_fixed.java
index 8e93a5e..45b998b 100644
--- a/tmp/73341c74-aa0a-48de-a61a-fe13853fa324_buggy.java
+++ b/tmp/608ea220-1fac-4ded-8232-8510a5bdba8b_fixed.java
@@ -1,43 +1,32 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        sb.append(text.substring(0, pos)).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
-                sb.append(text);
+                sb.append(rtrim(text));
 
                 return sb;
             }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(text.substring(0, pos)).append(defaultNewLine);
         }
     }
\ No newline at end of file
