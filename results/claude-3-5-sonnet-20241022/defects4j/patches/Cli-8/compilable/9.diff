diff --git a/tmp/ddb8b0c1-d22b-4420-81e8-30505a8f46b0_buggy.java b/tmp/b00bf7ac-0598-49fd-9998-110b4b377fb1_fixed.java
index 8e93a5e..5d83d29 100644
--- a/tmp/ddb8b0c1-d22b-4420-81e8-30505a8f46b0_buggy.java
+++ b/tmp/b00bf7ac-0598-49fd-9998-110b4b377fb1_fixed.java
@@ -1,43 +1,25 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
+    String[] lines = text.split("\n");
     
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
+    for (int i = 0; i < lines.length; i++) {
+        if (i > 0) {
+            sb.append(defaultNewLine);
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
         
-                return sb;
+        String line = lines[i];
+        while (true) {
+            int pos = findWrapPos(line, width, 0);
+            if (pos == -1) {
+                sb.append(rtrim(line));
+                break;
             }
             
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+            line = createPadding(nextLineTabStop) + line.substring(pos).trim();
+        }
     }
+    
+    return sb;
 }
\ No newline at end of file
