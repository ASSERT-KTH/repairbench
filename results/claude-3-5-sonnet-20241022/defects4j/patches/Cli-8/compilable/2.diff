diff --git a/tmp/ed617d5a-7067-4dd6-8bb4-da626d37ce86_buggy.java b/tmp/b2d08954-dda4-420d-93c3-44c5d6334bca_fixed.java
index 8e93a5e..b028182 100644
--- a/tmp/ed617d5a-7067-4dd6-8bb4-da626d37ce86_buggy.java
+++ b/tmp/b2d08954-dda4-420d-93c3-44c5d6334bca_fixed.java
@@ -1,43 +1,42 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
+{
+    String[] lines = text.split("\n");
+    for (int i = 0; i < lines.length; i++) {
+        if (i > 0) {
+            sb.append(defaultNewLine);
+        }
+        renderWrappedTextLine(sb, width, nextLineTabStop, lines[i]);
+    }
+    return sb;
+}
+
+private void renderWrappedTextLine(StringBuffer sb, int width, 
+                                   int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
-            return sb;
+        return;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // all following lines must be padded with nextLineTabStop space characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
-                return sb;
+            return;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
