diff --git a/tmp/346b0137-16fd-4171-9a64-056fe2cccd6c_buggy.java b/tmp/0fa33c80-70dc-475e-8e28-1c8ed6fc09b6_fixed.java
index 1c53d31..57aba98 100644
--- a/tmp/346b0137-16fd-4171-9a64-056fe2cccd6c_buggy.java
+++ b/tmp/0fa33c80-70dc-475e-8e28-1c8ed6fc09b6_fixed.java
@@ -1,20 +1,27 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+      if (typeAdapter == null) {
+        throw new IllegalArgumentException("TypeAdapter for " + typeAdapterClass + " returned null");
+      }
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      TypeAdapterFactory factory = constructorConstructor.get(TypeToken.get(typeAdapterFactory)).construct();
+      if (factory == null) {
+        throw new IllegalArgumentException("TypeAdapterFactory for " + typeAdapterFactory + " returned null");
+      }
+      typeAdapter = factory.create(gson, fieldType);
+      if (typeAdapter == null) {
+        throw new IllegalArgumentException("TypeAdapter returned by TypeAdapterFactory for " + typeAdapterFactory + " returned null");
+      }
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+    return typeAdapter.nullSafe();
   }
\ No newline at end of file
