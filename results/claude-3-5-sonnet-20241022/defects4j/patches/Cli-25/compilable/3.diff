diff --git a/tmp/688b2166-3ab7-40dc-912d-2652e371c8b8_buggy.java b/tmp/37caa149-4154-4dd8-ae22-f25578bd0472_fixed.java
index 875b31b..25c9032 100644
--- a/tmp/688b2166-3ab7-40dc-912d-2652e371c8b8_buggy.java
+++ b/tmp/37caa149-4154-4dd8-ae22-f25578bd0472_fixed.java
@@ -1,54 +1,41 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // all following lines must be padded with nextLineTabStop space characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
-            text = padding + text.substring(pos).trim();
+            text = text.substring(pos).trim();
+            if (text.length() == 0)
+            {
+                return sb;
+            }
+            text = padding + text;
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             }
 
             if ((text.length() > width) && (pos == nextLineTabStop - 1))
             {
                 pos = width;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
