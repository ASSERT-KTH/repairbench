diff --git a/tmp/5cb9e5bb-fe28-4b95-8054-298260972e52_buggy.java b/tmp/99c3edf7-6d5c-47b3-b9a0-99f0f01207af_fixed.java
index 855afa5..7bb774c 100644
--- a/tmp/5cb9e5bb-fe28-4b95-8054-298260972e52_buggy.java
+++ b/tmp/99c3edf7-6d5c-47b3-b9a0-99f0f01207af_fixed.java
@@ -1,13 +1,24 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        String path = URLEncoder.encode(u.getPath(), "UTF-8")
+            .replace("+", "%20")
+            .replace("%2F", "/")
+            .replace("%5B", "[")
+            .replace("%5D", "]");
+        
+        String query = u.getQuery() != null ? 
+            URLEncoder.encode(u.getQuery(), "UTF-8").replace("+", "%20") : 
+            null;
+            
+        URL encoded = new URL(u.getProtocol(), 
+            u.getHost(), 
+            u.getPort(), 
+            path + (query != null ? "?" + query : "") + 
+            (u.getRef() != null ? "#" + u.getRef() : ""));
+            
+        return encoded;
+    } catch (Exception e) {
         return u;
     }
 }
\ No newline at end of file
