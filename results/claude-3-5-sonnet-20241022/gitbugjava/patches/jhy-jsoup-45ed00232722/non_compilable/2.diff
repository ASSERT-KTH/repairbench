diff --git a/tmp/7d28dd84-aa3d-445c-99a2-9460f5ed94a7_buggy.java b/tmp/631d80ca-31d0-4e75-9e56-cd8426f01a8b_fixed.java
index 855afa5..9c1a582 100644
--- a/tmp/7d28dd84-aa3d-445c-99a2-9460f5ed94a7_buggy.java
+++ b/tmp/631d80ca-31d0-4e75-9e56-cd8426f01a8b_fixed.java
@@ -1,13 +1,33 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        String path = u.getPath();
+        String query = u.getQuery();
+        String ref = u.getRef();
+        
+        // Manually encode each component
+        path = URLEncoder.encode(path, "UTF-8")
+            .replace("+", "%20")
+            .replace("%2F", "/"); // preserve path separators
+            
+        if (query != null) {
+            query = URLEncoder.encode(query, "UTF-8")
+                .replace("+", "%20");
+        }
+        
+        // Construct the URL with encoded components
+        URI uri = new URI(
+            u.getProtocol(),
+            u.getUserInfo(),
+            u.getHost(),
+            u.getPort(),
+            path,
+            query,
+            ref
+        );
+        
         return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+    } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
         return u;
     }
 }
\ No newline at end of file
