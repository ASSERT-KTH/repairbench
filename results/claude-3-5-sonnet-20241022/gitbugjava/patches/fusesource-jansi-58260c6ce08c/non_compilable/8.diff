diff --git a/tmp/289d6124-71e7-4550-9300-25abbd52edb4_buggy.java b/tmp/9a8cb8d4-4415-4f1d-ba55-8bc99ca4c63d_fixed.java
index 712f277..ca1c741 100644
--- a/tmp/289d6124-71e7-4550-9300-25abbd52edb4_buggy.java
+++ b/tmp/9a8cb8d4-4415-4f1d-ba55-8bc99ca4c63d_fixed.java
@@ -1,48 +1,49 @@
-    /**
-     * Renders the given input to the target Appendable.
-     *
-     * @param input
-     *            source to render
-     * @param target
-     *            render onto this target Appendable.
-     * @return the given Appendable
-     * @throws IOException
-     *             If an I/O error occurs
-     */
 public static Appendable render(final String input, Appendable target) throws IOException {
-
     int i = 0;
     int j, k;
 
     while (true) {
+        // Find next end token position from current position
+        k = input.indexOf(END_TOKEN, i);
+        // Find next begin token position from current position
         j = input.indexOf(BEGIN_TOKEN, i);
+
+        // If end token is found before begin token (or begin token doesn't exist),
+        // it's an invalid syntax
+        if (k != -1 && (j == -1 || k < j)) {
+            throw new IllegalArgumentException("Invalid syntax: end token appears before start token");
+        }
+
+        // No more begin tokens found
         if (j == -1) {
             if (i == 0) {
                 target.append(input);
                 return target;
             }
             target.append(input.substring(i));
             return target;
         }
+
         target.append(input.substring(i, j));
         k = input.indexOf(END_TOKEN, j);
 
         if (k == -1) {
             target.append(input);
             return target;
         }
+
         j += BEGIN_TOKEN_LEN;
         String spec = input.substring(j, k);
 
         String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
         if (items.length == 1) {
             target.append(input);
             return target;
         }
         String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
 
         target.append(replacement);
 
         i = k + END_TOKEN_LEN;
     }
 }
\ No newline at end of file
