diff --git a/tmp/56c106a6-12ae-4792-82f6-fcd2a2643fc3_buggy.java b/tmp/495cf53a-5c57-47d5-aed1-59d0b79ffa76_fixed.java
index eb0a5c8..c0bd42e 100644
--- a/tmp/56c106a6-12ae-4792-82f6-fcd2a2643fc3_buggy.java
+++ b/tmp/495cf53a-5c57-47d5-aed1-59d0b79ffa76_fixed.java
@@ -1,27 +1,29 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
+    // Don't register call context for non-creation commands (including deletion)
+    if (!ariCommand.extractCommandType().isCreationCommand() || 
+        ariCommand.getMethod().equals("DELETE")) {
         return Try.success(Done.done());
     }
 
     final Option<AriResource> maybeResource =
         ariCommand
             .extractResourceRelations()
             .find(AriResourceRelation::isCreated)
             .map(AriResourceRelation::getResource);
 
     if (maybeResource.isEmpty()) {
         return Try.failure(
             new RuntimeException(
                 String.format(
                     "Failed to extract resourceId from command '%s'", ariCommand.toString())));
     }
 
     final AriResource resource = maybeResource.get();
 
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
     return Try.success(Done.done());
 }
\ No newline at end of file
