diff --git a/tmp/780e19c5-b686-4f06-9fe1-db664154f8c9_buggy.java b/tmp/cd0a64ca-57e0-4b79-b5fd-f62f70a75a28_fixed.java
index eb0a5c8..b7b4d57 100644
--- a/tmp/780e19c5-b686-4f06-9fe1-db664154f8c9_buggy.java
+++ b/tmp/cd0a64ca-57e0-4b79-b5fd-f62f70a75a28_fixed.java
@@ -1,27 +1,33 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
+    // Return early for non-creation commands
     if (!ariCommand.extractCommandType().isCreationCommand()) {
         return Try.success(Done.done());
     }
 
+    // Only proceed with creation commands
     final Option<AriResource> maybeResource =
         ariCommand
             .extractResourceRelations()
             .find(AriResourceRelation::isCreated)
             .map(AriResourceRelation::getResource);
 
     if (maybeResource.isEmpty()) {
         return Try.failure(
             new RuntimeException(
                 String.format(
                     "Failed to extract resourceId from command '%s'", ariCommand.toString())));
     }
 
     final AriResource resource = maybeResource.get();
 
+    if ("DELETE".equals(ariCommand.getMethod())) {
+        return Try.success(Done.done());
+    }
+
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
     return Try.success(Done.done());
 }
\ No newline at end of file
