diff --git a/tmp/6757c4fd-a0df-45d1-891a-77245443e5b0_buggy.java b/tmp/c5e0f3c9-fa24-4fd8-b215-af69f68d4783_fixed.java
index 855afa5..2e605ce 100644
--- a/tmp/6757c4fd-a0df-45d1-891a-77245443e5b0_buggy.java
+++ b/tmp/c5e0f3c9-fa24-4fd8-b215-af69f68d4783_fixed.java
@@ -1,13 +1,33 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
+        String urlS = u.toExternalForm();
         urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        
+        // Encode the path
+        String path = u.getPath().replace(" ", "%20");
+        path = URLEncoder.encode(path, StandardCharsets.UTF_8.name())
+                .replace("+", "%20")
+                .replace("%2F", "/")
+                .replace("%3A", ":")
+                .replace("%40", "@");
+        
+        // Encode the query
+        String query = u.getQuery();
+        if (query != null) {
+            query = URLEncoder.encode(query, StandardCharsets.UTF_8.name())
+                    .replace("+", "%20")
+                    .replace("%3D", "=")
+                    .replace("%26", "&");
+        }
+        
+        // Reconstruct the URL with encoded components
+        URI uri = new URI(u.getProtocol(), u.getUserInfo(), u.getHost(), u.getPort(),
+                path, query, u.getRef());
+        
         return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+    } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
