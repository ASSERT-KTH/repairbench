diff --git a/tmp/ab4c7c41-2adb-4489-ab5f-d3899f8e53b2_buggy.java b/tmp/50920525-a8ff-4944-a46a-037c0a4440b4_fixed.java
index 712f277..634ebc8 100644
--- a/tmp/ab4c7c41-2adb-4489-ab5f-d3899f8e53b2_buggy.java
+++ b/tmp/50920525-a8ff-4944-a46a-037c0a4440b4_fixed.java
@@ -1,48 +1,33 @@
-    /**
-     * Renders the given input to the target Appendable.
-     *
-     * @param input
-     *            source to render
-     * @param target
-     *            render onto this target Appendable.
-     * @return the given Appendable
-     * @throws IOException
-     *             If an I/O error occurs
-     */
 public static Appendable render(final String input, Appendable target) throws IOException {
-
     int i = 0;
     int j, k;
 
-        while (true) {
+    while (i < input.length()) {
         j = input.indexOf(BEGIN_TOKEN, i);
         if (j == -1) {
-                if (i == 0) {
-                    target.append(input);
-                    return target;
-                }
             target.append(input.substring(i));
             return target;
         }
         target.append(input.substring(i, j));
-            k = input.indexOf(END_TOKEN, j);
+        k = input.indexOf(END_TOKEN, j + BEGIN_TOKEN_LEN);
 
         if (k == -1) {
-                target.append(input);
-                return target;
+            throw new IllegalArgumentException("Missing end token after start token at index " + j);
         }
+
         j += BEGIN_TOKEN_LEN;
         String spec = input.substring(j, k);
 
         String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
         if (items.length == 1) {
-                target.append(input);
-                return target;
+            throw new IllegalArgumentException("Invalid format: missing code-text separator at index " + j);
         }
+
         String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
-
         target.append(replacement);
 
         i = k + END_TOKEN_LEN;
     }
+
+    return target;
 }
\ No newline at end of file
