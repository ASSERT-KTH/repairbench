diff --git a/tmp/01bf3a15-0732-4226-aa9c-159df51e0703_buggy.java b/tmp/0715a34d-0cfd-4452-b727-412a1bb0af10_fixed.java
index 1098336..f359071 100644
--- a/tmp/01bf3a15-0732-4226-aa9c-159df51e0703_buggy.java
+++ b/tmp/0715a34d-0cfd-4452-b727-412a1bb0af10_fixed.java
@@ -1,16 +1,31 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
-
     final var source = new InputSource(new StringReader(code));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
     var formattedCode = sheet.getCssText(this.formatter);
 
     // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
     formattedCode = formattedCode.replace("\t;", "\\9;");
 
+    // Ensure consistent line endings
+    formattedCode = formattedCode.replace("\r\n", "\n").replace("\r", "\n");
+    if (ending == LineEnding.CRLF) {
+        formattedCode = formattedCode.replace("\n", "\r\n");
+    }
+
+    // Trim trailing whitespace
+    formattedCode = Arrays.stream(formattedCode.split("\n"))
+            .map(String::trim)
+            .collect(Collectors.joining("\n"));
+
+    // Add a final newline if it doesn't exist
+    if (!formattedCode.endsWith("\n")) {
+        formattedCode += "\n";
+    }
+
     if (code.equals(formattedCode)) {
         return null;
     }
     return formattedCode;
 }
\ No newline at end of file
