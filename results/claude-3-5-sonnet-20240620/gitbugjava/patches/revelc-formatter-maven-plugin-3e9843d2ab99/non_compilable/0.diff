diff --git a/tmp/95b7b466-e4e9-413f-9950-1b7575c9c845_buggy.java b/tmp/70dbae4e-6b71-4609-8e14-6d0464e88104_fixed.java
index 1098336..72fdd18 100644
--- a/tmp/95b7b466-e4e9-413f-9950-1b7575c9c845_buggy.java
+++ b/tmp/70dbae4e-6b71-4609-8e14-6d0464e88104_fixed.java
@@ -1,16 +1,32 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
-
     final var source = new InputSource(new StringReader(code));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
     var formattedCode = sheet.getCssText(this.formatter);
 
     // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
     formattedCode = formattedCode.replace("\t;", "\\9;");
 
+    // Ensure consistent line endings
+    formattedCode = formattedCode.replace("\r\n", "\n").replace("\r", "\n");
+    if (ending == LineEnding.CRLF) {
+        formattedCode = formattedCode.replace("\n", "\r\n");
+    }
+
+    // Trim trailing whitespace from each line
+    formattedCode = Arrays.stream(formattedCode.split("\n"))
+            .map(String::trim)
+            .collect(Collectors.joining("\n"));
+
+    // Remove empty lines
+    formattedCode = formattedCode.replaceAll("(?m)^\\s*$\n", "");
+
+    // Ensure a single newline at the end of the file
+    formattedCode = formattedCode.trim() + ending.getChars();
+
     if (code.equals(formattedCode)) {
         return null;
     }
     return formattedCode;
 }
\ No newline at end of file
