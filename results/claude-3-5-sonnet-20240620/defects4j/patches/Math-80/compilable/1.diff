diff --git a/tmp/6056db13-51e2-4764-aaa2-083163751ea1_buggy.java b/tmp/94f87903-7525-41d3-942f-e42350a3e6ea_fixed.java
index fbd0884..2312ca0 100644
--- a/tmp/6056db13-51e2-4764-aaa2-083163751ea1_buggy.java
+++ b/tmp/94f87903-7525-41d3-942f-e42350a3e6ea_fixed.java
@@ -1,23 +1,34 @@
 /**
  * Flip qd array if warranted.
  * @param n number of rows in the block
  * @param step within the array (1 for flipping all elements, 2 for flipping
  * only every other element)
  * @return true if qd array was flipped
  */
 private boolean flipIfWarranted(final int n, final int step) {
     if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
         // flip array
         int j = 4 * n - 1;
         for (int i = 0; i < j; i += 4) {
             for (int k = 0; k < 4; k += step) {
                 final double tmp = work[i + k];
                 work[i + k] = work[j - k];
                 work[j - k] = tmp;
             }
             j -= 4;
         }
         return true;
     }
+    // Add an additional check for very small values
+    else if (work[4 * (n - 1) + pingPong] < 1e-14 * work[pingPong]) {
+        // Don't flip, but set very small values to zero
+        for (int i = 4 * (n - 1) + pingPong; i >= pingPong; i -= 4) {
+            if (work[i] < 1e-14 * work[pingPong]) {
+                work[i] = 0.0;
+            } else {
+                break;
+            }
+        }
+    }
     return false;
 }
\ No newline at end of file
