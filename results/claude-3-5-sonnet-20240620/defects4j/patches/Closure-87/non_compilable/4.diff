diff --git a/tmp/3a756a95-8fe6-4ff9-a352-b17744342a24_buggy.java b/tmp/d0da0b6a-2ba8-4924-aed7-c29b7bc72eeb_fixed.java
index 19fd63e..45c4a46 100644
--- a/tmp/3a756a95-8fe6-4ff9-a352-b17744342a24_buggy.java
+++ b/tmp/d0da0b6a-2ba8-4924-aed7-c29b7bc72eeb_fixed.java
@@ -1,24 +1,29 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
-    if (n.getType() == Token.BLOCK) {
-      if (n.hasOneChild()) {
+  if (n.isBlock() && n.hasOneChild()) {
     Node maybeExpr = n.getFirstChild();
     // IE has a bug where event handlers behave differently when
     // their return value is used vs. when their return value is in
     // an EXPR_RESULT. It's pretty freaking weird. See:
     // http://code.google.com/p/closure-compiler/issues/detail?id=291
     // We try to detect this case, and not fold EXPR_RESULTs
     // into other expressions.
 
     // We only have to worry about methods with an implicit 'this'
     // param, or this doesn't happen.
-
+    if (NodeUtil.isExpressionNode(maybeExpr)) {
+      Node expr = maybeExpr.getFirstChild();
+      if (expr.isCall()) {
+        Node callee = expr.getFirstChild();
+        if (callee.isGetProp() && !callee.isQualifiedName()) {
+          return false;
+        }
+      }
+    }
     return NodeUtil.isExpressionNode(maybeExpr);
   }
-    }
-
   return false;
 }
\ No newline at end of file
