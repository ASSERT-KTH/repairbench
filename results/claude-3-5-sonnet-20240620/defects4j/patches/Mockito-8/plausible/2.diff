diff --git a/tmp/c68587e0-e14c-430c-9511-901c3ee5426e_buggy.java b/tmp/64821603-a109-4a49-865e-2d51d72c6e9d_fixed.java
index 42b58d0..8b1c97f 100644
--- a/tmp/c68587e0-e14c-430c-9511-901c3ee5426e_buggy.java
+++ b/tmp/64821603-a109-4a49-865e-2d51d72c6e9d_fixed.java
@@ -1,19 +1,27 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable<?>[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Handle self-referencing type variables
+            Type resolvedType = contextualActualTypeParameters.get(actualTypeArgument);
+            if (resolvedType != null) {
+                contextualActualTypeParameters.put(typeParameter, resolvedType);
+            } else {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
