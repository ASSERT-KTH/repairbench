diff --git a/tmp/ddf27abd-b5b6-48cc-b1a0-cc1936f0f48a_buggy.java b/tmp/4bbaa221-98b0-410d-8f3c-b5dcce1da457_fixed.java
index 42b58d0..4cc2502 100644
--- a/tmp/ddf27abd-b5b6-48cc-b1a0-cc1936f0f48a_buggy.java
+++ b/tmp/4bbaa221-98b0-410d-8f3c-b5dcce1da457_fixed.java
@@ -1,19 +1,24 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Check if the type variable is already in the map to prevent infinite recursion
+            if (!contextualActualTypeParameters.containsKey(typeParameter)) {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
