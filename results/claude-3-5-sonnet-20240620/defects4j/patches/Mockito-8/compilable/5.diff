diff --git a/tmp/a3cc96c3-cfac-41e2-8804-7eb92a98cd7c_buggy.java b/tmp/3ece8ff6-e580-4f46-be5d-5d47a5db3b06_fixed.java
index 42b58d0..5d42574 100644
--- a/tmp/a3cc96c3-cfac-41e2-8804-7eb92a98cd7c_buggy.java
+++ b/tmp/3ece8ff6-e580-4f46-be5d-5d47a5db3b06_fixed.java
@@ -1,19 +1,24 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Check if the type variable is already in the map to prevent infinite recursion
+            if (!contextualActualTypeParameters.containsKey(actualTypeArgument)) {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
