diff --git a/tmp/671ae37b-8cd1-4ea4-b7a0-b4d66333f3ad_buggy.java b/tmp/5619de44-9ff8-4e87-a35f-91c111ad135a_fixed.java
index 42b58d0..a902ec3 100644
--- a/tmp/671ae37b-8cd1-4ea4-b7a0-b4d66333f3ad_buggy.java
+++ b/tmp/5619de44-9ff8-4e87-a35f-91c111ad135a_fixed.java
@@ -1,19 +1,22 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument == rawType) {
+            // Handle self-referencing generic type
+            contextualActualTypeParameters.put(typeParameter, typeParameter);
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
