diff --git a/tmp/e9e09f41-6ca4-4873-a881-18f89cd1012c_buggy.java b/tmp/bb0c6f0c-27ef-4433-ab65-f052b59baae5_fixed.java
index e1fc51f..6885888 100644
--- a/tmp/e9e09f41-6ca4-4873-a881-18f89cd1012c_buggy.java
+++ b/tmp/bb0c6f0c-27ef-4433-ab65-f052b59baae5_fixed.java
@@ -1,9 +1,18 @@
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    if (m1.equals(m2)) {
+        return true;
+    }
+
+    // Check if methods have the same name and parameter types
+    if (m1.getName().equals(m2.getName()) && 
+        Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())) {
+        // Check if one method is from a superclass or interface of the other
+        return m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass()) ||
+               m2.getDeclaringClass().isAssignableFrom(m1.getDeclaringClass());
+    }
+
+    return false;
 }
\ No newline at end of file
