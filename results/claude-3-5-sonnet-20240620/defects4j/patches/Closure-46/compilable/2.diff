diff --git a/tmp/74e4ed02-b0d0-4769-ac00-3017de2a0ea1_buggy.java b/tmp/4858413f-e064-4dd0-b898-eb37640646a9_fixed.java
index 46817a7..273d5dc 100644
--- a/tmp/74e4ed02-b0d0-4769-ac00-3017de2a0ea1_buggy.java
+++ b/tmp/4858413f-e064-4dd0-b898-eb37640646a9_fixed.java
@@ -1,16 +1,28 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+        if (that.toMaybeRecordType().hasProperty(property)) {
+            JSType thisPropertyType = getPropertyType(property);
+            JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+            builder.addProperty(property, 
+                thisPropertyType.getLeastSupertype(thatPropertyType),
                 getPropertyNode(property));
         }
     }
-    return builder.build();
+    for (String property : that.toMaybeRecordType().getOwnPropertyNames()) {
+        if (!hasProperty(property)) {
+            builder.addProperty(property, 
+                that.toMaybeRecordType().getPropertyType(property),
+                that.toMaybeRecordType().getPropertyNode(property));
+        }
+    }
+    JSType builtType = builder.build();
+    if (builtType.isEmptyType()) {
+        return registry.createUnionType(this, that);
+    }
+    return builtType;
 }
\ No newline at end of file
