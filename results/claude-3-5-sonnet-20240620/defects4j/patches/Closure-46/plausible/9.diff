diff --git a/tmp/02f20a2d-c0cd-4eba-b409-b6fc98c7071d_buggy.java b/tmp/a34058f8-9c9f-410d-b548-e516a2c7a38b_fixed.java
index 46817a7..4020618 100644
--- a/tmp/02f20a2d-c0cd-4eba-b409-b6fc98c7071d_buggy.java
+++ b/tmp/a34058f8-9c9f-410d-b548-e516a2c7a38b_fixed.java
@@ -1,16 +1,28 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+        if (that.toMaybeRecordType().hasProperty(property)) {
+            JSType thisPropertyType = getPropertyType(property);
+            JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+            builder.addProperty(property, 
+                thisPropertyType.getLeastSupertype(thatPropertyType),
                 getPropertyNode(property));
         }
     }
-    return builder.build();
+    for (String property : that.toMaybeRecordType().getOwnPropertyNames()) {
+        if (!properties.containsKey(property)) {
+            builder.addProperty(property, 
+                that.toMaybeRecordType().getPropertyType(property),
+                that.toMaybeRecordType().getPropertyNode(property));
+        }
+    }
+    JSType builtType = builder.build();
+    if (builtType.isEquivalentTo(this) && builtType.isEquivalentTo(that)) {
+        return builtType;
+    }
+    return registry.createUnionType(this, that);
 }
\ No newline at end of file
