diff --git a/tmp/dabad829-45ae-4f19-a251-7306e84cce70_buggy.java b/tmp/752f9b1a-0974-4f34-970e-33bdb6999fa1_fixed.java
index 46817a7..9ec4ba2 100644
--- a/tmp/dabad829-45ae-4f19-a251-7306e84cce70_buggy.java
+++ b/tmp/752f9b1a-0974-4f34-970e-33bdb6999fa1_fixed.java
@@ -1,16 +1,26 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    Set<String> allProperties = new HashSet<>(properties.keySet());
+    allProperties.addAll(that.toMaybeRecordType().getOwnPropertyNames());
+
+    for (String property : allProperties) {
+        JSType thisPropertyType = hasProperty(property) ? getPropertyType(property) : null;
+        JSType thatPropertyType = that.toMaybeRecordType().hasProperty(property) ?
+                that.toMaybeRecordType().getPropertyType(property) : null;
+
+        if (thisPropertyType != null && thatPropertyType != null &&
+                thisPropertyType.isEquivalentTo(thatPropertyType)) {
+            builder.addProperty(property, thisPropertyType, getPropertyNode(property));
         }
     }
-    return builder.build();
+
+    JSType builtType = builder.build();
+    if (builtType.isEmptyType()) {
+        return registry.createUnionType(this, that);
+    }
+    return builtType;
 }
\ No newline at end of file
