diff --git a/tmp/fd993bd3-f33f-4e81-8eb5-2897a98b1017_buggy.java b/tmp/50540f4a-eafa-41c3-8c74-d37d3f520676_fixed.java
index be2af16..180d58e 100644
--- a/tmp/fd993bd3-f33f-4e81-8eb5-2897a98b1017_buggy.java
+++ b/tmp/50540f4a-eafa-41c3-8c74-d37d3f520676_fixed.java
@@ -1,29 +1,29 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
+    // Check Julian first
+    long instant = iJulianChronology.getDateTimeMillis
+        (year, monthOfYear, dayOfMonth,
+         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    
+    if (instant >= iCutoverMillis) {
+        // If it's after or equal to the cutover, use Gregorian
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
