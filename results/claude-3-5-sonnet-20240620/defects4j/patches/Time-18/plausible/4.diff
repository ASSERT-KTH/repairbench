diff --git a/tmp/4729971f-e1c6-451c-84fa-93bdbe63684d_buggy.java b/tmp/ac7dd20a-d546-47dd-87fb-5be553de6029_fixed.java
index be2af16..739b3d0 100644
--- a/tmp/4729971f-e1c6-451c-84fa-93bdbe63684d_buggy.java
+++ b/tmp/ac7dd20a-d546-47dd-87fb-5be553de6029_fixed.java
@@ -1,29 +1,30 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
+    // Try Julian chronology first
+    long instant = iJulianChronology.getDateTimeMillis
+        (year, monthOfYear, dayOfMonth,
+         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    
+    if (instant >= iCutoverMillis) {
+        // If it's after or equal to the cutover, use Gregorian
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            // Date falls in the cutover gap
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
+    
     return instant;
 }
\ No newline at end of file
