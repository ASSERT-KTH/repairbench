diff --git a/tmp/4d693e0e-9a74-4ac5-b3e4-d6c8355ccbb7_buggy.java b/tmp/f5d6f5fe-1636-4604-b9fd-69eab2a19ae2_fixed.java
index 81a6e8b..c0c057e 100644
--- a/tmp/4d693e0e-9a74-4ac5-b3e4-d6c8355ccbb7_buggy.java
+++ b/tmp/f5d6f5fe-1636-4604-b9fd-69eab2a19ae2_fixed.java
@@ -1,19 +1,35 @@
-    /**
-     * Tells if the token looks like a short option.
-     * 
-     * @param token
-     */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
     if (!token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
+    // remove leading "-"
+    String optName = token.substring(1);
+
+    // check if the first character is a valid short option
+    if (options.hasShortOption(optName.substring(0, 1)))
+    {
+        return true;
+    }
+
+    // check for option with value (-S=V)
+    int pos = optName.indexOf("=");
+    if (pos != -1)
+    {
+        return options.hasShortOption(optName.substring(0, 1));
+    }
+
     // check for several concatenated short options
+    for (int i = 0; i < optName.length(); i++)
+    {
+        if (!options.hasShortOption(optName.substring(i, i+1)))
+        {
+            return false;
+        }
+    }
+
+    return true;
 }
\ No newline at end of file
