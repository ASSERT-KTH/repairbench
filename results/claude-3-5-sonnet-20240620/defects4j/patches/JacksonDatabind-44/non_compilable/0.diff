diff --git a/tmp/74e7c4fc-fe67-4a7a-bdc6-b6abbbc3d368_buggy.java b/tmp/06a6e67d-695a-459c-8f83-207b5c4b5a61_fixed.java
index 1a63a66..ea36ec8 100644
--- a/tmp/74e7c4fc-fe67-4a7a-bdc6-b6abbbc3d368_buggy.java
+++ b/tmp/06a6e67d-695a-459c-8f83-207b5c4b5a61_fixed.java
@@ -1,21 +1,16 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+    
+    // Check for sub-class relationship
+    if (!_class.isAssignableFrom(subclass) && !subclass.equals(Void.class) && !subclass.equals(NoClass.class)) {
+        throw new IllegalArgumentException("Class " + subclass.getName() + " not sub-type of " + _class.getName());
+    }
+    
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
