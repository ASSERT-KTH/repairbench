diff --git a/tmp/07fe4561-0b62-43e6-bb05-6a10a2c0a713_buggy.java b/tmp/2c609a67-72b8-4c20-96b3-9072795e4e9a_fixed.java
index fecb896..7c7badc 100644
--- a/tmp/07fe4561-0b62-43e6-bb05-6a10a2c0a713_buggy.java
+++ b/tmp/2c609a67-72b8-4c20-96b3-9072795e4e9a_fixed.java
@@ -1,34 +1,34 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    boolean inQuote = false;
+    char quoteChar = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
+        if (last != ESC) {
+            if ((c == '\'' || c == '"') && !inQuote) {
+                inQuote = true;
+                quoteChar = c;
+            } else if (c == quoteChar && inQuote) {
+                inQuote = false;
+            } else if (!inQuote) {
                 if (c.equals(open)) {
                     depth++;
                     if (start == -1)
-                        start = pos;
+                        start = pos - 1;
                 }
                 else if (c.equals(close))
                     depth--;
             }
+        }
 
-            if (depth > 0 && last != 0)
-                end = pos; // don't include the outer match pair in the return
+        if (depth > 0)
+            end = pos; // include the outer match pair in the return
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
