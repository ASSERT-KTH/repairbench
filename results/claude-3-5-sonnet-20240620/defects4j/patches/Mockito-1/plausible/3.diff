diff --git a/tmp/281f241a-6e15-41c6-8eb0-6801b50f034a_buggy.java b/tmp/38060a37-ff89-42dd-9d84-648fcec1ebe0_fixed.java
index 1c875ad..71ebe0e 100644
--- a/tmp/281f241a-6e15-41c6-8eb0-6801b50f034a_buggy.java
+++ b/tmp/38060a37-ff89-42dd-9d84-648fcec1ebe0_fixed.java
@@ -1,31 +1,29 @@
 public void captureArgumentsFrom(Invocation invocation) {
+    Object[] arguments = invocation.getRawArguments();
     if (invocation.getMethod().isVarArgs()) {
-            int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
-
+        int lastIndex = arguments.length - 1;
+        if (arguments[lastIndex] instanceof Object[]) {
+            Object[] varargs = (Object[]) arguments[lastIndex];
+            for (int i = 0; i < varargs.length; i++) {
+                captureArgument(lastIndex + i, varargs[i]);
+            }
         } else {
-            for (int position = 0; position < matchers.size(); position++) {
+            captureArgument(lastIndex, arguments[lastIndex]);
+        }
+    }
+    for (int position = 0; position < Math.min(matchers.size(), arguments.length); position++) {
         Matcher m = matchers.get(position);
         if (m instanceof CapturesArguments) {
-                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
+            ((CapturesArguments) m).captureFrom(arguments[position]);
         }
     }
 }
 
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
+private void captureArgument(int position, Object argument) {
+    if (position < matchers.size()) {
+        Matcher m = matchers.get(position);
+        if (m instanceof CapturesArguments) {
+            ((CapturesArguments) m).captureFrom(argument);
+        }
+    }
 }
\ No newline at end of file
