diff --git a/tmp/dc2c624c-d344-4b10-ba56-d430774fcfc9_buggy.java b/tmp/64b701f5-22eb-4991-88e6-2cd6fe3765b4_fixed.java
index 10616db..b3d78ab 100644
--- a/tmp/dc2c624c-d344-4b10-ba56-d430774fcfc9_buggy.java
+++ b/tmp/64b701f5-22eb-4991-88e6-2cd6fe3765b4_fixed.java
@@ -1,19 +1,31 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+    
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        
+        // Handle leap year cases
+        if (partial.size() == 2 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) &&
+            partial.getFieldType(1).equals(DateTimeFieldType.dayOfMonth())) {
+            int month = values[0];
+            int day = values[1];
+            int newMonth = ((month - 1 + valueToAdd) % 12 + 12) % 12 + 1;
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(newMonth, 
+                iChronology.year().get(instant));
+            day = Math.min(day, maxDay);
+            instant = iChronology.monthOfYear().set(instant, newMonth);
+            instant = iChronology.dayOfMonth().set(instant, day);
+        } else {
             instant = add(instant, valueToAdd);
+        }
+        
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
