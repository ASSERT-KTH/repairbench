diff --git a/tmp/8bbb7aba-04cd-47af-9fac-372033deaf42_buggy.java b/tmp/0020c036-0c93-46fd-8e94-1034b8469e26_fixed.java
index 10616db..bf827bd 100644
--- a/tmp/8bbb7aba-04cd-47af-9fac-372033deaf42_buggy.java
+++ b/tmp/0020c036-0c93-46fd-8e94-1034b8469e26_fixed.java
@@ -1,19 +1,45 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+    
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
-            instant = add(instant, valueToAdd);
+        
+        // Handle leap year edge cases
+        DurationField field = partial.getFieldType(fieldIndex).getDurationField();
+        if (field.getType().equals(DurationFieldType.months())) {
+            int year = iChronology.year().get(instant);
+            int month = iChronology.monthOfYear().get(instant);
+            int day = iChronology.dayOfMonth().get(instant);
+            
+            month += valueToAdd;
+            while (month > 12) {
+                month -= 12;
+                year++;
+            }
+            while (month < 1) {
+                month += 12;
+                year--;
+            }
+            
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);
+            if (day > maxDay) {
+                day = maxDay;
+            }
+            
+            instant = iChronology.year().set(0, year);
+            instant = iChronology.monthOfYear().set(instant, month);
+            instant = iChronology.dayOfMonth().set(instant, day);
+        } else {
+            instant = field.add(instant, valueToAdd);
+        }
+        
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
