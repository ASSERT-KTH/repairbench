diff --git a/tmp/72d33331-d820-4e84-bcf8-96b008b35a66_buggy.java b/tmp/c29c8df9-08e9-4c30-9c9f-8fb563e907f2_fixed.java
index bada2b6..e282dfb 100644
--- a/tmp/72d33331-d820-4e84-bcf8-96b008b35a66_buggy.java
+++ b/tmp/c29c8df9-08e9-4c30-9c9f-8fb563e907f2_fixed.java
@@ -1,16 +1,23 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic instanceof ParameterizedType) {
+        Type[] typeArguments = ((ParameterizedType) generic).getActualTypeArguments();
+        if (typeArguments.length > 0) {
+            Type actualType = typeArguments[0];
+            if (actualType instanceof Class) {
+                return (Class<?>) actualType;
+            } else if (actualType instanceof ParameterizedType) {
+                // Handle nested generics by returning the raw type
+                return (Class<?>) ((ParameterizedType) actualType).getRawType();
+            }
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
