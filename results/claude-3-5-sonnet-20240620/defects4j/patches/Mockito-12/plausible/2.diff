diff --git a/tmp/848a6580-1e4a-4297-a5aa-2773ecca808e_buggy.java b/tmp/9c4354be-2709-4589-a7ff-affa9d405999_fixed.java
index bada2b6..fff5879 100644
--- a/tmp/848a6580-1e4a-4297-a5aa-2773ecca808e_buggy.java
+++ b/tmp/9c4354be-2709-4589-a7ff-affa9d405999_fixed.java
@@ -1,16 +1,16 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic instanceof ParameterizedType) {
+        Type[] typeArguments = ((ParameterizedType) generic).getActualTypeArguments();
+        if (typeArguments.length > 0) {
+            Type firstTypeArgument = typeArguments[0];
+            if (firstTypeArgument instanceof Class) {
+                return (Class<?>) firstTypeArgument;
+            } else if (firstTypeArgument instanceof ParameterizedType) {
+                // Handle nested generics
+                return (Class<?>) ((ParameterizedType) firstTypeArgument).getRawType();
+            }
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
