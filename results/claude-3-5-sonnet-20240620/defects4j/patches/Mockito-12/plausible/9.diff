diff --git a/tmp/afab4da6-4825-4310-8d63-32198f761bdf_buggy.java b/tmp/0f5a70e8-53ad-4555-a51f-9398175ce0f2_fixed.java
index bada2b6..c92a7d3 100644
--- a/tmp/afab4da6-4825-4310-8d63-32198f761bdf_buggy.java
+++ b/tmp/0f5a70e8-53ad-4555-a51f-9398175ce0f2_fixed.java
@@ -1,16 +1,23 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic instanceof ParameterizedType) {
+        Type[] typeArguments = ((ParameterizedType) generic).getActualTypeArguments();
+        if (typeArguments.length > 0) {
+            Type actual = typeArguments[0];
+            if (actual instanceof Class) {
+                return (Class<?>) actual;
+            } else if (actual instanceof ParameterizedType) {
+                // For nested generics, return the raw type
+                return (Class<?>) ((ParameterizedType) actual).getRawType();
+            }
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
