diff --git a/tmp/b7f97932-e910-415e-9ee4-ddf9d86ae168_buggy.java b/tmp/ffe16f20-e57e-458f-989d-7d196f32ff1c_fixed.java
index 6c0aa19..41c14d5 100644
--- a/tmp/b7f97932-e910-415e-9ee4-ddf9d86ae168_buggy.java
+++ b/tmp/ffe16f20-e57e-458f-989d-7d196f32ff1c_fixed.java
@@ -1,20 +1,28 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
     in = new PushbackInputStream(inputStream, buf.capacity());
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
+    // Initialize the buffer
+    buf.clear();
+    buf.limit(0);
+    // Set the current entry to null
+    current = null;
+    // Reset the entry size and compressed size
+    uncompressedCount = 0;
+    bytesReadFromStream = 0;
     // haven't read anything so far
 }
\ No newline at end of file
