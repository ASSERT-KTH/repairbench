diff --git a/tmp/9e6edf21-00e1-4b49-aee6-6c4bf03b7959_buggy.java b/tmp/f370db05-2d4c-4f92-a4d5-81f579ad2c73_fixed.java
index 939f49b..f3c30bd 100644
--- a/tmp/9e6edf21-00e1-4b49-aee6-6c4bf03b7959_buggy.java
+++ b/tmp/f370db05-2d4c-4f92-a4d5-81f579ad2c73_fixed.java
@@ -1,21 +1,25 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+            && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        Node child = n.getLastChild();
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+        if (child.getType() == Token.STRING &&
+                child.getString().equals("prototype")) {
+            return true;
+        }
 
+        // Check for chained property assignments
+        Node parent = n.getFirstChild();
+        if (parent.getType() == Token.GETPROP) {
+            child = parent.getLastChild();
             if (child.getType() == Token.STRING &&
                     child.getString().equals("prototype")) {
                 return true;
             }
         }
     }
 
     return false;
 }
\ No newline at end of file
