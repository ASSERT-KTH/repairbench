diff --git a/tmp/edf8f052-484f-4f4a-bba8-d2ad3fc6f634_buggy.java b/tmp/2ba0136a-8e26-4e88-a639-38e75e9c937c_fixed.java
index 939f49b..88e6685 100644
--- a/tmp/edf8f052-484f-4f4a-bba8-d2ad3fc6f634_buggy.java
+++ b/tmp/2ba0136a-8e26-4e88-a639-38e75e9c937c_fixed.java
@@ -1,21 +1,24 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+            && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+        Node child = n.getLastChild();
 
         if (child.getType() == Token.STRING &&
                 child.getString().equals("prototype")) {
             return true;
         }
+
+        // Check for chained assignments
+        if (assign.getParent().getType() == Token.ASSIGN) {
+            Node grandParent = assign.getParent();
+            if (grandParent.getFirstChild() == assign &&
+                    grandParent.getLastChild().getType() == Token.FUNCTION) {
+                return true;
+            }
         }
     }
 
     return false;
 }
\ No newline at end of file
