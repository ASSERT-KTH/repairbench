diff --git a/tmp/435aa82c-0bcd-4705-9d1d-b3cef898c125_buggy.java b/tmp/348730bc-3db1-4e6b-b483-9d5e36a04a72_fixed.java
index 939f49b..0f6e1c3 100644
--- a/tmp/435aa82c-0bcd-4705-9d1d-b3cef898c125_buggy.java
+++ b/tmp/348730bc-3db1-4e6b-b483-9d5e36a04a72_fixed.java
@@ -1,21 +1,24 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+            && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+        Node child = n.getLastChild();
 
         if (child.getType() == Token.STRING &&
                 child.getString().equals("prototype")) {
             return true;
         }
+
+        // Check for chained property assignments
+        if (n.getFirstChild().getType() == Token.GETPROP) {
+            Node subChild = n.getFirstChild().getLastChild();
+            if (subChild.getType() == Token.STRING &&
+                    subChild.getString().equals("prototype")) {
+                return true;
+            }
         }
     }
 
     return false;
 }
\ No newline at end of file
