diff --git a/tmp/cae13563-762f-47e4-ad9f-70ced7abfb2f_buggy.java b/tmp/c26ebdd3-9cd2-4420-b235-e857bca3870d_fixed.java
index 939f49b..08e05ee 100644
--- a/tmp/cae13563-762f-47e4-ad9f-70ced7abfb2f_buggy.java
+++ b/tmp/c26ebdd3-9cd2-4420-b235-e857bca3870d_fixed.java
@@ -1,21 +1,25 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+    Node child = n.getLastChild();
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+    if (child.getType() == Token.STRING &&
+        child.getString().equals("prototype")) {
+      return true;
+    }
 
+    // Check for chained property assignments
+    Node parent = n.getFirstChild();
+    if (parent.getType() == Token.GETPROP) {
+      child = parent.getLastChild();
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
