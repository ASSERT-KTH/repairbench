diff --git a/tmp/bd5c9e48-1b32-40d9-bc82-01dab0be8692_buggy.java b/tmp/340581af-259b-4cc4-804f-b0eaeee99d51_fixed.java
index 939f49b..bcc2a1a 100644
--- a/tmp/bd5c9e48-1b32-40d9-bc82-01dab0be8692_buggy.java
+++ b/tmp/340581af-259b-4cc4-804f-b0eaeee99d51_fixed.java
@@ -1,21 +1,25 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+    Node child = n.getLastChild();
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+    if (child.isString() && child.getString().equals("prototype")) {
+      return true;
+    }
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    // Check for chained assignments
+    if (assign.getParent().isAssign()) {
+      Node parent = assign.getParent();
+      if (parent.getFirstChild().isGetProp()) {
+        Node parentProp = parent.getFirstChild().getLastChild();
+        if (parentProp.isString() && !parentProp.getString().equals("prototype")) {
           return true;
         }
       }
     }
+  }
 
   return false;
 }
\ No newline at end of file
