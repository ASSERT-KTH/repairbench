diff --git a/tmp/d9e87c61-70f7-472f-8896-b7057fbdfd90_buggy.java b/tmp/aeeac5cd-5c08-40a0-b6df-9d03ea882eb8_fixed.java
index 0b7c52e..4a1e91b 100644
--- a/tmp/d9e87c61-70f7-472f-8896-b7057fbdfd90_buggy.java
+++ b/tmp/aeeac5cd-5c08-40a0-b6df-9d03ea882eb8_fixed.java
@@ -1,27 +1,33 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
         // We should never see a mix of numbers and strings.
-        String name = child.getString();
+        String name;
+        if (child.isStringKey()) {
+            name = child.getString();
+        } else {
+            // Skip non-string keys
+            continue;
+        }
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
         if (!prop.scheduleRenaming(child,
                                    processProperty(t, prop, type, null))) {
           // TODO(user): It doesn't look like the user can do much in this
           // case right now.
           if (propertiesToErrorFor.containsKey(name)) {
             compiler.report(JSError.make(
                 t.getSourceName(), child, propertiesToErrorFor.get(name),
                 Warnings.INVALIDATION, name,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
       }
     }
\ No newline at end of file
