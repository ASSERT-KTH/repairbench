diff --git a/tmp/41e4a47c-5f51-410e-8c49-5f4b60834dc1_buggy.java b/tmp/0a4b144e-ace2-4a55-81ac-1f95c7f1cd0d_fixed.java
index 71189c3..7764b21 100644
--- a/tmp/41e4a47c-5f51-410e-8c49-5f4b60834dc1_buggy.java
+++ b/tmp/0a4b144e-ace2-4a55-81ac-1f95c7f1cd0d_fixed.java
@@ -1,46 +1,22 @@
-    public void validate(final WriteableCommandLine commandLine)
-        throws OptionException {
-        // number of options found
-        int present = 0;
-
-        // reference to first unexpected option
-        Option unexpected = null;
-
-        for (final Iterator i = options.iterator(); i.hasNext();) {
-            final Option option = (Option) i.next();
-
-            // needs validation?
-            boolean validate = option.isRequired() || option instanceof Group;
-            if (validate) {
-                option.validate(commandLine);
+public class FileValidator implements Validator {
+    public static FileValidator getExistingFileInstance() {
+        return new FileValidator();
     }
 
-            // if the child option is present then validate it
-            if (commandLine.hasOption(option)) {
-                if (++present > maximum) {
-                    unexpected = option;
-
-                    break;
+    public void validate(List values) throws InvalidArgumentException {
+        for (Object value : values) {
+            if (value instanceof String) {
+                File file = new File((String) value);
+                if (!file.exists()) {
+                    throw new InvalidArgumentException("File does not exist: " + value);
                 }
-
-                option.validate(commandLine);
+            } else if (value instanceof File) {
+                if (!((File) value).exists()) {
+                    throw new InvalidArgumentException("File does not exist: " + value);
                 }
+            } else {
+                throw new InvalidArgumentException("Invalid file type: " + value.getClass());
             }
-
-        // too many options
-        if (unexpected != null) {
-            throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
-                                      unexpected.getPreferredName());
-        }
-
-        // too few option
-        if (present < minimum) {
-            throw new OptionException(this, ResourceConstants.MISSING_OPTION);
         }
-
-        // validate each anonymous argument
-        for (final Iterator i = anonymous.iterator(); i.hasNext();) {
-            final Option option = (Option) i.next();
-            option.validate(commandLine);
     }
 }
\ No newline at end of file
