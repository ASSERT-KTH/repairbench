diff --git a/tmp/2c9b4185-9cf5-4bbc-a1a2-7360db17782a_buggy.java b/tmp/bd47ad10-1f0d-4411-a961-0b53de75b08d_fixed.java
index 3002587..ddaf308 100644
--- a/tmp/2c9b4185-9cf5-4bbc-a1a2-7360db17782a_buggy.java
+++ b/tmp/bd47ad10-1f0d-4411-a961-0b53de75b08d_fixed.java
@@ -1,10 +1,29 @@
 /**
  * Fits a Gaussian function to the observed points.
  *
  * @return the parameters of the Gaussian function that best fits the
  * observed points (in the same order as above).
  */
 public double[] fit() {
     final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+    
+    // Ensure the initial guess for sigma (3rd parameter) is positive
+    guess[2] = Math.abs(guess[2]);
+    
+    // Create a constrained Gaussian function that enforces positive sigma
+    Gaussian.Parametric gaussian = new Gaussian.Parametric() {
+        @Override
+        public double value(double x, double... parameters) {
+            parameters[2] = Math.abs(parameters[2]); // Ensure sigma is positive
+            return super.value(x, parameters);
+        }
+        
+        @Override
+        public double[] gradient(double x, double... parameters) {
+            parameters[2] = Math.abs(parameters[2]); // Ensure sigma is positive
+            return super.gradient(x, parameters);
+        }
+    };
+    
+    return fit(gaussian, guess);
 }
\ No newline at end of file
