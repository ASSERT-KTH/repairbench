diff --git a/tmp/1a842ae5-3fea-43fe-a535-d211665a8481_buggy.java b/tmp/7fcd58dc-b570-421b-b2dc-239fee7bc66f_fixed.java
index 875b31b..9bdb136 100644
--- a/tmp/1a842ae5-3fea-43fe-a535-d211665a8481_buggy.java
+++ b/tmp/7fcd58dc-b570-421b-b2dc-239fee7bc66f_fixed.java
@@ -1,54 +1,46 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     if (nextLineTabStop >= width)
     {
         // stops infinite loop happening
         nextLineTabStop = width - 1;
     }
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+        text = text.substring(pos).trim();
+        if (text.length() == 0)
+        {
+            return sb;
+        }
+        text = padding + text;
+        pos = findWrapPos(text, width, nextLineTabStop);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
 
         if ((text.length() > width) && (pos == nextLineTabStop - 1)) 
         {
             pos = width;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
