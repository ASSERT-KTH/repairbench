diff --git a/tmp/a32f8a13-7912-40b4-81b3-5b7a19fd7359_buggy.java b/tmp/b52ca6f0-23b1-4bb0-953d-cb314df31cb7_fixed.java
index e5ad041..c546f0e 100644
--- a/tmp/a32f8a13-7912-40b4-81b3-5b7a19fd7359_buggy.java
+++ b/tmp/b52ca6f0-23b1-4bb0-953d-cb314df31cb7_fixed.java
@@ -1,19 +1,16 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+    
     if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
+        throw new IllegalArgumentException("Class " + subclass.getName() + " is not a subtype of " + _class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    
+    // Re-resolve the type with the new subclass
+    TypeBindings newBindings = TypeBindings.create(subclass, _bindings.getTypeParameters());
+    return new SimpleType(subclass, newBindings, _superClass, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
