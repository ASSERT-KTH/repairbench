diff --git a/tmp/b51fe0c4-9f49-427e-a3be-b2d0f33a8dc3_buggy.java b/tmp/77015058-f6fb-4e13-8940-28f87e1708c7_fixed.java
index d6a560a..2006efd 100644
--- a/tmp/b51fe0c4-9f49-427e-a3be-b2d0f33a8dc3_buggy.java
+++ b/tmp/77015058-f6fb-4e13-8940-28f87e1708c7_fixed.java
@@ -1,33 +1,34 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+    if (isResolved()) {
+        return getReferencedType();
+    }
+
     boolean resolved = resolveViaRegistry(t, enclosing);
+    
     if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
+        return this;
     }
 
     if (resolved) {
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
         return registry.isLastGeneration() ?
             getReferencedType() : this;
     }
 
     resolveViaProperties(t, enclosing);
+    
     if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
+        return this;
     }
 
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
         finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
 }
\ No newline at end of file
