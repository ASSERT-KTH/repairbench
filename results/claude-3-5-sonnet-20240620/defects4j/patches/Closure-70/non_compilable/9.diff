diff --git a/tmp/36800b5d-b265-4e5b-85e1-89d21fdbcd45_buggy.java b/tmp/f5154635-5d21-468b-96f1-a2e2bd10aa0d_fixed.java
index 1530b34..a9d873b 100644
--- a/tmp/36800b5d-b265-4e5b-85e1-89d21fdbcd45_buggy.java
+++ b/tmp/f5154635-5d21-468b-96f1-a2e2bd10aa0d_fixed.java
@@ -1,23 +1,36 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
           defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+              jsDocParameter.getJSType(), false);
           jsDocParameter = jsDocParameter.getNext();
         } else {
-              defineSlot(astParameter, functionNode, null, true);
+          defineSlot(astParameter, functionNode, null, false);
         }
       }
     }
   }
-    } // end declareArguments
+  
+  // Declare function parameters in the function body scope
+  NodeTraversal.traverse(
+      compiler,
+      body,
+      new AbstractPostOrderCallback() {
+        @Override
+        public void visit(NodeTraversal t, Node n, Node parent) {
+          if (n.isName() && astParameters.hasChild(n)) {
+            t.getScope().declare(n.getString(), n, n.getJSType(), null);
+          }
+        }
+      });
+}
\ No newline at end of file
