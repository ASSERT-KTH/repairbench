diff --git a/tmp/525468c5-d4b9-4a90-b16b-f34af164b6b4_buggy.java b/tmp/df42896d-0654-4229-bbec-4d6f319c8bdc_fixed.java
index dc93be3..de842c5 100644
--- a/tmp/525468c5-d4b9-4a90-b16b-f34af164b6b4_buggy.java
+++ b/tmp/df42896d-0654-4229-bbec-4d6f319c8bdc_fixed.java
@@ -1,14 +1,19 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+    Tag tag = Tag.valueOf(startTag.name());
+    Element el = new Element(tag, baseUri, startTag.attributes);
+
     if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        if (!tag.isKnownTag() || tag.isEmpty()) {
+            el.setTag(Tag.valueOf(el.tagName()).setSelfClosing());
+            insertEmpty(el);
             return el;
+        } else {
+            insert(el);
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+            return el;
+        }
     }
 
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
