diff --git a/tmp/1b6b0404-7475-4a3c-b7f7-fc5d40797b1c_buggy.java b/tmp/bcd7d0f5-5569-4435-8d1e-2f35252d1b99_fixed.java
index dc93be3..84c5bfd 100644
--- a/tmp/1b6b0404-7475-4a3c-b7f7-fc5d40797b1c_buggy.java
+++ b/tmp/bcd7d0f5-5569-4435-8d1e-2f35252d1b99_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
-            return el;
+        if (!el.tag().isKnownTag()) {
+            return el; // Unknown tags can be self-closing
+        }
+        // For known tags, continue to add to stack and emit end tag
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
+    if (el.tag().isEmpty()) {
+        tokeniser.emit(new Token.EndTag(el.tagName()));
+    } else {
+        stack.add(el);
+    }
     return el;
 }
\ No newline at end of file
