diff --git a/tmp/4e385555-0dab-4a15-944e-39dd471e72a4_buggy.java b/tmp/1e0b47c5-cac3-48fa-b95d-8d9f55c6e528_fixed.java
index 544303b..31cda15 100644
--- a/tmp/4e385555-0dab-4a15-944e-39dd471e72a4_buggy.java
+++ b/tmp/1e0b47c5-cac3-48fa-b95d-8d9f55c6e528_fixed.java
@@ -1,29 +1,27 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         // if multiple variables can take a given value 
         // then we choose the first and set the rest equal to 0
         coefficients[i] =
             (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
             (restrictToNonNegative ? 0 : mostNegative);
         if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
+            boolean foundOne = false;
+            for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + getOriginalNumDecisionVariables(); j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
+                    if (foundOne) {
                         coefficients[i] = 0;
+                        break;
+                    }
+                    foundOne = true;
                 }
             }
         }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
