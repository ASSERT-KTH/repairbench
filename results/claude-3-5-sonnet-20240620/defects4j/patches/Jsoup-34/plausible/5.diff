diff --git a/tmp/921ea9d0-3018-48db-b9e3-be18cefb774c_buggy.java b/tmp/779371db-f1a9-4b59-b81b-4ca2e1e66de2_fixed.java
index 21f64c6..46c4344 100644
--- a/tmp/921ea9d0-3018-48db-b9e3-be18cefb774c_buggy.java
+++ b/tmp/779371db-f1a9-4b59-b81b-4ca2e1e66de2_fixed.java
@@ -1,23 +1,22 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
         if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            continue;
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+        if (last <= length) {
+            boolean match = true;
+            for (int j = 1; j < seq.length(); j++, i++) {
+                if (seq.charAt(j) != input[i]) {
+                    match = false;
+                    break;
+                }
+            }
+            if (match) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
