diff --git a/tmp/3b8f037a-67bd-4116-a5d2-37b3b19d511e_buggy.java b/tmp/bd38db8f-5ba1-4d5b-9981-7d06e4993c89_fixed.java
index 6e238e7..8cc31c5 100644
--- a/tmp/3b8f037a-67bd-4116-a5d2-37b3b19d511e_buggy.java
+++ b/tmp/bd38db8f-5ba1-4d5b-9981-7d06e4993c89_fixed.java
@@ -1,15 +1,22 @@
 /**
  * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
  *
  * @param p1 the first point
  * @param p2 the second point
  * @return the L<sub>2</sub> distance between the two points
+ * @throws IllegalArgumentException if the points have different lengths or are null
  */
 public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+    if (p1 == null || p2 == null) {
+        throw new IllegalArgumentException("Points cannot be null");
+    }
+    if (p1.length != p2.length) {
+        throw new IllegalArgumentException("Points must have the same length");
+    }
+    double sum = 0;
     for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+        final double dp = p1[i] - p2[i];
         sum += dp * dp;
     }
     return Math.sqrt(sum);
 }
\ No newline at end of file
