diff --git a/tmp/d2ffddb6-76d7-447c-836a-4ebc9b42f7a7_buggy.java b/tmp/83577313-f20d-4bbf-8d24-4b38ed1dbfc3_fixed.java
index 4bbd561..615fe64 100644
--- a/tmp/d2ffddb6-76d7-447c-836a-4ebc9b42f7a7_buggy.java
+++ b/tmp/83577313-f20d-4bbf-8d24-4b38ed1dbfc3_fixed.java
@@ -1,37 +1,45 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    if (index + 2 < input.length() && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
+        if (start < input.length()) {
             char firstChar = input.charAt(start);
             if (firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
+        }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if (end < input.length()) {
             int entityValue;
             try {
                 if (isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch (NumberFormatException nfe) {
                 return 0;
             }
 
+            if (entityValue > 0xFFFF) {
+                char[] chars = Character.toChars(entityValue);
+                out.write(chars);
+            } else {
                 out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+            }
+            return end - index + 1;
+        }
     }
     return 0;
 }
\ No newline at end of file
