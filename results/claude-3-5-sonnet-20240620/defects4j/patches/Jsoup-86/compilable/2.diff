diff --git a/tmp/2a6131e9-c521-475a-99fc-18e5cce3dc5b_buggy.java b/tmp/d3372832-a7b5-4f76-8b83-a8d427cb752a_fixed.java
index b8e7fdb..ee770fe 100644
--- a/tmp/2a6131e9-c521-475a-99fc-18e5cce3dc5b_buggy.java
+++ b/tmp/d3372832-a7b5-4f76-8b83-a8d427cb752a_fixed.java
@@ -1,15 +1,42 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
-            decl.attributes().addAll(el.attributes());
-        }
-        return decl;
+    if (data.length() < 2) {
+        return null;
+    }
+    
+    String decl = data.substring(1, data.length() - 1).trim();
+    if (!decl.startsWith("?") || !decl.endsWith("?")) {
+        return null;
+    }
+    
+    decl = decl.substring(1, decl.length() - 1).trim();
+    
+    int firstSpace = decl.indexOf(' ');
+    if (firstSpace == -1) {
+        return null;
+    }
+    
+    String name = decl.substring(0, firstSpace);
+    String attributeString = decl.substring(firstSpace + 1);
+    
+    XmlDeclaration declaration = new XmlDeclaration(name, data.startsWith("!"));
+    
+    String[] attributes = attributeString.split("\\s+");
+    for (String attribute : attributes) {
+        int equalsIndex = attribute.indexOf('=');
+        if (equalsIndex > 0) {
+            String key = attribute.substring(0, equalsIndex).trim();
+            String value = attribute.substring(equalsIndex + 1).trim();
+            if (value.startsWith("\"") && value.endsWith("\"") || value.startsWith("'") && value.endsWith("'")) {
+                value = value.substring(1, value.length() - 1);
+            }
+            declaration.attr(key, value);
+        }
+    }
+    
+    return declaration;
 }
\ No newline at end of file
