diff --git a/tmp/ff7d45ab-1812-4884-8fd0-cb73d5781ca3_buggy.java b/tmp/169df4d9-b704-4144-b4ff-608439ef4264_fixed.java
index f9a9b5b..6ce0867 100644
--- a/tmp/ff7d45ab-1812-4884-8fd0-cb73d5781ca3_buggy.java
+++ b/tmp/169df4d9-b704-4144-b4ff-608439ef4264_fixed.java
@@ -1,30 +1,42 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
+        // Use the constructor if specified in the settings
+        if (settings.getConstructorArgs() != null) {
+            mockInstance = classInstantiator.instantiate(mockedProxyType, settings.getConstructorArgs());
+        } else {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
+        }
+        
+        // Handle outer instance for inner classes
+        if (settings.getOuterClassInstance() != null) {
+            Field outerField = mockedProxyType.getDeclaredField("this$0");
+            outerField.setAccessible(true);
+            outerField.set(mockInstance, settings.getOuterClassInstance());
+        }
+
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
+        // Call any initialization methods or set default values
+        if (settings.getDefaultAnswer() == CALLS_REAL_METHODS) {
+            for (Method method : mockedProxyType.getDeclaredMethods()) {
+                if (method.getName().startsWith("initialize") && method.getParameterCount() == 0) {
+                    method.setAccessible(true);
+                    method.invoke(mockInstance);
+                }
+            }
+        }
+
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
-        } catch (ClassCastException cce) {
-            throw new MockitoException(join(
-                    "ClassCastException occurred while creating the mockito mock :",
-                    "  class to mock : " + describeClass(mockedProxyType),
-                    "  created class : " + describeClass(settings.getTypeToMock()),
-                    "  proxy instance class : " + describeClass(mockInstance),
-                    "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
-                    "",
-                    "You might experience classloading issues, please ask the mockito mailing-list.",
-                    ""
-            ),cce);
-        } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+    } catch (Exception e) {
+        throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
