diff --git a/tmp/3029348b-502e-4ec7-a701-efa18e4f007a_buggy.java b/tmp/55b3e272-b86c-4910-88bf-78dc145ba40c_fixed.java
index 23f078d..6623af2 100644
--- a/tmp/3029348b-502e-4ec7-a701-efa18e4f007a_buggy.java
+++ b/tmp/55b3e272-b86c-4910-88bf-78dc145ba40c_fixed.java
@@ -1,14 +1,17 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
+            if (Character.isSupplementaryCodePoint(c)) {
+                i++; // skip next char as we've already processed the surrogate pair
+            }
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file
