diff --git a/tmp/81dd2902-b2bb-401b-a524-7d4e8eedc933_buggy.java b/tmp/3909df29-fbd5-4c5e-950a-6ed29e145811_fixed.java
index 1c732f4..e9daac6 100644
--- a/tmp/81dd2902-b2bb-401b-a524-7d4e8eedc933_buggy.java
+++ b/tmp/3909df29-fbd5-4c5e-950a-6ed29e145811_fixed.java
@@ -1,88 +1,93 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         String sentence = (String) msg;
         sentence = sentence.substring(sentence.indexOf('|') + 1, sentence.lastIndexOf('|'));
 
         Position position = new Position();
         position.setProtocol(getProtocolName());
 
         for (String entry : sentence.split(",")) {
             int delimiter = entry.indexOf('=');
-            String key = entry.substring(0, delimiter);
-            String value = entry.substring(delimiter + 1);
+            if (delimiter <= 0) continue;
+            String key = entry.substring(0, delimiter).trim();
+            String value = entry.substring(delimiter + 1).trim();
+            try {
                 switch (key) {
                     case "unit":
                         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, value);
                         if (deviceSession != null) {
                             position.setDeviceId(deviceSession.getDeviceId());
                         }
                         break;
                     case "gps_valid":
-                    position.setValid(Integer.parseInt(value) != 0);
+                        position.setValid(value.equals("1"));
                         break;
                     case "datetime_actual":
                         position.setTime(new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").parse(value));
                         break;
                     case "latitude":
                         position.setLatitude(Double.parseDouble(value));
                         break;
                     case "longitude":
                         position.setLongitude(Double.parseDouble(value));
                         break;
                     case "altitude":
                         position.setAltitude(Double.parseDouble(value));
                         break;
                     case "velocity":
                         position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(value)));
                         break;
                     case "heading":
                         position.setCourse(Integer.parseInt(value));
                         break;
                     case "eventid":
                         position.set(Position.KEY_EVENT, Integer.parseInt(value));
                         break;
                     case "mileage":
                         position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));
                         break;
                     case "satellites":
                         position.set(Position.KEY_SATELLITES, Integer.parseInt(value));
                         break;
                     case "ignition":
-                    position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);
+                        position.set(Position.KEY_IGNITION, value.equals("1"));
                         break;
                     case "door":
-                    position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);
+                        position.set(Position.KEY_DOOR, value.equals("1"));
                         break;
                     case "arm":
-                    position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);
+                        position.set(Position.KEY_ARMED, value.equals("1"));
                         break;
                     case "fuel":
                         position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));
                         break;
                     case "rpm":
                         position.set(Position.KEY_RPM, Integer.parseInt(value));
                         break;
                     case "main_voltage":
                         position.set(Position.KEY_POWER, Double.parseDouble(value));
                         break;
                     case "backup_voltage":
                         position.set(Position.KEY_BATTERY, Double.parseDouble(value));
                         break;
                     case "analog1":
                     case "analog2":
                     case "analog3":
                         position.set(Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'), Double.parseDouble(value));
                         break;
                     case "extra1":
                     case "extra2":
                     case "extra3":
                     default:
                         position.set(key, value);
                         break;
                 }
+            } catch (Exception e) {
+                // Skip invalid entries
+            }
         }
 
         return position;
     }
\ No newline at end of file
