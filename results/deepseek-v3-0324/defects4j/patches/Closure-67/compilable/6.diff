diff --git a/tmp/a62f2513-a9c4-4118-8e87-6db765699b67_buggy.java b/tmp/bc4782bd-8166-4874-9282-82cc997cafb0_fixed.java
index 939f49b..771e95a 100644
--- a/tmp/a62f2513-a9c4-4118-8e87-6db765699b67_buggy.java
+++ b/tmp/bc4782bd-8166-4874-9282-82cc997cafb0_fixed.java
@@ -1,21 +1,31 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
           Node child = n.getFirstChild().getFirstChild().getNext();
 
+          if (child.getType() == Token.STRING &&
+              child.getString().equals("prototype")) {
+            return true;
+          }
+        }
+      } else if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
+          && n.getType() == Token.GETELEM) {
+        Node object = n.getFirstChild();
+        if (object.getType() == Token.GETPROP) {
+          Node child = object.getFirstChild().getNext();
           if (child.getType() == Token.STRING &&
               child.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
