diff --git a/tmp/fc23841f-3481-447c-a3ef-546ef1474a9c_buggy.java b/tmp/1c39827b-d3c2-4da5-b2c9-d479e7facd44_fixed.java
index 939f49b..0f23d73 100644
--- a/tmp/fc23841f-3481-447c-a3ef-546ef1474a9c_buggy.java
+++ b/tmp/1c39827b-d3c2-4da5-b2c9-d479e7facd44_fixed.java
@@ -1,21 +1,31 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+          Node child = n.getFirstChild();
+          while (child.getType() == Token.GETPROP) {
+            child = child.getFirstChild();
+          }
+          child = child.getNext();
 
+          if (child.getType() == Token.STRING &&
+              child.getString().equals("prototype")) {
+            return true;
+          }
+        } else {
+          Node child = n.getFirstChild().getNext();
           if (child.getType() == Token.STRING &&
               child.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
