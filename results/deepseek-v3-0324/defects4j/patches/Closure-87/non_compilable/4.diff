diff --git a/tmp/360b2c7e-0efa-4d62-9772-4f10b408a107_buggy.java b/tmp/f5ae4585-2dc6-4234-8435-307ea89e9100_fixed.java
index 19fd63e..7f03c93 100644
--- a/tmp/360b2c7e-0efa-4d62-9772-4f10b408a107_buggy.java
+++ b/tmp/f5ae4585-2dc6-4234-8435-307ea89e9100_fixed.java
@@ -1,24 +1,35 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
             // We only have to worry about methods with an implicit 'this'
             // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+          if (NodeUtil.isExpressionNode(maybeExpr)) {
+              Node expr = maybeExpr.getFirstChild();
+              if (expr != null && expr.isCall()) {
+                  Node callee = expr.getFirstChild();
+                  if (callee != null && callee.isGetProp()) {
+                      String propName = callee.getLastChild().getString();
+                      if (propName.equals("onchange") || propName.equals("onclick") ||
+                          propName.endsWith("onchange") || propName.endsWith("onclick")) {
+                          return false;
+                      }
+                  }
+              }
+              return true;
+          }
       }
     }
-
     return false;
   }
\ No newline at end of file
