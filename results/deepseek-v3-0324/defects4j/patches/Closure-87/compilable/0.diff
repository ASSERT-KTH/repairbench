diff --git a/tmp/296ead40-a1ae-456a-a047-0943bb32dae0_buggy.java b/tmp/941a49a6-9645-4720-ba19-a9a7c46d8a08_fixed.java
index 19fd63e..e64b82b 100644
--- a/tmp/296ead40-a1ae-456a-a047-0943bb32dae0_buggy.java
+++ b/tmp/941a49a6-9645-4720-ba19-a9a7c46d8a08_fixed.java
@@ -1,24 +1,32 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+          if (NodeUtil.isExpressionNode(maybeExpr)) {
+            Node expr = maybeExpr.getFirstChild();
+            if (expr != null && expr.getType() == Token.CALL) {
+              Node target = expr.getFirstChild();
+              if (target != null && target.getType() == Token.GETPROP) {
+                String propName = target.getLastChild().getString();
+                if (propName != null && propName.startsWith("on")) {
+                  return false;
+                }
+              }
+            }
+            return true;
+          }
       }
     }
-
     return false;
   }
\ No newline at end of file
