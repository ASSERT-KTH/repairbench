diff --git a/tmp/9ce06dd0-c47a-41dd-8829-500f2cdd2ea9_buggy.java b/tmp/abc7b450-d8ee-480e-985d-071e9021cdea_fixed.java
index 19fd63e..759f5ce 100644
--- a/tmp/9ce06dd0-c47a-41dd-8829-500f2cdd2ea9_buggy.java
+++ b/tmp/abc7b450-d8ee-480e-985d-071e9021cdea_fixed.java
@@ -1,24 +1,31 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
+          Node expr = maybeExpr.getFirstChild();
+          if (expr.getType() == Token.CALL) {
+            Node callee = expr.getFirstChild();
+            if (callee.getType() == Token.GETPROP) {
+              String propName = callee.getLastChild().getString();
+              if (propName != null && propName.endsWith("onchange")) {
+                return false;
+              }
+            }
+          }
+        }
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
-
     return false;
   }
\ No newline at end of file
