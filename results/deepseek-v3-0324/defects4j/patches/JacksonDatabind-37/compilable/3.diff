diff --git a/tmp/e9b81edf-5b73-4870-bae3-b2da9a8e1315_buggy.java b/tmp/562304d8-3036-44c3-9eb3-6a283fdf93c5_fixed.java
index e5ad041..385b4be 100644
--- a/tmp/e9b81edf-5b73-4870-bae3-b2da9a8e1315_buggy.java
+++ b/tmp/562304d8-3036-44c3-9eb3-6a283fdf93c5_fixed.java
@@ -1,19 +1,22 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values, so no.
         /*
         if (!_class.isAssignableFrom(subclass)) {
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
         }
         */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+        // Properly resolve the new type with all type information
+        JavaType newType = new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
+        // Ensure type parameters are properly resolved
+        newType = newType.withStaticTyping();
+        return newType;
     }
\ No newline at end of file
