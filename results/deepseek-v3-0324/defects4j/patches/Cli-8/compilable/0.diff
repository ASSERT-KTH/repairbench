diff --git a/tmp/f576eb0c-ebf8-4655-932b-baf1d01584da_buggy.java b/tmp/0c35e97d-ead7-4d1b-8460-a97c0b8ba889_fixed.java
index 8e93a5e..bd8e304 100644
--- a/tmp/f576eb0c-ebf8-4655-932b-baf1d01584da_buggy.java
+++ b/tmp/0c35e97d-ead7-4d1b-8460-a97c0b8ba889_fixed.java
@@ -1,43 +1,34 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
-            text = padding + text.substring(pos).trim();
+            String remaining = text.substring(pos).trim();
+            if (remaining.length() == 0) {
+                return sb;
+            }
+            text = padding + remaining;
             pos = findWrapPos(text, width, nextLineTabStop);
 
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
