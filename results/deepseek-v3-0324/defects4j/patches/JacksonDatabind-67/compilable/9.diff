diff --git a/tmp/31ff8b33-af3d-45dd-880a-a784838efb26_buggy.java b/tmp/279d9957-308f-47b4-aec8-18a7f82a7843_fixed.java
index bc80637..6ca9eac 100644
--- a/tmp/31ff8b33-af3d-45dd-880a-a784838efb26_buggy.java
+++ b/tmp/279d9957-308f-47b4-aec8-18a7f82a7843_fixed.java
@@ -1,33 +1,33 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
-            if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
+            if (deser == null && type.isEnumType()) {
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            }
         }
         // and then post-processing
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
