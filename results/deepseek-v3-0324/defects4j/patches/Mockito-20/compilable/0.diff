diff --git a/tmp/31160da7-95dd-4407-ae1d-cfa3694d90bb_buggy.java b/tmp/d7ba400d-4ff9-4f32-9bb3-e2c178fc835e_fixed.java
index f9a9b5b..98025a4 100644
--- a/tmp/31160da7-95dd-4407-ae1d-cfa3694d90bb_buggy.java
+++ b/tmp/d7ba400d-4ff9-4f32-9bb3-e2c178fc835e_fixed.java
@@ -1,30 +1,41 @@
     public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
             throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
         }
         Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
                 settings.getTypeToMock(),
                 settings.getExtraInterfaces()
         );
         T mockInstance = null;
         try {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
             return ensureMockIsAssignableToMockedType(settings, mockInstance);
         } catch (ClassCastException cce) {
             throw new MockitoException(join(
                     "ClassCastException occurred while creating the mockito mock :",
                     "  class to mock : " + describeClass(mockedProxyType),
                     "  created class : " + describeClass(settings.getTypeToMock()),
                     "  proxy instance class : " + describeClass(mockInstance),
                     "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                     "",
                     "You might experience classloading issues, please ask the mockito mailing-list.",
                     ""
             ), cce);
         } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+            String typeName = settings.getTypeToMock().getSimpleName();
+            if (e.getCause() != null && e.getCause().getMessage() != null) {
+                if (e.getCause().getMessage().contains("outer instance")) {
+                    throw new MockitoException("Unable to create mock instance of type '" + typeName + "'\n" +
+                            "Please ensure that the outer instance has correct type and that the target class has 0-arg constructor.", e);
+                }
+                if (e.getCause().getMessage().contains("0-arg constructor")) {
+                    throw new MockitoException("Unable to create mock instance of type '" + typeName + "'\n" +
+                            e.getCause().getMessage(), e);
+                }
+            }
+            throw new MockitoException("Unable to create mock instance of type '" + typeName + "'", e);
         }
     }
\ No newline at end of file
