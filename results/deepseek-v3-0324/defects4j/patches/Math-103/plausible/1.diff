diff --git a/tmp/e418b43a-0469-4a8c-a928-df1658553f8c_buggy.java b/tmp/1173e90a-ad7c-4075-817a-a1c9ee6b5212_fixed.java
index 6cfa79b..739dc6f 100644
--- a/tmp/e418b43a-0469-4a8c-a928-df1658553f8c_buggy.java
+++ b/tmp/1173e90a-ad7c-4075-817a-a1c9ee6b5212_fixed.java
@@ -1,12 +1,26 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        try {
+            double z = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+            if (z < -20.0) {
+                return 0.0;
+            }
+            if (z > 20.0) {
+                return 1.0;
+            }
+            return 0.5 * (1.0 + Erf.erf(z));
+        } catch (MathException ex) {
+            if (x < mean) {
+                return 0.0;
+            } else {
+                return 1.0;
+            }
+        }
     }
\ No newline at end of file
