diff --git a/tmp/4a3c1c24-ee6d-4e46-a8b9-c4f4f59a95ae_buggy.java b/tmp/04b1b416-e219-4644-ae9e-9e6c24e1c5d8_fixed.java
index 6cfa79b..df6337d 100644
--- a/tmp/4a3c1c24-ee6d-4e46-a8b9-c4f4f59a95ae_buggy.java
+++ b/tmp/04b1b416-e219-4644-ae9e-9e6c24e1c5d8_fixed.java
@@ -1,12 +1,26 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        if (Double.isInfinite(x)) {
+            if (x > 0) {
+                return 1.0;
+            } else {
+                return 0.0;
+            }
+        }
+        double dev = x - mean;
+        if (Math.abs(dev) > 20 * standardDeviation) {
+            if (dev < 0) {
+                return 0.0;
+            } else {
+                return 1.0;
+            }
+        }
+        return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * Math.sqrt(2.0))));
     }
\ No newline at end of file
