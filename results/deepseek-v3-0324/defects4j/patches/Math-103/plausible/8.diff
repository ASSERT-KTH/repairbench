diff --git a/tmp/c73787a6-b622-4b1b-baea-1172b998ce87_buggy.java b/tmp/fbad7374-d35d-4de9-8ed0-b4ea569b64d8_fixed.java
index 6cfa79b..6e9931a 100644
--- a/tmp/c73787a6-b622-4b1b-baea-1172b998ce87_buggy.java
+++ b/tmp/fbad7374-d35d-4de9-8ed0-b4ea569b64d8_fixed.java
@@ -1,12 +1,34 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        if (Double.isInfinite(x)) {
+            if (x > 0) {
+                return 1.0;
+            } else {
+                return 0.0;
+            }
+        }
+        
+        final double dev = (x - mean) / standardDeviation;
+        if (dev < -20) {
+            return 0.0;
+        }
+        if (dev > 20) {
+            return 1.0;
+        }
+        try {
+            return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));
+        } catch (MathException ex) {
+            if (dev < 0) {
+                return 0.0;
+            } else {
+                return 1.0;
+            }
+        }
     }
\ No newline at end of file
