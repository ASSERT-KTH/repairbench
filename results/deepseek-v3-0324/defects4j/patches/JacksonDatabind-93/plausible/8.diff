diff --git a/tmp/c061df33-6cf9-4a5d-9235-1ebb387e9797_buggy.java b/tmp/32cb5983-6a3c-4c5d-af25-4402eebd76e3_fixed.java
index 2d9cf24..2b13c32 100644
--- a/tmp/c061df33-6cf9-4a5d-9235-1ebb387e9797_buggy.java
+++ b/tmp/32cb5983-6a3c-4c5d-af25-4402eebd76e3_fixed.java
@@ -1,33 +1,39 @@
     public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
     {
         // There are certain nasty classes that could cause problems, mostly
         // via default typing -- catch them here.
         final Class<?> raw = type.getRawClass();
+        if (raw == null) {
+            return;
+        }
         String full = raw.getName();
+        if (full == null) {
+            return;
+        }
 
         main_check:
         do {
-            if (_cfgIllegalClassNames.contains(full)) {
+            if (_cfgIllegalClassNames != null && _cfgIllegalClassNames.contains(full)) {
                 break;
             }
 
             // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
             //    for some Spring framework types
             // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
             if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
+                for (Class<?> cls = raw; cls != null && cls != Object.class; cls = cls.getSuperclass()) {
                     String name = cls.getSimpleName();
                     // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                     if ("AbstractPointcutAdvisor".equals(name)
                             // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                             || "AbstractApplicationContext".equals(name)) {
                         break main_check;
                     }
                 }
             }
             return;
         } while (false);
 
         throw JsonMappingException.from(ctxt,
                 String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
     }
\ No newline at end of file
