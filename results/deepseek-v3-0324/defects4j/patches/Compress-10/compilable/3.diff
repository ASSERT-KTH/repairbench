diff --git a/tmp/45cfd9bf-9ec4-4f32-a7df-3b53b1e34fe0_buggy.java b/tmp/0a01ed33-7e86-4246-a790-337147859638_fixed.java
index 85e6a42..2cbb90e 100644
--- a/tmp/45cfd9bf-9ec4-4f32-a7df-3b53b1e34fe0_buggy.java
+++ b/tmp/0a01ed33-7e86-4246-a790-337147859638_fixed.java
@@ -1,50 +1,55 @@
     /**
      * Walks through all recorded entries and adds the data available
      * from the local file header.
      *
      * <p>Also records the offsets for the data to read from the
      * entries.</p>
      */
     private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                                             entriesWithoutUTF8Flag)
         throws IOException {
         // changing the name of a ZipArchiveEntry is going to change
         // the hashcode - see COMPRESS-164
         // Map needs to be reconstructed in order to keep central
         // directory order
         for (ZipArchiveEntry ze : entries.keySet()) {
             OffsetEntry offsetEntry = entries.get(ze);
             long offset = offsetEntry.headerOffset;
             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
             byte[] b = new byte[SHORT];
             archive.readFully(b);
             int fileNameLen = ZipShort.getValue(b);
             archive.readFully(b);
             int extraFieldLen = ZipShort.getValue(b);
             int lenToSkip = fileNameLen;
             while (lenToSkip > 0) {
                 int skipped = archive.skipBytes(lenToSkip);
                 if (skipped <= 0) {
                     throw new RuntimeException("failed to skip file name in"
                                                + " local file header");
                 }
                 lenToSkip -= skipped;
             }
             byte[] localExtraData = new byte[extraFieldLen];
             archive.readFully(localExtraData);
             ze.setExtra(localExtraData);
             offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
                 + SHORT + SHORT + fileNameLen + extraFieldLen;
 
-            if (entriesWithoutUTF8Flag.containsKey(ze)) {
+            // Only update name and comment if we have the UTF8 flag set
+            // or if the entry exists in entriesWithoutUTF8Flag
+            if (ze.getGeneralPurposeBit().usesUTF8ForNames() || 
+                entriesWithoutUTF8Flag.containsKey(ze)) {
                 String orig = ze.getName();
                 NameAndComment nc = entriesWithoutUTF8Flag.get(ze);
+                if (nc != null) {
                     ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,
                                                          nc.comment);
                     if (!orig.equals(ze.getName())) {
                         nameMap.remove(orig);
                         nameMap.put(ze.getName(), ze);
                     }
                 }
             }
         }
+    }
\ No newline at end of file
