diff --git a/tmp/479869a1-1ab1-4614-a7bd-c11035520e5d_buggy.java b/tmp/3a0c8e53-3a5d-42bb-ac48-9ac0e20851d7_fixed.java
index 670114d..5db90bf 100644
--- a/tmp/479869a1-1ab1-4614-a7bd-c11035520e5d_buggy.java
+++ b/tmp/3a0c8e53-3a5d-42bb-ac48-9ac0e20851d7_fixed.java
@@ -1,48 +1,60 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
-
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
-
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
+        if (ns != null) {
+          if (ns.onlyAffectsClassDef) {
             JsName name = getName(ns.name, false);
             if (name != null) {
               refNodes.add(new ClassDefiningFunctionNode(
                   name, n, parent, parent.getParent()));
             }
+          } else if (nameNode.isGetProp() && 
+                    nameNode.getLastChild().getString().equals("inherits")) {
+            // Handle goog.inherits calls
+            Node child = nameNode.getFirstChild();
+            if (child.isName() && child.getString().equals("goog")) {
+              Node subclass = n.getChildAtIndex(1);
+              Node superclass = n.getChildAtIndex(2);
+              if (subclass.isQualifiedName() && superclass.isQualifiedName()) {
+                recordReference(subclass);
+                recordReference(superclass);
+              }
+            }
+          }
         }
       }
     }
\ No newline at end of file
