diff --git a/tmp/26675a44-f51f-489e-af05-112985ec79c2_buggy.java b/tmp/0c24b1a8-f675-47ab-a71d-4dfd42012a8f_fixed.java
index 670114d..0fc4ff8 100644
--- a/tmp/26675a44-f51f-489e-af05-112985ec79c2_buggy.java
+++ b/tmp/0c24b1a8-f675-47ab-a71d-4dfd42012a8f_fixed.java
@@ -1,48 +1,61 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
-
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
-
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
+        if (nameNode != null && "goog.inherits".equals(nameNode.getQualifiedName())) {
+          // Handle goog.inherits calls specially
+          Node childClass = nameNode.getNext();
+          if (childClass != null) {
+            NameInformation ns = createNameInformation(t, childClass, n);
+            if (ns != null) {
+              JsName name = getName(ns.name, true);  // force creation if doesn't exist
+              if (name != null) {
+                refNodes.add(new ClassDefiningFunctionNode(
+                    name, n, parent, parent.getParent()));
+              }
+            }
+          }
+        } else {
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null && ns.onlyAffectsClassDef) {
             JsName name = getName(ns.name, false);
             if (name != null) {
               refNodes.add(new ClassDefiningFunctionNode(
                   name, n, parent, parent.getParent()));
             }
           }
         }
       }
+    }
\ No newline at end of file
