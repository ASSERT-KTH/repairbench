diff --git a/tmp/28b60578-cfda-4ffb-9bfa-63cec0d0bf9a_buggy.java b/tmp/d03ad505-3f65-49c6-acfc-e76907560aef_fixed.java
index 7e43c1c..3f8cdf5 100644
--- a/tmp/28b60578-cfda-4ffb-9bfa-63cec0d0bf9a_buggy.java
+++ b/tmp/d03ad505-3f65-49c6-acfc-e76907560aef_fixed.java
@@ -1,19 +1,25 @@
   /**
    * Visits a NEW node.
    */
   private void visitNew(NodeTraversal t, Node n) {
     Node constructor = n.getFirstChild();
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
-    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
+    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType() ||
+        type.isUnionType()) {  // Added check for union type
       FunctionType fnType = type.toMaybeFunctionType();
+      if (fnType == null && type.isUnionType()) {
+        // For union types, try to get a function type from the alternatives
+        fnType = type.toMaybeUnionType().getRestrictedUnion(
+            (JSType testType) -> testType.isFunctionType());
+      }
       if (fnType != null) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
       } else {
         ensureTyped(t, n);
       }
     } else {
       report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);
     }
   }
\ No newline at end of file
