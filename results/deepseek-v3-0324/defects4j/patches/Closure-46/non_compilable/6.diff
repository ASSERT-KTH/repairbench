diff --git a/tmp/989f57f1-d8f7-4fdb-b2a6-0df4ceee9aed_buggy.java b/tmp/58931a84-ea08-4c19-87a3-d2ec7e344937_fixed.java
index 46817a7..0a4c05c 100644
--- a/tmp/989f57f1-d8f7-4fdb-b2a6-0df4ceee9aed_buggy.java
+++ b/tmp/58931a84-ea08-4c19-87a3-d2ec7e344937_fixed.java
@@ -1,16 +1,30 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    
+    // Check if the other record type has exactly the same properties
+    boolean allPropertiesMatch = true;
+    RecordType thatRecord = that.toMaybeRecordType();
+    if (thatRecord.getProperties().size() != properties.size()) {
+        allPropertiesMatch = false;
+    } else {
         for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+            if (!thatRecord.hasProperty(property) ||
+                !thatRecord.getPropertyType(property).isEquivalentTo(
                     getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+                allPropertiesMatch = false;
+                break;
             }
         }
-    return builder.build();
+    }
+    
+    if (allPropertiesMatch) {
+        // If all properties match exactly, return this type
+        return this;
+    } else {
+        // Otherwise return a union of both record types
+        return registry.createUnionType(this, that);
+    }
 }
\ No newline at end of file
