diff --git a/tmp/430a4a21-8726-43f5-a909-a023a77e2c52_buggy.java b/tmp/723fa727-cce4-48d1-9ba7-06e1f8b6f6b2_fixed.java
index 46817a7..c0ac1d2 100644
--- a/tmp/430a4a21-8726-43f5-a909-a023a77e2c52_buggy.java
+++ b/tmp/723fa727-cce4-48d1-9ba7-06e1f8b6f6b2_fixed.java
@@ -1,16 +1,30 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    
+    // Check if all properties match exactly
+    boolean allPropertiesMatch = true;
+    RecordType thatRecord = that.toMaybeRecordType();
+    if (properties.size() != thatRecord.getProperties().size()) {
+        allPropertiesMatch = false;
+    } else {
         for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+            if (!thatRecord.hasProperty(property) ||
+                !thatRecord.getPropertyType(property).isEquivalentTo(
                     getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+                allPropertiesMatch = false;
+                break;
             }
         }
-    return builder.build();
+    }
+    
+    if (allPropertiesMatch) {
+        // If all properties match exactly, return this type
+        return this;
+    } else {
+        // Otherwise return a union of the two types
+        return registry.createUnionType(this, that);
+    }
 }
\ No newline at end of file
