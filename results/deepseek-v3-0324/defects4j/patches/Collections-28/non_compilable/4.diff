diff --git a/tmp/3c38ceee-deef-4d28-97ed-accca7bddfa2_buggy.java b/tmp/11077e21-51fc-4aaf-8115-d0bc48ca6b8b_fixed.java
index e69de29..a9d6960 100644
--- a/tmp/3c38ceee-deef-4d28-97ed-accca7bddfa2_buggy.java
+++ b/tmp/11077e21-51fc-4aaf-8115-d0bc48ca6b8b_fixed.java
@@ -0,0 +1,56 @@
+public SortedMap<K, V> prefixMap(K prefix) {
+    return new PrefixRangeMap(prefix);
+}
+
+private final class PrefixRangeMap extends RangeMap {
+    private final K prefix;
+    
+    PrefixRangeMap(K prefix) {
+        this.prefix = prefix;
+    }
+    
+    @Override
+    public void clear() {
+        Iterator<Map.Entry<K, V>> it = entrySet().iterator();
+        while (it.hasNext()) {
+            it.next();
+            it.remove();
+        }
+    }
+    
+    @Override
+    protected Set<Map.Entry<K, V>> entrySet() {
+        return new EntrySet();
+    }
+    
+    private final class EntrySet extends AbstractSet<Map.Entry<K, V>> {
+        @Override
+        public Iterator<Map.Entry<K, V>> iterator() {
+            return new EntryIterator(prefix);
+        }
+        
+        @Override
+        public int size() {
+            int size = 0;
+            Iterator<Map.Entry<K, V>> it = iterator();
+            while (it.hasNext()) {
+                it.next();
+                size++;
+            }
+            return size;
+        }
+        
+        @Override
+        public boolean remove(Object o) {
+            if (!(o instanceof Map.Entry)) {
+                return false;
+            }
+            Map.Entry<?, ?> entry = (Map.Entry<?, ?>) o;
+            K key = (K) entry.getKey();
+            if (key != null && getKeyAnalyzer().isPrefix(prefix, key)) {
+                return PatriciaTrie.this.remove(key) != null;
+            }
+            return false;
+        }
+    }
+}
\ No newline at end of file
