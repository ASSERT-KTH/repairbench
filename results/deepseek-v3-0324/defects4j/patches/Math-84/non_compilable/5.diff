diff --git a/tmp/7acc98d3-4a07-4314-b9e8-48a56d689711_buggy.java b/tmp/466eec60-f6a7-4498-a392-106060208a1d_fixed.java
index 5f1dcf2..4f234c9 100644
--- a/tmp/7acc98d3-4a07-4314-b9e8-48a56d689711_buggy.java
+++ b/tmp/466eec60-f6a7-4498-a392-106060208a1d_fixed.java
@@ -1,41 +1,36 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
-
-            incrementIterationsCounter();
-
         // save the original vertex
-            final RealPointValuePair[] original = simplex;
+        final RealPointValuePair[] original = simplex.clone();
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
-                if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
+            if (comparator.compare(expanded, reflected) < 0) {
+                // accept the expanded simplex
                 simplex = reflectedSimplex;
             }
-
             return;
-
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
+            return;
+        }
 
         // check convergence
-                return;
-            }
-
-        }
+        final RealPointValuePair[] converged = new RealPointValuePair[original.length];
+        Arrays.fill(converged, best);
+        evaluateNewSimplex(converged, 1.0, comparator);
 
     }
\ No newline at end of file
