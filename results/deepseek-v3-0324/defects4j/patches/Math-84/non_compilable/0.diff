diff --git a/tmp/1858d072-3606-4511-9a8f-6d318412ff8e_buggy.java b/tmp/f8ab9deb-cef7-4424-a4fe-06cf255630e8_fixed.java
index 5f1dcf2..46ff2ea 100644
--- a/tmp/1858d072-3606-4511-9a8f-6d318412ff8e_buggy.java
+++ b/tmp/f8ab9deb-cef7-4424-a4fe-06cf255630e8_fixed.java
@@ -1,41 +1,38 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
-
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
-                if (comparator.compare(reflected, expanded) <= 0) {
+            if (comparator.compare(expanded, reflected) < 0) {
+                // accept the expanded simplex
+                simplex = simplex; // already set by evaluateNewSimplex
+            } else {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
-                return;
-
-            }
-
+        } else {
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
-
-            // check convergence
-                return;
+                simplex = simplex; // already set by evaluateNewSimplex
+            } else {
+                // contract around the best point
+                contractSimplex(comparator);
             }
-
         }
-
     }
\ No newline at end of file
