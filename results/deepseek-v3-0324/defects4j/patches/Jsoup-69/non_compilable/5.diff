diff --git a/tmp/e24353c2-ddc1-4b65-b20f-4754d4fdaafa_buggy.java b/tmp/4675c6a0-078e-4303-b095-c7a7688c3c93_fixed.java
index e69de29..e59d040 100644
--- a/tmp/e24353c2-ddc1-4b65-b20f-4754d4fdaafa_buggy.java
+++ b/tmp/4675c6a0-078e-4303-b095-c7a7688c3c93_fixed.java
@@ -0,0 +1,29 @@
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    
+    // iterate the form control elements and accumulate their values
+    for (Element el: elements) {
+        if (!el.tag().isFormSubmittable()) continue; // skip non-submittable elements
+        if (el.hasAttr("disabled")) continue; // skip disabled elements
+        if (el.parent() != null && el.parent().tag().equals("form")) { // only include elements still in the form
+            String name = el.attr("name");
+            if (name.length() == 0) continue;
+            String type = el.attr("type");
+            
+            if ("select".equals(el.tagName())) {
+                Elements options = el.select("option[selected]");
+                for (Element option: options) {
+                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+                }
+            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+                // only add checkbox or radio if they have the checked attribute
+                if (el.hasAttr("checked")) {
+                    data.add(HttpConnection.KeyVal.create(name, el.val().length() > 0 ? el.val() : "on"));
+                }
+            } else {
+                data.add(HttpConnection.KeyVal.create(name, el.val()));
+            }
+        }
+    }
+    return data;
+}
\ No newline at end of file
