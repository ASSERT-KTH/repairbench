diff --git a/tmp/26dba09b-9fd9-4107-ab68-074556d20175_buggy.java b/tmp/faa6497d-0107-47ea-94b9-e3be37f0a8d6_fixed.java
index e69de29..1f92c03 100644
--- a/tmp/26dba09b-9fd9-4107-ab68-074556d20175_buggy.java
+++ b/tmp/faa6497d-0107-47ea-94b9-e3be37f0a8d6_fixed.java
@@ -0,0 +1,32 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+    
+    // iterate the form control elements and accumulate their values
+    for (Element el: elements) {
+        if (!el.tag().isFormSubmittable()) continue; // skip non-submittable elements
+        if (el.hasAttr("disabled")) continue; // skip disabled form inputs
+        if (el.tag().getName().equals("input") && el.attr("type").equalsIgnoreCase("button")) continue; // skip buttons
+        
+        String name = el.attr("name");
+        if (name.length() == 0) continue;
+        
+        // Only include elements that are still connected to the document
+        if (el.parent() != null) {
+            String type = el.attr("type");
+            if ("select".equals(el.tagName())) {
+                Elements options = el.select("option[selected]");
+                for (Element option: options) {
+                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+                }
+            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+                // only add checkbox or radio if they have the checked attribute
+                if (el.hasAttr("checked")) {
+                    data.add(HttpConnection.KeyVal.create(name, el.val().length() > 0 ? el.val() : "on"));
+                }
+            } else {
+                data.add(HttpConnection.KeyVal.create(name, el.val()));
+            }
+        }
+    }
+    return data;
+}
\ No newline at end of file
