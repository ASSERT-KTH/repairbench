diff --git a/tmp/2693363d-3177-4f47-af38-9256332ea96c_buggy.java b/tmp/4dc75964-9daf-4190-ace6-da5bbb3bdfb5_fixed.java
index b5d94e0..b6e70ec 100644
--- a/tmp/2693363d-3177-4f47-af38-9256332ea96c_buggy.java
+++ b/tmp/4dc75964-9daf-4190-ace6-da5bbb3bdfb5_fixed.java
@@ -1,26 +1,24 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
     do {
+        // Visit children first
         Node c = node.getFirstChild();
         while (c != null) {
-        traverse(c);
+            // Store next sibling before traversal in case it changes during visit
             Node next = c.getNext();
+            traverse(c);
             c = next;
         }
 
         visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+        Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
