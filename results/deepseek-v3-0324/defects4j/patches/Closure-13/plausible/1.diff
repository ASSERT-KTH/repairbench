diff --git a/tmp/6e52cf80-707f-4b03-a17a-051e8870e447_buggy.java b/tmp/41438a43-f0b7-406b-b0fe-008cff106816_fixed.java
index b5d94e0..410faef 100644
--- a/tmp/6e52cf80-707f-4b03-a17a-051e8870e447_buggy.java
+++ b/tmp/41438a43-f0b7-406b-b0fe-008cff106816_fixed.java
@@ -1,26 +1,26 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
     do {
+        // Visit children first (pre-order traversal)
+        if (node.hasChildren()) {
             Node c = node.getFirstChild();
             while (c != null) {
-        traverse(c);
+                // Store next sibling before traversal in case it changes during visit
                 Node next = c.getNext();
+                traverse(c);
                 c = next;
             }
+        }
 
         visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+        Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
