diff --git a/tmp/578dee96-fafc-4db6-9df9-62b2a34a8736_buggy.java b/tmp/1b433489-77ce-47a4-8c0c-a698bd7b431d_fixed.java
index dc93be3..adf2aaa 100644
--- a/tmp/578dee96-fafc-4db6-9df9-62b2a34a8736_buggy.java
+++ b/tmp/1b433489-77ce-47a4-8c0c-a698bd7b431d_fixed.java
@@ -1,14 +1,21 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            if (Tag.isKnownTag(startTag.name())) {
+                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+                insert(el);
+                tokeniser.emit(new Token.EndTag(el.tagName()));
+                return el;
+            } else {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
             }
+        }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
