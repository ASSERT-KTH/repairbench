diff --git a/tmp/253fc3e7-6f53-4867-91f1-ee1245fbf3f8_buggy.java b/tmp/e5cc51c5-19f3-4d54-933e-29505afbab9c_fixed.java
index 4e8b037..bd609fd 100644
--- a/tmp/253fc3e7-6f53-4867-91f1-ee1245fbf3f8_buggy.java
+++ b/tmp/e5cc51c5-19f3-4d54-933e-29505afbab9c_fixed.java
@@ -1,20 +1,34 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
 
         // augment the list with the default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = (List) this.defaultValues.get(option);
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+
+        // if there are more default values as specified, add them to the list
+        if (valueList != null && !valueList.isEmpty()) {
+            List defaultList = (List) this.defaultValues.get(option);
+            if (defaultList != null && !defaultList.isEmpty()) {
+                // Create a new list to avoid modifying the original
+                List combined = new ArrayList(valueList);
+                // Add only the remaining default values needed
+                int needed = option.getArgument().getMaximum() - combined.size();
+                if (needed > 0) {
+                    combined.addAll(defaultList.subList(
+                        Math.min(combined.size(), defaultList.size()),
+                        Math.min(combined.size() + needed, defaultList.size())));
+                }
+                valueList = combined;
+            }
+        }
         
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
\ No newline at end of file
