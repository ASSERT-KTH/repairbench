diff --git a/tmp/fd07bd33-ba8f-4236-b723-be8bc55caff4_buggy.java b/tmp/6d4d9332-d770-4327-893b-2d7928f1f11c_fixed.java
index 10616db..3720525 100644
--- a/tmp/fd07bd33-ba8f-4236-b723-be8bc55caff4_buggy.java
+++ b/tmp/6d4d9332-d770-4327-893b-2d7928f1f11c_fixed.java
@@ -1,19 +1,33 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
+        
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            
+            // First try adding normally
+            long newInstant = add(instant, valueToAdd);
+            
+            // Check if we need to adjust for month length
+            if (partial.getFieldType(fieldIndex) == DateTimeFieldType.monthOfYear()) {
+                int newMonth = iChronology.monthOfYear().get(newInstant);
+                int newDay = iChronology.dayOfMonth().get(newInstant);
+                int maxDay = iChronology.dayOfMonth().getMaximumValue(newInstant);
+                if (newDay > maxDay) {
+                    newInstant = iChronology.dayOfMonth().set(newInstant, maxDay);
+                }
+            }
+            
+            return iChronology.get(partial, newInstant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
