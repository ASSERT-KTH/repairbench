diff --git a/tmp/f2d6c9ad-b089-4e0d-96d7-7ea5cd9b741a_buggy.java b/tmp/53153e03-51c7-4334-bc05-b9a35ac1cbe2_fixed.java
index 10616db..586d0c8 100644
--- a/tmp/f2d6c9ad-b089-4e0d-96d7-7ea5cd9b741a_buggy.java
+++ b/tmp/53153e03-51c7-4334-bc05-b9a35ac1cbe2_fixed.java
@@ -1,19 +1,41 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
+        
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
+            
+            // Handle month addition specially to preserve day-of-month where possible
+            if (partial.getFieldType(fieldIndex) == DateTimeFieldType.monthOfYear()) {
+                int newMonth = values[fieldIndex] + valueToAdd;
+                // Adjust for year wraparound
+                while (newMonth < 1) {
+                    newMonth += 12;
+                }
+                while (newMonth > 12) {
+                    newMonth -= 12;
+                }
+                
+                // Check if the day exists in the new month
+                int day = values[1];
+                int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+                if (day > maxDay) {
+                    day = maxDay;
+                }
+                
+                values[0] = newMonth;
+                values[1] = day;
+                return values;
+            } else {
                 instant = add(instant, valueToAdd);
                 return iChronology.get(partial, instant);
+            }
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
