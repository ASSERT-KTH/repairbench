diff --git a/tmp/928dbaff-0486-43bf-b775-53245b6d872d_buggy.java b/tmp/72315f67-9283-49ff-8001-8fe0792ed3e3_fixed.java
index 10616db..ac9c108 100644
--- a/tmp/928dbaff-0486-43bf-b775-53245b6d872d_buggy.java
+++ b/tmp/72315f67-9283-49ff-8001-8fe0792ed3e3_fixed.java
@@ -1,19 +1,38 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
+        
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
+            
+            // Special handling for month-day fields to preserve day-of-month when possible
+            if (partial instanceof MonthDay) {
+                int month = values[0];
+                int day = values[1];
+                if (month == 2 && day == 29) {
+                    // When adding months to Feb 29, try to keep the day as 29 if possible
+                    instant = iChronology.dayOfMonth().set(instant, 1); // temporarily set to valid day
+                    instant = add(instant, valueToAdd);
+                    int newMonth = iChronology.monthOfYear().get(instant);
+                    int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+                    day = Math.min(29, maxDay);
+                    instant = iChronology.monthOfYear().set(instant, newMonth);
+                    instant = iChronology.dayOfMonth().set(instant, day);
+                    return iChronology.get(partial, instant);
+                }
+            }
+            
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
