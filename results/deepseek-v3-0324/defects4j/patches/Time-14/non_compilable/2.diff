diff --git a/tmp/2fa46933-5c7d-48d9-a59f-83c52588df21_buggy.java b/tmp/01db4f35-0b00-47f7-a5ac-d60533747af9_fixed.java
index 10616db..90a2be7 100644
--- a/tmp/2fa46933-5c7d-48d9-a59f-83c52588df21_buggy.java
+++ b/tmp/01db4f35-0b00-47f7-a5ac-d60533747af9_fixed.java
@@ -1,19 +1,37 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
+        
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
+            
+            // Special handling for MonthDay
+            if (partial instanceof MonthDay) {
+                int month = values[0];
+                int day = values[1];
+                if (month == 2 && day == 29) {
+                    // For leap day, first try to add normally
+                    try {
+                        instant = add(instant, valueToAdd);
+                        return iChronology.get(partial, instant);
+                    } catch (IllegalFieldValueException e) {
+                        // If fails, adjust to last day of month
+                        instant = add(instant, valueToAdd);
+                        DateTimeField field = iChronology.dayOfMonth();
+                        instant = field.set(instant, field.getMaximumValue(instant));
+                        return iChronology.get(partial, instant);
+                    }
+                }
+            }
+            
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
