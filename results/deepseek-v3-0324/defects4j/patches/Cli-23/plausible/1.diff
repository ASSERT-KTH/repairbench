diff --git a/tmp/ae53b6ba-fa86-47c0-a704-a761bdb26f82_buggy.java b/tmp/41ed7bf0-98b0-4dff-9654-d7c70591b175_fixed.java
index 227a4ef..b8113ec 100644
--- a/tmp/ae53b6ba-fa86-47c0-a704-a761bdb26f82_buggy.java
+++ b/tmp/41ed7bf0-98b0-4dff-9654-d7c70591b175_fixed.java
@@ -1,48 +1,48 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            int lastPos = pos;
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
+        }
+        else if (pos >= text.length())
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            // Handle case where text is shorter than width after padding
+            sb.append(text);
+            return sb;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        
+        // If we didn't make progress, force a break at the width
+        if (pos <= padding.length())
+        {
+            sb.append(rtrim(text.substring(0, width))).append(defaultNewLine);
+            text = padding + text.substring(width).trim();
+            if (text.length() <= padding.length())
+            {
+                return sb;
+            }
+            pos = 0;
+        }
     }
 }
\ No newline at end of file
