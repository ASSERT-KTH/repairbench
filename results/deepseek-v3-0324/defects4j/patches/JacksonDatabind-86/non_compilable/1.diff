diff --git a/tmp/78b2b993-2e4b-41ff-bb0a-38b2a2771017_buggy.java b/tmp/98494d35-98fb-431c-8041-02d8fe920a12_fixed.java
index e69de29..0d2981c 100644
--- a/tmp/78b2b993-2e4b-41ff-bb0a-38b2a2771017_buggy.java
+++ b/tmp/98494d35-98fb-431c-8041-02d8fe920a12_fixed.java
@@ -0,0 +1,28 @@
+public JavaType constructType(Type type) {
+    if (type == null) {
+        return null;
+    }
+    if (type instanceof Class<?>) {
+        return _fromClass((Class<?>) type, TypeBindings.emptyBindings());
+    }
+    if (type instanceof ParameterizedType) {
+        return _fromParamType((ParameterizedType) type, TypeBindings.emptyBindings());
+    }
+    if (type instanceof JavaType) { // added this check to handle already resolved types
+        return (JavaType) type;
+    }
+    if (type instanceof GenericArrayType) {
+        return _fromArrayType((GenericArrayType) type);
+    }
+    if (type instanceof TypeVariable<?>) {
+        return _fromVariable((TypeVariable<?>) type, TypeBindings.emptyBindings());
+    }
+    if (type instanceof WildcardType) {
+        return _fromWildcard((WildcardType) type, TypeBindings.emptyBindings());
+    }
+    // [databind#1647] Handle recursive type references
+    if (type instanceof ResolvedRecursiveType) {
+        return ((ResolvedRecursiveType) type).getSelfReferencedType();
+    }
+    throw new IllegalArgumentException("Unrecognized Type: "+type.toString());
+}
\ No newline at end of file
