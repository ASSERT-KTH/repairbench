diff --git a/tmp/429459f5-ebd3-4833-8259-206a44e7609a_buggy.java b/tmp/94061bb5-8139-49a5-b50b-88e9b9fc7159_fixed.java
index e69de29..3d510e1 100644
--- a/tmp/429459f5-ebd3-4833-8259-206a44e7609a_buggy.java
+++ b/tmp/94061bb5-8139-49a5-b50b-88e9b9fc7159_fixed.java
@@ -0,0 +1,22 @@
+public JavaType constructType(Type type) {
+    if (type == null) {
+        return null;
+    }
+    // First: maybe it's just a Class?
+    if (type instanceof Class<?>) {
+        return _fromClass((Class<?>) type, TypeBindings.emptyBindings());
+    }
+    // If not, need to start resolving.
+    JavaType result = _fromAny(null, type, TypeBindings.emptyBindings());
+    // But one more thing: for recursive types, we may need to ensure super-class is properly resolved
+    if (result instanceof ClassType) {
+        ClassType classType = (ClassType) result;
+        Class<?> raw = classType.getRawClass();
+        if (raw.getSuperclass() != null) {
+            // Ensure super class is properly resolved to maintain property inheritance
+            JavaType superType = _fromAny(null, raw.getSuperclass(), TypeBindings.emptyBindings());
+            classType.setSuperClass(superType);
+        }
+    }
+    return result;
+}
\ No newline at end of file
