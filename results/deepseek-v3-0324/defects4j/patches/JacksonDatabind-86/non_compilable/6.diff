diff --git a/tmp/0d8192f3-b5ed-4e88-b6b8-523bd6c10670_buggy.java b/tmp/52a6c13a-2629-4f88-9a65-735c8668e5a9_fixed.java
index e69de29..1b25ef2 100644
--- a/tmp/0d8192f3-b5ed-4e88-b6b8-523bd6c10670_buggy.java
+++ b/tmp/52a6c13a-2629-4f88-9a65-735c8668e5a9_fixed.java
@@ -0,0 +1,36 @@
+public JavaType constructType(Type type) {
+    if (type == null) {
+        return null;
+    }
+    
+    // First check if we have a cached version
+    JavaType result = _typeCache.get(type);
+    if (result != null) {
+        return result;
+    }
+    
+    // Handle recursive types
+    if (type instanceof Class<?>) {
+        Class<?> cls = (Class<?>) type;
+        // Check superclass first to ensure proper inheritance chain
+        if (cls.getSuperclass() != null) {
+            JavaType superType = constructType(cls.getSuperclass());
+            if (superType != null) {
+                // Ensure supertype is properly resolved before proceeding
+                if (superType instanceof ResolvedRecursiveType) {
+                    ((ResolvedRecursiveType) superType).setReference(superType);
+                }
+            }
+        }
+    }
+    
+    // Proceed with normal type construction
+    result = _fromAny(null, type, TypeBindings.emptyBindings());
+    
+    // Cache the result
+    if (type != Object.class) {
+        _typeCache.put(type, result);
+    }
+    
+    return result;
+}
\ No newline at end of file
