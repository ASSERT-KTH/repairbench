diff --git a/tmp/9e1f460e-22fe-48aa-b29b-9e6bd065b602_buggy.java b/tmp/2ed756c8-aa5c-4237-92be-0b5ab94de2af_fixed.java
index 6d50be3..15e7bc3 100644
--- a/tmp/9e1f460e-22fe-48aa-b29b-9e6bd065b602_buggy.java
+++ b/tmp/2ed756c8-aa5c-4237-92be-0b5ab94de2af_fixed.java
@@ -1,194 +1,303 @@
 private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
     List<Position> positions = new LinkedList<>();
 
-        buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);
+    int commaIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',');
+    if (commaIndex == -1) {
+        return null;
+    }
+    buf.readerIndex(commaIndex + 1);
+
+    if (buf.readableBytes() < 15) {
+        return null;
+    }
     String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);
-        buf.skipBytes(1 + 3 + 1);
+
+    if (buf.readableBytes() < 5) {
+        return null;
+    }
+    buf.skipBytes(5);
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
     if (deviceSession == null) {
         return null;
     }
 
+    if (buf.readableBytes() < 4) {
+        return positions;
+    }
     buf.readUnsignedIntLE(); // remaining cache
+
+    if (buf.readableBytes() < 2) {
+        return positions;
+    }
     int count = buf.readUnsignedShortLE();
 
     for (int i = 0; i < count; i++) {
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
+        try {
+            if (buf.readableBytes() < 4) {
+                break;
+            }
             buf.readUnsignedShortLE(); // length
             buf.readUnsignedShortLE(); // index
 
             int paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
+                if (buf.readableBytes() < 1) {
+                    break;
+                }
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 switch (id) {
                     case 0x01:
                         position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                         break;
                     case 0x05:
                         position.setValid(buf.readUnsignedByte() > 0);
                         break;
                     case 0x06:
                         position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                         break;
                     case 0x07:
                         position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                         break;
                     case 0x14:
                         position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
                         break;
                     case 0x15:
                         position.set(Position.KEY_INPUT, buf.readUnsignedByte());
                         break;
                     case 0x47:
                         int lockState = buf.readUnsignedByte();
                         if (lockState > 0) {
                             position.set(Position.KEY_LOCK, lockState == 2);
                         }
                         break;
                     case 0x97:
                         position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                         break;
                     case 0x9D:
                         position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                         break;
                     case 0xFE69:
                         position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());
                         break;
                     default:
-                        buf.readUnsignedByte();
+                        if (extension) {
+                            buf.skipBytes(2);
+                        } else {
+                            buf.skipBytes(1);
+                        }
                         break;
                 }
             }
 
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
+                if (buf.readableBytes() < 1) {
+                    break;
+                }
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 switch (id) {
                     case 0x08:
+                        if (buf.readableBytes() >= 2) {
                             position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
+                        }
                         break;
                     case 0x09:
+                        if (buf.readableBytes() >= 2) {
                             position.setCourse(buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0x0A:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0x0B:
+                        if (buf.readableBytes() >= 2) {
                             position.setAltitude(buf.readShortLE());
+                        }
                         break;
                     case 0x16:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE() * 0.01);
+                        }
                         break;
                     case 0x19:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
+                        }
                         break;
                     case 0x1A:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
+                        }
                         break;
                     case 0x40:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0x91:
                     case 0x92:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0x98:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_FUEL_USED, buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0x99:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_RPM, buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0x9C:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0x9F:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShortLE());
+                        }
                         break;
                     case 0xC9:
+                        if (buf.readableBytes() >= 2) {
                             position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShortLE());
+                        }
                         break;
                     default:
-                        buf.readUnsignedShortLE();
+                        if (extension) {
+                            buf.skipBytes(2);
+                        } else {
+                            buf.skipBytes(1);
+                        }
                         break;
                 }
             }
 
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
+                if (buf.readableBytes() < 1) {
+                    break;
+                }
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 switch (id) {
                     case 0x02:
+                        if (buf.readableBytes() >= 4) {
                             position.setLatitude(buf.readIntLE() * 0.000001);
+                        }
                         break;
                     case 0x03:
+                        if (buf.readableBytes() >= 4) {
                             position.setLongitude(buf.readIntLE() * 0.000001);
+                        }
                         break;
                     case 0x04:
-                        position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000)); // 2000-01-01
+                        if (buf.readableBytes() >= 4) {
+                            position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000));
+                        }
                         break;
                     case 0x0C:
                     case 0x9B:
+                        if (buf.readableBytes() >= 4) {
                             position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
+                        }
                         break;
                     case 0x0D:
+                        if (buf.readableBytes() >= 4) {
                             position.set("runtime", buf.readUnsignedIntLE());
+                        }
                         break;
                     case 0x25:
+                        if (buf.readableBytes() >= 4) {
                             position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readUnsignedIntLE()));
+                        }
                         break;
                     case 0xA0:
+                        if (buf.readableBytes() >= 4) {
                             position.set(Position.KEY_FUEL_USED, buf.readUnsignedIntLE() * 0.001);
+                        }
                         break;
                     case 0xA2:
+                        if (buf.readableBytes() >= 4) {
                             position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedIntLE() * 0.01);
+                        }
                         break;
                     default:
-                        buf.readUnsignedIntLE();
+                        if (extension) {
+                            buf.skipBytes(2);
+                        } else {
+                            buf.skipBytes(1);
+                        }
                         break;
                 }
             }
 
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
+                if (buf.readableBytes() < 1) {
+                    break;
+                }
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
-                int length = buf.readUnsignedByte();
+                int length = 0;
+                if (buf.readableBytes() >= 1) {
+                    length = buf.readUnsignedByte();
+                } else {
+                    break;
+                }
                 switch (id) {
                     case 0x2A:
                     case 0x2B:
                     case 0x2C:
                     case 0x2D:
                     case 0x2E:
                     case 0x2F:
                     case 0x30:
                     case 0x31:
+                        if (buf.readableBytes() >= 3 && length >= 1) {
                             buf.readUnsignedByte(); // label
                             position.set(Position.PREFIX_TEMP + (id - 0x2A), buf.readShortLE() * 0.01);
+                        }
                         break;
                     case 0xFE31:
+                        if (buf.readableBytes() >= (length - 2 + 2)) {
                             buf.readUnsignedByte(); // alarm protocol
                             buf.readUnsignedByte(); // alarm type
                             buf.skipBytes(length - 2);
+                        }
                         break;
                     case 0xFEA8:
+                        if (buf.readableBytes() >= (length)) {
                             buf.readUnsignedByte(); // battery status
                             position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());
                             buf.readUnsignedByte(); // battery alert
+                        }
                         break;
                     default:
+                        if (buf.readableBytes() >= length) {
                             buf.skipBytes(length);
+                        } else {
+                            break;
+                        }
                         break;
                 }
             }
 
             positions.add(position);
+        } catch (IndexOutOfBoundsException e) {
+            break;
+        }
     }
 
     return positions;
 }
\ No newline at end of file
