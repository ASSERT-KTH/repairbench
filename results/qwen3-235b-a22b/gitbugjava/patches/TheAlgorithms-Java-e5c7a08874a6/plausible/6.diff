diff --git a/tmp/21fe7535-abfd-4d24-9660-251b4146fd8d_buggy.java b/tmp/41ab4c13-82aa-41d1-8de1-c3d3ad2e195c_fixed.java
index 2444d12..db1f10f 100644
--- a/tmp/21fe7535-abfd-4d24-9660-251b4146fd8d_buggy.java
+++ b/tmp/41ab4c13-82aa-41d1-8de1-c3d3ad2e195c_fixed.java
@@ -1,29 +1,36 @@
 // Evaluates the given postfix expression string and returns the result.
 public static int postfixEvaluate(final String exp) {
-        Stack<Integer> s = new Stack<Integer>();
+    Stack<Integer> stack = new Stack<>();
     Scanner tokens = new Scanner(exp);
 
     while (tokens.hasNext()) {
         if (tokens.hasNextInt()) {
-                s.push(tokens.nextInt()); // If int then push to stack
-            } else { // else pop top two values and perform the operation
-                int num2 = s.pop();
-                int num1 = s.pop();
+            stack.push(tokens.nextInt());
+        } else {
             String op = tokens.next();
 
+            if (stack.size() < 2) {
+                throw new IllegalArgumentException("exp is not a proper postfix expression.");
+            }
+
+            int num2 = stack.pop();
+            int num1 = stack.pop();
+
             switch (op) {
-                    case "+" -> s.push(num1 + num2);
-                    case "-" -> s.push(num1 - num2);
-                    case "*" -> s.push(num1 * num2);
-                    case "/" -> s.push(num1 / num2);
+                case "+" -> stack.push(num1 + num2);
+                case "-" -> stack.push(num1 - num2);
+                case "*" -> stack.push(num1 * num2);
+                case "/" -> stack.push(num1 / num2);
                 default -> throw new IllegalArgumentException("exp contains an unknown operation.");
             }
-                //  "+", "-", "*", "/"
         }
     }
+
     tokens.close();
-        if (s.size() != 1) {
+
+    if (stack.size() != 1) {
         throw new IllegalArgumentException("exp is not a proper postfix expression.");
     }
-        return s.pop();
+
+    return stack.pop();
 }
\ No newline at end of file
