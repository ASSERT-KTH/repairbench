diff --git a/tmp/08607146-7d5b-43cc-8ad4-3b0f43c58f32_buggy.java b/tmp/fa127a23-deb7-4640-97fd-42ba6031a9ca_fixed.java
index 862c60c..ebc7adf 100644
--- a/tmp/08607146-7d5b-43cc-8ad4-3b0f43c58f32_buggy.java
+++ b/tmp/fa127a23-deb7-4640-97fd-42ba6031a9ca_fixed.java
@@ -1,25 +1,35 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) ||
+            (next instanceof TextNode && (((TextNode) next).isBlank()));
         if (couldSkip && isBlank()) return;
 
+        boolean prevBr = false;
+        Node prev = previousSibling();
+        if (prev instanceof Element) {
+            Element prevEl = (Element) prev;
+            if (prevEl.tag().getName().equals("br")) {
+                prevBr = true;
+            }
+        }
+
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+            (out.outline() && siblingNodes().size() > 0 && !isBlank()) ||
+            (prevBr && parent != null && parent.tag().isBlock())) {
             indent(accum, depth, out);
         }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
