diff --git a/tmp/0b529d1a-2e41-4b0a-b0e6-5b5e4695b6be_buggy.java b/tmp/c1f566a8-c8f0-4b43-8686-b22ac4378cc9_fixed.java
index 9739964..44580eb 100644
--- a/tmp/0b529d1a-2e41-4b0a-b0e6-5b5e4695b6be_buggy.java
+++ b/tmp/c1f566a8-c8f0-4b43-8686-b22ac4378cc9_fixed.java
@@ -1,27 +1,25 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
-
-    // Push the index of first element
-    indexStack.push(0);
+    indexStack.push(0); // Push the index of first element
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+        // Pop elements from the stack while the current price is greater than the stack's top price
+        while (!indexStack.isEmpty() && prices[indexStack.peek()] < prices[i]) {
             indexStack.pop();
+        }
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
+        // If stack is empty, current price is greater than all previous values
+        if (indexStack.isEmpty()) {
             spans[i] = i + 1;
-      else
+        } else {
             spans[i] = i - indexStack.peek();
+        }
 
         indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
