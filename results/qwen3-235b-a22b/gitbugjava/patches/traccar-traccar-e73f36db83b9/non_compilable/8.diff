diff --git a/tmp/fa670388-f4ce-4b36-8770-2fb2b0899561_buggy.java b/tmp/827f2546-9974-461d-a851-d268b794f58a_fixed.java
index cd6f89c..2611b6c 100644
--- a/tmp/fa670388-f4ce-4b36-8770-2fb2b0899561_buggy.java
+++ b/tmp/827f2546-9974-461d-a851-d268b794f58a_fixed.java
@@ -1,102 +1 @@
-    private Object decodeEri(Channel channel, SocketAddress remoteAddress, String sentence) {
-        Parser parser = new Parser(PATTERN_ERI, sentence);
-        if (!parser.matches()) {
-            return null;
-        }
-
-        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, parser.next());
-        if (deviceSession == null) {
-            return null;
-        }
-
-        long mask = parser.nextHexLong();
-
-        LinkedList<Position> positions = new LinkedList<>();
-
-        Integer power = parser.nextInt();
-
-        Parser itemParser = new Parser(PATTERN_LOCATION, parser.next());
-        while (itemParser.find()) {
-            Position position = new Position(getProtocolName());
-            position.setDeviceId(deviceSession.getDeviceId());
-
-            decodeLocation(position, itemParser);
-
-            positions.add(position);
-        }
-
-        Position position = positions.getLast();
-
-        skipLocation(parser);
-
-        if (power != null) {
-            position.set(Position.KEY_POWER, power * 0.001);
-        }
-
-        if (parser.hasNextAny(12)) {
-
-            position.set(Position.KEY_ODOMETER, parser.nextDouble() * 1000);
-            position.set(Position.KEY_HOURS, parseHours(parser.next()));
-            position.set(Position.PREFIX_ADC + 1, parser.next());
-            position.set(Position.PREFIX_ADC + 2, parser.next());
-            position.set(Position.PREFIX_ADC + 3, parser.next());
-            if (parser.hasNext(2)) {
-                position.set(Position.KEY_INPUT, parser.nextHexInt());
-                position.set(Position.KEY_OUTPUT, parser.nextHexInt());
-            }
-            if (parser.hasNext(4)) {
-                position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt());
-                decodeStatus(position, parser);
-            }
-
-            int index = 0;
-            String[] data = parser.next().split(",");
-
-            index += 1; // device type
-
-            if (BitUtil.check(mask, 0)) {
-                index += 1; // digital fuel sensor data
-            }
-
-            if (BitUtil.check(mask, 1)) {
-                int deviceCount = Integer.parseInt(data[index++]);
-                for (int i = 1; i <= deviceCount; i++) {
-                    index += 1; // id
-                    index += 1; // type
-                    if (!data[index++].isEmpty()) {
-                        position.set(Position.PREFIX_TEMP + i, (short) Integer.parseInt(data[index - 1], 16) * 0.0625);
-                    }
-                }
-            }
-
-            if (BitUtil.check(mask, 2)) {
-                index += 1; // can data
-            }
-
-            if (BitUtil.check(mask, 3) || BitUtil.check(mask, 4)) {
-                int deviceCount = Integer.parseInt(data[index++]);
-                for (int i = 1; i <= deviceCount; i++) {
-                    index += 1; // type
-                    if (BitUtil.check(mask, 3)) {
-                        position.set(Position.KEY_FUEL_LEVEL, Double.parseDouble(data[index++]));
-                    }
-                    if (BitUtil.check(mask, 4)) {
-                        index += 1; // volume
-                    }
-                }
-            }
-
-        }
-
-        if (parser.hasNext()) {
-            position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt());
-        }
-
-        decodeDeviceTime(position, parser);
-        if (ignoreFixTime) {
-            positions.clear();
-            positions.add(position);
-        }
-
-        return positions;
-    }
++BUFF:GTERI,410502,864802030794634,,00000001,,10,1,1,0.0,0,3027.8,-78.706612,-0.955699,20230418170736,0740,0002,A08C,2AB72D,00,0.0,,,,100,110000,1,0099,20230418171004,8B98$
\ No newline at end of file
