diff --git a/tmp/153bf47f-f4c3-4fdd-b15c-c2a0d8bb7050_buggy.java b/tmp/aa36c7b7-7b2b-46c5-b757-66183708ff12_fixed.java
index 33e2e76..1eafb48 100644
--- a/tmp/153bf47f-f4c3-4fdd-b15c-c2a0d8bb7050_buggy.java
+++ b/tmp/aa36c7b7-7b2b-46c5-b757-66183708ff12_fixed.java
@@ -1,126 +1,176 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
     CellTower cellTower = new CellTower();
     String[] keys = form.substring(1).split("%");
     for (String key : keys) {
         switch (key) {
             case "SA":
-                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
+                int satellites = buf.readUnsignedByte();
+                if (position != null) {
+                    position.set(Position.KEY_SATELLITES, satellites);
+                }
                 break;
             case "MV":
-                    position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
+                int mvValue = buf.readUnsignedShort();
+                if (position != null) {
+                    position.set(Position.KEY_POWER, mvValue * 0.1);
+                }
                 break;
             case "BV":
-                    position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
+                int bvValue = buf.readUnsignedShort();
+                if (position != null) {
+                    position.set(Position.KEY_BATTERY, bvValue * 0.1);
+                }
                 break;
             case "GQ":
-                    cellTower.setSignalStrength((int) buf.readUnsignedByte());
+                int signalStrength = buf.readUnsignedByte();
+                cellTower.setSignalStrength(signalStrength);
                 break;
             case "CE":
-                    cellTower.setCellId(buf.readUnsignedInt());
+                long cellId = buf.readUnsignedInt();
+                cellTower.setCellId(cellId);
                 break;
             case "LC":
-                    cellTower.setLocationAreaCode(buf.readUnsignedShort());
+                int lac = buf.readUnsignedShort();
+                cellTower.setLocationAreaCode(lac);
                 break;
             case "CN":
-                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
-                    cellTower.setMobileCountryCode(combinedMobileCodes / 100);
-                    cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
+                long combined = (buf.readUnsignedInt() % 100000);
+                int mcc = (int) (combined / 100);
+                int mnc = (int) (combined % 100);
+                cellTower.setMobileCountryCode(mcc);
+                cellTower.setMobileNetworkCode(mnc);
                 break;
             case "RL":
                 buf.readUnsignedByte(); // rxlev
                 break;
             case "PC":
-                    position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
+                long pcValue = buf.readUnsignedInt();
+                if (position != null) {
+                    position.set(Position.PREFIX_COUNT + 1, pcValue);
+                }
                 break;
             case "AT":
-                    position.setAltitude(buf.readUnsignedInt());
+                long alt = buf.readUnsignedInt();
+                if (position != null) {
+                    position.setAltitude(alt);
+                }
                 break;
             case "RP":
-                    position.set(Position.KEY_RPM, buf.readUnsignedShort());
+                int rpm = buf.readUnsignedShort();
+                if (position != null) {
+                    position.set(Position.KEY_RPM, rpm);
+                }
                 break;
             case "GS":
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+                int rssi = buf.readUnsignedByte();
+                if (position != null) {
+                    position.set(Position.KEY_RSSI, rssi);
+                }
                 break;
             case "DT":
-                    position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
+                int archived = buf.readUnsignedByte();
+                if (position != null) {
+                    position.set(Position.KEY_ARCHIVE, archived == 1);
+                }
                 break;
             case "VN":
-                    position.set(Position.KEY_VIN, readString(buf));
+                String vin = readString(buf);
+                if (position != null) {
+                    position.set(Position.KEY_VIN, vin);
+                }
                 break;
             case "MF":
                 buf.readUnsignedShort(); // mass air flow rate
                 break;
             case "EL":
                 buf.readUnsignedByte(); // engine load
                 break;
             case "TR":
-                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
+                int throttle = buf.readUnsignedByte();
+                if (position != null) {
+                    position.set(Position.KEY_THROTTLE, throttle);
+                }
                 break;
             case "ET":
-                    position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
+                int temp = buf.readUnsignedShort();
+                if (position != null) {
+                    position.set(Position.PREFIX_TEMP + 1, temp);
+                }
                 break;
             case "FL":
-                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
+                int fuel = buf.readUnsignedByte();
+                if (position != null) {
+                    position.set(Position.KEY_FUEL_LEVEL, fuel);
+                }
                 break;
             case "ML":
                 buf.readUnsignedByte(); // mil status
                 break;
             case "FC":
-                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
+                long fuelCons = buf.readUnsignedInt();
+                if (position != null) {
+                    position.set(Position.KEY_FUEL_CONSUMPTION, fuelCons);
+                }
                 break;
             case "CI":
                 readString(buf); // format string
                 break;
             case "AV1":
-                    position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
+                int adcVal = buf.readUnsignedShort();
+                if (position != null) {
+                    position.set(Position.PREFIX_ADC + 1, adcVal);
+                }
                 break;
             case "NC":
                 readString(buf); // gsm neighbor cell info
                 break;
             case "SM":
-                    buf.readUnsignedShort(); // max speed between reports
+                buf.readUnsignedShort(); // max speed
                 break;
             case "GL":
                 readString(buf); // google link
                 break;
             case "MA":
                 readString(buf); // mac address
                 break;
             case "PD":
                 buf.readUnsignedByte(); // pending code status
                 break;
             case "CD":
-                    position.set(Position.KEY_ICCID, readString(buf));
+                String iccid = readString(buf);
+                if (position != null) {
+                    position.set(Position.KEY_ICCID, iccid);
+                }
                 break;
             case "CM":
                 buf.readLong(); // imsi
                 break;
             case "GN":
                 buf.skipBytes(60); // g sensor data
                 break;
             case "GV":
-                    buf.skipBytes(6); // maximum g force
+                buf.skipBytes(6); // max g force
                 break;
             case "ME":
                 buf.readLong(); // imei
                 break;
             case "IA":
-                    buf.readUnsignedByte(); // intake air temperature
+                buf.readUnsignedByte(); // intake air temp
                 break;
             case "MP":
-                    buf.readUnsignedByte(); // manifold absolute pressure
+                buf.readUnsignedByte(); // manifold absolute press
                 break;
             default:
                 break;
         }
     }
 
     if (cellTower.getMobileCountryCode() != null
         && cellTower.getMobileNetworkCode() != null
         && cellTower.getCellId() != null && cellTower.getCellId() != 0
         && cellTower.getLocationAreaCode() != null) {
         position.setNetwork(new Network(cellTower));
     } else if (cellTower.getSignalStrength() != null) {
         position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
     }
 }
\ No newline at end of file
