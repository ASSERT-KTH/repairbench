diff --git a/tmp/fd15de62-90d4-49ed-a490-c0e18ca42192_buggy.java b/tmp/dc82c96b-dbe1-447b-9574-4da234c45d91_fixed.java
index 855afa5..42834a7 100644
--- a/tmp/fd15de62-90d4-49ed-a490-c0e18ca42192_buggy.java
+++ b/tmp/dc82c96b-dbe1-447b-9574-4da234c45d91_fixed.java
@@ -1,13 +1,23 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        // First replace any existing spaces with %20
+        String urlS = u.toExternalForm().replace(" ", "%20");
+        URI uri = new URI(urlS);
+
+        // Reconstruct the URI with decoded components to force proper encoding
+        URI reencoded = new URI(
+                uri.getScheme(),
+                uri.getAuthority(),
+                uri.getPath(),
+                uri.getQuery(),
+                uri.getFragment()
+        );
+
+        // Convert back to URL using the toASCIIString() which contains all encoded parts
+        return new URL(reencoded.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        // If encoding fails for any reason, return the original URL
         return u;
     }
 }
\ No newline at end of file
