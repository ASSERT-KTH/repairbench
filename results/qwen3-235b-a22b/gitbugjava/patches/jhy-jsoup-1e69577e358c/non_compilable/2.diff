diff --git a/tmp/ef82b821-37d2-4134-8489-19920047c971_buggy.java b/tmp/6dcbe2eb-6493-4b92-a7f6-2787e0db6ee2_fixed.java
index c9c77a4..3a63edd 100644
--- a/tmp/ef82b821-37d2-4134-8489-19920047c971_buggy.java
+++ b/tmp/6dcbe2eb-6493-4b92-a7f6-2787e0db6ee2_fixed.java
@@ -1,35 +1,32 @@
 URL build() {
     try {
-            // use the URI class to encode non-ascii in path
+        // Do NOT decode the path again
         URI uri = new URI(
             u.getProtocol(),
             u.getUserInfo(),
-                IDN.toASCII(decodePart(u.getHost())), // puny-code
+            IDN.toASCII(decodePart(u.getHost())),
             u.getPort(),
-                decodePart(u.getPath()),
-                null, null // query and fragment appended later so as not to encode
+            u.getPath(),  // ðŸ‘ˆ Keep path as already decoded by URL
+            null, null
         );
 
         String normUrl = uri.toASCIIString();
         if (q != null || u.getRef() != null) {
             StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
             if (q != null) {
                 sb.append('?');
                 appendToAscii(StringUtil.releaseBuilder(q), true, sb);
             }
             if (u.getRef() != null) {
                 sb.append('#');
                 appendToAscii(u.getRef(), false, sb);
             }
             normUrl = StringUtil.releaseBuilder(sb);
         }
-            u =  new URL(normUrl);
-            return u;
+
+        return new URL(normUrl);
     } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
-            // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
         assert Validate.assertFail(e.toString());
         return u;
     }
 }
\ No newline at end of file
