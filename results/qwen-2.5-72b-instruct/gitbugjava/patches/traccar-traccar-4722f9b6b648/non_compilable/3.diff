diff --git a/tmp/68da615e-a8eb-4cbd-a0b2-e86c214fa3de_buggy.java b/tmp/d3ab73f1-eacd-486a-8b0f-3d7e79b06c98_fixed.java
index c84c989..7afccfc 100644
--- a/tmp/68da615e-a8eb-4cbd-a0b2-e86c214fa3de_buggy.java
+++ b/tmp/d3ab73f1-eacd-486a-8b0f-3d7e79b06c98_fixed.java
@@ -1,27 +1,39 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Read and parse date and time
+    int dateTime = buf.readUnsignedIntLE();
+    int year = (dateTime >> 26) & 0x3F;
+    int month = (dateTime >> 22) & 0xF;
+    int day = (dateTime >> 17) & 0x1F;
+    int hour = (dateTime >> 12) & 0x1F;
+    int minute = (dateTime >> 6) & 0x3F;
+    int second = dateTime & 0x3F;
+
+    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+    calendar.set(2000 + year, month - 1, day, hour, minute, second);
+    position.setTime(calendar.getTime());
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
