diff --git a/tmp/1c280fd3-b5b1-4974-820e-f56bdb5f6021_buggy.java b/tmp/77ddd82f-3eb3-4e03-af8f-f9908fdc8b7c_fixed.java
index eb0a5c8..8dbe4fb 100644
--- a/tmp/1c280fd3-b5b1-4974-820e-f56bdb5f6021_buggy.java
+++ b/tmp/77ddd82f-3eb3-4e03-af8f-f9908fdc8b7c_fixed.java
@@ -1,27 +1,30 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
   if (!ariCommand.extractCommandType().isCreationCommand()) {
     return Try.success(Done.done());
   }
 
   final Option<AriResource> maybeResource =
       ariCommand
           .extractResourceRelations()
           .find(AriResourceRelation::isCreated)
           .map(AriResourceRelation::getResource);
 
   if (maybeResource.isEmpty()) {
     return Try.failure(
         new RuntimeException(
             String.format(
                 "Failed to extract resourceId from command '%s'", ariCommand.toString())));
   }
 
   final AriResource resource = maybeResource.get();
 
+  // Ensure we only register the call context for creation commands
+  if (ariCommand.extractCommandType().isCreationCommand()) {
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
+  }
   return Try.success(Done.done());
 }
\ No newline at end of file
