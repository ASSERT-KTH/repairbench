diff --git a/tmp/f2f8ec6f-8d53-4f4b-b1e9-9ccac851ec67_buggy.java b/tmp/4adda7b2-14d2-45ab-9279-82477ef67cf7_fixed.java
index bc80637..4c08cae 100644
--- a/tmp/f2f8ec6f-8d53-4f4b-b1e9-9ccac851ec67_buggy.java
+++ b/tmp/4adda7b2-14d2-45ab-9279-82477ef67cf7_fixed.java
@@ -1,33 +1,36 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
     // and then post-processing
-        if (deser != null) {
     if (_factoryConfig.hasDeserializerModifiers()) {
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            if (deser == null) {
+                // This ensures that the modifier has a chance to create a KeyDeserializer even if it was initially null
+                deser = mod.modifyKeyDeserializer(config, type, null);
+            } else {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
     return deser;
 }
\ No newline at end of file
