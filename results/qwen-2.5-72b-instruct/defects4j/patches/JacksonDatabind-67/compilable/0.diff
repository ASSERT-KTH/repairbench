diff --git a/tmp/072143e1-05d4-4c6a-8b80-966e28a480d5_buggy.java b/tmp/e7b86661-3013-4a30-a021-3111b4cf897a_fixed.java
index bc80637..3a45dc3 100644
--- a/tmp/072143e1-05d4-4c6a-8b80-966e28a480d5_buggy.java
+++ b/tmp/e7b86661-3013-4a30-a021-3111b4cf897a_fixed.java
@@ -1,33 +1,39 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
     // and then post-processing
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
+    // Ensure that the custom key deserializer is used for enum types
+    if (deser != null && type.isEnumType()) {
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+        }
+    }
     return deser;
 }
\ No newline at end of file
