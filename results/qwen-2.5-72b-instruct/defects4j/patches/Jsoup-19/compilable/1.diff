diff --git a/tmp/7e7a33ba-9ec8-47ce-9e93-00e13da6fa85_buggy.java b/tmp/6ea25127-32e5-45d3-a561-c9d39f5c5ace_fixed.java
index 4aff4e4..411066b 100644
--- a/tmp/7e7a33ba-9ec8-47ce-9e93-00e13da6fa85_buggy.java
+++ b/tmp/6ea25127-32e5-45d3-a561-c9d39f5c5ace_fixed.java
@@ -1,15 +1,23 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
     // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
     // rels without a baseuri get removed
     String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
+    if (!preserveRelativeLinks) {
         attr.setValue(value);
+    }
 
+    // Check if the value is a valid protocol
     for (Protocol protocol : protocols) {
         String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        if (value != null && value.toLowerCase().startsWith(prot)) {
             return true;
         }
     }
+
+    // If the value is a relative URL and we are preserving relative links, it is valid
+    if (preserveRelativeLinks && value != null && !value.toLowerCase().startsWith("http://") && !value.toLowerCase().startsWith("https://")) {
+        return true;
+    }
+
     return false;
 }
\ No newline at end of file
