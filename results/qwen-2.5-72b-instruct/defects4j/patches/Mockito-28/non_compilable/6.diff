diff --git a/tmp/e8adb4eb-c6a1-49e4-9ec7-32aec9b9f098_buggy.java b/tmp/95ded93a-746b-42c2-8447-51136479cfe8_fixed.java
index fa6828a..0f2b466 100644
--- a/tmp/e8adb4eb-c6a1-49e4-9ec7-32aec9b9f098_buggy.java
+++ b/tmp/95ded93a-746b-42c2-8447-51136479cfe8_fixed.java
@@ -1,5 +1,23 @@
     private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
         for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+            Optional<Object> bestMatch = findBestMatch(mocks, field.getType());
+            if (bestMatch.isPresent()) {
+                injectFieldValue(field, fieldInstance, bestMatch.get());
+            }
+        }
+    }
+
+    private Optional<Object> findBestMatch(Set<Object> mocks, Class<?> fieldType) {
+        return mocks.stream()
+                .filter(mock -> fieldType.isInstance(mock) || mock.getClass().isAssignableFrom(fieldType))
+                .findFirst();
+    }
+
+    private void injectFieldValue(Field field, Object fieldInstance, Object value) {
+        try {
+            field.setAccessible(true);
+            field.set(fieldInstance, value);
+        } catch (IllegalAccessException e) {
+            throw new RuntimeException("Failed to inject value into field: " + field.getName(), e);
         }
     }
\ No newline at end of file
