diff --git a/tmp/04b6f6a8-a4a0-4a20-a2aa-29d5ebe0930c_buggy.java b/tmp/bb99ce32-9e63-43c6-9534-4d7480a8b894_fixed.java
index de9af32..ba6cc83 100644
--- a/tmp/04b6f6a8-a4a0-4a20-a2aa-29d5ebe0930c_buggy.java
+++ b/tmp/bb99ce32-9e63-43c6-9534-4d7480a8b894_fixed.java
@@ -1,18 +1,24 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP) {
+        // Handle the case where the function is a property of an object
+        Node propNameNode = child.getLastChild();
+        if (propNameNode.getType() == Token.STRING) {
+          changed.add(propNameNode.getString());
+        }
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
