diff --git a/tmp/ac950e0c-e9c7-42b1-a71d-7f950faf66bd_buggy.java b/tmp/48b40e13-e782-4817-84f5-b6d5f054d9c2_fixed.java
index be2af16..873e8de 100644
--- a/tmp/ac950e0c-e9c7-42b1-a71d-7f950faf66bd_buggy.java
+++ b/tmp/48b40e13-e782-4817-84f5-b6d5f054d9c2_fixed.java
@@ -1,29 +1,36 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Determine if the date falls before the cutover to the Gregorian calendar
+    long gregorianInstant;
+    gregorianInstant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+
+    if (gregorianInstant < iCutoverMillis) {
+        // The date is before the cutover, so it should be interpreted as Julian
+        long julianInstant;
+        julianInstant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+
+        // Check if the Julian date is valid
+        if (julianInstant >= iCutoverMillis) {
+            // The date is in the illegal cutover gap
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        return julianInstant;
     }
-        return instant;
+
+    // The date is after the cutover, so it should be interpreted as Gregorian
+    return gregorianInstant;
 }
\ No newline at end of file
