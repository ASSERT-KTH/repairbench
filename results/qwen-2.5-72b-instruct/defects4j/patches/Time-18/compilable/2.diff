diff --git a/tmp/8027265c-b634-4a62-8c74-85ea477ab7e9_buggy.java b/tmp/17aa234e-f3ee-4acd-bc0c-2daf7c88b9dd_fixed.java
index be2af16..3586da5 100644
--- a/tmp/8027265c-b634-4a62-8c74-85ea477ab7e9_buggy.java
+++ b/tmp/17aa234e-f3ee-4acd-bc0c-2daf7c88b9dd_fixed.java
@@ -1,29 +1,31 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Assume date is Gregorian initially.
+    long instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+        // It might be Julian.
+        long julianInstant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        if (julianInstant >= iCutoverMillis) {
+            // The date is in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        instant = julianInstant;
     }
+
     return instant;
 }
\ No newline at end of file
