diff --git a/tmp/6293cc3e-48d0-43cf-ab3d-6d03f16c84c5_buggy.java b/tmp/e9f5170d-0081-45d0-8a21-cb7f5e5581f9_fixed.java
index 42b58d0..1515662 100644
--- a/tmp/6293cc3e-48d0-43cf-ab3d-6d03f16c84c5_buggy.java
+++ b/tmp/e9f5170d-0081-45d0-8a21-cb7f5e5581f9_fixed.java
@@ -1,19 +1,25 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof ParameterizedType) {
+            // Prevent infinite recursion by checking if the actualTypeArgument is the same as the classType
+            if (actualTypeArgument != classType) {
+                registerTypeVariablesOn(actualTypeArgument);
+            }
+            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
