diff --git a/tmp/b271e383-744a-42e5-97ed-2ff1997bdae1_buggy.java b/tmp/dff9d2fd-1c3e-492a-bf6d-4212fd9b1e59_fixed.java
index 42b58d0..0009a7a 100644
--- a/tmp/b271e383-744a-42e5-97ed-2ff1997bdae1_buggy.java
+++ b/tmp/dff9d2fd-1c3e-492a-bf6d-4212fd9b1e59_fixed.java
@@ -1,19 +1,23 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof ParameterizedType) {
+            // Recursively register type variables for nested parameterized types
+            registerTypeVariablesOn(actualTypeArgument);
+            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
