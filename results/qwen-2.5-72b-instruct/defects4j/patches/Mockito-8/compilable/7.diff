diff --git a/tmp/f10fbb96-94aa-4b29-a87a-859d1333dfdf_buggy.java b/tmp/e8a1eaac-c1c1-4a0d-aa48-a8fe925ccb1a_fixed.java
index 42b58d0..25d805c 100644
--- a/tmp/f10fbb96-94aa-4b29-a87a-859d1333dfdf_buggy.java
+++ b/tmp/e8a1eaac-c1c1-4a0d-aa48-a8fe925ccb1a_fixed.java
@@ -1,19 +1,25 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        if (actualTypeArgument instanceof ParameterizedType) {
+            // Recursively register type variables for nested parameterized types
+            registerTypeVariablesOn(actualTypeArgument);
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
