diff --git a/tmp/30ac0ea7-ce83-435c-989d-c546d10f67d0_buggy.java b/tmp/86d16cef-e28b-4567-95f1-180502d87a82_fixed.java
index 42b58d0..6e6ee9e 100644
--- a/tmp/30ac0ea7-ce83-435c-989d-c546d10f67d0_buggy.java
+++ b/tmp/86d16cef-e28b-4567-95f1-180502d87a82_fixed.java
@@ -1,19 +1,30 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
+    // Keep track of processed types to avoid infinite recursion
+    Set<Type> processedTypes = new HashSet<>();
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        if (actualTypeArgument instanceof ParameterizedType) {
+            // Check if the actualTypeArgument has already been processed
+            if (!processedTypes.contains(actualTypeArgument)) {
+                processedTypes.add(actualTypeArgument);
+                registerTypeVariablesOn(actualTypeArgument);
+            }
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
