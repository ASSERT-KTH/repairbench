diff --git a/tmp/ba72b161-2d0c-4001-a7fd-7718a2937f17_buggy.java b/tmp/fc876b87-d08a-4ed9-afe9-2e6ea33917ea_fixed.java
index 98d89dc..877f028 100644
--- a/tmp/ba72b161-2d0c-4001-a7fd-7718a2937f17_buggy.java
+++ b/tmp/fc876b87-d08a-4ed9-afe9-2e6ea33917ea_fixed.java
@@ -1,23 +1,28 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    if (Double.isNaN(ld) && Double.isNaN(rd)) {
+        return true; // Both are NaN, considered equal
+    }
+
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
