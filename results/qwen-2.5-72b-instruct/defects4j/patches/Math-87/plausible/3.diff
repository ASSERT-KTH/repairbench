diff --git a/tmp/7ade8235-b851-44ec-8e57-4739171f2210_buggy.java b/tmp/2130757c-5535-461b-81a4-4603b0712be3_fixed.java
index 70cafe0..f5f28f3 100644
--- a/tmp/7ade8235-b851-44ec-8e57-4739171f2210_buggy.java
+++ b/tmp/2130757c-5535-461b-81a4-4603b0712be3_fixed.java
@@ -1,18 +1,25 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
+        double nonZeroValue = 0.0;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+            double entry = getEntry(i, col);
+            if (!MathUtils.equals(entry, 0.0, epsilon)) {
                 if (row == null) {
                     row = i;
+                    nonZeroValue = entry;
                 } else {
-                return null;
+                    return null; // More than one non-zero entry, not basic
                 }
             }
         }
+        // Check if the non-zero entry is exactly 1.0
+        if (row != null && MathUtils.equals(nonZeroValue, 1.0, epsilon)) {
             return row;
         }
+        return null; // Not basic if no non-zero entry or non-zero entry is not 1.0
+    }
\ No newline at end of file
