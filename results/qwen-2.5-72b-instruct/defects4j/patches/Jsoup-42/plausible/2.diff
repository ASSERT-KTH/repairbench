diff --git a/tmp/fcd973a3-3fa1-4996-b72a-0b1b99556be3_buggy.java b/tmp/e4f0bc2e-bee4-4059-952c-b06ea87c75f6_fixed.java
index 442a001..6d5b30d 100644
--- a/tmp/fcd973a3-3fa1-4996-b72a-0b1b99556be3_buggy.java
+++ b/tmp/e4f0bc2e-bee4-4059-952c-b06ea87c75f6_fixed.java
@@ -1,39 +1,38 @@
-    /**
-     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
-     * list will not be reflected in the DOM.
-     * @return a list of key vals
-     */
 public List<Connection.KeyVal> formData() {
     ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
     // iterate the form control elements and accumulate their values
     for (Element el: elements) {
         if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
         String name = el.attr("name");
         if (name.length() == 0) continue;
         String type = el.attr("type");
 
         if ("select".equals(el.tagName())) {
             Elements options = el.select("option[selected]");
             boolean set = false;
             for (Element option: options) {
                 data.add(HttpConnection.KeyVal.create(name, option.val()));
                 set = true;
             }
             if (!set) {
                 Element option = el.select("option").first();
                 if (option != null)
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
             }
         } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
             // only add checkbox or radio if they have the checked attribute
             if (el.hasAttr("checked")) {
                 final String val = el.val();
-                    data.add(HttpConnection.KeyVal.create(name, val));
-                }
+                if (val.isEmpty()) {
+                    data.add(HttpConnection.KeyVal.create(name, "on"));
                 } else {
+                    data.add(HttpConnection.KeyVal.create(name, val));
+                }
+            }
+        } else if (!el.hasAttr("disabled")) { // exclude disabled elements
             data.add(HttpConnection.KeyVal.create(name, el.val()));
         }
     }
     return data;
 }
\ No newline at end of file
