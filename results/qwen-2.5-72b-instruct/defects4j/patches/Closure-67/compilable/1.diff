diff --git a/tmp/40e85569-468f-4ab8-b985-021148109d1a_buggy.java b/tmp/4aa064ac-65e7-4407-92e4-cc5b687a4164_fixed.java
index 939f49b..678b68b 100644
--- a/tmp/40e85569-468f-4ab8-b985-021148109d1a_buggy.java
+++ b/tmp/4aa064ac-65e7-4407-92e4-cc5b687a4164_fixed.java
@@ -1,21 +1,26 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+    boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      Node child = n.getFirstChild();
+      while (child.getType() == Token.GETPROP) {
+        Node prop = child.getLastChild();
+        if (prop.getType() == Token.STRING && prop.getString().equals("prototype")) {
+          return true;
+        }
+        child = child.getFirstChild();
+      }
+    } else {
+      Node prop = n.getLastChild();
+      if (prop.getType() == Token.STRING && prop.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
