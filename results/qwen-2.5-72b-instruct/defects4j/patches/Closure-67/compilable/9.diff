diff --git a/tmp/c72058b7-f8c3-4b16-904e-4cdb91f1e1eb_buggy.java b/tmp/5442ac34-867f-4bce-aca1-9dc4771bea12_fixed.java
index 939f49b..5927e5c 100644
--- a/tmp/c72058b7-f8c3-4b16-904e-4cdb91f1e1eb_buggy.java
+++ b/tmp/5442ac34-867f-4bce-aca1-9dc4771bea12_fixed.java
@@ -1,21 +1,28 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+    boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;
 
-        if (isChainedProperty) {
+    if (!isChainedProperty) {
+      Node left = n.getFirstChild();
+      if (left.getType() == Token.NAME) {
+        Node right = n.getLastChild();
+        if (right.getType() == Token.STRING && right.getString().equals("prototype")) {
+          return true;
+        }
+      }
+    } else {
       Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      while (child != null) {
+        if (child.getType() == Token.STRING && child.getString().equals("prototype")) {
           return true;
         }
+        child = child.getNext();
+      }
     }
   }
 
   return false;
 }
\ No newline at end of file
