diff --git a/tmp/3755a57e-99e7-462b-9543-d26fa785a5a4_buggy.java b/tmp/1de2c193-302b-4bea-834c-4f9d06f77c8e_fixed.java
index 5f8ac1a..a9fab6c 100644
--- a/tmp/3755a57e-99e7-462b-9543-d26fa785a5a4_buggy.java
+++ b/tmp/1de2c193-302b-4bea-834c-4f9d06f77c8e_fixed.java
@@ -1,34 +1,36 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
     if (depth1 < depth2) {
-            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
+        int r = compareNodePointers(p1, depth1, p2.getParent(), depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
-            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
+        int r = compareNodePointers(p1.getParent(), depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
     if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
+        if (p1 == null || p2 == null) {
+            return p1 == null ? -1 : 1;
         }
-        int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
+        return p1.getParent().compareChildNodePointers(p1, p2);
+    }
+
+    int r = compareNodePointers(p1.getParent(), depth1 - 1, p2.getParent(), depth2 - 1);
     if (r != 0) {
         return r;
     }
 
-        return p1.parent.compareChildNodePointers(p1, p2);
+    return p1.getParent().compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
