diff --git a/tmp/dbbc2824-0faa-48c1-8e99-7a54c5433ce7_buggy.java b/tmp/e82f5979-9215-443c-a22f-70216cf87625_fixed.java
index 9353941..7624427 100644
--- a/tmp/dbbc2824-0faa-48c1-8e99-7a54c5433ce7_buggy.java
+++ b/tmp/e82f5979-9215-443c-a22f-70216cf87625_fixed.java
@@ -1,30 +1,35 @@
-  /**
-   * Give an expression and a variable. It returns READ, if the first
-   * reference of that variable is a read. It returns KILL, if the first
-   * reference of that variable is an assignment. It returns MAY_LIVE otherwise.
-   */
 private VariableLiveness isVariableReadBeforeKill(
     Node n, String variable) {
   if (NodeUtil.isName(n) && variable.equals(n.getString())) {
     if (NodeUtil.isLhs(n, n.getParent())) {
       // The expression to which the assignment is made is evaluated before
       // the RHS is evaluated (normal left to right evaluation) but the KILL
       // occurs after the RHS is evaluated.
       return VariableLiveness.KILL;
     } else {
       return VariableLiveness.READ;
     }
   }
 
   // Expressions are evaluated left-right, depth first.
   for (Node child = n.getFirstChild();
       child != null; child = child.getNext()) {
     if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
       VariableLiveness state = isVariableReadBeforeKill(child, variable);
-        if (state != VariableLiveness.MAYBE_LIVE) {
+      if (state == VariableLiveness.KILL) {
+        // If we encounter a KILL, any subsequent READs should be ignored.
+        return state;
+      } else if (state == VariableLiveness.READ) {
+        // If we encounter a READ, we need to check if there is a subsequent KILL.
+        // If there is no KILL, the variable is READ.
+        for (Node sibling = child.getNext(); sibling != null; sibling = sibling.getNext()) {
+          if (isVariableReadBeforeKill(sibling, variable) == VariableLiveness.KILL) {
+            return VariableLiveness.MAYBE_LIVE;
+          }
+        }
         return state;
       }
     }
   }
   return VariableLiveness.MAYBE_LIVE;
 }
\ No newline at end of file
