diff --git a/tmp/c383d6ee-d7e7-435e-88b8-7cc9f42d3070_buggy.java b/tmp/83f0378d-f66b-48f2-bd1b-e95f545dab32_fixed.java
index e69de29..83efe53 100644
--- a/tmp/c383d6ee-d7e7-435e-88b8-7cc9f42d3070_buggy.java
+++ b/tmp/83f0378d-f66b-48f2-bd1b-e95f545dab32_fixed.java
@@ -0,0 +1,29 @@
+private void _testFieldNameQuotingEnabled(JsonFactory f, boolean useStream, boolean quotingEnabled, String expected) throws IOException
+{
+    final String FIELD_NAME = "foo";
+    final int VALUE = 1;
+
+    // Configure the generator according to the test parameters
+    JsonGenerator g = f.createGenerator(ObjectWriteContext.empty(), useStream ? new ByteArrayOutputStream() : new StringWriter());
+    if (!quotingEnabled) {
+        g.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    }
+
+    // Write the JSON content
+    g.writeStartObject();
+    g.writeNumberField(FIELD_NAME, VALUE);
+    g.writeEndObject();
+    g.close();
+
+    // Get the output and compare with expected result
+    String output;
+    if (useStream) {
+        ByteArrayOutputStream bos = (ByteArrayOutputStream) g.getOutputTarget();
+        output = bos.toString("UTF-8");
+    } else {
+        StringWriter sw = (StringWriter) g.getOutputTarget();
+        output = sw.toString();
+    }
+
+    assertEquals(expected, output);
+}
\ No newline at end of file
