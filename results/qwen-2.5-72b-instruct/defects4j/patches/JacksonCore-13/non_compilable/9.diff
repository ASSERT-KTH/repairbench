diff --git a/tmp/f980e36f-0b34-485b-9329-ccc0fe104607_buggy.java b/tmp/3d7e608a-132c-4f14-8b02-82565bae6206_fixed.java
index e69de29..2ab2756 100644
--- a/tmp/f980e36f-0b34-485b-9329-ccc0fe104607_buggy.java
+++ b/tmp/3d7e608a-132c-4f14-8b02-82565bae6206_fixed.java
@@ -0,0 +1,40 @@
+private void _testFieldNameQuotingEnabled(JsonFactory f, boolean useStream, boolean quoteFieldNames, String expected) throws IOException {
+    byte[] output;
+    if (useStream) {
+        ByteArrayOutputStream bout = new ByteArrayOutputStream();
+        JsonGenerator gen = f.createGenerator(bout, JsonEncoding.UTF8);
+        try {
+            gen.writeStartObject();
+            if (quoteFieldNames) {
+                gen.writeStringField("foo", "1");
+            } else {
+                gen.writeFieldName("foo");
+                gen.writeNumber(1);
+            }
+            gen.writeEndObject();
+            gen.close();
+            output = bout.toByteArray();
+        } finally {
+            bout.close();
+        }
+    } else {
+        StringWriter sw = new StringWriter();
+        JsonGenerator gen = f.createGenerator(sw);
+        try {
+            gen.writeStartObject();
+            if (quoteFieldNames) {
+                gen.writeStringField("foo", "1");
+            } else {
+                gen.writeFieldName("foo");
+                gen.writeNumber(1);
+            }
+            gen.writeEndObject();
+            gen.close();
+            output = sw.toString().getBytes(StandardCharsets.UTF_8);
+        } finally {
+            sw.close();
+        }
+    }
+    String result = new String(output, StandardCharsets.UTF_8);
+    assertEquals(expected, result);
+}
\ No newline at end of file
