diff --git a/tmp/fca6f54d-0203-4164-91e9-5a7f781abdc2_buggy.java b/tmp/b22b9312-2323-4d3c-ba2b-8b53caff0660_fixed.java
index 6cfa79b..afb2716 100644
--- a/tmp/fca6f54d-0203-4164-91e9-5a7f781abdc2_buggy.java
+++ b/tmp/b22b9312-2323-4d3c-ba2b-8b53caff0660_fixed.java
@@ -1,12 +1,11 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    // Check if x is more than 20 standard deviations from the mean
+    if (x < mean - 20 * standardDeviation) {
+        return 0.0;
+    } else if (x > mean + 20 * standardDeviation) {
+        return 1.0;
+    } else {
+        // Otherwise, compute the CDF using the Erf function
+        return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));
+    }
 }
\ No newline at end of file
