diff --git a/tmp/18f4c446-1f61-40c1-a903-a283a85bf833_buggy.java b/tmp/8aa9ac4f-d37a-4d2b-b2b4-d25d41e18bbf_fixed.java
index d6a560a..06d6969 100644
--- a/tmp/18f4c446-1f61-40c1-a903-a283a85bf833_buggy.java
+++ b/tmp/8aa9ac4f-d37a-4d2b-b2b4-d25d41e18bbf_fixed.java
@@ -1,33 +1,39 @@
   /**
    * Resolve the referenced type within the enclosing scope.
    */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+    // Attempt to resolve via registry first
     boolean resolved = resolveViaRegistry(t, enclosing);
+
+    // Check for and handle any implicit prototype cycles
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
 
+    // If resolved, continue with super resolution and property continuations
     if (resolved) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+      return registry.isLastGeneration() ? getReferencedType() : this;
     }
 
+    // Attempt to resolve via properties if not already resolved
     resolveViaProperties(t, enclosing);
+
+    // Check for and handle any implicit prototype cycles again
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
 
+    // Continue with super resolution and property continuations
     super.resolveInternal(t, enclosing);
+
+    // If the type is now resolved, finish property continuations
     if (isResolved()) {
       finishPropertyContinuations();
     }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+
+    // Return the resolved type or this if not resolved and in the last generation
+    return registry.isLastGeneration() ? getReferencedType() : this;
   }
\ No newline at end of file
