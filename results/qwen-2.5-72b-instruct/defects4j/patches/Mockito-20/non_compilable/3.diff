diff --git a/tmp/edc0cd93-8c5c-4c79-9fe8-a107b5f37f57_buggy.java b/tmp/fd0b96df-0928-407f-9420-834188b43844_fixed.java
index f9a9b5b..9beff1d 100644
--- a/tmp/edc0cd93-8c5c-4c79-9fe8-a107b5f37f57_buggy.java
+++ b/tmp/fd0b96df-0928-407f-9420-834188b43844_fixed.java
@@ -1,30 +1,52 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
         mockInstance = classInstantiator.instantiate(mockedProxyType);
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
+        // Ensure the mock instance is properly initialized and returns the expected results
+        if (settings.isUseConstructor()) {
+            if (settings.getOuterInstance() != null) {
+                // For inner classes, set the outer instance
+                try {
+                    Field outerInstanceField = mockedProxyType.getDeclaredField("this$0");
+                    outerInstanceField.setAccessible(true);
+                    outerInstanceField.set(mockInstance, settings.getOuterInstance());
+                } catch (NoSuchFieldException | IllegalAccessException e) {
+                    throw new MockitoException("Unable to set outer instance for inner class mock", e);
+                }
+            }
+            // Call the constructor if required
+            if (settings.getDefaultAnswer() == CALLS_REAL_METHODS) {
+                try {
+                    mockedProxyType.getDeclaredConstructor().newInstance();
+                } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
+                    throw new MockitoException("Unable to call constructor for mock", e);
+                }
+            }
+        }
+
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ), cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
         throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
