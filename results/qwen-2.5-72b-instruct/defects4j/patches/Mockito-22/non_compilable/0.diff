diff --git a/tmp/614ccee5-1c34-4f96-96a0-f66e4ba7a14b_buggy.java b/tmp/205266b1-5c11-453c-977c-6f856414b608_fixed.java
index 111ba5e..5da2b68 100644
--- a/tmp/614ccee5-1c34-4f96-96a0-f66e4ba7a14b_buggy.java
+++ b/tmp/205266b1-5c11-453c-977c-6f856414b608_fixed.java
@@ -1,9 +1,39 @@
 public static boolean areEqual(Object o1, Object o2) {
+    if (o1 == o2) {
+        return true;
+    }
     if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+        return false;
+    }
+    if (!o1.getClass().isArray() || !o2.getClass().isArray()) {
         return o1.equals(o2);
     }
+    if (o1 instanceof Object[] && o2 instanceof Object[]) {
+        return Arrays.equals((Object[]) o1, (Object[]) o2);
+    }
+    if (o1 instanceof boolean[] && o2 instanceof boolean[]) {
+        return Arrays.equals((boolean[]) o1, (boolean[]) o2);
+    }
+    if (o1 instanceof byte[] && o2 instanceof byte[]) {
+        return Arrays.equals((byte[]) o1, (byte[]) o2);
+    }
+    if (o1 instanceof char[] && o2 instanceof char[]) {
+        return Arrays.equals((char[]) o1, (char[]) o2);
+    }
+    if (o1 instanceof double[] && o2 instanceof double[]) {
+        return Arrays.equals((double[]) o1, (double[]) o2);
+    }
+    if (o1 instanceof float[] && o2 instanceof float[]) {
+        return Arrays.equals((float[]) o1, (float[]) o2);
+    }
+    if (o1 instanceof int[] && o2 instanceof int[]) {
+        return Arrays.equals((int[]) o1, (int[]) o2);
+    }
+    if (o1 instanceof long[] && o2 instanceof long[]) {
+        return Arrays.equals((long[]) o1, (long[]) o2);
+    }
+    if (o1 instanceof short[] && o2 instanceof short[]) {
+        return Arrays.equals((short[]) o1, (short[]) o2);
+    }
+    return false;
 }
\ No newline at end of file
