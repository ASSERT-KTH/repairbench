diff --git a/tmp/10ce7a04-bde0-4ad5-9eec-21641b1abced_buggy.java b/tmp/e8155944-4ddc-42c3-98e2-3b300fbf94ef_fixed.java
index 822447c..aff9cac 100644
--- a/tmp/10ce7a04-bde0-4ad5-9eec-21641b1abced_buggy.java
+++ b/tmp/e8155944-4ddc-42c3-98e2-3b300fbf94ef_fixed.java
@@ -1,37 +1,26 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
+    for (int i = 0; i < len; ) {
+        int c = str.codePointAt(i);
+        i += Character.charCount(c);
+
+        if (c <= 0x7F) {
+            writer.write(c);
+        } else if (c <= 0xFFFF) {
             String entityName = this.entityName(c);
             if (entityName == null) {
-                if (c > 0x7F) {
                 writer.write("&#");
                 writer.write(Integer.toString(c, 10));
                 writer.write(';');
-                } else {
-                    writer.write(c);
-                }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
+        } else {
+            writer.write("&#");
+            writer.write(Integer.toString(c, 10));
+            writer.write(';');
+        }
     }
 }
\ No newline at end of file
