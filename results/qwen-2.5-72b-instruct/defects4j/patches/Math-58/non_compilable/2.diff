diff --git a/tmp/52763998-cb1a-4f80-bc85-18d663c83f48_buggy.java b/tmp/ee70dc7c-7f0e-4f26-a618-6d505b08649e_fixed.java
index 3002587..288cacf 100644
--- a/tmp/52763998-cb1a-4f80-bc85-18d663c83f48_buggy.java
+++ b/tmp/ee70dc7c-7f0e-4f26-a618-6d505b08649e_fixed.java
@@ -1,10 +1,18 @@
-    /**
-     * Fits a Gaussian function to the observed points.
-     *
-     * @return the parameters of the Gaussian function that best fits the
-     * observed points (in the same order as above).
-     */
 public double[] fit() {
     final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+
+    // Create a constrained optimizer that ensures the parameters are within valid ranges
+    final LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
+    final Gaussian.Parametric gaussian = new Gaussian.Parametric();
+
+    // Define the constraints for the parameters: amplitude, mean, and sigma
+    final double[] lowerBounds = {0.0, -Double.MAX_VALUE, 0.0};
+    final double[] upperBounds = {Double.MAX_VALUE, Double.MAX_VALUE, Double.MAX_VALUE};
+
+    // Perform the fit with the constrained optimizer
+    return optimizer.optimize(
+        new MaxEval(1000),
+        new LeastSquaresProblem(new EuclideanDistanceCostFunction(gaussian), getObservations(), guess),
+        new SimpleBounds(lowerBounds, upperBounds)
+    ).getPoint().toArray();
 }
\ No newline at end of file
