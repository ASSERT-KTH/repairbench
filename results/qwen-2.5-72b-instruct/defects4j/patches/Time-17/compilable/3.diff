diff --git a/tmp/2390c0ab-c7f7-4a85-99fc-367fcd5bd7a8_buggy.java b/tmp/23c442bc-11db-41aa-b1f4-9a69e6800ac7_fixed.java
index 03b03d7..5a1255f 100644
--- a/tmp/2390c0ab-c7f7-4a85-99fc-367fcd5bd7a8_buggy.java
+++ b/tmp/23c442bc-11db-41aa-b1f4-9a69e6800ac7_fixed.java
@@ -1,25 +1,15 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    long earlierInstant = convertLocalToUTC(local, false, instantBefore);
+    long laterInstant = convertLocalToUTC(local, false, instantAfter);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    return earlierOrLater ? laterInstant : earlierInstant;
 }
\ No newline at end of file
