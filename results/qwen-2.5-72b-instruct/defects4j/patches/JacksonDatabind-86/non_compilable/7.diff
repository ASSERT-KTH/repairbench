diff --git a/tmp/0d84dff0-be44-4844-a5f9-f7c249472e99_buggy.java b/tmp/67456ab8-c308-419c-aa26-21f9462ba2e2_fixed.java
index e69de29..b6a1492 100644
--- a/tmp/0d84dff0-be44-4844-a5f9-f7c249472e99_buggy.java
+++ b/tmp/67456ab8-c308-419c-aa26-21f9462ba2e2_fixed.java
@@ -0,0 +1,29 @@
+public JavaType constructType(Class<?> rawType) {
+    if (rawType == null) {
+        return null;
+    }
+
+    // Check if the type is already cached
+    JavaType cached = _typeCache.get(rawType);
+    if (cached != null) {
+        return cached;
+    }
+
+    // Construct the type
+    JavaType type = _constructType(rawType);
+
+    // Special handling for recursive types
+    if (type instanceof ResolvedRecursiveType) {
+        ResolvedRecursiveType resolvedType = (ResolvedRecursiveType) type;
+        _typeCache.put(rawType, resolvedType);
+        // Ensure that the base type is also resolved and cached
+        JavaType baseType = resolvedType.getSuperClass();
+        if (baseType instanceof ResolvedRecursiveType) {
+            _typeCache.put(baseType.getRawClass(), (ResolvedRecursiveType) baseType);
+        }
+    } else {
+        _typeCache.put(rawType, type);
+    }
+
+    return type;
+}
\ No newline at end of file
