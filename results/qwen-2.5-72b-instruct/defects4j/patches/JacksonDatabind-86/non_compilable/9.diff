diff --git a/tmp/ef0b88a3-05ce-486d-9486-73a7e2829053_buggy.java b/tmp/71e31972-efbf-43ed-961b-251ec3efdade_fixed.java
index e69de29..0098987 100644
--- a/tmp/ef0b88a3-05ce-486d-9486-73a7e2829053_buggy.java
+++ b/tmp/71e31972-efbf-43ed-961b-251ec3efdade_fixed.java
@@ -0,0 +1,39 @@
+public class TypeFactory {
+    // Other methods and fields...
+
+    public JavaType constructType(Class<?> cls) {
+        if (cls == null) {
+            return null;
+        }
+
+        // Check if the type is already cached
+        JavaType cachedType = _typeCache.get(cls);
+        if (cachedType != null) {
+            return cachedType;
+        }
+
+        // Construct the type
+        JavaType constructedType = _constructType(cls);
+
+        // Cache the constructed type
+        _typeCache.put(cls, constructedType);
+
+        return constructedType;
+    }
+
+    private JavaType _constructType(Class<?> cls) {
+        if (cls.getSuperclass() != null) {
+            JavaType superClassType = constructType(cls.getSuperclass());
+            if (superClassType instanceof ResolvedRecursiveType) {
+                // Ensure the base class type is properly resolved and cached
+                ResolvedRecursiveType resolvedSuperClassType = (ResolvedRecursiveType) superClassType;
+                resolvedSuperClassType.resolveBindings(new TypeBindings());
+            }
+        }
+
+        // Construct the type for the given class
+        return _typeFactory.constructType(cls);
+    }
+
+    // Other methods and fields...
+}
\ No newline at end of file
