diff --git a/tmp/d9805c73-db92-4980-92ff-025542100b9d_buggy.java b/tmp/980ef27a-a1e2-40cc-90c9-68e697192b7a_fixed.java
index dc93be3..2ff96e8 100644
--- a/tmp/d9805c73-db92-4980-92ff-025542100b9d_buggy.java
+++ b/tmp/980ef27a-a1e2-40cc-90c9-68e697192b7a_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
+    
+    // Ensure that known non-void elements are not self-closed
+    if (!el.tag().isSelfClosing()) {
+        stack.add(el);
+    }
+    
     return el;
 }
\ No newline at end of file
