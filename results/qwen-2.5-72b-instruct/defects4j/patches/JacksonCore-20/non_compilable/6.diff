diff --git a/tmp/61df6022-fd0c-41ed-afc7-b5f43663f32e_buggy.java b/tmp/90ba51e3-9210-4eed-a809-148b407c43e4_fixed.java
index a6f008f..83ae40d 100644
--- a/tmp/61df6022-fd0c-41ed-afc7-b5f43663f32e_buggy.java
+++ b/tmp/90ba51e3-9210-4eed-a809-148b407c43e4_fixed.java
@@ -1,11 +1,25 @@
-    /**
-     * Method that can be called on backends that support passing opaque datatypes of
-     * non-JSON formats
-     *
-     * @since 2.8
-     */
 public void writeEmbeddedObject(Object object) throws IOException {
-        // 01-Sep-2016, tatu: As per [core#318], handle small number of cases
-        throw new JsonGenerationException("No native support for writing embedded objects",
-                this);
+    if (object == null) {
+        _writeNull();
+    } else if (object instanceof byte[]) {
+        _writeBinaryBytes((byte[]) object);
+    } else {
+        throw new JsonGenerationException("No native support for writing embedded objects of type " + object.getClass().getName(), this);
+    }
+}
+
+// Helper method to write null value
+private void _writeNull() throws IOException {
+    _writeValueSeparator();
+    _writer.write("null");
+}
+
+// Helper method to write binary bytes
+private void _writeBinaryBytes(byte[] bytes) throws IOException {
+    _writeValueSeparator();
+    _writer.write '-';
+    for (byte b : bytes) {
+        _writer.write(b);
+    }
+    _writer.write('\'');
 }
\ No newline at end of file
