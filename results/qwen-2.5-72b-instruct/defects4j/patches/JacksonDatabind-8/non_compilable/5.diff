diff --git a/tmp/14f6fc15-915b-45a0-80fa-a28e71ed6a2e_buggy.java b/tmp/e90c19c1-230e-47ed-a537-73b8f9f69a9c_fixed.java
index c9da1b7..962109e 100644
--- a/tmp/14f6fc15-915b-45a0-80fa-a28e71ed6a2e_buggy.java
+++ b/tmp/e90c19c1-230e-47ed-a537-73b8f9f69a9c_fixed.java
@@ -1,33 +1,45 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
 
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
-
             throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                     + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
+        } else {
+            // If the old and new ones are not of the same class, check which one to choose
+            if (newOne.isMoreSpecific(oldOne)) {
                 // new type more specific, use it
+                _creators[typeIndex] = _fixAccess(newOne);
+                if (explicit) {
+                    _explicitCreators |= mask;
+                }
+            } else {
+                // new type more generic, use old
+                if (explicit) {
+                    _explicitCreators |= mask;
                 }
             }
+        }
+    } else {
+        // No old one, just set the new one
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
+}
\ No newline at end of file
