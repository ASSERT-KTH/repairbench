diff --git a/tmp/df6fa1e3-cee2-40e3-82bd-f5c2a40f4ad9_buggy.java b/tmp/db6d2dcf-d458-4c95-823b-677c0b13e39d_fixed.java
index c9da1b7..8a97098 100644
--- a/tmp/df6fa1e3-cee2-40e3-82bd-f5c2a40f4ad9_buggy.java
+++ b/tmp/db6d2dcf-d458-4c95-823b-677c0b13e39d_fixed.java
@@ -1,33 +1,45 @@
-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
-    {
+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
 
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+            if (explicit) {
+                // If both are from the same class and the new one is explicitly annotated, use the new one
+                _creators[typeIndex] = _fixAccess(newOne);
+                _explicitCreators |= mask;
+            } else {
+                // If the new one is not explicitly annotated, keep the old one
+                return;
+            }
+        } else {
+            // If they are from different classes, decide based on specificity
+            if (explicit) {
+                _creators[typeIndex] = _fixAccess(newOne);
+                _explicitCreators |= mask;
+            } else {
+                // If the new one is not explicitly annotated, keep the old one
+                return;
             }
         }
+    } else {
+        // No old one, just set the new one
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
+}
\ No newline at end of file
