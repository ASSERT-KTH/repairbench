diff --git a/tmp/b05d8c5b-b1e6-4985-a3f2-0100f6286a46_buggy.java b/tmp/3b57f35d-9df3-4841-b5d4-c7264b2fd879_fixed.java
index 4b7f469..a2ccf02 100644
--- a/tmp/b05d8c5b-b1e6-4985-a3f2-0100f6286a46_buggy.java
+++ b/tmp/3b57f35d-9df3-4841-b5d4-c7264b2fd879_fixed.java
@@ -1,10 +1,41 @@
 static boolean isSimpleNumber(String s) {
     int len = s.length();
+    if (len == 0) {
+        return false;
+    }
+
+    // Check for hexadecimal notation
+    if (s.startsWith("0x") || s.startsWith("0X")) {
+        for (int index = 2; index < len; index++) {
+            char c = s.charAt(index);
+            if ((c < '0' || c > '9') && (c < 'A' || c > 'F') && (c < 'a' || c > 'f')) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    // Check for decimal point and leading zeros
+    boolean hasDecimal = false;
+    boolean hasLeadingZero = false;
     for (int index = 0; index < len; index++) {
         char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+        if (c == '.') {
+            if (hasDecimal) {
+                return false; // More than one decimal point
+            }
+            hasDecimal = true;
+        } else if (c == '0' && index == 0 && len > 1 && s.charAt(1) != '.') {
+            hasLeadingZero = true;
+        } else if (c < '0' || c > '9') {
             return false;
         }
     }
-    return len > 0;
+
+    // If the string has a leading zero and no decimal point, it's not a simple number
+    if (hasLeadingZero && !hasDecimal) {
+        return false;
+    }
+
+    return true;
 }
\ No newline at end of file
