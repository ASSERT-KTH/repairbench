diff --git a/tmp/56ecd48d-516f-4047-8eea-6c02f7393712_buggy.java b/tmp/270ff6ff-85aa-4842-ae7e-a42c48695357_fixed.java
index 4b7f469..941e665 100644
--- a/tmp/56ecd48d-516f-4047-8eea-6c02f7393712_buggy.java
+++ b/tmp/270ff6ff-85aa-4842-ae7e-a42c48695357_fixed.java
@@ -1,10 +1,43 @@
 static boolean isSimpleNumber(String s) {
+    if (s.isEmpty()) {
+        return false;
+    }
+
     int len = s.length();
-    for (int index = 0; index < len; index++) {
+    int index = 0;
+
+    // Handle optional leading sign
+    if (s.charAt(index) == '+' || s.charAt(index) == '-') {
+        index++;
+    }
+
+    // Handle hexadecimal
+    if (index < len && s.charAt(index) == '0' && (index + 1 < len && (s.charAt(index + 1) == 'x' || s.charAt(index + 1) == 'X'))) {
+        index += 2;
+        while (index < len) {
             char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+            if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
+                return false;
+            }
+            index++;
+        }
+        return true;
+    }
+
+    // Handle decimal and octal
+    boolean hasDecimalPoint = false;
+    while (index < len) {
+        char c = s.charAt(index);
+        if (c == '.') {
+            if (hasDecimalPoint) {
+                return false; // More than one decimal point
+            }
+            hasDecimalPoint = true;
+        } else if (c < '0' || c > '9') {
             return false;
         }
+        index++;
     }
-    return len > 0;
+
+    return true;
 }
\ No newline at end of file
