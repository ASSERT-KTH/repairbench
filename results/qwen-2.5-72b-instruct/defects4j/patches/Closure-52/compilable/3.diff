diff --git a/tmp/f2e190f8-0559-4cd4-afd6-91f8712f3d9d_buggy.java b/tmp/ac5be816-801f-40f8-affa-0d98f8331d9d_fixed.java
index 4b7f469..00ee57d 100644
--- a/tmp/f2e190f8-0559-4cd4-afd6-91f8712f3d9d_buggy.java
+++ b/tmp/ac5be816-801f-40f8-affa-0d98f8331d9d_fixed.java
@@ -1,10 +1,47 @@
 static boolean isSimpleNumber(String s) {
-    int len = s.length();
-    for (int index = 0; index < len; index++) {
+    // Check for empty string
+    if (s.isEmpty()) {
+        return false;
+    }
+
+    // Check for hexadecimal numbers
+    if (s.length() > 2 && s.startsWith("0x")) {
+        for (int index = 2; index < s.length(); index++) {
+            char c = s.charAt(index);
+            if (!Character.isDigit(c) && (c < 'A' || c > 'F') && (c < 'a' || c > 'f')) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    // Check for octal numbers
+    if (s.length() > 1 && s.startsWith("0") && Character.isDigit(s.charAt(1))) {
+        for (int index = 1; index < s.length(); index++) {
             char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+            if (c < '0' || c > '7') {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    // Check for floating-point numbers
+    boolean hasDecimalPoint = false;
+    boolean hasDigit = false;
+    for (int index = 0; index < s.length(); index++) {
+        char c = s.charAt(index);
+        if (c == '.') {
+            if (hasDecimalPoint) {
+                return false; // Multiple decimal points
+            }
+            hasDecimalPoint = true;
+        } else if (c < '0' || c > '9') {
             return false;
+        } else {
+            hasDigit = true;
         }
     }
-    return len > 0;
+
+    return hasDigit;
 }
\ No newline at end of file
