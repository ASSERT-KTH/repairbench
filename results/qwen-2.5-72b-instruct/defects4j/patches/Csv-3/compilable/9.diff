diff --git a/tmp/c7544ba2-fc96-4a0e-b553-e674f2e5743a_buggy.java b/tmp/962295c4-8729-421f-850d-58599e0ba248_fixed.java
index 1ad070d..1c8897c 100644
--- a/tmp/c7544ba2-fc96-4a0e-b553-e674f2e5743a_buggy.java
+++ b/tmp/962295c4-8729-421f-850d-58599e0ba248_fixed.java
@@ -1,38 +1,40 @@
     /**
      * Handle an escape sequence.
      * The current character must be the escape character.
      * On return, the next character is available by calling {@link ExtendedBufferedReader#getLastChar()}
      * on the input stream.
      * 
      * @return the unescaped character (as an int) or {@link END_OF_STREAM} if char following the escape is invalid. 
      * @throws IOException if there is a problem reading the stream or the end of stream is detected: 
-     * the escape character is not allowed at end of strem
+     * the escape character is not allowed at end of stream
      */
     int readEscape() throws IOException {
         // the escape char has just been read (normally a backslash)
         final int c = in.read();
         switch (c) {
         case 'r':
             return CR;
         case 'n':
             return LF;
         case 't':
             return TAB;
         case 'b':
             return BACKSPACE;
         case 'f':
             return FF;
+        case '0': // Null character
+            return 0;
+        case 'a': // Alert (bell)
+            return 7;
         case CR:
         case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
-            return c;
+        case FF:
+        case TAB:
+        case BACKSPACE:
+            throw new IOException("Control characters must be explicitly escaped");
         case END_OF_STREAM:
             throw new IOException("EOF whilst processing escape sequence");
         default:
-            // Now check for meta-characters
             return c;
-            // indicate unexpected char - available from in.getLastChar()
         }
     }
\ No newline at end of file
