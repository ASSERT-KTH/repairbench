diff --git a/tmp/602f4cbc-4445-46ea-8def-c1b3cfb58faa_buggy.java b/tmp/319d8dca-c227-446c-8ada-3d9bc4e36996_fixed.java
index 9033e1c..c7816ff 100644
--- a/tmp/602f4cbc-4445-46ea-8def-c1b3cfb58faa_buggy.java
+++ b/tmp/319d8dca-c227-446c-8ada-3d9bc4e36996_fixed.java
@@ -1,11 +1,32 @@
     /**
      * Returns true iff they are equal as defined by
      * {@link #equals(double,double,int) equals(x, y, 1)}.
      *
      * @param x first value
      * @param y second value
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        return equals(x, y, 1);
+    }
+
+    /**
+     * Returns true iff they are equal as defined by the given precision.
+     *
+     * @param x first value
+     * @param y second value
+     * @param maxUlps the maximum number of ulps by which the values can differ
+     * @return {@code true} if the values are equal.
+     */
+    public static boolean equals(double x, double y, int maxUlps) {
+        if (Double.isNaN(x) && Double.isNaN(y)) {
+            return true;
+        }
+        if (Double.isInfinite(x) && Double.isInfinite(y)) {
+            return x == y;
+        }
+        long xBits = Double.doubleToLongBits(x);
+        long yBits = Double.doubleToLongBits(y);
+        long diff = Math.abs(xBits - yBits);
+        return diff <= maxUlps;
     }
\ No newline at end of file
