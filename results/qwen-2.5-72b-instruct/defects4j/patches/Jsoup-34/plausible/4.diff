diff --git a/tmp/25b51b08-baa8-4d8a-8339-d5f4f73c2544_buggy.java b/tmp/3ac7f42f-ef4e-4d24-b6a6-70aa488914b9_fixed.java
index 21f64c6..9eecd07 100644
--- a/tmp/25b51b08-baa8-4d8a-8339-d5f4f73c2544_buggy.java
+++ b/tmp/3ac7f42f-ef4e-4d24-b6a6-70aa488914b9_fixed.java
@@ -1,23 +1,24 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+                continue; // fixed the infinite loop and potential ArrayIndexOutOfBoundsException
+
             int i = offset + 1;
             int last = i + seq.length() - 1;
-            if (offset < length) {
+            if (last <= length) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
