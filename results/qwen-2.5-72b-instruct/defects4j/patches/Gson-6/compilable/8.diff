diff --git a/tmp/f50a1d4d-7e16-44d7-819c-f31de8162495_buggy.java b/tmp/f446c905-15ad-4157-8941-52fea4a3991f_fixed.java
index 1c53d31..f3379f5 100644
--- a/tmp/f50a1d4d-7e16-44d7-819c-f31de8162495_buggy.java
+++ b/tmp/f446c905-15ad-4157-8941-52fea4a3991f_fixed.java
@@ -1,20 +1,21 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  // Ensure the type adapter is null-safe before returning it
   typeAdapter = typeAdapter.nullSafe();
   return typeAdapter;
 }
\ No newline at end of file
