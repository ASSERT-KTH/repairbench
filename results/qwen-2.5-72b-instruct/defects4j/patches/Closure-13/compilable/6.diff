diff --git a/tmp/6d3d6572-fcae-4cc4-a944-70cd7efe32fd_buggy.java b/tmp/108627fc-4b5a-483c-8bd8-2a6ef425d686_fixed.java
index b5d94e0..dd0d503 100644
--- a/tmp/6d3d6572-fcae-4cc4-a944-70cd7efe32fd_buggy.java
+++ b/tmp/108627fc-4b5a-483c-8bd8-2a6ef425d686_fixed.java
@@ -1,26 +1,31 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while(c != null) {
       traverse(c);
       Node next = c.getNext();
+      if (shouldRetraverse(c)) {
+        // If the child should be retraversed, revisit it immediately.
+        c = next;
+        continue;
+      }
       c = next;
     }
 
     visit(node);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+    Preconditions.checkState(visits < 10000, "too many iterations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
