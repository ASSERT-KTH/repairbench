diff --git a/tmp/79a4cb3c-f662-42de-bf97-57a2161fb0a7_buggy.java b/tmp/c5fa784f-4192-497b-a100-790612d22fdb_fixed.java
index b5d94e0..77c14e4 100644
--- a/tmp/79a4cb3c-f662-42de-bf97-57a2161fb0a7_buggy.java
+++ b/tmp/c5fa784f-4192-497b-a100-790612d22fdb_fixed.java
@@ -1,26 +1,31 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while (c != null) {
         traverse(c);
         Node next = c.getNext();
+        if (shouldRetraverse(c)) {
+          // Revisit the child node if it needs to be retraversed
+          c = c.getFirstChild();
+        } else {
           c = next;
         }
+      }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
