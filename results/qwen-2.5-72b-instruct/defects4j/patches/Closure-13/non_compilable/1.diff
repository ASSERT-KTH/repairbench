diff --git a/tmp/e91651b5-45af-4fbd-8295-7049e172bf95_buggy.java b/tmp/a5276f17-e5ba-41b4-bf16-1a8de99e4056_fixed.java
index b5d94e0..a2041f5 100644
--- a/tmp/e91651b5-45af-4fbd-8295-7049e172bf95_buggy.java
+++ b/tmp/a5276f17-e5ba-41b4-bf16-1a8de99e4056_fixed.java
@@ -1,26 +1,29 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while (c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
     visit(node);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+    // Ensure we do not exceed a reasonable number of iterations
+    Preconditions.checkState(visits < 10000, "too many iterations");
+
+    // Only retraverse if there are changes and the node should be retraversed
+  } while (shouldRetraverse(node) && hasChanges(node));
 
   exitNode(node);
 }
\ No newline at end of file
