diff --git a/tmp/92ea3bbb-720f-483f-87fc-6008839da9c0_buggy.java b/tmp/c7127a8f-76cf-4233-8674-e6df50004677_fixed.java
index 3ec995f..b5b25fe 100644
--- a/tmp/92ea3bbb-720f-483f-87fc-6008839da9c0_buggy.java
+++ b/tmp/c7127a8f-76cf-4233-8674-e6df50004677_fixed.java
@@ -1,26 +1,18 @@
-    /**
-     * <p>
-     * Converts the given Java version string to an <code>int</code>.
-     * </p>
-     * 
-     * <p>
-     * Example return values:
-     * </p>
-     * <ul>
-     * <li><code>120</code> for Java 1.2</li>
-     * <li><code>131</code> for Java 1.3.1</li>
-     * <li><code>160</code> for Java 1.6.0_20</li>
-     * </ul>
-     * 
-     * <p>
-     * Patch releases are not reported.
-     * </p>
-     * <p>
-     * This method is package private instead of private to support unit test invocation.
-     * </p>
-     * 
-     * @return the version, for example 131 for Java 1.3.1
-     */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+static int toJavaVersionInt(String version) {
+    if (version == null || version.isEmpty()) {
+        return 0;
+    }
+
+    String[] parts = version.split("[._ ]+");
+    if (parts.length < 2) {
+        return 0;
+    }
+
+    try {
+        int major = Integer.parseInt(parts[0]);
+        int minor = Integer.parseInt(parts[1]);
+        return major * 100 + minor;
+    } catch (NumberFormatException e) {
+        return 0;
+    }
 }
\ No newline at end of file
