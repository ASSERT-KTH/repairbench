diff --git a/tmp/49f16ac7-b730-4c44-8aa8-d219ce8a848a_buggy.java b/tmp/b7e4a4f9-14d5-46e8-9ae4-a2445603afdd_fixed.java
index 220820e..242f54a 100644
--- a/tmp/49f16ac7-b730-4c44-8aa8-d219ce8a848a_buggy.java
+++ b/tmp/b7e4a4f9-14d5-46e8-9ae4-a2445603afdd_fixed.java
@@ -1,22 +1,22 @@
     /**
      * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
      * @param tableau simple tableau for the problem
      * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
         double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
                 }
             }
         }
         return minRatioPos;
     }
