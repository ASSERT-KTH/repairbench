diff --git a/tmp/c9039a64-c888-413d-9100-018dac1f91bc_buggy.java b/tmp/7c88e492-4ded-4523-a421-96d5f273f194_fixed.java
index 19fd63e..1d54c5b 100644
--- a/tmp/c9039a64-c888-413d-9100-018dac1f91bc_buggy.java
+++ b/tmp/7c88e492-4ded-4523-a421-96d5f273f194_fixed.java
@@ -1,24 +1,35 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          // Check if the expression is a call to a method that could have an implicit 'this'
+          if (maybeExpr.getType() == Token.CALL) {
+            Node target = maybeExpr.getFirstChild();
+            if (target.getType() == Token.GETPROP && target.getChildCount() == 2) {
+              Node object = target.getFirstChild();
+              if (object.getType() == Token.NAME || object.getType() == Token.THIS) {
+                return false;
+              }
+            }
+          }
+          return true;
+        }
       }
     }
 
     return false;
   }
\ No newline at end of file
