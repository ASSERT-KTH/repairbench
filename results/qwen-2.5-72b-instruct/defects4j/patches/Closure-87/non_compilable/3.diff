diff --git a/tmp/a5275695-c3b2-4fd0-90fe-e8ac2807b2f6_buggy.java b/tmp/cdc76a9e-f0c9-4d72-b9f8-c66a85952460_fixed.java
index 19fd63e..fef2db7 100644
--- a/tmp/a5275695-c3b2-4fd0-90fe-e8ac2807b2f6_buggy.java
+++ b/tmp/cdc76a9e-f0c9-4d72-b9f8-c66a85952460_fixed.java
@@ -1,24 +1,33 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          // Check if the expression is a method call
+          if (maybeExpr.isCall() && maybeExpr.getFirstChild().isGetProp()) {
+            // Check if the property name is an event handler
+            String propName = maybeExpr.getFirstChild().getFirstChild().getNext().getString();
+            if (propName.endsWith("change") || propName.endsWith("click") || propName.endsWith("load") || propName.endsWith("unload")) {
+              return false;
+            }
+          }
+          return true;
+        }
       }
     }
 
     return false;
   }
\ No newline at end of file
