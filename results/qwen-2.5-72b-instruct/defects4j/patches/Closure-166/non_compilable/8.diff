diff --git a/tmp/b0aecd0d-6c0c-4a08-9f05-22f686ce2d36_buggy.java b/tmp/ff46ebf2-1401-47a4-aa16-14c0e185c111_fixed.java
index 5f96616..7604ab7 100644
--- a/tmp/b0aecd0d-6c0c-4a08-9f05-22f686ce2d36_buggy.java
+++ b/tmp/ff46ebf2-1401-47a4-aa16-14c0e185c111_fixed.java
@@ -1,20 +1,26 @@
 @Override
 public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
+    // taking each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      ObjectType constraintObjectType = constraint.toObjectType();
+      for (String propName : constraintObjectType.getPropertyNames()) {
+        JSType propType = constraintObjectType.getPropertyType(propName);
+        if (propType != null) {
+          setPropertyType(propName, propType);
+        }
+      }
     }
   }
\ No newline at end of file
