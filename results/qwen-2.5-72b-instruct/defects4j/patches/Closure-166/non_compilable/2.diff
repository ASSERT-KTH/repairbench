diff --git a/tmp/206c70e1-f3ef-4771-ae16-edaaa24d4686_buggy.java b/tmp/747ab025-d974-4805-b4d2-8822621e0cb2_fixed.java
index 5f96616..783a1a0 100644
--- a/tmp/206c70e1-f3ef-4771-ae16-edaaa24d4686_buggy.java
+++ b/tmp/747ab025-d974-4805-b4d2-8822621e0cb2_fixed.java
@@ -1,20 +1,26 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      RecordType recordType = constraint.toRecordType();
+      for (RecordType.Property property : recordType.getProperties()) {
+        JSType propertyType = property.getType();
+        if (propertyType != null) {
+          setPropertyType(property.getName(), propertyType);
+        }
+      }
     }
   }
\ No newline at end of file
