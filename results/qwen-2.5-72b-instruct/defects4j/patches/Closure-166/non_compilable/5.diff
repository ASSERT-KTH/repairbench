diff --git a/tmp/c1e89759-df47-430c-90ad-44e892e3ee47_buggy.java b/tmp/03a08d94-fff8-432e-9a5c-58f670fddcbe_fixed.java
index 5f96616..6b0c043 100644
--- a/tmp/c1e89759-df47-430c-90ad-44e892e3ee47_buggy.java
+++ b/tmp/03a08d94-fff8-432e-9a5c-58f670fddcbe_fixed.java
@@ -1,20 +1,26 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      RecordType recordConstraint = constraint.toRecordType();
+      for (String propertyName : recordConstraint.getPropertyNames()) {
+        JSType propertyType = recordConstraint.getPropertyType(propertyName);
+        if (propertyType != null) {
+          setPropertyType(propertyName, propertyType);
+        }
+      }
     }
   }
\ No newline at end of file
