diff --git a/tmp/f1174fea-78a3-4bef-9585-71fd6e2b9b39_buggy.java b/tmp/a215b57d-78f9-41d1-8053-484839bd0d55_fixed.java
index 5f96616..f5175ed 100644
--- a/tmp/f1174fea-78a3-4bef-9585-71fd6e2b9b39_buggy.java
+++ b/tmp/a215b57d-78f9-41d1-8053-484839bd0d55_fixed.java
@@ -1,20 +1,24 @@
 @Override
 public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      RecordType recordConstraint = constraint.toMaybeRecordType();
+      for (RecordTypeProperty property : recordConstraint.getProperties()) {
+        JSType propertyType = property.getType();
+        setPropertyType(property.getName(), propertyType);
+      }
     }
 }
\ No newline at end of file
