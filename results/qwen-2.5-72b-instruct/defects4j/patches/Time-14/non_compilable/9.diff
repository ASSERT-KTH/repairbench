diff --git a/tmp/ceaaa06f-3ef7-4d9d-a05a-c8dba519ede1_buggy.java b/tmp/026a451c-7194-4ba1-8e7d-994c6f8c68ed_fixed.java
index 10616db..d1fe9b4 100644
--- a/tmp/ceaaa06f-3ef7-4d9d-a05a-c8dba519ede1_buggy.java
+++ b/tmp/026a451c-7194-4ba1-8e7d-994c6f8c68ed_fixed.java
@@ -1,19 +1,24 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] newValues = iChronology.get(partial, instant);
+            // Adjust day if it's out of range for the new month
+            if (newValues[1] > iChronology.dayOfMonth().getMaximumValue(newValues[0], newValues[1], 1, 1)) {
+                newValues[1] = iChronology.dayOfMonth().getMaximumValue(newValues[0], newValues[1], 1, 1);
+            }
+            return newValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
