diff --git a/tmp/09f88596-d62f-4bdf-ba64-8b702ffced3e_buggy.java b/tmp/7e640af2-e1f9-42c2-b80c-0e4e5410f8c5_fixed.java
index 10616db..ed1af59 100644
--- a/tmp/09f88596-d62f-4bdf-ba64-8b702ffced3e_buggy.java
+++ b/tmp/7e640af2-e1f9-42c2-b80c-0e4e5410f8c5_fixed.java
@@ -1,19 +1,27 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] result = iChronology.get(partial, instant);
+            // Adjust for end-of-month issues
+            if (values[fieldIndex] == 29 && partial.getFieldType(fieldIndex).equals(DateTimeFieldType.dayOfMonth())) {
+                int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+                if (result[fieldIndex] > maxDay) {
+                    result[fieldIndex] = maxDay;
+                }
+            }
+            return result;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
