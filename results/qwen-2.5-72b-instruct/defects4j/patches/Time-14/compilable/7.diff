diff --git a/tmp/7982ce45-c2b8-4caf-a05e-32c48051f28d_buggy.java b/tmp/7215aaf0-c187-4695-8052-5adc8ea09cca_fixed.java
index 10616db..499e1da 100644
--- a/tmp/7982ce45-c2b8-4caf-a05e-32c48051f28d_buggy.java
+++ b/tmp/7215aaf0-c187-4695-8052-5adc8ea09cca_fixed.java
@@ -1,19 +1,26 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+        // Adjust the day if it is out of range after adding months
+        int[] adjustedValues = super.add(partial, fieldIndex, values, valueToAdd);
+        int day = adjustedValues[1];
+        int month = adjustedValues[0];
+        int maxDay = iChronology.dayOfMonth().getMaximumValue(iChronology.monthOfYear().set(0L, month));
+        if (day > maxDay) {
+            adjustedValues[1] = maxDay;
+        }
+        return adjustedValues;
     }
 }
\ No newline at end of file
