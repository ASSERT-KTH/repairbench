diff --git a/tmp/9436e15d-59c5-42d8-9a09-b4d5f835792c_buggy.java b/tmp/af392d49-023b-4579-8657-1086eedb27ea_fixed.java
index 10616db..3881358 100644
--- a/tmp/9436e15d-59c5-42d8-9a09-b4d5f835792c_buggy.java
+++ b/tmp/af392d49-023b-4579-8657-1086eedb27ea_fixed.java
@@ -1,19 +1,27 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        
+        // Adjust the day of the month if it's invalid for the resulting month
+        int[] newValues = iChronology.get(partial, instant);
+        int dayOfMonth = newValues[1]; // Assuming day of month is the second value in the array
+        int maxDayOfMonth = iChronology.dayOfMonth().getMaximumValue(iChronology.dayOfMonth().set(instant, dayOfMonth));
+        if (dayOfMonth > maxDayOfMonth) {
+            newValues[1] = maxDayOfMonth;
+        }
+        
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
