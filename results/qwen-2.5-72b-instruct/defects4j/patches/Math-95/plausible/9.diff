diff --git a/tmp/1ef00589-a0f6-472f-94eb-d532bc0d98a5_buggy.java b/tmp/be9411de-8c81-46be-b87c-e2fcf1e16125_fixed.java
index 25c13b3..012803b 100644
--- a/tmp/1ef00589-a0f6-472f-94eb-d532bc0d98a5_buggy.java
+++ b/tmp/be9411de-8c81-46be-b87c-e2fcf1e16125_fixed.java
@@ -1,15 +1,17 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
 protected double getInitialDomain(double p) {
-        double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
+    double ret;
+
+    if (d > 2.0) {
+        // Use the mean for d > 2
         ret = d / (d - 2.0);
+    } else if (d == 2.0) {
+        // For d == 2, the mean is undefined, use a large value as an initial guess
+        ret = 10.0;
+    } else {
+        // For d < 2, the distribution does not have a finite mean, use a large value as an initial guess
+        ret = 10.0;
+    }
+
     return ret;
 }
\ No newline at end of file
