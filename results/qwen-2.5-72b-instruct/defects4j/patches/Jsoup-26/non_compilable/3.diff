diff --git a/tmp/2d904d88-759f-4f40-bef1-aa3b717db404_buggy.java b/tmp/ef8a8bd3-ade5-4ace-9f40-7f7a0844ba67_fixed.java
index f7bc541..a417152 100644
--- a/tmp/2d904d88-759f-4f40-bef1-aa3b717db404_buggy.java
+++ b/tmp/ef8a8bd3-ade5-4ace-9f40-7f7a0844ba67_fixed.java
@@ -1,14 +1,35 @@
+import org.jsoup.nodes.Document;
+import org.jsoup.nodes.Node;
+import org.jsoup.safety.Cleaner;
+import org.jsoup.safety.Whitelist;
+import org.jsoup.helper.Validate;
+
+public class Cleaner {
+
     /**
-     Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.
-     The original document is not modified. Only elements from the dirt document's <code>body</code> are used.
-     @param dirtyDocument Untrusted base document to clean.
-     @return cleaned document.
+     * Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.
+     * The original document is not modified. Only elements from the dirty document's <code>body</code> are used.
+     * @param dirtyDocument Untrusted base document to clean.
+     * @return cleaned document.
      */
     public Document clean(Document dirtyDocument) {
         Validate.notNull(dirtyDocument);
 
         Document clean = Document.createShell(dirtyDocument.baseUri());
-            copySafeNodes(dirtyDocument.body(), clean.body());
+
+        // Copy safe nodes from the dirty document's body to the clean document's body
+        copySafeNodes(dirtyDocument.body(), clean.body(), Whitelist.basic());
 
         return clean;
     }
+
+    private void copySafeNodes(Node source, Node dest, Whitelist whitelist) {
+        for (Node node : source.childNodes()) {
+            if (whitelist.isSafeNode(node)) {
+                Node clonedNode = node.clone();
+                dest.appendChild(clonedNode);
+                copySafeNodes(node, clonedNode, whitelist);
+            }
+        }
+    }
+}
\ No newline at end of file
