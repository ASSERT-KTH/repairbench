diff --git a/tmp/af6201af-a095-4585-a589-7f03f3c50f4c_buggy.java b/tmp/0941749c-81ae-4f49-81df-3fecb29fa430_fixed.java
index e0ecec8..2789772 100644
--- a/tmp/af6201af-a095-4585-a589-7f03f3c50f4c_buggy.java
+++ b/tmp/0941749c-81ae-4f49-81df-3fecb29fa430_fixed.java
@@ -1,35 +1,43 @@
   /**
    * Visits the parameters of a CALL or a NEW node.
    */
   private void visitParameterList(NodeTraversal t, Node call,
       FunctionType functionType) {
     Iterator<Node> arguments = call.children().iterator();
     arguments.next(); // skip the function name
 
-    Iterator<Node> parameters = functionType.getParameters().iterator();
+    List<Parameter> parameters = functionType.getParameters();
+    int numParams = parameters.size();
     int ordinal = 0;
     Node parameter = null;
     Node argument = null;
-    while (arguments.hasNext() &&
-           parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
-        parameter = parameters.next();
+
+    while (arguments.hasNext()) {
+      if (ordinal < numParams) {
+        parameter = parameters.get(ordinal);
+      } else if (functionType.isVarArgs()) {
+        parameter = parameters.get(numParams - 1);
+      } else {
+        parameter = null; // No more parameters to match
+      }
+
       argument = arguments.next();
       ordinal++;
 
+      if (parameter != null) {
         validator.expectArgumentMatchesParameter(t, argument,
             getJSType(argument), getJSType(parameter), call, ordinal);
       }
+    }
 
     int numArgs = call.getChildCount() - 1;
     int minArgs = functionType.getMinArguments();
     int maxArgs = functionType.getMaxArguments();
     if (minArgs > numArgs || maxArgs < numArgs) {
       report(t, call, WRONG_ARGUMENT_COUNT,
               validator.getReadableJSTypeName(call.getFirstChild(), false),
               String.valueOf(numArgs), String.valueOf(minArgs),
               maxArgs != Integer.MAX_VALUE ?
               " and no more than " + maxArgs + " argument(s)" : "");
     }
   }
\ No newline at end of file
