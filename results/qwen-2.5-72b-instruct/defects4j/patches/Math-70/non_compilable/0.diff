diff --git a/tmp/f1e7b1be-0279-46d5-809e-6af570b6b2f7_buggy.java b/tmp/70e5f71c-71e8-4662-b2ec-35ee12cee2ca_fixed.java
index d931bce..e72bbd8 100644
--- a/tmp/f1e7b1be-0279-46d5-809e-6af570b6b2f7_buggy.java
+++ b/tmp/70e5f71c-71e8-4662-b2ec-35ee12cee2ca_fixed.java
@@ -1,5 +1,42 @@
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        // Ensure the interval is valid
+        if (min > max) {
+            throw new IllegalArgumentException("Invalid interval: min must be less than or equal to max");
+        }
+
+        // Ensure the function has different signs at the interval endpoints
+        double fMin = f.value(min);
+        double fMax = f.value(max);
+        if (fMin * fMax >= 0) {
+            throw new IllegalArgumentException("Function values at interval endpoints must have different signs");
+        }
+
+        // Initialize the bisection process
+        double a = min;
+        double b = max;
+        double c = initial;
+
+        int iterations = 0;
+        while (iterations < getMaxIterations()) {
+            c = (a + b) / 2.0;
+            double fC = f.value(c);
+
+            if (fC == 0 || (b - a) / 2.0 < getAbsoluteAccuracy()) {
+                return c;
+            }
+
+            if (fMin * fC < 0) {
+                b = c;
+                fMax = fC;
+            } else {
+                a = c;
+                fMin = fC;
+            }
+
+            iterations++;
+        }
+
+        throw new MaxIterationsExceededException(getMaxIterations());
     }
\ No newline at end of file
