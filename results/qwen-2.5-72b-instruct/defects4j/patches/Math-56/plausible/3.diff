diff --git a/tmp/b99bf09d-25e6-4c9b-84f5-cb88db05606d_buggy.java b/tmp/1ff952de-04cc-4fc9-b7f5-efe57e47bdc5_fixed.java
index 2608424..5e77cdb 100644
--- a/tmp/b99bf09d-25e6-4c9b-84f5-cb88db05606d_buggy.java
+++ b/tmp/1ff952de-04cc-4fc9-b7f5-efe57e47bdc5_fixed.java
@@ -1,39 +1,18 @@
-    /**
-     * Convert to multidimensional counter.
-     *
-     * @param index Index in unidimensional counter.
-     * @return the multidimensional counts.
-     * @throws OutOfRangeException if {@code index} is not between
-     * {@code 0} and the value returned by {@link #getSize()} (excluded).
-     */
 public int[] getCounts(int index) {
     if (index < 0 ||
         index >= totalSize) {
         throw new OutOfRangeException(index, 0, totalSize);
     }
 
     final int[] indices = new int[dimension];
 
-        int count = 0;
+    int remainingIndex = index;
     for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
-            }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
+        indices[i] = remainingIndex / uniCounterOffset[i];
+        remainingIndex = remainingIndex % uniCounterOffset[i];
     }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
+    indices[last] = remainingIndex;
 
     return indices;
 }
\ No newline at end of file
