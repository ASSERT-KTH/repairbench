diff --git a/tmp/ca4e2348-51c5-4705-b7af-0d70c5cc73d8_buggy.java b/tmp/bde6ac6f-5926-4543-aa5f-a982117b020b_fixed.java
index 2608424..b9653c3 100644
--- a/tmp/ca4e2348-51c5-4705-b7af-0d70c5cc73d8_buggy.java
+++ b/tmp/bde6ac6f-5926-4543-aa5f-a982117b020b_fixed.java
@@ -1,39 +1,28 @@
-    /**
-     * Convert to multidimensional counter.
-     *
-     * @param index Index in unidimensional counter.
-     * @return the multidimensional counts.
-     * @throws OutOfRangeException if {@code index} is not between
-     * {@code 0} and the value returned by {@link #getSize()} (excluded).
-     */
 public int[] getCounts(int index) {
     if (index < 0 ||
         index >= totalSize) {
         throw new OutOfRangeException(index, 0, totalSize);
     }
 
     final int[] indices = new int[dimension];
 
     int count = 0;
     for (int i = 0; i < last; i++) {
         int idx = 0;
         final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
+        while (count + idx * offset <= index) {
             ++idx;
         }
         --idx;
-            count -= offset;
+        count += idx * offset;
         indices[i] = idx;
     }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
+    int idx = 0;
+    while (count + idx < index) {
         ++idx;
     }
-        --idx;
-        indices[last] = idx;
+    indices[last] = idx - 1;
 
     return indices;
 }
\ No newline at end of file
