diff --git a/tmp/a392d31f-41b5-4e3c-a7ef-06cb0e2e8c29_buggy.java b/tmp/2f312a2a-f4e2-44ba-9161-6c150e82b68b_fixed.java
index 139579d..fad276c 100644
--- a/tmp/a392d31f-41b5-4e3c-a7ef-06cb0e2e8c29_buggy.java
+++ b/tmp/2f312a2a-f4e2-44ba-9161-6c150e82b68b_fixed.java
@@ -1,43 +1,28 @@
-    // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
     // if both lengths are equal, only need compare the className with the attribute
     if (len == wantLen) {
         return className.equalsIgnoreCase(classAttr);
     }
 
     // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
     int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
+    for (int i = 0; i <= len; i++) {
+        // Check for end of string or whitespace
+        if (i == len || Character.isWhitespace(classAttr.charAt(i))) {
             if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                 return true;
             }
-                    inClass = false;
+            start = i + 1;
         }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
 
     return false;
 }
\ No newline at end of file
