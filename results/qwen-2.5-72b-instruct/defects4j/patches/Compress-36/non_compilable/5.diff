diff --git a/tmp/5d15b229-1979-4e07-b2c7-59267871174a_buggy.java b/tmp/cdd4c847-c6bb-47a3-a9ab-a5b73bd6432f_fixed.java
index d357c7e..6e10a60 100644
--- a/tmp/5d15b229-1979-4e07-b2c7-59267871174a_buggy.java
+++ b/tmp/cdd4c847-c6bb-47a3-a9ab-a5b73bd6432f_fixed.java
@@ -1,16 +1,21 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
     
+    // Ensure that getNextEntry has been called and there is a valid entry
+    if (currentEntry == null) {
+        throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+    }
+    
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder's
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
