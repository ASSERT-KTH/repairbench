diff --git a/tmp/d9272998-6405-471d-ba11-f28548b04b99_buggy.java b/tmp/d2caf22c-5367-4357-b577-8ae0a6623453_fixed.java
index 4bbd561..42d7678 100644
--- a/tmp/d9272998-6405-471d-ba11-f28548b04b99_buggy.java
+++ b/tmp/d2caf22c-5367-4357-b577-8ae0a6623453_fixed.java
@@ -1,37 +1,43 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
+        // Check for the start of a numeric entity
         if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
+            // Check if it's a hexadecimal entity
             char firstChar = input.charAt(start);
             if (firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
 
             int end = start;
-            while(input.charAt(end) != ';') {
+            // Find the end of the numeric entity
+            while (end < input.length() && input.charAt(end) != ';') {
                 end++;
             }
 
+            // Ensure the entity is well-formed
+            if (end < input.length() && input.charAt(end) == ';') {
                 int entityValue;
                 try {
                     if (isHex) {
                         entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                     } else {
                         entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                     }
                 } catch (NumberFormatException nfe) {
                     return 0;
                 }
 
+                // Write the character to the output
                 out.write(entityValue);
                 return 2 + (end - start) + (isHex ? 1 : 0) + 1;
             }
+        }
         return 0;
     }
\ No newline at end of file
