diff --git a/tmp/76fafb5f-7a37-47f2-b078-40c3ed5922c4_buggy.java b/tmp/e59b77e5-56c9-4d2e-b52c-ce842f6605e8_fixed.java
index 800e6e1..3a957e1 100644
--- a/tmp/76fafb5f-7a37-47f2-b078-40c3ed5922c4_buggy.java
+++ b/tmp/e59b77e5-56c9-4d2e-b52c-ce842f6605e8_fixed.java
@@ -1,32 +1,44 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.EXPR_RESULT:
+          if (n.getFirstChild().getType() == Token.ASSIGN && 
+              n.getFirstChild().getFirstChild().getType() == Token.GETPROP) {
+            Node lhs = n.getFirstChild().getFirstChild();
+            Node propNode = lhs.getLastChild();
+            String propName = propNode.getString();
+            Node objNode = lhs.getFirstChild();
+            Scope currentScope = t.getScope();
+            if (objNode.getType() == Token.NAME) {
+              Var var = currentScope.getVar(objNode.getString());
+              if (var != null) {
+                ObjectType objType = (ObjectType) var.getType();
+                if (objType != null) {
+                  JSType propType = n.getLastChild().getJSType();
+                  objType.defineProperty(propName, propType, Property declaration);
+                }
+              }
+            }
+          }
+          break;
       }
     }
\ No newline at end of file
