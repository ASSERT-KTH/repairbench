diff --git a/tmp/be556d78-d000-46aa-8b64-d45215390d23_buggy.java b/tmp/67a578b8-fa9f-4d33-b4c3-1406891a1dc3_fixed.java
index b2d53db..79500fa 100644
--- a/tmp/be556d78-d000-46aa-8b64-d45215390d23_buggy.java
+++ b/tmp/67a578b8-fa9f-4d33-b4c3-1406891a1dc3_fixed.java
@@ -1,34 +1,43 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
         r.advance();
         return;
     }
 
     if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
             default:
                 t.dataBuffer.append(c);
+                if (t.tagPending.getName().equals("script") && c == '-') {
+                    // Handle comments within script tags
+                    StringBuilder comment = new StringBuilder();
+                    while (!r.isEmpty() && r.current() != '>') {
+                        comment.append(r.consume());
+                    }
+                    t.dataBuffer.append(comment.toString());
+                } else {
                     anythingElse(t, r);
+                }
                 break;
         }
     } else {
         anythingElse(t, r);
     }
 }
\ No newline at end of file
