diff --git a/tmp/68c42ea6-a735-4752-9d27-7e09993e4068_buggy.java b/tmp/145f0d3f-cf26-4883-9d91-4cb8845d1cf4_fixed.java
index 00914da..6f9b4d6 100644
--- a/tmp/68c42ea6-a735-4752-9d27-7e09993e4068_buggy.java
+++ b/tmp/145f0d3f-cf26-4883-9d91-4cb8845d1cf4_fixed.java
@@ -1,17 +1,24 @@
-    // does not recurse.
 private void normalise(Element element) {
-        List<Node> toMove = new ArrayList<Node>();
+    List<Node> toMove = new ArrayList<>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+            if (!tn.isBlank()) {
                 toMove.add(tn);
             }
         }
+    }
 
     for (Node node : toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        if (element.childNodes.isEmpty()) {
+            // If the element is now empty, append the text node directly
+            element.appendChild(node);
+        } else {
+            // Otherwise, insert the text node before the first child
+            element getChildNodes().add(0, node);
+        }
+        // Add a space node to separate the text nodes
+        element.appendChild(new TextNode(" ", ""));
     }
 }
\ No newline at end of file
