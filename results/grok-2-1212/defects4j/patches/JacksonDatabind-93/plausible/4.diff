diff --git a/tmp/de8191d9-6c73-46af-8e8e-d6daa11e10ff_buggy.java b/tmp/d82c731b-3408-4788-b5d8-294bc88c7fb4_fixed.java
index 2d9cf24..7929ba2 100644
--- a/tmp/de8191d9-6c73-46af-8e8e-d6daa11e10ff_buggy.java
+++ b/tmp/d82c731b-3408-4788-b5d8-294bc88c7fb4_fixed.java
@@ -1,33 +1,39 @@
 public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
 {
     // There are certain nasty classes that could cause problems, mostly
     // via default typing -- catch them here.
-        final Class<?> raw = type.getRawClass();
-        String full = raw.getName();
+    final Class<?> raw = type != null ? type.getRawClass() : null;
+    String full = raw != null ? raw.getName() : null;
 
     main_check:
+    if (full != null) {
         do {
             if (_cfgIllegalClassNames.contains(full)) {
                 break;
             }
 
             // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
             //    for some Spring framework types
             // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
             if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
+                for (Class<?> cls = raw; cls != null && cls != Object.class; cls = cls.getSuperclass()) {
                     String name = cls.getSimpleName();
                     // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                     if ("AbstractPointcutAdvisor".equals(name)
                             // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                             || "AbstractApplicationContext".equals(name)) {
                         break main_check;
                     }
                 }
             }
             return;
         } while (false);
+    }
 
+    if (full != null) {
         throw JsonMappingException.from(ctxt,
                 String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
+    } else {
+        throw JsonMappingException.from(ctxt, "Illegal type to deserialize: prevented for security reasons (null type)");
+    }
 }
\ No newline at end of file
