diff --git a/tmp/51d7a489-5d1b-4ede-adc9-e046b99d587f_buggy.java b/tmp/f4392ac3-27c2-4a92-a016-8c645fe29b1b_fixed.java
index bc80637..60d0028 100644
--- a/tmp/51d7a489-5d1b-4ede-adc9-e046b99d587f_buggy.java
+++ b/tmp/f4392ac3-27c2-4a92-a016-8c645fe29b1b_fixed.java
@@ -1,33 +1,37 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+            deser = _createEnumKeyDeserializer(ctxt, type);
+        } else {
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
+    }
     // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+    if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
-                    deser = mod.modifyKeyDeserializer(config, type, deser);
+            KeyDeserializer newDeser = mod.modifyKeyDeserializer(config, type, deser);
+            if (newDeser != deser) {
+                deser = newDeser;
+                // If a modifier returns a new deserializer, we should not apply further modifiers
+                break;
             }
         }
     }
     return deser;
 }
\ No newline at end of file
