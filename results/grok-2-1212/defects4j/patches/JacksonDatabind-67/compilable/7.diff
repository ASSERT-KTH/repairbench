diff --git a/tmp/9703d426-44e6-47d1-8b9b-0c2d38ec95ae_buggy.java b/tmp/39e9430f-0004-4215-9abe-f9a0daf253da_fixed.java
index bc80637..275449c 100644
--- a/tmp/9703d426-44e6-47d1-8b9b-0c2d38ec95ae_buggy.java
+++ b/tmp/39e9430f-0004-4215-9abe-f9a0daf253da_fixed.java
@@ -1,33 +1,36 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // Check for custom key deserializer modifications before creating standard ones
     if (deser == null) {
-            if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
-            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
-        }
-        // and then post-processing
-        if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
+                if (deser != null) {
+                    return deser;
+                }
+            }
+        }
     }
+    // Create standard key deserializers if no custom one was found
+    if (deser == null) {
+        if (type.isEnumType()) {
+            return _createEnumKeyDeserializer(ctxt, type);
         }
+        deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
     return deser;
 }
\ No newline at end of file
