diff --git a/tmp/66ded36e-93b1-4683-bdce-bafed81635df_buggy.java b/tmp/8e0f3b5e-ed3c-452a-8280-54bce27277ad_fixed.java
index f650982..4d0a71e 100644
--- a/tmp/66ded36e-93b1-4683-bdce-bafed81635df_buggy.java
+++ b/tmp/8e0f3b5e-ed3c-452a-8280-54bce27277ad_fixed.java
@@ -1,42 +1,64 @@
     /**
      * Compares two values
      */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
         if (l instanceof InitialContext || l instanceof SelfContext) {
             l = ((EvalContext) l).getSingleNodePointer();
         }
 
         if (r instanceof InitialContext || r instanceof SelfContext) {
             r = ((EvalContext) r).getSingleNodePointer();
         }
 
         if (l instanceof Collection) {
             l = ((Collection) l).iterator();
         }
 
         if (r instanceof Collection) {
             r = ((Collection) r).iterator();
         }
 
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
             return contains((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
             return contains((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
-        return equal(l, r);
+
+        // Handle case where one side is a collection and the other is a single value
+        if (l instanceof Collection && !(r instanceof Collection)) {
+            for (Object item : (Collection) l) {
+                if (equal(item, r)) {
+                    return true;
+                }
+            }
+            return false;
+        }
+        if (r instanceof Collection && !(l instanceof Collection)) {
+            for (Object item : (Collection) r) {
+                if (equal(l, item)) {
+                    return true;
+                }
+            }
+            return false;
+        }
+
+        // If none of the above conditions are met, compare directly
+        if (l == null) {
+            return r == null;
+        }
+        if (r == null) {
+            return false;
+        }
+        return l.equals(r);
     }
\ No newline at end of file
