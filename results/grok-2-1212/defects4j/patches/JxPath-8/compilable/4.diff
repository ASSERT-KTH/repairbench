diff --git a/tmp/e030b153-d452-4096-a2e1-e7d2b94a702a_buggy.java b/tmp/1f798015-3177-4343-88c9-06f12024188c_fixed.java
index 98d89dc..5bce468 100644
--- a/tmp/e030b153-d452-4096-a2e1-e7d2b94a702a_buggy.java
+++ b/tmp/1f798015-3177-4343-88c9-06f12024188c_fixed.java
@@ -1,23 +1,33 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
+
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    // Handle NaN cases
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        if (Double.isNaN(ld) && Double.isNaN(rd)) {
+            return evaluateCompare(0); // NaN = NaN should return true
+        }
+        return evaluateCompare(Double.compare(ld, rd)); // All other NaN comparisons return false
+    }
+
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
