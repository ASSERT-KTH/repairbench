diff --git a/tmp/c89e4026-adf2-4a4c-9801-9a64e9da10fb_buggy.java b/tmp/8107ac3f-b501-49c0-bd6b-7b4157d5c96e_fixed.java
index 00914da..ee7ffc8 100644
--- a/tmp/c89e4026-adf2-4a4c-9801-9a64e9da10fb_buggy.java
+++ b/tmp/8107ac3f-b501-49c0-bd6b-7b4157d5c96e_fixed.java
@@ -1,17 +1,21 @@
-    // does not recurse.
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
     for (Node node: element.childNodes) {
-            if (node instanceof TextNode) {
+        if (node instanceof Element) {
+            normalise((Element) node); // Recurse into child elements
+        } else if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
         }
     }
 
     for (Node node: toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        if (element == body()) {
+            body().prependChild(node); // If the current element is body, prepend the node
+        } else {
+            element.prependChild(node); // Otherwise, prepend the node to the current element
+        }
     }
 }
\ No newline at end of file
