diff --git a/tmp/d878f4b5-877d-4a0a-8011-d4cb983bebe3_buggy.java b/tmp/84c80867-e5c1-4476-bb85-1ff218bcec0a_fixed.java
index 00914da..63961a8 100644
--- a/tmp/d878f4b5-877d-4a0a-8011-d4cb983bebe3_buggy.java
+++ b/tmp/84c80867-e5c1-4476-bb85-1ff218bcec0a_fixed.java
@@ -1,17 +1,23 @@
-    // does not recurse.
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
     for (Node node: element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
+        } else if (node instanceof Element) {
+            normalise((Element) node); // Recursively normalize child elements
         }
     }
 
     for (Node node: toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        if (element.tagName().equals("body")) {
+            element.prependChild(node); // Prepend to body
+            element.prependChild(new TextNode(" ", "")); // Add space after prepending
+        } else {
+            body().prependChild(node); // Prepend to body if not already in body
+            body().prependChild(new TextNode(" ", "")); // Add space after prepending
+        }
     }
 }
\ No newline at end of file
