diff --git a/tmp/0a6beb54-0037-4207-ada0-a59ecde7d56c_buggy.java b/tmp/03797945-ecd9-411c-9f8a-fa6b44a94fd4_fixed.java
index 07b0792..bc43e57 100644
--- a/tmp/0a6beb54-0037-4207-ada0-a59ecde7d56c_buggy.java
+++ b/tmp/03797945-ecd9-411c-9f8a-fa6b44a94fd4_fixed.java
@@ -1,22 +1,42 @@
 /**
  * @return Whether the variable is only assigned a value once for its
  *     lifetime.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
-      // Make sure this assignment is not in a loop.
+  // Make sure this assignment is not in a loop or within a function that is called multiple times.
   for (BasicBlock block = ref.getBasicBlock();
        block != null; block = block.getParent()) {
     if (block.isFunction) {
+      // If the assignment is within a function, check if the function is called multiple times.
+      if (isFunctionCalledMultipleTimes(block.getFunction())) {
+        return false;
+      }
       break;
     } else if (block.isLoop) {
       return false;
     }
   }
 
   return true;
 }
+
+// Helper method to check if a function is called multiple times
+private boolean isFunctionCalledMultipleTimes(Function function) {
+  int callCount = 0;
+  for (BasicBlock block : getAllBasicBlocks()) {
+    for (Instruction instruction : block.getInstructions()) {
+      if (instruction.isFunctionCall() && instruction.getCalledFunction() == function) {
+        callCount++;
+        if (callCount > 1) {
+          return true;
+        }
+      }
+    }
+  }
+  return false;
+}
\ No newline at end of file
