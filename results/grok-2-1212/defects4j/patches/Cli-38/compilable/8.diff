diff --git a/tmp/3574a79e-656c-4c0a-bd0d-b878edb4f909_buggy.java b/tmp/ee889909-d71d-4f97-a896-5bc3d524474e_fixed.java
index 81a6e8b..cddecb6 100644
--- a/tmp/3574a79e-656c-4c0a-bd0d-b878edb4f909_buggy.java
+++ b/tmp/ee889909-d71d-4f97-a896-5bc3d524474e_fixed.java
@@ -1,19 +1,33 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
     if (!token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    // remove leading "-"
+    String optName = token.substring(1);
+
+    // Check for concatenated short options
+    for (int i = 0; i < optName.length(); i++) {
+        String shortOpt = optName.substring(i, i + 1);
+        if (options.hasShortOption(shortOpt)) {
+            // If it's the last character or followed by '=', it's a valid short option
+            if (i == optName.length() - 1 || optName.charAt(i + 1) == '=') {
+                return true;
+            }
+            // If it's not the last character and not followed by '=', continue checking
+        } else {
+            // If we encounter a character that's not a valid short option, stop
+            break;
+        }
+    }
+
+    return false;
 }
\ No newline at end of file
