diff --git a/tmp/ea41e223-6fc3-4fac-9df0-74f1f9902d3f_buggy.java b/tmp/95c0499f-fa90-47a9-a778-c5c21c5cdb84_fixed.java
index 800e6e1..409615a 100644
--- a/tmp/ea41e223-6fc3-4fac-9df0-74f1f9902d3f_buggy.java
+++ b/tmp/95c0499f-fa90-47a9-a778-c5c21c5cdb84_fixed.java
@@ -1,32 +1,36 @@
 /**
  * Visit a node in a local scope, and add any local variables or catch
  * parameters into the local symbol table.
  *
  * @param t The node traversal.
  * @param n The node being visited.
  * @param parent The parent of n
  */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
+        // Handle function stubs in local scopes
+        if (n.getFirstChild() == null) {
+          defineFunctionStub(n, parent);
+        }
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file
