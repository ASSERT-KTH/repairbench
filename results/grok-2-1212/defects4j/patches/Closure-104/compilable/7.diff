diff --git a/tmp/bda0b3f0-a2b6-41a3-9e7c-b36baea67e78_buggy.java b/tmp/4fe4c4d2-eaaa-4a69-bb26-6ee2c782940f_fixed.java
index b36b2a9..e7adb50 100644
--- a/tmp/bda0b3f0-a2b6-41a3-9e7c-b36baea67e78_buggy.java
+++ b/tmp/4fe4c4d2-eaaa-4a69-bb26-6ee2c782940f_fixed.java
@@ -1,26 +1,46 @@
 JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
+    boolean addedAlternate = false;
+
     for (JSType alternate : alternates) {
         if (alternate.isSubtype(that)) {
             builder.addAlternate(alternate);
+            addedAlternate = true;
         }
     }
 
     if (that instanceof UnionType) {
         for (JSType otherAlternate : ((UnionType) that).alternates) {
             if (otherAlternate.isSubtype(this)) {
                 builder.addAlternate(otherAlternate);
+                addedAlternate = true;
             }
         }
     } else if (that.isSubtype(this)) {
         builder.addAlternate(that);
+        addedAlternate = true;
     }
+
     JSType result = builder.build();
     if (result != null) {
         return result;
     } else if (this.isObject() && that.isObject()) {
+        // Check if any alternate is an object type
+        for (JSType alternate : alternates) {
+            if (alternate.isObject()) {
                 return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
-    } else {
+            }
+        }
+        if (that instanceof UnionType) {
+            for (JSType alternate : ((UnionType) that).alternates) {
+                if (alternate.isObject()) {
+                    return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
+                }
+            }
+        } else if (that.isObject()) {
+            return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
+        }
+    }
+
     return getNativeType(JSTypeNative.NO_TYPE);
 }
\ No newline at end of file
-  }
