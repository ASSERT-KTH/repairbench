diff --git a/tmp/3345d71d-5a10-45cd-b284-a5f22f20e5f2_buggy.java b/tmp/9a95bfa9-7a19-428b-9206-657b1927aab7_fixed.java
index b36b2a9..7f1fb6b 100644
--- a/tmp/3345d71d-5a10-45cd-b284-a5f22f20e5f2_buggy.java
+++ b/tmp/9a95bfa9-7a19-428b-9206-657b1927aab7_fixed.java
@@ -1,26 +1,37 @@
 JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
+    boolean addedAny = false;
+
     for (JSType alternate : alternates) {
-      if (alternate.isSubtype(that)) {
-        builder.addAlternate(alternate);
+        JSType sub = alternate.getGreatestSubtype(that);
+        if (!sub.isEmptyType()) {
+            builder.addAlternate(sub);
+            addedAny = true;
         }
     }
 
     if (that instanceof UnionType) {
         for (JSType otherAlternate : ((UnionType) that).alternates) {
-        if (otherAlternate.isSubtype(this)) {
-          builder.addAlternate(otherAlternate);
+            JSType sub = otherAlternate.getGreatestSubtype(this);
+            if (!sub.isEmptyType()) {
+                builder.addAlternate(sub);
+                addedAny = true;
             }
         }
-    } else if (that.isSubtype(this)) {
-      builder.addAlternate(that);
+    } else {
+        JSType sub = that.getGreatestSubtype(this);
+        if (!sub.isEmptyType()) {
+            builder.addAlternate(sub);
+            addedAny = true;
         }
+    }
+
     JSType result = builder.build();
-    if (result != null) {
+    if (result != null && !result.isEmptyType()) {
         return result;
-    } else if (this.isObject() && that.isObject()) {
+    } else if (addedAny && this.isObject() && that.isObject()) {
         return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
         return getNativeType(JSTypeNative.NO_TYPE);
     }
 }
\ No newline at end of file
