diff --git a/tmp/7d0e1aa3-8f75-4fde-ac9e-f8d838cbd470_buggy.java b/tmp/17da2eba-7811-4005-a0ac-71b7615e48ba_fixed.java
index 904dba7..492ae77 100644
--- a/tmp/7d0e1aa3-8f75-4fde-ac9e-f8d838cbd470_buggy.java
+++ b/tmp/17da2eba-7811-4005-a0ac-71b7615e48ba_fixed.java
@@ -1,46 +1,47 @@
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
 
       // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
+      // charno == sourceExcerpt.length() means something is missing
       // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+      if (excerpt.equals(LINE)) {
+        if (0 <= charno && charno <= sourceExcerpt.length()) {
           for (int i = 0; i < charno; i++) {
-          char c = sourceExcerpt.charAt(i);
+            char c = i < sourceExcerpt.length() ? sourceExcerpt.charAt(i) : ' ';
             if (Character.isWhitespace(c)) {
               b.append(c);
             } else {
               b.append(' ');
             }
           }
           b.append("^\n");
         }
       }
+    }
     return b.toString();
 }
\ No newline at end of file
