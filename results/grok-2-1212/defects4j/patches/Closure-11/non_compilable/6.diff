diff --git a/tmp/1c7327ce-17b9-474e-b4dc-71130324adca_buggy.java b/tmp/689c8d95-9642-427e-b132-c277af031982_fixed.java
index 57c40b2..f0df04a 100644
--- a/tmp/1c7327ce-17b9-474e-b4dc-71130324adca_buggy.java
+++ b/tmp/689c8d95-9642-427e-b132-c277af031982_fixed.java
@@ -1,27 +1,36 @@
 /**
  * Visits a GETPROP node.
  *
  * @param t The node traversal object that supplies context, such as the
  * scope chain to use in name lookups as well as error reporting.
  * @param n The node being visited.
  * @param parent The parent of <code>n</code>
  */
 private void visitGetProp(NodeTraversal t, Node n, Node parent) {
     // obj.prop or obj.method()
     // Lots of types can appear on the left, a call to a void function can
     // never be on the left. getPropertyType will decide what is acceptable
     // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
 
     if (childType.isDict()) {
         report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
     } else if (n.getJSType() != null && parent.isAssign()) {
         return;
+    } else if (childType.isNullable() && childType.isNullOrUndefined()) {
+        // Check for null or undefined
+        report(t, n, TypeValidator.NULL_OR_UNDEFINED_PROPERTY_ACCESS,
+               "No properties on this expression", "found   : " + childType.toString(),
+               "required: " + getNativeType(OBJECT_TYPE).toString());
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
             "No properties on this expression", getNativeType(OBJECT_TYPE))) {
-      checkPropertyAccess(childType, property.getString(), t, n);
+        if (!checkPropertyAccess(childType, property.getString(), t, n)) {
+            // Report warning if property is not defined
+            report(t, property, TypeValidator.UNDEFINED_PROPERTY,
+                   "Property " + property.getString() + " never defined on " + childType.toString());
+        }
     }
     ensureTyped(t, n);
 }
\ No newline at end of file
