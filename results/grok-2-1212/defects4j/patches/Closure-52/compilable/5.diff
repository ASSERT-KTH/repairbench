diff --git a/tmp/44c25dbe-1247-4039-b518-109c9a8210b5_buggy.java b/tmp/24d0a84a-941b-4659-a3a5-2931a522d4c1_fixed.java
index 4b7f469..20a2922 100644
--- a/tmp/44c25dbe-1247-4039-b518-109c9a8210b5_buggy.java
+++ b/tmp/24d0a84a-941b-4659-a3a5-2931a522d4c1_fixed.java
@@ -1,10 +1,47 @@
 static boolean isSimpleNumber(String s) {
-    int len = s.length();
-    for (int index = 0; index < len; index++) {
+    if (s.isEmpty()) {
+        return false;
+    }
+    
+    int index = 0;
+    if (s.charAt(0) == '0') {
+        if (s.length() == 1) {
+            return true;
+        }
+        if (s.charAt(1) == 'x' || s.charAt(1) == 'X') {
+            // Hexadecimal number
+            if (s.length() == 2) {
+                return false;
+            }
+            index = 2;
+            while (index < s.length()) {
+                char c = s.charAt(index);
+                if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
+                    return false;
+                }
+                index++;
+            }
+            return true;
+        } else if (s.charAt(1) >= '0' && s.charAt(1) <= '7') {
+            // Octal number
+            while (index < s.length()) {
+                char c = s.charAt(index);
+                if (c < '0' || c > '7') {
+                    return false;
+                }
+                index++;
+            }
+            return true;
+        }
+    }
+
+    // Decimal number
+    while (index < s.length()) {
         char c = s.charAt(index);
         if (c < '0' || c > '9') {
             return false;
         }
+        index++;
     }
-    return len > 0;
+    return true;
 }
\ No newline at end of file
