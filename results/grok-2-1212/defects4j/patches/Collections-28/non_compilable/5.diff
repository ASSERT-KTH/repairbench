diff --git a/tmp/1c11540f-99d1-4b22-a052-80daa48f08af_buggy.java b/tmp/917287d4-b04a-47cc-9d8f-8bccb308866d_fixed.java
index e69de29..a35c62c 100644
--- a/tmp/1c11540f-99d1-4b22-a052-80daa48f08af_buggy.java
+++ b/tmp/917287d4-b04a-47cc-9d8f-8bccb308866d_fixed.java
@@ -0,0 +1,30 @@
+@Override
+public SortedMap<K, V> prefixMap(final K prefix) {
+    if (prefix == null) {
+        throw new NullPointerException("Prefix must not be null");
+    }
+
+    final PatriciaTrie<K, V> result = new PatriciaTrie<>(this.keyAnalyzer);
+    final Iterator<Map.Entry<K, V>> iterator = entrySet().iterator();
+    while (iterator.hasNext()) {
+        final Map.Entry<K, V> e = iterator.next();
+        if (keyAnalyzer.isPrefix(prefix, e.getKey())) {
+            result.put(e.getKey(), e.getValue());
+        }
+    }
+
+    // Override clear to properly handle removal from the original trie
+    result.overrideClear = new Runnable() {
+        @Override
+        public void run() {
+            final Iterator<Map.Entry<K, V>> iter = result.entrySet().iterator();
+            while (iter.hasNext()) {
+                final Map.Entry<K, V> entry = iter.next();
+                PatriciaTrie.this.remove(entry.getKey());
+                iter.remove();
+            }
+        }
+    };
+
+    return result;
+}
\ No newline at end of file
