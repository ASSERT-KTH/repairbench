diff --git a/tmp/22669517-920c-47f9-9cf8-e1c28e3a9ef8_buggy.java b/tmp/66481cea-827d-4f7b-aebc-8cb1e9aa73c7_fixed.java
index bada2b6..4c28ed0 100644
--- a/tmp/22669517-920c-47f9-9cf8-e1c28e3a9ef8_buggy.java
+++ b/tmp/66481cea-827d-4f7b-aebc-8cb1e9aa73c7_fixed.java
@@ -1,16 +1,24 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic != null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            return (Class) ((ParameterizedType) actual).getRawType();
+        } else if (actual instanceof GenericArrayType) {
+            Type componentType = ((GenericArrayType) actual).getGenericComponentType();
+            if (componentType instanceof Class) {
+                return java.lang.reflect.Array.newInstance((Class) componentType, 0).getClass();
+            }
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
