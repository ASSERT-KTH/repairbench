diff --git a/tmp/1dbea8b3-083e-4164-a3d5-8e2aeb87edb4_buggy.java b/tmp/bfd6a7fa-f758-4ca4-b7de-d86584097fb5_fixed.java
index bada2b6..a53af37 100644
--- a/tmp/1dbea8b3-083e-4164-a3d5-8e2aeb87edb4_buggy.java
+++ b/tmp/bfd6a7fa-f758-4ca4-b7de-d86584097fb5_fixed.java
@@ -1,16 +1,27 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic != null) {
+        if (generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            if (actual instanceof Class) {
                 return (Class) actual;
-                //in case of nested generics we don't go deep
+            } else if (actual instanceof ParameterizedType) {
+                // Handle nested generics
+                Type nestedActual = ((ParameterizedType) actual).getRawType();
+                if (nestedActual instanceof Class) {
+                    return (Class) nestedActual;
+                }
+            }
+        } else if (generic instanceof Class) {
+            return (Class) generic;
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
