diff --git a/tmp/685865b1-ad47-4c06-9646-6e3fb2baad19_buggy.java b/tmp/c9eaf4d8-8f8d-41b1-b686-0d2f20147244_fixed.java
index bada2b6..9b46f9a 100644
--- a/tmp/685865b1-ad47-4c06-9646-6e3fb2baad19_buggy.java
+++ b/tmp/c9eaf4d8-8f8d-41b1-b686-0d2f20147244_fixed.java
@@ -1,16 +1,24 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic != null) {
+        if (generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            if (actual instanceof Class<?>) {
+                return (Class<?>) actual;
+            } else if (actual instanceof ParameterizedType) {
+                // Handle nested generics
+                return (Class<?>) ((ParameterizedType) actual).getRawType();
+            }
+        } else if (generic instanceof Class<?>) {
+            return (Class<?>) generic;
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
