diff --git a/tmp/3503b1f0-d49d-48b1-8f78-69693bd2eefc_buggy.java b/tmp/b2a81b27-167a-48cb-b25b-20f1a33c2f31_fixed.java
index bada2b6..aace30b 100644
--- a/tmp/3503b1f0-d49d-48b1-8f78-69693bd2eefc_buggy.java
+++ b/tmp/b2a81b27-167a-48cb-b25b-20f1a33c2f31_fixed.java
@@ -1,16 +1,22 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic != null) {
+        if (generic instanceof ParameterizedType) {
+            ParameterizedType parameterizedType = (ParameterizedType) generic;
+            Type rawType = parameterizedType.getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        } else if (generic instanceof Class) {
+            return (Class) generic;
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
