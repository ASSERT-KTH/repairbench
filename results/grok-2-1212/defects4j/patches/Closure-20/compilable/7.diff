diff --git a/tmp/2d60ef01-5aca-4817-8307-6d0c04ee4c08_buggy.java b/tmp/2c111c6f-7588-4e8f-89e1-844c30cc728d_fixed.java
index d4e6d48..62e6833 100644
--- a/tmp/2d60ef01-5aca-4817-8307-6d0c04ee4c08_buggy.java
+++ b/tmp/2c111c6f-7588-4e8f-89e1-844c30cc728d_fixed.java
@@ -1,23 +1,24 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
         callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
+        // Fold String(a) to '' + (a) on any value,
         // which allows further optimizations
         //
         // We can't do this in the general case, because String(a) has
         // slightly different semantics than '' + (a). See
         // http://code.google.com/p/closure-compiler/issues/detail?id=759
         Node value = callTarget.getNext();
-      if (value != null) {
+        if (value != null && value.getNext() == null) {
+            // Only proceed if there's exactly one argument
             Node addition = IR.add(
                 IR.string("").srcref(callTarget),
                 value.detachFromParent());
             n.getParent().replaceChild(n, addition);
             reportCodeChange();
             return addition;
         }
     }
     return n;
 }
\ No newline at end of file
