diff --git a/tmp/3f3e5da5-f54d-4d8f-bcd5-877f3481d86a_buggy.java b/tmp/fe40a36e-55e3-4841-9083-22d01612cb76_fixed.java
index 39dd8e7..78ca2b0 100644
--- a/tmp/3f3e5da5-f54d-4d8f-bcd5-877f3481d86a_buggy.java
+++ b/tmp/fe40a36e-55e3-4841-9083-22d01612cb76_fixed.java
@@ -1,30 +1,39 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
+    if (tq.isEmpty()) {
+        return null;
+    }
+    
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
+    
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
         
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    
+    if (!key.isEmpty()) {
         return Attribute.createFromEncoded(key, value);
-        else {
+    }
+    
+    // Consume any remaining characters that might be part of malformed attributes
+    while (!tq.isEmpty() && !tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace()) {
         tq.consume();
+    }
     
     return null;
 }
\ No newline at end of file
-    }
