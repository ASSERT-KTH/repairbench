diff --git a/tmp/324afeff-49c8-4e7a-a955-68afacc86f8b_buggy.java b/tmp/a8099932-e2f3-437d-8c96-e20924d6de28_fixed.java
index 39dd8e7..674a0ab 100644
--- a/tmp/324afeff-49c8-4e7a-a955-68afacc86f8b_buggy.java
+++ b/tmp/a8099932-e2f3-437d-8c96-e20924d6de28_fixed.java
@@ -1,30 +1,34 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
+    if (tq.isEmpty()) return null; // Early exit if we're at the end of the input
+
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
-                while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+            while (!tq.isEmpty() && !tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+
+    if (key.length() > 0) {
         return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
+    } else {
+        // If we couldn't parse a key, consume the '=' character if it's there
+        if (tq.matchChomp("=")) {
+            tq.consumeTo(">");
+        }
         return null;
     }
 }
\ No newline at end of file
