diff --git a/tmp/804e105d-1082-4413-899a-52a3f5ea81d2_buggy.java b/tmp/3a3ae23a-4f99-4109-9b64-a138391010d2_fixed.java
index 39dd8e7..68fd6dd 100644
--- a/tmp/804e105d-1082-4413-899a-52a3f5ea81d2_buggy.java
+++ b/tmp/3a3ae23a-4f99-4109-9b64-a138391010d2_fixed.java
@@ -1,30 +1,37 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
-        tq.consumeWhitespace();
+
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
+    } else if (!key.isEmpty()) {
+        // If there is no '=' after a key, consider the key itself as the value
+        value = key;
+        key = ""; // Reset key to avoid creating an attribute with a malformed key
     }
-        if (key.length() != 0)
+
+    if (!key.isEmpty()) {
         return Attribute.createFromEncoded(key, value);
-        else {
+    } else {
+        // Consume any remaining characters to move to the next position in the stream
+        if (!tq.isEmpty()) {
             tq.consume();
-                
+        }
         return null;
     }
 }
\ No newline at end of file
