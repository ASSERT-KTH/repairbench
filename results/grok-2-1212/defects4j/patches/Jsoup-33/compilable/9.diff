diff --git a/tmp/da7bf9d7-7aab-4cf3-994f-75c63cb704fc_buggy.java b/tmp/4037beee-ade4-4319-80f0-4de0e048d961_fixed.java
index dc93be3..537c3ec 100644
--- a/tmp/da7bf9d7-7aab-4cf3-994f-75c63cb704fc_buggy.java
+++ b/tmp/4037beee-ade4-4319-80f0-4de0e048d961_fixed.java
@@ -1,14 +1,18 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        if (el.tag().isKnownTag()) {
+            tokeniser.emit(new Token.EndTag(el.tagName()));  // Ensure we get out of whatever state we are in. Emitted for yielded processing
+        } else {
+            tokeniser.acknowledgeSelfClosingFlag();  // For unknown tags, acknowledge the self-closing flag
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
