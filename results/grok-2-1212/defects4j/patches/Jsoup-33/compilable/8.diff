diff --git a/tmp/12b5ff53-3027-4032-9a5f-a5fd3bfcda91_buggy.java b/tmp/27c33029-5922-4e0b-a0e7-a096d25f4769_fixed.java
index dc93be3..f9059fa 100644
--- a/tmp/12b5ff53-3027-4032-9a5f-a5fd3bfcda91_buggy.java
+++ b/tmp/27c33029-5922-4e0b-a0e7-a096d25f4769_fixed.java
@@ -1,14 +1,20 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            if (Tag.isKnownTag(startTag.name()) && Tag.valueOf(startTag.name()).isSelfClosing()) {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
+            } else {
+                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+                insert(el);
+                return el;
+            }
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
