diff --git a/tmp/63bcb76e-99bb-45c9-93bf-8ad79ade4766_buggy.java b/tmp/2cff2bf5-ef51-4a2e-8c09-c7a01bbfad93_fixed.java
index dc93be3..825306a 100644
--- a/tmp/63bcb76e-99bb-45c9-93bf-8ad79ade4766_buggy.java
+++ b/tmp/2cff2bf5-ef51-4a2e-8c09-c7a01bbfad93_fixed.java
@@ -1,14 +1,18 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
+        
+        // Only emit an end tag for non-void elements
+        if (!el.tag().isKnownTag() || !el.tag().isSelfClosing()) {
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
