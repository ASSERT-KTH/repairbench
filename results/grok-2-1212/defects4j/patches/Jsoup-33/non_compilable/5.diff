diff --git a/tmp/3ad3dd84-e350-47cd-985d-0e81bd64b46a_buggy.java b/tmp/dcb5a78f-7c20-40eb-b3e6-145cc8dc40de_fixed.java
index dc93be3..1e143eb 100644
--- a/tmp/3ad3dd84-e350-47cd-985d-0e81bd64b46a_buggy.java
+++ b/tmp/dcb5a78f-7c20-40eb-b3e6-145cc8dc40de_fixed.java
@@ -1,14 +1,19 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (Tag.isKnownTag(startTag.name()) && Tag.valueOf(startTag.name()).isKnownEmptyTag()) {
+            // For known empty tags, insert as empty and don't add a fake end tag
+            return insertEmpty(startTag);
+        } else {
+            // For unknown or non-empty tags, insert as empty but add to stack
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
+    }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
