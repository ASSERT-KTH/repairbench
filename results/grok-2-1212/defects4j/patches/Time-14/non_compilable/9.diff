diff --git a/tmp/42e503f2-0d60-473f-9d44-40f38e3b3234_buggy.java b/tmp/a12f20a6-5d16-4eeb-8f64-dd5ac74871c6_fixed.java
index 10616db..55372cd 100644
--- a/tmp/42e503f2-0d60-473f-9d44-40f38e3b3234_buggy.java
+++ b/tmp/a12f20a6-5d16-4eeb-8f64-dd5ac74871c6_fixed.java
@@ -1,19 +1,32 @@
-    //-----------------------------------------------------------------------
+//---------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        
+        // Adjust the instant by adding the value
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        // Extract new values from the adjusted instant
+        int[] newValues = iChronology.get(partial, instant);
+
+        // Handle special cases for day-of-month adjustments
+        if (partial.getFieldType(fieldIndex).getType() == DateTimeFieldType.dayOfMonth()) {
+            int month = partial.getFieldType(0).get(newValues[0]);
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+            if (newValues[1] > maxDay) {
+                newValues[1] = maxDay;
+            }
+        }
+
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
