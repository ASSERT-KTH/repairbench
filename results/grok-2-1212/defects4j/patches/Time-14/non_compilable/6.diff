diff --git a/tmp/8803e93f-c6d6-4a32-a8fb-2f2367c25b8b_buggy.java b/tmp/85fedc98-df25-41da-ae17-568c008b9c84_fixed.java
index 10616db..930d4a6 100644
--- a/tmp/8803e93f-c6d6-4a32-a8fb-2f2367c25b8b_buggy.java
+++ b/tmp/85fedc98-df25-41da-ae17-568c008b9c84_fixed.java
@@ -1,19 +1,53 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            long newInstant = add(instant, valueToAdd, fieldIndex);
+            return iChronology.get(partial, newInstant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
+
+    private long add(long instant, int valueToAdd, int fieldIndex) {
+        long result = instant;
+        DateTimeField field = getField(fieldIndex);
+        if (fieldIndex == 0) { // Month
+            int monthsToAdd = valueToAdd;
+            while (monthsToAdd != 0) {
+                result = field.add(result,monthsToAdd > 0 ? 1 : -1);
+                monthsToAdd += monthsToAdd > 0 ? -1 : 1;
+            }
+            // Adjust day of month if necessary
+            DateTimeField dayField = iChronology.dayOfMonth();
+            int maxDay = dayField.getMaximumValue(result);
+            if (iChronology.dayOfMonth().get(result) > maxDay) {
+                result = dayField.set(result, maxDay);
+            }
+        } else if (fieldIndex == 1) { // Day
+            result = field.add(result, valueToAdd);
+            // Adjust day of month if necessary
+            DateTimeField monthField = iChronology.monthOfYear();
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(result);
+            if (iChronology.dayOfMonth().get(result) > maxDay) {
+                result = monthField.add(result, 1);
+                result = iChronology.dayOfMonth().set(result, 1);
+            }
+        }
+        return result;
+    }
+
+    private DateTimeField getField(int fieldIndex) {
+        if (fieldIndex == 0) {
+            return iChronology.monthOfYear();
+        } else if (fieldIndex == 1) {
+            return iChronology.dayOfMonth();
+        }
+        throw new IllegalArgumentException("Unsupported field index: " + fieldIndex);
+    }
\ No newline at end of file
