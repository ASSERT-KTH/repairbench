diff --git a/tmp/35a9f602-b115-49cd-9d0b-5d9a65d095e0_buggy.java b/tmp/c8d988af-996f-4315-a936-0d7e98e146e9_fixed.java
index 10616db..1bdeb77 100644
--- a/tmp/35a9f602-b115-49cd-9d0b-5d9a65d095e0_buggy.java
+++ b/tmp/c8d988af-996f-4315-a936-0d7e98e146e9_fixed.java
@@ -1,19 +1,36 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+        long instant = iChronology.set(0L, partial, values);
+        
+        int newValue = 0;
+        switch (partial.getFieldType(fieldIndex).getType()) {
+            case DAY_OF_MONTH:
+                newValue = iChronology.dayOfMonth().add(instant, valueToAdd);
+                break;
+            case MONTH_OF_YEAR:
+                newValue = iChronology.monthOfYear().add(instant, valueToAdd);
+                int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+                if (values[1] > maxDay) {
+                    values[1] = maxDay;
                 }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+                break;
+            default:
+                throw new IllegalArgumentException("Unsupported field type: " + partial.getFieldType(fieldIndex));
+        }
+        
+        int[] newValues = values.clone();
+        newValues[fieldIndex] = newValue;
+        
+        long newInstant = iChronology.set(0L, partial, newValues);
+        return iChronology.get(partial, newInstant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
