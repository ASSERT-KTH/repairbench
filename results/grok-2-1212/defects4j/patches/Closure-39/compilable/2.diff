diff --git a/tmp/07efc668-b7b7-4966-8440-06fad53c9cc3_buggy.java b/tmp/30cc0340-bdf1-4784-a6b8-1578a2d7852f_fixed.java
index e4d90e7..b5e024b 100644
--- a/tmp/07efc668-b7b7-4966-8440-06fad53c9cc3_buggy.java
+++ b/tmp/30cc0340-bdf1-4784-a6b8-1578a2d7852f_fixed.java
@@ -1,45 +1,53 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
   } else if (prettyPrint) {
     // Don't pretty print recursively.
     prettyPrint = false;
 
     // Use a tree set so that the properties are sorted.
     Set<String> propertyNames = Sets.newTreeSet();
-      for (ObjectType current = this;
-           current != null && !current.isNativeObjectType() &&
-               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
-           current = current.getImplicitPrototype()) {
-        propertyNames.addAll(current.getOwnPropertyNames());
-      }
+    gatherAllPropertyNames(propertyNames);
 
     StringBuilder sb = new StringBuilder();
     sb.append("{");
 
     int i = 0;
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
 
       sb.append(property);
       sb.append(": ");
+      if (forAnnotations) {
+        sb.append(getPropertyType(property).toAnnotationString());
+      } else {
         sb.append(getPropertyType(property).toString());
+      }
 
       ++i;
-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+      if (i == MAX_PRETTY_PRINTED_PROPERTIES && i < propertyNames.size()) {
         sb.append(", ...");
         break;
       }
     }
 
     sb.append("}");
 
     prettyPrint = true;
     return sb.toString();
   } else {
     return "{...}";
   }
 }
+
+// Helper method to gather all property names from the object and its prototype chain
+private void gatherAllPropertyNames(Set<String> propertyNames) {
+  for (ObjectType current = this;
+       current != null && !current.isNativeObjectType();
+       current = current.getImplicitPrototype()) {
+    propertyNames.addAll(current.getOwnPropertyNames());
+  }
+}
\ No newline at end of file
