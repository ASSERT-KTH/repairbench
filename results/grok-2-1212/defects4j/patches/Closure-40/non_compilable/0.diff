diff --git a/tmp/5f9ce612-f09f-4ada-8550-936f7e4df202_buggy.java b/tmp/a9e460e7-a8d3-4a6f-a0e8-373e5b4c2d42_fixed.java
index 670114d..8f20e5f 100644
--- a/tmp/5f9ce612-f09f-4ada-8550-936f7e4df202_buggy.java
+++ b/tmp/a9e460e7-a8d3-4a6f-a0e8-373e5b4c2d42_fixed.java
@@ -1,48 +1,62 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
+    if (ns != null) {
       JsName name = getName(ns.name, false);
       if (name != null) {
+        if (ns.onlyAffectsClassDef) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
+        } else if (ns.name.equals("goog.inherits")) {
+          // Handle goog.inherits specifically
+          Node firstArg = n.getSecondChild();
+          Node secondArg = firstArg.getNext();
+          String className = firstArg.getQualifiedName();
+          if (className != null) {
+            JsName classJsName = getName(className, true);
+            if (classJsName != null) {
+              refNodes.add(new ClassDefiningFunctionNode(
+                  classJsName, n, parent, parent.getParent()));
+            }
+          }
+        }
       }
     }
   }
 }
\ No newline at end of file
