diff --git a/tmp/8e28d2b3-150b-409e-8afd-a2ac962c4af2_buggy.java b/tmp/3e164de9-7985-4e15-b290-47f0d9407d7a_fixed.java
index fa6828a..a67642c 100644
--- a/tmp/8e28d2b3-150b-409e-8afd-a2ac962c4af2_buggy.java
+++ b/tmp/3e164de9-7985-4e15-b290-47f0d9407d7a_fixed.java
@@ -1,5 +1,19 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
-        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+    List<Field> fields = orderedInstanceFieldsFrom(awaitingInjectionClazz);
+    // Sort fields by specificity (exact type matches first, then ancestors)
+    fields.sort((f1, f2) -> {
+        Class<?> type1 = f1.getType();
+        Class<?> type2 = f2.getType();
+        if (type1.equals(type2)) return 0;
+        if (type1.isAssignableFrom(type2)) return 1;
+        if (type2.isAssignableFrom(type1)) return -1;
+        return 0; // This case shouldn't happen, but we need to return something
+    });
+
+    for (Field field : fields) {
+        if (mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).injectIfMatches()) {
+            // If a match is found and injected, we don't need to continue searching for this field
+            break;
+        }
     }
 }
\ No newline at end of file
