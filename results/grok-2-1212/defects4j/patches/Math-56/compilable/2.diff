diff --git a/tmp/56c6baaa-4f40-4076-8467-71b82b8b3f99_buggy.java b/tmp/d86709b3-41f9-4fea-a12a-419d31ae7349_fixed.java
index 2608424..2acead6 100644
--- a/tmp/56c6baaa-4f40-4076-8467-71b82b8b3f99_buggy.java
+++ b/tmp/d86709b3-41f9-4fea-a12a-419d31ae7349_fixed.java
@@ -1,39 +1,31 @@
 /**
  * Convert to multidimensional counter.
  *
  * @param index Index in unidimensional counter.
  * @return the multidimensional counts.
  * @throws OutOfRangeException if {@code index} is not between
  * {@code 0} and the value returned by {@link #getSize()} (excluded).
  */
 public int[] getCounts(int index) {
-        if (index < 0 ||
-            index >= totalSize) {
+    if (index < 0 || index >= totalSize) {
         throw new OutOfRangeException(index, 0, totalSize);
     }
 
     final int[] indices = new int[dimension];
 
     int count = 0;
-        for (int i = 0; i < last; i++) {
-            int idx = 0;
+    for (int i = 0; i < dimension; i++) {
         final int offset = uniCounterOffset[i];
+        int idx = 0;
         while (count <= index) {
             count += offset;
             ++idx;
         }
         --idx;
         count -= offset;
         indices[i] = idx;
+        index -= idx * offset;
     }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
-
     return indices;
 }
\ No newline at end of file
