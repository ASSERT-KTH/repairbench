diff --git a/tmp/c5e168c7-da19-403e-8ee4-bbef83b34c98_buggy.java b/tmp/0a77eafa-8ea5-439e-90a1-63dc1ed74bf4_fixed.java
index 2608424..5035ad2 100644
--- a/tmp/c5e168c7-da19-403e-8ee4-bbef83b34c98_buggy.java
+++ b/tmp/0a77eafa-8ea5-439e-90a1-63dc1ed74bf4_fixed.java
@@ -1,39 +1,31 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
-        if (index < 0 ||
-            index >= totalSize) {
+        if (index < 0 || index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
-
         int count = 0;
-        for (int i = 0; i < last; i++) {
+
+        for (int i = 0; i < dimension; i++) {
             int idx = 0;
             final int offset = uniCounterOffset[i];
             while (count <= index) {
+                if (count + offset > index) {
+                    break;
+                }
                 count += offset;
                 ++idx;
             }
-            --idx;
-            count -= offset;
             indices[i] = idx;
         }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
-
         return indices;
     }
\ No newline at end of file
