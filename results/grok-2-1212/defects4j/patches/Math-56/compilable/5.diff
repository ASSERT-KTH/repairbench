diff --git a/tmp/b5d09152-3be0-41e2-8cab-13ea76db6fe4_buggy.java b/tmp/af24f19e-8555-428e-b49a-d5ed0a3aa596_fixed.java
index 2608424..d8859ab 100644
--- a/tmp/b5d09152-3be0-41e2-8cab-13ea76db6fe4_buggy.java
+++ b/tmp/af24f19e-8555-428e-b49a-d5ed0a3aa596_fixed.java
@@ -1,39 +1,33 @@
 /**
  * Convert to multidimensional counter.
  *
  * @param index Index in unidimensional counter.
  * @return the multidimensional counts.
  * @throws OutOfRangeException if {@code index} is not between
  * {@code 0} and the value returned by {@link #getSize()} (excluded).
  */
 public int[] getCounts(int index) {
-        if (index < 0 ||
-            index >= totalSize) {
+    if (index < 0 || index >= totalSize) {
         throw new OutOfRangeException(index, 0, totalSize);
     }
 
     final int[] indices = new int[dimension];
 
     int count = 0;
-        for (int i = 0; i < last; i++) {
+    for (int i = 0; i < dimension; i++) {  // Changed 'last' to 'dimension'
         int idx = 0;
         final int offset = uniCounterOffset[i];
         while (count <= index) {
             count += offset;
             ++idx;
         }
         --idx;
         count -= offset;
         indices[i] = idx;
+        if (i < dimension - 1) {  // Only update index for non-last dimensions
+            index -= idx * offset;
         }
-
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
     }
-        --idx;
-        indices[last] = idx;
 
     return indices;
 }
\ No newline at end of file
