diff --git a/tmp/51e5c62d-30bc-4772-b934-e4705cfa89df_buggy.java b/tmp/8812eb58-9f11-4637-9c36-48a2b1ca7513_fixed.java
index aa351ad..52f0683 100644
--- a/tmp/51e5c62d-30bc-4772-b934-e4705cfa89df_buggy.java
+++ b/tmp/8812eb58-9f11-4637-9c36-48a2b1ca7513_fixed.java
@@ -1,41 +1,44 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
             if (el.hasAttr("disabled")) continue; // skip disabled form inputs
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
 
-
             if ("select".equals(el.normalName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
                 if (!set) {
                     Element option = el.select("option").first();
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
                 // only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
-                    final String val = el.val().length() >  0 ? el.val() : "on";
+                    String val = el.val();
+                    if (val.length() == 0) val = "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
+                } else if ("checkbox".equalsIgnoreCase(type)) {
+                    // Addunchecked checkboxes with default value 'on'
+                    data.add(HttpConnection.KeyVal.create(name, "on"));
                 }
             } else {
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }
\ No newline at end of file
