diff --git a/tmp/d295bf27-d289-4f9f-90dc-9af0416cb57f_buggy.java b/tmp/d035a032-63a9-429f-8da6-6b9af2096606_fixed.java
index aa351ad..624f4b6 100644
--- a/tmp/d295bf27-d289-4f9f-90dc-9af0416cb57f_buggy.java
+++ b/tmp/d035a032-63a9-429f-8da6-6b9af2096606_fixed.java
@@ -1,41 +1,37 @@
 /**
  * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
  * list will not be reflected in the DOM.
  * @return a list of key vals
  */
 public List<Connection.KeyVal> formData() {
     ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
     // iterate the form control elements and accumulate their values
     for (Element el: elements) {
         if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
         if (el.hasAttr("disabled")) continue; // skip disabled form inputs
         String name = el.attr("name");
         if (name.length() == 0) continue;
         String type = el.attr("type");
 
-
         if ("select".equals(el.normalName())) {
-                Elements options = el.select("option[selected]");
+            Elements options = el.select("option");
             boolean set = false;
             for (Element option : options) {
+                if (option.hasAttr("selected") || (!set && !option.hasAttr("selected") && option.siblingElements().select("option[selected]").isEmpty())) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
-                if (!set) {
-                    Element option = el.select("option").first();
-                    if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
             }
         } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
             // only add checkbox or radio if they have the checked attribute
             if (el.hasAttr("checked")) {
                 final String val = el.val().length() > 0 ? el.val() : "on";
                 data.add(HttpConnection.KeyVal.create(name, val));
             }
-            } else {
+        } else if (!"button".equalsIgnoreCase(type) && !"submit".equalsIgnoreCase(type) && !"reset".equalsIgnoreCase(type)) {
             data.add(HttpConnection.KeyVal.create(name, el.val()));
         }
     }
     return data;
 }
\ No newline at end of file
