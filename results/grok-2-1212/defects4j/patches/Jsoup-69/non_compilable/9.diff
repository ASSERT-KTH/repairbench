diff --git a/tmp/d1d7c3bb-4cd2-45a2-b297-9a1e5c169641_buggy.java b/tmp/9da236c0-f50a-4a8b-8e76-ff10a37ee087_fixed.java
index e69de29..7d62ccc 100644
--- a/tmp/d1d7c3bb-4cd2-45a2-b297-9a1e5c169641_buggy.java
+++ b/tmp/9da236c0-f50a-4a8b-8e76-ff10a37ee087_fixed.java
@@ -0,0 +1,34 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+    Elements inputs = this.select("input,textarea,select,button");
+    for (Element el : inputs) {
+        if (!el.tag().isFormSubmittable()) continue; // ignore non-submittable elements
+        if (el.hasAttr("disabled")) continue; // ignore disabled elements
+
+        String name = el.attr("name");
+        if (name.length() == 0) continue;
+
+        String type = el.attr("type").toLowerCase();
+        if ("button".equals(type) || "submit".equals(type)) {
+            if (!el.hasAttr("value") || el.attr("value").length() == 0) continue;
+        }
+
+        if ("select".equals(el.tagName())) {
+            Elements options = el.select("option[selected], option:checked");
+            boolean set = false;
+            for (Element option : options) {
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+                set = true;
+            }
+            if (!set) {
+                Element option = el.selectFirst("option");
+                if (option != null)
+                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+            }
+        } else {
+            data.add(HttpConnection.KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
