diff --git a/tmp/e3cd7d0a-1e62-4146-8620-6a4842a75e7a_buggy.java b/tmp/6895a9df-79c3-4f77-8645-878802240f1a_fixed.java
index 939f49b..1fd411d 100644
--- a/tmp/e3cd7d0a-1e62-4146-8620-6a4842a75e7a_buggy.java
+++ b/tmp/6895a9df-79c3-4f77-8645-878802240f1a_fixed.java
@@ -1,21 +1,26 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        && n.getType() == Token.GETPROP) {
         
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+        // Traverse the chain of GETPROP nodes
+        Node current = n;
+        boolean foundPrototype = false;
         
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        while (current.getType() == Token.GETPROP) {
+            Node propName = current.getLastChild();
+            if (propName.getType() == Token.STRING && propName.getString().equals("prototype")) {
+                foundPrototype = true;
+                break;
+            }
+            current = current.getFirstChild();
+        }
+        
+        // If we found 'prototype' in the chain, it's a prototype property assignment
+        if (foundPrototype) {
             return true;
         }
     }
-      }
 
     return false;
 }
\ No newline at end of file
