diff --git a/tmp/1147c9e5-c16a-4204-97a3-d871e31282f3_buggy.java b/tmp/78b4857a-10df-4afb-ba45-aa1c782677ec_fixed.java
index fecb896..39e6817 100644
--- a/tmp/1147c9e5-c16a-4204-97a3-d871e31282f3_buggy.java
+++ b/tmp/78b4857a-10df-4afb-ba45-aa1c782677ec_fixed.java
@@ -1,34 +1,47 @@
 /**
  * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
  * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
  * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
  * contains text strings; use unescape for that.
  * @param open opener
  * @param close closer
  * @return data matched from the queue
  */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    boolean inSingleQuote = false;
+    boolean inDoubleQuote = false;
+    boolean escaped = false;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
+        
+        if (escaped) {
+            escaped = false;
+        } else if (c == ESC) {
+            escaped = true;
+        } else if (c == '\'' && !inDoubleQuote) {
+            inSingleQuote = !inSingleQuote;
+        } else if (c == '"' && !inSingleQuote) {
+            inDoubleQuote = !inDoubleQuote;
+        } else if (!inSingleQuote && !inDoubleQuote) {
             if (c.equals(open)) {
                 depth++;
                 if (start == -1)
                     start = pos;
-                }
-                else if (c.equals(close))
+            } else if (c.equals(close)) {
                 depth--;
             }
+        }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
+
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
