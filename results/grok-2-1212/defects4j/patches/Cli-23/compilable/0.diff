diff --git a/tmp/960a7d5f-8236-41c0-a927-730c00dbd489_buggy.java b/tmp/87e0b078-13f4-4be4-96f9-840efa750d88_fixed.java
index 227a4ef..ceff266 100644
--- a/tmp/960a7d5f-8236-41c0-a927-730c00dbd489_buggy.java
+++ b/tmp/87e0b078-13f4-4be4-96f9-840efa750d88_fixed.java
@@ -1,48 +1,47 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
+    String remainingText = text.substring(pos).trim();
+    while (!remainingText.isEmpty())
     {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+        remainingText = padding + remainingText;
+        pos = findWrapPos(remainingText, width, 0);
 
         if (pos == -1)
         {
-                sb.append(text);
+            sb.append(remainingText);
+            break;
+        }
+
+        String line = rtrim(remainingText.substring(0, pos));
+        sb.append(line).append(defaultNewLine);
+        remainingText = remainingText.substring(pos).trim();
+    }
 
     return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
 }
\ No newline at end of file
