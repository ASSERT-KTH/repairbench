diff --git a/tmp/4090b021-93e6-4cf5-88f3-1c9099984bcf_buggy.java b/tmp/d5374cba-91bf-4d2c-8b1e-b7e2140e2557_fixed.java
index 227a4ef..fd3cc4d 100644
--- a/tmp/4090b021-93e6-4cf5-88f3-1c9099984bcf_buggy.java
+++ b/tmp/d5374cba-91bf-4d2c-8b1e-b7e2140e2557_fixed.java
@@ -1,48 +1,61 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                         int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
     int lastPos = pos;
+    while (true)
+    {
         text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+        pos = findWrapPos(text, width - nextLineTabStop, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
+        }
+
+        if (pos <= nextLineTabStop)
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            // If the wrap position is within the padding, move to the next word
+            pos = text.indexOf(' ', nextLineTabStop);
+            if (pos == -1)
+            {
+                // If no space found, wrap at the end of the line
+                pos = text.length();
+            }
+        }
+
+        if (pos <= lastPos)
+        {
+            // Prevent infinite loop by forcing a break
+            pos = lastPos + 1;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        lastPos = pos - nextLineTabStop;
     }
 }
\ No newline at end of file
