diff --git a/tmp/bc4afe3d-2611-4f40-b002-64c4a2256ba9_buggy.java b/tmp/d59b5be5-fca1-42de-ad6c-78ddc23e5f23_fixed.java
index 227a4ef..6f8fd43 100644
--- a/tmp/bc4afe3d-2611-4f40-b002-64c4a2256ba9_buggy.java
+++ b/tmp/d59b5be5-fca1-42de-ad6c-78ddc23e5f23_fixed.java
@@ -1,48 +1,46 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
     int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+
+    while (true)
+    {
+        text = padding + text.substring(lastPos).trim();
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
-            } else
+        }
+
+        if (pos <= nextLineTabStop)
+        {
+            // If we can't find a wrapping position after the padding,
+            // we need to force a break at width
+            pos = width;
+        }
+
         if (pos == lastPos)
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            // If no progress was made, force a break at width
+            pos = width;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        lastPos += pos - nextLineTabStop;
     }
 }
\ No newline at end of file
