diff --git a/tmp/80cbbb24-4697-4544-8198-8bd10fa66e56_buggy.java b/tmp/d17548b0-fe79-4c40-b7ec-19869575d3f6_fixed.java
index e69de29..6719f90 100644
--- a/tmp/80cbbb24-4697-4544-8198-8bd10fa66e56_buggy.java
+++ b/tmp/d17548b0-fe79-4c40-b7ec-19869575d3f6_fixed.java
@@ -0,0 +1,31 @@
+@Override
+public JavaType _fromClass(Class<?> clz, TypeBindings bindings)
+{
+    // Existing code...
+    
+    // New code to handle recursive types
+    if (_incompleteType) {
+        // If we're already constructing a type, we might be dealing with a recursive type
+        JavaType existing = _getTypeCache().get(clz);
+        if (existing != null) {
+            return existing;
+        }
+    }
+    
+    // Existing code...
+    
+    // When constructing the super class type, pass the current incomplete type flag
+    if (superClass != null) {
+        JavaType parent = _fromClass(superClass, bindings);
+        if (parent != null) {
+            result = result.withSuperClass(_incompleteType, parent);
+        }
+    }
+    
+    // Existing code...
+    
+    // Cache the result to handle potential recursive references
+    _getTypeCache().put(clz, result);
+    
+    return result;
+}
\ No newline at end of file
