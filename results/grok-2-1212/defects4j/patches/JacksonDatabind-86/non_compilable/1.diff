diff --git a/tmp/b54c36fb-2958-4498-b339-9f47bf0b059d_buggy.java b/tmp/48179760-93fa-4164-a9af-445a1737a149_fixed.java
index e69de29..9ab5610 100644
--- a/tmp/b54c36fb-2958-4498-b339-9f47bf0b059d_buggy.java
+++ b/tmp/48179760-93fa-4164-a9af-445a1737a149_fixed.java
@@ -0,0 +1,34 @@
+public JavaType constructType(Type type, TypeBindings bindings) {
+    if (type instanceof Class<?>) {
+        Class<?> cls = (Class<?>) type;
+        if (cls.isArray()) {
+            return constructArrayType(cls.getComponentType(), bindings);
+        }
+        if (cls.isPrimitive()) {
+            return constructPrimitiveType(cls);
+        }
+        if (cls.isEnum()) {
+            return constructEnumType(cls);
+        }
+        // Handle recursive types
+        JavaType result = _fromClass(cls, bindings);
+        if (result instanceof ResolvedRecursiveType) {
+            // Ensure the type is resolved properly
+            result = ((ResolvedRecursiveType) result).getSelfReferencedType();
+        }
+        return result;
+    }
+    if (type instanceof ParameterizedType) {
+        return constructType((ParameterizedType) type, bindings);
+    }
+    if (type instanceof GenericArrayType) {
+        return constructType((GenericArrayType) type, bindings);
+    }
+    if (type instanceof TypeVariable<?>) {
+        return constructType((TypeVariable<?>) type, bindings);
+    }
+    if (type instanceof WildcardType) {
+        return constructType((WildcardType) type, bindings);
+    }
+    throw new IllegalArgumentException("Unrecognized Type: "+type);
+}
\ No newline at end of file
