diff --git a/tmp/1011eb14-1b62-487a-8677-71f6208cd3bf_buggy.java b/tmp/49bae4bb-3ab4-4ddb-8bce-7215de3e543c_fixed.java
index e69de29..4951153 100644
--- a/tmp/1011eb14-1b62-487a-8677-71f6208cd3bf_buggy.java
+++ b/tmp/49bae4bb-3ab4-4ddb-8bce-7215de3e543c_fixed.java
@@ -0,0 +1,34 @@
+public JavaType constructType(Type type, TypeBindings bindings)
+{
+    // ... existing code ...
+
+    if (resolved instanceof Class<?>) {
+        Class<?> cls = (Class<?>) resolved;
+        if (cls.isArray()) {
+            JavaType componentType = _constructType(cls.getComponentType(), bindings);
+            return TypeFactory.constructArrayType(componentType);
+        }
+        if (cls.isEnum()) {
+            _checkMutableEnum(cls);
+        }
+        if (cls == String.class) {
+            return TypeFactory.STRING_TYPE;
+        }
+        if (cls == Integer.TYPE) {
+            return TypeFactory.INT_TYPE;
+        }
+        // ... other primitive type checks ...
+
+        // Add this block to handle recursive types
+        if (_typeCache.hasPendingType(cls)) {
+            // We have a recursive type, return a placeholder
+            return new ResolvedRecursiveType(cls, bindings);
+        }
+        _typeCache.putPendingType(cls, new SimpleType(cls));
+        JavaType result = _fromClass(cls, bindings);
+        _typeCache.removePendingType(cls);
+        return result;
+    }
+
+    // ... rest of the existing code ...
+}
\ No newline at end of file
