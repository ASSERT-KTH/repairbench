diff --git a/tmp/83096e7d-d028-4364-81c5-c82e7fa0c170_buggy.java b/tmp/edb27d42-30c8-47ca-a3c9-209eb58e0bb6_fixed.java
index 8e93a5e..6f5a3c8 100644
--- a/tmp/83096e7d-d028-4364-81c5-c82e7fa0c170_buggy.java
+++ b/tmp/edb27d42-30c8-47ca-a3c9-209eb58e0bb6_fixed.java
@@ -1,43 +1,36 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
+    String[] lines = text.split("\\r?\\n");
+    String padding = createPadding(nextLineTabStop);
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
+    for (int i = 0; i < lines.length; i++) {
+        String line = lines[i];
+        int pos = findWrapPos(line, width, 0);
 
-            return sb;
+        while (pos != -1) {
+            sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+            line = line.substring(pos).trim();
+            pos = findWrapPos(line, width, nextLineTabStop);
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
 
-                return sb;
+        if (i < lines.length - 1) {
+            sb.append((i == 0 ? "" : padding) + rtrim(line)).append(defaultNewLine);
+        } else {
+            sb.append((i == 0 ? "" : padding) + rtrim(line));
         }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
+
+    return sb;
 }
\ No newline at end of file
