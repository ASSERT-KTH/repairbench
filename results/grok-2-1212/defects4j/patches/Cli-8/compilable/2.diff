diff --git a/tmp/1121c3d3-cedd-454a-964f-bf96bc4daeef_buggy.java b/tmp/f857561c-9797-4ee3-a9e4-391b586b1883_fixed.java
index 8e93a5e..2d5a7cc 100644
--- a/tmp/1121c3d3-cedd-454a-964f-bf96bc4daeef_buggy.java
+++ b/tmp/f857561c-9797-4ee3-a9e4-391b586b1883_fixed.java
@@ -1,43 +1,51 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
     
+    // Handle existing newlines
+    int newlinePos = text.indexOf(defaultNewLine);
+    if (newlinePos != -1 && newlinePos <= pos) {
+        sb.append(text.substring(0, newlinePos + defaultNewLine.length()));
+        renderWrappedText(sb, width, nextLineTabStop, text.substring(newlinePos + defaultNewLine.length()));
+        return sb;
+    }
+
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // all following lines must be padded with nextLineTabStop space characters
     final String padding = createPadding(nextLineTabStop);
 
+    String remainingText = text.substring(pos).trim();
     while (true)
     {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        String paddedText = padding + remainingText;
+        pos = findWrapPos(paddedText, width, nextLineTabStop);
 
         if (pos == -1)
         {
-                sb.append(text);
-
+            sb.append(paddedText);
             return sb;
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        sb.append(rtrim(paddedText.substring(0, pos))).append(defaultNewLine);
+        remainingText = paddedText.substring(pos).trim();
     }
 }
\ No newline at end of file
