diff --git a/tmp/5b88ab8b-2e44-4eed-b703-e18cb0d4e284_buggy.java b/tmp/8f08deb5-54bb-4595-b095-1f4bb1bb0715_fixed.java
index 8e93a5e..a04e373 100644
--- a/tmp/5b88ab8b-2e44-4eed-b703-e18cb0d4e284_buggy.java
+++ b/tmp/8f08deb5-54bb-4595-b095-1f4bb1bb0715_fixed.java
@@ -1,43 +1,40 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
+    String[] lines = text.split("\\r?\\n");
+    String padding = createPadding(nextLineTabStop);
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
+    for (int i = 0; i < lines.length; i++) {
+        String line = lines[i];
+        int pos = findWrapPos(line, width, i == 0 ? 0 : nextLineTabStop);
 
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
+        while (pos != -1) {
+            sb.append(rtrim(line.substring(0, pos)));
+            line = line.substring(pos).trim();
+            pos = findWrapPos(line, width, nextLineTabStop);
 
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            if (pos != -1) {
+                sb.append(defaultNewLine).append(padding);
+            }
+        }
 
-            if (pos == -1)
-            {
-                sb.append(text);
+        sb.append(rtrim(line));
 
-                return sb;
+        if (i < lines.length - 1) {
+            sb.append(defaultNewLine).append(padding);
         }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
+
+    return sb;
 }
\ No newline at end of file
