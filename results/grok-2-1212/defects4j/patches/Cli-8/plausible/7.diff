diff --git a/tmp/50a4c560-d41d-4dad-84c5-aa0b06dae75b_buggy.java b/tmp/31391785-d6b5-4681-ac30-08e63bf5be17_fixed.java
index 8e93a5e..5e4fbf1 100644
--- a/tmp/50a4c560-d41d-4dad-84c5-aa0b06dae75b_buggy.java
+++ b/tmp/31391785-d6b5-4681-ac30-08e63bf5be17_fixed.java
@@ -1,43 +1,52 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
+    // Handle the case where the input text is empty
+    if (text.isEmpty()) {
+        return sb;
+    }
+
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
+    String remainingText = text.substring(pos).trim();
+    while (!remainingText.isEmpty())
     {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        remainingText = padding + remainingText;
+        pos = findWrapPos(remainingText, width, 0);
 
         if (pos == -1)
         {
-                sb.append(text);
+            sb.append(remainingText);
 
             return sb;
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        sb.append(rtrim(remainingText.substring(0, pos))).append(defaultNewLine);
+        remainingText = remainingText.substring(pos).trim();
     }
+
+    return sb;
 }
\ No newline at end of file
