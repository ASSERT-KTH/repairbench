diff --git a/tmp/1ed0f30a-de70-4f7e-a385-8631f976d294_buggy.java b/tmp/043f8898-2d31-4b71-ab2d-aa4a9d81d7e1_fixed.java
index b4af58a..7203cff 100644
--- a/tmp/1ed0f30a-de70-4f7e-a385-8631f976d294_buggy.java
+++ b/tmp/043f8898-2d31-4b71-ab2d-aa4a9d81d7e1_fixed.java
@@ -1,53 +1,60 @@
 /**
  * Creates a new timeseries by copying a subset of the data in this time
  * series.
  *
  * @param start  the first time period to copy (<code>null</code> not
  *         permitted).
  * @param end  the last time period to copy (<code>null</code> not
  *         permitted).
  *
  * @return A time series containing a copy of this time series from start
  *         until end.
  *
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
 public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
     throws CloneNotSupportedException {
 
     if (start == null) {
         throw new IllegalArgumentException("Null 'start' argument.");
     }
     if (end == null) {
         throw new IllegalArgumentException("Null 'end' argument.");
     }
     if (start.compareTo(end) > 0) {
         throw new IllegalArgumentException(
                 "Requires start on or before end.");
     }
-        boolean emptyRange = false;
+
     int startIndex = getIndex(start);
+    int endIndex = getIndex(end);
+
+    // If start or end periods are not found in the series
     if (startIndex < 0) {
         startIndex = -(startIndex + 1);
-            if (startIndex == this.data.size()) {
-                emptyRange = true;  // start is after last data item
-            }
+        if (startIndex >= this.data.size()) {
+            // Start is after last data item
+            TimeSeries copy = (TimeSeries) super.clone();
+            copy.data = new java.util.ArrayList();
+            return copy;
         }
-        int endIndex = getIndex(end);
-        if (endIndex < 0) {             // end period is not in original series
-            endIndex = -(endIndex + 1); // this is first item AFTER end period
-            endIndex = endIndex - 1;    // so this is last item BEFORE end
     }
     if (endIndex < 0) {
-            emptyRange = true;
+        endIndex = -(endIndex + 1) - 1;
+        if (endIndex < 0) {
+            // End is before first data item
+            TimeSeries copy = (TimeSeries) super.clone();
+            copy.data = new java.util.ArrayList();
+            return copy;
+        }
     }
-        if (emptyRange) {
+
+    // If the range is empty (startIndex > endIndex)
+    if (startIndex > endIndex) {
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
         return copy;
     }
-        else {
+
     return createCopy(startIndex, endIndex);
 }
\ No newline at end of file
-
-    }
