diff --git a/tmp/d77bf9c6-627f-4797-982d-abd93300db42_buggy.java b/tmp/94cbb063-064b-483e-a41c-9074047a118f_fixed.java
index 57f69c5..9ffe90b 100644
--- a/tmp/d77bf9c6-627f-4797-982d-abd93300db42_buggy.java
+++ b/tmp/94cbb063-064b-483e-a41c-9074047a118f_fixed.java
@@ -1,12 +1,22 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+      // Check if the node is a FUNCTION or DO
+      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+          return true;
+      }
+      
+      // Check if the node is a LABEL and its first child is a FUNCTION or DO
+      if (n.getType() == Token.LABEL) {
+          Node firstChild = n.getFirstChild();
+          if (firstChild != null && (firstChild.getType() == Token.FUNCTION || firstChild.getType() == Token.DO)) {
+              // Ensure there are no extraneous BLOCKs
+              Node nextSibling = firstChild.getNext();
+              return nextSibling == null || (nextSibling.getType() != Token.BLOCK || nextSibling.getChildCount() == 0);
+          }
+      }
+      
+      return false;
   }
\ No newline at end of file
