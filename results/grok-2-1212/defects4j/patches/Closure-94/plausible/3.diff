diff --git a/tmp/e59713b8-606d-46cb-a5f4-b353c869a32f_buggy.java b/tmp/16512057-5c65-487a-9ec2-035137deb34e_fixed.java
index 66e3d01..289f169 100644
--- a/tmp/e59713b8-606d-46cb-a5f4-b353c869a32f_buggy.java
+++ b/tmp/16512057-5c65-487a-9ec2-035137deb34e_fixed.java
@@ -1,34 +1,38 @@
 /**
  * Determines whether the given value may be assigned to a define.
  *
  * @param val The value being assigned.
  * @param defines The list of names of existing defines.
  */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
         case Token.STRING:
         case Token.NUMBER:
         case Token.TRUE:
         case Token.FALSE:
             return true;
 
         // Binary operators are only valid if both children are valid.
         case Token.BITAND:
         case Token.BITNOT:
         case Token.BITOR:
         case Token.BITXOR:
+        case Token.ADD:
+        case Token.SUB:
+            return isValidDefineValue(val.getFirstChild(), defines) &&
+                   isValidDefineValue(val.getLastChild(), defines);
 
         // Uniary operators are valid if the child is valid.
         case Token.NOT:
         case Token.NEG:
             return isValidDefineValue(val.getFirstChild(), defines);
 
         // Names are valid if and only if they are defines themselves.
         case Token.NAME:
         case Token.GETPROP:
             if (val.isQualifiedName()) {
                 return defines.contains(val.getQualifiedName());
             }
     }
     return false;
 }
\ No newline at end of file
