diff --git a/tmp/9e668543-6a41-41d4-82db-a9d79309850f_buggy.java b/tmp/d5aba116-caeb-4b06-9862-5db2476853f5_fixed.java
index 98b456f..55f0041 100644
--- a/tmp/9e668543-6a41-41d4-82db-a9d79309850f_buggy.java
+++ b/tmp/d5aba116-caeb-4b06-9862-5db2476853f5_fixed.java
@@ -1,17 +1,27 @@
 final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
     final int sz = size;
     for (int i = 0; i < sz; i++) {
         // inlined from Attribute.html()
         final String key = keys[i];
         final String val = vals[i];
         accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+        // Handle boolean attributes correctly
+        if (Attribute.isBooleanAttribute(key)) {
+            if (val == null || val.isEmpty() || val.equalsIgnoreCase(key)) {
+                // For boolean attributes, only output the key if value is null, empty, or equal to key
+                continue;
+            } else {
+                // If a boolean attribute has a non-standard value, output it as a regular attribute
+                accum.append("=\"");
+                Entities.escape(accum, val, out, true, false, false);
+                accum.append('"');
+            }
+        } else {
+            // For non-boolean attributes, always output the value
             accum.append("=\"");
             Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
             accum.append('"');
         }
     }
 }
\ No newline at end of file
