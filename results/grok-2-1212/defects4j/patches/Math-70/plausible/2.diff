diff --git a/tmp/bbafed56-29d4-4888-a65f-cfc5620b3b80_buggy.java b/tmp/f0cd2cb2-9429-49ec-9458-15f9516cf42d_fixed.java
index d931bce..93ca4b2 100644
--- a/tmp/bbafed56-29d4-4888-a65f-cfc5620b3b80_buggy.java
+++ b/tmp/f0cd2cb2-9429-49ec-9458-15f9516cf42d_fixed.java
@@ -1,5 +1,44 @@
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        // Use the provided initial value as the starting point for bisection
+        double x = initial;
+        
+        // Check the sign of the function at the endpoints
+        double fMin = f.value(min);
+        double fMax = f.value(max);
+        
+        // Ensure the function has opposite signs at the endpoints
+        if (fMin * fMax >= 0) {
+            throw new IllegalArgumentException("Function must have opposite signs at endpoints.");
+        }
+        
+        // Bisection loop
+        for (int i = 0; i < maximalIterationCount; i++) {
+            double fValue = f.value(x);
+            
+            if (fValue == 0.0) {
+                // Exact solution found
+                return x;
+            } else if (fValue * fMin < 0) {
+                // The solution is in the lower half
+                max = x;
+                fMax = fValue;
+            } else {
+                // The solution is in the upper half
+                min = x;
+                fMin = fValue;
+            }
+            
+            // Update x to the midpoint
+            x = (min + max) / 2;
+            
+            // Check for convergence
+            if (Math.abs(max - min) <= absoluteAccuracy) {
+                return x;
+            }
+        }
+        
+        // Maximum iterations reached without convergence
+        throw new MaxIterationsExceededException(maximalIterationCount);
     }
\ No newline at end of file
