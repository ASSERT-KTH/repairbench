diff --git a/tmp/31ea034b-5687-46f3-a4bf-3bbb45879a1a_buggy.java b/tmp/01cee677-ea8d-4278-b7f6-2a70b3668b71_fixed.java
index 220820e..5d738a1 100644
--- a/tmp/31ea034b-5687-46f3-a4bf-3bbb45879a1a_buggy.java
+++ b/tmp/01cee677-ea8d-4278-b7f6-2a70b3668b71_fixed.java
@@ -1,22 +1,25 @@
     /**
      * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
      * @param tableau simple tableau for the problem
      * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
         double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {  // Changed to strict inequality
+                if (MathUtils.compareTo(rhs, 0, epsilon) <= 0) {  // Handle zero or negative rhs
+                    continue;
+                }
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i; 
                 }
             }
         }
         return minRatioPos;
     }
\ No newline at end of file
