diff --git a/tmp/ae0302e4-a28a-48e8-9781-7c219a69a254_buggy.java b/tmp/fd5f09be-7909-4ea1-bfa3-2b65434b0618_fixed.java
index de9af32..882e08a 100644
--- a/tmp/ae0302e4-a28a-48e8-9781-7c219a69a254_buggy.java
+++ b/tmp/fd5f09be-7909-4ea1-bfa3-2b65434b0618_fixed.java
@@ -1,18 +1,24 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node callee = node.getFirstChild();
+    if (callee.getType() == Token.GETPROP) {
+      // Handle method calls like 'initialize.call'
+      Node methodName = callee.getLastChild();
+      if (methodName.getType() == Token.STRING) {
+        changed.add(methodName.getString());
+      }
+    } else if (callee.getType() == Token.NAME) {
+      changed.add(callee.getString());
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
