diff --git a/tmp/85ca3a44-3759-4723-bc5e-33e56518aada_buggy.java b/tmp/7978f378-ae76-489f-a3e8-f9fe1708e9fa_fixed.java
index de9af32..d8db1cb 100644
--- a/tmp/85ca3a44-3759-4723-bc5e-33e56518aada_buggy.java
+++ b/tmp/7978f378-ae76-489f-a3e8-f9fe1708e9fa_fixed.java
@@ -1,18 +1,23 @@
 /**
  * @see #findCalledFunctions(Node)
  */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
         Node child = node.getFirstChild();
         if (child.getType() == Token.NAME) {
             changed.add(child.getString());
+        } else if (child.getType() == Token.GETPROP) {
+            // Handle cases like 'initialize.call(this, options)'
+            Node propChild = child.getFirstChild();
+            if (propChild.getNext() != null && propChild.getNext().getType() == Token.STRING) {
+                changed.add(propChild.getNext().getString());
+            }
         }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
         findCalledFunctions(c, changed);
     }
 }
\ No newline at end of file
