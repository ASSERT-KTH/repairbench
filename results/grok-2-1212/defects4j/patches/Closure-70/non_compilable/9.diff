diff --git a/tmp/159829d8-c653-4b60-aed8-2f4b0f5d860d_buggy.java b/tmp/41e61d52-8d46-491d-9e8f-924a1ecee874_fixed.java
index 1530b34..c8586ec 100644
--- a/tmp/159829d8-c653-4b60-aed8-2f4b0f5d860d_buggy.java
+++ b/tmp/41e61d52-8d46-491d-9e8f-924a1ecee874_fixed.java
@@ -1,23 +1,40 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          // Define the argument as a slot in the function's scope
+          defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);
+          
+          // Check if the parameter name already exists in the function's scope
+          String paramName = astParameter.getString();
+          if (functionNode.getScope().isDeclared(paramName, true)) {
+            report(t, REDECLARED_VARIABLE, astParameter, paramName);
+          } else {
+            // Add the parameter to the function's scope
+            functionNode.getScope().declare(paramName, astParameter, jsDocParameter.getJSType(), true);
+          }
+          
           jsDocParameter = jsDocParameter.getNext();
         } else {
+          // Handle case where there are more AST parameters than JSDoc parameters
           defineSlot(astParameter, functionNode, null, true);
+          String paramName = astParameter.getString();
+          if (functionNode.getScope().isDeclared(paramName, true)) {
+            report(t, REDECLARED_VARIABLE, astParameter, paramName);
+          } else {
+            functionNode.getScope().declare(paramName, astParameter, null, true);
+          }
         }
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
