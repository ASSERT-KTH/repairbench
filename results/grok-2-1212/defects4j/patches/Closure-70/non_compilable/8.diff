diff --git a/tmp/b66a9dd5-4277-44e1-923f-1d1fc55e20e4_buggy.java b/tmp/1bd5b0f2-d842-442f-911c-e36a8d16c405_fixed.java
index 1530b34..7db6179 100644
--- a/tmp/b66a9dd5-4277-44e1-923f-1d1fc55e20e4_buggy.java
+++ b/tmp/1bd5b0f2-d842-442f-911c-e36a8d16c405_fixed.java
@@ -1,23 +1,61 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
     Node astParameters = functionNode.getFirstChild().getNext();
     Node body = astParameters.getNext();
     FunctionType functionType = (FunctionType) functionNode.getJSType();
+    
     if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
             Node jsDocParameter = jsDocParameters.getFirstChild();
             for (Node astParameter : astParameters.children()) {
+                String paramName = astParameter.getString();
+                
+                // Check if the parameter already exists in the scope
+                if (scope.isDeclared(paramName, true)) {
+                    report(WarningLevel.WARNING, JSC_DUP_VAR_DECLARATION, 
+                        "variable " + paramName + " redefined", 
+                        astParameter.getSourceFileName(), 
+                        astParameter.getLineno(), 
+                        astParameter.getCharno());
+                } else {
+                    JSType paramType = null;
                     if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                        paramType = jsDocParameter.getJSType();
                         jsDocParameter = jsDocParameter.getNext();
+                    }
+                    
+                    defineSlot(astParameter, functionNode, paramType, true);
+                }
+            }
+        } else {
+            // If no JSDoc parameters, declare all AST parameters without type
+            for (Node astParameter : astParameters.children()) {
+                if (scope.isDeclared(astParameter.getString(), true)) {
+                    report(WarningLevel.WARNING, JSC_DUP_VAR_DECLARATION, 
+                        "variable " + astParameter.getString() + " redefined", 
+                        astParameter.getSourceFileName(), 
+                        astParameter.getLineno(), 
+                        astParameter.getCharno());
                 } else {
                     defineSlot(astParameter, functionNode, null, true);
                 }
             }
         }
+    } else {
+        // If no function type, declare all AST parameters without type
+        for (Node astParameter : astParameters.children()) {
+            if (scope.isDeclared(astParameter.getString(), true)) {
+                report(WarningLevel.WARNING, JSC_DUP_VAR_DECLARATION, 
+                    "variable " + astParameter.getString() + " redefined", 
+                    astParameter.getSourceFileName(), 
+                    astParameter.getLineno(), 
+                    astParameter.getCharno());
+            } else {
+                defineSlot(astParameter, functionNode, null, true);
+            }
+        }
     }
 } // end declareArguments
\ No newline at end of file
