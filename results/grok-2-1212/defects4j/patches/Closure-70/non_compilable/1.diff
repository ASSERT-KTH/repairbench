diff --git a/tmp/ff2d937b-e828-441f-93c3-05e1604f8dfa_buggy.java b/tmp/a3bd7d1b-c1d5-4519-960a-4f00a41f6f25_fixed.java
index 1530b34..c84f1bd 100644
--- a/tmp/ff2d937b-e828-441f-93c3-05e1604f8dfa_buggy.java
+++ b/tmp/a3bd7d1b-c1d5-4519-960a-4f00a41f6f25_fixed.java
@@ -1,23 +1,35 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
+  
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          // Define the slot, but mark it as readOnly to prevent redeclaration
+          defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), false);
           jsDocParameter = jsDocParameter.getNext();
         } else {
-              defineSlot(astParameter, functionNode, null, true);
+          // If no JSDoc type is available, use null type and mark as readOnly
+          defineSlot(astParameter, functionNode, null, false);
         }
       }
+    } else {
+      // If no JSDoc parameters are available, declare all parameters without types
+      for (Node astParameter : astParameters.children()) {
+        defineSlot(astParameter, functionNode, null, false);
+      }
+    }
+  } else {
+    // If function type is null, declare all parameters without types
+    for (Node astParameter : astParameters.children()) {
+      defineSlot(astParameter, functionNode, null, false);
     }
   }
 } // end declareArguments
\ No newline at end of file
