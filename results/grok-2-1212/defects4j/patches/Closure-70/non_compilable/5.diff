diff --git a/tmp/dd39e123-d179-4444-a523-bf7aa070f623_buggy.java b/tmp/a79a5208-7848-4ee7-9c02-12292defed69_fixed.java
index 1530b34..0e19598 100644
--- a/tmp/dd39e123-d179-4444-a523-bf7aa070f623_buggy.java
+++ b/tmp/a79a5208-7848-4ee7-9c02-12292defed69_fixed.java
@@ -1,23 +1,31 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          // Check if the parameter already exists in the scope
+          String paramName = astParameter.getString();
+          Node existingVar = scope.search(paramName, false);
+          if (existingVar != null) {
+            // If the variable already exists, report an error
+            reportRedeclaration(astParameter, existingVar);
+          } else {
+            // Define the new slot
+            defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);
+          }
           jsDocParameter = jsDocParameter.getNext();
         } else {
           defineSlot(astParameter, functionNode, null, true);
         }
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
