diff --git a/tmp/abd24dd6-7dee-41ea-badc-3c16d2ad0142_buggy.java b/tmp/c8588b29-41e3-4414-9ef7-e7c10064266a_fixed.java
index a6f008f..ebc5539 100644
--- a/tmp/abd24dd6-7dee-41ea-badc-3c16d2ad0142_buggy.java
+++ b/tmp/c8588b29-41e3-4414-9ef7-e7c10064266a_fixed.java
@@ -1,11 +1,40 @@
 /**
  * Method that can be called on backends that support passing opaque datatypes of
  * non-JSON formats
  *
  * @since 2.8
  */
 public void writeEmbeddedObject(Object object) throws IOException {
-        // 01-Sep-2016, tatu: As per [core#318], handle small number of cases
-        throw new JsonGenerationException("No native support for writing embedded objects",
-                this);
+    if (object == null) {
+        writeNull();
+    } else if (object instanceof byte[]) {
+        writeBinary((byte[]) object);
+    } else {
+        throw new JsonGenerationException("No native support for writing embedded objects of type " + object.getClass().getName(), this);
+    }
+}
+
+private void writeNull() throws IOException {
+    _verifyValueWrite("write null value");
+    _cfgPrettyPrinter.writeNull(this);
+    _writeNull();
+}
+
+private void writeBinary(byte[] data) throws IOException {
+    _verifyValueWrite("write binary value");
+    if (data == null) {
+        writeNull();
+        return;
+    }
+    _writeBinary(data, 0, data.length);
+}
+
+private void _writeBinary(byte[] data, int offset, int len) throws IOException {
+    _writeBinary(Base64Variants.getDefaultVariant(), data, offset, len);
+}
+
+private void _writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException, JsonGenerationException {
+    _cfgPrettyPrinter.beforeValue(this);
+    _writeBinary(b64variant, data, offset, len, '"');
+    _cfgPrettyPrinter.afterValue(this);
 }
\ No newline at end of file
