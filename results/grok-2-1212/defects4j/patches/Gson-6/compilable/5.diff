diff --git a/tmp/06c55bea-c0ec-43b6-974c-fc0da33288cb_buggy.java b/tmp/0fab8f76-3939-4347-93f7-4b73138b1e70_fixed.java
index 1c53d31..d061316 100644
--- a/tmp/06c55bea-c0ec-43b6-974c-fc0da33288cb_buggy.java
+++ b/tmp/0fab8f76-3939-4347-93f7-4b73138b1e70_fixed.java
@@ -1,20 +1,21 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
                                       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
         Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
         typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
         Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
         typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
                 .construct()
                 .create(gson, fieldType);
     } else {
         throw new IllegalArgumentException(
                 "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
-      typeAdapter = typeAdapter.nullSafe();
+    // Ensure that typeAdapter is never null after calling nullSafe
+    typeAdapter = typeAdapter != null ? typeAdapter.nullSafe() : gson.getAdapter(fieldType);
     return typeAdapter;
 }
\ No newline at end of file
