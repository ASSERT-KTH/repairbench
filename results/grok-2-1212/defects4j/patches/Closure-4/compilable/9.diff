diff --git a/tmp/8b0c861a-0884-404a-b177-0c68ee800719_buggy.java b/tmp/eb3e6cfe-3285-41df-9f0f-663ce2669536_fixed.java
index d6a560a..a84d359 100644
--- a/tmp/8b0c861a-0884-404a-b177-0c68ee800719_buggy.java
+++ b/tmp/eb3e6cfe-3285-41df-9f0f-663ce2669536_fixed.java
@@ -1,33 +1,37 @@
 /**
  * Resolve the referenced type within the enclosing scope.
  */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+    // First, attempt to resolve via the registry
     boolean resolved = resolveViaRegistry(t, enclosing);
+    
+    // Check for implicit prototype cycles after the first resolution attempt
     if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
+        // Return early to prevent further processing in case of a cycle
+        return this;
     }
 
     if (resolved) {
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+        return registry.isLastGeneration() ? getReferencedType() : this;
     }
 
+    // If not resolved via registry, try resolving via properties
     resolveViaProperties(t, enclosing);
+
+    // Check for implicit prototype cycles again after trying both resolution methods
     if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
+        // Return early to prevent further processing in case of a cycle
+        return this;
     }
 
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
         finishPropertyContinuations();
     }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+    return registry.isLastGeneration() ? getReferencedType() : this;
 }
\ No newline at end of file
