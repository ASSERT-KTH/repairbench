diff --git a/tmp/c1c2b289-3c9d-4aeb-9ced-5d10f7194164_buggy.java b/tmp/cbe3b679-4e3c-4477-8850-7d877ba8490f_fixed.java
index c9da1b7..2edc5b1 100644
--- a/tmp/c1c2b289-3c9d-4aeb-9ced-5d10f7194164_buggy.java
+++ b/tmp/cbe3b679-4e3c-4477-8850-7d877ba8490f_fixed.java
@@ -1,33 +1,40 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
+    
     // already had an explicitly marked one?
     if (oldOne != null) {
-
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
-            // one more thing: ok to override in sub-class
+        // Allow overriding in the same class
         if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
+            // If the new one is explicitly annotated and the old one isn't, replace it
+            if (explicit && ((_explicitCreators & mask) == 0)) {
+                _explicitCreators |= mask;
+                _creators[typeIndex] = _fixAccess(newOne);
+                return;
+            }
+            // If both are explicitly annotated or both are not, keep the old one
+            return;
+        }
 
+        // Different classes: throw an exception
         throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                 +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
-            }
     }
+
+    // No old creator, add the new one
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
