diff --git a/tmp/6742d439-3356-441c-8c1a-c11b6cce45ae_buggy.java b/tmp/e5248a0a-cae0-4373-bb05-0ca762e1944f_fixed.java
index c9da1b7..f165f9b 100644
--- a/tmp/6742d439-3356-441c-8c1a-c11b6cce45ae_buggy.java
+++ b/tmp/e5248a0a-cae0-4373-bb05-0ca762e1944f_fixed.java
@@ -1,33 +1,38 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
+
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+        if ((_explicitCreators & mask) != 0) {
             if (!explicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+            // Both explicit: verify
         }
 
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
+        // Check if newOne is a subclass of oldOne
+        if (newOne.getClass().isAssignableFrom(oldOne.getClass())) {
+            // newOne is more specific or equal, use it
+            if (explicit) {
+                _explicitCreators |= mask;
+            }
+            _creators[typeIndex] = _fixAccess(newOne);
+            return;
+        } else if (oldOne.getClass().isAssignableFrom(newOne.getClass())) {
+            // oldOne is more specific, keep it
+            return;
+        }
 
+        // If we reach here, it's a true conflict
         throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                 + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
-            }
     }
+
+    // No conflict, add the new creator
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
