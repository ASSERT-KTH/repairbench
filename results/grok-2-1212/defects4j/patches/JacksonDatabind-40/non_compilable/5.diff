diff --git a/tmp/2d8a78d3-6d54-4fde-b2c4-1df3641c55bc_buggy.java b/tmp/81fc58d5-1f92-4efe-9a90-92d42f57950d_fixed.java
index e69de29..85d111f 100644
--- a/tmp/2d8a78d3-6d54-4fde-b2c4-1df3641c55bc_buggy.java
+++ b/tmp/81fc58d5-1f92-4efe-9a90-92d42f57950d_fixed.java
@@ -0,0 +1,77 @@
+public class DeserializationFeature {
+
+    public static final DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT = new DeserializationFeature(6,
+            "ACCEPT_EMPTY_STRING_AS_NULL_OBJECT");
+
+    private DeserializationFeature(int mask, String name) {
+        this._mask = mask;
+        this._name = name;
+    }
+
+    public boolean enabledByDefault() {
+        return false;
+    }
+
+    public boolean enableFor(DeserializationConfig config) {
+        return config.isEnabled(this);
+    }
+
+    public void enableIn(DeserializationConfig config) {
+        config.enable(this);
+    }
+
+    public void disableIn(DeserializationConfig config) {
+        config.disable(this);
+    }
+
+    public JsonDeserializer<?> modifyDeserializer(JsonDeserializer<?> deser, DeserializationConfig config) {
+        if (this == ACCEPT_EMPTY_STRING_AS_NULL_OBJECT) {
+            if (deser instanceof BeanDeserializer) {
+                return new EmptyStringAsNullDeserializer((BeanDeserializer) deser);
+            }
+            if (deser instanceof StdDeserializer<?>) {
+                return new EmptyStringAsNullStdDeserializer((StdDeserializer<?>) deser);
+            }
+        }
+        return deser;
+    }
+
+    private static class EmptyStringAsNullDeserializer extends BeanDeserializer {
+        public EmptyStringAsNullDeserializer(BeanDeserializer src) {
+            super(src);
+        }
+
+        @Override
+        public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+            if (p.getCurrentToken() == JsonToken.VALUE_STRING && "".equals(p.getText())) {
+                Class<?> rawType = getValueType().getRawClass();
+                if (rawType.isPrimitive()) {
+                    return ctxt.handleWeirdStringValue(rawType, "", "Cannot coerce empty String [\"\"] to %s (but deserialization feature `ACCEPT_EMPTY_STRING_AS_NULL_OBJECT` enabled)", rawType.getName());
+                }
+                return null;
+            }
+            return super.deserialize(p, ctxt);
+        }
+    }
+
+    private static class EmptyStringAsNullStdDeserializer<T> extends StdDeserializer<T> {
+        private final StdDeserializer<T> _delegate;
+
+        public EmptyStringAsNullStdDeserializer(StdDeserializer<T> src) {
+            super(src.handledType());
+            _delegate = src;
+        }
+
+        @Override
+        public T deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+            if (p.getCurrentToken() == JsonToken.VALUE_STRING && "".equals(p.getText())) {
+                Class<?> rawType = _delegate.handledType();
+                if (rawType.isPrimitive()) {
+                    return (T) ctxt.handleWeirdStringValue(rawType, "", "Cannot coerce empty String [\"\"] to %s (but deserialization feature `ACCEPT_EMPTY_STRING_AS_NULL_OBJECT` enabled)", rawType.getName());
+                }
+                return null;
+            }
+            return _delegate.deserialize(p, ctxt);
+        }
+    }
+}
\ No newline at end of file
