diff --git a/tmp/1593a39d-40e0-4896-999e-2131f4797349_buggy.java b/tmp/fb19ace7-21e0-4c5f-b0a8-bf96a0b88642_fixed.java
index 4e8b037..5e757cc 100644
--- a/tmp/1593a39d-40e0-4896-999e-2131f4797349_buggy.java
+++ b/tmp/fb19ace7-21e0-4c5f-b0a8-bf96a0b88642_fixed.java
@@ -1,20 +1,27 @@
 public List getValues(final Option option,
                       List defaultValues) {
-        // initialize the return list
+    // Initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // If the value list is null or empty, initialize it with an empty list
+    if (valueList == null) {
+        valueList = new ArrayList();
+    } else if (valueList.isEmpty()) {
+        valueList = new ArrayList(valueList);
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // Augment the list with the provided default values
+    if (valueList.isEmpty() && defaultValues != null) {
+        valueList.addAll(defaultValues);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // Augment the list with the option's default values
+    if (valueList.isEmpty()) {
+        List optionDefaultValues = (List) this.defaultValues.get(option);
+        if (optionDefaultValues != null) {
+            valueList.addAll(optionDefaultValues);
+        }
+    }
+
+    return valueList;
 }
\ No newline at end of file
