diff --git a/tmp/b1f78be6-50b4-4c55-b736-968317cb67d4_buggy.java b/tmp/682435fe-0b25-4551-82fd-0c8e1282558b_fixed.java
index 4e8b037..ed2a673 100644
--- a/tmp/b1f78be6-50b4-4c55-b736-968317cb67d4_buggy.java
+++ b/tmp/682435fe-0b25-4551-82fd-0c8e1282558b_fixed.java
@@ -1,20 +1,25 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
+public List getValues(final Option option, List defaultValues) {
+    // Initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // If the value list is null or empty, set it to an empty list
+    if (valueList == null || valueList.isEmpty()) {
+        valueList = new ArrayList();
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // Add default values from the argument
+    if (defaultValues != null) {
+        valueList.addAll(defaultValues);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // If the value list is still empty, try to use default values from the option
+    if (valueList.isEmpty()) {
+        List optionDefaultValues = (List) this.defaultValues.get(option);
+        if (optionDefaultValues != null) {
+            valueList.addAll(optionDefaultValues);
+        }
+    }
+
+    // Ensure the list is not null and return it
+    return valueList == null ? Collections.EMPTY_LIST : new ArrayList(valueList);
 }
\ No newline at end of file
