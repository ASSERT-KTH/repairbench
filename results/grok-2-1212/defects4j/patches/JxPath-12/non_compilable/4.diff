diff --git a/tmp/8f9c167c-69bf-4fb3-b040-a739c4c2b252_buggy.java b/tmp/fc7a7f9f-b40f-4b9d-ace5-9bde9f2fd773_fixed.java
index 40f74f7..da7b0d6 100644
--- a/tmp/8f9c167c-69bf-4fb3-b040-a739c4c2b252_buggy.java
+++ b/tmp/fc7a7f9f-b40f-4b9d-ace5-9bde9f2fd773_fixed.java
@@ -1,50 +1,57 @@
 public static boolean testNode(Node node, NodeTest test) {
     if (test == null) {
         return true;
     }
     if (test instanceof NodeNameTest) {
         if (node.getNodeType() != Node.ELEMENT_NODE) {
             return false;
         }
 
         NodeNameTest nodeNameTest = (NodeNameTest) test;
         QName testName = nodeNameTest.getNodeName();
         String namespaceURI = nodeNameTest.getNamespaceURI();
         boolean wildcard = nodeNameTest.isWildcard();
         String testPrefix = testName.getPrefix();
         if (wildcard && testPrefix == null) {
             return true;
         }
         if (wildcard
             || testName.getName()
                     .equals(DOMNodePointer.getLocalName(node))) {
             String nodeNS = DOMNodePointer.getNamespaceURI(node);
-                return equalStrings(namespaceURI, nodeNS);
+            // Fix: Use correct namespace comparison
+            return equalStrings(namespaceURI, nodeNS) || (namespaceURI == null && nodeNS == null);
         }
         return false;
     }
     if (test instanceof NodeTypeTest) {
         int nodeType = node.getNodeType();
         switch (((NodeTypeTest) test).getNodeType()) {
             case Compiler.NODE_TYPE_NODE :
                 return nodeType == Node.ELEMENT_NODE
                         || nodeType == Node.DOCUMENT_NODE;
             case Compiler.NODE_TYPE_TEXT :
                 return nodeType == Node.CDATA_SECTION_NODE
                     || nodeType == Node.TEXT_NODE;
             case Compiler.NODE_TYPE_COMMENT :
                 return nodeType == Node.COMMENT_NODE;
             case Compiler.NODE_TYPE_PI :
                 return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
         }
         return false;
     }
     if (test instanceof ProcessingInstructionTest) {
         if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
             String testPI = ((ProcessingInstructionTest) test).getTarget();
             String nodePI = ((ProcessingInstruction) node).getTarget();
             return testPI.equals(nodePI);
         }
     }
+    // Fix: Add support for NamespaceTest
+    if (test instanceof NamespaceTest) {
+        String testNamespace = ((NamespaceTest) test).getNamespaceURI();
+        String nodeNamespace = node.getNamespaceURI();
+        return equalStrings(testNamespace, nodeNamespace);
+    }
     return false;
 }
\ No newline at end of file
