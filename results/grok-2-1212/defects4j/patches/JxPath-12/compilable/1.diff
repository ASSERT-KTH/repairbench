diff --git a/tmp/d11d1cbc-e894-4af7-86e9-d3a837e51784_buggy.java b/tmp/ee08d5dd-e39c-4c8b-9edc-01654796a7e0_fixed.java
index 40f74f7..8108968 100644
--- a/tmp/d11d1cbc-e894-4af7-86e9-d3a837e51784_buggy.java
+++ b/tmp/ee08d5dd-e39c-4c8b-9edc-01654796a7e0_fixed.java
@@ -1,50 +1,54 @@
 public static boolean testNode(Node node, NodeTest test) {
     if (test == null) {
         return true;
     }
     if (test instanceof NodeNameTest) {
         if (node.getNodeType() != Node.ELEMENT_NODE) {
             return false;
         }
 
         NodeNameTest nodeNameTest = (NodeNameTest) test;
         QName testName = nodeNameTest.getNodeName();
         String namespaceURI = nodeNameTest.getNamespaceURI();
         boolean wildcard = nodeNameTest.isWildcard();
         String testPrefix = testName.getPrefix();
-            if (wildcard && testPrefix == null) {
+        if (wildcard && (testPrefix == null || testPrefix.isEmpty())) {
             return true;
         }
         if (wildcard
-                || testName.getName()
-                        .equals(DOMNodePointer.getLocalName(node))) {
+            || testName.getName().equals(DOMNodePointer.getLocalName(node))) {
             String nodeNS = DOMNodePointer.getNamespaceURI(node);
+            // Handle empty namespace case
+            if ((namespaceURI == null || namespaceURI.isEmpty()) && (nodeNS == null || nodeNS.isEmpty())) {
+                return true;
+            }
             return equalStrings(namespaceURI, nodeNS);
         }
         return false;
     }
     if (test instanceof NodeTypeTest) {
         int nodeType = node.getNodeType();
         switch (((NodeTypeTest) test).getNodeType()) {
             case Compiler.NODE_TYPE_NODE :
                 return nodeType == Node.ELEMENT_NODE
-                            || nodeType == Node.DOCUMENT_NODE;
+                        || nodeType == Node.DOCUMENT_NODE
+                        || nodeType == Node.DOCUMENT_FRAGMENT_NODE;
             case Compiler.NODE_TYPE_TEXT :
                 return nodeType == Node.CDATA_SECTION_NODE
                     || nodeType == Node.TEXT_NODE;
             case Compiler.NODE_TYPE_COMMENT :
                 return nodeType == Node.COMMENT_NODE;
             case Compiler.NODE_TYPE_PI :
                 return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
         }
         return false;
     }
     if (test instanceof ProcessingInstructionTest) {
         if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
             String testPI = ((ProcessingInstructionTest) test).getTarget();
-                String nodePI = ((ProcessingInstruction) node).getTarget();
+            String nodePI = node.getNodeName(); // Changed to use getNodeName()
             return testPI.equals(nodePI);
         }
     }
     return false;
 }
\ No newline at end of file
