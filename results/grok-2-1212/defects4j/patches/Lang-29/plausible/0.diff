diff --git a/tmp/4992a8f4-d2ce-4b1b-b02f-b35c1f4e4b49_buggy.java b/tmp/20a08ac8-0dd9-4f0b-9075-88c73e2bb8b5_fixed.java
index 3ec995f..562e3b9 100644
--- a/tmp/4992a8f4-d2ce-4b1b-b02f-b35c1f4e4b49_buggy.java
+++ b/tmp/20a08ac8-0dd9-4f0b-9075-88c73e2bb8b5_fixed.java
@@ -1,26 +1,52 @@
     /**
      * <p>
      * Converts the given Java version string to an <code>int</code>.
      * </p>
      * 
      * <p>
      * Example return values:
      * </p>
      * <ul>
      * <li><code>120</code> for Java 1.2</li>
      * <li><code>131</code> for Java 1.3.1</li>
      * <li><code>160</code> for Java 1.6.0_20</li>
      * </ul>
      * 
      * <p>
      * Patch releases are not reported.
      * </p>
      * <p>
      * This method is package private instead of private to support unit test invocation.
      * </p>
      * 
-     * @return the version, for example 131 for Java 1.3.1
+     * @param version the version string to convert
+     * @return the version, for example 131 for Java 1.3.1, or 0 if the version string is null, empty, or invalid
      */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+    static int toJavaVersionInt(String version) {
+        if (version == null || version.isEmpty()) {
+            return 0;
+        }
+
+        // Extract the version number from the string
+        String[] parts = version.split("[^0-9]+");
+        StringBuilder versionBuilder = new StringBuilder();
+        for (String part : parts) {
+            if (!part.isEmpty()) {
+                versionBuilder.append(part);
+                if (versionBuilder.length() >= 3) {
+                    break;
+                }
+            }
+        }
+
+        String extractedVersion = versionBuilder.toString();
+        if (extractedVersion.length() < 3) {
+            extractedVersion = String.format("%-3s", extractedVersion).replace(' ', '0');
+        }
+
+        try {
+            return Integer.parseInt(extractedVersion);
+        } catch (NumberFormatException e) {
+            return 0;
+        }
     }
\ No newline at end of file
