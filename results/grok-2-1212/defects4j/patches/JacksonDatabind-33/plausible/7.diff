diff --git a/tmp/47913fe2-b892-4724-b636-730d35e0d73f_buggy.java b/tmp/2c85935c-4b09-416a-bd19-9e580edfcef8_fixed.java
index 3cb9232..a27b889 100644
--- a/tmp/47913fe2-b892-4724-b636-730d35e0d73f_buggy.java
+++ b/tmp/2c85935c-4b09-416a-bd19-9e580edfcef8_fixed.java
@@ -1,26 +1,28 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
+            JsonUnwrapped unwrapped = _findAnnotation(a, JsonUnwrapped.class);
+            if (unwrapped != null) {
+                // If @JsonUnwrapped is present, return an empty PropertyName
+                // This will trigger the unwrapped serialization
+                return PropertyName.USE_DEFAULT;
+            }
             return null;
         }
     }
     return PropertyName.construct(name);
 }
\ No newline at end of file
