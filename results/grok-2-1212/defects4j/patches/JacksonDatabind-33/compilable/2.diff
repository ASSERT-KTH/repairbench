diff --git a/tmp/8db7d808-9208-4eb0-8f58-bfee576ad167_buggy.java b/tmp/983ee370-00ae-45ff-b192-a32397eb3ff4_fixed.java
index 3cb9232..60173b0 100644
--- a/tmp/8db7d808-9208-4eb0-8f58-bfee576ad167_buggy.java
+++ b/tmp/983ee370-00ae-45ff-b192-a32397eb3ff4_fixed.java
@@ -1,26 +1,29 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
+        } else if (_hasAnnotation(a, JsonUnwrapped.class)) {
+            // Handle @JsonUnwrapped annotation to prevent ignoring properties
+            JsonUnwrapped unwrapped = _findAnnotation(a, JsonUnwrapped.class);
+            if (unwrapped != null && unwrapped.enabled()) {
+                name = "";
+            }
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
-                return null;
+            // If no relevant annotation is found, use the default name
+            name = a.getName();
         }
     }
     return PropertyName.construct(name);
 }
\ No newline at end of file
