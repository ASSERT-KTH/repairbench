diff --git a/tmp/0d759db7-f845-4562-89ae-45df0c373369_buggy.java b/tmp/49be2f4b-7ae7-46a4-bc18-498f4f78d78d_fixed.java
index 3cb9232..f6332da 100644
--- a/tmp/0d759db7-f845-4562-89ae-45df0c373369_buggy.java
+++ b/tmp/49be2f4b-7ae7-46a4-bc18-498f4f78d78d_fixed.java
@@ -1,26 +1,29 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
             /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
              *   it's actually bit tricky to do it more efficiently (meta-annotations
              *   add more lookups; AnnotationMap costs etc)
              */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
+        } else if (_hasAnnotation(a, JsonUnwrapped.class)) {
+            // For @JsonUnwrapped, we should return null to indicate that the property should be unwrapped
+            return null;
         } else {
             return null;
         }
     }
     return PropertyName.construct(name);
 }
\ No newline at end of file
