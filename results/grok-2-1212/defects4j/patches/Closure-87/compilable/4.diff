diff --git a/tmp/6ef96804-f022-4037-988f-26f2fabdd9a0_buggy.java b/tmp/894d5570-a002-487e-9e25-3c09a8a34efc_fixed.java
index 19fd63e..e2b0455 100644
--- a/tmp/6ef96804-f022-4037-988f-26f2fabdd9a0_buggy.java
+++ b/tmp/894d5570-a002-487e-9e25-3c09a8a34efc_fixed.java
@@ -1,24 +1,19 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
         if (n.hasOneChild()) {
             Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
-      }
-    }
-
+            // Check if the child is an expression node
+            if (NodeUtil.isExpressionNode(maybeExpr)) {
+                // Prevent folding of EXPR_RESULT nodes to avoid issues with IE
+                if (maybeExpr.getType() != Token.EXPR_RESULT) {
+                    return true;
+                }
+            }
+        }
+    }
     return false;
 }
\ No newline at end of file
