diff --git a/tmp/3be18afd-dfbc-45a8-b386-646731999fca_buggy.java b/tmp/0fa97e2b-40e7-4830-9a71-5c911a6482ef_fixed.java
index a7d0787..6bb7f86 100644
--- a/tmp/3be18afd-dfbc-45a8-b386-646731999fca_buggy.java
+++ b/tmp/0fa97e2b-40e7-4830-9a71-5c911a6482ef_fixed.java
@@ -1,54 +1,58 @@
     /**
      * Returns the <code>Object</code> of type <code>clazz</code>
      * with the value of <code>str</code>.
      *
      * @param str the command line value
      * @param clazz the type of argument
      * @return The instance of <code>clazz</code> initialised with
      * the value of <code>str</code>.
      * @throws ParseException if the value creation for the given class failed
      */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
+        try {
             if (PatternOptionBuilder.STRING_VALUE == clazz)
             {
                 return (T) str;
             }
             else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
             {
                 return (T) createObject(str);
             }
             else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
             {
                 return (T) createNumber(str);
             }
             else if (PatternOptionBuilder.DATE_VALUE == clazz)
             {
                 return (T) createDate(str);
             }
             else if (PatternOptionBuilder.CLASS_VALUE == clazz)
             {
                 return (T) createClass(str);
             }
             else if (PatternOptionBuilder.FILE_VALUE == clazz)
             {
                 return (T) createFile(str);
             }
             else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
             {
                 return (T) openFile(str);
             }
             else if (PatternOptionBuilder.FILES_VALUE == clazz)
             {
                 return (T) createFiles(str);
             }
             else if (PatternOptionBuilder.URL_VALUE == clazz)
             {
                 return (T) createURL(str);
             }
             else
             {
-            return null;
+                throw new ParseException("Unsupported type: " + clazz.getName());
+            }
+        } catch (Exception e) {
+            throw new ParseException("Failed to create value of type " + clazz.getName() + " from string: " + str, e);
         }
     }
\ No newline at end of file
