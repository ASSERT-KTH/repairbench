diff --git a/tmp/b6c1b329-dd69-4188-8368-d8b09f5ff664_buggy.java b/tmp/814ef574-4bea-4374-8dc7-de73023e05b8_fixed.java
index e0ecec8..e62488d 100644
--- a/tmp/b6c1b329-dd69-4188-8368-d8b09f5ff664_buggy.java
+++ b/tmp/814ef574-4bea-4374-8dc7-de73023e05b8_fixed.java
@@ -1,35 +1,47 @@
   /**
    * Visits the parameters of a CALL or a NEW node.
    */
   private void visitParameterList(NodeTraversal t, Node call,
       FunctionType functionType) {
     Iterator<Node> arguments = call.children().iterator();
     arguments.next(); // skip the function name
 
     Iterator<Node> parameters = functionType.getParameters().iterator();
     int ordinal = 0;
     Node parameter = null;
     Node argument = null;
-    while (arguments.hasNext() &&
-           parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
-        parameter = parameters.next();
+    boolean inVarArgs = false;
+
+    while (arguments.hasNext()) {
       argument = arguments.next();
       ordinal++;
 
-      validator.expectArgumentMatchesParameter(t, argument,
-          getJSType(argument), getJSType(parameter), call, ordinal);
+      if (parameters.hasNext() || inVarArgs) {
+        if (!inVarArgs) {
+          parameter = parameters.next();
+          if (parameter.isVarArgs()) {
+            inVarArgs = true;
+          }
+        }
+
+        JSType expectedType = inVarArgs ? parameter.getJSType().getParameterType() : parameter.getJSType();
+        JSType actualType = getJSType(argument);
+
+        validator.expectArgumentMatchesParameter(t, argument, actualType, expectedType, call, ordinal);
+      } else {
+        // More arguments than parameters, and not in varargs mode
+        validator.expectArgumentMatchesParameter(t, argument, getJSType(argument), null, call, ordinal);
+      }
     }
 
     int numArgs = call.getChildCount() - 1;
     int minArgs = functionType.getMinArguments();
     int maxArgs = functionType.getMaxArguments();
-    if (minArgs > numArgs || maxArgs < numArgs) {
+    if (minArgs > numArgs || (maxArgs != FunctionType.UNKNOWN_ARITY && maxArgs < numArgs)) {
       report(t, call, WRONG_ARGUMENT_COUNT,
               validator.getReadableJSTypeName(call.getFirstChild(), false),
               String.valueOf(numArgs), String.valueOf(minArgs),
-              maxArgs != Integer.MAX_VALUE ?
+              maxArgs != Integer.MAX_VALUE && maxArgs != FunctionType.UNKNOWN_ARITY ?
               " and no more than " + maxArgs + " argument(s)" : "");
     }
   }
\ No newline at end of file
