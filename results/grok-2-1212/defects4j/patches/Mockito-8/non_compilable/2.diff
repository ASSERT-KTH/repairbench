diff --git a/tmp/98ec7538-665c-465e-b2b8-a101f747f624_buggy.java b/tmp/09d1ad99-f23d-47a9-b5ab-256a89e1e942_fixed.java
index 42b58d0..3d8152d 100644
--- a/tmp/98ec7538-665c-465e-b2b8-a101f747f624_buggy.java
+++ b/tmp/09d1ad99-f23d-47a9-b5ab-256a89e1e942_fixed.java
@@ -1,19 +1,37 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    
+    // Set to keep track of processed type variables to prevent infinite recursion
+    Set<TypeVariable<?>> processedTypeVariables = new HashSet<>();
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // Check if the type parameter has already been processed
+        if (processedTypeVariables.contains(typeParameter)) {
+            continue;
+        }
+        processedTypeVariables.add(typeParameter);
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Handle nested type variables
+            TypeVariable nestedTypeVar = (TypeVariable) actualTypeArgument;
+            if (contextualActualTypeParameters.containsKey(nestedTypeVar)) {
+                contextualActualTypeParameters.put(typeParameter, contextualActualTypeParameters.get(nestedTypeVar));
+            } else {
+                contextualActualTypeParameters.put(typeParameter, nestedTypeVar);
+            }
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
