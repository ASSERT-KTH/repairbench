diff --git a/tmp/0de633a8-d2c7-477f-9bcc-18b69ad5189c_buggy.java b/tmp/42f5935a-e456-4d7d-9825-7a0900fda585_fixed.java
index 46817a7..1399a35 100644
--- a/tmp/0de633a8-d2c7-477f-9bcc-18b69ad5189c_buggy.java
+++ b/tmp/42f5935a-e456-4d7d-9825-7a0900fda585_fixed.java
@@ -1,16 +1,33 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
+    
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    Set<String> allProperties = new HashSet<>(properties.keySet());
+    allProperties.addAll(that.toMaybeRecordType().getOwnPropertyNames());
+
+    for (String property : allProperties) {
+        if (properties.containsKey(property) && that.toMaybeRecordType().hasProperty(property)) {
+            JSType thisPropertyType = getPropertyType(property);
+            JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+            if (thisPropertyType.isEquivalentTo(thatPropertyType)) {
+                builder.addProperty(property, thisPropertyType, getPropertyNode(property));
+            } else {
+                // If property types are different, we need to create a union type
+                JSType unionType = registry.createUnionType(thisPropertyType, thatPropertyType);
+                builder.addProperty(property, unionType, null);
             }
+        } else if (properties.containsKey(property)) {
+            // Property only in this record
+            builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
+        } else if (that.toMaybeRecordType().hasProperty(property)) {
+            // Property only in that record
+            builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property), null);
         }
-    return builder.build();
+    }
+
+    JSType thisRecordType = builder.build();
+    return registry.createUnionType(thisRecordType, that);
 }
\ No newline at end of file
