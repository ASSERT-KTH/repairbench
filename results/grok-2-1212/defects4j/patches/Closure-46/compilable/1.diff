diff --git a/tmp/0b8a5548-c9e6-474e-ab53-4d95267ba0a3_buggy.java b/tmp/9ad2d2fa-de16-4aaa-ba14-a1da3a3d366d_fixed.java
index 46817a7..dcf3617 100644
--- a/tmp/0b8a5548-c9e6-474e-ab53-4d95267ba0a3_buggy.java
+++ b/tmp/9ad2d2fa-de16-4aaa-ba14-a1da3a3d366d_fixed.java
@@ -1,16 +1,31 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    RecordType thatRecord = that.toMaybeRecordType();
+
+    // Add all properties from this record
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+        if (thatRecord.hasProperty(property)) {
+            JSType thisPropType = getPropertyType(property);
+            JSType thatPropType = thatRecord.getPropertyType(property);
+            builder.addProperty(property, thisPropType.getLeastSupertype(thatPropType), getPropertyNode(property));
         }
     }
-    return builder.build();
+
+    // Add all properties from that record that are not in this record
+    for (String property : thatRecord.getPropertyNames()) {
+        if (!hasProperty(property)) {
+            builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));
+        }
+    }
+
+    JSType result = builder.build();
+    if (result.isRecordType() && !result.equals(this) && !result.equals(that)) {
+        return registry.createUnionType(this, that);
+    }
+    return result;
 }
\ No newline at end of file
