diff --git a/tmp/797206a4-d40d-4e5e-ad07-fc5142dea582_buggy.java b/tmp/e1431946-3945-4dae-b6b0-6232e36aebbe_fixed.java
index 46817a7..09eeeeb 100644
--- a/tmp/797206a4-d40d-4e5e-ad07-fc5142dea582_buggy.java
+++ b/tmp/e1431946-3945-4dae-b6b0-6232e36aebbe_fixed.java
@@ -1,16 +1,38 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
+
+    RecordType otherRecord = that.toMaybeRecordType();
+    boolean isCompatible = true;
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+        if (otherRecord.hasProperty(property)) {
+            JSType thisPropertyType = getPropertyType(property);
+            JSType thatPropertyType = otherRecord.getPropertyType(property);
+            if (!thisPropertyType.isEquivalentTo(thatPropertyType)) {
+                isCompatible = false;
+                break;
             }
+            builder.addProperty(property, thisPropertyType, getPropertyNode(property));
+        } else {
+            isCompatible = false;
+            break;
         }
+    }
+
+    for (String property : otherRecord.getOwnPropertyNames()) {
+        if (!properties.containsKey(property)) {
+            isCompatible = false;
+            break;
+        }
+    }
+
+    if (isCompatible) {
         return builder.build();
+    } else {
+        return registry.createUnionType(this, that);
+    }
 }
\ No newline at end of file
