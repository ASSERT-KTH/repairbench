diff --git a/tmp/1389bda8-bfd2-4b56-8e4b-4a1c1b8ee507_buggy.java b/tmp/f753de68-23fc-4a5e-b186-a6f86d1b6a61_fixed.java
index be2af16..77bcd35 100644
--- a/tmp/1389bda8-bfd2-4b56-8e4b-4a1c1b8ee507_buggy.java
+++ b/tmp/f753de68-23fc-4a5e-b186-a6f86d1b6a61_fixed.java
@@ -1,29 +1,42 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // First, attempt to get the date using the Gregorian calendar
+    long instantGregorian = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+
+    if (instantGregorian >= iCutoverMillis) {
+        // If the date is after or on the cutover, use the Gregorian result
+        return instantGregorian;
+    }
+
+    // If the Gregorian date is before the cutover, try the Julian calendar
+    long instantJulian = iJulianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+
+    if (instantJulian < iCutoverMillis) {
+        // If the Julian date is before the cutover, use the Julian result
+        return instantJulian;
+    }
+
+    // If we get here, the date is in the transition period
+    // We need to check if it's a valid date in either calendar system
+    if (instantGregorian == instantJulian) {
+        // If both calendars agree on the instant, it's valid
+        return instantGregorian;
+    }
+
+    // If we get here, the date is in the transition period but not valid in either calendar
     throw new IllegalArgumentException("Specified date does not exist");
 }
\ No newline at end of file
-        }
-        return instant;
-    }
