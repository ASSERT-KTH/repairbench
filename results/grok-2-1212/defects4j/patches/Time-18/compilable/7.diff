diff --git a/tmp/f9af8a4e-c51d-4d46-892b-f95d5ed95099_buggy.java b/tmp/348e8761-98a2-4d5b-9dd9-e5e86d5685d2_fixed.java
index be2af16..860633c 100644
--- a/tmp/f9af8a4e-c51d-4d46-892b-f95d5ed95099_buggy.java
+++ b/tmp/348e8761-98a2-4d5b-9dd9-e5e86d5685d2_fixed.java
@@ -1,29 +1,39 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Try Gregorian first
+    long instantGregorian = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+
+    if (instantGregorian >= iCutoverMillis) {
+        return instantGregorian; // Date is after cutover, use Gregorian
+    }
+
+    // Try Julian if Gregorian fails or is before cutover
+    long instantJulian = iJulianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+
+    if (instantJulian < iCutoverMillis) {
+        return instantJulian; // Date is before cutover, use Julian
+    }
+
+    // If we get here, the date is in the cutover period
+    if (instantGregorian == instantJulian) {
+        // Date exists in both calendars at cutover, use Gregorian
+        return instantGregorian;
+    }
+
+    // Date does not exist in either calendar at cutover
     throw new IllegalArgumentException("Specified date does not exist");
 }
\ No newline at end of file
-        }
-        return instant;
-    }
