diff --git a/tmp/2c6c4032-f57a-44a7-a567-37367bd66156_buggy.java b/tmp/97337463-2133-41ba-838d-d560977c97de_fixed.java
index be2af16..66d14a3 100644
--- a/tmp/2c6c4032-f57a-44a7-a567-37367bd66156_buggy.java
+++ b/tmp/97337463-2133-41ba-838d-d560977c97de_fixed.java
@@ -1,29 +1,46 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // First, try Gregorian
+    long instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        // Then, try Julian
+        try {
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+                // If Julian date is after cutover, it's invalid
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+        } catch (IllegalArgumentException e) {
+            // If Julian fails, try adjusting for leap year
+            if (monthOfYear == 2 && dayOfMonth == 29) {
+                // Check if it's a leap year in Julian but not in Gregorian
+                if (iJulianChronology.year().isLeap(year) && !iGregorianChronology.year().isLeap(year)) {
+                    // Adjust to the day before (February 28th)
+                    instant = iJulianChronology.getDateTimeMillis
+                        (year, 2, 28,
+                         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+                    if (instant >= iCutoverMillis) {
+                        throw new IllegalArgumentException("Specified date does not exist");
+                    }
+                    return instant;
+                }
+            }
+            throw e; // Re-throw the original exception if no adjustments were made
+        }
     }
     return instant;
 }
\ No newline at end of file
