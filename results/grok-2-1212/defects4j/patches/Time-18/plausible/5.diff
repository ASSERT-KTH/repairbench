diff --git a/tmp/21a7fd7e-293a-468e-8a15-4a4390c57708_buggy.java b/tmp/ad21dc4a-2da8-4d19-b78c-641a2f733916_fixed.java
index be2af16..88c9e31 100644
--- a/tmp/21a7fd7e-293a-468e-8a15-4a4390c57708_buggy.java
+++ b/tmp/ad21dc4a-2da8-4d19-b78c-641a2f733916_fixed.java
@@ -1,29 +1,27 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
-        throws IllegalArgumentException
-    {
+        throws IllegalArgumentException {
     Chronology base;
     if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    // First, try with Julian calendar
+    long instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                        hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        return instant; // It's definitely Julian
+    }
+
+    // If it's after or at the cutover, try with Gregorian calendar
+    instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        return instant; // It's definitely Gregorian
+    }
+
+    // If we're here, the date is in the gap between the two calendars
     throw new IllegalArgumentException("Specified date does not exist");
 }
\ No newline at end of file
-        }
-        return instant;
-    }
