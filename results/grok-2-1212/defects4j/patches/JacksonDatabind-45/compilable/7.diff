diff --git a/tmp/5acc1c66-6ac7-4776-a9b0-ebdc14252fcd_buggy.java b/tmp/0ba8da79-613c-4347-9cc6-c7c960704179_fixed.java
index 0dbce00..1ea086d 100644
--- a/tmp/5acc1c66-6ac7-4776-a9b0-ebdc14252fcd_buggy.java
+++ b/tmp/0ba8da79-613c-4347-9cc6-c7c960704179_fixed.java
@@ -1,33 +1,62 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
+            if (shape == JsonFormat.Shape.NUMBER || shape == JsonFormat.Shape.NUMBER_INT || shape == JsonFormat.Shape.NUMBER_FLOAT) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            if (shape == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // Handle Shape.ANY case
+            if (shape == JsonFormat.Shape.ANY) {
+                if (format.hasPattern() || format.hasLocale() || format.getTimeZone() != null) {
+                    // If pattern, locale, or timezone is specified, treat as STRING shape
+                    TimeZone tz = format.getTimeZone();
+                    final String pattern = format.hasPattern()
+                                    ? format.getPattern()
+                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    final Locale loc = format.hasLocale()
+                                    ? format.getLocale()
+                                    : serializers.getLocale();
+                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    if (tz == null) {
+                        tz = serializers.getTimeZone();
+                    }
+                    df.setTimeZone(tz);
+                    return withFormat(Boolean.FALSE, df);
+                } else {
+                    // If no pattern, locale, or timezone is specified, use the default configuration
+                    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+                            ? withFormat(Boolean.TRUE, null)
+                            : withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale()));
+                }
+            }
         }
     }
-        return this;
+
+    // If no format is specified, use the default configuration
+    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+            ? withFormat(Boolean.TRUE, null)
+            : withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale()));
 }
\ No newline at end of file
