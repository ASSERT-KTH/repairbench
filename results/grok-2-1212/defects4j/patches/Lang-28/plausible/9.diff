diff --git a/tmp/cb3e18ae-9daa-4f6a-9d12-3ddf4b07495c_buggy.java b/tmp/65e9dac0-c5c8-42a1-b4f4-544adc4cfb7f_fixed.java
index 4bbd561..7d88e14 100644
--- a/tmp/cb3e18ae-9daa-4f6a-9d12-3ddf4b07495c_buggy.java
+++ b/tmp/65e9dac0-c5c8-42a1-b4f4-544adc4cfb7f_fixed.java
@@ -1,37 +1,43 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    // Protect from ArrayIndexOutOfBounds
+    if (input.length() > index + 1 && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
+        if (start < input.length()) {
             char firstChar = input.charAt(start);
             if (firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
 
             int end = start;
-            while(input.charAt(end) != ';') {
+            while (end < input.length() && input.charAt(end) != ';') {
                 end++;
             }
 
+            if (end < input.length() && input.charAt(end) == ';') {
                 int entityValue;
                 try {
                     if (isHex) {
                         entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                     } else {
                         entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                     }
                 } catch (NumberFormatException nfe) {
                     return 0;
                 }
 
-                out.write(entityValue);
+                // Convert Unicode code point to char array
+                char[] chars = Character.toChars(entityValue);
+                out.write(chars);
                 return 2 + (end - start) + (isHex ? 1 : 0) + 1;
             }
+        }
+    }
     return 0;
 }
\ No newline at end of file
