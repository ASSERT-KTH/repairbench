diff --git a/tmp/d3a6d9a6-9285-46f1-8245-bfac860597bf_buggy.java b/tmp/c8065611-65b1-4099-9d59-552dc103c3b6_fixed.java
index 373b1e8..d3a5f12 100644
--- a/tmp/d3a6d9a6-9285-46f1-8245-bfac860597bf_buggy.java
+++ b/tmp/c8065611-65b1-4099-9d59-552dc103c3b6_fixed.java
@@ -1,37 +1,44 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
-            int end;
-            for (int j = input.length; i < j; ++i) {
-                int o = input[i];
-                if ((o & 0x80) == 0) {
+    while (i < input.length) {
+        int o = input[i] & 0xFF;
+        if (o <= 0x7F) {
+            i++;
             continue; // ASCII
         }
 
-                // UTF-8 leading:
+        // Determine the number of bytes in this character
+        int byteCount = 0;
         if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
+            byteCount = 2;
         } else if ((o & 0xF0) == 0xE0) {
-                    end = i + 2;
+            byteCount = 3;
         } else if ((o & 0xF8) == 0xF0) {
-                    end = i + 3;
+            byteCount = 4;
         } else {
             return false;
         }
 
+        // Check if we have enough bytes left in the input
+        if (i + byteCount - 1 >= input.length) {
+            return false;
+        }
 
-                while (i < end) {
-                    i++;
-                    o = input[i];
+        // Check the continuation bytes
+        for (int j = 1; j < byteCount; j++) {
+            o = input[i + j] & 0xFF;
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
+
+        i += byteCount;
     }
     return true;
 }
\ No newline at end of file
