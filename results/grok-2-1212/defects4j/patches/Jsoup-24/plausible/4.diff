diff --git a/tmp/bca89bf0-7a82-4305-8e00-2a99d200cc58_buggy.java b/tmp/c506695a-6277-4e6a-81d6-04a4b838f731_fixed.java
index b2d53db..7651adf 100644
--- a/tmp/bca89bf0-7a82-4305-8e00-2a99d200cc58_buggy.java
+++ b/tmp/c506695a-6277-4e6a-81d6-04a4b838f731_fixed.java
@@ -1,34 +1,40 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
-                r.advance();
         return;
     }
 
     if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
             default:
                 t.dataBuffer.append(c);
-                        anythingElse(t, r);
-                        break;
+                break; // Removed the call to anythingElse(t, r)
         }
+    } else {
+        // Changed to handle the case where we are inside a script or style tag
+        if (t.tagPending.tagName.equals("script") || t.tagPending.tagName.equals("style")) {
+            t.dataBuffer.append(r.consumeTo("</" + t.tagPending.tagName));
+            t.dataBuffer.append(r.consumeTo(">"));
+            t.emitTagPending();
+            t.transition(Data);
         } else {
             anythingElse(t, r);
         }
     }
+}
\ No newline at end of file
