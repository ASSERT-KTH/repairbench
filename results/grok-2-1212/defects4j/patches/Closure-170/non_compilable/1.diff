diff --git a/tmp/b92b323b-287e-4c06-bc21-b02b2649ddd1_buggy.java b/tmp/5f9707e5-2e3e-4c18-a0f1-23d371fa7e42_fixed.java
index 5abdeb5..2f87f01 100644
--- a/tmp/b92b323b-287e-4c06-bc21-b02b2649ddd1_buggy.java
+++ b/tmp/5f9707e5-2e3e-4c18-a0f1-23d371fa7e42_fixed.java
@@ -1,29 +1,36 @@
     /**
      * Computes the number of uses of the variable varName and store it in
      * numUseWithinUseCfgNode.
      */
     private void getNumUseInUseCfgNode(final Node cfgNode) {
 
       numUsesWithinCfgNode = 0;
       AbstractCfgNodeTraversalCallback gatherCb =
           new AbstractCfgNodeTraversalCallback() {
 
         @Override
         public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
-              // Don't count lhs of top-level assignment chain
+          if (n.isName() && n.getString().equals(varName)) {
+            // Check if the node is the left-hand side of an assignment
+            boolean isLhsOfAssign = parent.isAssign() && parent.getFirstChild() == n;
+            
+            // Check if the parent is a hook (ternary operator)
+            boolean isInHook = parent.isHook();
+            
+            // Check if the parent is an operation node
+            boolean isInOperation = parent.isAdd() || parent.isSub() || parent.isMul() || parent.isDiv() ||
+                                    parent.isMod() || parent.isBitAnd() || parent.isBitOr() || parent.isBitXor() ||
+                                    parent.isLsh() || parent.isRsh() || parent.isUrsh();
+
+            if (!isLhsOfAssign || (isInHook || isInOperation)) {
+              // Count the use if it's not the LHS of an assignment, or if it's 
+              // inside a hook or operation even if it's the LHS
               numUsesWithinCfgNode++;
             }
           }
+        }
 
       };
 
       NodeTraversal.traverse(compiler, cfgNode, gatherCb);
     }
\ No newline at end of file
