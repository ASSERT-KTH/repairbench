diff --git a/tmp/111f39cb-df44-4ea8-a5f2-53844f932a55_buggy.java b/tmp/11162789-979e-4aad-95a6-fe16c949a8d2_fixed.java
index 0b7c52e..c7f8064 100644
--- a/tmp/111f39cb-df44-4ea8-a5f2-53844f932a55_buggy.java
+++ b/tmp/11162789-979e-4aad-95a6-fe16c949a8d2_fixed.java
@@ -1,27 +1,38 @@
     /**
-     * Processes a OBJECTLIT node.
+     * Processes an OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
         
+        String name = null;
+        if (child.isStringKey()) {
+          name = child.getString();
+        } else if (child.isComputedProp()) {
+          Node key = child.getFirstChild();
+          if (key.isString()) {
+            name = key.getString();
+          }
+        }
+
         // We should never see a mix of numbers and strings.
-        String name = child.getString();
+        if (name != null) {
           T type = typeSystem.getType(getScope(), n, name);
 
           Property prop = getProperty(name);
           if (!prop.scheduleRenaming(child,
                                      processProperty(t, prop, type, null))) {
             // TODO(user): It doesn't look like the user can do much in this
             // case right now.
             if (propertiesToErrorFor.containsKey(name)) {
               compiler.report(JSError.make(
                   t.getSourceName(), child, propertiesToErrorFor.get(name),
                   Warnings.INVALIDATION, name,
                   (type == null ? "null" : type.toString()), n.toString(), ""));
             }
           }
         }
       }
+    }
\ No newline at end of file
