diff --git a/tmp/6e30e424-072b-4a8c-aad1-c1bbd9a3d1df_buggy.java b/tmp/7ce7ab6c-a1a2-457e-a687-c01c1dd57dba_fixed.java
index e69de29..eca654d 100644
--- a/tmp/6e30e424-072b-4a8c-aad1-c1bbd9a3d1df_buggy.java
+++ b/tmp/7ce7ab6c-a1a2-457e-a687-c01c1dd57dba_fixed.java
@@ -0,0 +1,30 @@
+public class TypeFactory {
+    // ... other methods ...
+
+    public JavaType constructType(Class<?> cls) {
+        _initStdTypes();
+        JavaType type = _fromClass(cls, null);
+        if (type == null) {
+            throw new IllegalArgumentException("Class " + cls.getName() + " not supported for type construction");
+        }
+        return type;
+    }
+
+    protected JavaType _fromClass(Class<?> cls, TypeBindings bindings) {
+        JavaType type = _constructType(cls, bindings);
+        if (type != null) {
+            return type;
+        }
+        // If type is not yet resolved and it's a subtype, try to resolve it with the base type
+        Class<?> superclass = cls.getSuperclass();
+        if (superclass != null && superclass != Object.class) {
+            JavaType superType = _fromClass(superclass, bindings);
+            if (superType != null) {
+                return superType.refine(cls, bindings, null, null);
+            }
+        }
+        return null;
+    }
+
+    // ... other methods ...
+}
\ No newline at end of file
