diff --git a/tmp/fa5b819d-662e-412f-bfd1-dd19de215adf_buggy.java b/tmp/9efff307-3344-444f-8b52-8b3d4cb49b12_fixed.java
index e69de29..25da3e8 100644
--- a/tmp/fa5b819d-662e-412f-bfd1-dd19de215adf_buggy.java
+++ b/tmp/9efff307-3344-444f-8b52-8b3d4cb49b12_fixed.java
@@ -0,0 +1,36 @@
+private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+    in.defaultReadObject();
+    
+    // Read the collectionType
+    String collectionTypeName = (String) in.readObject();
+    
+    // Validate the collectionType
+    Class<?> collectionType;
+    try {
+        collectionType = Class.forName(collectionTypeName);
+    } catch (ClassNotFoundException e) {
+        throw new IOException("Unable to deserialize MultiValueMap: Collection type class not found: " + collectionTypeName, e);
+    }
+    
+    if (!Collection.class.isAssignableFrom(collectionType)) {
+        throw new IOException("Unable to deserialize MultiValueMap: Invalid collection type: " + collectionType.getName());
+    }
+    
+    // Create a new instance of the collection
+    this.collectionType = collectionType;
+    this.map = new HashMap<>();
+    
+    // Read the size of the map
+    int size = in.readInt();
+    
+    // Read the entries
+    for (int i = 0; i < size; i++) {
+        Object key = in.readObject();
+        int listSize = in.readInt();
+        Collection<Object> collection = (Collection<Object>) collectionType.getDeclaredConstructor().newInstance();
+        for (int j = 0; j < listSize; j++) {
+            collection.add(in.readObject());
+        }
+        this.map.put(key, collection);
+    }
+}
\ No newline at end of file
