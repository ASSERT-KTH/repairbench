diff --git a/tmp/f620cc22-f06f-4724-9dce-067efa025658_buggy.java b/tmp/051408cb-eb77-498e-8574-f2d086b27446_fixed.java
index e69de29..d5fc6eb 100644
--- a/tmp/f620cc22-f06f-4724-9dce-067efa025658_buggy.java
+++ b/tmp/051408cb-eb77-498e-8574-f2d086b27446_fixed.java
@@ -0,0 +1,27 @@
+private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+    in.defaultReadObject();
+    map = (Map<K, ? extends Collection<V>>) in.readObject();
+    collectionType = (Class<? extends Collection<?>>) in.readObject();
+
+    // Validate the collection type
+    if (!ArrayList.class.equals(collectionType) && !HashSet.class.equals(collectionType)) {
+        throw new UnsupportedOperationException("Unsupported collection type: " + collectionType.getName());
+    }
+
+    // Create a new instance of the map with the validated collection type
+    Map<K, Collection<V>> newMap = MultiValueMap.multiValueMap(new HashMap<>(), collectionType).map;
+    for (Map.Entry<K, ? extends Collection<V>> entry : map.entrySet()) {
+        Collection<V> newCollection = newCollectionInstance();
+        newCollection.addAll(entry.getValue());
+        newMap.put(entry.getKey(), newCollection);
+    }
+    map = newMap;
+}
+
+private Collection<V> newCollectionInstance() {
+    try {
+        return collectionType.getDeclaredConstructor().newInstance();
+    } catch (Exception e) {
+        throw new RuntimeException("Unable to instantiate collection: " + collectionType.getName(), e);
+    }
+}
\ No newline at end of file
