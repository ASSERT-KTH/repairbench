diff --git a/tmp/db2958d2-d448-496c-b904-b583d865799f_buggy.java b/tmp/3a1a3042-bf4c-4aa9-8388-f29f8f24d09f_fixed.java
index 25c13b3..b7c7fe7 100644
--- a/tmp/db2958d2-d448-496c-b904-b583d865799f_buggy.java
+++ b/tmp/3a1a3042-bf4c-4aa9-8388-f29f8f24d09f_fixed.java
@@ -1,15 +1,24 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root. This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
+        double n = getNumeratorDegreesOfFreedom();
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        double ret;
+
+        if (d <= 2) {
+            // For small denominator degrees of freedom, adjust the calculation
+            // to ensure a positive and reasonable starting value
+            ret = 1.0 + (2.0 / (d * (d + 2)));
+        } else {
+            // Use the mean for larger denominator degrees of freedom
             ret = d / (d - 2.0);
+        }
+
         return ret;
     }
\ No newline at end of file
