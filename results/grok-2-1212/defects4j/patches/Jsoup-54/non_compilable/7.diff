diff --git a/tmp/b43ce753-cacd-475e-a1bd-6a4052e2cd25_buggy.java b/tmp/075169df-057a-4728-a975-e4f8712a6c8c_fixed.java
index d5b3da9..5963b68 100644
--- a/tmp/b43ce753-cacd-475e-a1bd-6a4052e2cd25_buggy.java
+++ b/tmp/075169df-057a-4728-a975-e4f8712a6c8c_fixed.java
@@ -1,7 +1,34 @@
 private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
     for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
-                    el.setAttribute(key, attribute.getValue());
+        String key = attribute.getKey();
+        String value = attribute.getValue();
+        
+        // Check if the key contains invalid XML characters
+        if (key.matches(".*[^a-zA-Z_:][^-a-zA-Z0-9_:.]")) {
+            // If invalid, create a new key that's valid for XML
+            StringBuilder validKey = new StringBuilder();
+            for (int i = 0; i < key.length(); i++) {
+                char c = key.charAt(i);
+                if (i == 0 && Character.isLetter(c) || c == '_') {
+                    validKey.append(c);
+                } else if (c == '-' || c == '.' || (c >= '0' && c <= '9') || c == ':' || c == '_') {
+                    validKey.append(c);
+                }
+            }
+            if (validKey.length() == 0) {
+                // If no valid characters, use a default name
+                validKey.append("attr");
+            }
+            // Append a number if the key already exists
+            int counter = 1;
+            String finalKey = validKey.toString();
+            while (el.hasAttribute(finalKey)) {
+                finalKey = validKey + counter++;
+            }
+            el.setAttribute(finalKey, value);
+        } else {
+            // If valid, use the original key
+            el.setAttribute(key, value);
+        }
     }
 }
\ No newline at end of file
