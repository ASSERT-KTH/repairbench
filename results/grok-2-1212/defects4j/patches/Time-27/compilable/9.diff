diff --git a/tmp/6a81a771-75f6-4548-a69f-707b9bbdd000_buggy.java b/tmp/6445b2f6-5c31-4a1e-8fde-464532769b80_fixed.java
index ec6c9ee..98fd5e0 100644
--- a/tmp/6a81a771-75f6-4548-a69f-707b9bbdd000_buggy.java
+++ b/tmp/6445b2f6-5c31-4a1e-8fde-464532769b80_fixed.java
@@ -1,21 +1,16 @@
-    //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
     }
     Object[] comp = createComposite(elementPairs);
-        if (notPrinter) {
-            return new PeriodFormatter(null, (PeriodParser) comp[1]);
-        } else if (notParser) {
-            return new PeriodFormatter((PeriodPrinter) comp[0], null);
-        } else {
-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
-        }
+    PeriodPrinter printer = notPrinter ? null : (PeriodPrinter) comp[0];
+    PeriodParser parser = notParser ? null : (PeriodParser) comp[1];
+    return new PeriodFormatter(printer, parser);
 }
\ No newline at end of file
