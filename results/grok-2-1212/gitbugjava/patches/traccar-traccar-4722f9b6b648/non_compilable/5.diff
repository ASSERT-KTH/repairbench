diff --git a/tmp/151bf60e-406e-4f35-9ffd-3adcf1c3d9ad_buggy.java b/tmp/45bc32a7-fbf2-4b10-b6dc-c79f94b18cc5_fixed.java
index c84c989..f350869 100644
--- a/tmp/151bf60e-406e-4f35-9ffd-3adcf1c3d9ad_buggy.java
+++ b/tmp/45bc32a7-fbf2-4b10-b6dc-c79f94b18cc5_fixed.java
@@ -1,27 +1,52 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    
+    // Decode date and time
+    long dateTime = buf.readUnsignedIntLE();
+    Date time = decodeIridiumDateTime(dateTime);
+    position.setTime(time);
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
+
+// Helper method to decode Iridium date and time
+private Date decodeIridiumDateTime(long dateTime) {
+    int year = (int) (dateTime >> 26) + 2000;
+    int month = (int) ((dateTime >> 22) & 0xF) - 1; // 0-11 for Calendar
+    int day = (int) ((dateTime >> 17) & 0x1F);
+    int hour = (int) ((dateTime >> 12) & 0x1F);
+    int minute = (int) ((dateTime >> 6) & 0x3F);
+    int second = (int) (dateTime & 0x3F);
+
+    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+    calendar.set(Calendar.YEAR, year);
+    calendar.set(Calendar.MONTH, month);
+    calendar.set(Calendar.DAY_OF_MONTH, day);
+    calendar.set(Calendar.HOUR_OF_DAY, hour);
+    calendar.set(Calendar.MINUTE, minute);
+    calendar.set(Calendar.SECOND, second);
+    calendar.set(Calendar.MILLISECOND, 0);
+
+    return calendar.getTime();
+}
\ No newline at end of file
