diff --git a/tmp/8ac059ce-4426-4d97-9714-693edca37e49_buggy.java b/tmp/1f998b22-8e64-4ec7-b223-bf3532c02984_fixed.java
index 23f078d..ff1a8df 100644
--- a/tmp/8ac059ce-4426-4d97-9714-693edca37e49_buggy.java
+++ b/tmp/1f998b22-8e64-4ec7-b223-bf3532c02984_fixed.java
@@ -1,14 +1,17 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
-            if (c == ' ') {
+        if (Character.isSupplementaryCodePoint(c)) {
+            // Handle supplementary characters correctly
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), "UTF-8"));
+            i++; // Increment i to skip the next char as it's part of the surrogate pair
+        } else if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), "UTF-8"));
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
