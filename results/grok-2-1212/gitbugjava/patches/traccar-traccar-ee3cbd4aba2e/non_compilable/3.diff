diff --git a/tmp/0bd70634-bb53-4acd-9a01-a4206d247d7c_buggy.java b/tmp/3ea381bf-f927-4598-8211-b57cecfd2869_fixed.java
index a4ebaaa..54af3a8 100644
--- a/tmp/0bd70634-bb53-4acd-9a01-a4206d247d7c_buggy.java
+++ b/tmp/3ea381bf-f927-4598-8211-b57cecfd2869_fixed.java
@@ -1,63 +1,73 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
     while (buf.readableBytes() > 2) {
         int id = buf.readUnsignedByte();
         int length = buf.readUnsignedByte();
         switch (id) {
             case 0x02:
                 position.setAltitude(buf.readShort());
                 break;
             case 0x0C:
                 position.set("gyro", ByteBufUtil.hexDump(buf.readSlice(6)));
                 break;
+            case 0x0D:  // Adding handling for the tilt data
+                if (length == 6) {
+                    int x = buf.readByte();
+                    int y = buf.readByte();
+                    int z = buf.readByte();
+                    position.set("tilt", String.format("[%d,%d,%d]", x, y, z));
+                } else {
+                    buf.skipBytes(length);
+                }
+                break;
             default:
                 buf.skipBytes(length);
                 break;
         }
     }
 
     return position;
 }
\ No newline at end of file
