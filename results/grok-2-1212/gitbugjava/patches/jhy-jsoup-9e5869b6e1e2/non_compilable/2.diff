diff --git a/tmp/a31d2fee-45d7-4ff7-bb5a-e05b474bd76a_buggy.java b/tmp/9e41e1d4-8594-4a96-a298-36421bb0244f_fixed.java
index 0583946..0027e2e 100644
--- a/tmp/a31d2fee-45d7-4ff7-bb5a-e05b474bd76a_buggy.java
+++ b/tmp/9e41e1d4-8594-4a96-a298-36421bb0244f_fixed.java
@@ -1,30 +1,34 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
+        final Element parent = parentNode instanceof Element ? (Element) parentNode : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                            parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+                || (next instanceof TextNode && ((TextNode) next).isBlank()); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+            ) {
                 indent(accum, depth, out);
+            } else if (siblingIndex == 0 && parent != null && !parent.tag().isInline()) {
+                // Ensure no leading space for the first child of non-inline elements
+                trimLeading = true;
+            }
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
