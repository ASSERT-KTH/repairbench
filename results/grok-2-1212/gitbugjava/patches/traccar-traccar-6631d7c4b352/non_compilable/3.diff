diff --git a/tmp/1513ac67-c8a0-47d0-b162-8eacdf2432a7_buggy.java b/tmp/d30b4606-6614-4c9c-8b18-4df8af232c46_fixed.java
index d87dd79..0d3758a 100644
--- a/tmp/1513ac67-c8a0-47d0-b162-8eacdf2432a7_buggy.java
+++ b/tmp/d30b4606-6614-4c9c-8b18-4df8af232c46_fixed.java
@@ -1,47 +1,60 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    // Find the end of the first frame
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
-        if (endIndex > 0) {
+    // If no complete frame is found, return null
+    if (endIndex == -1) {
+        return null;
+    }
+
+    // Read and process the frame
     ByteBuf frame = Unpooled.buffer();
+    int startIndex = buf.readerIndex();
     while (buf.readerIndex() < endIndex) {
         byte b1 = buf.readByte();
         if (b1 == '}') {
+            if (buf.readerIndex() == buf.writerIndex()) {
+                // If we're at the end of the buffer, reset and return null
+                buf.readerIndex(startIndex);
+                return null;
+            }
             byte b2 = buf.readByte();
             switch (b2) {
                 case 0x01:
                     frame.writeByte('}');
                     break;
                 case 0x02:
                     frame.writeByte('[');
                     break;
                 case 0x03:
                     frame.writeByte(']');
                     break;
                 case 0x04:
                     frame.writeByte(',');
                     break;
                 case 0x05:
                     frame.writeByte('*');
                     break;
                 default:
                     throw new IllegalArgumentException(String.format(
                             "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
             }
         } else {
             frame.writeByte(b1);
         }
     }
+
+    // Move the reader index to the end of the processed frame
+    buf.readerIndex(endIndex);
+
     return frame;
 }
\ No newline at end of file
-
-        return null;
-    }
