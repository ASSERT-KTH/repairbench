diff --git a/tmp/58165df6-805a-4230-93ff-b022996fe2f7_buggy.java b/tmp/0d4370f5-f11a-44d8-acdf-ee531a4dd013_fixed.java
index 862c60c..fbce6d1 100644
--- a/tmp/58165df6-805a-4230-93ff-b022996fe2f7_buggy.java
+++ b/tmp/0d4370f5-f11a-44d8-acdf-ee531a4dd013_fixed.java
@@ -1,25 +1,37 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
+    final Element parent = parentNode instanceof Element ? (Element) parentNode : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                       parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
+        // Handle special case for <br> elements
+        if (parentNode instanceof Element && ((Element) parentNode).tagName().equals("p")) {
+            Node prev = this.previousSibling();
+            if (prev != null && prev instanceof Element && ((Element) prev).tagName().equals("br")) {
+                trimLeading = false;
+            }
+            Node next = this.nextSibling();
+            if (next != null && next instanceof Element && ((Element) next).tagName().equals("br")) {
+                trimTrailing = false;
+            }
+        }
+
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+            || (next instanceof TextNode && ((TextNode) next).isBlank()); // next is blank text, from re-parenting
         if (couldSkip && isBlank()) return;
 
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank()))
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
