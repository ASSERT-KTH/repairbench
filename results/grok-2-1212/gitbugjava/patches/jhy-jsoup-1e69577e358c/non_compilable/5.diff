diff --git a/tmp/7088dbf3-381e-4f84-a498-1970f4f923de_buggy.java b/tmp/bd2b8d4e-6797-44c1-abc3-12cdfdc9395a_fixed.java
index c9c77a4..af2cf94 100644
--- a/tmp/7088dbf3-381e-4f84-a498-1970f4f923de_buggy.java
+++ b/tmp/bd2b8d4e-6797-44c1-abc3-12cdfdc9395a_fixed.java
@@ -1,35 +1,35 @@
     URL build() {
         try {
-            // use the URI class to encode non-ascii in path
+            // use the URI class to encode non-ascii in path, but preserve existing encoding
             URI uri = new URI(
                 u.getProtocol(),
                 u.getUserInfo(),
                 IDN.toASCII(decodePart(u.getHost())), // puny-code
                 u.getPort(),
-                decodePart(u.getPath()),
+                u.getRawPath(), // Use raw path to preserve existing encoding
                 null, null // query and fragment appended later so as not to encode
             );
 
             String normUrl = uri.toASCIIString();
-            if (q != null || u.getRef() != null) {
+            if (q != null || u.getRawRef() != null) {
                 StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
                 if (q != null) {
                     sb.append('?');
                     appendToAscii(StringUtil.releaseBuilder(q), true, sb);
                 }
-                if (u.getRef() != null) {
+                if (u.getRawRef() != null) { // Use raw reference to preserve existing encoding
                     sb.append('#');
-                    appendToAscii(u.getRef(), false, sb);
+                    appendToAscii(u.getRawRef(), false, sb);
                 }
                 normUrl = StringUtil.releaseBuilder(sb);
             }
             u = new URL(normUrl);
             return u;
         } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
             // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
             // the remote end will be able to handle it, so in prod we just pass the original URL.
             // The UnsupportedEncodingException would never happen as always UTF8
             assert Validate.assertFail(e.toString());
             return u;
         }
     }
\ No newline at end of file
