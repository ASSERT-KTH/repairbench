diff --git a/tmp/5c943985-ca16-48e3-bff1-065665ebe1f7_buggy.java b/tmp/23e7ed06-0992-4a91-96bc-095f6ec63bda_fixed.java
index 855afa5..47ce886 100644
--- a/tmp/5c943985-ca16-48e3-bff1-065665ebe1f7_buggy.java
+++ b/tmp/23e7ed06-0992-4a91-96bc-095f6ec63bda_fixed.java
@@ -1,13 +1,33 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        String urlS = u.toExternalForm();
+        URI uri = new URI(urlS);
+        
+        // Encode each part of the URI separately
+        String scheme = uri.getScheme();
+        String authority = uri.getAuthority();
+        String path = uri.getPath() != null ? encodeURIComponent(uri.getPath()) : null;
+        String query = uri.getQuery() != null ? encodeURIComponent(uri.getQuery()) : null;
+        String fragment = uri.getFragment() != null ? encodeURIComponent(uri.getFragment()) : null;
+        
+        // Reconstruct the URI with encoded components
+        URI encodedUri = new URI(scheme, authority, path, query, fragment);
+        
+        return new URL(encodedUri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        // If encoding fails, return the original input
         return u;
     }
 }
+
+// Helper method to encode URI components
+private static String encodeURIComponent(String component) throws UnsupportedEncodingException {
+    return URLEncoder.encode(component, "UTF-8")
+            .replace("+", "%20")
+            .replace("%21", "!")
+            .replace("%27", "'")
+            .replace("%28", "(")
+            .replace("%29", ")")
+            .replace("%7E", "~");
+}
\ No newline at end of file
