diff --git a/tmp/b7f2f991-9a52-4b0e-a771-90239fca5411_buggy.java b/tmp/498d9df4-406f-481c-9e98-c5c2704c4ce4_fixed.java
index 855afa5..a73a746 100644
--- a/tmp/b7f2f991-9a52-4b0e-a771-90239fca5411_buggy.java
+++ b/tmp/498d9df4-406f-481c-9e98-c5c2704c4ce4_fixed.java
@@ -1,13 +1,25 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
+        String urlS = u.toExternalForm();
+        // Use URLEncoder to properly encode spaces and other special characters
+        urlS = java.net.URLEncoder.encode(urlS, "UTF-8");
+        // Replace %2F with / to preserve path separators
+        urlS = urlS.replace("%2F", "/");
+        // Replace %3A with : to preserve the scheme separator
+        urlS = urlS.replace("%3A", ":");
+        // Replace %3F with ? to preserve the query string separator
+        urlS = urlS.replace("%3F", "?");
+        // Replace %23 with # to preserve the fragment separator
+        urlS = urlS.replace("%23", "#");
+        // Replace %3D with = to preserve query parameter separators
+        urlS = urlS.replace("%3D", "=");
+        // Replace %26 with & to preserve query parameter separators
+        urlS = urlS.replace("%26", "&");
         final URI uri = new URI(urlS);
         return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+    } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
