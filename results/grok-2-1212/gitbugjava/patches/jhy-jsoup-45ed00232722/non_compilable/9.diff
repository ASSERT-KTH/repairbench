diff --git a/tmp/adea0b96-9ee5-4427-88eb-b41d28f22e32_buggy.java b/tmp/dd5c523d-4f41-44c8-b707-7b88da89b194_fixed.java
index 855afa5..a7e644e 100644
--- a/tmp/adea0b96-9ee5-4427-88eb-b41d28f22e32_buggy.java
+++ b/tmp/dd5c523d-4f41-44c8-b707-7b88da89b194_fixed.java
@@ -1,13 +1,42 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        String urlS = u.toExternalForm();
+        URI uri = new URI(urlS);
+        
+        // Encode each part of the URI separately
+        String scheme = uri.getScheme();
+        String authority = uri.getAuthority() != null ? uri.getAuthority() : "";
+        String path = uri.getPath() != null ? uri.getPath() : "";
+        String query = uri.getQuery() != null ? uri.getQuery() : "";
+        String fragment = uri.getFragment() != null ? uri.getFragment() : "";
+
+        // Encode path, query, and fragment
+        path = encodeURIComponent(path);
+        query = encodeURIComponent(query);
+        fragment = encodeURIComponent(fragment);
+
+        // Reconstruct the URI
+        URI encodedUri = new URI(scheme, authority, path, query, fragment);
+        
+        return new URL(encodedUri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        // Fall back to the original input if encoding fails
         return u;
     }
 }
+
+// Helper method to encode URI components
+private static String encodeURIComponent(String component) {
+    try {
+        return java.net.URLEncoder.encode(component, "UTF-8")
+            .replaceAll("\\+", "%20")
+            .replaceAll("%21", "!")
+            .replaceAll("%27", "'")
+            .replaceAll("%28", "(")
+            .replaceAll("%29", ")")
+            .replaceAll("%7E", "~");
+    } catch (UnsupportedEncodingException e) {
+        throw new RuntimeException("UTF-8 not supported", e);
+    }
+}
\ No newline at end of file
