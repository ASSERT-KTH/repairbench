You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
    // Evaluates the given postfix expression string and returns the result.
    public static int postfixEvaluate(final String exp) {
        Stack<Integer> s = new Stack<Integer>();
        Scanner tokens = new Scanner(exp);

        while (tokens.hasNext()) {
            if (tokens.hasNextInt()) {
                s.push(tokens.nextInt()); // If int then push to stack
            } else { // else pop top two values and perform the operation
                int num2 = s.pop();
                int num1 = s.pop();
                String op = tokens.next();

                switch (op) {
                    case "+" -> s.push(num1 + num2);
                    case "-" -> s.push(num1 - num2);
                    case "*" -> s.push(num1 * num2);
                    case "/" -> s.push(num1 / num2);
                    default -> throw new IllegalArgumentException("exp contains an unknown operation.");
                }
                //  "+", "-", "*", "/"
            }
        }
        tokens.close();
        if (s.size() != 1) {
            throw new IllegalArgumentException("exp is not a proper postfix expression.");
        }
        return s.pop();
    }

```

The code fails the following test:
```java
    @Test
    public void testIfEvaluateThrowsExceptionForInputWithTooFewArgsA() {
        assertThrows(IllegalArgumentException.class, () -> StackPostfixNotation.postfixEvaluate("+"));
    }

```

With the following test error:
```
Unexpected exception type thrown, expected: <java.lang.IllegalArgumentException> but was: <java.util.EmptyStackException>
```

Please provide a fixed version of the buggy function, and only that function:
