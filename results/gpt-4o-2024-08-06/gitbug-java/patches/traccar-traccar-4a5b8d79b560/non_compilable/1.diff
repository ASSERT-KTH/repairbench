diff --git a/tmp/852b40a8-268e-4668-8f1c-2359e1146c80_buggy.java b/tmp/c9bf5e52-6523-4a94-bc3f-74a9afe98211_fixed.java
index 1c732f4..ef340d4 100644
--- a/tmp/852b40a8-268e-4668-8f1c-2359e1146c80_buggy.java
+++ b/tmp/c9bf5e52-6523-4a94-bc3f-74a9afe98211_fixed.java
@@ -1,88 +1,102 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         String sentence = (String) msg;
-        sentence = sentence.substring(sentence.indexOf('|') + 1, sentence.lastIndexOf('|'));
+        // Ensure that sentence has at least two '|' to avoid index out of range
+        int firstDelimiter = sentence.indexOf('|');
+        if (firstDelimiter < 0) {
+            throw new IllegalArgumentException("Invalid message format: missing beginning '|'");
+        }
+        int lastDelimiter = sentence.lastIndexOf('|');
+        if (lastDelimiter <= firstDelimiter) {
+            throw new IllegalArgumentException("Invalid message format: missing ending '|'");
+        }
+
+        sentence = sentence.substring(firstDelimiter + 1, lastDelimiter);
 
         Position position = new Position();
         position.setProtocol(getProtocolName());
 
         for (String entry : sentence.split(",")) {
             int delimiter = entry.indexOf('=');
+            if (delimiter <= 0 || delimiter == entry.length() - 1) {
+                // Skip entries that don't have a key=value format or where value is empty
+                continue;
+            }
             String key = entry.substring(0, delimiter);
             String value = entry.substring(delimiter + 1);
             switch (key) {
                 case "unit":
                     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, value);
                     if (deviceSession != null) {
                         position.setDeviceId(deviceSession.getDeviceId());
                     }
                     break;
                 case "gps_valid":
                     position.setValid(Integer.parseInt(value) != 0);
                     break;
                 case "datetime_actual":
                     position.setTime(new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").parse(value));
                     break;
                 case "latitude":
                     position.setLatitude(Double.parseDouble(value));
                     break;
                 case "longitude":
                     position.setLongitude(Double.parseDouble(value));
                     break;
                 case "altitude":
                     position.setAltitude(Double.parseDouble(value));
                     break;
                 case "velocity":
                     position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(value)));
                     break;
                 case "heading":
                     position.setCourse(Integer.parseInt(value));
                     break;
                 case "eventid":
                     position.set(Position.KEY_EVENT, Integer.parseInt(value));
                     break;
                 case "mileage":
                     position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));
                     break;
                 case "satellites":
                     position.set(Position.KEY_SATELLITES, Integer.parseInt(value));
                     break;
                 case "ignition":
                     position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);
                     break;
                 case "door":
                     position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);
                     break;
                 case "arm":
                     position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);
                     break;
                 case "fuel":
                     position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));
                     break;
                 case "rpm":
                     position.set(Position.KEY_RPM, Integer.parseInt(value));
                     break;
                 case "main_voltage":
                     position.set(Position.KEY_POWER, Double.parseDouble(value));
                     break;
                 case "backup_voltage":
                     position.set(Position.KEY_BATTERY, Double.parseDouble(value));
                     break;
                 case "analog1":
                 case "analog2":
                 case "analog3":
                     position.set(Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'), Double.parseDouble(value));
                     break;
                 case "extra1":
                 case "extra2":
                 case "extra3":
                 default:
                     position.set(key, value);
                     break;
             }
         }
 
         return position;
     }
\ No newline at end of file
