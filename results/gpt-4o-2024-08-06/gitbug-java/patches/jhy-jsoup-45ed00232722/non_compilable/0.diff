diff --git a/tmp/bfd54bf6-3b40-4e47-9d28-85543d6b742b_buggy.java b/tmp/b6189788-809b-4e08-be7e-f809dca1bf3f_fixed.java
index 855afa5..c7f606b 100644
--- a/tmp/bfd54bf6-3b40-4e47-9d28-85543d6b742b_buggy.java
+++ b/tmp/b6189788-809b-4e08-be7e-f809dca1bf3f_fixed.java
@@ -1,13 +1,36 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
+        String urlS = u.toExternalForm();
         urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        
+        // Parse URL using URI for better control over encoding
+        URI uri = new URI(
+            u.getProtocol(),
+            u.getUserInfo(),
+            u.getHost(),
+            u.getPort(),
+            u.getPath(),
+            u.getQuery(),
+            u.getRef()
+        );
+
+        // Encode only the path, query, and fragment parts manually
+        String encodedPath = uri.getRawPath().replace("[", "%5B").replace("]", "%5D");
+        String encodedQuery = uri.getRawQuery() != null ? uri.getRawQuery().replace(" ", "%20") : null;
+        String encodedFragment = uri.getRawFragment() != null ? uri.getRawFragment().replace(" ", "%20") : null;
+        
+        URI encodedUri = new URI(
+            uri.getScheme(),
+            uri.getAuthority(),
+            encodedPath,
+            encodedQuery,
+            encodedFragment
+        );
+
+        return new URL(encodedUri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
