diff --git a/tmp/a09eb270-d366-4290-86c2-b73b24388412_buggy.java b/tmp/e9fcc232-8b38-4c12-9fc3-b4701d9f0552_fixed.java
index 0583946..2b6a807 100644
--- a/tmp/a09eb270-d366-4290-86c2-b73b24388412_buggy.java
+++ b/tmp/e9fcc232-8b38-4c12-9fc3-b4701d9f0552_fixed.java
@@ -1,30 +1,34 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank) return;
+        
+        // Adjust condition to check if the current text is not the only blank node and if next sibling isn't a block element or indenting element
+        if (couldSkip && isBlank && !(nextSibling() instanceof Element && ((Element) nextSibling()).tag().isBlock())) {
+            return;
+        }
 
         Node prev = previousSibling();
         if (
             (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
             (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
         )
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
