diff --git a/tmp/0775e75c-f88b-43d7-b298-8274bedf963b_buggy.java b/tmp/d6def610-2aef-4e76-be7e-caa72ad158f2_fixed.java
index c84c989..f908716 100644
--- a/tmp/0775e75c-f88b-43d7-b298-8274bedf963b_buggy.java
+++ b/tmp/d6def610-2aef-4e76-be7e-caa72ad158f2_fixed.java
@@ -1,27 +1,35 @@
+import java.util.Date;
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Read date and time
+    long timestamp = buf.readUnsignedIntLE(); // date and time
+    // Convert the timestamp (assuming it's a Unix timestamp for POSIX time)
+    position.setTime(new Date(timestamp * 1000)); // Convert seconds to milliseconds
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
