You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
	/**
	 * Move the given class to his grandparent (either class or package). The given {@code clazz} should be inner class.
	 */
	private void moveClassLevelUp(Outline outline, JDefinedClass clazz) {
		// Modify the container so it now refers the class. Container can be a class or package.
		JDefinedClass parent = (JDefinedClass) clazz.parentContainer();
		JClassContainer grandParent = parent.parentContainer();
		// Allows to track class name collisions:
		Map<String, JDefinedClass> classes;

		// FIXME: Pending https://java.net/jira/browse/JAXB-957
		if (grandParent.isClass()) {
			// Element class should be added as its container child:
			JDefinedClass grandParentClass = (JDefinedClass) grandParent;

			writeSummary("\tMoving inner class " + clazz.fullName() + " to class " + grandParentClass.fullName());

			classes = getPrivateField(grandParentClass, "classes");
		}
		else {
			JPackage grandParentPackage = (JPackage) grandParent;

			writeSummary("\tMoving inner class " + clazz.fullName() + " to package " + grandParentPackage.name());

			classes = getPrivateField(grandParentPackage, "classes");

			// In this scenario class should have "static" modifier reset otherwise it won't compile:
			setPrivateField(clazz.mods(), "mods", Integer.valueOf(clazz.mods().getValue() & ~JMod.STATIC));

			for (ClassOutline classOutline : outline.getClasses()) {
				if (classOutline.implClass == clazz) {
					XSComponent sc = classOutline.target.getSchemaComponent();

					// FIXME: Inner class is always a local declaration.
					assert (sc instanceof XSDeclaration && ((XSDeclaration) sc).isLocal());

					setPrivateField(sc, "anonymous", Boolean.FALSE);

					break;
				}
			}
		}

		if (classes.containsKey(clazz.name())) {
			writeSummary("\tRenaming class " + clazz.fullName() + " to class " + parent.name() + clazz.name());
			setPrivateField(clazz, "name", parent.name() + clazz.name());
		}

		classes.put(clazz.name(), clazz);

		// Finally modify the class so that it refers back the container:
		setPrivateField(clazz, "outer", grandParent);
	}

```

The code fails the following test:
```java
	@Test
	public void testInnerScopedElement() throws Exception {
		List<String> extraXewOptions = asList("-verbose", "-Xxew:instantiate early");
		List<String> classesToCheck = asList("Catalogue");
		runTest("inner-scoped-element", extraXewOptions, false, classesToCheck);
	}

```

With the following test error:
```

```

Please provide a fixed version of the buggy function, and only that function:
