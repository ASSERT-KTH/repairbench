diff --git a/tmp/1678cdc1-1681-4d06-bb1f-d62b4f4fcc31_buggy.java b/tmp/2b6d250d-1017-4c5b-be57-6fe274d3f598_fixed.java
index 23f078d..ffd8b7b 100644
--- a/tmp/1678cdc1-1681-4d06-bb1f-d62b4f4fcc31_buggy.java
+++ b/tmp/2b6d250d-1017-4c5b-be57-6fe274d3f598_fixed.java
@@ -1,14 +1,15 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name());
+            sb.append(encoded.replace("+", "%20")); // Replace '+' generated by URLEncoder
+            i += Character.charCount(c) - 1; // Correctly increment i for supplementary character
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
