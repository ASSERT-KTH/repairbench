You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
        final boolean prettyPrint = out.prettyPrint();
        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);

        boolean trimLeading = false;
        boolean trimTrailing = false;
        if (normaliseWhite) {
            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                parentNode instanceof Document;
            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();

            // if this text is just whitespace, and the next node will cause an indent, skip this text:
            Node next = this.nextSibling();
            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
            if (couldSkip && isBlank()) return;

            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
                indent(accum, depth, out);
        }

        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
    }

```

The code fails the following test:
```java
    @Test void wrapTextAfterBr() {
        // https://github.com/jhy/jsoup/issues/1858
        String html = "<p>Hello<br>there<br>now.</p>";
        Document doc = Jsoup.parse(html);
        assertEquals("<p>Hello<br>\n there<br>\n now.</p>", doc.body().html());
    }

```

With the following test error:
```
expected: <<p>Hello<br>
```

Please provide a fixed version of the buggy function, and only that function:
