diff --git a/tmp/e6350a73-f522-4e50-8069-18942f5937df_buggy.java b/tmp/c17e6688-27bf-4ec1-b1fb-1978fdac6506_fixed.java
index 1098336..75f3d98 100644
--- a/tmp/e6350a73-f522-4e50-8069-18942f5937df_buggy.java
+++ b/tmp/c17e6688-27bf-4ec1-b1fb-1978fdac6506_fixed.java
@@ -1,16 +1,27 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
     final var source = new InputSource(new StringReader(code));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
     var formattedCode = sheet.getCssText(this.formatter);
 
     // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
     formattedCode = formattedCode.replace("\t;", "\\9;");
 
+    // Adjust line endings based on the provided LineEnding
+    switch (ending) {
+        case LF:
+            formattedCode = formattedCode.replaceAll("\r\n", "\n").replaceAll("\r", "\n");
+            break;
+        case CRLF:
+            formattedCode = formattedCode.replaceAll("(?<!\r)\n", "\r\n").replaceAll("\r(?!\n)", "\r\n");
+            break;
+        // If there are other line endings in LineEnding enum, handle them accordingly
+    }
+
     if (code.equals(formattedCode)) {
         return null;
     }
     return formattedCode;
 }
\ No newline at end of file
