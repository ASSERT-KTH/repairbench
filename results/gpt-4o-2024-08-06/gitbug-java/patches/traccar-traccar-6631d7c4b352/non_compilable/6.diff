diff --git a/tmp/344b2121-b6db-465e-983a-ae18b303f915_buggy.java b/tmp/69a9c89e-6cd7-4de3-8981-9ef7495f28c7_fixed.java
index d87dd79..97b4ca2 100644
--- a/tmp/344b2121-b6db-465e-983a-ae18b303f915_buggy.java
+++ b/tmp/69a9c89e-6cd7-4de3-8981-9ef7495f28c7_fixed.java
@@ -1,47 +1,60 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
+        // Limit the readable bytes to the discovered frame end index
+        int originalLimit = buf.writerIndex();
+        buf.writerIndex(endIndex);
+
         ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
+        try {
+            while (buf.isReadable()) {
                 byte b1 = buf.readByte();
                 if (b1 == '}') {
+                    if (!buf.isReadable()) {
+                        throw new IllegalArgumentException(String.format(
+                                "Truncated escape sequence at %d", buf.readerIndex() - 1));
+                    }
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
                 } else {
                     frame.writeByte(b1);
                 }
             }
+        } finally {
+            // Restore the original writer index
+            buf.writerIndex(originalLimit);
+        }
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
