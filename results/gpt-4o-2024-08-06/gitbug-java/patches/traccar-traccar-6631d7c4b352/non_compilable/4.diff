diff --git a/tmp/952ab6f2-de9e-4552-bc4e-79f0a0654072_buggy.java b/tmp/55181193-8719-4f02-a843-f22a7c8dd320_fixed.java
index d87dd79..ce1c78f 100644
--- a/tmp/952ab6f2-de9e-4552-bc4e-79f0a0654072_buggy.java
+++ b/tmp/55181193-8719-4f02-a843-f22a7c8dd320_fixed.java
@@ -1,47 +1,51 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
+            endIndex = i;
             break;
         }
     }
 
-        if (endIndex > 0) {
+    if (endIndex >= 0 && endIndex < buf.writerIndex()) {
         ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
+        while (buf.readerIndex() <= endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
+                if (buf.readerIndex() <= endIndex) { // Ensure there's a byte to read
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
+                } else {
+                    throw new IllegalArgumentException("unexpected end of buffer after '}'");
+                }
             } else {
                 frame.writeByte(b1);
             }
         }
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
