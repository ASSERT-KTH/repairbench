diff --git a/tmp/ba08dbe7-4260-4101-8398-98f38e3380a3_buggy.java b/tmp/cb55ad34-2307-4ff1-b288-821a9f7fdd45_fixed.java
index d87dd79..79f8448 100644
--- a/tmp/ba08dbe7-4260-4101-8398-98f38e3380a3_buggy.java
+++ b/tmp/cb55ad34-2307-4ff1-b288-821a9f7fdd45_fixed.java
@@ -1,47 +1,56 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    int startIndex = buf.readerIndex();
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+
+    // Look for the ']' that indicates the end of a frame
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
+    // If we found an ending ']', we process the frame
     if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
+        ByteBuf frame = Unpooled.buffer(endIndex - startIndex);
+
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
                 byte b2 = buf.readByte();
                 switch (b2) {
                     case 0x01:
                         frame.writeByte('}');
                         break;
                     case 0x02:
                         frame.writeByte('[');
                         break;
                     case 0x03:
                         frame.writeByte(']');
                         break;
                     case 0x04:
                         frame.writeByte(',');
                         break;
                     case 0x05:
                         frame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
                                 "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                 }
             } else {
                 frame.writeByte(b1);
             }
         }
+
+        // Set the reader index of the buffer to the end of the processed frame
+        buf.readerIndex(endIndex);
         return frame;
     }
 
+    // Return null if no complete frame is found
     return null;
 }
\ No newline at end of file
