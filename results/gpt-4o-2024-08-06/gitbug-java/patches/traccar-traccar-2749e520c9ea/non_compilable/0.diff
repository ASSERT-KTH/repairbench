diff --git a/tmp/2a869ec2-b313-4017-8da1-5eb8ae4a9c51_buggy.java b/tmp/de38c38e-5e02-4b16-84bc-2630cbf4a118_fixed.java
index 7b9216c..2cb8ba6 100644
--- a/tmp/2a869ec2-b313-4017-8da1-5eb8ae4a9c51_buggy.java
+++ b/tmp/de38c38e-5e02-4b16-84bc-2630cbf4a118_fixed.java
@@ -1,47 +1,63 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
+    // Assuming that the "gyro" information is located as a fixed-size block in the buffer,
+    // read the next few bytes as required and store them in the "gyro" attribute of the position.
+    int gyroBytesLength = 6; // Replace with actual length if different
+    if (buf.readableBytes() >= gyroBytesLength) {
+        byte[] gyroBytes = new byte[gyroBytesLength];
+        buf.readBytes(gyroBytes);
+
+        // Encode as hexadecimal string or handle as needed. This is a placeholder.
+        StringBuilder gyroHex = new StringBuilder(gyroBytesLength * 2);
+        for (byte b : gyroBytes) {
+            gyroHex.append(String.format("%02x", b));
+        }
+
+        position.set("gyro", gyroHex.toString());
+    }
+
     return position;
 }
\ No newline at end of file
