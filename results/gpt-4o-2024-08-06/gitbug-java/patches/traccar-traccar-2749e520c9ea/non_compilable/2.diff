diff --git a/tmp/c966b263-ab94-4977-8c49-444b5181710f_buggy.java b/tmp/27f9f434-7ace-4118-baff-60c0db297bdb_fixed.java
index 7b9216c..33e4195 100644
--- a/tmp/c966b263-ab94-4977-8c49-444b5181710f_buggy.java
+++ b/tmp/27f9f434-7ace-4118-baff-60c0db297bdb_fixed.java
@@ -1,47 +1,69 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
+    if (buf.readableBytes() > 0) {
         position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+    }
+    
+    if (buf.readableBytes() > 0) {
         position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
+    }
+    
+    if (buf.readableBytes() >= 4) {
         position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
+    }
 
+    if (buf.readableBytes() > 0) {
         int battery = buf.readUnsignedByte();
         if (battery <= 100) {
             position.set(Position.KEY_BATTERY_LEVEL, battery);
         } else if (battery == 0xAA) {
             position.set(Position.KEY_CHARGE, true);
         }
+    }
 
+    if (buf.readableBytes() >= 6) {
         position.setNetwork(new Network(CellTower.fromCidLac(
                 getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
+    }
 
+    if (buf.readableBytes() > 0) {
         int product = buf.readUnsignedByte();
-        int status = buf.readUnsignedShort();
-        int alarm = buf.readUnsignedShort();
+        int status = 0;
+        int alarm = 0;
+
+        if (buf.readableBytes() >= 2) {
+            status = buf.readUnsignedShort();
+        }
+        
+        if (buf.readableBytes() >= 2) {
+            alarm = buf.readUnsignedShort();
+        }
 
         if (product == 1 || product == 2) {
             if (BitUtil.check(alarm, 0)) {
                 position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
             }
         } else if (product == 3) {
             position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
             if (BitUtil.check(alarm, 1)) {
                 position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
             }
             if (BitUtil.check(alarm, 2)) {
                 position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
             }
             if (BitUtil.check(alarm, 3)) {
                 position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
             }
         }
 
         position.set(Position.KEY_STATUS, status);
+    }
 
     return position;
 }
\ No newline at end of file
