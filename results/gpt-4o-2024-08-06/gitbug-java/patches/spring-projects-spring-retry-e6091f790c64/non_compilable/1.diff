diff --git a/tmp/76e41617-ea0b-4079-be3d-2c5ce815f55b_buggy.java b/tmp/8dff6469-a433-4e70-ba48-e2dfe1344b06_fixed.java
index b8e3fa3..4e55237 100644
--- a/tmp/76e41617-ea0b-4079-be3d-2c5ce815f55b_buggy.java
+++ b/tmp/8dff6469-a433-4e70-ba48-e2dfe1344b06_fixed.java
@@ -1,65 +1,57 @@
 /**
  * Builds the {@link BackOffPolicy} with the given parameters.
  * @return the {@link BackOffPolicy} instance
  */
 public BackOffPolicy build() {
-		if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
     ExponentialBackOffPolicy policy;
+    if ((this.multiplier != null && this.multiplier > 0) || this.multiplierSupplier != null) {
         if (Boolean.TRUE.equals(this.random)) {
             policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
+        } else {
             policy = new ExponentialBackOffPolicy();
         }
         if (this.delay != null) {
             policy.setInitialInterval(this.delay);
         }
         if (this.delaySupplier != null) {
             policy.initialIntervalSupplier(this.delaySupplier);
         }
         if (this.multiplier != null) {
             policy.setMultiplier(this.multiplier);
         }
         if (this.multiplierSupplier != null) {
             policy.multiplierSupplier(this.multiplierSupplier);
         }
-			if (this.maxDelay != null && this.delay != null) {
-				policy.setMaxInterval(
-						this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
+        if (this.maxDelay != null) {
+            policy.setMaxInterval(this.maxDelay);
         }
         if (this.maxDelaySupplier != null) {
             policy.maxIntervalSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper != null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
+
     if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
-			UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
-			if (this.delay != null) {
-				policy.setMinBackOffPeriod(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.minBackOffPeriodSupplier(this.delaySupplier);
-			}
+        UniformRandomBackOffPolicy uniformPolicy = new UniformRandomBackOffPolicy();
+        uniformPolicy.setMinBackOffPeriod(this.delay);
         if (this.maxDelay != null) {
-				policy.setMaxBackOffPeriod(this.maxDelay);
-			}
-			if (this.maxDelaySupplier != null) {
-				policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
+            uniformPolicy.setMaxBackOffPeriod(this.maxDelay);
         }
         if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
+            uniformPolicy.setSleeper(this.sleeper);
         }
-			return policy;
+        return uniformPolicy;
     }
-		FixedBackOffPolicy policy = new FixedBackOffPolicy();
+
+    FixedBackOffPolicy fixedPolicy = new FixedBackOffPolicy();
     if (this.delay != null) {
-			policy.setBackOffPeriod(this.delay);
+        fixedPolicy.setBackOffPeriod(this.delay);
     }
     if (this.sleeper != null) {
-			policy.setSleeper(this.sleeper);
+        fixedPolicy.setSleeper(this.sleeper);
     }
-		return policy;
+    return fixedPolicy;
 }
\ No newline at end of file
