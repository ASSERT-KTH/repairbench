diff --git a/tmp/8d1c4987-0d4c-4c77-8212-aa192e97e708_buggy.java b/tmp/c053d844-5be9-4ef6-a259-6b0057cd2ed7_fixed.java
index b8e3fa3..25231cf 100644
--- a/tmp/8d1c4987-0d4c-4c77-8212-aa192e97e708_buggy.java
+++ b/tmp/c053d844-5be9-4ef6-a259-6b0057cd2ed7_fixed.java
@@ -1,65 +1,66 @@
 	/**
 	 * Builds the {@link BackOffPolicy} with the given parameters.
 	 * @return the {@link BackOffPolicy} instance
 	 */
 	public BackOffPolicy build() {
-		if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
-			ExponentialBackOffPolicy policy;
-			if (Boolean.TRUE.equals(this.random)) {
-				policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
-				policy = new ExponentialBackOffPolicy();
-			}
+		ExponentialBackOffPolicy exponentialPolicy = null;
+		UniformRandomBackOffPolicy uniformPolicy = null;
+		FixedBackOffPolicy fixedPolicy = null;
+		
+		if ((this.multiplier != null && this.multiplier > 0) || this.multiplierSupplier != null) {
+			exponentialPolicy = Boolean.TRUE.equals(this.random) ? new ExponentialRandomBackOffPolicy() : new ExponentialBackOffPolicy();
 			if (this.delay != null) {
-				policy.setInitialInterval(this.delay);
+				exponentialPolicy.setInitialInterval(this.delay);
 			}
 			if (this.delaySupplier != null) {
-				policy.initialIntervalSupplier(this.delaySupplier);
+				exponentialPolicy.initialIntervalSupplier(this.delaySupplier);
 			}
 			if (this.multiplier != null) {
-				policy.setMultiplier(this.multiplier);
+				exponentialPolicy.setMultiplier(this.multiplier);
 			}
 			if (this.multiplierSupplier != null) {
-				policy.multiplierSupplier(this.multiplierSupplier);
-			}
-			if (this.maxDelay != null && this.delay != null) {
-				policy.setMaxInterval(
-						this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
-			}
-			if (this.maxDelaySupplier != null) {
-				policy.maxIntervalSupplier(this.maxDelaySupplier);
-			}
-			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
-			}
-			return policy;
-		}
-		if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
-			UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
-			if (this.delay != null) {
-				policy.setMinBackOffPeriod(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.minBackOffPeriodSupplier(this.delaySupplier);
+				exponentialPolicy.multiplierSupplier(this.multiplierSupplier);
 			}
 			if (this.maxDelay != null) {
-				policy.setMaxBackOffPeriod(this.maxDelay);
+				exponentialPolicy.setMaxInterval(this.maxDelay);
+			} else {
+				exponentialPolicy.setMaxInterval(ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
 			}
 			if (this.maxDelaySupplier != null) {
-				policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
+				exponentialPolicy.maxIntervalSupplier(this.maxDelaySupplier);
 			}
 			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
+				exponentialPolicy.setSleeper(this.sleeper);
 			}
-			return policy;
 		}
-		FixedBackOffPolicy policy = new FixedBackOffPolicy();
+
+		if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
+			uniformPolicy = new UniformRandomBackOffPolicy();
+			uniformPolicy.setMinBackOffPeriod(this.delay);
+			if (this.delaySupplier != null) {
+				uniformPolicy.minBackOffPeriodSupplier(this.delaySupplier);
+			}
+			uniformPolicy.setMaxBackOffPeriod(this.maxDelay);
+			if (this.maxDelaySupplier != null) {
+				uniformPolicy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
+			}
+			if (this.sleeper != null) {
+				uniformPolicy.setSleeper(this.sleeper);
+			}
+		}
+
+		if (exponentialPolicy != null) {
+			return exponentialPolicy;
+		} else if (uniformPolicy != null) {
+			return uniformPolicy;
+		} else {
+			fixedPolicy = new FixedBackOffPolicy();
 			if (this.delay != null) {
-			policy.setBackOffPeriod(this.delay);
+				fixedPolicy.setBackOffPeriod(this.delay);
 			}
 			if (this.sleeper != null) {
-			policy.setSleeper(this.sleeper);
+				fixedPolicy.setSleeper(this.sleeper);
+			}
+			return fixedPolicy;
 		}
-		return policy;
 	}
\ No newline at end of file
