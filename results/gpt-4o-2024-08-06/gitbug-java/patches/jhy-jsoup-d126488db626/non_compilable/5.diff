diff --git a/tmp/c58a5968-a53f-4599-9d91-ecbb3d1c987f_buggy.java b/tmp/6e9612a1-f53f-4b36-aaa6-bb1a3825f4b7_fixed.java
index 5bf31b1..72ecea8 100644
--- a/tmp/c58a5968-a53f-4599-9d91-ecbb3d1c987f_buggy.java
+++ b/tmp/6e9612a1-f53f-4b36-aaa6-bb1a3825f4b7_fixed.java
@@ -1,17 +1,24 @@
 private String consumeSubQuery() {
     StringBuilder sq = StringUtil.borrowBuilder();
+    boolean subQueryStarted = false; // To track if we started capturing a sub-query
+    
     while (!tq.isEmpty()) {
-            if (tq.matches("("))
+        if (tq.matches("(")) {
             sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
-            else if (tq.matches("["))
+            subQueryStarted = true;
+        } else if (tq.matches("[")) {
             sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
-            else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
-                    break;
-                else
-                    tq.consume();
-            else
+            subQueryStarted = true;
+        } else if (tq.matchesAny(Combinators)) {
+            if (subQueryStarted && sq.length() > 0) {
+                break; // End of the current sub-query when a combinator is encountered
+            } else {
+                tq.consume(); // Consume the combinator and continue
+            }
+        } else {
             sq.append(tq.consume());
+            subQueryStarted = true;
+        }
     }
     return StringUtil.releaseBuilder(sq);
 }
\ No newline at end of file
