diff --git a/tmp/6fdbeac3-29dd-4022-869c-5c99d6ce9e4b_buggy.java b/tmp/5ba6aa27-8453-4375-b3da-2ac9e71b1285_fixed.java
index 862c60c..aabc33a 100644
--- a/tmp/6fdbeac3-29dd-4022-869c-5c99d6ce9e4b_buggy.java
+++ b/tmp/5ba6aa27-8453-4375-b3da-2ac9e71b1285_fixed.java
@@ -1,25 +1,33 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = this.nextSibling();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+            // Fix: Added check to handle <br> tags and adjust indentation accordingly
+            if (!isBlank()) {
+                if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock()) ||
+                    (out.outline() && siblingNodes().size() > 0)) {
                     indent(accum, depth, out);
+                } else if (siblingIndex > 0 && siblingNode(siblingIndex - 1) instanceof Element && 
+                         ((Element) siblingNode(siblingIndex - 1)).tag().getName().equals("br")) {
+                    accum.append('\n');
+                    indent(accum, depth, out);
+                }
+            }
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
