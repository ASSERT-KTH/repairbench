diff --git a/tmp/67306efe-63c8-45f6-b4ce-da233caa1740_buggy.java b/tmp/e39293ae-002d-44cd-b369-894908516aa5_fixed.java
index 855afa5..bc0f0c6 100644
--- a/tmp/67306efe-63c8-45f6-b4ce-da233caa1740_buggy.java
+++ b/tmp/e39293ae-002d-44cd-b369-894908516aa5_fixed.java
@@ -1,13 +1,24 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        // Manually encode the components of the URL
+        String protocol = u.getProtocol();
+        String host = u.getHost();
+        int port = u.getPort();
+        String path = u.getPath();
+        String query = u.getQuery();
+        String ref = u.getRef();
+
+        // Encode each component if necessary
+        String encodedPath = path != null ? new URI(null, null, path, null).getRawPath() : null;
+        String encodedQuery = query != null ? new URI(null, null, null, query, null).getRawQuery() : null;
+        String encodedRef = ref != null ? new URI(null, null, null, null, ref).getRawFragment() : null;
+
+        // Reconstruct the URL using the encoded components
+        URI uri = new URI(protocol, null, host, port, encodedPath, encodedQuery, encodedRef);
+        return uri.toURL();
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
