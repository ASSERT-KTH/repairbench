diff --git a/tmp/d5efe5ce-d6d2-48f2-a17d-0b94bdf28566_buggy.java b/tmp/b6f75c37-774a-4a22-9dd7-589be2318ab0_fixed.java
index 23f078d..26093d9 100644
--- a/tmp/d5efe5ce-d6d2-48f2-a17d-0b94bdf28566_buggy.java
+++ b/tmp/b6f75c37-774a-4a22-9dd7-589be2318ab0_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length();) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
+            i++;
         } else if (c > 127) { // out of ascii range
             sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            i += Character.charCount(c); // increment by the number of code units in the codepoint
         } else {
             sb.append((char) c);
+            i++;
         }
     }
 }
\ No newline at end of file
