diff --git a/tmp/3850483f-bc77-4bda-8fcd-007b0181494e_buggy.java b/tmp/2fa82998-4f71-4257-b7e0-d84602cb8b29_fixed.java
index eb0a5c8..e0916b4 100644
--- a/tmp/3850483f-bc77-4bda-8fcd-007b0181494e_buggy.java
+++ b/tmp/2fa82998-4f71-4257-b7e0-d84602cb8b29_fixed.java
@@ -1,27 +1,27 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
     if (!ariCommand.extractCommandType().isCreationCommand()) {
       return Try.success(Done.done());
     }
 
-    final Option<AriResource> maybeResource =
+    final Option<AriResourceRelation> maybeResourceRelation =
         ariCommand
             .extractResourceRelations()
-            .find(AriResourceRelation::isCreated)
-            .map(AriResourceRelation::getResource);
+            .find(AriResourceRelation::isCreated);
 
-    if (maybeResource.isEmpty()) {
+    if (maybeResourceRelation.isEmpty()) {
       return Try.failure(
           new RuntimeException(
               String.format(
-                  "Failed to extract resourceId from command '%s'", ariCommand.toString())));
+                  "Failed to extract created resource relation from command '%s'", ariCommand.toString())));
     }
 
-    final AriResource resource = maybeResource.get();
+    final AriResourceRelation resourceRelation = maybeResourceRelation.get();
+    final AriResource resource = resourceRelation.getResource();
 
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
     return Try.success(Done.done());
   }
\ No newline at end of file
