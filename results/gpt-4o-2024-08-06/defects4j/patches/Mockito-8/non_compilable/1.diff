diff --git a/tmp/879cff4a-75de-480e-8dae-16bf352b938f_buggy.java b/tmp/3c0a8446-ee69-4a12-901c-416b8185df57_fixed.java
index 42b58d0..0eaca91 100644
--- a/tmp/879cff4a-75de-480e-8dae-16bf352b938f_buggy.java
+++ b/tmp/3c0a8446-ee69-4a12-901c-416b8185df57_fixed.java
@@ -1,19 +1,23 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
         TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+        Set<TypeVariable> seen = new HashSet<>(); // to track cyclic dependencies and prevent infinite recursion
+
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+            } else if (actualTypeArgument instanceof TypeVariable && seen.add((TypeVariable) actualTypeArgument)) {
+                // Avoid cyclic dependency issues by checking if the type variable has already been processed
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
+
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
