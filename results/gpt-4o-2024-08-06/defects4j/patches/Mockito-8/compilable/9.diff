diff --git a/tmp/66454155-8bc1-40b0-aba0-9e1a42929caf_buggy.java b/tmp/7d9aeba8-d8cb-4ede-a1dc-103e742519e3_fixed.java
index 42b58d0..bc2cff2 100644
--- a/tmp/66454155-8bc1-40b0-aba0-9e1a42929caf_buggy.java
+++ b/tmp/7d9aeba8-d8cb-4ede-a1dc-103e742519e3_fixed.java
@@ -1,19 +1,20 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
-            Type actualTypeArgument = actualTypeArguments[i];
+    
+    for (int i = 0; i < typeParameters.length; i++) {
+        TypeVariable<?> typeParameter = typeParameters[i];
+        Type actualTypeArgument = actualTypeArguments.length > i ? actualTypeArguments[i] : null;
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+        } else if (actualTypeArgument != null) {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+        // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(actualTypeArgument) + ")" + "' }");
     }
 }
\ No newline at end of file
