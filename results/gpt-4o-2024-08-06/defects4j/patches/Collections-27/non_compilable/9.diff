diff --git a/tmp/9ee8d60c-c81a-41d9-bf9e-7de12ff2e164_buggy.java b/tmp/66b2e29c-444d-456d-916d-8e298e034b64_fixed.java
index e69de29..84d8cec 100644
--- a/tmp/9ee8d60c-c81a-41d9-bf9e-7de12ff2e164_buggy.java
+++ b/tmp/66b2e29c-444d-456d-916d-8e298e034b64_fixed.java
@@ -0,0 +1,35 @@
+import java.io.*;
+
+public class SerializationUtils {
+
+    private static final Set<Class<?>> ALLOWED_CLASSES = Set.of(
+        ArrayList.class,
+        HashMap.class,
+        // other allowed classes
+    );
+
+    public static Object deserialize(byte[] data) throws IOException, ClassNotFoundException {
+        try (ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data)) {
+            @Override
+            protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {
+                Class<?> clazz = super.resolveClass(desc);
+                if (!ALLOWED_CLASSES.contains(clazz)) {
+                    throw new UnsupportedOperationException("Deserialization of this class is not permitted: " + clazz.getName());
+                }
+                return clazz;
+            }
+        }) {
+            return ois.readObject();
+        }
+    }
+
+    // Serialization method (if needed for completeness, unchanged)
+    public static byte[] serialize(Object obj) throws IOException {
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        try (ObjectOutputStream out = new ObjectOutputStream(bos)) {
+            out.writeObject(obj);
+            out.flush();
+            return bos.toByteArray();
+        }
+    }
+}
\ No newline at end of file
