diff --git a/tmp/33a2afcf-d689-420a-8455-55ee10f6a73c_buggy.java b/tmp/ab5625a6-1496-493c-aa65-bac85a64eb16_fixed.java
index 71189c3..244e74a 100644
--- a/tmp/33a2afcf-d689-420a-8455-55ee10f6a73c_buggy.java
+++ b/tmp/ab5625a6-1496-493c-aa65-bac85a64eb16_fixed.java
@@ -1,46 +1,52 @@
     public void validate(final WriteableCommandLine commandLine)
         throws OptionException {
         // number of options found
         int present = 0;
 
         // reference to first unexpected option
         Option unexpected = null;
 
         for (final Iterator i = options.iterator(); i.hasNext();) {
             final Option option = (Option) i.next();
 
             // needs validation?
             boolean validate = option.isRequired() || option instanceof Group;
             if (validate) {
                 option.validate(commandLine);
             }
 
             // if the child option is present then validate it
             if (commandLine.hasOption(option)) {
                 if (++present > maximum) {
                     unexpected = option;
 
                     break;
                 }
 
+                // Cast values properly before validation
+                Object value = commandLine.getValue(option);
+                if (value instanceof File) {
+                    commandLine.addValue(option, ((File) value).getPath());
+                }
+
                 option.validate(commandLine);
             }
         }
 
         // too many options
         if (unexpected != null) {
             throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
                                       unexpected.getPreferredName());
         }
 
-        // too few option
+        // too few options
         if (present < minimum) {
             throw new OptionException(this, ResourceConstants.MISSING_OPTION);
         }
 
         // validate each anonymous argument
         for (final Iterator i = anonymous.iterator(); i.hasNext();) {
             final Option option = (Option) i.next();
             option.validate(commandLine);
         }
     }
\ No newline at end of file
