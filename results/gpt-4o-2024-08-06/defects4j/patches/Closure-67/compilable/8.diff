diff --git a/tmp/3fff1e47-8e3d-4306-96bd-6ae90f49e6c8_buggy.java b/tmp/d472a9af-20a0-43f5-bd78-3fe48cf30220_fixed.java
index 939f49b..ec4027c 100644
--- a/tmp/3fff1e47-8e3d-4306-96bd-6ae90f49e6c8_buggy.java
+++ b/tmp/d472a9af-20a0-43f5-bd78-3fe48cf30220_fixed.java
@@ -1,21 +1,26 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+          Node objectNode = n.getFirstChild().getFirstChild();
+          Node propertyNode = objectNode.getNext();
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          if (propertyNode != null && propertyNode.getType() == Token.STRING &&
+              propertyNode.getString().equals("prototype")) {
+            return true;
+          }
+        }
+
+        if (n.getFirstChild().getType() == Token.NAME && n.getLastChild().getType() == Token.STRING) {
+            if (n.getLastChild().getString().equals("prototype")) {
                 return true;
             }
         }
       }
 
       return false;
     }
\ No newline at end of file
