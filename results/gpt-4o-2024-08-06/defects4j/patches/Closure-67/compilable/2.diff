diff --git a/tmp/69f920eb-793f-49bf-bb0b-7f24795e829f_buggy.java b/tmp/a07ddbb3-8624-43c5-b598-43a287a46136_fixed.java
index 939f49b..ebd0147 100644
--- a/tmp/69f920eb-793f-49bf-bb0b-7f24795e829f_buggy.java
+++ b/tmp/a07ddbb3-8624-43c5-b598-43a287a46136_fixed.java
@@ -1,21 +1,16 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+      && n.getType() == Token.GETPROP) {
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    Node object = n.getFirstChild();
+    if (object != null && object.getType() == Token.GETPROP) {
+      Node property = object.getNext();
+      if (property != null && property.getType() == Token.STRING
+          && property.getString().equals("prototype")) {
         return true;
       }
     }
   }
-
   return false;
 }
\ No newline at end of file
