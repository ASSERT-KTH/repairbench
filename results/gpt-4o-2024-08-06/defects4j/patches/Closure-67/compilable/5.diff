diff --git a/tmp/379c6a6f-8579-4f91-a4ab-a306cd5e9dc4_buggy.java b/tmp/26fe2164-aa76-401f-808e-48fc478ccaa6_fixed.java
index 939f49b..5ea8b9d 100644
--- a/tmp/379c6a6f-8579-4f91-a4ab-a306cd5e9dc4_buggy.java
+++ b/tmp/26fe2164-aa76-401f-808e-48fc478ccaa6_fixed.java
@@ -1,21 +1,15 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        // We want to handle assignments like `e.prototype['alias1']`
+        Node propNode = n.getLastChild();
+        if (propNode.getType() == Token.STRING && 
+            (propNode.getString().equals("prototype") || n.getFirstChild().getString().equals("prototype"))) {
           return true;
         }
       }
-      }
 
       return false;
     }
\ No newline at end of file
