diff --git a/tmp/db27d3f3-5a4b-4a23-a718-3e420d232b12_buggy.java b/tmp/0d3d898d-2666-471e-9640-6b3574274064_fixed.java
index cc69d41..4b1f6dc 100644
--- a/tmp/db27d3f3-5a4b-4a23-a718-3e420d232b12_buggy.java
+++ b/tmp/0d3d898d-2666-471e-9640-6b3574274064_fixed.java
@@ -1,29 +1,19 @@
-    /**
-     * Create an Option using the current settings and with
-     * the specified Option <code>char</code>.
-     *
-     * @param opt the <code>java.lang.String</code> representation
-     * of the Option
-     * @return the Option instance
-     * @throws IllegalArgumentException if <code>opt</code> is not
-     * a valid character.  See Option.
-     */
 public static Option create(String opt) throws IllegalArgumentException
 {
         // create the option
-        Option option = new Option(opt, description);
+    Option option = new Option(opt, OptionBuilder.description);
 
         // set the option properties
-            option.setLongOpt(longopt);
-            option.setRequired(required);
-            option.setOptionalArg(optionalArg);
-            option.setArgs(numberOfArgs);
-            option.setType(type);
-            option.setValueSeparator(valuesep);
-            option.setArgName(argName);
+    option.setLongOpt(OptionBuilder.longopt);
+    option.setRequired(OptionBuilder.required);
+    option.setOptionalArg(OptionBuilder.optionalArg);
+    option.setArgs(OptionBuilder.numberOfArgs);
+    option.setType(OptionBuilder.type);
+    option.setValueSeparator(OptionBuilder.valuesep);
+    option.setArgName(OptionBuilder.argName);
     // reset the OptionBuilder properties
     OptionBuilder.reset();
 
     // return the Option instance
     return option;
 }
\ No newline at end of file
