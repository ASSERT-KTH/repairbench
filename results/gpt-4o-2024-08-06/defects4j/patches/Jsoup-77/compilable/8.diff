diff --git a/tmp/a628c86c-f6c0-4c8d-93bb-233d2156abe2_buggy.java b/tmp/5d226a5f-d3ea-483a-a4f8-6f5b8b0624b3_fixed.java
index 9a3a9db..8596143 100644
--- a/tmp/a628c86c-f6c0-4c8d-93bb-233d2156abe2_buggy.java
+++ b/tmp/5d226a5f-d3ea-483a-a4f8-6f5b8b0624b3_fixed.java
@@ -1,27 +1,30 @@
     /**
      * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
      * found, skips.
      *
      * @param endTag tag to close
      */
     private void popStackToClose(Token.EndTag endTag) {
         String elName = endTag.name();
         Element firstFound = null;
 
+        // Traverse the stack to find the first occurrence
         for (int pos = stack.size() - 1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             if (next.nodeName().equals(elName)) {
                 firstFound = next;
                 break;
             }
         }
+
+        // If not found, nothing to pop, so return early
         if (firstFound == null)
             return; // not found, skip
 
-        for (int pos = stack.size() -1; pos >= 0; pos--) {
-            Element next = stack.get(pos);
-            stack.remove(pos);
-            if (next == firstFound)
+        // Remove all elements from the stack until (and including) the firstFound element
+        while (!stack.isEmpty()) {
+            Element removed = stack.remove(stack.size() - 1);
+            if (removed == firstFound)
                 break;
         }
     }
\ No newline at end of file
