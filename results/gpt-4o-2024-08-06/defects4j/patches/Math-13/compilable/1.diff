diff --git a/tmp/0199a621-2ced-4067-9084-5565a6d4e6f6_buggy.java b/tmp/20806ea3-dba4-4db1-ae3e-f88c8797128f_fixed.java
index 4e21866..7a1251d 100644
--- a/tmp/0199a621-2ced-4067-9084-5565a6d4e6f6_buggy.java
+++ b/tmp/20806ea3-dba4-4db1-ae3e-f88c8797128f_fixed.java
@@ -1,10 +1,44 @@
     /**
      * Computes the square-root of the weight matrix.
      *
      * @param m Symmetric, positive-definite (weight) matrix.
      * @return the square-root of the weight matrix.
+     * @throws IllegalArgumentException if the matrix is not symmetric or positive-definite.
      */
     private RealMatrix squareRoot(RealMatrix m) {
+        if (!m.isSquare()) {
+            throw new IllegalArgumentException("Matrix is not square.");
+        }
+
+        // Verify symmetry and positive-definiteness
+        for (int i = 0; i < m.getRowDimension(); i++) {
+            for (int j = i + 1; j < m.getColumnDimension(); j++) {
+                if (m.getEntry(i, j) != m.getEntry(j, i)) {
+                    throw new IllegalArgumentException("Matrix is not symmetric.");
+                }
+            }
+        }
+
         final EigenDecomposition dec = new EigenDecomposition(m);
+        if (!isPositiveDefinite(dec)) {
+            throw new IllegalArgumentException("Matrix is not positive definite.");
+        }
+
         return dec.getSquareRoot();
     }
+
+    /**
+     * Checks if the matrix is positive definite based on its eigenvalues.
+     *
+     * @param dec the EigenDecomposition of the matrix
+     * @return true if the matrix is positive definite, false otherwise.
+     */
+    private boolean isPositiveDefinite(EigenDecomposition dec) {
+        double[] eigenvalues = dec.getRealEigenvalues();
+        for (double eigenvalue : eigenvalues) {
+            if (eigenvalue <= 0) {
+                return false;
+            }
+        }
+        return true;
+    }
\ No newline at end of file
