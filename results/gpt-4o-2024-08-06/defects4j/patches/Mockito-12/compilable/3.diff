diff --git a/tmp/1167a724-13e0-401f-a94a-6f965b6e4aac_buggy.java b/tmp/6f8218bf-6078-4cb9-b96a-f9344c905682_fixed.java
index bada2b6..69a7e34 100644
--- a/tmp/1167a724-13e0-401f-a94a-6f965b6e4aac_buggy.java
+++ b/tmp/6f8218bf-6078-4cb9-b96a-f9344c905682_fixed.java
@@ -1,16 +1,18 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
+    public Class<?> getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            if (actual instanceof Class<?>) {
+                return (Class<?>) actual;
+            }
+            // Handle the case where 'actual' is not a Class, which can occur in nested or complex generics
         }
         
         return Object.class;
     }
\ No newline at end of file
