diff --git a/tmp/d239e0d6-9c6a-41d8-b525-24295157b27a_buggy.java b/tmp/7f6fdd1f-25d0-487e-a599-09793eb3ac79_fixed.java
index bada2b6..0b07a5b 100644
--- a/tmp/d239e0d6-9c6a-41d8-b525-24295157b27a_buggy.java
+++ b/tmp/7f6fdd1f-25d0-487e-a599-09793eb3ac79_fixed.java
@@ -1,16 +1,19 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
  * 
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            // in case of nested generics, get the raw type
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
