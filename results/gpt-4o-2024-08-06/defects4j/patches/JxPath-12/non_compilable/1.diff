diff --git a/tmp/4cecd8ee-9eee-47b6-9f5b-238f856b2542_buggy.java b/tmp/ce697fa9-1286-4cc1-94a9-ae1bb9864976_fixed.java
index 40f74f7..eb49f20 100644
--- a/tmp/4cecd8ee-9eee-47b6-9f5b-238f856b2542_buggy.java
+++ b/tmp/ce697fa9-1286-4cc1-94a9-ae1bb9864976_fixed.java
@@ -1,50 +1,53 @@
     public static boolean testNode(Node node, NodeTest test) {
         if (test == null) {
             return true;
         }
         if (test instanceof NodeNameTest) {
             if (node.getNodeType() != Node.ELEMENT_NODE) {
                 return false;
             }
 
             NodeNameTest nodeNameTest = (NodeNameTest) test;
             QName testName = nodeNameTest.getNodeName();
-            String namespaceURI = nodeNameTest.getNamespaceURI();
+            String namespaceURI = testName.getNamespaceURI();
             boolean wildcard = nodeNameTest.isWildcard();
-            String testPrefix = testName.getPrefix();
-            if (wildcard && testPrefix == null) {
+            String testLocalName = testName.getLocalPart();
+
+            if (wildcard && (namespaceURI == null || namespaceURI.isEmpty())) {
                 return true;
             }
-            if (wildcard
-                || testName.getName()
-                        .equals(DOMNodePointer.getLocalName(node))) {
+
+            if (wildcard || testLocalName.equals(DOMNodePointer.getLocalName(node))) {
                 String nodeNS = DOMNodePointer.getNamespaceURI(node);
+                if (namespaceURI == null || namespaceURI.isEmpty()) {
+                    namespaceURI = nodeNS;
+                }
                 return equalStrings(namespaceURI, nodeNS);
             }
             return false;
         }
         if (test instanceof NodeTypeTest) {
             int nodeType = node.getNodeType();
             switch (((NodeTypeTest) test).getNodeType()) {
                 case Compiler.NODE_TYPE_NODE :
                     return nodeType == Node.ELEMENT_NODE
                             || nodeType == Node.DOCUMENT_NODE;
                 case Compiler.NODE_TYPE_TEXT :
                     return nodeType == Node.CDATA_SECTION_NODE
                         || nodeType == Node.TEXT_NODE;
                 case Compiler.NODE_TYPE_COMMENT :
                     return nodeType == Node.COMMENT_NODE;
                 case Compiler.NODE_TYPE_PI :
                     return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
             }
             return false;
         }
         if (test instanceof ProcessingInstructionTest) {
             if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
                 String testPI = ((ProcessingInstructionTest) test).getTarget();
                 String nodePI = ((ProcessingInstruction) node).getTarget();
                 return testPI.equals(nodePI);
             }
         }
         return false;
     }
\ No newline at end of file
