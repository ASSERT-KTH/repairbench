diff --git a/tmp/220bbe86-86d9-41ed-a809-0898b3dd2104_buggy.java b/tmp/22761e3f-a4ac-4ce1-8185-a056ce318449_fixed.java
index 0b7c52e..e5c441f 100644
--- a/tmp/220bbe86-86d9-41ed-a809-0898b3dd2104_buggy.java
+++ b/tmp/22761e3f-a4ac-4ce1-8185-a056ce318449_fixed.java
@@ -1,27 +1,38 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
+        boolean allStrings = true;
+        boolean allNumbers = true;
+
+        for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
             // Maybe STRING, GET, SET
+            if (!child.isString()) {
+                allStrings = false;
+            }
+            if (!child.isNumber()) {
+                allNumbers = false;
+            }
+        }
 
-        // We should never see a mix of numbers and strings.
+        if (!allStrings && !allNumbers) {
+            compiler.report(JSError.make(t.getSourceName(), n, Warnings.INVALIDATION,
+                "Mix of string and number keys in object literal"));
+            return;
+        }
+
+        for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
             String name = child.getString();
             T type = typeSystem.getType(getScope(), n, name);
 
             Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
+            if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
                 if (propertiesToErrorFor.containsKey(name)) {
                     compiler.report(JSError.make(
                             t.getSourceName(), child, propertiesToErrorFor.get(name),
                             Warnings.INVALIDATION, name,
                             (type == null ? "null" : type.toString()), n.toString(), ""));
                 }
             }
         }
     }
\ No newline at end of file
