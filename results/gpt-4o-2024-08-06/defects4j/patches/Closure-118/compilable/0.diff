diff --git a/tmp/39b87e5c-c1d6-4cd0-a981-28910ec5082e_buggy.java b/tmp/ef1c85bc-3290-48df-9791-12197170283e_fixed.java
index 0b7c52e..64bc8bd 100644
--- a/tmp/39b87e5c-c1d6-4cd0-a981-28910ec5082e_buggy.java
+++ b/tmp/ef1c85bc-3290-48df-9791-12197170283e_fixed.java
@@ -1,27 +1,31 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child != null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
+    // Ensure that the property name is properly extracted
+    String name = child.isStringKey() ? child.getString() : null;
+    if (name == null) {
+      continue; // Skip nodes that don't represent valid property keys.
+    }
+
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
+      // TODO: It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
