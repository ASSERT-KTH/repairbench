diff --git a/tmp/5d776c91-e3a7-4f54-b5f1-083962f0f510_buggy.java b/tmp/09362ca7-326e-4f9d-a51d-ee88eebdfa97_fixed.java
index 0b7c52e..ddc7ec7 100644
--- a/tmp/5d776c91-e3a7-4f54-b5f1-083962f0f510_buggy.java
+++ b/tmp/09362ca7-326e-4f9d-a51d-ee88eebdfa97_fixed.java
@@ -1,27 +1,44 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
+      boolean hasSeenStringKey = false;
+      boolean hasSeenNumericKey = false;
+
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
+        // Identify if the key is a string or number
+        if (child.isStringKey()) {
+          hasSeenStringKey = true;
+        } else if (child.isQuotedString()) {
+          hasSeenStringKey = true;
+        } else if (child.isNumber()) {
+          hasSeenNumericKey = true;
+        }
+
         // We should never see a mix of numbers and strings.
+        if (hasSeenStringKey && hasSeenNumericKey) {
+          compiler.report(JSError.make(t.getSourceName(), child, 
+              Warnings.INVALIDATION, "Mix of string and numeric keys in object literal"));
+        }
+
         String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
         if (!prop.scheduleRenaming(child,
                                    processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
+          // It doesn't look like the user can do much in this
           // case right now.
           if (propertiesToErrorFor.containsKey(name)) {
             compiler.report(JSError.make(
                 t.getSourceName(), child, propertiesToErrorFor.get(name),
                 Warnings.INVALIDATION, name,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
       }
     }
\ No newline at end of file
