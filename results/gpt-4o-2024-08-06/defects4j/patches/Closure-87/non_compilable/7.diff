diff --git a/tmp/3e81022b-8f6f-4d09-b85e-ecacc52398dd_buggy.java b/tmp/751e02c8-9ef3-486d-871f-ae31b5790386_fixed.java
index 19fd63e..5480e1e 100644
--- a/tmp/3e81022b-8f6f-4d09-b85e-ecacc52398dd_buggy.java
+++ b/tmp/751e02c8-9ef3-486d-871f-ae31b5790386_fixed.java
@@ -1,24 +1,32 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
+        // Ensure we are dealing with an EXPR_RESULT and not just any expression node
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
           // We only have to worry about methods with an implicit 'this'
           // param, or this doesn't happen.
-
+          Node firstChild = maybeExpr.getFirstChild();
+          if (firstChild != null && firstChild.getType() == Token.CALL) {
+            Node target = firstChild.getFirstChild();
+            if (target != null && target.isGetProp() && target.getFirstChild().isThis()) {
+              return false;
+            }
+          }
+        }
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
-
     return false;
   }
\ No newline at end of file
