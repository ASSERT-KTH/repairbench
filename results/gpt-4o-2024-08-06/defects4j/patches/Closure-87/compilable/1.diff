diff --git a/tmp/d4222f68-0e70-4ff2-90f6-dffc949ecd04_buggy.java b/tmp/6b2e1444-dbda-4ec6-8286-8c1baf8d1b74_fixed.java
index 19fd63e..3c8ccfd 100644
--- a/tmp/d4222f68-0e70-4ff2-90f6-dffc949ecd04_buggy.java
+++ b/tmp/6b2e1444-dbda-4ec6-8286-8c1baf8d1b74_fixed.java
@@ -1,24 +1,17 @@
   /**
    * @return Whether the node is a block with a single statement that is
-   *     an expression.
+   *     an expression, but not an EXPR_RESULT if it might be an event handler.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+        // Detect potential event handlers and avoid folding if it's an EXPR_RESULT
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
+          return false;
+        }
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
-
     return false;
   }
\ No newline at end of file
