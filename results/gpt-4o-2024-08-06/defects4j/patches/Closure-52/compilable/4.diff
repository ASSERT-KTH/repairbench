diff --git a/tmp/403c2432-6180-43d8-989c-4691750beec7_buggy.java b/tmp/8ae38e6a-cf87-4d20-80c5-507effd82fd3_fixed.java
index 4b7f469..b6fb85e 100644
--- a/tmp/403c2432-6180-43d8-989c-4691750beec7_buggy.java
+++ b/tmp/8ae38e6a-cf87-4d20-80c5-507effd82fd3_fixed.java
@@ -1,10 +1,48 @@
 static boolean isSimpleNumber(String s) {
   int len = s.length();
+  if (len == 0) {
+    return false;
+  }
+
+  // Check for octal, hexadecimal, or decimal numbers
+  if (s.charAt(0) == '0' && len > 1 && (s.charAt(1) >= '0' && s.charAt(1) <= '9')) {
+    // Allow octal numbers with leading zero
+    for (int index = 1; index < len; index++) {
+      char c = s.charAt(index);
+      if (c < '0' || c > '7') {
+        return false;
+      }
+    }
+    return true;
+  }
+  
+  if (s.startsWith("0x") || s.startsWith("0X")) {
+    // Hexadecimal numbers starting with "0x" or "0X"
+    if (len <= 2) {
+      return false;
+    }
+    for (int index = 2; index < len; index++) {
+      char c = s.charAt(index);
+      if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
+        return false;
+      }
+    }
+    return true;
+  }
+
+  // Decimal numbers, including fractional parts
+  boolean hasDecimalPoint = false;
   for (int index = 0; index < len; index++) {
     char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+    if (c == '.') {
+      if (hasDecimalPoint) {
+        return false;
+      }
+      hasDecimalPoint = true;
+    } else if (c < '0' || c > '9') {
       return false;
     }
   }
-    return len > 0;
+  
+  return true;
 }
\ No newline at end of file
