diff --git a/tmp/1db6b37a-edb9-4623-a1e0-76b7bde7a186_buggy.java b/tmp/083fce3b-d7d9-4166-a0f0-f1b434dfba09_fixed.java
index 99f4092..b189f7a 100644
--- a/tmp/1db6b37a-edb9-4623-a1e0-76b7bde7a186_buggy.java
+++ b/tmp/083fce3b-d7d9-4166-a0f0-f1b434dfba09_fixed.java
@@ -1,13 +1,29 @@
     /**
      * Creates a time period for the week in which the specified date/time
      * falls, calculated relative to the specified time zone.
      *
      * @param time  the date/time (<code>null</code> not permitted).
      * @param zone  the time zone (<code>null</code> not permitted).
      *
      * @deprecated As of 1.0.7, use {@link #Week(Date, TimeZone, Locale)}.
      */
     public Week(Date time, TimeZone zone) {
-        // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        if (time == null || zone == null) {
+            throw new IllegalArgumentException("Null 'time' or 'zone' argument.");
+        }
+        GregorianCalendar cal = new GregorianCalendar(zone, Locale.getDefault());
+        cal.setTime(time);
+
+        // Make sure the calendar is set to the start of the week
+        cal.setFirstDayOfWeek(Calendar.MONDAY);
+        cal.setMinimalDaysInFirstWeek(4);
+
+        // adjust the time to the start of the week based on the configured time zone
+        cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
+        cal.set(Calendar.HOUR_OF_DAY, 0);
+        cal.set(Calendar.MINUTE, 0);
+        cal.set(Calendar.SECOND, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+
+        this(time, zone, Locale.getDefault());
     }
\ No newline at end of file
