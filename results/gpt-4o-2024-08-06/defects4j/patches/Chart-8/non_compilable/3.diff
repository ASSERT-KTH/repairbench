diff --git a/tmp/f24837b9-371f-4b6d-bc79-1bb2e3c0aa6f_buggy.java b/tmp/f51a6713-f385-424a-8a10-e0e80ee07ec8_fixed.java
index 99f4092..9e8bc2b 100644
--- a/tmp/f24837b9-371f-4b6d-bc79-1bb2e3c0aa6f_buggy.java
+++ b/tmp/f51a6713-f385-424a-8a10-e0e80ee07ec8_fixed.java
@@ -1,13 +1,20 @@
-    /**
-     * Creates a time period for the week in which the specified date/time
-     * falls, calculated relative to the specified time zone.
-     *
-     * @param time  the date/time (<code>null</code> not permitted).
-     * @param zone  the time zone (<code>null</code> not permitted).
-     *
-     * @deprecated As of 1.0.7, use {@link #Week(Date, TimeZone, Locale)}.
-     */
 public Week(Date time, TimeZone zone) {
-        // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+    if (time == null) {
+        throw new IllegalArgumentException("Null 'time' argument.");
+    }
+    if (zone == null) {
+        throw new IllegalArgumentException("Null 'zone' argument.");
+    }
+    Calendar calendar = Calendar.getInstance(zone);
+    calendar.setTime(time);
+    if (calendar.getFirstDayOfWeek() == Calendar.MONDAY) {
+        calendar.add(Calendar.DATE, -calendar.get(Calendar.DAY_OF_WEEK) + Calendar.MONDAY);
+    } else { // first day of week is Sunday
+        calendar.add(Calendar.DATE, -calendar.get(Calendar.DAY_OF_WEEK) + Calendar.SUNDAY);
+    }
+    
+    int year = calendar.get(Calendar.YEAR);
+    int weekOfYear = calendar.get(Calendar.WEEK_OF_YEAR);
+    this.year = year;
+    this.week = weekOfYear;
 }
\ No newline at end of file
