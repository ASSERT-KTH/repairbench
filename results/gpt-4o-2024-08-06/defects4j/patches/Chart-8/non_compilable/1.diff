diff --git a/tmp/6bbdb329-3ac3-4a49-ac27-b8d745479d77_buggy.java b/tmp/2da24cce-ec1c-48be-8ec5-f2ca25711cf2_fixed.java
index 99f4092..eeaf6c3 100644
--- a/tmp/6bbdb329-3ac3-4a49-ac27-b8d745479d77_buggy.java
+++ b/tmp/2da24cce-ec1c-48be-8ec5-f2ca25711cf2_fixed.java
@@ -1,13 +1,25 @@
     /**
      * Creates a time period for the week in which the specified date/time
      * falls, calculated relative to the specified time zone.
      *
      * @param time  the date/time (<code>null</code> not permitted).
      * @param zone  the time zone (<code>null</code> not permitted).
      *
      * @deprecated As of 1.0.7, use {@link #Week(Date, TimeZone, Locale)}.
      */
     public Week(Date time, TimeZone zone) {
-        // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        if (time == null || zone == null) {
+            throw new IllegalArgumentException("Null 'time' or 'zone' argument.");
+        }
+        Calendar calendar = Calendar.getInstance(zone);
+        calendar.setTime(time);
+
+        // Use the week of year setting based on the provided time and zone
+        int weekOfYear = calendar.get(Calendar.WEEK_OF_YEAR);
+        int year = calendar.get(Calendar.YEAR);
+
+        this(time, zone, Locale.getDefault()); // using the fixed constructor that considers the locale
+        
+        this.week = weekOfYear;
+        this.year = year;
     }
\ No newline at end of file
