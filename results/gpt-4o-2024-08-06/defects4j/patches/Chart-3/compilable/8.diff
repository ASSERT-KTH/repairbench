diff --git a/tmp/5ae018f3-f4c1-46aa-aee2-ca584be7f1c8_buggy.java b/tmp/3b70d435-7221-4958-b259-d923a231bf40_fixed.java
index 388771b..34f1442 100644
--- a/tmp/5ae018f3-f4c1-46aa-aee2-ca584be7f1c8_buggy.java
+++ b/tmp/3b70d435-7221-4958-b259-d923a231bf40_fixed.java
@@ -1,37 +1,39 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
+        if (end >= this.data.size()) {
+            throw new IllegalArgumentException("End index exceeds data size.");
+        }
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
-        if (this.data.size() > 0) {
+      
         for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
             TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
             try {
                 copy.add(clone);
-                }
-                catch (SeriesException e) {
+            } catch (SeriesException e) {
                 e.printStackTrace();
             }
         }
+      
+        copy.minY = Double.MAX_VALUE;
+        copy.maxY = Double.MIN_VALUE;
+        for (int index = start; index <= end; index++) {
+            Number y = ((TimeSeriesDataItem) this.data.get(index)).getValue();
+            double yy = y.doubleValue();
+            if (yy < copy.minY) {
+                copy.minY = yy;
             }
+            if (yy > copy.maxY) {
+                copy.maxY = yy;
+            }
+        }
+      
         return copy;
     }
\ No newline at end of file
