diff --git a/tmp/4aceca36-8a89-4806-827c-6059794af091_buggy.java b/tmp/c64be926-9a5d-4525-9bd2-dc4564aba520_fixed.java
index 388771b..c6884a2 100644
--- a/tmp/4aceca36-8a89-4806-827c-6059794af091_buggy.java
+++ b/tmp/c64be926-9a5d-4525-9bd2-dc4564aba520_fixed.java
@@ -1,37 +1,50 @@
 /**
  * Creates a new timeseries by copying a subset of the data in this time
  * series.
  *
  * @param start  the index of the first time period to copy.
  * @param end  the index of the last time period to copy.
  *
  * @return A series containing a copy of this times series from start until
  *         end.
  *
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
 public TimeSeries createCopy(int start, int end)
         throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
-        if (end < start) {
-            throw new IllegalArgumentException("Requires start <= end.");
+    if (end < start || end >= this.data.size()) {
+        throw new IllegalArgumentException("Requires start <= end < data.size().");
     }
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
+    double minValue = Double.MAX_VALUE;
+    double maxValue = -Double.MAX_VALUE;
+    
     if (this.data.size() > 0) {
         for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
             TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
             try {
                 copy.add(clone);
+                
+                // Update min and max values
+                double value = clone.getValue().doubleValue();
+                if (value < minValue) {
+                    minValue = value;
+                }
+                if (value > maxValue) {
+                    maxValue = value;
+                }
             }
             catch (SeriesException e) {
                 e.printStackTrace();
             }
         }
     }
+    copy.minY = minValue;
+    copy.maxY = maxValue;
     return copy;
 }
\ No newline at end of file
