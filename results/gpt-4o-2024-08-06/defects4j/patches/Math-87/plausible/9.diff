diff --git a/tmp/13446e9b-98e2-4179-bb5e-c40e4027355d_buggy.java b/tmp/fb8a2f16-a790-4bc1-a4b3-2f5bda0eff96_fixed.java
index 70cafe0..93385ec 100644
--- a/tmp/13446e9b-98e2-4179-bb5e-c40e4027355d_buggy.java
+++ b/tmp/fb8a2f16-a790-4bc1-a4b3-2f5bda0eff96_fixed.java
@@ -1,18 +1,24 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
+        boolean isBasic = true;
+        
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
+            double entry = getEntry(i, col);
+            if (!MathUtils.equals(entry, 0.0, epsilon)) {
+                if (MathUtils.equals(entry, 1.0, epsilon) && row == null) {
                     row = i;
                 } else {
-                return null;
+                    // If the entry is not zero or one, or if another one is found, column is not basic
+                    isBasic = false;
+                    break;
                 }
             }
         }
-        return row;
+        
+        return isBasic ? row : null;
     }
\ No newline at end of file
