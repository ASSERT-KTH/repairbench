diff --git a/tmp/2fff716f-b4e5-4ea9-96bc-e5a27774b8ba_buggy.java b/tmp/dc4b0c24-70d4-459a-8f2e-eb78972c52c4_fixed.java
index de9af32..4fec150 100644
--- a/tmp/2fff716f-b4e5-4ea9-96bc-e5a27774b8ba_buggy.java
+++ b/tmp/dc4b0c24-70d4-459a-8f2e-eb78972c52c4_fixed.java
@@ -1,18 +1,23 @@
 /**
-   * @see #findCalledFunctions(Node)
+ * @see #findCalledFunctions(Node, Set)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node target = node.getFirstChild();
+    if (target != null && target.getType() == Token.GETPROP) {
+      Node propName = target.getLastChild();
+      if (propName != null && propName.getType() == Token.STRING) {
+        changed.add(propName.getString());
+      }
+    } else if (target != null && target.getType() == Token.NAME) {
+      changed.add(target.getString());
     }
   }
   
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
