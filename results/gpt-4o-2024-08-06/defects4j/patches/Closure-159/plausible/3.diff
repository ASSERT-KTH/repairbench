diff --git a/tmp/60eba74c-e89f-43d8-8b4b-c77b822bb5a1_buggy.java b/tmp/73124439-a475-430a-b4c0-6c11307b6200_fixed.java
index de9af32..3ae97b0 100644
--- a/tmp/60eba74c-e89f-43d8-8b4b-c77b822bb5a1_buggy.java
+++ b/tmp/73124439-a475-430a-b4c0-6c11307b6200_fixed.java
@@ -1,18 +1,23 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+      Node firstChild = node.getFirstChild();
+      if (firstChild != null && firstChild.getType() == Token.GETPROP) {
+        Node propTarget = firstChild.getFirstChild();
+        if (propTarget != null && propTarget.getType() == Token.NAME) {
+          changed.add(propTarget.getString());
+        }
+      } else if (firstChild != null && firstChild.getType() == Token.NAME) {
+        changed.add(firstChild.getString());
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
