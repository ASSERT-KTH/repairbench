diff --git a/tmp/97229337-c537-4a9d-814f-197349421628_buggy.java b/tmp/d02e3358-5d2f-4d46-8c7d-573de52bd1a0_fixed.java
index 4b163f6..c9acbb6 100644
--- a/tmp/97229337-c537-4a9d-814f-197349421628_buggy.java
+++ b/tmp/d02e3358-5d2f-4d46-8c7d-573de52bd1a0_fixed.java
@@ -1,28 +1,16 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
 public static long skip(InputStream input, long numToSkip) throws IOException {
     long available = numToSkip;
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
         if (skipped == 0) {
-                break;
+            if (input.read() == -1) {
+                break; // end of stream
             }
+            numToSkip--; // successfully read one byte
+        } else {
             numToSkip -= skipped;
         }
+    }
         
     return available - numToSkip;
 }
\ No newline at end of file
