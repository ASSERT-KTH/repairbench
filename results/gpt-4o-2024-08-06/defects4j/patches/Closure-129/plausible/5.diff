diff --git a/tmp/3cb75ea9-8663-46e8-a9a4-178d36508352_buggy.java b/tmp/c3b467c3-f90e-4b27-86bf-1f9daa1e5905_fixed.java
index e8705ac..7c409d1 100644
--- a/tmp/3cb75ea9-8663-46e8-a9a4-178d36508352_buggy.java
+++ b/tmp/c3b467c3-f90e-4b27-86bf-1f9daa1e5905_fixed.java
@@ -1,24 +1,23 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
 
       // Keep track of of the "this" context of a call. A call without an
       // explicit "this" is a free call.
       Node first = n.getFirstChild();
 
-      // ignore cast nodes.
+      // ignore cast and other non-call nodes that should not change context
+      while (first != null && first.isCast()) {
+        first = first.getNext();
+      }
 
-      if (!NodeUtil.isGet(first)) {
+      if (first != null && !NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);
       }
 
       // Keep track of the context in which eval is called. It is important
       // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
+      if (first != null && first.isName() &&
           "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
       }
     }
\ No newline at end of file
