diff --git a/tmp/2b07da91-086b-479a-bfeb-286a25f82e61_buggy.java b/tmp/9ea3a9f2-cc12-4917-b49b-7f6e9c20593f_fixed.java
index 6e45f80..c4457bf 100644
--- a/tmp/2b07da91-086b-479a-bfeb-286a25f82e61_buggy.java
+++ b/tmp/9ea3a9f2-cc12-4917-b49b-7f6e9c20593f_fixed.java
@@ -1,21 +1,24 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
+        // Check if the requested type is exactly the type managed by typeAdapter
+        if (!requestedType.isAssignableFrom(clazz)) {
+          return null;
+        }
         return (TypeAdapter<T2>) typeAdapter;
-
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
