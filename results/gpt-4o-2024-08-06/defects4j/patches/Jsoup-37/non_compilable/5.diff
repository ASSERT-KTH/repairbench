diff --git a/tmp/6fc716e0-14c8-4b9c-bdce-59dc4c3b7b13_buggy.java b/tmp/8aac13fb-7782-4556-8e1d-e4f9eb8f7137_fixed.java
index 7498011..739b54c 100644
--- a/tmp/6fc716e0-14c8-4b9c-bdce-59dc4c3b7b13_buggy.java
+++ b/tmp/8aac13fb-7782-4556-8e1d-e4f9eb8f7137_fixed.java
@@ -1,12 +1,29 @@
-    /**
-     * Retrieves the element's inner HTML. E.g. on a {@code <div>} with one empty {@code <p>}, would return
-     * {@code <p></p>}. (Whereas {@link #outerHtml()} would return {@code <div><p></p></div>}.)
-     * 
-     * @return String of HTML.
-     * @see #outerHtml()
-     */
 public String html() {
     StringBuilder accum = new StringBuilder();
-        html(accum);
-        return accum.toString().trim();
+    NodeTraversor.traverse(new NodeVisitor() {
+        public void head(Node node, int depth) {
+            if (node instanceof Element) {
+                Element element = (Element) node;
+                accum.append("<").append(element.tagName());
+                for (Attribute attribute : element.attributes()) {
+                    accum.append(" ").append(attribute.getKey());
+                    if (!attribute.getValue().isEmpty()) {
+                        accum.append("=\"").append(attribute.getValue()).append("\"");
+                    }
+                }
+                accum.append(">");
+            } else if (node instanceof TextNode) {
+                TextNode textNode = (TextNode) node;
+                accum.append(textNode.getWholeText());
+            }
+        }
+        
+        public void tail(Node node, int depth) {
+            if (node instanceof Element) {
+                Element element = (Element) node;
+                accum.append("</").append(element.tagName()).append(">");
+            }
+        }
+    }, this);
+    return accum.toString();
 }
\ No newline at end of file
