diff --git a/tmp/8b3144e3-83f4-49f5-ac28-3d505f8d3ffa_buggy.java b/tmp/0d4af509-4b75-402e-b1eb-3159905ff182_fixed.java
index 08a41cf..08c3871 100644
--- a/tmp/8b3144e3-83f4-49f5-ac28-3d505f8d3ffa_buggy.java
+++ b/tmp/0d4af509-4b75-402e-b1eb-3159905ff182_fixed.java
@@ -1,12 +1,16 @@
     /**
      * Overloaded version of {@link #readValue(InputStream)}.
      */
     public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
         throws IOException, JsonProcessingException
     {
         if (_dataFormatReaders != null) {
+            // Ensure the byte segment passed is valid within the range
+            if (offset < 0 || length < 0 || offset + length > src.length) {
+                throw new IllegalArgumentException("Invalid offset or length for readValues");
+            }
             return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
         }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
-                true));
+        JsonParser parser = _parserFactory.createParser(src, offset, length);
+        return _bindAndReadValues(_considerFilter(parser, true));
     }
\ No newline at end of file
