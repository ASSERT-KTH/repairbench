diff --git a/tmp/88f629e5-893e-440a-a16f-249977d95f35_buggy.java b/tmp/19f6c528-0cc4-42a5-ad2a-3e04e860d79d_fixed.java
index 670114d..3806def 100644
--- a/tmp/88f629e5-893e-440a-a16f-249977d95f35_buggy.java
+++ b/tmp/19f6c528-0cc4-42a5-ad2a-3e04e860d79d_fixed.java
@@ -1,48 +1,65 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
+    Node target = n.getFirstChild();
+    if (NodeUtil.isGetProp(target) &&
+        target.getFirstChild().matchesQualifiedName("goog.inherits")) {
+      Node superclassNode = target.getNext();
+      if (superclassNode != null) {
+        NameInformation superclassInfo = createNameInformation(t, superclassNode, n);
+        if (superclassInfo != null && superclassInfo.onlyAffectsClassDef) {
+          JsName superclassName = getName(superclassInfo.name, false);
+          if (superclassName != null &&
+              superclassNode.isQualifiedName() &&
+              target.getNext() != null) {
+            refNodes.add(new ClassDefiningFunctionNode(
+              superclassName, n, parent, parent.getParent()));
+          }
+        }
+      }
+    } else {
+      NameInformation ns = createNameInformation(t, target, n);
       if (ns != null && ns.onlyAffectsClassDef) {
         JsName name = getName(ns.name, false);
         if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
         }
       }
     }
   }
+}
\ No newline at end of file
