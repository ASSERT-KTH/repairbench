diff --git a/tmp/bbe2ce65-1090-4fc2-96c2-afd227d03520_buggy.java b/tmp/f0c55739-abf9-4ccb-a9cf-a73bd1b08dd6_fixed.java
index 670114d..d32c007 100644
--- a/tmp/bbe2ce65-1090-4fc2-96c2-afd227d03520_buggy.java
+++ b/tmp/f0c55739-abf9-4ccb-a9cf-a73bd1b08dd6_fixed.java
@@ -1,48 +1,68 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
-            recordSet(ns.name, nameNode);
+        recordSet(ns.name, n); // Fixed this line, using `n` instead of `nameNode`
       }
     }
   } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
+    Node callee = n.getFirstChild();
+    
+    if (callee != null && "goog.inherits".equals(callee.getQualifiedName())) {
+      Node subclassName = callee.getNext();
+      Node superclassName = subclassName != null ? subclassName.getNext() : null;
+
+      if (subclassName != null && superclassName != null) {
+        NameInformation subclassNs = createNameInformation(t, subclassName, n);
+        NameInformation superclassNs = createNameInformation(t, superclassName, n);
+
+        if (subclassNs != null && superclassNs != null) {
+          JsName subclassNameInfo = getName(subclassNs.name, false);
+          JsName superclassNameInfo = getName(superclassNs.name, false);
+          if (subclassNameInfo != null && superclassNameInfo != null) {
+            refNodes.add(new ClassDependencyNode(
+                subclassNameInfo, superclassNameInfo, n, parent, parent.getParent()));
+          }
+        }
+      }
+    } else {
+      NameInformation ns = createNameInformation(t, callee, n);
       if (ns != null && ns.onlyAffectsClassDef) {
         JsName name = getName(ns.name, false);
         if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
         }
       }
     }
   }
+}
\ No newline at end of file
