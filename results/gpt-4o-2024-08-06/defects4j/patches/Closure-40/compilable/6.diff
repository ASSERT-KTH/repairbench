diff --git a/tmp/1a00493f-cc67-4173-b296-5d118eee9b0b_buggy.java b/tmp/ae463930-c432-40f1-85a0-c77c5716b1d4_fixed.java
index 670114d..8cb7883 100644
--- a/tmp/1a00493f-cc67-4173-b296-5d118eee9b0b_buggy.java
+++ b/tmp/ae463930-c432-40f1-85a0-c77c5716b1d4_fixed.java
@@ -1,48 +1,57 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
+        String calledFunctionName = nameNode.getQualifiedName();
+        // Additional logic to handle "goog.inherits" specifically
+        if ("goog.inherits".equals(calledFunctionName)) {
+          Node superClassNode = nameNode.getNext().getNext();
+          if (superClassNode != null && superClassNode.isQualifiedName()) {
+            String superClassName = superClassNode.getQualifiedName();
+            recordSet(superClassName, superClassNode);
+          }
+        }
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
