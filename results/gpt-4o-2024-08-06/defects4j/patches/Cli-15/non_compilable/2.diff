diff --git a/tmp/fd075b24-ade5-41c8-a6fd-035addaf40a3_buggy.java b/tmp/c198cb6a-eff8-474c-a5bb-f49d8c759594_fixed.java
index 4e8b037..19a5af4 100644
--- a/tmp/fd075b24-ade5-41c8-a6fd-035addaf40a3_buggy.java
+++ b/tmp/c198cb6a-eff8-474c-a5bb-f49d8c759594_fixed.java
@@ -1,20 +1,35 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+    public List getValues(final Option option, List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+        if (valueList == null || valueList.isEmpty()) {
+            valueList = new ArrayList(defaultValues);
         }
 
         // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+        if (valueList.isEmpty()) {
+            // default to the option-specific default values if present
+            List optionDefaultValues = (List) this.defaultValues.get(option);
+            if (optionDefaultValues != null) {
+                valueList.addAll(optionDefaultValues);
             }
-                // if there are more default values as specified, add them to
-                // the list.
+        }
+
+        // if there are more default values as specified, add them to the list
+        else if (valueList.size() < option.getArgument().getMaximum()) {
             // copy the list first
+            List optionDefaultValues = (List) this.defaultValues.get(option);
+            if (optionDefaultValues != null) {
+                for (Object o : optionDefaultValues) {
+                    if (valueList.size() < option.getArgument().getMaximum()) {
+                        valueList.add(o);
+                    } else {
+                        break;
+                    }
+                }
+            }
+        }
         
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
\ No newline at end of file
