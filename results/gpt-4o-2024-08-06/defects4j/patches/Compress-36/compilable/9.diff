diff --git a/tmp/6b4a50bb-c11c-45f4-b847-371a2ec40b50_buggy.java b/tmp/78a0c4c9-4fe6-44f0-ae21-c289b9975484_fixed.java
index d357c7e..b260f0b 100644
--- a/tmp/6b4a50bb-c11c-45f4-b847-371a2ec40b50_buggy.java
+++ b/tmp/78a0c4c9-4fe6-44f0-ae21-c289b9975484_fixed.java
@@ -1,16 +1,16 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
     
-        while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
-            final InputStream stream = deferredBlockStreams.remove(0);
-            IOUtils.skip(stream, Long.MAX_VALUE);
-            stream.close();
+    // Ensure there is a valid stream for the current entry even if it's an "empty" entry
+    for (InputStream stream : deferredBlockStreams) {
+        if (stream.available() > 0) {
+            return stream;
+        }
     }
     
-        return deferredBlockStreams.get(0);
+    // If all streams have been exhausted, it means current entry is empty
+    final InputStream currentStream = deferredBlockStreams.get(deferredBlockStreams.size() - 1);
+    return currentStream;
 }
\ No newline at end of file
