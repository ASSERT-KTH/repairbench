diff --git a/tmp/37923b9b-183f-4af2-afbf-bfb9cf7e1f84_buggy.java b/tmp/e27cf982-d277-48f1-b59a-61b4281daad3_fixed.java
index d357c7e..c35a11b 100644
--- a/tmp/37923b9b-183f-4af2-afbf-bfb9cf7e1f84_buggy.java
+++ b/tmp/e27cf982-d277-48f1-b59a-61b4281daad3_fixed.java
@@ -1,16 +1,27 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
     
     while (deferredBlockStreams.size() > 1) {
         // In solid compression mode we need to decompress all leading folder'
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
-        return deferredBlockStreams.get(0);
+    // Add a check to ensure the first stream in the list is accessible
+    InputStream currentStream = deferredBlockStreams.get(0);
+    if (currentStream.available() == 0) {
+        // Skip the current stream if it's empty and move to the next one if available
+        deferredBlockStreams.remove(0);
+        if (deferredBlockStreams.isEmpty()) {
+            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        }
+        currentStream = deferredBlockStreams.get(0);
+    }
+
+    return currentStream;
 }
\ No newline at end of file
