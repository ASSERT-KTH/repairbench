diff --git a/tmp/6ced2eeb-fd75-466b-a651-2643c42f175c_buggy.java b/tmp/0f5d3108-1d89-4234-b52a-9913c317b233_fixed.java
index 6c0aa19..b4051a9 100644
--- a/tmp/6ced2eeb-fd75-466b-a651-2643c42f175c_buggy.java
+++ b/tmp/0f5d3108-1d89-4234-b52a-9913c317b233_fixed.java
@@ -1,20 +1,20 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
+        this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
+        // assume buf is initialized somewhere in the class, but ensure its capacity is set correctly
+        buf = ByteBuffer.allocate(512); // assuming 512 is an appropriate size for your context
         in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
     }
\ No newline at end of file
