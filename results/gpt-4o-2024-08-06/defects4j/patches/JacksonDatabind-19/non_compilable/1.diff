diff --git a/tmp/5577e373-e43f-47d9-aeaa-6ebfd2bdfc5f_buggy.java b/tmp/67a2f68f-832f-4192-8807-3ca6cfb73d9c_fixed.java
index 1bec4d6..d5334f6 100644
--- a/tmp/5577e373-e43f-47d9-aeaa-6ebfd2bdfc5f_buggy.java
+++ b/tmp/67a2f68f-832f-4192-8807-3ca6cfb73d9c_fixed.java
@@ -1,14 +1,18 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        if (Properties.class.isAssignableFrom(rawClass)) {
+            // treat Properties as Map<String, String>
+            return MapType.construct(rawClass, _constructType(String.class), _constructType(String.class));
+        }
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
