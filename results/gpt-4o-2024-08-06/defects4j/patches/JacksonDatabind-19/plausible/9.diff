diff --git a/tmp/ae3062cc-4464-47ba-ae00-d1b079190875_buggy.java b/tmp/e9e6c2f9-6148-4c57-a0f1-4eabd1d2ca4d_fixed.java
index 1bec4d6..d6622b0 100644
--- a/tmp/ae3062cc-4464-47ba-ae00-d1b079190875_buggy.java
+++ b/tmp/e9e6c2f9-6148-4c57-a0f1-4eabd1d2ca4d_fixed.java
@@ -1,14 +1,23 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    if (Properties.class.equals(rawClass)) {
+        return MapType.construct(rawClass, _constructType(String.class), _constructType(String.class));
+    }
+    
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
+
+private JavaType _constructType(Class<?> cls) {
+    // Simplified placeholder for the way we construct a JavaType for a given class
+    return TypeFactory.defaultInstance().constructType(cls);
+}
\ No newline at end of file
