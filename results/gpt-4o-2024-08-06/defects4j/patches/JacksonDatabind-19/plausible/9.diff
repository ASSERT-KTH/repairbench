diff --git a/tmp/7d4868a3-4eb5-43b1-ae37-d604a1da334f_buggy.java b/tmp/2922e363-cd67-4028-81a7-574d9c7613f4_fixed.java
index 1bec4d6..d6622b0 100644
--- a/tmp/7d4868a3-4eb5-43b1-ae37-d604a1da334f_buggy.java
+++ b/tmp/2922e363-cd67-4028-81a7-574d9c7613f4_fixed.java
@@ -1,14 +1,23 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    if (Properties.class.equals(rawClass)) {
+        return MapType.construct(rawClass, _constructType(String.class), _constructType(String.class));
+    }
+    
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
+
+private JavaType _constructType(Class<?> cls) {
+    // Simplified placeholder for the way we construct a JavaType for a given class
+    return TypeFactory.defaultInstance().constructType(cls);
+}
\ No newline at end of file
