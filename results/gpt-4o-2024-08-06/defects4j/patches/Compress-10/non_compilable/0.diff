diff --git a/tmp/759cebde-1261-4b97-b6bf-4c64c3b86804_buggy.java b/tmp/0608da8f-f0cd-4ab1-8431-b4c952fa123f_fixed.java
index 85e6a42..1092187 100644
--- a/tmp/759cebde-1261-4b97-b6bf-4c64c3b86804_buggy.java
+++ b/tmp/0608da8f-f0cd-4ab1-8431-b4c952fa123f_fixed.java
@@ -1,50 +1,52 @@
     /**
      * Walks through all recorded entries and adds the data available
      * from the local file header.
      *
      * <p>Also records the offsets for the data to read from the
      * entries.</p>
      */
     private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                                             entriesWithoutUTF8Flag)
         throws IOException {
         // changing the name of a ZipArchiveEntry is going to change
         // the hashcode - see COMPRESS-164
         // Map needs to be reconstructed in order to keep central
         // directory order
-        for (ZipArchiveEntry ze : entries.keySet()) {
+        for (ZipArchiveEntry ze : new ArrayList<>(entries.keySet())) {
             OffsetEntry offsetEntry = entries.get(ze);
             long offset = offsetEntry.headerOffset;
             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
             byte[] b = new byte[SHORT];
             archive.readFully(b);
             int fileNameLen = ZipShort.getValue(b);
             archive.readFully(b);
             int extraFieldLen = ZipShort.getValue(b);
             int lenToSkip = fileNameLen;
             while (lenToSkip > 0) {
                 int skipped = archive.skipBytes(lenToSkip);
                 if (skipped <= 0) {
                     throw new RuntimeException("failed to skip file name in"
                                                + " local file header");
                 }
                 lenToSkip -= skipped;
             }
             byte[] localExtraData = new byte[extraFieldLen];
             archive.readFully(localExtraData);
             ze.setExtra(localExtraData);
             offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
                 + SHORT + SHORT + fileNameLen + extraFieldLen;
 
             if (entriesWithoutUTF8Flag.containsKey(ze)) {
                 String orig = ze.getName();
                 NameAndComment nc = entriesWithoutUTF8Flag.get(ze);
                 ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,
                                                          nc.comment);
                 if (!orig.equals(ze.getName())) {
+                    entries.remove(ze);
                     nameMap.remove(orig);
+                    entries.put(ze, offsetEntry);
                     nameMap.put(ze.getName(), ze);
                 }
             }
         }
     }
\ No newline at end of file
