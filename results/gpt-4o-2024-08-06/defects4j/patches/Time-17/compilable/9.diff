diff --git a/tmp/eaad0414-141f-4fa7-8341-13dc24aae5d3_buggy.java b/tmp/288096c1-02e3-4b4f-a5bf-0791137620c6_fixed.java
index 03b03d7..e5be234 100644
--- a/tmp/eaad0414-141f-4fa7-8341-13dc24aae5d3_buggy.java
+++ b/tmp/288096c1-02e3-4b4f-a5bf-0791137620c6_fixed.java
@@ -1,25 +1,24 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
 
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
 
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        
+        // Based on the boolean earlierOrLater decide which one to return.
+        long earlierInstant = convertLocalToUTC(local, false, instantBefore);
+        long laterInstant = convertLocalToUTC(local, false, instantAfter);
+        
+        // Return the appropriate instant based on earlierOrLater
+        return earlierOrLater ? laterInstant : earlierInstant;
         
         // calculate result
         // currently in later offset
         // currently in earlier offset
     }
\ No newline at end of file
