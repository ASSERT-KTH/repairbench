diff --git a/tmp/62bde70a-44aa-4a7b-8d99-7cd2bf6e9547_buggy.java b/tmp/ee573057-c761-4ba2-8361-58a1b0b6b946_fixed.java
index 03b03d7..e6de0f6 100644
--- a/tmp/62bde70a-44aa-4a7b-8d99-7cd2bf6e9547_buggy.java
+++ b/tmp/ee573057-c761-4ba2-8361-58a1b0b6b946_fixed.java
@@ -1,25 +1,34 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
         
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
         
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
         
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // Determine offsets at given instant
+        long earlierOffset = convertLocalToUTC(local, false, instantBefore) - instant;
+        long laterOffset = convertLocalToUTC(local, false, instantAfter) - instant;
+
+        // Compare current instant offset with calculated offsets to find correct adjustment
+        long currentOffset = convertLocalToUTC(local, false, instant) - instant;
+        if (currentOffset == laterOffset) {
+            // Currently in later offset, switch to earlier if requested
+            return earlierOrLater ? instant : instant - (laterOffset - earlierOffset);
+        } else {
+            // Currently in earlier offset, switch to later if requested
+            return earlierOrLater ? instant + (laterOffset - earlierOffset) : instant;
+        }
     }
\ No newline at end of file
