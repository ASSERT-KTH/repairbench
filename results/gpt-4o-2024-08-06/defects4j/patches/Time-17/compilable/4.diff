diff --git a/tmp/9f1518f9-e812-48a3-a7fc-8c0f8cf026df_buggy.java b/tmp/49c0fd68-f39b-4f51-8f1c-190f1f83361e_fixed.java
index 03b03d7..c76da7d 100644
--- a/tmp/9f1518f9-e812-48a3-a7fc-8c0f8cf026df_buggy.java
+++ b/tmp/49c0fd68-f39b-4f51-8f1c-190f1f83361e_fixed.java
@@ -1,25 +1,21 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
+        // evaluate 3 hours before and after to determine if an overlap occurs
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+            return instant; // not an overlap (less than is a gap, equal is the normal case)
         }
         
-        // work out range of instants that have duplicate local times
+        // find the range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
         
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // Determine which offset to apply based on the earlierOrLater flag
+        long earlierOffsetInstant = convertLocalToUTC(local, false, instantBefore);
+        long laterOffsetInstant = convertLocalToUTC(local, false, instantAfter);
+        
+        if (earlierOrLater) {
+            return laterOffsetInstant > instant ? laterOffsetInstant : earlierOffsetInstant;
+        } else {
+            return earlierOffsetInstant < instant ? earlierOffsetInstant : laterOffsetInstant;
+        }
     }
\ No newline at end of file
