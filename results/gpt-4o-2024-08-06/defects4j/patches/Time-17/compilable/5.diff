diff --git a/tmp/58b958d0-82ec-429a-95b5-6a7441f91c3e_buggy.java b/tmp/96c54ea8-06ad-4984-911d-4a4c28d6b081_fixed.java
index 03b03d7..fb9ac2d 100644
--- a/tmp/58b958d0-82ec-429a-95b5-6a7441f91c3e_buggy.java
+++ b/tmp/96c54ea8-06ad-4984-911d-4a4c28d6b081_fixed.java
@@ -1,25 +1,26 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
+        // Evaluate 1 hour before and after the instant to determine overlap
+        long instantBefore = convertUTCToLocal(instant - DateTimeConstants.MILLIS_PER_HOUR);
+        long instantAfter = convertUTCToLocal(instant + DateTimeConstants.MILLIS_PER_HOUR);
         
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+        // If both instants are equal, there's no overlap
         if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+            return instant;
         }
         
-        // work out range of instants that have duplicate local times
+        // Determine the local time at the given instant
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
         
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // During overlap, decide which instant to choose based on earlierOrLater flag
+        long earlierInstant = convertLocalToUTC(local, true, instantBefore);
+        long laterInstant = convertLocalToUTC(local, false, instantAfter);
+        
+        return earlierOrLater ? laterInstant : earlierInstant;
     }
\ No newline at end of file
