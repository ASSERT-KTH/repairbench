diff --git a/tmp/085d554e-4d62-45e4-a6cf-7d56e324158a_buggy.java b/tmp/df0a1fee-0836-48d3-b077-5d67e294c6fc_fixed.java
index d4e6d48..f7239d1 100644
--- a/tmp/085d554e-4d62-45e4-a6cf-7d56e324158a_buggy.java
+++ b/tmp/df0a1fee-0836-48d3-b077-5d67e294c6fc_fixed.java
@@ -1,23 +1,26 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
       // Fold String(a) to '' + (a) on immutable literals,
       // which allows further optimizations
       //
       // We can't do this in the general case, because String(a) has
       // slightly different semantics than '' + (a). See
       // http://code.google.com/p/closure-compiler/issues/detail?id=759
       Node value = callTarget.getNext();
-      if (value != null) {
+      if (value != null && value.getNext() == null) {
+        // Ensure the function call only has one argument
+        if (value.isImmutable()) {
           Node addition = IR.add(
               IR.string("").srcref(callTarget),
               value.detachFromParent());
           n.getParent().replaceChild(n, addition);
           reportCodeChange();
           return addition;
         }
       }
+    }
     return n;
 }
\ No newline at end of file
