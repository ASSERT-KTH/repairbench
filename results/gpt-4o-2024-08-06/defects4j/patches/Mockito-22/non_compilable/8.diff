diff --git a/tmp/d0d8538d-0d70-4c4e-abe6-b329eaa27b17_buggy.java b/tmp/251ab2eb-3d8b-4cc6-a09d-54f2f6d21e39_fixed.java
index 111ba5e..0c61577 100644
--- a/tmp/d0d8538d-0d70-4c4e-abe6-b329eaa27b17_buggy.java
+++ b/tmp/251ab2eb-3d8b-4cc6-a09d-54f2f6d21e39_fixed.java
@@ -1,9 +1,36 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (isArray(o1) && isArray(o2)) {
+        return areArraysEqual(o1, o2);
     } else {
         return o1.equals(o2);
     }
 }
+
+private static boolean isArray(Object obj) {
+    return obj != null && obj.getClass().isArray();
+}
+
+private static boolean areArraysEqual(Object a1, Object a2) {
+    if (a1 instanceof Object[] && a2 instanceof Object[]) {
+        return java.util.Arrays.deepEquals((Object[]) a1, (Object[]) a2);
+    } else if (a1 instanceof int[] && a2 instanceof int[]) {
+        return java.util.Arrays.equals((int[]) a1, (int[]) a2);
+    } else if (a1 instanceof double[] && a2 instanceof double[]) {
+        return java.util.Arrays.equals((double[]) a1, (double[]) a2);
+    } else if (a1 instanceof long[] && a2 instanceof long[]) {
+        return java.util.Arrays.equals((long[]) a1, (long[]) a2);
+    } else if (a1 instanceof float[] && a2 instanceof float[]) {
+        return java.util.Arrays.equals((float[]) a1, (float[]) a2);
+    } else if (a1 instanceof short[] && a2 instanceof short[]) {
+        return java.util.Arrays.equals((short[]) a1, (short[]) a2);
+    } else if (a1 instanceof char[] && a2 instanceof char[]) {
+        return java.util.Arrays.equals((char[]) a1, (char[]) a2);
+    } else if (a1 instanceof byte[] && a2 instanceof byte[]) {
+        return java.util.Arrays.equals((byte[]) a1, (byte[]) a2);
+    } else if (a1 instanceof boolean[] && a2 instanceof boolean[]) {
+        return java.util.Arrays.equals((boolean[]) a1, (boolean[]) a2);
+    }
+    return false;
+}
\ No newline at end of file
