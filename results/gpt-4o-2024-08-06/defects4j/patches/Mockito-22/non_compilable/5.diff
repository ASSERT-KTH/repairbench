diff --git a/tmp/3a48c2e6-9962-4249-a34a-bf8f38f79666_buggy.java b/tmp/b7b51554-3c60-4b6a-a886-61706e625f48_fixed.java
index 111ba5e..ff03d3b 100644
--- a/tmp/3a48c2e6-9962-4249-a34a-bf8f38f79666_buggy.java
+++ b/tmp/b7b51554-3c60-4b6a-a886-61706e625f48_fixed.java
@@ -1,9 +1,27 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+        } else if (isArray(o1) && isArray(o2)) {
+            return areArraysEqual(o1, o2);
+        } else if (o1 != null && o1 instanceof Object[] && o2 instanceof Object[]) { 
+            return Arrays.deepEquals((Object[]) o1, (Object[]) o2);
         } else {
             return o1.equals(o2);
         }
     }
+    
+    private static boolean isArray(Object obj) {
+        return obj != null && obj.getClass().isArray();
+    }
+
+    private static boolean areArraysEqual(Object arr1, Object arr2) {
+        if (arr1 instanceof int[] && arr2 instanceof int[]) {
+            return Arrays.equals((int[]) arr1, (int[]) arr2);
+        } else if (arr1 instanceof double[] && arr2 instanceof double[]) {
+            return Arrays.equals((double[]) arr1, (double[]) arr2);
+        } else if (arr1 instanceof Object[] && arr2 instanceof Object[]) {
+            return Arrays.deepEquals((Object[]) arr1, (Object[]) arr2);
+        } else {
+            return false;
+        }
+    }
\ No newline at end of file
