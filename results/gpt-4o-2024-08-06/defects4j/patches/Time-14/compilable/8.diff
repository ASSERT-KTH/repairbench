diff --git a/tmp/37f4299a-fdd7-4986-b407-3d73e2488601_buggy.java b/tmp/1a53eede-c505-4613-93ec-46e2cab60f8b_fixed.java
index 10616db..b850743 100644
--- a/tmp/37f4299a-fdd7-4986-b407-3d73e2488601_buggy.java
+++ b/tmp/1a53eede-c505-4613-93ec-46e2cab60f8b_fixed.java
@@ -1,19 +1,27 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+        
+        // Adjust for leap year if necessary
+        if (partial.getFieldType(fieldIndex).getName().equals("dayOfMonth")) {
+            int maxMonthDay = partial.getFieldType(0).getField(iChronology).getMaximumValue(instant);
+            if (values[fieldIndex] > maxMonthDay) {
+                newValues[fieldIndex] = maxMonthDay;
+            }
+        }
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
