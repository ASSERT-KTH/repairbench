diff --git a/tmp/cf77b6d1-cd31-4e5b-9abd-cfb840c14b7f_buggy.java b/tmp/751bf2a3-0168-426d-bbaf-3d5c9f331793_fixed.java
index 10616db..6b2f3bb 100644
--- a/tmp/cf77b6d1-cd31-4e5b-9abd-cfb840c14b7f_buggy.java
+++ b/tmp/751bf2a3-0168-426d-bbaf-3d5c9f331793_fixed.java
@@ -1,19 +1,33 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        // Handle leap year special case
+        if (partial.getFieldType(fieldIndex).getName().equals("monthOfYear") 
+                && values[fieldIndex] == 2 
+                && values[fieldIndex + 1] == 29) {
+            instant = add(instant, valueToAdd);
+            int[] newValues = iChronology.get(partial, instant);
+            if (newValues[fieldIndex] != 2 || newValues[fieldIndex + 1] != 29) {
+                if (iChronology.dayOfMonth().getMinimumValue(instant) <= 28) {
+                    newValues[fieldIndex + 1] = 28;
+                }
+            }
+            return newValues;
+        } else {
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
+        }
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
