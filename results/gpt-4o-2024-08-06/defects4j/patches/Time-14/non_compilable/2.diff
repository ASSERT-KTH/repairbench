diff --git a/tmp/f17c7001-9ae4-42a0-bd5f-ac61dd919a7c_buggy.java b/tmp/885d1feb-bfdb-4c8c-9827-7b48a4aa5939_fixed.java
index 10616db..af8068a 100644
--- a/tmp/f17c7001-9ae4-42a0-bd5f-ac61dd919a7c_buggy.java
+++ b/tmp/885d1feb-bfdb-4c8c-9827-7b48a4aa5939_fixed.java
@@ -1,19 +1,32 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+        
+        // Special handling for day-of-month to avoid invalid dates like February 29
+        if (partial.getFieldType(fieldIndex).getName().equals("dayOfMonth")) {
+            int year = partial.get(DateTimeFieldType.year());
+            int month = newValues[0]; // Assumes month is at index 0
+            int day = newValues[1]; // Assumes day of month is at index 1
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);
+
+            if (day > maxDay) {
+                newValues[1] = maxDay;
+            }
+        }
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
