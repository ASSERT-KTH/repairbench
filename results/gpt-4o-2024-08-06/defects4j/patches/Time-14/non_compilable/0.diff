diff --git a/tmp/764b6c58-2a3c-44ab-89df-91cc7043e7dd_buggy.java b/tmp/751c3ba7-b491-469d-8e72-e64f686942ff_fixed.java
index 10616db..87f2cc5 100644
--- a/tmp/764b6c58-2a3c-44ab-89df-91cc7043e7dd_buggy.java
+++ b/tmp/751c3ba7-b491-469d-8e72-e64f686942ff_fixed.java
@@ -1,19 +1,29 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
+            // Adjust for the end of the month when adding/subtracting months
+            if (partial.getFieldType(fieldIndex).getName().equals("monthOfYear")) {
+                int newYear = iChronology.year().get(instant);
+                int newMonth = iChronology.monthOfYear().get(instant);
+                int maxDayOfMonth = iChronology.dayOfMonth().getMaximumValue(newYear, newMonth);
+                int currentDayOfMonth = iChronology.dayOfMonth().get(instant);
+                if (currentDayOfMonth > maxDayOfMonth) {
+                    instant = iChronology.dayOfMonth().set(instant, maxDayOfMonth);
+                }
+            }
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
