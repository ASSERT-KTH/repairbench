diff --git a/tmp/df7e0166-849e-4dbf-95a0-f8623865459b_buggy.java b/tmp/c98c3a46-de9e-439e-8047-c861b0efef66_fixed.java
index 10616db..2c6b06e 100644
--- a/tmp/df7e0166-849e-4dbf-95a0-f8623865459b_buggy.java
+++ b/tmp/c98c3a46-de9e-439e-8047-c861b0efef66_fixed.java
@@ -1,19 +1,31 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        int[] newValues = iChronology.get(partial, instant);
+
+        // Adjust for cases like February 29 in leap year
+        if (fieldIndex < newValues.length && partial.getFieldType(fieldIndex).equals(DateTimeFieldType.dayOfMonth())) {
+            DateTimeField dayField = partial.getFieldType(fieldIndex).getField(iChronology);
+            int maxDayOfMonth = dayField.getMaximumValue(instant);
+            if (newValues[fieldIndex] > maxDayOfMonth) {
+                newValues[fieldIndex] = maxDayOfMonth;
+            }
+        }
+
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
