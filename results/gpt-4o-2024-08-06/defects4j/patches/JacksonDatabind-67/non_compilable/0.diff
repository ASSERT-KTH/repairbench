diff --git a/tmp/7ac9ff81-b037-446f-9aba-ae9c2ddd2fb2_buggy.java b/tmp/71daf1f5-866b-494c-a3e3-572a1522f512_fixed.java
index bc80637..9e9991b 100644
--- a/tmp/7ac9ff81-b037-446f-9aba-ae9c2ddd2fb2_buggy.java
+++ b/tmp/71daf1f5-866b-494c-a3e3-572a1522f512_fixed.java
@@ -1,33 +1,41 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
+                // Custom Enum Key Deserializer logic
+                deser = new KeyDeserializer() {
+                    @Override
+                    public Object deserializeKey(String key, DeserializationContext ctxt) throws IOException {
+                        Class<? extends Enum> rawClass = (Class<Enum<?>>) type.getRawClass();
+                        return Enum.valueOf(rawClass, key.toLowerCase());
                     }
+                };
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
+        }
         // and then post-processing
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
