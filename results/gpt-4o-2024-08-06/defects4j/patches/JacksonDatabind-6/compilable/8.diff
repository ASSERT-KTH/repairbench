diff --git a/tmp/83e36f99-e036-4a1f-8b53-9c5d95b0f3eb_buggy.java b/tmp/deeae0eb-a6b8-4eb0-9949-c5f0ebb382da_fixed.java
index cd412d2..0746300 100644
--- a/tmp/83e36f99-e036-4a1f-8b53-9c5d95b0f3eb_buggy.java
+++ b/tmp/deeae0eb-a6b8-4eb0-9949-c5f0ebb382da_fixed.java
@@ -1,76 +1,85 @@
 protected Date parseAsISO8601(String dateStr, ParsePosition pos)
 {
     /* 21-May-2009, tatu: DateFormat has very strict handling of
      * timezone  modifiers for ISO-8601. So we need to do some scrubbing.
      */
     
-        /* First: do we have "zulu" format ('Z' == "GMT")? If yes, that's
-         * quite simple because we already set date format timezone to be
-         * GMT, and hence can just strip out 'Z' altogether
-         */
     int len = dateStr.length();
     char c = dateStr.charAt(len-1);
     DateFormat df;
     
     // [JACKSON-200]: need to support "plain" date...
     if (len <= 10 && Character.isDigit(c)) {
         df = _formatPlain;
         if (df == null) {
             df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);
         }
     } else if (c == 'Z') {
         df = _formatISO8601_z;
         if (df == null) {
             df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
         }
         // [JACKSON-334]: may be missing milliseconds... if so, add
         if (dateStr.charAt(len-4) == ':') {
             StringBuilder sb = new StringBuilder(dateStr);
             sb.insert(len-1, ".000");
             dateStr = sb.toString();
         }
     } else {
         // Let's see if we have timezone indicator or not...
         if (hasTimeZone(dateStr)) {
             c = dateStr.charAt(len-3);
             if (c == ':') { // remove optional colon
                 // remove colon
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.delete(len-3, len-2);
                 dateStr = sb.toString();
             } else if (c == '+' || c == '-') { // missing minutes
-                    // let's just append '00'
-                    dateStr += "00";
+                // append '00' for missing minutes
+                StringBuilder sb = new StringBuilder(dateStr);
+                sb.append("00");
+                dateStr = sb.toString();
             }
             // Milliseconds partial or missing; and even seconds are optional
             len = dateStr.length();
+            
             // remove 'T', '+'/'-' and 4-digit timezone-offset
-                c = dateStr.charAt(len-9);
-                if (Character.isDigit(c)) {
+            int dotIndex = dateStr.lastIndexOf('.');
+            int timeZoneStart = len - 5;
+            if (dotIndex == -1 || dotIndex < timeZoneStart - 2) {
+                // if milliseconds are missing, add ".000" before timezone
                 StringBuilder sb = new StringBuilder(dateStr);
-                    sb.insert(len-5, ".000");
+                sb.insert(timeZoneStart, ".000");
+                dateStr = sb.toString();
+            } else {
+                // Ensure that milliseconds are padded to 3 digits
+                StringBuilder sb = new StringBuilder(dateStr);
+                int fractionLen = len - dotIndex - 1;
+                for (int i = fractionLen; i < 3; ++i) {
+                    sb.insert(dotIndex + 1 + i, '0');
+                }
                 dateStr = sb.toString();
             }
+            
             df = _formatISO8601;
             if (_formatISO8601 == null) {
                 df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
             }
         } else {
             // If not, plain date. Easiest to just patch 'Z' in the end?
             StringBuilder sb = new StringBuilder(dateStr);
             // And possible also millisecond part if missing
             int timeLen = len - dateStr.lastIndexOf('T') - 1;
             if (timeLen <= 8) {
                 sb.append(".000");
             }
             sb.append('Z');
             dateStr = sb.toString();
             df = _formatISO8601_z;
             if (df == null) {
-                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,
-                            _timezone, _locale);
+                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
             }
         }
     }
     return df.parse(dateStr, pos);
 }
\ No newline at end of file
