diff --git a/tmp/034cfac7-090d-49a1-8b9a-2cf349803d8f_buggy.java b/tmp/f85e5111-e81a-46fd-9da6-5d5f06101f97_fixed.java
index 1c53d31..2615a65 100644
--- a/tmp/034cfac7-090d-49a1-8b9a-2cf349803d8f_buggy.java
+++ b/tmp/f85e5111-e81a-46fd-9da6-5d5f06101f97_fixed.java
@@ -1,20 +1,16 @@
-  @SuppressWarnings("unchecked") // Casts guarded by conditionals.
+@SuppressWarnings("unchecked")
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
+  Object instance;
   if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    instance = constructorConstructor.get(TypeToken.get(value)).construct();
+    return ((TypeAdapter<?>) instance).nullSafe();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    instance = constructorConstructor.get(TypeToken.get(value)).construct();
+    return ((TypeAdapterFactory) instance).create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
 }
\ No newline at end of file
