diff --git a/tmp/0c6f0e48-b931-428d-a7bf-1c7cb445464a_buggy.java b/tmp/ea9eaee3-acbc-4156-ae6b-49bfeb39c3a9_fixed.java
index 1c53d31..b55591c 100644
--- a/tmp/0c6f0e48-b931-428d-a7bf-1c7cb445464a_buggy.java
+++ b/tmp/ea9eaee3-acbc-4156-ae6b-49bfeb39c3a9_fixed.java
@@ -1,20 +1,28 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
+    TypeAdapter<?> typeAdapter = null; // Initialize typeAdapter to null
+
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      TypeAdapterFactory factoryInstance = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
+          .construct();
+      if (factoryInstance != null) {
+        typeAdapter = factoryInstance.create(gson, fieldType);
+      }
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+
+    if (typeAdapter == null) {
+      throw new IllegalStateException("Factory or Adapter created a null TypeAdapter.");
+    }
+
     typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
   }
\ No newline at end of file
