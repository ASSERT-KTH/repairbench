diff --git a/tmp/bd76811b-d214-4cca-95b3-a90e77663e01_buggy.java b/tmp/51c79800-4137-48ab-b3b7-0dae2c08aa1a_fixed.java
index 8e93a5e..346fb10 100644
--- a/tmp/bd76811b-d214-4cca-95b3-a90e77663e01_buggy.java
+++ b/tmp/51c79800-4137-48ab-b3b7-0dae2c08aa1a_fixed.java
@@ -1,43 +1,24 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
+        int offset = 0;
+        while (offset < text.length())
+        {
+            int pos = findWrapPos(text, width, offset);
             if (pos == -1)
             {
-            sb.append(rtrim(text));
-
-            return sb;
+                sb.append(rtrim(text.substring(offset)));
+                break;
             }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(rtrim(text.substring(offset, pos))).append(defaultNewLine);
+            offset = pos;
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+            // all following lines must be padded with nextLineTabStop space characters
             final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
+            while (offset < text.length() && Character.isWhitespace(text.charAt(offset))) {
+                offset++;
+            }
+            sb.append(padding);
+        }
         return sb;
     }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
