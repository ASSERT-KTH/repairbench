diff --git a/tmp/d854130d-8a52-48e2-a321-e141313a099f_buggy.java b/tmp/820d075c-db13-4f9d-9742-3101906238be_fixed.java
index f47d784..43d22a6 100644
--- a/tmp/d854130d-8a52-48e2-a321-e141313a099f_buggy.java
+++ b/tmp/820d075c-db13-4f9d-9742-3101906238be_fixed.java
@@ -1,12 +1,48 @@
   @Override
   public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
       MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
       NodeTraversal t = new NodeTraversal(compiler, renamer);
       t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
+
+    // Additional step to ensure 'arguments' is correctly handled within function scopes
+    processFunctionScopes(root);
+  }
+
+  private void processFunctionScopes(Node root) {
+    NodeTraversal.traverse(compiler, root,
+        new NodeTraversal.AbstractNodeVisitor() {
+          @Override
+          public void visit(NodeTraversal t, Node n, Node parent) {
+            if (n.isFunction()) {
+              Node functionBody = n.getLastChild();
+              handleArgumentsVariable(functionBody);
+            }
+          }
+    });
+  }
+
+  private void handleArgumentsVariable(Node functionBody) {
+    if (functionBody != null) {
+      NodeTraversal.traverse(compiler, functionBody,
+          new NodeTraversal.AbstractNodeVisitor() {
+            boolean argumentsDeclared = false;
+
+            @Override
+            public void visit(NodeTraversal t, Node n, Node parent) {
+              if (n.isName() && "arguments".equals(n.getString())) {
+                if (parent != null && parent.isVar()) {
+                  argumentsDeclared = true;
+                } else if (!argumentsDeclared) {
+                  compiler.report(JSError.make(n, VarCheck.VAR_MULTIPLY_DECLARED_ERROR));
+                }
+              }
+            }
+      });
+    }
   }
\ No newline at end of file
