diff --git a/tmp/c1671de5-0e24-4316-b8c3-de35bdc80936_buggy.java b/tmp/62f8fd36-e8cd-4316-9e59-67d0787e4b27_fixed.java
index 43fb5fd..1ecd954 100644
--- a/tmp/c1671de5-0e24-4316-b8c3-de35bdc80936_buggy.java
+++ b/tmp/62f8fd36-e8cd-4316-9e59-67d0787e4b27_fixed.java
@@ -1,55 +1,40 @@
-    /**
-     * <p>Breaks <code>token</code> into its constituent parts
-     * using the following algorithm.
-     * <ul>
-     *  <li>ignore the first character ("<b>-</b>")</li>
-     *  <li>foreach remaining character check if an {@link Option}
-     *  exists with that id.</li>
-     *  <li>if an {@link Option} does exist then add that character
-     *  prepended with "<b>-</b>" to the list of processed tokens.</li>
-     *  <li>if the {@link Option} can have an argument value and there 
-     *  are remaining characters in the token then add the remaining 
-     *  characters as a token to the list of processed tokens.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> 
-     *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
-     *  "<b>--</b>" followed by the remaining characters and also 
-     *  the remaining tokens directly to the processed tokens list.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
-     *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
-     *  character prepended with "<b>-</b>".</li>
-     * </ul>
-     * </p>
-     *
-     * @param token The current token to be <b>burst</b>
-     * @param stopAtNonOption Specifies whether to stop processing
-     * at the first non-Option encountered.
-     */
 protected void burstToken(String token, boolean stopAtNonOption)
 {
+    boolean encounteredNonOption = false;
+    
     for (int i = 1; i < token.length(); i++)
     {
         String ch = String.valueOf(token.charAt(i));
 
-            if (options.hasOption(ch))
+        if (!encounteredNonOption && options.hasOption(ch))
         {
             tokens.add("-" + ch);
             currentOption = options.getOption(ch);
 
             if (currentOption.hasArg() && (token.length() != (i + 1)))
             {
                 tokens.add(token.substring(i + 1));
+                break;
+            }
+        }
+        else
+        {
+            encounteredNonOption = true;
+            if (stopAtNonOption)
+            {
+                tokens.add("--");
+                tokens.add(token.substring(i));
+                break;
+            }
+            else
+            {
+                tokens.add("-" + ch);
+            }
+        }
+    }
     
-                    break;
-                }
-            }
-            else if (stopAtNonOption)
+    if (encounteredNonOption && !stopAtNonOption)
     {
-                process(token.substring(i));
-            }
-            else
-            {
-                tokens.add(token);
-                break;
-            }
+        tokens.add(token.substring(1));
     }
 }
\ No newline at end of file
