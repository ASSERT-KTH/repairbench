diff --git a/tmp/c5a42574-a018-4777-8f82-51cde6d72e73_buggy.java b/tmp/a6f2288f-ccf9-45f4-9fa9-7dbcd2f5605a_fixed.java
index 21f64c6..1af7299 100644
--- a/tmp/c5a42574-a018-4777-8f82-51cde6d72e73_buggy.java
+++ b/tmp/a6f2288f-ccf9-45f4-9fa9-7dbcd2f5605a_fixed.java
@@ -1,23 +1,21 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
+            if (offset < length) {
                 int i = offset + 1;
                 int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+
+                if (last <= length) { // Check that we have enough room for the sequence.
+                    int j = 1;
+                    for (; i < last && seq.charAt(j) == input[i]; i++, j++);
                     if (i == last) // found full sequence
                         return offset - pos;
                 }
             }
+        }
         return -1;
     }
\ No newline at end of file
