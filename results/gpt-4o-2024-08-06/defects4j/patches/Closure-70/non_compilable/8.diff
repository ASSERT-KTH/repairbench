diff --git a/tmp/bb3dc8d3-f668-4ac1-9021-c3490546dbc9_buggy.java b/tmp/323e7148-61a8-426c-bb4d-eed67f97b8cf_fixed.java
index 1530b34..c615dbe 100644
--- a/tmp/bb3dc8d3-f668-4ac1-9021-c3490546dbc9_buggy.java
+++ b/tmp/323e7148-61a8-426c-bb4d-eed67f97b8cf_fixed.java
@@ -1,23 +1,32 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
+          Set<String> parameterNames = new HashSet<>();
           for (Node astParameter : astParameters.children()) {
+            String paramName = astParameter.getString();
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode, 
                   jsDocParameter.getJSType(), true);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);
             }
+            // Keep track of declared parameter names to detect duplicates
+            if (parameterNames.contains(paramName)) {
+              reportError(
+                  "Duplicate parameter name: " + paramName, astParameter);
+            } else {
+              parameterNames.add(paramName);
+            }
           }
         }
       }
     } // end declareArguments
\ No newline at end of file
