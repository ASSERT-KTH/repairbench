diff --git a/tmp/0de04904-a96e-4714-908c-91e8574cbabc_buggy.java b/tmp/7af05204-15e2-4be2-b839-9e7933f50ba8_fixed.java
index 1530b34..5357d0c 100644
--- a/tmp/0de04904-a96e-4714-908c-91e8574cbabc_buggy.java
+++ b/tmp/7af05204-15e2-4be2-b839-9e7933f50ba8_fixed.java
@@ -1,23 +1,36 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
+              JSType jsDocType = jsDocParameter.getJSType();
+              // Check if the parameter already has a type
+              JSType currentType = astParameter.getJSType();
+              if (currentType != null) {
+                // Ensure a redefinition warning
+                JSTypeRegistry registry = functionNode.getJSType().getJSTypeRegistry();
+                registry.registry.reportWarning(
+                  registry.createWarning(
+                    "Variable " + astParameter.getString() + " is redefined with type " + jsDocType + 
+                    ", original definition at " + astParameter.getLineno()
+                  ));
+              } else {
                 defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                    jsDocType, true);
+              }
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);
             }
           }
         }
       }
     } // end declareArguments
\ No newline at end of file
