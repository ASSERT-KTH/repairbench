diff --git a/tmp/a22af7a0-cc72-4975-b0ee-497741f605eb_buggy.java b/tmp/367e13ea-f4eb-4558-ae54-10732cabfb32_fixed.java
index 1530b34..24f785d 100644
--- a/tmp/a22af7a0-cc72-4975-b0ee-497741f605eb_buggy.java
+++ b/tmp/367e13ea-f4eb-4558-ae54-10732cabfb32_fixed.java
@@ -1,23 +1,37 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
+        // Check for duplicate local variable declaration
+        if (body.getParent().isFunction()) {
+          Scope functionScope = currentScope; // Assume currentScope is available
+          String paramName = astParameter.getString();
+          Var alreadyDefinedVar = functionScope.getOwnSlot(paramName);
+          if (alreadyDefinedVar != null) {
+            reportError("variable " + paramName + " redefined with type " + 
+                        (jsDocParameter != null ? jsDocParameter.getJSType() : "unknown") + 
+                        ", original definition at line " +
+                        alreadyDefinedVar.getNode().getLineno() +
+                        " with type " + alreadyDefinedVar.getType());
+          }
+        }
+
         if (jsDocParameter != null) {
           defineSlot(astParameter, functionNode,
               jsDocParameter.getJSType(), true);
           jsDocParameter = jsDocParameter.getNext();
         } else {
           defineSlot(astParameter, functionNode, null, true);
         }
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
