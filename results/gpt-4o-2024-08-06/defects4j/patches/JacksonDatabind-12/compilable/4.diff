diff --git a/tmp/e31ecb21-d651-4bd1-9fde-ac0d4ebf3c58_buggy.java b/tmp/696f7f6d-8f94-499d-a08d-c071149830b4_fixed.java
index 845704e..7349874 100644
--- a/tmp/e31ecb21-d651-4bd1-9fde-ac0d4ebf3c58_buggy.java
+++ b/tmp/696f7f6d-8f94-499d-a08d-c071149830b4_fixed.java
@@ -1,21 +1,10 @@
-    /**
-     * Turns out that these are expensive enough to create so that caching
-     * does make sense.
-     *<p>
-     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
-     * JAXB Annotations (failing a test).
-     * It is also possible that some other settings could make deserializers
-     * un-cacheable; but on the other hand, caching can make a big positive
-     * difference with performance... so it's a hard choice.
-     * 
-     * @since 2.4.4
-     */
 @Override
 public boolean isCachable() {
     /* As per [databind#735], existence of value or key deserializer (only passed
      * if annotated to use non-standard one) should also prevent caching.
+     * Additionally, if there are any custom settings, prevent caching.
      */
     return (_valueTypeDeserializer == null)
+            && (_keyDeserializer == null)
             && (_ignorableProperties == null);
 }
\ No newline at end of file
