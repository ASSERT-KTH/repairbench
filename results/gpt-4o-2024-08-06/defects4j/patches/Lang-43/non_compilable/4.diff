diff --git a/tmp/60bfd1d2-ce26-4cd0-8473-db41a63ac72e_buggy.java b/tmp/76c72e32-9015-47d3-93a2-8eac8efc20e6_fixed.java
index b6b11b6..488c154 100644
--- a/tmp/60bfd1d2-ce26-4cd0-8473-db41a63ac72e_buggy.java
+++ b/tmp/76c72e32-9015-47d3-93a2-8eac8efc20e6_fixed.java
@@ -1,38 +1,33 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+                i += ESCAPED_QUOTE.length() - 1;
+                pos.setIndex(i + 1);
                 lastHold = pos.getIndex();
                 continue;
             }
-            switch (c[pos.getIndex()]) {
+            switch (c[i]) {
             case QUOTE:
                 next(pos);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                        i - lastHold);
             default:
-                next(pos);
+                pos.setIndex(i + 1);
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
+
+    private void next(ParsePosition pos) {
+        pos.setIndex(pos.getIndex() + 1);
+    }
\ No newline at end of file
