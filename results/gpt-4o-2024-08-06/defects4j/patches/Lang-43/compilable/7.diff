diff --git a/tmp/1dd8c5dc-bfcb-4c27-8ea4-8c3264ad2c54_buggy.java b/tmp/bf0ad04c-39fa-4dc2-96ee-e72c6b72906e_fixed.java
index b6b11b6..b5733b8 100644
--- a/tmp/1dd8c5dc-bfcb-4c27-8ea4-8c3264ad2c54_buggy.java
+++ b/tmp/bf0ad04c-39fa-4dc2-96ee-e72c6b72906e_fixed.java
@@ -1,38 +1,21 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
-        }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
-                lastHold = pos.getIndex();
-                continue;
-            }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+            char currentChar = c[i];
+            if (escapingOn && i < pattern.length() - 1 && currentChar == QUOTE && c[i + 1] == QUOTE) {
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+                i++; // Skip the next quote
+                lastHold = i + 1;
+                pos.setIndex(i + 1);
+            } else if (currentChar == QUOTE) {
+                appendTo.append(c, lastHold, i - lastHold);
+                pos.setIndex(i + 1);
+                return appendTo;
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
