diff --git a/tmp/021f699a-46da-4c3f-9148-689d4f4f74ce_buggy.java b/tmp/ef0af5fe-51fe-44e3-99ef-f66c5b77d327_fixed.java
index e69de29..f4731b7 100644
--- a/tmp/021f699a-46da-4c3f-9148-689d4f4f74ce_buggy.java
+++ b/tmp/ef0af5fe-51fe-44e3-99ef-f66c5b77d327_fixed.java
@@ -0,0 +1,29 @@
+public void _testFieldNameQuotingEnabled(JsonFactory jsonFactory, boolean useQuotes, boolean expectQuoting, String expectedJson) throws IOException {
+    // Create a StringWriter to hold the JSON output
+    StringWriter sw = new StringWriter();
+
+    // Create a JSON generator with the provided JsonFactory and StringWriter
+    JsonGenerator jg = jsonFactory.createGenerator(sw);
+
+    // Enable or disable the QUOTE_FIELD_NAMES feature based on 'useQuotes'
+    if (useQuotes) {
+        jg.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    } else {
+        jg.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    }
+
+    // Start writing JSON object
+    jg.writeStartObject();
+    // Write a field name based on 'expectQuoting'
+    jg.writeNumberField("foo", 1);
+    // End writing JSON object
+    jg.writeEndObject();
+    // Close the generator
+    jg.close();
+
+    // Get the generated JSON string
+    String json = sw.toString();
+
+    // Assert that the generated JSON matches the expected JSON
+    assertEquals(expectedJson, json);
+}
\ No newline at end of file
