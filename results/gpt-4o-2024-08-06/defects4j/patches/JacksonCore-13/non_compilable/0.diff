diff --git a/tmp/e8d120d3-5fb2-4e37-9b3b-5a9679c49705_buggy.java b/tmp/66eaae40-46cc-4a8f-a365-fbefd480d7b3_fixed.java
index e69de29..c662b6a 100644
--- a/tmp/e8d120d3-5fb2-4e37-9b3b-5a9679c49705_buggy.java
+++ b/tmp/66eaae40-46cc-4a8f-a365-fbefd480d7b3_fixed.java
@@ -0,0 +1,33 @@
+public String writeJsonField(JsonFactory jsonFactory, boolean prettyPrint, Map<String, Object> data) throws IOException {
+    StringWriter writer = new StringWriter();
+    JsonGenerator jsonGenerator = jsonFactory.createGenerator(writer);
+    if (prettyPrint) {
+        jsonGenerator.useDefaultPrettyPrinter();
+    }
+    
+    jsonGenerator.writeStartObject();
+    for (Map.Entry<String, Object> entry : data.entrySet()) {
+        String fieldName = entry.getKey();
+        Object value = entry.getValue();
+        
+        // Determine if field name quoting is needed
+        if (jsonGenerator.isEnabled(JsonGenerator.Feature.QUOTE_FIELD_NAMES)) {
+            jsonGenerator.writeFieldName(fieldName);
+        } else {
+            jsonGenerator.writeRaw(fieldName);
+            jsonGenerator.writeRaw(':');
+        }
+        
+        // Assuming value is a known type, for simplicity
+        if (value instanceof String) {
+            jsonGenerator.writeString((String) value);
+        } else if (value instanceof Integer) {
+            jsonGenerator.writeNumber((Integer) value);
+        }
+        // Handle other types as necessary
+    }
+    jsonGenerator.writeEndObject();
+    jsonGenerator.close();
+    
+    return writer.toString();
+}
\ No newline at end of file
