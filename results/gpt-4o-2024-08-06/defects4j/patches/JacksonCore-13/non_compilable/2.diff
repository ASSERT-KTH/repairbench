diff --git a/tmp/a6db3219-9c23-49ab-b1cb-41cf68f979ce_buggy.java b/tmp/6ddcd526-9b73-4043-9bff-a094150de0ee_fixed.java
index e69de29..d69d448 100644
--- a/tmp/a6db3219-9c23-49ab-b1cb-41cf68f979ce_buggy.java
+++ b/tmp/6ddcd526-9b73-4043-9bff-a094150de0ee_fixed.java
@@ -0,0 +1,31 @@
+import com.fasterxml.jackson.core.JsonFactory;
+import com.fasterxml.jackson.core.JsonGenerator;
+import java.io.IOException;
+import java.io.StringWriter;
+
+public class JsonQuotingUtility {
+
+    public static String writeJson(boolean quoteFieldNames, String fieldName, int value) throws IOException {
+        JsonFactory factory = new JsonFactory();
+        if (!quoteFieldNames) {
+            factory.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+        } else {
+            factory.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+        }
+
+        StringWriter writer = new StringWriter();
+        JsonGenerator generator = factory.createGenerator(writer);
+        generator.writeStartObject();
+        generator.writeNumberField(fieldName, value);
+        generator.writeEndObject();
+        generator.close();
+
+        return writer.toString();
+    }
+
+    // Testing utility method if needed
+    public static void main(String[] args) throws IOException {
+        System.out.println(writeJson(true, "foo", 1));  // Expected: {"foo":1}
+        System.out.println(writeJson(false, "foo", 1)); // Expected: {foo:1}
+    }
+}
\ No newline at end of file
