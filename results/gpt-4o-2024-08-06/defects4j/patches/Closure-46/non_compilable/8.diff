diff --git a/tmp/11dae8d3-803b-49a3-a375-f9ff740a1520_buggy.java b/tmp/5f0f831e-9e99-447b-8232-3aa2ae52ef34_fixed.java
index 46817a7..119e48c 100644
--- a/tmp/11dae8d3-803b-49a3-a375-f9ff740a1520_buggy.java
+++ b/tmp/5f0f831e-9e99-447b-8232-3aa2ae52ef34_fixed.java
@@ -1,16 +1,27 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
+  
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+  // Add properties from this record type
   for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    JSType thisPropType = getPropertyType(property);
+    if (that.toMaybeRecordType().hasProperty(property)) {
+      JSType thatPropType = that.toMaybeRecordType().getPropertyType(property);
+      builder.addProperty(property, thisPropType.getLeastSupertype(thatPropType), getPropertyNode(property));
+    } else {
+      builder.addProperty(property, thisPropType, getPropertyNode(property));
     }
   }
+  
+  // Add properties from 'that' record type which are not already added
+  for (String property : that.toMaybeRecordType().getProperties()) {
+    if (!properties.containsKey(property)) {
+      builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property), null);
+    }
+  }
+  
   return builder.build();
 }
\ No newline at end of file
