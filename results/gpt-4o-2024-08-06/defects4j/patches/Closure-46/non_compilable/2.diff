diff --git a/tmp/cc615e7b-db38-462c-b485-d6a63ae37938_buggy.java b/tmp/e31d721b-17f0-4d1e-a1e6-26b16871ee11_fixed.java
index 46817a7..f2f7b99 100644
--- a/tmp/cc615e7b-db38-462c-b485-d6a63ae37938_buggy.java
+++ b/tmp/e31d721b-17f0-4d1e-a1e6-26b16871ee11_fixed.java
@@ -1,16 +1,34 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+    RecordType thisRecord = this.toMaybeRecordType();
+    RecordType thatRecord = that.toMaybeRecordType();
+
+    // Add all properties from this record
+    for (String property : thisRecord.getProperties()) {
+        JSType thisPropertyType = thisRecord.getPropertyType(property);
+        if (thatRecord.hasProperty(property)) {
+            JSType thatPropertyType = thatRecord.getPropertyType(property);
+            // If the property is present in both, use the union of both types
+            builder.addProperty(property, 
+                  registry.createUnionType(thisPropertyType, thatPropertyType),
                   getPropertyNode(property));
+        } else {
+            // If it is unique to this record, add it as is
+            builder.addProperty(property, thisPropertyType, getPropertyNode(property));
         }
     }
+
+    // Add properties unique to 'that' record
+    for (String property : thatRecord.getProperties()) {
+        if (!thisRecord.hasProperty(property)) {
+            JSType thatPropertyType = thatRecord.getPropertyType(property);
+            builder.addProperty(property, thatPropertyType, thatRecord.getPropertyNode(property));
+        }
+    }
+
     return builder.build();
 }
\ No newline at end of file
