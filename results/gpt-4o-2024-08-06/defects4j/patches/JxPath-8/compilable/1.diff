diff --git a/tmp/612a6744-e01e-44d8-bebf-12e86011f728_buggy.java b/tmp/d5650206-3fa4-4d12-8393-a91d9ae9d911_fixed.java
index 98d89dc..4ad2a94 100644
--- a/tmp/612a6744-e01e-44d8-bebf-12e86011f728_buggy.java
+++ b/tmp/d5650206-3fa4-4d12-8393-a91d9ae9d911_fixed.java
@@ -1,23 +1,32 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
+        
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
+        
+        // Adjust logic to handle NaN comparisons correctly
+        if (Double.isNaN(ld) || Double.isNaN(rd)) {
+            // NaN compared to any number, including another NaN, using <, >, or == should follow xPath's semantics
+            // According to the XPath specification, NaN == NaN should return true
+            return Double.isNaN(ld) && Double.isNaN(rd);
+        }
+        
         return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
     }
\ No newline at end of file
