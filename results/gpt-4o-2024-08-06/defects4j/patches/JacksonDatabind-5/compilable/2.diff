diff --git a/tmp/f044334b-78c8-4e74-b396-856f6bf5ad3c_buggy.java b/tmp/6019e9d3-1047-4dc0-bdf8-fcf37dac9286_fixed.java
index b2db1d6..029c8da 100644
--- a/tmp/f044334b-78c8-4e74-b396-856f6bf5ad3c_buggy.java
+++ b/tmp/6019e9d3-1047-4dc0-bdf8-fcf37dac9286_fixed.java
@@ -1,29 +1,34 @@
 protected void _addMethodMixIns(Class<?> targetClass, AnnotatedMethodMap methods,
         Class<?> mixInCls, AnnotatedMethodMap mixIns)
 {
     List<Class<?>> parents = new ArrayList<Class<?>>();
     parents.add(mixInCls);
     ClassUtil.findSuperTypes(mixInCls, targetClass, parents);
+
     for (Class<?> mixin : parents) {
         for (Method m : mixin.getDeclaredMethods()) {
             if (!_isIncludableMemberMethod(m)) {
                 continue;
             }
-                AnnotatedMethod am = methods.find(m);
-                /* Do we already have a method to augment (from sub-class
-                 * that will mask this mixIn)? If so, add if visible
-                 * without masking (no such annotation)
-                 */
+
+            // Locate the corresponding method in the target class
+            Method targetMethod;
+            try {
+                targetMethod = targetClass.getDeclaredMethod(m.getName(), m.getParameterTypes());
+            } catch (NoSuchMethodException e) {
+                targetMethod = null;
+            }
+
+            AnnotatedMethod am = methods.find(targetMethod);
+
             if (am != null) {
                 _addMixUnders(m, am);
-                    /* Otherwise will have precedence, but must wait
-                     * until we find the real method (mixIn methods are
-                     * just placeholder, can't be called)
-                     */
             } else {
-                    // Well, or, as per [Issue#515], multi-level merge within mixins...
+                // When not found, add the mixin method if it doesn't already exist
+                if (mixIns.find(m) == null) {
                     mixIns.add(_constructMethod(m));
                 }
             }
         }
     }
+}
\ No newline at end of file
