diff --git a/tmp/2b1a7b5d-1249-40db-a855-725510384a2d_buggy.java b/tmp/714e22a3-fc99-425a-ba51-f59c6caf9359_fixed.java
index 710fcc0..6b4b514 100644
--- a/tmp/2b1a7b5d-1249-40db-a855-725510384a2d_buggy.java
+++ b/tmp/714e22a3-fc99-425a-ba51-f59c6caf9359_fixed.java
@@ -1,37 +1,19 @@
 Object returnValueFor(Class<?> type) {
     if (Primitives.isPrimitiveOrWrapper(type)) {
         return Primitives.defaultValueForPrimitiveOrWrapper(type);
-            //new instances are used instead of Collections.emptyList(), etc.
-            //to avoid UnsupportedOperationException if code under test modifies returned collection
-        } else if (type == Collection.class) {
+    } else if (type == Iterable.class || type == Collection.class || type == List.class || type == LinkedList.class) {
         return new LinkedList<Object>();
-        } else if (type == Set.class) {
+    } else if (type == Set.class || type == HashSet.class || type == LinkedHashSet.class) {
         return new HashSet<Object>();
-        } else if (type == HashSet.class) {
-            return new HashSet<Object>();
-        } else if (type == SortedSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == TreeSet.class) {
+    } else if (type == SortedSet.class || type == TreeSet.class) {
         return new TreeSet<Object>();
-        } else if (type == LinkedHashSet.class) {
-            return new LinkedHashSet<Object>();
-        } else if (type == List.class) {
-            return new LinkedList<Object>();
-        } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
     } else if (type == ArrayList.class) {
         return new ArrayList<Object>();
-        } else if (type == Map.class) {
+    } else if (type == Map.class || type == HashMap.class || type == LinkedHashMap.class) {
         return new HashMap<Object, Object>();
-        } else if (type == HashMap.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == TreeMap.class) {
+    } else if (type == SortedMap.class || type == TreeMap.class) {
         return new TreeMap<Object, Object>();
-        } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
     }
     // Let's not care about the rest of collections.
     return null;
 }
\ No newline at end of file
