diff --git a/tmp/da7a2f75-2dc0-4557-8f4c-83e56133a08b_buggy.java b/tmp/cacaf94f-7989-47b0-a09b-2385f6f3c4dd_fixed.java
index b5d94e0..ffe38f0 100644
--- a/tmp/da7a2f75-2dc0-4557-8f4c-83e56133a08b_buggy.java
+++ b/tmp/cacaf94f-7989-47b0-a09b-2385f6f3c4dd_fixed.java
@@ -1,26 +1,30 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
+    Set<Node> visitedNodes = new HashSet<>(); // Keep track of visited nodes to avoid redundant visits
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c != null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
 
+      if (!visitedNodes.contains(node)) { // Only visit if not visited in the current iteration
         visit(node);
+        visitedNodes.add(node);
+      }
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
