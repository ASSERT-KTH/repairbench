diff --git a/tmp/8030559c-8b40-4b4f-b3e0-218772a63169_buggy.java b/tmp/ba6432a3-4ea2-4bf1-bd56-b21a9563ad42_fixed.java
index b5d94e0..419a70b 100644
--- a/tmp/8030559c-8b40-4b4f-b3e0-218772a63169_buggy.java
+++ b/tmp/ba6432a3-4ea2-4bf1-bd56-b21a9563ad42_fixed.java
@@ -1,26 +1,27 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
+    boolean nodeChanged;
     do {
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
             Node next = c.getNext();
             c = next;
         }
 
-      visit(node);
+        nodeChanged = visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+        Preconditions.checkState(visits < 10000, "too many iterations");
+    } while (nodeChanged || shouldRetraverse(node)); // combine the logical conditions
 
     exitNode(node);
 }
\ No newline at end of file
