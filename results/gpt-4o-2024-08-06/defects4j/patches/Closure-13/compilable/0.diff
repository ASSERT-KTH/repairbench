diff --git a/tmp/68f27e55-b90c-4ded-816e-e57c14d8a819_buggy.java b/tmp/ec9ad379-e4d9-4142-bf1c-c1bc2f5845ee_fixed.java
index b5d94e0..3d98424 100644
--- a/tmp/68f27e55-b90c-4ded-816e-e57c14d8a819_buggy.java
+++ b/tmp/ec9ad379-e4d9-4142-bf1c-c1bc2f5845ee_fixed.java
@@ -1,26 +1,26 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
+    boolean shouldRevisit;
     do {
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
-        Node next = c.getNext();
-        c = next;
+            c = c.getNext();
         }
 
         visit(node);
         visits++;
         
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+        if (visits >= 10000) {
+            throw new IllegalStateException("too many iterations");
+        }
+        
+        shouldRevisit = shouldRetraverse(node);
+    } while (shouldRevisit);
 
     exitNode(node);
 }
\ No newline at end of file
