diff --git a/tmp/44c8bae8-c991-4224-ba42-d00e3bd48e0c_buggy.java b/tmp/3e3ce834-da11-4bbd-96e7-9972faf912ae_fixed.java
index 544303b..05cf38d 100644
--- a/tmp/44c8bae8-c991-4224-ba42-d00e3bd48e0c_buggy.java
+++ b/tmp/3e3ce834-da11-4bbd-96e7-9972faf912ae_fixed.java
@@ -1,29 +1,13 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Integer basicRow;
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                coefficients[i] = getEntry(basicRow, getRhsOffset());
+            } else {
                 coefficients[i] = 0;
             }
         }
-            }
-        }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
