diff --git a/tmp/360bb522-9156-4f72-a0b3-3d61f4889b10_buggy.java b/tmp/562737e5-c710-4d6e-9bc9-2a5349fde32c_fixed.java
index c9da1b7..beeb227 100644
--- a/tmp/360bb522-9156-4f72-a0b3-3d61f4889b10_buggy.java
+++ b/tmp/562737e5-c710-4d6e-9bc9-2a5349fde32c_fixed.java
@@ -1,33 +1,33 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
-
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+            // if the newOne is not explicit, we can ignore it
             if (!explicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+            // if both are explicit and identical, we don't have a conflict
+            if (oldOne.equals(newOne)) {
+                return;
             }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            // both explicit and different: conflict
             throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                     +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+        }
+        // one more thing: ok to override in sub-class
+        if (oldOne.getClass() == newOne.getClass()) {
+            // if they are the same constructor, just continue
+            if (oldOne.equals(newOne)) {
+                return;
+            }
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
