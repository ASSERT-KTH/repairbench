diff --git a/tmp/5b0c0996-4b8e-49e1-a9c7-3829a2428978_buggy.java b/tmp/6c738426-bc76-494e-906e-398fa158a2f2_fixed.java
index 227a4ef..a9aa8d4 100644
--- a/tmp/5b0c0996-4b8e-49e1-a9c7-3829a2428978_buggy.java
+++ b/tmp/6c738426-bc76-494e-906e-398fa158a2f2_fixed.java
@@ -1,48 +1,36 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text) 
 {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+    if (pos == -1) {
         sb.append(rtrim(text));
-
         return sb;
     }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // all following lines must be padded with nextLineTabStop space characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
+    while (text.length() > 0) {
         int lastPos = pos;
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
-            if (pos == -1)
-            {
+        // If findWrapPos returns -1 and text is not empty, append the rest
+        if (pos == -1) {
             sb.append(text);
+            break;
+        }
 
-                return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+        // Ensure progress is made to prevent infinite loop
+        if (pos == lastPos) {
+            pos = lastPos + 1;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
+
+    return sb;
 }
\ No newline at end of file
