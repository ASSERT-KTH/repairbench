diff --git a/tmp/d97c0a5c-7c5d-47bd-ad3d-9a16d67b7655_buggy.java b/tmp/6c94995d-84ba-4aa9-8f76-44de794526b8_fixed.java
index 4d0be80..494c9ab 100644
--- a/tmp/d97c0a5c-7c5d-47bd-ad3d-9a16d67b7655_buggy.java
+++ b/tmp/6c94995d-84ba-4aa9-8f76-44de794526b8_fixed.java
@@ -1,10 +1,14 @@
 @Override
 Node processForInLoop(ForInLoop loopNode) {
-
+    if (loopNode.isForEach()) {
+        // Handle unsupported "for each" loop syntax by throwing a parse error or returning null.
+        // This could help in catching unsupported syntax usage early in the processing pipeline.
+        throw new UnsupportedOperationException("unsupported language extension: for each");
+    }
     // Return the bare minimum to put the AST in a valid state.
     return newNode(
         Token.FOR,
         transform(loopNode.getIterator()),
         transform(loopNode.getIteratedObject()),
         transformBlock(loopNode.getBody()));
 }
\ No newline at end of file
