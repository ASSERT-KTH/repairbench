diff --git a/tmp/a9cfab00-ac41-468e-834b-8d3dabf80e4a_buggy.java b/tmp/fceafae0-c22b-40fa-b3b3-39cf6d8f9842_fixed.java
index 4d0be80..494c9ab 100644
--- a/tmp/a9cfab00-ac41-468e-834b-8d3dabf80e4a_buggy.java
+++ b/tmp/fceafae0-c22b-40fa-b3b3-39cf6d8f9842_fixed.java
@@ -1,10 +1,14 @@
 @Override
 Node processForInLoop(ForInLoop loopNode) {
-
+    if (loopNode.isForEach()) {
+        // Handle unsupported "for each" loop syntax by throwing a parse error or returning null.
+        // This could help in catching unsupported syntax usage early in the processing pipeline.
+        throw new UnsupportedOperationException("unsupported language extension: for each");
+    }
     // Return the bare minimum to put the AST in a valid state.
     return newNode(
         Token.FOR,
         transform(loopNode.getIterator()),
         transform(loopNode.getIteratedObject()),
         transformBlock(loopNode.getBody()));
 }
\ No newline at end of file
