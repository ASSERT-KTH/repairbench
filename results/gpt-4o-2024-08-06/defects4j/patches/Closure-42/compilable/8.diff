diff --git a/tmp/98bb354a-e2d6-4b16-a901-18de273c2c25_buggy.java b/tmp/d4bdf221-0ee9-457e-9eba-5cfc10b9d23d_fixed.java
index 4d0be80..8af7191 100644
--- a/tmp/98bb354a-e2d6-4b16-a901-18de273c2c25_buggy.java
+++ b/tmp/d4bdf221-0ee9-457e-9eba-5cfc10b9d23d_fixed.java
@@ -1,10 +1,16 @@
 @Override
 Node processForInLoop(ForInLoop loopNode) {
 
+    // Check if the loopNode represents a "for each" loop and handle this case if necessary.
+    if (loopNode.isForEach()) {
+        // Throw an error or handle it accordingly because 'for each' is not supported.
+        throw new UnsupportedOperationException("unsupported language extension: for each");
+    }
+
     // Return the bare minimum to put the AST in a valid state.
     return newNode(
         Token.FOR,
         transform(loopNode.getIterator()),
         transform(loopNode.getIteratedObject()),
         transformBlock(loopNode.getBody()));
 }
\ No newline at end of file
