diff --git a/tmp/c5882a32-d40a-4cdd-acbd-475f4d6e4aee_buggy.java b/tmp/a8c2d8a5-b50f-4afc-869c-20b33056c44c_fixed.java
index 373b1e8..c9c1e8b 100644
--- a/tmp/c5882a32-d40a-4cdd-acbd-475f4d6e4aee_buggy.java
+++ b/tmp/a8c2d8a5-b50f-4afc-869c-20b33056c44c_fixed.java
@@ -1,37 +1,40 @@
     private static boolean looksLikeUtf8(byte[] input) {
         int i = 0;
         // BOM:
         if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+            && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
             i = 3;
         }
 
         int end;
         for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+            int o = input[i] & 0xFF;
             if ((o & 0x80) == 0) {
                 continue; // ASCII
             }
 
             // UTF-8 leading:
             if ((o & 0xE0) == 0xC0) {
                 end = i + 1;
             } else if ((o & 0xF0) == 0xE0) {
                 end = i + 2;
             } else if ((o & 0xF8) == 0xF0) {
                 end = i + 3;
             } else {
                 return false;
             }
 
+            if (end >= input.length) { // Check if there are enough bytes remaining
+                return false;
+            }
 
             while (i < end) {
                 i++;
-                    o = input[i];
+                o = input[i] & 0xFF;
                 if ((o & 0xC0) != 0x80) {
                     return false;
                 }
             }
         }
         return true;
     }
\ No newline at end of file
