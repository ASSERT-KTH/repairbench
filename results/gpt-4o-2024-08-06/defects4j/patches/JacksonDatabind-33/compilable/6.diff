diff --git a/tmp/312ad366-48da-45f5-b23c-a237ab040b27_buggy.java b/tmp/d48111dc-941b-4eab-8774-7767194304f3_fixed.java
index 3cb9232..fd2c826 100644
--- a/tmp/312ad366-48da-45f5-b23c-a237ab040b27_buggy.java
+++ b/tmp/d48111dc-941b-4eab-8774-7767194304f3_fixed.java
@@ -1,26 +1,25 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
+        }
+        if (name == null || name.isEmpty()) { // Fix: check if name is null or empty
+            JsonUnwrapped unw = _findAnnotation(a, JsonUnwrapped.class); // Check for JsonUnwrapped annotation
+            if (unw != null && unw.enabled()) {
+                return PropertyName.USE_DEFAULT; // Use default if JsonUnwrapped is present and enabled
+            }
+        }
+        /* Updated: Removed else if block where empty string was assigned. 
+         * This allows the possibility of returning null if no relevant annotation found
          */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
-                    || _hasAnnotation(a, JsonView.class)
-                    || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
-            } else {
-                return null;
     }
-        }
-        return PropertyName.construct(name);
+    return (name == null || name.isEmpty()) ? null : PropertyName.construct(name);
 }
\ No newline at end of file
