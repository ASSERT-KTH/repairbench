diff --git a/tmp/bf6b7446-77b6-414f-997c-1dd4d4484c02_buggy.java b/tmp/ac9be6ab-ec56-40da-9314-d1316a71a090_fixed.java
index 3cb9232..cdbc249 100644
--- a/tmp/bf6b7446-77b6-414f-997c-1dd4d4484c02_buggy.java
+++ b/tmp/ac9be6ab-ec56-40da-9314-d1316a71a090_fixed.java
@@ -1,26 +1,28 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
+    } else {
+        JsonUnwrapped unw = _findAnnotation(a, JsonUnwrapped.class);
+        if (unw != null && unw.enabled()) {
+            // For unwrapped, use an empty name to indicate it has a name but is unwrapped
+            name = "";
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
             } else if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
                     || _hasAnnotation(a, JsonRawValue.class)) {
                 name = "";
             } else {
                 return null;
             }
         }
+    }
     return PropertyName.construct(name);
 }
\ No newline at end of file
