diff --git a/tmp/f5d3a6f7-5d9d-4f12-8e8e-611f9f1dd165_buggy.java b/tmp/3b022116-bc25-4ca3-b278-6b66569b70db_fixed.java
index 3cb9232..0490566 100644
--- a/tmp/f5d3a6f7-5d9d-4f12-8e8e-611f9f1dd165_buggy.java
+++ b/tmp/3b022116-bc25-4ca3-b278-6b66569b70db_fixed.java
@@ -1,26 +1,31 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
+        }
+    }
+
+    // Check for unwrapping behavior: If JsonUnwrapped is present, ignore name resolution
+    JsonUnwrapped unwrapped = _findAnnotation(a, JsonUnwrapped.class);
+    if (unwrapped != null && unwrapped.enabled()) {
+        return PropertyName.USE_DEFAULT;
+    }
+
+    if (name == null && (_hasAnnotation(a, JsonSerialize.class)
             || _hasAnnotation(a, JsonView.class)
-                    || _hasAnnotation(a, JsonRawValue.class)) {
+            || _hasAnnotation(a, JsonRawValue.class))) {
         name = "";
-            } else {
+    } else if (name == null) {
         return null;
     }
-        }
+    
     return PropertyName.construct(name);
 }
\ No newline at end of file
