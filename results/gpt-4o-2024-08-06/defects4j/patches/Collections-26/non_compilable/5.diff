diff --git a/tmp/7333967e-18bd-464f-8a3c-7dfa0e650709_buggy.java b/tmp/2f423faf-073f-46d7-9d29-abe2f93679ec_fixed.java
index a667cbe..28c698d 100644
--- a/tmp/7333967e-18bd-464f-8a3c-7dfa0e650709_buggy.java
+++ b/tmp/2f423faf-073f-46d7-9d29-abe2f93679ec_fixed.java
@@ -1,10 +1,28 @@
 /**
  * Recalculate the hash code after deserialization. The hash code of some
-     * keys might have change (hash codes based on the system hash code are
+ * keys might have changed (hash codes based on the system hash code are
  * only stable for the same process).
  * @return the instance with recalculated hash code
  */
 private Object readResolve() {
     calculateHashCode(keys);
+    this.hashCode = calculateHashCode(keys);
     return this;
 }
+
+/**
+ * Utility method to calculate hash code based on keys.
+ * Assuming calculateHashCode(Object[] keys) returns the hash code calculated
+ * from the keys array.
+ */
+private int calculateHashCode(Object[] keys) {
+    // Example implementation to compute the hash code (placeholder, assuming 
+    // the real implementation exists but wasn't provided in the buggy code)
+    int hash = 0;
+    if (keys != null) {
+        for (Object key : keys) {
+            hash = 31 * hash + (key == null ? 0 : key.hashCode());
+        }
+    }
+    return hash;
+}
\ No newline at end of file
