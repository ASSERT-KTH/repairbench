diff --git a/tmp/c90a973f-4bbe-45f8-a509-d6b021e737d9_buggy.java b/tmp/f976bad0-1e13-4fa0-9ab2-2960bb51da23_fixed.java
index 00914da..0d7fe31 100644
--- a/tmp/c90a973f-4bbe-45f8-a509-d6b021e737d9_buggy.java
+++ b/tmp/f976bad0-1e13-4fa0-9ab2-2960bb51da23_fixed.java
@@ -1,17 +1,25 @@
-    // does not recurse.
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
+    Node previousNode = null;
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+            if (!tn.isBlank()) {
+                if (previousNode != null && previousNode instanceof TextNode) {
+                    // Merge with the previous TextNode
+                    ((TextNode) previousNode).text(((TextNode) previousNode).getWholeText() + tn.getWholeText());
+                } else {
                     toMove.add(tn);
+                    previousNode = tn;
+                }
+            }
+        } else {
+            previousNode = node; // Reset previous node if it's not a TextNode
         }
     }
 
     for (Node node : toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        element.appendChild(node); // Append back to preserve order and structure
     }
 }
\ No newline at end of file
