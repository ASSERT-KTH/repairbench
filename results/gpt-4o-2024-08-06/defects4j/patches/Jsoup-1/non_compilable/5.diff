diff --git a/tmp/fe9ea5b9-e9d4-4123-9d5c-357f9999fc86_buggy.java b/tmp/b0406e7b-e7c9-434a-9812-33639a6b1202_fixed.java
index 00914da..26bc156 100644
--- a/tmp/fe9ea5b9-e9d4-4123-9d5c-357f9999fc86_buggy.java
+++ b/tmp/b0406e7b-e7c9-434a-9812-33639a6b1202_fixed.java
@@ -1,17 +1,20 @@
-    // does not recurse.
+// corrects the text node normalisation to maintain order.
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
-        for (Node node: element.childNodes) {
+    ListIterator<Node> iterator = element.childNodes.listIterator();
+    while (iterator.hasNext()) {
+        Node node = iterator.next();
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
-                    toMove.add(tn);
+            if (!tn.isBlank()) {
+                iterator.remove(); // Remove from current position
+                toMove.add(tn); // Add to list to move to new position
+            }
         }
     }
     
+    // Insert the text nodes back to the start of the body in the correct order
     for (Node node: toMove) {
-            element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        body().insertChildren(0, node); // Insert at the start of the body
     }
 }
\ No newline at end of file
