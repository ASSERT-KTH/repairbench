diff --git a/tmp/16ed484d-e36f-4658-b788-804f35436a97_buggy.java b/tmp/9f29ea71-e80a-4517-8045-97f5d487f849_fixed.java
index 00914da..343594d 100644
--- a/tmp/16ed484d-e36f-4658-b788-804f35436a97_buggy.java
+++ b/tmp/9f29ea71-e80a-4517-8045-97f5d487f849_fixed.java
@@ -1,17 +1,30 @@
-    // does not recurse.
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
-        for (Node node: element.childNodes) {
+    ListIterator<Node> iterator = element.childNodes.listIterator();
+    TextNode lastTextNode = null;
+    
+    while (iterator.hasNext()) {
+        Node node = iterator.next();
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
-                    toMove.add(tn);
+            if (tn.isBlank()) {
+                iterator.remove();
+            } else {
+                if (lastTextNode != null) {
+                    lastTextNode.text(lastTextNode.text() + tn.text());
+                    iterator.remove();
+                } else {
+                    lastTextNode = tn;
+                }
+            }
+        } else {
+            lastTextNode = null;
+            toMove.add(node);
+            iterator.remove();
         }
     }
     
     for (Node node: toMove) {
-            element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        element.appendChild(node);
     }
 }
\ No newline at end of file
