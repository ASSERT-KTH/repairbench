diff --git a/tmp/2dfd277e-9a10-415d-b3aa-3a96c7826fa2_buggy.java b/tmp/d8d5bc32-ae82-47b5-8b6d-a8b31f8d9a1a_fixed.java
index 00914da..0e0e610 100644
--- a/tmp/2dfd277e-9a10-415d-b3aa-3a96c7826fa2_buggy.java
+++ b/tmp/d8d5bc32-ae82-47b5-8b6d-a8b31f8d9a1a_fixed.java
@@ -1,17 +1,19 @@
-    // does not recurse.
+// correctly normalises by prepending text nodes to the body
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
         }
     }
 
     for (Node node : toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        // appending space before the node, if necessary
+        Node refNode = body().childNodes().isEmpty() ? null : body().childNodes().get(0);
+        body().insertChildren(refNode != null ? 0 : 1, new TextNode(" ", ""));
+        body().insertChildren(refNode != null ? 1 : 0, node);
     }
 }
\ No newline at end of file
