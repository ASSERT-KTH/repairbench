diff --git a/tmp/e3e213f3-6b77-463e-a578-87368f5f33d7_buggy.java b/tmp/21eecfe1-72bf-4695-8327-d42c17896478_fixed.java
index e69de29..d339166 100644
--- a/tmp/e3e213f3-6b77-463e-a578-87368f5f33d7_buggy.java
+++ b/tmp/21eecfe1-72bf-4695-8327-d42c17896478_fixed.java
@@ -0,0 +1,30 @@
+// Example of fixing the caching mechanism and superclass reference resolution
+public class TypeFactory {
+
+    private final Map<Class<?>, JavaType> _typeCache = new ConcurrentHashMap<>();
+
+    public JavaType constructType(Class<?> clazz) {
+        // Check cache first
+        JavaType type = _typeCache.get(clazz);
+        if (type == null) {
+            // Construct with identified superclass handling
+            type = _constructType(clazz, null);
+            _typeCache.put(clazz, type);
+        }
+        return type;
+    }
+
+    private JavaType _constructType(Class<?> clazz, ObjectMapper mapper) {
+        // Construct type considering superclass for recursive types
+        if (clazz.getSuperclass() != null) {
+            JavaType superClass = constructType(clazz.getSuperclass());
+
+            if (superClass != null && superClass.isReferenceType()) {
+                superClass = new ResolvedRecursiveType(clazz, superClass);
+            }
+
+            return new SimpleType(clazz, superClass);
+        }
+        return new SimpleType(clazz);
+    }
+}
\ No newline at end of file
