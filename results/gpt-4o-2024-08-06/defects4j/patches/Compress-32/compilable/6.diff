diff --git a/tmp/bc42eeb0-3f30-4ddc-b893-51fbf6500a16_buggy.java b/tmp/bb863809-d4c5-4988-a159-8b159fd6c8c3_fixed.java
index 711e87d..2431909 100644
--- a/tmp/bc42eeb0-3f30-4ddc-b893-51fbf6500a16_buggy.java
+++ b/tmp/bb863809-d4c5-4988-a159-8b159fd6c8c3_fixed.java
@@ -1,38 +1,32 @@
     private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
-        /*
-         * The following headers are defined for Pax.
-         * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
-         * mtime
-         * comment
-         * gid, gname
-         * linkpath
-         * size
-         * uid,uname
-         * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
-         */
         for (Entry<String, String> ent : headers.entrySet()){
             String key = ent.getKey();
             String val = ent.getValue();
+            try {
                 if ("path".equals(key)){
                     currEntry.setName(val);
                 } else if ("linkpath".equals(key)){
                     currEntry.setLinkName(val);
                 } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
+                    currEntry.setGroupId(Long.parseLong(val));  // Change to Long.parseLong to support larger values
                 } else if ("gname".equals(key)){
                     currEntry.setGroupName(val);
                 } else if ("uid".equals(key)){
-                currEntry.setUserId(Integer.parseInt(val));
+                    currEntry.setUserId(Long.parseLong(val));  // Change to Long.parseLong to support larger values
                 } else if ("uname".equals(key)){
                     currEntry.setUserName(val);
                 } else if ("size".equals(key)){
                     currEntry.setSize(Long.parseLong(val));
                 } else if ("mtime".equals(key)){
                     currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
                 } else if ("SCHILY.devminor".equals(key)){
                     currEntry.setDevMinor(Integer.parseInt(val));
                 } else if ("SCHILY.devmajor".equals(key)){
                     currEntry.setDevMajor(Integer.parseInt(val));
                 }
+            } catch (NumberFormatException e) {
+                // Handle the case where the string cannot be parsed into a number
+                throw new IllegalArgumentException("Invalid numeric value for " + key + ": " + val, e);
+            }
         }
     }
\ No newline at end of file
