diff --git a/tmp/7646d624-f3f1-4cf8-9069-584266208669_buggy.java b/tmp/55631ba8-17d4-4d91-8b6e-239f95480c50_fixed.java
index 5f96616..ba581e6 100644
--- a/tmp/7646d624-f3f1-4cf8-9069-584266208669_buggy.java
+++ b/tmp/55631ba8-17d4-4d91-8b6e-239f95480c50_fixed.java
@@ -1,20 +1,19 @@
 @Override
 public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
         return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
         matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint.isUnionType()) {
+        // Handle the case where the constraint is a union type.
+        for (JSType alternate : constraint.toMaybeUnionType().getAlternates()) {
+            if (alternate.isRecordType()) {
+                matchRecordTypeConstraint(alternate.toObjectType());
+            }
+        }
     }
 }
\ No newline at end of file
