diff --git a/tmp/3dba39e9-0027-49f1-909d-2229206aaa31_buggy.java b/tmp/d1c029f5-c401-40c9-88cd-c8e162ed078d_fixed.java
index 5f96616..8368339 100644
--- a/tmp/3dba39e9-0027-49f1-909d-2229206aaa31_buggy.java
+++ b/tmp/d1c029f5-c401-40c9-88cd-c8e162ed078d_fixed.java
@@ -1,20 +1,32 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
+  // taking each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    ObjectType thisObjectType = getObjectType();
+    ObjectType constraintObjectType = constraint.toObjectType();
+    
+    // Iterate over the properties in the record type and
+    // match them to the properties in the current object type.
+    for (String prop : constraintObjectType.getOwnPropertyNames()) {
+      JSType propType = constraintObjectType.getPropertyType(prop);
+      if (!thisObjectType.hasOwnProperty(prop)) {
+        thisObjectType.defineDeclaredProperty(prop, propType, null);
+      } else {
+        thisObjectType.matchProperty(prop, propType);
+      }
+    }
   }
 }
\ No newline at end of file
