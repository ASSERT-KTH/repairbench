diff --git a/tmp/8fffe071-5eb5-489e-bb16-801869a772f9_buggy.java b/tmp/025b9ba2-383a-4824-8802-c79323a8ef17_fixed.java
index 5f96616..6a94349 100644
--- a/tmp/8fffe071-5eb5-489e-bb16-801869a772f9_buggy.java
+++ b/tmp/025b9ba2-383a-4824-8802-c79323a8ef17_fixed.java
@@ -1,20 +1,24 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
+  // taking each property on the record and trying to match properties on this object.
   if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    ObjectType recordType = constraint.toObjectType();
+    for (String property : recordType.getOwnPropertyNames()) {
+      if (!hasOwnProperty(property)) {
+        defineInferredProperty(property, recordType.getPropertyType(property));
+      }
+    }
   }
 }
\ No newline at end of file
