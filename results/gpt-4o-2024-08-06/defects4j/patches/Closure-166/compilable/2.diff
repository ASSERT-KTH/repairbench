diff --git a/tmp/15b5307f-97b9-4e01-914a-90674e062186_buggy.java b/tmp/85c35680-f705-439a-b05a-369cbeaec8d3_fixed.java
index 5f96616..0c1bac7 100644
--- a/tmp/15b5307f-97b9-4e01-914a-90674e062186_buggy.java
+++ b/tmp/85c35680-f705-439a-b05a-369cbeaec8d3_fixed.java
@@ -1,20 +1,25 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
+    // taking any property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      ObjectType constraintObjType = constraint.toObjectType();
+      for (String propName : constraintObjType.getPropertyNames()) {
+        if (!hasOwnProperty(propName)) {
+          defineInferredProperty(propName, constraintObjType.getPropertyType(propName), null);
+        }
+      }
     }
   }
\ No newline at end of file
