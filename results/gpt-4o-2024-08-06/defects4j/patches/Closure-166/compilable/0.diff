diff --git a/tmp/a6fa21b4-725c-4c60-9ec9-ff92562f79fd_buggy.java b/tmp/cd972b54-0b00-4778-b63a-76c7669efc06_fixed.java
index 5f96616..409e407 100644
--- a/tmp/a6fa21b4-725c-4c60-9ec9-ff92562f79fd_buggy.java
+++ b/tmp/cd972b54-0b00-4778-b63a-76c7669efc06_fixed.java
@@ -1,20 +1,25 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    ObjectType constraintObjType = constraint.toObjectType();
+    for (String prop : constraintObjType.getOwnPropertyNames()) {
+      if (!this.hasProperty(prop)) {
+        this.defineInferredProperty(prop, constraintObjType.getPropertyType(prop), null);
+      }
+    }
   }
 }
\ No newline at end of file
