diff --git a/tmp/bb9d485e-c4ba-42bd-9fe1-f17ffb1a8098_buggy.java b/tmp/efb1c484-ee61-46e9-969c-19dc39a6e1c0_fixed.java
index e69de29..6743aa1 100644
--- a/tmp/bb9d485e-c4ba-42bd-9fe1-f17ffb1a8098_buggy.java
+++ b/tmp/efb1c484-ee61-46e9-969c-19dc39a6e1c0_fixed.java
@@ -0,0 +1,42 @@
+import com.fasterxml.jackson.annotation.JsonProperty;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.type.TypeFactory;
+
+class Base {
+    @JsonProperty("base")
+    private int base = 1;
+
+    public int getBase() {
+        return base;
+    }
+
+    public void setBase(int base) {
+        this.base = base;
+    }
+}
+
+class Sub extends Base {
+    @JsonProperty("sub")
+    private int sub = 2;
+
+    public int getSub() {
+        return sub;
+    }
+
+    public void setSub(int sub) {
+        this.sub = sub;
+    }
+}
+
+public class Test {
+    public static void main(String[] args) throws IOException {
+        TypeFactory tf = TypeFactory.defaultInstance();
+        tf.constructType(Base.class);
+        tf.constructType(Sub.class);
+
+        Sub sub = new Sub();
+        ObjectMapper objectMapper = new ObjectMapper();
+        String serialized = objectMapper.writeValueAsString(sub);
+        System.out.println(serialized); // Should output: {"base":1,"sub":2}
+    }
+}
\ No newline at end of file
