diff --git a/tmp/c7974340-e44c-469f-b0a9-36301f5b4785_buggy.java b/tmp/94314d49-ef06-46b2-adb8-0b3d8f9e04f4_fixed.java
index 875b31b..328a1b3 100644
--- a/tmp/c7974340-e44c-469f-b0a9-36301f5b4785_buggy.java
+++ b/tmp/94314d49-ef06-46b2-adb8-0b3d8f9e04f4_fixed.java
@@ -1,54 +1,34 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
+        int start = 0;
+        int pos = findWrapPos(text, width, start);
 
-        if (pos == -1)
+        while (pos != -1)
         {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(rtrim(text.substring(start, pos))).append(defaultNewLine);
             
             if (nextLineTabStop >= width)
             {
                 // stops infinite loop happening
                 nextLineTabStop = width - 1;
             }
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
+            start = pos;
+            text = text.substring(start).trim();
 
-        while (true)
+            // all following lines must be padded with nextLineTabStop space characters
+            if (text.length() > 0)
             {
-            text = padding + text.substring(pos).trim();
+                sb.append(createPadding(nextLineTabStop));
+            }
+
             pos = findWrapPos(text, width, 0);
             
-            if (pos == -1)
-            {
+            if (pos == -1 && text.length() > 0) {
                 sb.append(text);
+            }
+        }
 
         return sb;
     }
\ No newline at end of file
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
