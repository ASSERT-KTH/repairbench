diff --git a/tmp/be5eb02b-59a0-4548-815b-a7676b05cbe8_buggy.java b/tmp/46b66eb7-6d66-4533-8d1b-33bcfa44b056_fixed.java
index be2af16..d30dcbb 100644
--- a/tmp/be5eb02b-59a0-4548-815b-a7676b05cbe8_buggy.java
+++ b/tmp/46b66eb7-6d66-4533-8d1b-33bcfa44b056_fixed.java
@@ -1,29 +1,42 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Determine if the year is leap in Julian or Gregorian
+    boolean isJulianLeapYear = iJulianChronology.isLeapYear(year);
+    boolean isGregorianLeapYear = iGregorianChronology.isLeapYear(year);
+    
+    // Use the chronology that can support the specified date
+    if (isJulianLeapYear && !isGregorianLeapYear && monthOfYear == 2 && dayOfMonth == 29) {
+        long instant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant < iCutoverMillis) {
+            return instant;
+        }
+    }
+
+    // Assume date is Gregorian if no specific leap-year handling required.
+    long instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
