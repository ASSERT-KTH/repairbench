diff --git a/tmp/dd86792f-a194-456a-bbb6-32e879d2eda8_buggy.java b/tmp/f24d9263-e60a-4fd7-b6d0-78270315fe41_fixed.java
index be2af16..d3972ca 100644
--- a/tmp/dd86792f-a194-456a-bbb6-32e879d2eda8_buggy.java
+++ b/tmp/f24d9263-e60a-4fd7-b6d0-78270315fe41_fixed.java
@@ -1,29 +1,42 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
         long instant;
+        
+        // Check if date is before cutover year
+        if (year < iCutoverYear) {
+            // Use Julian chronology
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } else if (year > iCutoverYear) {
+            // Use Gregorian chronology
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        } else {
+            // At cutover year, need to check month and day
+            if (monthOfYear < iCutoverMonth || (monthOfYear == iCutoverMonth && dayOfMonth < iCutoverDay)) {
+                // Date is before cutover, use Julian
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
-                throw new IllegalArgumentException("Specified date does not exist");
+            } else {
+                // Date is at or after cutover, use Gregorian
+                instant = iGregorianChronology.getDateTimeMillis
+                    (year, monthOfYear, dayOfMonth,
+                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             }
         }
+
         return instant;
     }
\ No newline at end of file
