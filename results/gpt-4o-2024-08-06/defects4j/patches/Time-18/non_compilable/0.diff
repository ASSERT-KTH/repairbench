diff --git a/tmp/f2f08486-8c3d-409d-b99e-b5d6f6c5f313_buggy.java b/tmp/90a4354f-af5a-4aca-804f-371ed9498682_fixed.java
index be2af16..2163561 100644
--- a/tmp/f2f08486-8c3d-409d-b99e-b5d6f6c5f313_buggy.java
+++ b/tmp/90a4354f-af5a-4aca-804f-371ed9498682_fixed.java
@@ -1,29 +1,40 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
+        // First try Julian calendar since 1500 is a leap year in Julian.
         long instant;
+        if (year < iGregorianChronology.yearOfCentury().getMinimumValueForSet()) {
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant >= iCutoverMillis) {
+                // Must check whether it has crossed the cutover threshold.
+                throw new IllegalArgumentException("Specified date does not exist in Gregorian calendar");
+            }
+        } else {
+            // Assume date is Gregorian.
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant < iCutoverMillis) {
                 // Maybe it's Julian.
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                 if (instant >= iCutoverMillis) {
                     // Okay, it's in the illegal cutover gap.
                     throw new IllegalArgumentException("Specified date does not exist");
                 }
             }
+        }
         return instant;
     }
\ No newline at end of file
