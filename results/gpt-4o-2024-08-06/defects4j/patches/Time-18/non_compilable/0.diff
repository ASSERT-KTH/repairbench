diff --git a/tmp/9ee62ec8-bb4c-4a73-b538-f2055a605a7d_buggy.java b/tmp/16fef4d0-2e4c-4ded-9348-d0708c260aa1_fixed.java
index be2af16..2163561 100644
--- a/tmp/9ee62ec8-bb4c-4a73-b538-f2055a605a7d_buggy.java
+++ b/tmp/16fef4d0-2e4c-4ded-9348-d0708c260aa1_fixed.java
@@ -1,29 +1,40 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
+        // First try Julian calendar since 1500 is a leap year in Julian.
         long instant;
+        if (year < iGregorianChronology.yearOfCentury().getMinimumValueForSet()) {
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant >= iCutoverMillis) {
+                // Must check whether it has crossed the cutover threshold.
+                throw new IllegalArgumentException("Specified date does not exist in Gregorian calendar");
+            }
+        } else {
+            // Assume date is Gregorian.
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant < iCutoverMillis) {
                 // Maybe it's Julian.
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                 if (instant >= iCutoverMillis) {
                     // Okay, it's in the illegal cutover gap.
                     throw new IllegalArgumentException("Specified date does not exist");
                 }
             }
+        }
         return instant;
     }
\ No newline at end of file
