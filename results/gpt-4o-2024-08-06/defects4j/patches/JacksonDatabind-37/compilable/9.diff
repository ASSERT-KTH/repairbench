diff --git a/tmp/6125afb0-7b93-44c9-8309-a6b4bef99330_buggy.java b/tmp/c9f4f081-4f3b-44b2-bd86-7fd52bc014ae_fixed.java
index e5ad041..ce4ccf5 100644
--- a/tmp/6125afb0-7b93-44c9-8309-a6b4bef99330_buggy.java
+++ b/tmp/c9f4f081-4f3b-44b2-bd86-7fd52bc014ae_fixed.java
@@ -1,19 +1,21 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+    // Ensure that subclass is actually a subclass of _class
     if (!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    // Use similar bindings or resolve new ones if necessary
+    TypeBindings newBindings = _bindings;
+    if (newBindings == null || newBindings.isEmpty()) {
+        newBindings = TypeBindings.emptyBindings();
+    }
+
+    // Create a new SimpleType with resolved subclass
+    return new SimpleType(subclass, newBindings, _superClass, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
