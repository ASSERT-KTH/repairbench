diff --git a/tmp/50901570-abd0-4314-a9a5-15d780d8050c_buggy.java b/tmp/953cd821-d402-45b7-870e-690162f0fbf6_fixed.java
index eea9e73..1fda1a8 100644
--- a/tmp/50901570-abd0-4314-a9a5-15d780d8050c_buggy.java
+++ b/tmp/953cd821-d402-45b7-870e-690162f0fbf6_fixed.java
@@ -1,41 +1,21 @@
-    /**
-     * <p>Checks if the CharSequence contains any character in the given
-     * set of characters.</p>
-     *
-     * <p>A <code>null</code> CharSequence will return <code>false</code>.
-     * A <code>null</code> or zero length search array will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.containsAny(null, *)                = false
-     * StringUtils.containsAny("", *)                  = false
-     * StringUtils.containsAny(*, null)                = false
-     * StringUtils.containsAny(*, [])                  = false
-     * StringUtils.containsAny("zzabyycdxx",['z','a']) = true
-     * StringUtils.containsAny("zzabyycdxx",['b','y']) = true
-     * StringUtils.containsAny("aba", ['z'])           = false
-     * </pre>
-     *
-     * @param cs  the CharSequence to check, may be null
-     * @param searchChars  the chars to search for, may be null
-     * @return the <code>true</code> if any of the chars are found,
-     * <code>false</code> if no match or null input
-     * @since 2.4
-     */
 public static boolean containsAny(CharSequence cs, char[] searchChars) {
     if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
         return false;
     }
     int csLength = cs.length();
     int searchLength = searchChars.length;
-		for (int i = 0; i < csLength; i++) {
-			char ch = cs.charAt(i);
+    int csCodePointCount = cs.toString().codePointCount(0, csLength);
+
+    for (int i = 0; i < csCodePointCount; i++) {
+        int ch = Character.codePointAt(cs, i);
         for (int j = 0; j < searchLength; j++) {
             if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
                 return true;
             }
         }
+        if (Character.isSupplementaryCodePoint(ch)) {
+            i++; // increment the index to skip the low surrogate character of the supplementary character
+        }
     }
     return false;
 }
\ No newline at end of file
