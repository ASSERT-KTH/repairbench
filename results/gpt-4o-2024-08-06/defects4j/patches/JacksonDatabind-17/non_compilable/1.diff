diff --git a/tmp/0b829f81-f54d-4497-b5ed-d4f26385e539_buggy.java b/tmp/c0c644e8-06f8-4f1d-bf59-7a2cfc335a3f_fixed.java
index 01967cc..bde1e6e 100644
--- a/tmp/0b829f81-f54d-4497-b5ed-d4f26385e539_buggy.java
+++ b/tmp/c0c644e8-06f8-4f1d-bf59-7a2cfc335a3f_fixed.java
@@ -1,35 +1,26 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // fall through
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
+        // Corrected the condition: needs to include "isJavaLangObject" check
+        return (t.isJavaLangObject() || t.getRawClass() == Object.class)
                 || (!t.isConcrete()
                     // [databind#88] Should not apply to JSON tree models:
                     || TreeNode.class.isAssignableFrom(t.getRawClass()));
 
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // [Issue#88] Should not apply to JSON tree models:
         return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
     default:
     //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
+        return t.isJavaLangObject() || t.getRawClass() == Object.class;
     }
 }
\ No newline at end of file
