diff --git a/tmp/f0a46aa9-1f9f-4b16-9767-7712ff469207_buggy.java b/tmp/6c237180-f65f-4a26-9552-0bcc0c2f432f_fixed.java
index 01967cc..6fe93ef 100644
--- a/tmp/f0a46aa9-1f9f-4b16-9767-7712ff469207_buggy.java
+++ b/tmp/6c237180-f65f-4a26-9552-0bcc0c2f432f_fixed.java
@@ -1,35 +1,29 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // fall through
+        if (t.getRawClass() == Object.class) {
+            return true;
+        }
+        // fall through to case OBJECT_AND_NON_CONCRETE
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
+        if (t.getRawClass() == Object.class) {
+            return true;
+        }
+        return (!t.isConcrete()
                 // [databind#88] Should not apply to JSON tree models:
                 || TreeNode.class.isAssignableFrom(t.getRawClass()));
 
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // [Issue#88] Should not apply to JSON tree models:
         return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
     default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
         return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file
