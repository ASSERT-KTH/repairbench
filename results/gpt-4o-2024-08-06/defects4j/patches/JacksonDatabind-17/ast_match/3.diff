diff --git a/tmp/e9f83df9-65ea-4c64-8a23-6c583df31c08_buggy.java b/tmp/414cac37-bf31-420b-9047-1f4c1b99a5d0_fixed.java
index 01967cc..281eab9 100644
--- a/tmp/e9f83df9-65ea-4c64-8a23-6c583df31c08_buggy.java
+++ b/tmp/414cac37-bf31-420b-9047-1f4c1b99a5d0_fixed.java
@@ -1,35 +1,21 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
         case NON_CONCRETE_AND_ARRAYS:
             while (t.isArrayType()) {
                 t = t.getContentType();
             }
             // fall through
         case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
             return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                    || (!t.isConcrete() && !TreeNode.class.isAssignableFrom(t.getRawClass()));
 
         case NON_FINAL:
             while (t.isArrayType()) {
                 t = t.getContentType();
             }
-                // [Issue#88] Should not apply to JSON tree models:
             return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
         default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
             return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file
