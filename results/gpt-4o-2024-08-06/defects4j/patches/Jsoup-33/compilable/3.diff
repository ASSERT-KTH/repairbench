diff --git a/tmp/55ff3b40-4695-4084-88fe-fc78e1cc3c99_buggy.java b/tmp/19e9c951-46c7-4e7d-8368-22362fc0aa43_fixed.java
index dc93be3..8f6ae74 100644
--- a/tmp/55ff3b40-4695-4084-88fe-fc78e1cc3c99_buggy.java
+++ b/tmp/19e9c951-46c7-4e7d-8368-22362fc0aa43_fixed.java
@@ -1,14 +1,14 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        insert(el); // Changed from insertEmpty to insert to properly handle self-closing tags
+        tokeniser.emit(new Token.EndTag(el.tagName()));  // This emits a matching end tag for the self-closing tag
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
