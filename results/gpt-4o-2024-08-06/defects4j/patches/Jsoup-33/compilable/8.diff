diff --git a/tmp/2a33e5b1-69ed-437b-8e67-0b57154fdcf2_buggy.java b/tmp/1cfea73e-0170-4b7f-97b5-a8131ca70bed_fixed.java
index dc93be3..f7830df 100644
--- a/tmp/2a33e5b1-69ed-437b-8e67-0b57154fdcf2_buggy.java
+++ b/tmp/1cfea73e-0170-4b7f-97b5-a8131ca70bed_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        if (startTag.isSelfClosing() && !Tag.isKnownTag(startTag.name())) { // check if the tag is an unknown tag
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
