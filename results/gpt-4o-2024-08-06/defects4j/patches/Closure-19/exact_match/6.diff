diff --git a/tmp/9e5c7753-220e-4351-8b65-0951a252e0aa_buggy.java b/tmp/2d6381e4-7de1-4b99-95d9-74bc3a7b60f0_fixed.java
index fa42cd9..32db4b1 100644
--- a/tmp/9e5c7753-220e-4351-8b65-0951a252e0aa_buggy.java
+++ b/tmp/2d6381e4-7de1-4b99-95d9-74bc3a7b60f0_fixed.java
@@ -1,27 +1,24 @@
-  /**
-   * Declares a refined type in {@code scope} for the name represented by
-   * {@code node}. It must be possible to refine the type of the given node in
-   * the given scope, as determined by {@link #getTypeIfRefinable}.
-   */
 protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
 
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
 
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
 
-        // "this" references aren't currently modeled in the CFG.
+      case Token.THIS:
+        // Do nothing for "this" references, as they aren't currently modeled in the CFG.
+        break;
 
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
 }
\ No newline at end of file
