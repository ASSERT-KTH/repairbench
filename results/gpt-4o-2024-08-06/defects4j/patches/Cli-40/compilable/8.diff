diff --git a/tmp/e5d10c7c-8ed4-43c9-8521-146ff7c3fc78_buggy.java b/tmp/41f46f0e-a7b0-4dc1-8e42-dbc43453d8d2_fixed.java
index a7d0787..84d8b21 100644
--- a/tmp/e5d10c7c-8ed4-43c9-8521-146ff7c3fc78_buggy.java
+++ b/tmp/41f46f0e-a7b0-4dc1-8e42-dbc43453d8d2_fixed.java
@@ -1,54 +1,31 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
+    @SuppressWarnings("unchecked")
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+        try {
+            if (PatternOptionBuilder.STRING_VALUE == clazz) {
                 return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
                 return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
                 return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.DATE_VALUE == clazz) {
                 return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
                 return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.FILE_VALUE == clazz) {
                 return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
                 return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.FILES_VALUE == clazz) {
                 return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+            } else if (PatternOptionBuilder.URL_VALUE == clazz) {
                 return (T) createURL(str);
+            } else if (Number.class.isAssignableFrom(clazz)) {
+                return (T) createNumber(str);
+            } else {
+                throw new ParseException("Unsupported class: " + clazz);
             }
-        else
-        {
-            return null;
+        } catch (Exception e) {
+            throw new ParseException("Value creation failed for class: " + clazz + " with value: " + str);
         }
     }
\ No newline at end of file
