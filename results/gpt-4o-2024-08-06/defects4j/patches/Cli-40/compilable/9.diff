diff --git a/tmp/b9445d82-22e7-4355-becc-365ceef2aad3_buggy.java b/tmp/beeae4d7-d690-40b3-a836-8b3a3d16a478_fixed.java
index a7d0787..5179807 100644
--- a/tmp/b9445d82-22e7-4355-becc-365ceef2aad3_buggy.java
+++ b/tmp/beeae4d7-d690-40b3-a836-8b3a3d16a478_fixed.java
@@ -1,54 +1,56 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
+        try {
             if (PatternOptionBuilder.STRING_VALUE == clazz)
             {
                 return (T) str;
             }
             else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
             {
                 return (T) createObject(str);
             }
             else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
             {
                 return (T) createNumber(str);
             }
             else if (PatternOptionBuilder.DATE_VALUE == clazz)
             {
                 return (T) createDate(str);
             }
             else if (PatternOptionBuilder.CLASS_VALUE == clazz)
             {
                 return (T) createClass(str);
             }
             else if (PatternOptionBuilder.FILE_VALUE == clazz)
             {
                 return (T) createFile(str);
             }
             else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
             {
                 return (T) openFile(str);
             }
             else if (PatternOptionBuilder.FILES_VALUE == clazz)
             {
                 return (T) createFiles(str);
             }
             else if (PatternOptionBuilder.URL_VALUE == clazz)
             {
                 return (T) createURL(str);
             }
+            else if (Integer.class == clazz)
+            {
+                return (T) Integer.valueOf(str);
+            }
+            else if (Double.class == clazz)
+            {
+                return (T) Double.valueOf(str);
+            }
             else
             {
-            return null;
+                throw new ParseException("Unsupported value type: " + clazz);
+            }
+        } catch (Exception e) {
+            throw new ParseException("Could not create value of type " + clazz.getName() + " from string: " + str);
         }
     }
\ No newline at end of file
