diff --git a/tmp/e09311aa-5bc1-4dec-9923-9de52ec71941_buggy.java b/tmp/bcd4abf6-86a8-4add-8621-8c5071e727cb_fixed.java
index a7d0787..343fb9b 100644
--- a/tmp/e09311aa-5bc1-4dec-9923-9de52ec71941_buggy.java
+++ b/tmp/bcd4abf6-86a8-4add-8621-8c5071e727cb_fixed.java
@@ -1,54 +1,48 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
         if (PatternOptionBuilder.STRING_VALUE == clazz)
         {
             return (T) str;
         }
         else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
         {
             return (T) createObject(str);
         }
         else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
         {
+            try {
                 return (T) createNumber(str);
+            } catch (NumberFormatException e) {
+                throw new ParseException("Unable to parse number: " + str);
+            }
         }
         else if (PatternOptionBuilder.DATE_VALUE == clazz)
         {
             return (T) createDate(str);
         }
         else if (PatternOptionBuilder.CLASS_VALUE == clazz)
         {
             return (T) createClass(str);
         }
         else if (PatternOptionBuilder.FILE_VALUE == clazz)
         {
             return (T) createFile(str);
         }
         else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
         {
             return (T) openFile(str);
         }
         else if (PatternOptionBuilder.FILES_VALUE == clazz)
         {
             return (T) createFiles(str);
         }
         else if (PatternOptionBuilder.URL_VALUE == clazz)
         {
             return (T) createURL(str);
         }
         else
         {
-            return null;
+            throw new ParseException("Unsupported class type: " + clazz);
         }
     }
\ No newline at end of file
