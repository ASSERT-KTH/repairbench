diff --git a/tmp/77785c6b-9aa3-438e-b419-8675471fce0e_buggy.java b/tmp/b8ffd97f-16b1-4c25-b026-77771b5dab89_fixed.java
index 5f1dcf2..632c331 100644
--- a/tmp/77785c6b-9aa3-438e-b419-8675471fce0e_buggy.java
+++ b/tmp/b8ffd97f-16b1-4c25-b026-77771b5dab89_fixed.java
@@ -1,41 +1,47 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+        boolean continueIteration = true;
+
+        while (continueIteration) {
 
             incrementIterationsCounter();
 
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
 
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
 
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
 
                 return;
 
             }
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
-
-            // check convergence
                 return;
             }
 
+            // Check convergence: If the simplest point remains unchanged, stop the iteration
+            final RealPointValuePair worst = simplex[simplex.length - 1];
+            if (comparator.compare(best, worst) == 0) {
+                continueIteration = false;
+            }
+
         }
 
     }
\ No newline at end of file
