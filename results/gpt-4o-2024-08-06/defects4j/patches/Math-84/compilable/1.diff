diff --git a/tmp/7bd5f52f-91de-4d75-8c26-ab5fcedcd62b_buggy.java b/tmp/069b46af-53d7-44fe-a3b2-6efa5e1e5dbe_fixed.java
index 5f1dcf2..ca7d449 100644
--- a/tmp/7bd5f52f-91de-4d75-8c26-ab5fcedcd62b_buggy.java
+++ b/tmp/069b46af-53d7-44fe-a3b2-6efa5e1e5dbe_fixed.java
@@ -1,41 +1,48 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+        boolean converged = false;
+
+        while (!converged) {
 
             incrementIterationsCounter();
 
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
 
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
 
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
 
                 return;
 
             }
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
-
-            // check convergence
                 return;
             }
 
+            // check for convergence
+            converged = true;
+            for (int i = 1; i < simplex.length; i++) {
+                if (comparator.compare(simplex[i], simplex[0]) != 0) {
+                    converged = false;
+                    break;
+                }
+            }
         }
-
     }
\ No newline at end of file
