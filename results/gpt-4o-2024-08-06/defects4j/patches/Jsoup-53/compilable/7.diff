diff --git a/tmp/6774f661-eca0-46f9-b82e-9d69edda1e82_buggy.java b/tmp/99aee0c2-bce0-4b45-a35f-96c201f701f7_fixed.java
index fecb896..d731974 100644
--- a/tmp/6774f661-eca0-46f9-b82e-9d69edda1e82_buggy.java
+++ b/tmp/99aee0c2-bce0-4b45-a35f-96c201f701f7_fixed.java
@@ -1,34 +1,31 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    boolean inSingleQuote = false;
+    boolean inDoubleQuote = false;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+        
+        if (!inSingleQuote && !inDoubleQuote && c == open && (last == 0 || last != ESC)) {
             depth++;
             if (start == -1)
                 start = pos;
-                }
-                else if (c.equals(close))
+        } else if (!inSingleQuote && !inDoubleQuote && c == close && (last == 0 || last != ESC)) {
             depth--;
+        } else if (c == '\'' && (last == 0 || last != ESC)) {
+            inSingleQuote = !inSingleQuote;
+        } else if (c == '"' && (last == 0 || last != ESC)) {
+            inDoubleQuote = !inDoubleQuote;
         }
 
         if (depth > 0 && last != 0) 
-                end = pos; // don't include the outer match pair in the return
+            end = pos;
+        
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
