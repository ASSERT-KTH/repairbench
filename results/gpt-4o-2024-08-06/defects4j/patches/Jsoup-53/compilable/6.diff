diff --git a/tmp/5523f5c0-7fa4-4d94-b2e2-5e40128cd2d4_buggy.java b/tmp/2753015d-13bc-4e3f-ae77-353f2c93dd87_fixed.java
index fecb896..0bac5ed 100644
--- a/tmp/5523f5c0-7fa4-4d94-b2e2-5e40128cd2d4_buggy.java
+++ b/tmp/2753015d-13bc-4e3f-ae77-353f2c93dd87_fixed.java
@@ -1,34 +1,32 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    boolean inQuote = false;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+        
+        if (!inQuote && (c.equals('\'') || c.equals('"'))) {
+            inQuote = !inQuote;
+        }
+        
+        if (last != ESC || inQuote) {
+            if (!inQuote && c.equals(open)) {
                 depth++;
                 if (start == -1)
-                        start = pos;
-                }
-                else if (c.equals(close))
+                    start = pos - 1;
+            } else if (!inQuote && c.equals(close)) {
                 depth--;
             }
+        }
 
-            if (depth > 0 && last != 0)
+        if (depth > 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
-        } while (depth > 0);
-        return (end >= 0) ? queue.substring(start, end) : "";
+    } while (depth > 0 || inQuote); // Continue if within quotes
+
+    return (end >= 0) ? queue.substring(start + 1, end) : ""; // adjust start
 }
\ No newline at end of file
