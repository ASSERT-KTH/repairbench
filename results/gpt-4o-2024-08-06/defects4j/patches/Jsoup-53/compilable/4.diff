diff --git a/tmp/2a6a2c58-42a0-453f-8310-1de93633c08d_buggy.java b/tmp/1788a963-949f-431a-8b26-fbbd14fabdf9_fixed.java
index fecb896..a3080e7 100644
--- a/tmp/2a6a2c58-42a0-453f-8310-1de93633c08d_buggy.java
+++ b/tmp/1788a963-949f-431a-8b26-fbbd14fabdf9_fixed.java
@@ -1,34 +1,29 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    StringBuilder sb = new StringBuilder();
 
-        do {
-            if (isEmpty()) break;
+    while (!isEmpty()) {
         Character c = consume();
-            if (last == 0 || last != ESC) {
+        sb.append(c);
+
+        if (last != ESC && (last != '\'' && last != '\"')) {
             if (c.equals(open)) {
                 depth++;
                 if (start == -1) 
-                        start = pos;
-                }
-                else if (c.equals(close))
+                    start = pos - 1; // adjust, as pos is incremented after consume
+            } else if (c.equals(close)) {
                 depth--;
             }
+        }
+
+        if (depth == 0 && start != -1) {
+            return sb.substring(0, sb.length() - 1); // return, excluding the outer closing bracket
+        }
 
-            if (depth > 0 && last != 0)
-                end = pos; // don't include the outer match pair in the return
         last = c;
-        } while (depth > 0);
-        return (end >= 0) ? queue.substring(start, end) : "";
+    }
+    return ""; // return empty if no balanced string was found
 }
\ No newline at end of file
