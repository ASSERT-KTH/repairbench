diff --git a/tmp/c0a051a5-4c6a-440e-9a2c-9fb9431813f4_buggy.java b/tmp/2b8c2d3d-463f-408b-90bc-aaf5fae1f44b_fixed.java
index 3c69e10..3686b79 100644
--- a/tmp/c0a051a5-4c6a-440e-9a2c-9fb9431813f4_buggy.java
+++ b/tmp/2b8c2d3d-463f-408b-90bc-aaf5fae1f44b_fixed.java
@@ -1,27 +1,18 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
     private double calculateAsymptoticPValue(final double Umin,
                                              final int n1,
                                              final int n2)
         throws ConvergenceException, MaxCountExceededException {
 
         final int n1n2prod = n1 * n2;
 
         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
         final double EU = n1n2prod / 2.0;
         final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
-        final double z = (Umin - EU) / FastMath.sqrt(VarU);
+        // Apply continuity correction by adjusting Umin
+        final double z = (Umin - 0.5 - EU) / FastMath.sqrt(VarU);
 
         final NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
-        return 2 * standardNormal.cumulativeProbability(z);
+        return 2 * (1.0 - standardNormal.cumulativeProbability(Math.abs(z)));
     }
\ No newline at end of file
