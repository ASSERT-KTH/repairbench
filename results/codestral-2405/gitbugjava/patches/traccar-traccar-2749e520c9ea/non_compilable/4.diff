diff --git a/tmp/56af8ba1-7f56-407c-9f54-cc0b063ec0ac_buggy.java b/tmp/8fb28691-a646-4871-994d-d864a1ebdb82_fixed.java
index 7b9216c..b5a856e 100644
--- a/tmp/56af8ba1-7f56-407c-9f54-cc0b063ec0ac_buggy.java
+++ b/tmp/8fb28691-a646-4871-994d-d864a1ebdb82_fixed.java
@@ -1,47 +1,50 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
+
+    // Possible issue 1: battery level was not considering non-numerical values (0xAA)
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
-        } else if (battery == 0xAA) {
-            position.set(Position.KEY_CHARGE, true);
     }
 
+    position.set(Position.KEY_CHARGE, battery == 0xAA);
+
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
+    // Possible issue 2: not all products and alarms were handled correctly
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
     return position;
 }
\ No newline at end of file
