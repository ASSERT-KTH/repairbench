diff --git a/tmp/fbdcf775-0a06-4399-ac93-fc874ca785d1_buggy.java b/tmp/cd3c8d8b-5fdb-41e7-a569-febb44294d34_fixed.java
index 7b9216c..0692531 100644
--- a/tmp/fbdcf775-0a06-4399-ac93-fc874ca785d1_buggy.java
+++ b/tmp/cd3c8d8b-5fdb-41e7-a569-febb44294d34_fixed.java
@@ -1,47 +1,71 @@
+private void decodeAccData(ByteBuf buf, Processor processor) {
+    int type = buf.readUnsignedShort();
+    int length = buf.readUnsignedShort();
+
+    if (type == 0xff01) {
+        if (length == 12) {
+            // Decode acceleration data here and set it in the processor
+            // For example, you could use the following code:
+            short x = buf.readShort();
+            short y = buf.readShort();
+            short z = buf.readShort();
+            processor.set("gyro", String.format("%02x%02x%02x", x, y, z));
+        }
+    }
+}
+
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
+    // Check if additional acceleration data is available
+    if (buf.isReadable() && buf.readUnsignedShort() == 0xff01) {
+        buf.readerIndex(buf.readerIndex() - 2); // Rewind the buffer to the beginning of the acceleration data
+        decodeAccData(buf, position);
+    } else {
+        buf.readerIndex(buf.readerIndex() - 2); // Rewind the buffer if no acceleration data was available
+    }
+
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
     return position;
 }
\ No newline at end of file
