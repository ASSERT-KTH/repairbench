diff --git a/tmp/c26c6288-6f8b-41cc-a747-6f378f426bc7_buggy.java b/tmp/5d18035a-d44a-4bd1-af17-29be7f774f60_fixed.java
index 1098336..8f06468 100644
--- a/tmp/c26c6288-6f8b-41cc-a747-6f378f426bc7_buggy.java
+++ b/tmp/5d18035a-d44a-4bd1-af17-29be7f774f60_fixed.java
@@ -1,16 +1,20 @@
     @Override
     protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
         final var source = new InputSource(new StringReader(code));
         final var parser = new CSSOMParser(new SACParserCSS3());
         final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
-        var formattedCode = sheet.getCssText(this.formatter);
+        var formattedCode = sheet.toString();
 
-        // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
-        formattedCode = formattedCode.replace("\t;", "\\9;");
+        // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack.
+        formattedCode = formattedCode.replace("\t", "\\9");
 
-        if (code.equals(formattedCode)) {
+        // Ensure that the line endings match the expected format
+        String expectedEnding = ending.isSystem() ? System.lineSeparator() : "\r\n";
+        formattedCode = formattedCode.replaceAll("\\R", expectedEnding);
+
+        if (code.equals(formattedCode.strip())) {
             return null;
         }
-        return formattedCode;
+        return formattedCode.stripTrailing();
     }
\ No newline at end of file
