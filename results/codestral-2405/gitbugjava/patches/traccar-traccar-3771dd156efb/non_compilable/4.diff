diff --git a/tmp/9ffe8c1b-ce0b-471d-8b29-c89a2d6c0239_buggy.java b/tmp/13c77bf2-6478-4794-ace7-e4906ee4a6d7_fixed.java
index 3da904d..ea4dae7 100644
--- a/tmp/9ffe8c1b-ce0b-471d-8b29-c89a2d6c0239_buggy.java
+++ b/tmp/13c77bf2-6478-4794-ace7-e4906ee4a6d7_fixed.java
@@ -1,73 +1,18 @@
-    private Position decodePosition(DeviceSession deviceSession, String data) {
-
-        Parser parser = new Parser(PATTERN_POSITION, data);
-        if (!parser.matches()) {
-            return null;
-        }
-
-        Position position = new Position(getProtocolName());
-        position.setDeviceId(deviceSession.getDeviceId());
-
-        position.setTime(parser.nextDateTime(Parser.DateTimeFormat.DMY_HMS));
-
-        position.setValid(parser.next().equals("A"));
-        position.setLatitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));
-        position.setLongitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));
-        position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble(0)));
-        position.setCourse(parser.nextDouble(0));
-        position.setAltitude(parser.nextDouble(0));
-
-        position.set(Position.KEY_SATELLITES, parser.nextInt(0));
-        position.set(Position.KEY_RSSI, parser.nextInt(0));
-        position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt(0));
-
-        position.set(Position.KEY_STEPS, parser.nextInt(0));
-
-        int status = parser.nextHexInt(0);
-        position.set(Position.KEY_ALARM, decodeAlarm(status));
-        if (BitUtil.check(status, 4)) {
-            position.set(Position.KEY_MOTION, true);
-        }
-
 String[] values = parser.next().split(",");
 int index = 0;
 
-        Network network = new Network();
+// ...
 
 int cellCount = Integer.parseInt(values[index++]);
 if (cellCount > 0) {
-            index += 1; // timing advance
-            int mcc = !values[index].isEmpty() ? Integer.parseInt(values[index++]) : 0;
-            int mnc = !values[index].isEmpty() ? Integer.parseInt(values[index++]) : 0;
-
+    // ...
     for (int i = 0; i < cellCount; i++) {
-                int lac = Integer.parseInt(values[index++]);
-                int cid = Integer.parseInt(values[index++]);
+        // ...
         String rssi = values[index++];
         if (!rssi.isEmpty()) {
             network.addCellTower(CellTower.from(mcc, mnc, lac, cid, Integer.parseInt(rssi)));
         } else {
             network.addCellTower(CellTower.from(mcc, mnc, lac, cid));
         }
     }
 }
\ No newline at end of file
-
-        if (index < values.length && !values[index].isEmpty()) {
-            int wifiCount = Integer.parseInt(values[index++]);
-
-            for (int i = 0; i < wifiCount; i++) {
-                index += 1; // wifi name
-                String macAddress = values[index++];
-                String rssi = values[index++];
-                if (!macAddress.isEmpty() && !macAddress.equals("0") && !rssi.isEmpty()) {
-                    network.addWifiAccessPoint(WifiAccessPoint.from(macAddress, Integer.parseInt(rssi)));
-                }
-            }
-        }
-
-        if (network.getCellTowers() != null || network.getWifiAccessPoints() != null) {
-            position.setNetwork(network);
-        }
-
-        return position;
-    }
