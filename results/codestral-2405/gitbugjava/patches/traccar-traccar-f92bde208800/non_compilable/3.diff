diff --git a/tmp/6f2a837f-a6e3-45e6-abc9-fec239f2d416_buggy.java b/tmp/ddf42d98-01a5-48e7-b665-e217b0835116_fixed.java
index 33e2e76..7de0526 100644
--- a/tmp/6f2a837f-a6e3-45e6-abc9-fec239f2d416_buggy.java
+++ b/tmp/ddf42d98-01a5-48e7-b665-e217b0835116_fixed.java
@@ -1,126 +1,141 @@
     private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
         CellTower cellTower = new CellTower();
         String[] keys = form.substring(1).split("%");
         for (String key : keys) {
             switch (key) {
                 case "SA":
                     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                     break;
                 case "MV":
-                    position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
+                    position.set(Position.KEY_ENGINE_SPEED, buf.readUnsignedShort() * 0.1);
                     break;
                 case "BV":
                     position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
                     break;
                 case "GQ":
                     cellTower.setSignalStrength((int) buf.readUnsignedByte());
                     break;
                 case "CE":
                     cellTower.setCellId(buf.readUnsignedInt());
                     break;
                 case "LC":
                     cellTower.setLocationAreaCode(buf.readUnsignedShort());
                     break;
                 case "CN":
-                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
+                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // mcc and mnc
                     cellTower.setMobileCountryCode(combinedMobileCodes / 100);
                     cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
                     break;
                 case "RL":
-                    buf.readUnsignedByte(); // rxlev
+                    int rxlev = buf.readUnsignedByte();
+                    position.set(Position.KEY_RSSI, rxlev); // rxlev stands for received signal strength level
                     break;
                 case "PC":
                     position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
                     break;
                 case "AT":
                     position.setAltitude(buf.readUnsignedInt());
                     break;
                 case "RP":
                     position.set(Position.KEY_RPM, buf.readUnsignedShort());
                     break;
                 case "GS":
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+                    int gpsStatus = buf.readUnsignedByte();
+                    position.set(Position.KEY_GPS, gpsStatus); // gs stands for gps status
                     break;
                 case "DT":
                     position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
                     break;
                 case "VN":
                     position.set(Position.KEY_VIN, readString(buf));
                     break;
                 case "MF":
-                    buf.readUnsignedShort(); // mass air flow rate
+                    int massAirFlow = buf.readUnsignedShort(); // mass air flow rate
+                    position.set(Position.KEY_MAF, massAirFlow);
                     break;
                 case "EL":
-                    buf.readUnsignedByte(); // engine load
+                    int engineLoad = buf.readUnsignedByte(); // engine load
+                    position.set(Position.KEY_ENGINE_LOAD, engineLoad);
                     break;
                 case "TR":
                     position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                     break;
                 case "ET":
                     position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
                     break;
                 case "FL":
                     position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                     break;
                 case "ML":
-                    buf.readUnsignedByte(); // mil status
+                    int milStatus = buf.readUnsignedByte(); // mil status
+                    position.set(Position.KEY_MIL, milStatus == 1);
                     break;
                 case "FC":
                     position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
                     break;
                 case "CI":
-                    readString(buf); // format string
+                    String formatString = readString(buf);
+                    position.set(Position.KEY_FORMAT_STRING, formatString);
                     break;
                 case "AV1":
                     position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
                     break;
                 case "NC":
-                    readString(buf); // gsm neighbor cell info
+                    String gsmNeighborCellInfo = readString(buf); // gsm neighbor cell info
+                    position.set(Position.KEY_GSM_NEIGHBOR_CELL, gsmNeighborCellInfo);
                     break;
                 case "SM":
-                    buf.readUnsignedShort(); // max speed between reports
+                    int maxSpeedBetweenReports = buf.readUnsignedShort(); // max speed between reports
+                    position.set(Position.KEY_MAX_SPEED_BETWEEN_REPORTS, maxSpeedBetweenReports);
                     break;
                 case "GL":
-                    readString(buf); // google link
+                    String googleLink = readString(buf); // google link
+                    position.set(Position.KEY_GOOGLE_LINK, googleLink);
                     break;
                 case "MA":
-                    readString(buf); // mac address
+                    String macAddress = readString(buf); // mac address
+                    position.set(Position.KEY_MAC_ADDRESS, macAddress);
                     break;
                 case "PD":
-                    buf.readUnsignedByte(); // pending code status
+                    int pendingCodeStatus = buf.readUnsignedByte(); // pending code status
+                    position.set(Position.KEY_PENDING_CODE_STATUS, pendingCodeStatus);
                     break;
                 case "CD":
                     position.set(Position.KEY_ICCID, readString(buf));
                     break;
                 case "CM":
-                    buf.readLong(); // imsi
+                    long imsi = buf.readLong(); // imsi
+                    position.set(Position.KEY_IMSI, imsi);
                     break;
                 case "GN":
                     buf.skipBytes(60); // g sensor data
                     break;
                 case "GV":
                     buf.skipBytes(6); // maximum g force
                     break;
                 case "ME":
-                    buf.readLong(); // imei
+                    long imei = buf.readLong(); // imei
+                    position.set(Position.KEY_IMEI, imei);
                     break;
                 case "IA":
-                    buf.readUnsignedByte(); // intake air temperature
+                    int intakeAirTemperature = buf.readUnsignedByte(); // intake air temperature
+                    position.set(Position.KEY_INTAKE_AIR_TEMPERATURE, intakeAirTemperature);
                     break;
                 case "MP":
-                    buf.readUnsignedByte(); // manifold absolute pressure
+                    int manifoldAbsolutePressure = buf.readUnsignedByte(); // manifold absolute pressure
+                    position.set(Position.KEY_MANIFOLD_PRESSURE, manifoldAbsolutePressure);
                     break;
                 default:
                     break;
             }
         }
 
         if (cellTower.getMobileCountryCode() != null
             && cellTower.getMobileNetworkCode() != null
             && cellTower.getCellId() != null && cellTower.getCellId() != 0
             && cellTower.getLocationAreaCode() != null) {
             position.setNetwork(new Network(cellTower));
         } else if (cellTower.getSignalStrength() != null) {
             position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
         }
     }
\ No newline at end of file
