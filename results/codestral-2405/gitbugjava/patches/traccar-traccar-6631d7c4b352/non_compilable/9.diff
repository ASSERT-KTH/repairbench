diff --git a/tmp/e5c7f1e4-fb36-458d-b732-095b8e21b31f_buggy.java b/tmp/04702004-57f6-4314-a70c-1e9682127def_fixed.java
index d87dd79..1e0c9c8 100644
--- a/tmp/e5c7f1e4-fb36-458d-b732-095b8e21b31f_buggy.java
+++ b/tmp/04702004-57f6-4314-a70c-1e9682127def_fixed.java
@@ -1,47 +1,28 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
         ByteBuf frame = Unpooled.buffer();
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
-                        case 0x01:
-                            frame.writeByte('}');
-                            break;
-                        case 0x02:
-                            frame.writeByte('[');
-                            break;
-                        case 0x03:
-                            frame.writeByte(']');
-                            break;
-                        case 0x04:
-                            frame.writeByte(',');
-                            break;
-                        case 0x05:
-                            frame.writeByte('*');
-                            break;
-                        default:
-                            throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
-                    }
+                // Next bytes should be written to the frame buffer as is, not as escape sequence
+                frame.writeByte(b1);
             } else {
                 frame.writeByte(b1);
             }
         }
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
