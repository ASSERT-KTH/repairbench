diff --git a/tmp/b29ac96e-a931-447d-a788-541d2e76a4cd_buggy.java b/tmp/9b0c7a65-5214-49f8-8d20-f91494c2b377_fixed.java
index 016a7f6..90079b5 100644
--- a/tmp/b29ac96e-a931-447d-a788-541d2e76a4cd_buggy.java
+++ b/tmp/9b0c7a65-5214-49f8-8d20-f91494c2b377_fixed.java
@@ -1,29 +1,25 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
         trimTrailing = trimLikeBlock && nextSibling() == null;
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
-            boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank) return;
+        if (next != null && next instanceof Element && ((Element) next).shouldIndent(out) && isBlank()) return;
 
         Node prev = previousSibling();
-            if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+        if (prev != null && siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank())
+            indent(accum, depth, out);
+        else if (out.outline() && siblingNodes().size() > 0 && !isBlank())
+            indent(accum, depth, out);
+        else if (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br") && !isBlank())
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
