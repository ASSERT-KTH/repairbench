diff --git a/tmp/ead7934c-4513-4c99-a1f3-fc017b9a55b0_buggy.java b/tmp/27eb9b5e-5505-4d3c-8370-31749662c200_fixed.java
index 5bf31b1..e37b544 100644
--- a/tmp/ead7934c-4513-4c99-a1f3-fc017b9a55b0_buggy.java
+++ b/tmp/27eb9b5e-5505-4d3c-8370-31749662c200_fixed.java
@@ -1,17 +1,36 @@
     private String consumeSubQuery() {
         StringBuilder sq = StringUtil.borrowBuilder();
         while (!tq.isEmpty()) {
-            if (tq.matches("("))
-                sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
-            else if (tq.matches("["))
-                sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
-            else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
+            if (tq.matches("(")) {
+                sq.append("(");
+                sq.append(tq.chompBalanced('(', ')'));
+                sq.append(")");
+            } else if (tq.matches("[")) {
+                sq.append("[");
+                int balance = 1;
+                while (balance > 0) {
+                    char c = tq.consume();
+                    switch (c) {
+                        case '[':
+                            balance++;
                             break;
-                else
+                        case ']':
+                            balance--;
+                            break;
+                        default:
+                            // ignore
+                    }
+                    sq.append(c);
+                }
+            } else if (tq.matchesAny(Combinators)) {
+                if (sq.length() > 0) {
+                    break;
+                } else {
                     tq.consume();
-            else
+                }
+            } else {
                 sq.append(tq.consume());
             }
+        }
         return StringUtil.releaseBuilder(sq);
     }
\ No newline at end of file
