diff --git a/tmp/25812183-f701-4f2a-a802-47e100238a55_buggy.java b/tmp/1dfc2552-4323-436f-ad7f-6d1d6bf3a135_fixed.java
index 23f078d..5977c57 100644
--- a/tmp/25812183-f701-4f2a-a802-47e100238a55_buggy.java
+++ b/tmp/1dfc2552-4323-436f-ad7f-6d1d6bf3a135_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (c >= 128) { // out of ascii range
+            sb.append(URLEncoder.encode(Character.toString(c), UTF_8.name()));
         } else {
             sb.append((char) c);
         }
+        // if the character is supplementary, skip the next char
+        if (Character.isHighSurrogate((char) c)) {
+            i++;
+        }
     }
 }
\ No newline at end of file
