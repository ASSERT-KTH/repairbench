diff --git a/tmp/ec17ccfb-3d20-47fb-8967-0f121fe95339_buggy.java b/tmp/1787264a-6953-4834-8ae4-4269f227a5bf_fixed.java
index c9c77a4..7dfc57b 100644
--- a/tmp/ec17ccfb-3d20-47fb-8967-0f121fe95339_buggy.java
+++ b/tmp/1787264a-6953-4834-8ae4-4269f227a5bf_fixed.java
@@ -1,35 +1,34 @@
 URL build() {
     try {
-            // use the URI class to encode non-ascii in path
+        // use the URI class to encode non-ascii in host and query, while retaining encoded characters in the path.
         URI uri = new URI(
             u.getProtocol(),
             u.getUserInfo(),
             IDN.toASCII(decodePart(u.getHost())), // puny-code
             u.getPort(),
-                decodePart(u.getPath()),
+            u.getPath(),
             null, null // query and fragment appended later so as not to encode
         );
 
         String normUrl = uri.toASCIIString();
         if (q != null || u.getRef() != null) {
             StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
             if (q != null) {
                 sb.append('?');
-                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);
+                appendToAscii(StringUtil.escapeAsciiQuery(q), true, sb);
             }
             if (u.getRef() != null) {
                 sb.append('#');
                 appendToAscii(u.getRef(), false, sb);
             }
             normUrl = StringUtil.releaseBuilder(sb);
         }
         u =  new URL(normUrl);
         return u;
-        } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
-            // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
+    } catch (MalformedURLException | URISyntaxException e) {
+        // we assert here so that any incomplete normalization issues can be caught in devel. but in production,
+        // the remote end will be able to handle it, so in practice, just pass the original URL.
         assert Validate.assertFail(e.toString());
         return u;
     }
 }
\ No newline at end of file
