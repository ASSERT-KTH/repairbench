diff --git a/tmp/be128b4e-4fc4-461e-9e34-56ec59f34fe0_buggy.java b/tmp/87e9a9a6-9f69-4eee-94c9-fc42bb4de708_fixed.java
index 855afa5..b8ed4de 100644
--- a/tmp/be128b4e-4fc4-461e-9e34-56ec59f34fe0_buggy.java
+++ b/tmp/87e9a9a6-9f69-4eee-94c9-fc42bb4de708_fixed.java
@@ -1,13 +1,25 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
+        String urlS = u.toExternalForm();
+
+        // Fix: The original string replacement did not handle all possible illegal URL characters.
+        // Using URLEncoder.encode() can tackle this issue.
+
         urlS = urlS.replace(" ", "%20");
+        urlS = URLEncoder.encode(urlS, StandardCharsets.UTF_8.name())
+            .replaceAll("\\+", "%20")
+            .replace("%3A", ":")
+            .replace("%2F", "/")
+            .replace("%3F", "?")
+            .replace("%23", "#")
+            .replace("%5B", "[")
+            .replace("%5D", "]")
+            .replace("%40", "@");
+
         final URI uri = new URI(urlS);
         return new URL(uri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
