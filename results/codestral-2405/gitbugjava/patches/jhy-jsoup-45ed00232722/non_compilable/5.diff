diff --git a/tmp/bccab949-83b9-4a7d-b9d0-60fefaff480d_buggy.java b/tmp/74eec1f6-ea2b-406c-82e6-ab6ef5522240_fixed.java
index 855afa5..fc9d3c6 100644
--- a/tmp/bccab949-83b9-4a7d-b9d0-60fefaff480d_buggy.java
+++ b/tmp/74eec1f6-ea2b-406c-82e6-ab6ef5522240_fixed.java
@@ -1,13 +1,30 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
+        String protocol = u.getProtocol();
+        String authority = u.getAuthority();
+        String path = u.getPath().replace(" ", "%20"); // replace spaces in path
+        String query = u.getQuery();
+        if (query != null) {
+            query = query.replace(" ", "%20"); // replace spaces in query
+        }
+        String ref = u.getRef();
+        if (ref != null) {
+            ref = ref.replace(" ", "%20"); // replace spaces in ref
+        }
+
+        String urlS = protocol + "://" + authority + path;
+        if (query != null) {
+            urlS += "?" + query;
+        }
+        if (ref != null) {
+            urlS += "#" + ref;
+        }
+
         final URI uri = new URI(urlS);
         return new URL(uri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
