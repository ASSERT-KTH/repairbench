diff --git a/tmp/cec273b6-08ed-444a-b52c-e47409259926_buggy.java b/tmp/3a9b0281-f85b-4bd9-9842-d92be638117a_fixed.java
index 855afa5..0dbe7f0 100644
--- a/tmp/cec273b6-08ed-444a-b52c-e47409259926_buggy.java
+++ b/tmp/3a9b0281-f85b-4bd9-9842-d92be638117a_fixed.java
@@ -1,13 +1,13 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+        URL encodedUrl = new URL(u.getProtocol(), u.getHost(), u.getPort(),
+                URLEncoder.encode(u.getPath(), "UTF-8").replaceAll("\\+", "%20") // Encode path
+                + (u.getQuery() != null ? "?" + URLEncoder.encode(u.getQuery(), "UTF-8").replaceAll("\\+", "%20") : "") // Encode query if it exists
+                + (u.getRef() != null ? "#" + URLEncoder.encode(u.getRef(), "UTF-8").replaceAll("\\+", "%20") : "")); // Encode fragment if it exists
+        return encodedUrl;
+    } catch (MalformedURLException | UnsupportedEncodingException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
