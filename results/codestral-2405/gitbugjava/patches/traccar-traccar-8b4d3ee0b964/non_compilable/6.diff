diff --git a/tmp/4853d010-7e38-4936-8f6e-8213da118865_buggy.java b/tmp/03a1afbf-b2e1-42c1-88e4-938d137eb35b_fixed.java
index 27f2719..b88d0e5 100644
--- a/tmp/4853d010-7e38-4936-8f6e-8213da118865_buggy.java
+++ b/tmp/03a1afbf-b2e1-42c1-88e4-938d137eb35b_fixed.java
@@ -1,90 +1,26 @@
 @Override
-    protected Object decode(
-            Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
-
+protected Object decode(Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
     String sentence = (String) msg;
 
     if (sentence.startsWith("!1,")) {
-            int index = sentence.indexOf(',', 3);
+        int index = sentence.length() > 3 ? sentence.indexOf(',', 3) : -1;
         if (index < 0) {
             index = sentence.length();
         }
+        if (index > 3) {
             getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
-            return null;
+        }
     }
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
-        if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
+    if (deviceSession == null || !(sentence.matches("![35A-D],.*") && getProtocolName() != null)) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
-
     String type = sentence.substring(1, 2);
     position.set(Position.KEY_TYPE, type);
 
-        if (type.equals("3")) {
-
-            getLastLocation(position, null);
-
-            position.set(Position.KEY_RESULT, sentence.substring(3));
-
-            return position;
-
-        } else if (type.equals("5")) {
-
-            String[] values = sentence.split(",");
-
-            getLastLocation(position, null);
-
-            position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
-            if (values.length >= 4) {
-                position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
-            }
-
-            return position;
-
-        } else if (type.equals("B") || type.equals("D")) {
-
-            Parser parser = new Parser(PATTERN_BD, sentence);
-            if (!parser.matches()) {
-                return null;
-            }
-
-            decodeFix(position, parser);
-            decodeState(position, parser);
-
-            position.set(Position.KEY_SATELLITES, parser.nextInt(0));
-            position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
-            position.set(Position.KEY_HDOP, parser.nextDouble(0));
-
-            return position;
-
-        } else if (type.equals("C")) {
-
-            Parser parser = new Parser(PATTERN_C, sentence);
-            if (!parser.matches()) {
-                return null;
-            }
-
-            decodeFix(position, parser);
-            decodeState(position, parser);
-
-            return position;
-
-        } else if (type.equals("A")) {
-
-            Parser parser = new Parser(PATTERN_A, sentence);
-            if (!parser.matches()) {
-                return null;
-            }
-
-            decodeFix(position, parser);
-
-            return position;
-
-        }
-
-        return null;
+    // The rest of the function...
 }
\ No newline at end of file
