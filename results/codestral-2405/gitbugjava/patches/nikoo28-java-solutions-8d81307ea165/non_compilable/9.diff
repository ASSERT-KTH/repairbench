diff --git a/tmp/7850587b-26da-47ac-aab7-621be748c5a9_buggy.java b/tmp/daaa672b-f978-49ff-bbf8-8c7ec8ecd93b_fixed.java
index 9739964..f8944c4 100644
--- a/tmp/7850587b-26da-47ac-aab7-621be748c5a9_buggy.java
+++ b/tmp/daaa672b-f978-49ff-bbf8-8c7ec8ecd93b_fixed.java
@@ -1,27 +1,28 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
-
-    // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+        // Pop elements from stack while the prices are smaller or equal to the current price
+        while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i]) {
             indexStack.pop();
+        }
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
+        // Calculate span of current price
+        if (indexStack.isEmpty()) {
+            // If stack is empty, the price at index 'i' is greater than all previous values
             spans[i] = i + 1;
-      else
+        } else {
+            // Span is current index minus the previous higher price index
             spans[i] = i - indexStack.peek();
+        }
 
+        // Push the current index onto the stack
         indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
