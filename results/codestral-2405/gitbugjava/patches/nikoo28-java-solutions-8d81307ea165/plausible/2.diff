diff --git a/tmp/041122aa-c2bb-43bc-aefc-309e8ca7b13a_buggy.java b/tmp/fa561c35-031f-480c-adc8-bbe1e4266851_fixed.java
index 9739964..09db53c 100644
--- a/tmp/041122aa-c2bb-43bc-aefc-309e8ca7b13a_buggy.java
+++ b/tmp/fa561c35-031f-480c-adc8-bbe1e4266851_fixed.java
@@ -1,27 +1,23 @@
 public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+          && prices[indexStack.peek()] < prices[i])
         indexStack.pop();
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
-        spans[i] = i + 1;
-      else
-        spans[i] = i - indexStack.peek();
+      // Calculate span as the difference between current index and the index at the top of the stack
+      spans[i] = indexStack.isEmpty() ? (i + 1) : (i - indexStack.peek());
 
       indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
