diff --git a/tmp/e12af900-0e6c-431b-9db4-3cde17134f7f_buggy.java b/tmp/199e2ab1-3ea0-422e-bb81-b4b16b605466_fixed.java
index 862c60c..4cf4d9d 100644
--- a/tmp/e12af900-0e6c-431b-9db4-3cde17134f7f_buggy.java
+++ b/tmp/199e2ab1-3ea0-422e-bb81-b4b16b605466_fixed.java
@@ -1,25 +1,33 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
+    final Element parent = (parentNode instanceof Element) ? (Element) parentNode : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock())
+                || parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
+        // Add this condition to check if the parent is a br tag and if so, add a newline before the text node
+        if (parent != null && parent.tag().getName().equals("br") && siblingIndex != 0) {
+            trimLeading = true;
+        }
+
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
+        boolean shouldSkip = false;
+        if (next != null) {
+            shouldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+                    || (next instanceof TextNode && (((TextNode) next).isBlank()));
+        }
+        if (shouldSkip && isBlank()) {
+            return;
+        }
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()))
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
