diff --git a/tmp/b832f7c1-4daf-4f88-ab17-8af224f42a01_buggy.java b/tmp/e22ec658-08e0-4f96-868d-eea61c66eb39_fixed.java
index 862c60c..6cb4caf 100644
--- a/tmp/b832f7c1-4daf-4f88-ab17-8af224f42a01_buggy.java
+++ b/tmp/e22ec658-08e0-4f96-868d-eea61c66eb39_fixed.java
@@ -1,25 +1,29 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
-            Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
+        if (this instanceof TextNode && this.nextSibling() instanceof Element && this.parent() != null && this.parent().tagName().equals("p")) {
+            Element nextSibling = (Element) this.nextSibling();
+            if (nextSibling.tagName().equals("br") && nextSibling.nextSibling() != null && nextSibling.nextSibling() instanceof TextNode) {
+                TextNode textNode = (TextNode) nextSibling.nextSibling();
+                if (!textNode.isBlank()) {
+                    accum.append('\n');
+                }
+            }
+        }
 
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank()))
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
