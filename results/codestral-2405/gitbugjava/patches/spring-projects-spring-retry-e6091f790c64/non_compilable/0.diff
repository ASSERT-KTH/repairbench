diff --git a/tmp/50f0c125-48c6-4b63-a0bc-2efb7e17543e_buggy.java b/tmp/2d3efc84-b41b-44ea-8cb3-af3c61d23abd_fixed.java
index b8e3fa3..aa3f08d 100644
--- a/tmp/50f0c125-48c6-4b63-a0bc-2efb7e17543e_buggy.java
+++ b/tmp/2d3efc84-b41b-44ea-8cb3-af3c61d23abd_fixed.java
@@ -1,65 +1,52 @@
 /**
  * Builds the {@link BackOffPolicy} with the given parameters.
  * @return the {@link BackOffPolicy} instance
  */
 public BackOffPolicy build() {
-		if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
-			ExponentialBackOffPolicy policy;
-			if (Boolean.TRUE.equals(this.random)) {
-				policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
-				policy = new ExponentialBackOffPolicy();
-			}
-			if (this.delay != null) {
-				policy.setInitialInterval(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.initialIntervalSupplier(this.delaySupplier);
-			}
+    if ((this.multiplier != null && this.multiplier > 0) || this.multiplierSupplier != null) {
+        // Correcting the usage of multiplier
+        ExponentialBackOffPolicy policy = Boolean.TRUE.equals(this.random)
+            ? new ExponentialRandomBackOffPolicy()
+            : new ExponentialBackOffPolicy();
+        applyCommonPolicySettings(policy);
         if (this.multiplier != null) {
             policy.setMultiplier(this.multiplier);
         }
         if (this.multiplierSupplier != null) {
-				policy.multiplierSupplier(this.multiplierSupplier);
-			}
-			if (this.maxDelay != null && this.delay != null) {
-				policy.setMaxInterval(
-						this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
-			}
-			if (this.maxDelaySupplier != null) {
-				policy.maxIntervalSupplier(this.maxDelaySupplier);
-			}
-			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
+            policy.setMultiplierSupplier(this.multiplierSupplier); // Corrected method name
         }
         return policy;
     }
     if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
         UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
-			if (this.delay != null) {
-				policy.setMinBackOffPeriod(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.minBackOffPeriodSupplier(this.delaySupplier);
-			}
-			if (this.maxDelay != null) {
+        applyCommonPolicySettings(policy);
         policy.setMaxBackOffPeriod(this.maxDelay);
-			}
         if (this.maxDelaySupplier != null) {
-				policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
-			}
-			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
+            policy.setMaxBackOffPeriodSupplier(this.maxDelaySupplier); // Corrected method name
         }
         return policy;
     }
     FixedBackOffPolicy policy = new FixedBackOffPolicy();
     if (this.delay != null) {
         policy.setBackOffPeriod(this.delay);
     }
     if (this.sleeper != null) {
         policy.setSleeper(this.sleeper);
     }
     return policy;
 }
+
+private void applyCommonPolicySettings(BackOffPolicy policy) {
+    if (this.delay != null) {
+        policy.setInitialInterval(this.delay);
+    }
+    if (this.delaySupplier != null) {
+        policy.setInitialIntervalSupplier(this.delaySupplier); // Corrected method name
+    }
+    if (this.maxDelay != null && this.delay != null) {
+        policy.setMaxInterval(this.maxDelay > this.delay ? this.maxDelay : BackOffPolicy.DEFAULT_MAX_INTERVAL);
+    }
+    if (this.sleeper != null) {
+        policy.setSleeper(this.sleeper);
+    }
+}
\ No newline at end of file
