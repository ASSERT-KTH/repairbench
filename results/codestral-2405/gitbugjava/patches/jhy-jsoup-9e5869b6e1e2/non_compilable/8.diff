diff --git a/tmp/7b36f006-087a-477f-b82c-bf8b3f2e14dc_buggy.java b/tmp/d77b6c82-4f5b-477f-870b-6c9c626568d2_fixed.java
index 0583946..e849192 100644
--- a/tmp/7b36f006-087a-477f-b82c-bf8b3f2e14dc_buggy.java
+++ b/tmp/d77b6c82-4f5b-477f-870b-6c9c626568d2_fixed.java
@@ -1,30 +1,27 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock());
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
+        Node prev = previousSibling();
         boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) ||
+            (next instanceof TextNode && (((TextNode) next).isBlank() && ((TextNode) next).text().trim().isEmpty()));
         if (couldSkip && isBlank) return;
 
-            Node prev = previousSibling();
-            if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+        if ((siblingIndex == 0 || out.outline()) && parent != null && parent.tag().formatAsBlock() && !isBlank) {
             indent(accum, depth, out);
+        } else if (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br") && !isBlank) {
+            indent(accum, depth, out);
+        }
     }
 
-        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
+    Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing, false);
 }
\ No newline at end of file
