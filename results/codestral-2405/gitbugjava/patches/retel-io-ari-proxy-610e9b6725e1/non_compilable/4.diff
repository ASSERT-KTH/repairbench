diff --git a/tmp/5a4a0281-1a95-4fe8-9f4a-f41abc52f037_buggy.java b/tmp/da7486ec-bf83-495b-b51e-e09b089b9848_fixed.java
index eb0a5c8..0f58440 100644
--- a/tmp/5a4a0281-1a95-4fe8-9f4a-f41abc52f037_buggy.java
+++ b/tmp/da7486ec-bf83-495b-b51e-e09b089b9848_fixed.java
@@ -1,27 +1,27 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
-      return Try.success(Done.done());
+  if (!ariCommand.extractCommandType().isCreationCommand() || !ariCommand.extractCommandType().isUpdateCommand()) {
+    return Try.success(Done.done()); // Include update commands as well to create/update call context
   }
 
   final Option<AriResource> maybeResource =
       ariCommand
           .extractResourceRelations()
-            .find(AriResourceRelation::isCreated)
+          .find(AriResourceRelation::isCreatedOrUpdated) // Look for created or updated resources
           .map(AriResourceRelation::getResource);
 
   if (maybeResource.isEmpty()) {
     return Try.failure(
         new RuntimeException(
             String.format(
                 "Failed to extract resourceId from command '%s'", ariCommand.toString())));
   }
 
   final AriResource resource = maybeResource.get();
 
   callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
   return Try.success(Done.done());
 }
\ No newline at end of file
