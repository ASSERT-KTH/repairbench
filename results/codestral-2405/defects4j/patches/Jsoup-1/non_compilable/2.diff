diff --git a/tmp/840f28e9-26b0-41cc-9ce8-ca700819b51f_buggy.java b/tmp/8bb494e1-e20a-4a59-9b0c-0d788550312e_fixed.java
index 00914da..691528a 100644
--- a/tmp/840f28e9-26b0-41cc-9ce8-ca700819b51f_buggy.java
+++ b/tmp/8bb494e1-e20a-4a59-9b0c-0d788550312e_fixed.java
@@ -1,17 +1,28 @@
-    // does not recurse.
-    private void normalise(Element element) {
+private void normalise(Document document) {
     List<Node> toMove = new ArrayList<Node>();
-        for (Node node: element.childNodes) {
+    // Check direct children of `element`
+    for (Node node: document.body().childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
         }
     }
 
+    // Check direct children of document root
+    for (Node node: document.childNodes()) {
+        if (node instanceof Element && !node.equals(document.body())) {
+            normalise((Element) node);
+        } else if (node instanceof TextNode) {
+            TextNode tn = (TextNode) node;
+            if (!tn.isBlank())
+                toMove.add(tn);
+        }
+    }
+
     for (Node node: toMove) {
-            element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        document.body().removeChild(node);
+        document.body().prependChild(new TextNode(" ", ""));
+        document.body().prependChild(node);
     }
 }
\ No newline at end of file
