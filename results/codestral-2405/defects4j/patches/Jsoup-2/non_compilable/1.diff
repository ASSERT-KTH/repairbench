diff --git a/tmp/a7469b3f-be07-41e0-82e4-9b2d0c9fef15_buggy.java b/tmp/f394c049-675c-4536-80a0-04e8dd128246_fixed.java
index 1b29465..8c997c0 100644
--- a/tmp/a7469b3f-be07-41e0-82e4-9b2d0c9fef15_buggy.java
+++ b/tmp/f394c049-675c-4536-80a0-04e8dd128246_fixed.java
@@ -1,50 +1,57 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
+    if (tagName.length() == 0) { // doesn't look like a start tag; handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
+    boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed element (<div/>)
     if (tq.matchChomp("/>")) { // close empty element or tag
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
     // pc data only tags (textarea, script): chomp to end tag, add content as text node
     if (tag.isData()) {
+        if (tag.equals(scriptTag)) { // specific check for script tag
+            String data = tq.chompTo("</" + tagName); // get internal script content
+            tq.matchChomp(">"); // close the script tag
+            child.appendChild(new DataNode(data, baseUri)); // append script contents as data node
+            return; // return to avoid consuming the text following the script
+        } else {
             String data = tq.chompTo("</" + tagName);
             tq.chompTo(">");
 
             Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+            if (tag.equals(titleTag) || tag.equals(textareaTag))
                 dataNode = TextNode.createFromEncoded(data, baseUri);
             else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+                dataNode = new DataNode(data, baseUri);
             child.appendChild(dataNode);
         }
+    }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
         if (href.length() != 0) { // ignore <base target> etc
             baseUri = href;
             doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
         }
     }
 }
\ No newline at end of file
