diff --git a/tmp/d8e5994d-347f-40b4-9b80-f9ab3f162f13_buggy.java b/tmp/c3aae7e6-5d02-48e7-9b68-046206c0c1c9_fixed.java
index 0e18f59..6b10727 100644
--- a/tmp/d8e5994d-347f-40b4-9b80-f9ab3f162f13_buggy.java
+++ b/tmp/c3aae7e6-5d02-48e7-9b68-046206c0c1c9_fixed.java
@@ -1,13 +1,18 @@
 @Override
 InputStream decode(final InputStream in, final Coder coder,
         byte[] password) throws IOException {
+    InputStream modifiedIn = in;
     byte propsByte = coder.properties[0];
     long dictSize = coder.properties[1];
     for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
+        dictSize |= ((long) (coder.properties[i + 1] & 0xFF) << (8 * i));
     }
-            if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
+    if (dictSize > Integer.MAX_VALUE) {
+        // Adjust dictionary size and create a new BufferedInputStream
+        dictSize = Integer.MAX_VALUE;
+        modifiedIn = new BufferedInputStream(in, (int) dictSize);
+    } else if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
         throw new IOException("Dictionary larger than 4GiB maximum size");
     }
-            return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
+    return new LZMAInputStream(modifiedIn, -1, propsByte, (int) dictSize);
 }
\ No newline at end of file
