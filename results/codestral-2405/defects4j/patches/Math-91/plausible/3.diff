diff --git a/tmp/21277cd7-3f14-4a49-8576-2e199316130a_buggy.java b/tmp/dd5f2f51-d230-4065-a5b1-4b9837914bb4_fixed.java
index 4cce784..3dcede3 100644
--- a/tmp/21277cd7-3f14-4a49-8576-2e199316130a_buggy.java
+++ b/tmp/dd5f2f51-d230-4065-a5b1-4b9837914bb4_fixed.java
@@ -1,11 +1,28 @@
 /**
  * Compares this object to another based on size.
  * @param object the object to compare to
  * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
  *         than <tt>object</tt>, 0 if they are equal.
  */
 public int compareTo(Fraction object) {
+    int cmp = compareFraction(object);
+    if (cmp != 0) {
+        return cmp;
+    }
+    // If fractions are equal, compare their double values
     double nOd = doubleValue();
     double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+    return Double.compare(nOd, dOn);
+}
+
+private int compareFraction(Fraction object) {
+    long thisNumerator = this.numerator;
+    long thisDenominator = this.denominator;
+    long otherNumerator = object.numerator;
+    long otherDenominator = object.denominator;
+
+    long normalizedThisNumerator = thisNumerator * otherDenominator;
+    long normalizedOtherNumerator = otherNumerator * thisDenominator;
+
+    return Long.compare(normalizedThisNumerator, normalizedOtherNumerator);
 }
\ No newline at end of file
