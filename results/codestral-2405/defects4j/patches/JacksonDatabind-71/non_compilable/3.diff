diff --git a/tmp/38dc9d78-13d4-4391-95a3-361a9b6072d3_buggy.java b/tmp/7300486e-4b53-4c31-85b3-591a5425caac_fixed.java
index 7f7f1f8..7b7ffd8 100644
--- a/tmp/38dc9d78-13d4-4391-95a3-361a9b6072d3_buggy.java
+++ b/tmp/7300486e-4b53-4c31-85b3-591a5425caac_fixed.java
@@ -1,47 +1,44 @@
-    public static StdKeyDeserializer forType(Class<?> raw)
-    {
-        int kind;
-
-        // first common types:
-        if (raw == String.class || raw == Object.class) {
+public static StdKeyDeserializer forType(Class<?> raw) {
+    if (raw == CharSequence.class) {
+        FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(String.class);
+        return new StdKeyDeserializer(TYPE_STRING, raw, deser);
+    } else if (raw == String.class || raw == Object.class) {
         return StringKD.forType(raw);
     } else if (raw == UUID.class) {
-            kind = TYPE_UUID;
+        return new StdKeyDeserializer(TYPE_UUID, raw);
     } else if (raw == Integer.class) {
-            kind = TYPE_INT;
+        return new StdKeyDeserializer(TYPE_INT, raw);
     } else if (raw == Long.class) {
-            kind = TYPE_LONG;
+        return new StdKeyDeserializer(TYPE_LONG, raw);
     } else if (raw == Date.class) {
-            kind = TYPE_DATE;
+        return new StdKeyDeserializer(TYPE_DATE, raw);
     } else if (raw == Calendar.class) {
-            kind = TYPE_CALENDAR;
-        // then less common ones...
+        return new StdKeyDeserializer(TYPE_CALENDAR, raw);
     } else if (raw == Boolean.class) {
-            kind = TYPE_BOOLEAN;
+        return new StdKeyDeserializer(TYPE_BOOLEAN, raw);
     } else if (raw == Byte.class) {
-            kind = TYPE_BYTE;
+        return new StdKeyDeserializer(TYPE_BYTE, raw);
     } else if (raw == Character.class) {
-            kind = TYPE_CHAR;
+        return new StdKeyDeserializer(TYPE_CHAR, raw);
     } else if (raw == Short.class) {
-            kind = TYPE_SHORT;
+        return new StdKeyDeserializer(TYPE_SHORT, raw);
     } else if (raw == Float.class) {
-            kind = TYPE_FLOAT;
+        return new StdKeyDeserializer(TYPE_FLOAT, raw);
     } else if (raw == Double.class) {
-            kind = TYPE_DOUBLE;
+        return new StdKeyDeserializer(TYPE_DOUBLE, raw);
     } else if (raw == URI.class) {
-            kind = TYPE_URI;
+        return new StdKeyDeserializer(TYPE_URI, raw);
     } else if (raw == URL.class) {
-            kind = TYPE_URL;
+        return new StdKeyDeserializer(TYPE_URL, raw);
     } else if (raw == Class.class) {
-            kind = TYPE_CLASS;
+        return new StdKeyDeserializer(TYPE_CLASS, raw);
     } else if (raw == Locale.class) {
         FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Locale.class);
         return new StdKeyDeserializer(TYPE_LOCALE, raw, deser);
     } else if (raw == Currency.class) {
         FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Currency.class);
         return new StdKeyDeserializer(TYPE_CURRENCY, raw, deser);
     } else {
         return null;
     }
-        return new StdKeyDeserializer(kind, raw);
 }
\ No newline at end of file
