diff --git a/tmp/9cf9db54-d12f-4aba-9786-d79e89313b3a_buggy.java b/tmp/be830a70-1fd5-493f-b0bd-cd4e8ef61635_fixed.java
index 351a97a..1cf3259 100644
--- a/tmp/9cf9db54-d12f-4aba-9786-d79e89313b3a_buggy.java
+++ b/tmp/be830a70-1fd5-493f-b0bd-cd4e8ef61635_fixed.java
@@ -1,18 +1,39 @@
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
+    @Override
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
+
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
 
+        ShapeList other = (ShapeList) obj;
+
+        // Assuming that getShapes returns a List<Shape> from ShapeList
+        List<Shape> thisShapes = this.getShapes();
+        List<Shape> otherShapes = other.getShapes();
+
+        if (thisShapes.size() != otherShapes.size()) {
+            return false;
+        }
+
+        for (int i = 0; i < thisShapes.size(); i++) {
+            Shape thisShape = thisShapes.get(i);
+            Shape otherShape = otherShapes.get(i);
+
+            if (!Objects.equals(thisShape, otherShape)) {
+                return false;
+            }
+        }
+
+        return true;
     }
\ No newline at end of file
