diff --git a/tmp/c6979828-7366-4bce-b47c-0ecf097b5acb_buggy.java b/tmp/ea92dc62-480f-4324-a5b4-f546b61d3573_fixed.java
index 0b7c52e..cefa7c7 100644
--- a/tmp/c6979828-7366-4bce-b47c-0ecf097b5acb_buggy.java
+++ b/tmp/ea92dc62-480f-4324-a5b4-f546b61d3573_fixed.java
@@ -1,27 +1,29 @@
-    /**
-     * Processes a OBJECTLIT node.
-     */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child != null;
-          child = child.getNext()) {
-        // Maybe STRING, GET, SET
-
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
-        T type = typeSystem.getType(getScope(), n, name);
-
+      child = child.getNextSibling()) {
+    Node keyNode = child.getFirstChild();
+    Node valueNode = child.getSecondChild();
+    String name = keyNode.getString();
+    T type = null;
+    if (getScope() instanceof VarScope) {
+      Var var = getScope().getVar(name);
+      if (var != null) {
+        type = var.getType();
+      }
+    }
+    if (type == null) {
+      type = typeSystem.getType(getScope(), valueNode, name);
+    }
     Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
+    if (!prop.scheduleRenaming(valueNode,
                               processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
-                t.getSourceName(), child, propertiesToErrorFor.get(name),
+            t.getSourceName(), valueNode, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
