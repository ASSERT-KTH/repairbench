diff --git a/tmp/9c2a9290-d25b-442b-bdfa-a0a13053bd14_buggy.java b/tmp/fb462889-f611-47db-8ae4-0d5afc6344e5_fixed.java
index 0b7c52e..f24ea86 100644
--- a/tmp/9c2a9290-d25b-442b-bdfa-a0a13053bd14_buggy.java
+++ b/tmp/fb462889-f611-47db-8ae4-0d5afc6344e5_fixed.java
@@ -1,27 +1,33 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child != null;
       child = child.getNext()) {
-        // Maybe STRING, GET, SET
-
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
-        T type = typeSystem.getType(getScope(), n, name);
+    String name = null;
+    T type = null;
+    if (child.isStringKey()) {
+      // Bracket notation
+      name = child.getString();
+      type = typeSystem.getType(getScope(), n, name);
+    } else if (child.isGetProp() || child.isString()) {
+      // Dot notation or literal string
+      // Extract property name and type here
+      // ...
+    }
 
+    if (name != null && type != null) {
       Property prop = getProperty(name);
       if (!prop.scheduleRenaming(child,
                                  processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
         if (propertiesToErrorFor.containsKey(name)) {
           compiler.report(JSError.make(
               t.getSourceName(), child, propertiesToErrorFor.get(name),
               Warnings.INVALIDATION, name,
               (type == null ? "null" : type.toString()), n.toString(), ""));
         }
       }
     }
   }
+}
\ No newline at end of file
