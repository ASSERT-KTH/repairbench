diff --git a/tmp/119b639e-a736-45ff-afae-eb5d5f5bb4c1_buggy.java b/tmp/169ae33d-0105-400c-99f6-45406d720464_fixed.java
index 735a993..e2023c4 100644
--- a/tmp/119b639e-a736-45ff-afae-eb5d5f5bb4c1_buggy.java
+++ b/tmp/169ae33d-0105-400c-99f6-45406d720464_fixed.java
@@ -1,29 +1,14 @@
-    /**
-     * Appends an object to the builder padding on the right to a fixed length.
-     * The <code>toString</code> of the object is used.
-     * If the object is larger than the length, the right hand side is lost.
-     * If the object is null, null text value is used.
-     * 
-     * @param obj  the object to append, null uses null text
-     * @param width  the fixed field width, zero or negative has no effect
-     * @param padChar  the pad character to use
-     * @return this, to enable chaining
-     */
 public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
     if (width > 0) {
-            ensureCapacity(size + width);
-            String str = (obj == null ? getNullText() : obj.toString());
+        String str = obj != null ? obj.toString() : getNullText();
         int strLen = str.length();
-            if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
-            } else {
-                int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
-                for (int i = 0; i < padLen; i++) {
-                    buffer[size + strLen + i] = padChar;
+        int sizeNeeded = size + Math.min(width, strLen);
+        ensureCapacity(sizeNeeded);
+        str.getChars(0, Math.min(strLen, width), buffer, size);
+        if (strLen < width) {
+            Arrays.fill(buffer, size + strLen, size + width, padChar);
         }
-            }
-            size += width;
+        size = sizeNeeded;
     }
     return this;
 }
\ No newline at end of file
