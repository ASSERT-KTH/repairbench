diff --git a/tmp/725f25f9-0a91-4f9a-a2d3-7b0cc5a512ea_buggy.java b/tmp/86e17ab5-94ae-470f-ac25-21c86df3b931_fixed.java
index c6b65da..3aaa577 100644
--- a/tmp/725f25f9-0a91-4f9a-a2d3-7b0cc5a512ea_buggy.java
+++ b/tmp/86e17ab5-94ae-470f-ac25-21c86df3b931_fixed.java
@@ -1,25 +1,28 @@
-    /**
-     * Returns the options with a long name starting with the name specified.
-     * 
-     * @param opt the partial name of the option
-     * @return the options matching the partial name specified, or an empty list if none matches
-     * @since 1.3
-     */
-    public List<String> getMatchingOptions(String opt)
-    {
+public List<String> getMatchingOptions(String opt) {
     opt = Util.stripLeadingHyphens(opt);
 
     List<String> matchingOpts = new ArrayList<String>();
 
-        // for a perfect match return the single option only
+    boolean exactMatchFound = false;
 
-        for (String longOpt : longOpts.keySet())
-        {
-            if (longOpt.startsWith(opt))
-            {
+    // Check for exact match first
+    for (String longOpt : longOpts.keySet()) {
+        if (longOpt.equals(opt)) {
+            matchingOpts.clear(); // Clear any previous matches
             matchingOpts.add(longOpt);
+            exactMatchFound = true;
+            break;
+        }
+    }
+
+    // If no exact match is found, continue searching for partial matches
+    if (!exactMatchFound) {
+        for (String longOpt : longOpts.keySet()) {
+            if (longOpt.startsWith(opt)) {
+                matchingOpts.add(longOpt);
+            }
         }
     }
 
     return matchingOpts;
 }
\ No newline at end of file
