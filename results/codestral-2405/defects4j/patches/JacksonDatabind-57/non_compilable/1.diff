diff --git a/tmp/29d324b1-70f8-4326-be56-d16080758bfb_buggy.java b/tmp/ed58a553-fd7e-442e-8125-84808787844f_fixed.java
index 08a41cf..83cbc04 100644
--- a/tmp/29d324b1-70f8-4326-be56-d16080758bfb_buggy.java
+++ b/tmp/ed58a553-fd7e-442e-8125-84808787844f_fixed.java
@@ -1,12 +1,24 @@
 /**
  * Overloaded version of {@link #readValue(InputStream)}.
  */
 public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
     throws IOException, JsonProcessingException
 {
     if (_dataFormatReaders != null) {
+        final JsonParser parser = _parserFactory.createParser(src, offset, length);
+
+        // Validate the first character of the content to see if it's a Byte Order Mark (BOM)
+        // If it's a BOM, then skip past it as it's not part of the actual JSON content
+        if (parser.getCodec().canUseCharArrays()) {
+            char[] firstChars = ((CharTypes)parser.getCodec()).getFirstCharFromUTF8(src, offset, length);
+            if (firstChars[0] == 0xFEFF) {// BOM
+                offset += 3;
+                length -= 3;
+            }
+        }
+
         return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
     }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
+    return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),
             true));
 }
\ No newline at end of file
