diff --git a/tmp/cd01f545-48cf-4bf0-85e0-93f6108c2cf3_buggy.java b/tmp/770c8d7b-a35e-4dc8-bcf3-f837cc631ce3_fixed.java
index 08a41cf..2aa1b27 100644
--- a/tmp/cd01f545-48cf-4bf0-85e0-93f6108c2cf3_buggy.java
+++ b/tmp/770c8d7b-a35e-4dc8-bcf3-f837cc631ce3_fixed.java
@@ -1,12 +1,18 @@
 /**
  * Overloaded version of {@link #readValue(InputStream)}.
  */
 public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
     throws IOException, JsonProcessingException
 {
     if (_dataFormatReaders != null) {
         return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
     }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
-                true));
+
+    InputFactory inputFactory = _parserFactory.getFactory();
+    Object codec = inputFactory.createParser(new ByteArrayInputStream(src, offset, length));
+    // Set the encoding to UTF-8
+    if (codec instanceof Utf8StreamJsonParser) {
+        ((Utf8StreamJsonParser) codec).setInputEncoding("UTF-8");
+    }
+    return _bindAndReadValues(_considerFilter(codec,true));
 }
\ No newline at end of file
