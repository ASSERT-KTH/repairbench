diff --git a/tmp/bb3f6a12-5252-41ce-a0b7-2505b0fec4d8_buggy.java b/tmp/5ac011a7-89a4-4ba5-8491-45641715a6c4_fixed.java
index 5f1dcf2..020c417 100644
--- a/tmp/bb3f6a12-5252-41ce-a0b7-2505b0fec4d8_buggy.java
+++ b/tmp/5ac011a7-89a4-4ba5-8491-45641715a6c4_fixed.java
@@ -1,41 +1,45 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+   boolean converged = false;
+   while (!converged && getIterations() < maxIterations) {
 
        incrementIterationsCounter();
 
        // save the original vertex
        final RealPointValuePair[] original = simplex;
        final RealPointValuePair best = original[0];
 
        // perform a reflection step
        final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
        if (comparator.compare(reflected, best) < 0) {
 
            // compute the expanded simplex
            final RealPointValuePair[] reflectedSimplex = simplex;
            final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
            if (comparator.compare(reflected, expanded) <= 0) {
                // accept the reflected simplex
                simplex = reflectedSimplex;
+               converged = checkConvergence(comparator);
            }
 
-                return;
-
-            }
+       } else {
 
            // compute the contracted simplex
            final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
            if (comparator.compare(contracted, best) < 0) {
                // accept the contracted simplex
+               converged = checkConvergence(comparator);
+           }
+
+       }
 
-            // check convergence
-                return;
    }
 
+   if (getIterations() == maxIterations) {
+       throw new MaxIterationsExceededException(maxIterations);
    }
 
 }
\ No newline at end of file
