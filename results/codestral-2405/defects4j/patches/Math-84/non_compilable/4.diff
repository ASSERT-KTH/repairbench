diff --git a/tmp/5601e7a9-33cc-4993-8d0c-1e8825f5ad61_buggy.java b/tmp/24e37f35-37fe-48af-8bb4-2061ff7a6d16_fixed.java
index 5f1dcf2..9e0df71 100644
--- a/tmp/5601e7a9-33cc-4993-8d0c-1e8825f5ad61_buggy.java
+++ b/tmp/24e37f35-37fe-48af-8bb4-2061ff7a6d16_fixed.java
@@ -1,41 +1,43 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    double delta = Double.POSITIVE_INFINITY; // A large value initially
+    while (delta > CONVERGENCE_THRESHOLD) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
+        double bestValue = best.getValue();
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
-
-                return;
-
+            delta = Math.abs(simplex[0].getValue() - bestValue);
+            continue;
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
-                return;
+            delta = Math.abs(simplex[0].getValue() - bestValue);
+            continue;
         }
 
+        // No improvement, exist the loop
+        delta = 0;
     }
 
 }
\ No newline at end of file
