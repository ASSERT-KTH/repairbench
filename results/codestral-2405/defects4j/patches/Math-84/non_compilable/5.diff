diff --git a/tmp/d4e913cf-353e-4f1a-b9ed-5cc3883cd521_buggy.java b/tmp/b2cdb55c-b689-4d9b-8ee7-2a94a24b4d8f_fixed.java
index 5f1dcf2..c3c9625 100644
--- a/tmp/d4e913cf-353e-4f1a-b9ed-5cc3883cd521_buggy.java
+++ b/tmp/b2cdb55c-b689-4d9b-8ee7-2a94a24b4d8f_fixed.java
@@ -1,41 +1,46 @@
-    /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    boolean converged = false;
+
+    while (!converged && getIterations() < getMaxIterations()) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
-                return;
-
-            }
+        } else {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+            } else {
+                // shrink the simplex
+                shrinkSimplex(comparator);
 
                 // check convergence
-                return;
+                converged = checkConvergence();
+            }
         }
-
     }
 
+    if (getIterations() >= getMaxIterations()) {
+        throw new MaxIterationsExceededException(getMaxIterations());
+    }
 }
\ No newline at end of file
