diff --git a/tmp/a773b985-7f83-4b55-8c81-e3183c975485_buggy.java b/tmp/1d686e89-36a4-4282-936f-56e198d7aa6c_fixed.java
index 5f1dcf2..f191cfc 100644
--- a/tmp/a773b985-7f83-4b55-8c81-e3183c975485_buggy.java
+++ b/tmp/1d686e89-36a4-4282-936f-56e198d7aa6c_fixed.java
@@ -1,41 +1,43 @@
-    /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    boolean shouldContinue = true;
+    while (shouldContinue && getIterations() < getMaxIterations() && getEvaluations() < getMaxEvaluations()) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
-                return;
-
-            }
+        } else {
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+            } else {
+                // shrink the simplex
+                shrinkSimplex(original[0]);
+            }
+
+        }
 
         // check convergence
-                return;
+        shouldContinue = !convergenceChecker.converged(getIterations(), SimpleVector.copyReal(original[0].getPoint()),
+                                                       simplex, comparator);
     }
-
-        }
-
 }
\ No newline at end of file
