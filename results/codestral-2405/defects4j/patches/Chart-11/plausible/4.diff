diff --git a/tmp/5741b106-3440-433d-b437-6b48b4bf0ca9_buggy.java b/tmp/70daefcf-7f76-4d12-99f0-cda126719d5d_fixed.java
index ad7255c..3edcb83 100644
--- a/tmp/5741b106-3440-433d-b437-6b48b4bf0ca9_buggy.java
+++ b/tmp/70daefcf-7f76-4d12-99f0-cda126719d5d_fixed.java
@@ -1,42 +1,36 @@
 /**
  * Tests two polygons for equality.  If both are <code>null</code> this
  * method returns <code>true</code>.
  *
  * @param p1  path 1 (<code>null</code> permitted).
  * @param p2  path 2 (<code>null</code> permitted).
  *
  * @return A boolean.
  */
 public static boolean equal(GeneralPath p1, GeneralPath p2) {
     if (p1 == null) {
         return (p2 == null);
     }
     if (p2 == null) {
         return false;
     }
     if (p1.getWindingRule() != p2.getWindingRule()) {
         return false;
     }
     PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+    PathIterator iterator2 = p2.getPathIterator(null); // Bug fix: use p2, not p1
     double[] d1 = new double[6];
     double[] d2 = new double[6];
-        boolean done = iterator1.isDone() && iterator2.isDone();
+    boolean done = iterator1.isDone() || iterator2.isDone();
     while (!done) {
-            if (iterator1.isDone() != iterator2.isDone()) {
-                return false;
-            }
         int seg1 = iterator1.currentSegment(d1);
-            int seg2 = iterator2.currentSegment(d2);
-            if (seg1 != seg2) {
-                return false;
-            }
-            if (!Arrays.equals(d1, d2)) {
-                return false;
-            }
         iterator1.next();
+        int seg2 = iterator2.currentSegment(d2);
         iterator2.next();
-            done = iterator1.isDone() && iterator2.isDone();
+        if (seg1 != seg2 || !Arrays.equals(d1, d2)) {
+            return false;
         }
-        return true;
+        done = iterator1.isDone() || iterator2.isDone();
+    }
+    return iterator1.isDone() && iterator2.isDone();
 }
\ No newline at end of file
