diff --git a/tmp/4fd8f54c-a00d-4d23-b7f8-fd3fadfb8736_buggy.java b/tmp/7159183a-cee2-408e-b063-e81cb450e795_fixed.java
index 875b31b..1f49839 100644
--- a/tmp/4fd8f54c-a00d-4d23-b7f8-fd3fadfb8736_buggy.java
+++ b/tmp/7159183a-cee2-408e-b063-e81cb450e795_fixed.java
@@ -1,54 +1,24 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)
+{
+    while (text.length() > width)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
+        if (pos > 0 && text.charAt(pos) == ' ')
         {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
-            }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
+            pos--;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        text = createPadding(nextLineTabStop) + text.substring(pos).trim();
     }
+    sb.append(rtrim(text));
+
+    return sb;
 }
\ No newline at end of file
