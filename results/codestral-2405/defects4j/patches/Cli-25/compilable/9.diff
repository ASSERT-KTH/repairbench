diff --git a/tmp/1c65019d-07cb-4e0f-91be-ad5ef5ee2bc5_buggy.java b/tmp/b0e6b29e-c2e4-489b-85e4-7a875251aa4a_fixed.java
index 875b31b..0ead957 100644
--- a/tmp/1c65019d-07cb-4e0f-91be-ad5ef5ee2bc5_buggy.java
+++ b/tmp/b0e6b29e-c2e4-489b-85e4-7a875251aa4a_fixed.java
@@ -1,54 +1,30 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+    if (pos == -1) {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
+    if (nextLineTabStop >= width) {
         // stops infinite loop happening
         nextLineTabStop = width - 1;
     }
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // all following lines must be padded with nextLineTabStop space characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
+    while (true) {
         text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+        pos = findWrapPos(text, width, nextLineTabStop);
 
-            if (pos == -1)
-            {
+        if (pos == -1 || (text.length() > width && pos == nextLineTabStop)) {
             sb.append(text);
-
             return sb;
         }
 
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
+        pos = Math.min(pos, width);
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
