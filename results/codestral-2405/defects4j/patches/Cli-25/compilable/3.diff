diff --git a/tmp/69b7255c-b067-45ec-af61-45eae90e5f70_buggy.java b/tmp/7ddda641-940d-4a57-946c-468e4c2db176_fixed.java
index 875b31b..0f97eb9 100644
--- a/tmp/69b7255c-b067-45ec-af61-45eae90e5f70_buggy.java
+++ b/tmp/7ddda641-940d-4a57-946c-468e4c2db176_fixed.java
@@ -1,54 +1,43 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
+        return sb;
+    }
+
+    while (true)
+    {
+        if (pos <= nextLineTabStop)
+        {
+            sb.append(rtrim(text.substring(0, pos)));
+            text = text.substring(pos).trim();
+        }
+        else
+        {
+            sb.append(rtrim(text.substring(0, width)));
+            text = text.substring(width);
+        }
 
+        if (text.length() == 0) {
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+
+        sb.append(defaultNewLine);
 
         if (nextLineTabStop >= width)
         {
             // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
 
         // all following lines must be padded with nextLineTabStop space
         // characters
         final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
-            }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        text = padding + text;
+        pos = nextLineTabStop;
     }
 }
\ No newline at end of file
