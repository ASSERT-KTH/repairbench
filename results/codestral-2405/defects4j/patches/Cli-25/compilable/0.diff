diff --git a/tmp/a3dbfa9f-b5fb-48c4-be9c-98bcaf8558a0_buggy.java b/tmp/96862972-c071-4c61-9c11-0ca85a5f9e7f_fixed.java
index 875b31b..0da7bef 100644
--- a/tmp/a3dbfa9f-b5fb-48c4-be9c-98bcaf8558a0_buggy.java
+++ b/tmp/96862972-c071-4c61-9c11-0ca85a5f9e7f_fixed.java
@@ -1,54 +1,52 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
+        if (text.length() > width) {
+            sb.append(text.substring(0, width)).append(defaultNewLine);
+            text = text.substring(width);
+            pos = 0;
+        }
+        else {
             sb.append(rtrim(text));
-
             return sb;
         }
+    }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     if (nextLineTabStop >= width)
     {
-            // stops infinite loop happening
         nextLineTabStop = width - 1;
     }
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
+            if (text.length() > width) {
+                sb.append(text.substring(0, width)).append(defaultNewLine);
+                text = text.substring(width);
+                pos = 0;
+            }
+            else {
                 sb.append(text);
-
                 return sb;
             }
+        }
 
         if ( (text.length() > width) && (pos == nextLineTabStop - 1) )
         {
             pos = width;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
