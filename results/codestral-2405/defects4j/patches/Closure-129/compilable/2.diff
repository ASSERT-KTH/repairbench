diff --git a/tmp/bb84bbba-ff9c-4a41-91d9-17806a7222b8_buggy.java b/tmp/39da45b9-8fc1-44c4-9cad-17b77c74cc3d_fixed.java
index e8705ac..c2a575b 100644
--- a/tmp/bb84bbba-ff9c-4a41-91d9-17806a7222b8_buggy.java
+++ b/tmp/39da45b9-8fc1-44c4-9cad-17b77c74cc3d_fixed.java
@@ -1,24 +1,17 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
 private void annotateCalls(Node n) {
     Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
     Node first = n.getFirstChild();
-
-      // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+    if (first.isGetProp()) {
+        Node firstChildOfGetProp = first.getFirstChild();
+        if (!firstChildOfGetProp.isName() || !"eval".equals(firstChildOfGetProp.getString())) {
+            n.putBooleanProp(Node.FREE_CALL, true);
+        }
+    } else if (!first.isName() || !"eval".equals(first.getString())) {
         n.putBooleanProp(Node.FREE_CALL, true);
     }
 
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+    if (first.isName() && "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
     }
 }
\ No newline at end of file
