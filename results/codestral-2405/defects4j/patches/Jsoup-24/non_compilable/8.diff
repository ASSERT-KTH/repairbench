diff --git a/tmp/13b18e6f-5105-4c0e-a479-d2dae4b9bfad_buggy.java b/tmp/0f57d089-f070-4c66-bc0e-20ae63a7c72a_fixed.java
index b2d53db..16a0020 100644
--- a/tmp/13b18e6f-5105-4c0e-a479-d2dae4b9bfad_buggy.java
+++ b/tmp/0f57d089-f070-4c66-bc0e-20ae63a7c72a_fixed.java
@@ -1,34 +1,21 @@
 void read(Tokeniser t, CharacterReader r) {
-            if (r.matchesLetter()) {
+    if (t.isInScriptData() && r.matchesLetter()) {
+        char c = r.current();
+        switch (c) {
+            case '\'':
+                t.dataBuffer.append(r.consumeToAndConsume('\'', false));
+                break;
+            case '"':
+                t.dataBuffer.append(r.consumeToAndConsume('"', false));
+                break;
+            default:
                 String name = r.consumeLetterSequence();
-                t.tagPending.appendTagName(name.toLowerCase());
                 t.dataBuffer.append(name);
+                break;
+        }
         r.advance();
         return;
     }
 
-            if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
-                char c = r.consume();
-                switch (c) {
-                    case '\t':
-                    case '\n':
-                    case '\f':
-                    case ' ':
-                        t.transition(BeforeAttributeName);
-                        break;
-                    case '/':
-                        t.transition(SelfClosingStartTag);
-                        break;
-                    case '>':
-                        t.emitTagPending();
-                        t.transition(Data);
-                        break;
-                    default:
-                        t.dataBuffer.append(c);
-                        anythingElse(t, r);
-                        break;
-                }
-            } else {
-                anythingElse(t, r);
-            }
+    // ... rest of the function
 }
\ No newline at end of file
