diff --git a/tmp/8f7bdbfe-029f-4e03-bbb8-679c66a0ef14_buggy.java b/tmp/94818b1c-0091-45ba-86ad-dd21bfdef204_fixed.java
index b2d53db..bc4c50a 100644
--- a/tmp/8f7bdbfe-029f-4e03-bbb8-679c66a0ef14_buggy.java
+++ b/tmp/94818b1c-0091-45ba-86ad-dd21bfdef204_fixed.java
@@ -1,34 +1,45 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
         r.advance();
         return;
     }
 
-            if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
+    if (t.token().is(Tag.Name.SCRIPT) && !r.isEmpty()) {
+        char c = r.consume();
+        t.dataBuffer.append(c);
+        r.unconsume();
+        if (r.matchesAnySustainCase("<!--")) {
+            String comment = r.consumeTo("-->");
+            t.dataBuffer.append(comment);
+            r.advance(3);
+        } else {
+            anythingElse(t, r);
+        }
+    } else if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
             default:
                 t.dataBuffer.append(c);
                 anythingElse(t, r);
                 break;
         }
     } else {
         anythingElse(t, r);
     }
 }
\ No newline at end of file
