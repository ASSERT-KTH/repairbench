diff --git a/tmp/8458b914-244b-427f-8dd8-adca04d490a9_buggy.java b/tmp/e45ab935-541c-467f-a529-cfd74d7a4560_fixed.java
index b2d53db..88c071d 100644
--- a/tmp/8458b914-244b-427f-8dd8-adca04d490a9_buggy.java
+++ b/tmp/e45ab935-541c-467f-a529-cfd74d7a4560_fixed.java
@@ -1,34 +1,41 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
-                r.advance();
         return;
     }
 
-            if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
+    if (!r.isEmpty()) {
         char c = r.consume();
+        if (t.isAppropriateEndTagToken()) {
             switch (c) {
                 case '\t':
                 case '\n':
                 case '\f':
                 case ' ':
                     t.transition(BeforeAttributeName);
                     break;
                 case '/':
                     t.transition(SelfClosingStartTag);
                     break;
                 case '>':
                     t.emitTagPending();
                     t.transition(Data);
                     break;
                 default:
                     t.dataBuffer.append(c);
                     anythingElse(t, r);
                     break;
             }
+        } else if (t.getTokeniserState() == HtmlParser.TokeniserState.WithinScriptData) {
+            r.unconsume(); // unconsume the character as it might be a part of a comment
+            anythingElse(t, r);
+        } else {
+            r.unconsume(); // unconsume the character if it's none of the above
+            anythingElse(t, r);
+        }
     } else {
         anythingElse(t, r);
     }
 }
\ No newline at end of file
