diff --git a/tmp/0a5a9b29-0c08-4401-a7fb-5f388c849312_buggy.java b/tmp/794d8e31-3c0a-43e5-b426-d0195563155e_fixed.java
index 21f64c6..bd4a6a3 100644
--- a/tmp/0a5a9b29-0c08-4401-a7fb-5f388c849312_buggy.java
+++ b/tmp/794d8e31-3c0a-43e5-b426-d0195563155e_fixed.java
@@ -1,23 +1,21 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        if (offset < length && startChar != input[offset])
+            continue;
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+        if (last > length)
+            return -1; // target sequence exceeds remaining input
+        for (int j = 1; i < last; i++, j++) {
+            if (seq.charAt(j) != input[i]) {
+                offset = i;
+                break;
+            }
+        }
         if (i == last) // found full sequence
             return offset - pos;
     }
-        }
     return -1;
 }
\ No newline at end of file
