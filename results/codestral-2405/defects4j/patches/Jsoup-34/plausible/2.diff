diff --git a/tmp/16ef1271-2bea-4805-8b81-8acf1f627814_buggy.java b/tmp/2175ed73-3c80-4475-98a6-a43905d838d5_fixed.java
index 21f64c6..48e8e71 100644
--- a/tmp/16ef1271-2bea-4805-8b81-8acf1f627814_buggy.java
+++ b/tmp/2175ed73-3c80-4475-98a6-a43905d838d5_fixed.java
@@ -1,23 +1,28 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        if (Character.isHighSurrogate(input[offset]) && offset + 1 < length) {
+            char nextChar = input[offset + 1];
+            if (Character.isLowSurrogate(nextChar) && startChar != Character.toCodePoint(input[offset], nextChar))
+                offset++; // Move past the surrogate pair
+        } else if (startChar != input[offset])
+            continue;
+
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+        if (last <= length) {
+            for (int j = 1; i < last; i++, j++) {
+                if (Character.isHighSurrogate(input[i]) && i + 1 < length) {
+                    char nextChar = input[i + 1];
+                    if (Character.isLowSurrogate(nextChar) && seq.charAt(j) != Character.toCodePoint(input[i], nextChar))
+                        break;
+                    i++; // Move past the surrogate pair
+                } else if (seq.charAt(j) != input[i])
+                    break;
+            }
+            if (i == last) // Found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
