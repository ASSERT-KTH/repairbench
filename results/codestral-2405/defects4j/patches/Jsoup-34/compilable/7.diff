diff --git a/tmp/0518c760-b23d-4366-bd6a-348ce64fdde1_buggy.java b/tmp/d413f533-0a77-4040-b458-edb9108fe236_fixed.java
index 21f64c6..b2809c6 100644
--- a/tmp/0518c760-b23d-4366-bd6a-348ce64fdde1_buggy.java
+++ b/tmp/d413f533-0a77-4040-b458-edb9108fe236_fixed.java
@@ -1,23 +1,18 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
+        if (startChar != input[offset]) {
             while (++offset < length && startChar != input[offset]);
+            if (offset == length)
+                return -1;
+        }
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
+        if (last < length) {
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            if (i == last)
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
