diff --git a/tmp/9d8647a0-c90f-4d5d-aefe-1c8e4c4380f9_buggy.java b/tmp/5ddae49b-e2fc-4f0f-9797-b95a211c0e45_fixed.java
index 21f64c6..8a7ad71 100644
--- a/tmp/9d8647a0-c90f-4d5d-aefe-1c8e4c4380f9_buggy.java
+++ b/tmp/5ddae49b-e2fc-4f0f-9797-b95a211c0e45_fixed.java
@@ -1,23 +1,25 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
+    int seqLength = seq.length();
     for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        while (offset < length && startChar != input[offset]) {
+            offset++;
+        }
+
         int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+        int last = i + seqLength - 1;
+        if (last > length) {
+            return -1;
+        }
+
+        for (int j = 1; j < seqLength; j++, i++) {
+            if (seq.charAt(j) != input[i]) {
+                break;
+            }
+            if (i == last) { // found full sequence
                 return offset - pos;
             }
         }
+    }
     return -1;
 }
\ No newline at end of file
