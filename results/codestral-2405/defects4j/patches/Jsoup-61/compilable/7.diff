diff --git a/tmp/8ce8440a-6d68-4e7d-a051-be0fc9ecb564_buggy.java b/tmp/2cf2e386-18d1-47f5-979e-7648b1333650_fixed.java
index 139579d..9172830 100644
--- a/tmp/8ce8440a-6d68-4e7d-a051-be0fc9ecb564_buggy.java
+++ b/tmp/2cf2e386-18d1-47f5-979e-7648b1333650_fixed.java
@@ -1,43 +1,20 @@
-    // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
+    if (classAttr.length() == 0) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+    int offset = 0;
+    int position;
+    while ((position = classAttr.indexOf(' ', offset)) != -1) {
+        if (position - offset == className.length() && classAttr.regionMatches(true, offset, className, 0, className.length())) {
             return true;
         }
-                    inClass = false;
-                }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
+        offset = position + 1;
     }
 
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
+    if (classAttr.length() - offset == className.length() && classAttr.regionMatches(true, offset, className, 0, className.length())) {
+        return true;
     }
-
     return false;
 }
\ No newline at end of file
