diff --git a/tmp/a19767be-d066-4e2f-877e-275929d942d3_buggy.java b/tmp/a4024ca4-6e87-4d18-a70d-4a84061c8979_fixed.java
index 139579d..2f5125c 100644
--- a/tmp/a19767be-d066-4e2f-877e-275929d942d3_buggy.java
+++ b/tmp/a4024ca4-6e87-4d18-a70d-4a84061c8979_fixed.java
@@ -1,43 +1,40 @@
-    // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
     if (len == wantLen) {
         return className.equalsIgnoreCase(classAttr);
     }
 
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
                 if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
+                // Reset start for the remaining class checks
+                start = i + 1;
             }
         } else {
             if (!inClass) {
-                    // we're in a class name : keep the start of the substring
                 inClass = true;
                 start = i;
             }
         }
     }
 
-        // check the last entry
+    // Check the remaining class name if it exists.
     if (inClass && len - start == wantLen) {
         return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
 
     return false;
 }
\ No newline at end of file
