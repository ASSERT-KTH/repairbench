diff --git a/tmp/30da7b12-0ad4-451c-b0e8-97e15c1cf4c6_buggy.java b/tmp/a28c5649-a4aa-4eac-871d-b3d134c6a53d_fixed.java
index 99f4092..954c675 100644
--- a/tmp/30da7b12-0ad4-451c-b0e8-97e15c1cf4c6_buggy.java
+++ b/tmp/a28c5649-a4aa-4eac-871d-b3d134c6a53d_fixed.java
@@ -1,13 +1,24 @@
     /**
      * Creates a time period for the week in which the specified date/time
      * falls, calculated relative to the specified time zone.
      *
      * @param time  the date/time (<code>null</code> not permitted).
      * @param zone  the time zone (<code>null</code> not permitted).
+     * @param locale The locale for number formatting (<code>null</code> not permitted).
      *
      * @deprecated As of 1.0.7, use {@link #Week(Date, TimeZone, Locale)}.
      */
+    public Week(Date time, TimeZone zone, Locale locale) {
+        super(time, locale);
+        Pattern p = FastDateFormat.getInstance("EEEEE dd MMMM yyyy", locale);
+        TimeZone tz = zone;
+        this.calendar = Calendar.getInstance(tz, locale);
+        this.calendar.setMinimalDaysInFirstWeek(getMinimalDaysInFirstWeek(locale));
+        this.calendar.setTime(time);
+        this.firstMillisecond = getFirstMillisecond(calendar);
+        this.runningMillisecondTotal = time.getTime() - firstMillisecond;
+    }
+
     public Week(Date time, TimeZone zone) {
-        // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        this(time, zone, Locale.getDefault());
     }
\ No newline at end of file
