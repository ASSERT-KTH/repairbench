diff --git a/tmp/d03100b7-1e71-454b-a994-e67111fd7400_buggy.java b/tmp/c8b1d69a-3dac-4751-917a-e95df4fc243b_fixed.java
index 544303b..d74c150 100644
--- a/tmp/d03100b7-1e71-454b-a994-e67111fd7400_buggy.java
+++ b/tmp/c8b1d69a-3dac-4751-917a-e95df4fc243b_fixed.java
@@ -1,29 +1,18 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
-            basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+        int basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         if (basicRow != null) {
+            double coefficient = getEntry(basicRow, getRhsOffset());
             for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
+                    coefficients[j - getNumObjectiveFunctions()] = 0;
+                }
+            }
+            coefficients[i] = coefficient;
+        } else {
             coefficients[i] = 0;
         }
     }
-            }
-        }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
