diff --git a/tmp/f5da3ad6-433e-460c-a1f1-66ffd34269c4_buggy.java b/tmp/386797d6-25d9-49f1-9f21-624cee7614b5_fixed.java
index 544303b..45b49aa 100644
--- a/tmp/f5da3ad6-433e-460c-a1f1-66ffd34269c4_buggy.java
+++ b/tmp/386797d6-25d9-49f1-9f21-624cee7614b5_fixed.java
@@ -1,29 +1,28 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Integer basicRow;
+        double mostNegative = Double.POSITIVE_INFINITY;
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+            double tmp = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+            if (tmp < mostNegative) {
+                mostNegative = tmp;
+            }
+            // After getting the mostNegative value, calculate coefficients
+            coefficients[i] = tmp - (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
+                // Check for the condition that multiple variables can take a given value
+                boolean seenFirstNonZero = false;
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                    if (tableau.getEntry(basicRow, j) == 1 && !seenFirstNonZero) {
+                        seenFirstNonZero = true;
+                    } else if (tableau.getEntry(basicRow, j) == 1 && seenFirstNonZero) {
+                        // If we've seen a '1' already, set the current coefficient to 0
                         coefficients[i] = 0;
+                        break;
                     }
                 }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
