diff --git a/tmp/3e9ffd9b-c630-42f9-ab53-0fea05ff3447_buggy.java b/tmp/186f2dd0-97d4-4922-aaa5-1939dd2387eb_fixed.java
index fb2b020..9bbc245 100644
--- a/tmp/3e9ffd9b-c630-42f9-ab53-0fea05ff3447_buggy.java
+++ b/tmp/186f2dd0-97d4-4922-aaa5-1939dd2387eb_fixed.java
@@ -1,27 +1,21 @@
 @Override
 public void matchConstraint(ObjectType constraintObj) {
-    // We only want to match contraints on anonymous types.
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraintObj {{prop: (number|undefined)}}
-    // function f(constraintObj) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
+  // When the constraint object is a potential record type or function type,
+  // we want to get the property names from its template, and try to match
   // properties on this object.
-    if (constraintObj.isRecordType()) {
-      for (String prop : constraintObj.getOwnPropertyNames()) {
+  if (constraintObj.isRecordType() || constraintObj.isFunctionType()) {
+    for (String prop : getPropertiesFromTemplate(constraintObj)) {
       JSType propType = constraintObj.getPropertyType(prop);
       if (!isPropertyTypeDeclared(prop)) {
-          JSType typeToInfer = propType;
-          if (!hasProperty(prop)) {
-            typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)
-                .getLeastSupertype(propType);
+        JSType typeToInfer = hasProperty(prop) ? getPropertyType(prop) : propType;
+        boolean inferred = !hasProperty(prop);
+        defineInferredProperty(prop, typeToInfer, inferred ? null : getJSDocInfo().getDefinitionSite());
       }
-          defineInferredProperty(prop, typeToInfer, null);
     }
   }
 }
+
+private Collection<String> getPropertiesFromTemplate(ObjectType constraintObj) {
+  return constraintObj.isRecordType() ? constraintObj.getOwnPropertyNames() :
+      constraintObj.isFunctionType() ? Collections.singleton("this") : Collections.emptyList();
 }
\ No newline at end of file
