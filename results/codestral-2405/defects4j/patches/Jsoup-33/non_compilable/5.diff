diff --git a/tmp/b82f263e-3e10-4aed-995a-34461521d3d3_buggy.java b/tmp/b4157ecc-40f8-4e35-97e6-987fba8e5ad1_fixed.java
index dc93be3..f04eaf9 100644
--- a/tmp/b82f263e-3e10-4aed-995a-34461521d3d3_buggy.java
+++ b/tmp/b4157ecc-40f8-4e35-97e6-987fba8e5ad1_fixed.java
@@ -1,14 +1,12 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
-            return el;
-        }
-        
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+    Element el;
+    if (startTag.isSelfClosing() || Tag.isKnownTag(startTag.name()) && Parser.isKnownEmptyElementTag(startTag.name())) {
+        el = insertEmpty(startTag);
+        tokeniser.emit(new Token.EndTag(el.tagName()));
+    } else {
+        el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
+        stack.add(el);
+    }
     return el;
 }
\ No newline at end of file
