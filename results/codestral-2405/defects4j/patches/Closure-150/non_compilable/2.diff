diff --git a/tmp/809a01ba-07b4-49b4-bb57-ed0c92772c44_buggy.java b/tmp/fa6f4f2d-0049-4b61-af88-7025df89d598_fixed.java
index 800e6e1..31432b3 100644
--- a/tmp/809a01ba-07b4-49b4-bb57-ed0c92772c44_buggy.java
+++ b/tmp/fa6f4f2d-0049-4b61-af88-7025df89d598_fixed.java
@@ -1,32 +1,43 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
-    @Override public void visit(NodeTraversal t, Node n, Node parent) {
+@Override
+public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
-          if (parent.getType() == Token.NAME) {
+      if (parent.getType() == Token.NAME && parent.getParent().getType() != Token.GETPROP) {
+        defineNamespacedFunction(n, parent);
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
+
+private void defineNamespacedFunction(Node n, Node parent) {
+  JSDocInfo info = n.getJSDocInfo();
+  ObjectType type = new ObjectType(info != null ? info.getParameterCount() : 0, compiler.getNativeType(NATIVE_FUNCTION_TYPE));
+  Node rootNode = scope.getRootNode();
+  if (rootNode.getType() == Token.ASSIGN) {
+    Node grandParent = rootNode.getParent();
+    if (grandParent.getType() != Token.EXPR_RESULT) {
+      grandParent = grandParent.getLastChild();
+    }
+    if (grandParent == parent) {
+      ((ObjectType) findNameType(parent.getString(), scope.getParent()).getType()).addProperty(parent.getString(), type);
+      return;
+    }
+  }
+  ((ObjectType) findNameType(parent.getParent().getString(), scope).getType()).addProperty(parent.getString(), type);
+}
\ No newline at end of file
