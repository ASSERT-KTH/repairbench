diff --git a/tmp/48e6b567-6d95-4c14-b170-a2f7db0c5cf3_buggy.java b/tmp/2d11ad77-3437-479d-a217-eebc4ef5d70e_fixed.java
index 39c4220..6c99f29 100644
--- a/tmp/48e6b567-6d95-4c14-b170-a2f7db0c5cf3_buggy.java
+++ b/tmp/2d11ad77-3437-479d-a217-eebc4ef5d70e_fixed.java
@@ -1,21 +1,20 @@
 private final static int _parseIndex(String str) {
     final int len = str.length();
-        // [Issue#133]: beware of super long indexes; assume we never
-        // have arrays over 2 billion entries so ints are fine.
+    // Check for empty string and super long indexes
     if (len == 0 || len > 10) {
         return -1;
     }
-        for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+    // Check for non-numeric characters and decimal points
+    for (int i = 0; i < len; i++) {
+        char c = str.charAt(i);
         if (c > '9' || c < '0') {
             return -1;
         }
     }
-        if (len == 10) {
-            long l = NumberInput.parseLong(str);
-            if (l > Integer.MAX_VALUE) {
+    try {
+        int num = Integer.parseInt(str);
+        return num;
+    } catch (NumberFormatException e) {
         return -1;
     }
 }
\ No newline at end of file
-        return NumberInput.parseInt(str);
-    }
