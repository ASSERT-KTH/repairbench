diff --git a/tmp/3c97bbc1-db7b-4a5e-b818-4b6287ff122c_buggy.java b/tmp/c0e6cbf7-257a-4227-804f-ed9bad4774b4_fixed.java
index 111ba5e..853d6c8 100644
--- a/tmp/3c97bbc1-db7b-4a5e-b818-4b6287ff122c_buggy.java
+++ b/tmp/c0e6cbf7-257a-4227-804f-ed9bad4774b4_fixed.java
@@ -1,9 +1,31 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+        return areArraysEqual(o1, o2);
     } else {
         return o1.equals(o2);
     }
 }
+
+private static boolean areArraysEqual(Object o1, Object o2) {
+    if (o1 instanceof int[] && o2 instanceof int[]) {
+        return Arrays.equals((int[]) o1, (int[]) o2);
+    } else if (o1 instanceof double[] && o2 instanceof double[]) {
+        return Arrays.equals((double[]) o1, (double[]) o2);
+    } else if (o1 instanceof Object[] && o2 instanceof Object[]) {
+        Object[] l1 = (Object[]) o1;
+        Object[] l2 = (Object[]) o2;
+        if (l1.length != l2.length) {
+            return false;
+        }
+        for (int i = 0; i < l1.length; i++) {
+            if (!areEqual(l1[i], l2[i])) {
+                return false;
+            }
+        }
+        return true;
+    } else {
+        throw new RuntimeException("Unsupported array type comparison");
+    }
+}
\ No newline at end of file
