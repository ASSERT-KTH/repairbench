diff --git a/tmp/011e03f3-8221-4e19-a8f0-062875ec4662_buggy.java b/tmp/f278bd44-1795-4b4a-874f-7c094ef3539f_fixed.java
index 111ba5e..e442e43 100644
--- a/tmp/011e03f3-8221-4e19-a8f0-062875ec4662_buggy.java
+++ b/tmp/f278bd44-1795-4b4a-874f-7c094ef3539f_fixed.java
@@ -1,9 +1,53 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+        } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+            if (o1 instanceof int[] && o2 instanceof int[]) {
+                return areArraysEqual((int[]) o1, (int[]) o2);
+            } else if (o1 instanceof double[] && o2 instanceof double[]) {
+                return areArraysEqual((double[]) o1, (double[]) o2);
+            } else if (o1 instanceof Object[] && o2 instanceof Object[]) {
+                return areArraysEqual((Object[]) o1, (Object[]) o2);
+            } else {
+                return false;
+            }
         } else {
             return o1.equals(o2);
         }
     }
+
+    private static boolean areArraysEqual(int[] arr1, int[] arr2) {
+        if (arr1.length != arr2.length) {
+            return false;
+        }
+        for (int i = 0; i < arr1.length; i++) {
+            if (arr1[i] != arr2[i]) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    private static boolean areArraysEqual(double[] arr1, double[] arr2) {
+        if (arr1.length != arr2.length) {
+            return false;
+        }
+        for (int i = 0; i < arr1.length; i++) {
+            if (arr1[i] != arr2[i]) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    private static boolean areArraysEqual(Object[] arr1, Object[] arr2) {
+        if (arr1.length != arr2.length) {
+            return false;
+        }
+        for (int i = 0; i < arr1.length; i++) {
+            if (!Objects.equals(arr1[i], arr2[i])) {
+                return false;
+            }
+        }
+        return true;
+    }
\ No newline at end of file
