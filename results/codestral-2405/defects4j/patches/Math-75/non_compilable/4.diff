diff --git a/tmp/1628cb5e-19fa-41bb-a6aa-34a419b491ff_buggy.java b/tmp/8dae4466-0dfc-430e-afa8-7434d3bbf6d4_fixed.java
index 877a1a1..ed9ec69 100644
--- a/tmp/1628cb5e-19fa-41bb-a6aa-34a419b491ff_buggy.java
+++ b/tmp/8dae4466-0dfc-430e-afa8-7434d3bbf6d4_fixed.java
@@ -1,14 +1,24 @@
 /**
  * Returns the percentage of values that are equal to v
  * (as a proportion between 0 and 1).
  * <p>
  * Returns <code>Double.NaN</code> if no values have been added.</p>
  *
  * @param v the value to lookup
  * @return the proportion of values equal to v
+ * @throws IllegalArgumentException if v is not a Comparable
  * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
  */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    if (!(v instanceof Comparable)) {
+        throw new IllegalArgumentException("v must be a Comparable");
+    }
+    double count = 0;
+    for (Object value : data.keySet()) {
+        if (value.equals(v)) {
+            count += data.get(value);
+        }
+    }
+    return count / getSumFreq();
 }
\ No newline at end of file
