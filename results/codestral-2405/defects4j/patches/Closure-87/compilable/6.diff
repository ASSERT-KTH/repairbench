diff --git a/tmp/e51f34cc-e4bc-4bc4-8676-b65634f7e622_buggy.java b/tmp/f8ab30d3-0882-4535-86c5-e04429d29a02_fixed.java
index 19fd63e..a2bcbcb 100644
--- a/tmp/e51f34cc-e4bc-4bc4-8676-b65634f7e622_buggy.java
+++ b/tmp/f8ab30d3-0882-4535-86c5-e04429d29a02_fixed.java
@@ -1,24 +1,21 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
         if (n.hasOneChild()) {
             Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+            if (maybeExpr.getType() == Token.EXPR_RESULT) {
+                Node potentialCall = maybeExpr.getFirstChild();
+                if (potentialCall.getType() == Token.CALL) {
+                    Node function = potentialCall.getFirstChild();
+                    if (function.getType() == Token.GETPROP) {
+                        Node object = function.getFirstChild();
+                        if (object.getType() == Token.THIS) {
+                            return false;
+                        }
+                    }
+                }
+            }
             return NodeUtil.isExpressionNode(maybeExpr);
         }
     }
-
     return false;
 }
\ No newline at end of file
