diff --git a/tmp/9a4dbd71-980d-4506-a329-cd0b2af66398_buggy.java b/tmp/9b450c0a-0822-42e5-b83f-7907e0950a8b_fixed.java
index 19fd63e..4248cd4 100644
--- a/tmp/9a4dbd71-980d-4506-a329-cd0b2af66398_buggy.java
+++ b/tmp/9b450c0a-0822-42e5-b83f-7907e0950a8b_fixed.java
@@ -1,24 +1,13 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+        // Dont fold if this is an expression containing 'this'
+        if (maybeExpr.getSourceName().equals("this")) {
+          return false;
+        }
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
-
     return false;
   }
\ No newline at end of file
