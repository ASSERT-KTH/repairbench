diff --git a/tmp/4968c200-a004-4355-87e8-ee1dddfed84d_buggy.java b/tmp/5558137d-087e-4f53-b2c0-07c657fac656_fixed.java
index cc69d41..f8cf8d9 100644
--- a/tmp/4968c200-a004-4355-87e8-ee1dddfed84d_buggy.java
+++ b/tmp/5558137d-087e-4f53-b2c0-07c657fac656_fixed.java
@@ -1,29 +1,31 @@
-    /**
-     * Create an Option using the current settings and with
-     * the specified Option <code>char</code>.
-     *
-     * @param opt the <code>java.lang.String</code> representation
-     * of the Option
-     * @return the Option instance
-     * @throws IllegalArgumentException if <code>opt</code> is not
-     * a valid character.  See Option.
-     */
 public static Option create(String opt) throws IllegalArgumentException
 {
+    if (opt != null && opt.length() != 1) {
+        throw new IllegalArgumentException("opt '" + opt + "' must have exactly one character");
+    }
+
     // create the option
     Option option = new Option(opt, description);
 
-            // set the option properties
+    // reset the OptionBuilder properties
     option.setLongOpt(longopt);
     option.setRequired(required);
     option.setOptionalArg(optionalArg);
     option.setArgs(numberOfArgs);
     option.setType(type);
     option.setValueSeparator(valuesep);
     option.setArgName(argName);
-            // reset the OptionBuilder properties
-            OptionBuilder.reset();
+
+    // Reset the OptionBuilder properties
+    description = null;
+    longopt = null;
+    required = false;
+    optionalArg = false;
+    numberOfArgs = OptionalArgument.NO_ARGUMENT;
+    type = null;
+    valuesep = null;
+    argName = null;
 
     // return the Option instance
     return option;
 }
\ No newline at end of file
