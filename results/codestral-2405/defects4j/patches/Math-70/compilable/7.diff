diff --git a/tmp/2eef62d3-bb01-4fd1-b9e6-7603d4f82574_buggy.java b/tmp/f39a0fd7-79d5-4509-8ac5-bac0b9eb42c0_fixed.java
index d931bce..f11e4bd 100644
--- a/tmp/2eef62d3-bb01-4fd1-b9e6-7603d4f82574_buggy.java
+++ b/tmp/f39a0fd7-79d5-4509-8ac5-bac0b9eb42c0_fixed.java
@@ -1,5 +1,28 @@
 /** {@inheritDoc} */
 public double solve(final UnivariateRealFunction f, double min, double max, double initial)
     throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+    if (f == null) {
+        throw new IllegalArgumentException("Function must not be null");
+    }
+
+    double m = initial;
+    double y = f.value(m);
+
+    // This is a very basic implementation of the bisection method
+    // Please adjust it according to your needs
+    while (!closeEnough(y, 0.0)) {
+        if (y > 0) {
+            max = m;
+        } else {
+            min = m;
+        }
+        m = (min + max) / 2.0;
+        y = f.value(m);
+    }
+
+    return m;
+}
+
+private boolean closeEnough(double a, double b) {
+    return Math.abs(a - b) < getAbsoluteAccuracy();
 }
\ No newline at end of file
