diff --git a/tmp/b126b304-f322-451e-bcc0-f75873702485_buggy.java b/tmp/005a04d9-1ba6-446c-91ea-54dd35e934e4_fixed.java
index d931bce..1c864a3 100644
--- a/tmp/b126b304-f322-451e-bcc0-f75873702485_buggy.java
+++ b/tmp/005a04d9-1ba6-446c-91ea-54dd35e934e4_fixed.java
@@ -1,5 +1,44 @@
 /** {@inheritDoc} */
 public double solve(final UnivariateRealFunction f, double min, double max, double initial)
-        throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+    throws MaxIterationsExceededException, IllegalArgumentException, FunctionEvaluationException {
+    checkParameters(f, min, max, initial);
+    double start = min;
+    double end = max;
+    double midpoint;
+    double fm;
+    double fStart = f.value(min);
+    double fEnd = f.value(max);
+
+    if (fStart * fEnd > 0) {
+        throw new IllegalArgumentException("f(a) and f(b) must have different signs");
+    }
+
+    while (end - start > getAbsoluteAccuracy()) {
+        midpoint = (start + end) / 2.0;
+        fm = f.value(midpoint);
+        if (fm == 0.0) {
+            return midpoint;
+        }
+        if (fStart * fm > 0.0) {
+            start = midpoint;
+            fStart = fm;
+        } else {
+            end = midpoint;
+            fEnd = fm;
+        }
+    }
+    return (start + end) / 2.0;
+}
+
+protected void checkParameters(final UnivariateRealFunction f, double min, double max, double initial)
+        throws IllegalArgumentException {
+    if (f == null) {
+        throw new IllegalArgumentException("Function cannot be null");
+    }
+    if (min >= max) {
+        throw new IllegalArgumentException("Minimum value must be less than the maximum value");
+    }
+    if (initial < min || initial > max) {
+        throw new IllegalArgumentException("Initial value must be between minimum and maximum values");
+    }
 }
\ No newline at end of file
