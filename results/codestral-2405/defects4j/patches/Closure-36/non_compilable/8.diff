diff --git a/tmp/13c3ee3a-0960-4ae6-b463-ade2f0dc9265_buggy.java b/tmp/ceaf034a-efde-40fa-b212-395383168304_fixed.java
index 2955e62..633d53a 100644
--- a/tmp/13c3ee3a-0960-4ae6-b463-ade2f0dc9265_buggy.java
+++ b/tmp/ceaf034a-efde-40fa-b212-395383168304_fixed.java
@@ -1,66 +1,9 @@
-    /**
-     * @return true if the provided reference and declaration can be safely
-     *         inlined according to our criteria
-     */
-    private boolean canInline(
-        Reference declaration,
-        Reference initialization,
-        Reference reference) {
-      if (!isValidDeclaration(declaration)
-          || !isValidInitialization(initialization)
-          || !isValidReference(reference)) {
-        return false;
-      }
-
-      // If the value is read more than once, skip it.
-      // VAR declarations and EXPR_RESULT don't need the value, but other
-      // ASSIGN expressions parents do.
-      if (declaration != initialization &&
-          !initialization.getGrandparent().isExprResult()) {
-        return false;
-      }
-
-      // Be very conservative and do no cross control structures or
-      // scope boundaries
-      if (declaration.getBasicBlock() != initialization.getBasicBlock()
-          || declaration.getBasicBlock() != reference.getBasicBlock()) {
-        return false;
-      }
-
-      // Do not inline into a call node. This would change
-      // the context in which it was being called. For example,
-      //   var a = b.c;
-      //   a();
-      // should not be inlined, because it calls a in the context of b
-      // rather than the context of the window.
-      //   var a = b.c;
-      //   f(a)
-      // is ok.
+// issue 668: Don't inline singleton getter methods, compare the assigned value with the getNode included in the reference.
 Node value = initialization.getAssignedValue();
+Node referencedNode = reference.getNode();
 Preconditions.checkState(value != null);
-      if (value.isGetProp()
+if ((value.isFunction() || (referencedNode.isCall() && referencedNode.getFirstChild().matchesQualifiedName("goog.addSingletonGetter")))
     && reference.getParent().isCall()
     && reference.getParent().getFirstChild() == reference.getNode()) {
   return false;
 }
\ No newline at end of file
-
-      if (value.isFunction()) {
-        Node callNode = reference.getParent();
-        if (reference.getParent().isCall()) {
-          CodingConvention convention = compiler.getCodingConvention();
-          // Bug 2388531: Don't inline subclass definitions into class defining
-          // calls as this confused class removing logic.
-          SubclassRelationship relationship =
-              convention.getClassesDefinedByCall(callNode);
-          if (relationship != null) {
-            return false;
-          }
-
-          // issue 668: Don't inline singleton getter methods
-          // calls as this confused class removing logic.
-        }
-      }
-
-      return canMoveAggressively(value) ||
-          canMoveModerately(initialization, reference);
-    }
