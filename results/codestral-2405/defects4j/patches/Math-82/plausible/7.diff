diff --git a/tmp/abcbae9f-2c86-49c2-afbe-89425d071a33_buggy.java b/tmp/e3a21fa4-ba74-49c4-99f3-bb1953b0199a_fixed.java
index 220820e..fce7190 100644
--- a/tmp/abcbae9f-2c86-49c2-afbe-89425d071a33_buggy.java
+++ b/tmp/e3a21fa4-ba74-49c4-99f3-bb1953b0199a_fixed.java
@@ -1,22 +1,16 @@
-    /**
-     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
-     * @param tableau simple tableau for the problem
-     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
-     * @return row with the minimum ratio
-     */
 private Integer getPivotRow(final int col, final SimplexTableau tableau) {
     double minRatio = Double.MAX_VALUE;
     Integer minRatioPos = null;
     for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
         final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
         final double entry = tableau.getEntry(i, col);
         if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
-                final double ratio = rhs / entry;
+            final double ratio = rhs / Math.abs(entry); // Fixed the computation of ratio here.
             if (ratio < minRatio) {
                 minRatio = ratio;
                 minRatioPos = i;
             }
         }
     }
     return minRatioPos;
 }
\ No newline at end of file
