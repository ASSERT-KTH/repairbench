diff --git a/tmp/ed264349-c83a-45d2-bc57-a12dd4e01a23_buggy.java b/tmp/01594919-9395-48f1-8a68-05b263b6e4f4_fixed.java
index 70cafe0..e83da02 100644
--- a/tmp/ed264349-c83a-45d2-bc57-a12dd4e01a23_buggy.java
+++ b/tmp/01594919-9395-48f1-8a68-05b263b6e4f4_fixed.java
@@ -1,18 +1,21 @@
-    /**
-     * Checks whether the given column is basic.
-     * @param col index of the column to check
-     * @return the row that the variable is basic in.  null if the column is not basic
-     */
 private Integer getBasicRow(final int col) {
     Integer row = null;
+    boolean found = false;
+
     for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
-                } else {
+            if (found) {
+                // If we've already found a non-zero entry in this column,
+                // return null because the column is not basic.
                 return null;
+            } else {
+                row = i;
+                found = true;
             }
         }
     }
-        return row;
+
+    // If we found exactly one non-zero entry in this column, return the row index.
+    // Otherwise, return null because the column is not basic.
+    return found ? row : null;
 }
\ No newline at end of file
