diff --git a/tmp/0f17fee7-4b14-454f-ac1c-2b81136612e5_buggy.java b/tmp/0ce38222-07e8-4f60-9bb0-41b2fa248383_fixed.java
index 57f69c5..bc2b488 100644
--- a/tmp/0f17fee7-4b14-454f-ac1c-2b81136612e5_buggy.java
+++ b/tmp/0ce38222-07e8-4f60-9bb0-41b2fa248383_fixed.java
@@ -1,12 +1,14 @@
-  /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
-   */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // If the Node is a BLOCK, we need to ensure that a labeled FUNCTION or DO
+    // isn't generated when extraneous BLOCKs are skipped.
+    // A BLOCK is not a FUNCTION or DO, unless it has a single statement child that is.
+    if (n.getType() == Token.BLOCK) {
+        Node parent = n.getParent();
+        return parent != null && parent.getType() != Token.LABEL
+                && n.getChildCount() == 1
+                && (n.getFirstChild().getType() == Token.FUNCTION || n.getFirstChild().getType() == Token.DO);
+    }
+
+    // Otherwise, just check if the Node is a FUNCTION or DO.
+    return n.getType() == Token.FUNCTION || n.getType() == Token.DO;
 }
\ No newline at end of file
