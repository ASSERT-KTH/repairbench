diff --git a/tmp/9467ed4c-8638-470d-a341-cb952b058625_buggy.java b/tmp/183f8ec7-723a-4a96-97ae-190ef5a18738_fixed.java
index 5f8ac1a..8c45572 100644
--- a/tmp/9467ed4c-8638-470d-a341-cb952b058625_buggy.java
+++ b/tmp/183f8ec7-723a-4a96-97ae-190ef5a18738_fixed.java
@@ -1,34 +1,35 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2)
 {
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
-
-        if (p1 != null && p1.equals(p2)) {
+    if (p1 != null && p2 != null && p1.equals(p2)) {
         return 0;
     }
-
-        if (depth1 == 1) {
+    if (depth1 == 0 || depth2 == 0) {
+        if (p1 instanceof VariableNodePointer || p2 instanceof VariableNodePointer) {
+            return p1.hashCode() - p2.hashCode();
+        } else {
             throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
         }
+    }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
     }
-
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
