diff --git a/tmp/60fd3b42-d9c8-400a-a940-beda025c05f8_buggy.java b/tmp/8cc61a53-fec9-4a38-9870-a718cfbd0526_fixed.java
index 62e8ec8..2101957 100644
--- a/tmp/60fd3b42-d9c8-400a-a940-beda025c05f8_buggy.java
+++ b/tmp/8cc61a53-fec9-4a38-9870-a718cfbd0526_fixed.java
@@ -1,26 +1,36 @@
 /**
 * <p>If an {@link Option} exists for <code>token</code> then
 * set the current option and add the token to the processed
 * list.</p>
 *
 * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
 * is set then ignore the current token and add the remaining tokens
 * to the processed tokens list directly.</p>
 *
+* <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
+* is not set then throw an UnrecognizedOptionException.</p>
+*
 * @param token The current option token
-     * @param stopAtNonOption Specifies whether flattening should halt
+* @param stopAtNonOption Specifies whether parsing should halt
 * at the first non option.
+* @throws UnrecognizedOptionException if the token is not a recognized option and
+* <code>stopAtNonOption</code> is not set.
 */
 private void processOptionToken(String token, boolean stopAtNonOption)
+    throws UnrecognizedOptionException
 {
     if (options.hasOption(token))
     {
         currentOption = options.getOption(token);
         tokens.add(token);
     }
     else if (stopAtNonOption)
     {
         eatTheRest = true;
         tokens.add(token);
     }
+    else
+    {
+        throw new UnrecognizedOptionException("Unrecognized option: " + token);
+    }
 }
\ No newline at end of file
