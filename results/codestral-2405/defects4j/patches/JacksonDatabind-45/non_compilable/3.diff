diff --git a/tmp/b2865df8-8210-4656-ae44-86d5a5e1e80f_buggy.java b/tmp/3ae10c12-142b-45cc-a2dc-36d3c72276c0_fixed.java
index 0dbce00..e222631 100644
--- a/tmp/b2865df8-8210-4656-ae44-86d5a5e1e80f_buggy.java
+++ b/tmp/3ae10c12-142b-45cc-a2dc-36d3c72276c0_fixed.java
@@ -1,33 +1,35 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
-            if (format != null) {
+        if ((format != null && format.hasShape()) || (property.getAnnotation(JsonFormat.class) != null)) {
 
-            	// Simple case first: serialize as numeric timestamp?
+            if (format == null) {
+                format = JsonFormat.Value.empty();
+            }
+
+            // Check if the format shape is set explicitly
             JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
-                }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            if (shape == JsonFormat.Shape.STRING || !shape.isNumeric()) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
+            } else {
+                return withFormat(Boolean.TRUE, null);
             }
         }
     }
-        return this;
+    return this._customFormat(serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS));
 }
\ No newline at end of file
