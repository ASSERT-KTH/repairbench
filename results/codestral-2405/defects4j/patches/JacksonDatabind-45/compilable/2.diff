diff --git a/tmp/be5b2d5c-10c3-4cf6-afa9-f36ce671a041_buggy.java b/tmp/dbfed568-9a50-4ace-a5fb-9012fa24468f_fixed.java
index 0dbce00..d2a206f 100644
--- a/tmp/be5b2d5c-10c3-4cf6-afa9-f36ce671a041_buggy.java
+++ b/tmp/dbfed568-9a50-4ace-a5fb-9012fa24468f_fixed.java
@@ -1,33 +1,34 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
-                }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // Don't serialize as numeric timestamp, even if the user configuration is to do so
+            if (shape == JsonFormat.Shape.ANY || shape == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // Serialize as numeric timestamp?
+            if (shape.isNumeric()) {
+                return withFormat(Boolean.TRUE, null);
+            }
         }
     }
     return this;
 }
\ No newline at end of file
