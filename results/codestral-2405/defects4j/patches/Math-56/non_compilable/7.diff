diff --git a/tmp/a3ea8308-006c-4994-bd54-ffa837f4465a_buggy.java b/tmp/ff97fb84-1d86-45e1-ad51-01840e6df3f1_fixed.java
index 2608424..e42ff4a 100644
--- a/tmp/a3ea8308-006c-4994-bd54-ffa837f4465a_buggy.java
+++ b/tmp/ff97fb84-1d86-45e1-ad51-01840e6df3f1_fixed.java
@@ -1,39 +1,22 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
-        if (index < 0 ||
-            index >= totalSize) {
+        if (index < 0 || index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
-        int count = 0;
         for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
+            indices[i] = (index / uniCounterOffset[i]) % sizes[i];
         }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
-        }
-
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
+        indices[last] = index % sizes[last];
 
         return indices;
     }
\ No newline at end of file
