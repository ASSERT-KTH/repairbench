diff --git a/tmp/17b2cffc-0109-48c8-b236-e8088ae10621_buggy.java b/tmp/3706e343-9569-4b76-b6e6-a57428e206bd_fixed.java
index bcd80aa..948f786 100644
--- a/tmp/17b2cffc-0109-48c8-b236-e8088ae10621_buggy.java
+++ b/tmp/3706e343-9569-4b76-b6e6-a57428e206bd_fixed.java
@@ -1,25 +1,33 @@
     void processResponseHeaders(Map<String, List<String>> resHeaders) {
         for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
             String name = entry.getKey();
-                if (name == null)
-                    continue; // http/1.1 line
-
+            if (name == null) continue; // http/1.1 line
             List<String> values = entry.getValue();
             if (name.equalsIgnoreCase("Set-Cookie")) {
                 for (String value : values) {
-                        if (value == null)
-                            continue;
+                    if (value == null) continue;
                     TokenQueue cd = new TokenQueue(value);
                     String cookieName = cd.chompTo("=").trim();
                     String cookieVal = cd.consumeTo(";").trim();
-                        // ignores path, date, domain, validateTLSCertificates et al. req'd?
-                        // name not blank, value not null
-                        if (cookieName.length() > 0)
-                            cookie(cookieName, cookieVal);
+                    if (cookieName.length() > 0) cookie(cookieName, cookieVal);
                 }
             } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
-                    if (!values.isEmpty())
-                        header(name, values.get(0));
+                if (!values.isEmpty()) {
+                    if (!headers.containsKey(name)) {
+                        headers.put(name, values);
+                    } else {
+                        headers.get(name).addAll(values);
+                    }
+                }
+            }
+        }
+        // Combine multiple headers of the same name into comma-separated values
+        for (Map.Entry<String, List<String>> entry : headers.entrySet()) {
+            if (entry.getValue().size() > 1) {
+                String combinedValue = String.join(", ", entry.getValue());
+                header(entry.getKey(), combinedValue);
+            } else {
+                header(entry.getKey(), entry.getValue().get(0));
             }
         }
     }
\ No newline at end of file
