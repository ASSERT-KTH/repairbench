diff --git a/tmp/56cfef24-e366-46ed-8c89-c6468903dd05_buggy.java b/tmp/d85ac776-8db1-4f9f-9b11-ca1d16fd6acc_fixed.java
index bcd80aa..75bea97 100644
--- a/tmp/56cfef24-e366-46ed-8c89-c6468903dd05_buggy.java
+++ b/tmp/d85ac776-8db1-4f9f-9b11-ca1d16fd6acc_fixed.java
@@ -1,25 +1,25 @@
 void processResponseHeaders(Map<String, List<String>> resHeaders) {
     for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
         String name = entry.getKey();
         if (name == null)
-                    continue; // http/1.1 line
+            continue; // skip null headers
 
         List<String> values = entry.getValue();
+        if (values != null && !values.isEmpty()) {
             if (name.equalsIgnoreCase("Set-Cookie")) {
                 for (String value : values) {
                     if (value == null)
                         continue;
                     TokenQueue cd = new TokenQueue(value);
                     String cookieName = cd.chompTo("=").trim();
                     String cookieVal = cd.consumeTo(";").trim();
-                        // ignores path, date, domain, validateTLSCertificates et al. req'd?
-                        // name not blank, value not null
                     if (cookieName.length() > 0)
                         cookie(cookieName, cookieVal);
                 }
-                } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
-                    if (!values.isEmpty())
-                        header(name, values.get(0));
+            } else {
+                String combinedValues = String.join(", ", values);
+                header(name, combinedValues);
+            }
         }
     }
 }
\ No newline at end of file
