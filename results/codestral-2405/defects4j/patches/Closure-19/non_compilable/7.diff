diff --git a/tmp/a274e074-b54c-47bd-9601-46f70d63cd6f_buggy.java b/tmp/f4818957-2de0-40e7-bde4-67b7666cd3a1_fixed.java
index fa42cd9..d62f0f4 100644
--- a/tmp/a274e074-b54c-47bd-9601-46f70d63cd6f_buggy.java
+++ b/tmp/f4818957-2de0-40e7-bde4-67b7666cd3a1_fixed.java
@@ -1,27 +1,24 @@
-  /**
-   * Declares a refined type in {@code scope} for the name represented by
-   * {@code node}. It must be possible to refine the type of the given node in
-   * the given scope, as determined by {@link #getTypeIfRefinable}.
-   */
 protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
   switch (node.getType()) {
     case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
 
     case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
 
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
 
-        // "this" references aren't currently modeled in the CFG.
+    case Token.THIS:
+        scope.inferThisType(type);
+        break;
 
     default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
   }
 }
\ No newline at end of file
