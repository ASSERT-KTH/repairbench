diff --git a/tmp/8f15d383-77b7-423f-b51f-b2168ed314d7_buggy.java b/tmp/a45eaa83-5fb9-4844-bde7-caab31ec91fb_fixed.java
index fa42cd9..725d364 100644
--- a/tmp/8f15d383-77b7-423f-b51f-b2168ed314d7_buggy.java
+++ b/tmp/a45eaa83-5fb9-4844-bde7-caab31ec91fb_fixed.java
@@ -1,27 +1,24 @@
-  /**
-   * Declares a refined type in {@code scope} for the name represented by
-   * {@code node}. It must be possible to refine the type of the given node in
-   * the given scope, as determined by {@link #getTypeIfRefinable}.
-   */
 protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
   switch (node.getType()) {
     case Token.NAME:
       scope.inferSlotType(node.getString(), type);
       break;
 
     case Token.GETPROP:
+      if (node.isThis()) {
+        scope.inferThisType(type);
+      } else {
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
 
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
+      }
       break;
 
-        // "this" references aren't currently modeled in the CFG.
-
     default:
       throw new IllegalArgumentException("Node cannot be refined. \n" +
           node.toStringTree());
   }
 }
\ No newline at end of file
