diff --git a/tmp/7fcef585-2356-4876-9a74-c6e03bf0645e_buggy.java b/tmp/f7c0f693-34db-490a-967b-d43f543acee5_fixed.java
index eea9e73..a9eae51 100644
--- a/tmp/7fcef585-2356-4876-9a74-c6e03bf0645e_buggy.java
+++ b/tmp/f7c0f693-34db-490a-967b-d43f543acee5_fixed.java
@@ -1,41 +1,20 @@
-    /**
-     * <p>Checks if the CharSequence contains any character in the given
-     * set of characters.</p>
-     *
-     * <p>A <code>null</code> CharSequence will return <code>false</code>.
-     * A <code>null</code> or zero length search array will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.containsAny(null, *)                = false
-     * StringUtils.containsAny("", *)                  = false
-     * StringUtils.containsAny(*, null)                = false
-     * StringUtils.containsAny(*, [])                  = false
-     * StringUtils.containsAny("zzabyycdxx",['z','a']) = true
-     * StringUtils.containsAny("zzabyycdxx",['b','y']) = true
-     * StringUtils.containsAny("aba", ['z'])           = false
-     * </pre>
-     *
-     * @param cs  the CharSequence to check, may be null
-     * @param searchChars  the chars to search for, may be null
-     * @return the <code>true</code> if any of the chars are found,
-     * <code>false</code> if no match or null input
-     * @since 2.4
-     */
 public static boolean containsAny(CharSequence cs, char[] searchChars) {
     if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
         return false;
     }
-		int csLength = cs.length();
+
+    String str = cs.toString(); // Convert CharSequence to String
+    int csLength = str.codePointCount(0, str.length()); // Convert String to array of code points
     int searchLength = searchChars.length;
+
     for (int i = 0; i < csLength; i++) {
-			char ch = cs.charAt(i);
+        int codePoint = str.codePointAt(i);
         for (int j = 0; j < searchLength; j++) {
-				if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+            if (codePoint == searchChars[j]) {
                 return true;
             }
         }
     }
+
     return false;
 }
\ No newline at end of file
