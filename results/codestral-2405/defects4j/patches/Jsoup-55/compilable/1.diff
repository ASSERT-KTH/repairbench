diff --git a/tmp/f0c07152-f319-4d02-8f14-58ab6efadbc4_buggy.java b/tmp/954487c2-f45a-4141-96b1-037d465d184c_fixed.java
index ef76662..1f9a68c 100644
--- a/tmp/f0c07152-f319-4d02-8f14-58ab6efadbc4_buggy.java
+++ b/tmp/954487c2-f45a-4141-96b1-037d465d184c_fixed.java
@@ -1,17 +1,35 @@
 void read(Tokeniser t, CharacterReader r) {
     char c = r.consume();
     switch (c) {
         case '>':
             t.tagPending.selfClosing = true;
             t.emitTagPending();
             t.transition(Data);
             break;
+        case '/':
+            c = r.consume();
+            if (c == '>' || Character.isWhitespace(c)) {
+                t.tagPending.selfClosing = true;
+                t.emitTagPending();
+                t.transition(Data);
+                break;
+            } else {
+                // If not end of the tag, put the consumed character back and fall through
+                r.unconsume();
+                // Continue parsing the character as part of the attribute name
+            }
         case eof:
             t.eofError(this);
             t.transition(Data);
             break;
         default:
+            // If the character is not a '/', consume it as part of the attribute name
             t.error(this);
             t.transition(BeforeAttributeName);
+            // Re-consume the character
+            r.unconsume();
     }
+    // Process the character based on the new state
+    // This should be the usual flow of the function after handling the character,
+    // which has not changed and should be the same as before if this fix is applied correctly
 }
\ No newline at end of file
