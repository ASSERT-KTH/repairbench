diff --git a/tmp/5634f0a1-65cb-4f11-8973-f2a8c0642992_buggy.java b/tmp/d92277e0-540a-4d58-8880-d4e5eb7daf59_fixed.java
index ef76662..1eec6b1 100644
--- a/tmp/5634f0a1-65cb-4f11-8973-f2a8c0642992_buggy.java
+++ b/tmp/d92277e0-540a-4d58-8880-d4e5eb7daf59_fixed.java
@@ -1,17 +1,38 @@
 void read(Tokeniser t, CharacterReader r) {
     char c = r.consume();
     switch (c) {
+        case '/':
+            t.tagPending.selfClosing = true;
+            c = r.consume();
+            if (c == '>') {
+                t.emitTagPending();
+                t.transition(Data);
+            } else {
+                r.unconsume(); // put back the character, it's not a '>'
+            }
+            break;
         case '>':
             t.tagPending.selfClosing = true;
             t.emitTagPending();
             t.transition(Data);
             break;
         case eof:
             t.eofError(this);
             t.transition(Data);
             break;
         default:
-                    t.error(this);
+            // this case should handle the beginning of an attribute name
+            if (!isWhitespace(c) && c != '/' && c != '>' && c != '<' && c != '\u0000' && c != '\u000C') {
+                t.tagPending.appendTagName(c);
                 t.transition(BeforeAttributeName);
+            } else {
+                t.error(this);
             }
+            break;
+    }
+}
+
+// helper function to check for whitespaces
+private boolean isWhitespace(char c) {
+    return c == '\'' || c == '\"' || Character.isWhitespace(c);
 }
\ No newline at end of file
