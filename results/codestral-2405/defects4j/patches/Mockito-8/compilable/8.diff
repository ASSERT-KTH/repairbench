diff --git a/tmp/3336304d-bf62-433c-b6d7-72120da97fcb_buggy.java b/tmp/a69f1862-9569-4b47-be1a-e98786aa4881_fixed.java
index 42b58d0..3660cc2 100644
--- a/tmp/3336304d-bf62-433c-b6d7-72120da97fcb_buggy.java
+++ b/tmp/a69f1862-9569-4b47-be1a-e98786aa4881_fixed.java
@@ -1,19 +1,33 @@
-    protected void registerTypeVariablesOn(Type classType) {
-        if (!(classType instanceof ParameterizedType)) {
+protected void registerTypeVariablesOn(Type type) {
+    if (!(type instanceof ParameterizedType)) {
         return;
     }
-        ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    ParameterizedType parameterizedType = (ParameterizedType) type;
+    Type ownerType = parameterizedType.getOwnerType();
+    if (ownerType != null) {
+        registerTypeVariablesOn(ownerType);
+    }
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    Type rawType = parameterizedType.getRawType();
+    if (!(rawType instanceof Class<?>)) {
+        return;
+    }
+    TypeVariable<?>[] typeParameters = ((Class<?>) rawType).getTypeParameters();
+    if (actualTypeArguments.length != typeParameters.length) {
+        return;
+    }
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof ParameterizedType) {
+            registerTypeVariablesOn(actualTypeArgument);
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            contextualActualTypeParameters.put(typeParameter, (Type) contextualActualTypeParameters.get(actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
