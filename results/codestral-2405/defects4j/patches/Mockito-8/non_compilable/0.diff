diff --git a/tmp/8daddd83-5754-42e9-9973-61563d0b153d_buggy.java b/tmp/b1603082-1a2a-4cb4-aefe-46bbf954b758_fixed.java
index 42b58d0..5a8d0cc 100644
--- a/tmp/8daddd83-5754-42e9-9973-61563d0b153d_buggy.java
+++ b/tmp/b1603082-1a2a-4cb4-aefe-46bbf954b758_fixed.java
@@ -1,19 +1,31 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    if (! (rawType instanceof Class<?>)) {
+        return;
+    }
+    Class<?> rawClass = (Class<?>) rawType;
+    if (rawClass == parameterizedType) {
+        // Handle self-referencing type to prevent infinite recursion
+        // Bind the type variable to itself
+        TypeVariable typeParameter = rawClass.getTypeParameters()[0];
+        contextualActualTypeParameters.put(typeParameter, typeParameter);
+        return;
+    }
+    TypeVariable[] typeParameters = rawClass.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
-                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+            registerTypeVariablesOn(boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof ParameterizedType) {
+            registerTypeVariablesOn(actualTypeArgument);
+        }
         contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
     }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
-        }
 }
\ No newline at end of file
