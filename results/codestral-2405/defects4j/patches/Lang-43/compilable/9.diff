diff --git a/tmp/e0c21447-f9e9-4800-a1dd-abe647c21647_buggy.java b/tmp/a7938fec-822a-424c-bfde-f027677d00a3_fixed.java
index b6b11b6..7d2170a 100644
--- a/tmp/e0c21447-f9e9-4800-a1dd-abe647c21647_buggy.java
+++ b/tmp/a7938fec-822a-424c-bfde-f027677d00a3_fixed.java
@@ -1,38 +1,40 @@
 /**
  * Consume a quoted string, adding it to <code>appendTo</code> if
  * specified.
  *
  * @param pattern pattern to parse
  * @param pos current parse position
  * @param appendTo optional StringBuffer to append
  * @param escapingOn whether to process escaped quotes
  * @return <code>appendTo</code>
  */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
-        }
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
         if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+            appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
             pos.setIndex(i + ESCAPED_QUOTE.length());
             lastHold = pos.getIndex();
             continue;
         }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+        if (c[pos.getIndex()] == QUOTE) {
+            appendTo.append(c, lastHold, pos.getIndex() - lastHold);
+            pos.setIndex(pos.getIndex() + 1);
+            if (escapingOn && pos.getIndex() < pattern.length() && c[pos.getIndex()] == QUOTE) {
+                // Handle escaped quotes
+                appendTo.append(QUOTE);
+                pos.setIndex(pos.getIndex() + 1);
+            } else {
+                return appendTo;
             }
+            lastHold = pos.getIndex();
+            continue;
+        }
+        pos.setIndex(pos.getIndex() + 1);
     }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
