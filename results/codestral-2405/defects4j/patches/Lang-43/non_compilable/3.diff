diff --git a/tmp/39e7e28d-5f39-45af-9725-17c5df34a97c_buggy.java b/tmp/d1a6f351-5f38-4eb6-933f-bd59769762a9_fixed.java
index b6b11b6..b6bad76 100644
--- a/tmp/39e7e28d-5f39-45af-9725-17c5df34a97c_buggy.java
+++ b/tmp/d1a6f351-5f38-4eb6-933f-bd59769762a9_fixed.java
@@ -1,38 +1,22 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
-        }
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+        if (escapingOn && (i < pattern.length() - 1) && (c[i] == ESCAPE) && (c[i + 1] == QUOTE)) {
+            appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);
+            pos.setIndex(i + 2);
             lastHold = pos.getIndex();
             continue;
         }
         switch (c[pos.getIndex()]) {
             case QUOTE:
                 next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);
             default:
                 next(pos);
         }
     }
-        throw new IllegalArgumentException(
-                "Unterminated quoted string at position " + start);
+    throw new IllegalArgumentException("Unterminated quoted string at position " + start);
 }
\ No newline at end of file
