diff --git a/tmp/0937d426-76be-483f-aa92-ff22ef611806_buggy.java b/tmp/53d2f0f5-61b9-4716-89d9-616ea1155b49_fixed.java
index 29d025a..b86b9c8 100644
--- a/tmp/0937d426-76be-483f-aa92-ff22ef611806_buggy.java
+++ b/tmp/53d2f0f5-61b9-4716-89d9-616ea1155b49_fixed.java
@@ -1,13 +1,30 @@
 private void _verifySharing()
 {
     if (_hashShared) {
-            _hashArea = Arrays.copyOf(_hashArea, _hashArea.length);
-            _names = Arrays.copyOf(_names, _names.length);
+        int oldCapacity = _hashArea.length;
+        // Ensure _hashArea and _names are copied and have proper capacity
+        _hashArea = _expandCapacity(_hashArea);
+        _names = _expandCapacity(_names);
+        // Reset shard flag
         _hashShared = false;
-            // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure
-            //    we rehash as needed, as need-rehash flag is not copied from parent
+        // Need to ensure we rehash as needed, as need-rehash flag is not copied from parent
+        _needRehash = _needRehash || oldCapacity != _hashArea.length;
     }
+    // Check if rehash is needed
     if (_needRehash) {
         rehash();
     }
 }
+
+// Helper method to expand capacity of an array
+private String[] _expandCapacity(String[] array) {
+    int oldCapacity = array.length;
+    // Increase capacity to next power of 2
+    int newCapacity = oldCapacity == 0 ? 1 : oldCapacity << 1;
+    // Double check to ensure capacity does not exceed maximum array size
+    if (newCapacity < 0) {
+        newCapacity = Integer.MAX_VALUE;
+    }
+    // Copy contents of old array to new array
+    return Arrays.copyOf(array, newCapacity);
+}
\ No newline at end of file
