diff --git a/tmp/fdd08d12-c620-44b6-9aaf-ecf8cbf9a70e_buggy.java b/tmp/4740d51b-799a-4a64-9daa-fa338e3d0637_fixed.java
index d357c7e..10fa77d 100644
--- a/tmp/fdd08d12-c620-44b6-9aaf-ecf8cbf9a70e_buggy.java
+++ b/tmp/4740d51b-799a-4a64-9daa-fa338e3d0637_fixed.java
@@ -1,16 +1,17 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
 
-        while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
-            final InputStream stream = deferredBlockStreams.remove(0);
+    // The while loop should start from the second element (index 1) until the last element.
+    for (int i = 1; i < deferredBlockStreams.size(); i++) {
+        // In solid compression mode we need to decompress all leading folder streams to get
+        // access to an entry. We defer this until really needed so that entire blocks can be
+        // skipped without wasting time for decompression.
+        final InputStream stream = deferredBlockStreams.remove(i);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
