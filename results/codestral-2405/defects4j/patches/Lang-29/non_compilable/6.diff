diff --git a/tmp/7a7195d0-7cb3-4d86-80cc-e92824d28077_buggy.java b/tmp/fc9c0685-59a1-41e0-bd12-1fea97a75230_fixed.java
index 3ec995f..34b418e 100644
--- a/tmp/7a7195d0-7cb3-4d86-80cc-e92824d28077_buggy.java
+++ b/tmp/fc9c0685-59a1-41e0-bd12-1fea97a75230_fixed.java
@@ -1,26 +1,35 @@
-    /**
-     * <p>
-     * Converts the given Java version string to an <code>int</code>.
-     * </p>
-     * 
-     * <p>
-     * Example return values:
-     * </p>
-     * <ul>
-     * <li><code>120</code> for Java 1.2</li>
-     * <li><code>131</code> for Java 1.3.1</li>
-     * <li><code>160</code> for Java 1.6.0_20</li>
-     * </ul>
-     * 
-     * <p>
-     * Patch releases are not reported.
-     * </p>
-     * <p>
-     * This method is package private instead of private to support unit test invocation.
-     * </p>
-     * 
-     * @return the version, for example 131 for Java 1.3.1
-     */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+static int toJavaVersionInt(String version) {
+    if (version == null) {
+        return 0;
+    }
+    int[] versionArray = toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE);
+    return toVersionInt(versionArray);
+}
+
+private static int[] toJavaVersionIntArray(String version, int trimSize) {
+    int[] versionArray = new int[trimSize];
+    if (version == null) {
+        return versionArray;
+    }
+    Matcher m = JAVA_VERSION_PATTERN.matcher(version);
+    if (!m.find()) {
+        return versionArray;
+    }
+    String[] versionNumbers = m.group(1).split("\\.");
+    for (int i = 0; i < versionNumbers.length && i < trimSize; i++) {
+        try {
+            versionArray[i] = Integer.parseInt(versionNumbers[i]);
+        } catch (NumberFormatException e) {
+            versionArray[i] = 0;
+        }
+    }
+    return versionArray;
+}
+
+private static int toVersionInt(int[] versionParts) {
+    int version = 0;
+    for (int versionPart : versionParts) {
+        version = version * 100 + versionPart % 100;
+    }
+    return version;
 }
\ No newline at end of file
