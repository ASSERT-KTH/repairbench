diff --git a/tmp/42a2e708-635c-4bee-83e4-362d7f6844ee_buggy.java b/tmp/386097f8-b9de-4c5c-9027-cf41311979ce_fixed.java
index 3ec995f..a408fc4 100644
--- a/tmp/42a2e708-635c-4bee-83e4-362d7f6844ee_buggy.java
+++ b/tmp/386097f8-b9de-4c5c-9027-cf41311979ce_fixed.java
@@ -1,26 +1,16 @@
-    /**
-     * <p>
-     * Converts the given Java version string to an <code>int</code>.
-     * </p>
-     * 
-     * <p>
-     * Example return values:
-     * </p>
-     * <ul>
-     * <li><code>120</code> for Java 1.2</li>
-     * <li><code>131</code> for Java 1.3.1</li>
-     * <li><code>160</code> for Java 1.6.0_20</li>
-     * </ul>
-     * 
-     * <p>
-     * Patch releases are not reported.
-     * </p>
-     * <p>
-     * This method is package private instead of private to support unit test invocation.
-     * </p>
-     * 
-     * @return the version, for example 131 for Java 1.3.1
-     */
 static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+    if (version == null || version.isEmpty()) {
+        return 0;
+    }
+
+    String trimmedVersion = version.trim();
+    if (trimmedVersion.startsWith("JavaVM-")) {
+        trimmedVersion = trimmedVersion.substring("JavaVM-".length());
+    } else if (trimmedVersion.contains(" ")) {
+        trimmedVersion = trimmedVersion.substring(0, trimmedVersion.indexOf(" "));
+    } else if (trimmedVersion.contains("x")) {
+        trimmedVersion = trimmedVersion.substring(0, trimmedVersion.lastIndexOf("."));
+    }
+
+    return toVersionInt(toJavaVersionIntArray(trimmedVersion, JAVA_VERSION_TRIM_SIZE));
 }
\ No newline at end of file
