diff --git a/tmp/9951c916-9fb1-4af1-b4b7-ded30889d7f5_buggy.java b/tmp/afe7b371-27ed-497b-8de1-a58cdccfa6b8_fixed.java
index 388771b..3ece2e2 100644
--- a/tmp/9951c916-9fb1-4af1-b4b7-ded30889d7f5_buggy.java
+++ b/tmp/afe7b371-27ed-497b-8de1-a58cdccfa6b8_fixed.java
@@ -1,37 +1,29 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
-    public TimeSeries createCopy(int start, int end)
-            throws CloneNotSupportedException {
+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
+    double minY = Double.POSITIVE_INFINITY;
+    double maxY = Double.NEGATIVE_INFINITY;
     if (this.data.size() > 0) {
         for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
             TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
             try {
                 copy.add(clone);
-                }
-                catch (SeriesException e) {
+                double value = clone.getValue().doubleValue();
+                minY = Math.min(minY, value);
+                maxY = Math.max(maxY, value);
+            } catch (SeriesException e) {
                 e.printStackTrace();
             }
         }
     }
+    copy.minY = minY;
+    copy.maxY = maxY;
     return copy;
 }
\ No newline at end of file
