diff --git a/tmp/dc2eabda-dcab-4e45-b690-af50ff23aa6c_buggy.java b/tmp/f78b27ee-38c0-45fd-8fbc-765c080cb66d_fixed.java
index 6cfa79b..900c859 100644
--- a/tmp/dc2eabda-dcab-4e45-b690-af50ff23aa6c_buggy.java
+++ b/tmp/f78b27ee-38c0-45fd-8fbc-765c080cb66d_fixed.java
@@ -1,12 +1,12 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    if ((x - mean) / (standardDeviation * Math.sqrt(2.0)) > 20.0) {
+        // x is more than 20 standard deviations from the mean, return 1
+        return 1.0;
+    } else if ((x - mean) / (standardDeviation * Math.sqrt(2.0)) < -20.0) {
+        // x is less than 20 standard deviations from the mean, return 0
+        return 0.0;
+    } else {
+        // x is within 20 standard deviations from the mean, use the Erf function
+        return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));
+    }
 }
\ No newline at end of file
