diff --git a/tmp/7a6363ec-5b57-4b21-821a-9083fe1e9cc7_buggy.java b/tmp/63b2b387-34a7-471e-811d-368e5a72c845_fixed.java
index 6cfa79b..b533b8f 100644
--- a/tmp/7a6363ec-5b57-4b21-821a-9083fe1e9cc7_buggy.java
+++ b/tmp/63b2b387-34a7-471e-811d-368e5a72c845_fixed.java
@@ -1,12 +1,14 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
-    public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+public double cumulativeProbability(double x) {
+    double z = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+
+    // If z is more than 20 standard deviations from the mean,
+    // it effectively means that the probability is 0 or 1,
+    // so we can return 0 or 1 to avoid the convergence exception.
+    if (z > 20.0) {
+        return 1.0;
+    } else if (z < -20.0) {
+        return 0.0;
+    }
+
+    return 0.5 * (1.0 + Erf.erf(z));
 }
\ No newline at end of file
