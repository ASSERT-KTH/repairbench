diff --git a/tmp/388b9702-955b-4349-82b6-b90f5fcf9785_buggy.java b/tmp/d0ad3c7e-245e-4432-b4b0-7b34fdbaeab4_fixed.java
index 2d9cf24..4b1551d 100644
--- a/tmp/388b9702-955b-4349-82b6-b90f5fcf9785_buggy.java
+++ b/tmp/d0ad3c7e-245e-4432-b4b0-7b34fdbaeab4_fixed.java
@@ -1,33 +1,32 @@
 public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
 {
     // There are certain nasty classes that could cause problems, mostly
     // via default typing -- catch them here.
     final Class<?> raw = type.getRawClass();
     String full = raw.getName();
 
     main_check:
     do {
         if (_cfgIllegalClassNames.contains(full)) {
             break;
         }
 
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (full.startsWith(PREFIX_STRING)) {
+        if (full.startsWith(PREFIX_STRING) && !raw.isInterface()) { // Fix: added check for non-interfaces
             for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
                 String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
-                    if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
-                            || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
-                    }
+                if ("AbstractPointcutAdvisor".equals(name) || "AbstractApplicationContext".equals(name)) {
+                    // Fix: change to continue the loop instead of breaking the whole method
+                    // This allows other checks to still apply if the class is not a Spring framework type
+                    continue main_check;
                 }
             }
+            // Fix: added return statement to exit method if class passed all checks
             return;
+        }
+
+        break; // Fix: added this line to break the loop if class is not a Spring framework type
     } while (false);
 
     throw JsonMappingException.from(ctxt,
             String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
 }
\ No newline at end of file
