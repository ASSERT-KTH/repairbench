diff --git a/tmp/734ddcf1-ac5e-4c93-8a21-8eada3f010b1_buggy.java b/tmp/18ba4de0-26e9-4723-97a0-910eee3b0935_fixed.java
index 2d9cf24..3f8dc7c 100644
--- a/tmp/734ddcf1-ac5e-4c93-8a21-8eada3f010b1_buggy.java
+++ b/tmp/18ba4de0-26e9-4723-97a0-910eee3b0935_fixed.java
@@ -1,33 +1,29 @@
-    public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
-    {
-        // There are certain nasty classes that could cause problems, mostly
-        // via default typing -- catch them here.
+public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException {
     final Class<?> raw = type.getRawClass();
     String full = raw.getName();
 
-        main_check:
-        do {
-            if (_cfgIllegalClassNames.contains(full)) {
-                break;
+    if (raw != Object.class && raw.getInterfaces() != null) { // Check if class is not Object and interfaces are not null
+        for (Class<?> intf : raw.getInterfaces()) { // Iterate over the interfaces of the class
+            if (intf.getName().startsWith(PREFIX_STRING)) { // If the interface starts with the defined prefix
+                String name = intf.getSimpleName();
+                // As per [databind#1855], check for these specific Spring framework interfaces
+                if ("AbstractPointcutAdvisor".equals(name) || "AbstractApplicationContext".equals(name)) {
+                    break; // Break the check if the interface matches
+                }
+            }
+        }
     }
 
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (full.startsWith(PREFIX_STRING)) {
+    if (!_cfgIllegalClassNames.contains(full) && full.startsWith(PREFIX_STRING)) {
         for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
             String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
-                    if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
-                            || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
-                    }
+            if ("AbstractPointcutAdvisor".equals(name) || "AbstractApplicationContext".equals(name)) {
+                throw JsonMappingException.from(ctxt,
+                        String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
             }
         }
-            return;
-        } while (false);
-
+    } else {
         throw JsonMappingException.from(ctxt,
                 String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
     }
+}
\ No newline at end of file
