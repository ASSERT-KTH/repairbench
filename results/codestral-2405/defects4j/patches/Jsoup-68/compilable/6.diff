diff --git a/tmp/81246d77-0429-4771-8d22-b59ed4e92ab8_buggy.java b/tmp/96322dbe-d6b9-4f8f-bd2d-b0ff1c3b4004_fixed.java
index 511560e..bf8c67f 100644
--- a/tmp/81246d77-0429-4771-8d22-b59ed4e92ab8_buggy.java
+++ b/tmp/96322dbe-d6b9-4f8f-bd2d-b0ff1c3b4004_fixed.java
@@ -1,21 +1,22 @@
 private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
-        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
     int bottom = stack.size() - 1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
+    while (bottom >= 0 && stack.get(bottom).nodeName().equals("span")) {
+        bottom--;
     }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
+    if (bottom < 0) {
+        bottom = 0;
+    }
+    int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
 
     for (int pos = bottom; pos >= top; pos--) {
-            final String elName = stack.get(pos).nodeName();
+        String elName = stack.get(pos).nodeName();
         if (inSorted(elName, targetNames))
             return true;
         if (inSorted(elName, baseTypes))
             return false;
         if (extraTypes != null && inSorted(elName, extraTypes))
             return false;
     }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+
     return false;
 }
\ No newline at end of file
