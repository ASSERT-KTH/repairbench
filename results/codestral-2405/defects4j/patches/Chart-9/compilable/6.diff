diff --git a/tmp/0f2623c1-6431-4503-9690-82257fe22fe8_buggy.java b/tmp/518ba76e-3b7f-46f3-8e0b-835056207a7b_fixed.java
index b4af58a..8b9fb86 100644
--- a/tmp/0f2623c1-6431-4503-9690-82257fe22fe8_buggy.java
+++ b/tmp/518ba76e-3b7f-46f3-8e0b-835056207a7b_fixed.java
@@ -1,53 +1,34 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the first time period to copy (<code>null</code> not
-     *         permitted).
-     * @param end  the last time period to copy (<code>null</code> not
-     *         permitted).
-     *
-     * @return A time series containing a copy of this time series from start
-     *         until end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
 public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
         throws CloneNotSupportedException {
 
     if (start == null) {
         throw new IllegalArgumentException("Null 'start' argument.");
     }
     if (end == null) {
         throw new IllegalArgumentException("Null 'end' argument.");
     }
     if (start.compareTo(end) > 0) {
         throw new IllegalArgumentException(
                 "Requires start on or before end.");
     }
-        boolean emptyRange = false;
+
     int startIndex = getIndex(start);
+    int endIndex = getIndex(end);
+
     if (startIndex < 0) {
-            startIndex = -(startIndex + 1);
+        startIndex = -(startIndex + 1);  // this is first item AFTER start period
         if (startIndex == this.data.size()) {
-                emptyRange = true;  // start is after last data item
+            return (TimeSeries) super.clone();    // start is after last data item
         }
     }
-        int endIndex = getIndex(end);
-        if (endIndex < 0) {             // end period is not in original series
+
+    if (endIndex < 0) {
         endIndex = -(endIndex + 1);      // this is first item AFTER end period
         endIndex = endIndex - 1;         // so this is last item BEFORE end
-        }
         if (endIndex < 0) {
-            emptyRange = true;
+            return (TimeSeries) super.clone();    // end is before first data item
         }
-        if (emptyRange) {
-            TimeSeries copy = (TimeSeries) super.clone();
-            copy.data = new java.util.ArrayList();
-            return copy;
     }
-        else {
+
     return createCopy(startIndex, endIndex);
 }
\ No newline at end of file
-
-    }
