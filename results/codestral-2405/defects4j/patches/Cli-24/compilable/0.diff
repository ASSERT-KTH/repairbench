diff --git a/tmp/998e4560-b589-4409-aeea-3784d6f2d723_buggy.java b/tmp/c3504848-9eaa-4691-a68a-aad34d1ecfe2_fixed.java
index 229b3e7..7356f9d 100644
--- a/tmp/998e4560-b589-4409-aeea-3784d6f2d723_buggy.java
+++ b/tmp/c3504848-9eaa-4691-a68a-aad34d1ecfe2_fixed.java
@@ -1,55 +1,22 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
-        int pos = findWrapPos(text, width, 0);
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
+    int pos;
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
+    while ((pos = findWrapPos(text, width, 0)) != -1) {
+        if (pos == nextLineTabStop - 1) {
+            // find the last space character before nextLineTabStop
+            pos = text.lastIndexOf(' ', nextLineTabStop);
+            if (pos == -1) {
+                pos = nextLineTabStop;
+            }
         }
+
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
+        text = createPadding(nextLineTabStop) + text.substring(pos).trim();
     }
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
+    if (!text.isEmpty()) {
         sb.append(text);
+    }
 
     return sb;
 }
\ No newline at end of file
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
