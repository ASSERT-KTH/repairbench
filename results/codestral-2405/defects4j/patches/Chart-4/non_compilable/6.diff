diff --git a/tmp/b1586273-6c67-450e-970a-28260c80fe7c_buggy.java b/tmp/e630eb05-aa40-4d4c-8633-62a35e661127_fixed.java
index e7bb994..d061554 100644
--- a/tmp/b1586273-6c67-450e-970a-28260c80fe7c_buggy.java
+++ b/tmp/e630eb05-aa40-4d4c-8633-62a35e661127_fixed.java
@@ -1,102 +1,70 @@
-    /**
-     * Returns the range for the specified axis.
-     *
-     * @param axis  the axis.
-     *
-     * @return The range.
-     */
 public Range getDataRange(ValueAxis axis) {
 
     Range result = null;
-        List mappedDatasets = new ArrayList();
-        List includedAnnotations = new ArrayList();
-        boolean isDomainAxis = true;
+    List<XYDataset> mappedDatasets = new ArrayList<>();
+    List<XYAnnotation> includedAnnotations = new ArrayList<>();
+    boolean isDomainAxis = false;
 
     // is it a domain axis?
     int domainIndex = getDomainAxisIndex(axis);
     if (domainIndex >= 0) {
         isDomainAxis = true;
-            mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
-                    new Integer(domainIndex)));
+        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(domainIndex));
         if (domainIndex == 0) {
-                // grab the plot's annotations
-                Iterator iterator = this.annotations.iterator();
-                while (iterator.hasNext()) {
-                    XYAnnotation annotation = (XYAnnotation) iterator.next();
-                    if (annotation instanceof XYAnnotationBoundsInfo) {
-                        includedAnnotations.add(annotation);
-                    }
-                }
+            includedAnnotations.addAll(getAnnotationsForDomainAxis(0));
         }
     }
 
     // or is it a range axis?
     int rangeIndex = getRangeAxisIndex(axis);
     if (rangeIndex >= 0) {
         isDomainAxis = false;
-            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(
-                    new Integer(rangeIndex)));
+        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(rangeIndex));
         if (rangeIndex == 0) {
-                Iterator iterator = this.annotations.iterator();
-                while (iterator.hasNext()) {
-                    XYAnnotation annotation = (XYAnnotation) iterator.next();
+            includedAnnotations.addAll(getAnnotationsForRangeAxis(0));
+        }
+    }
+
+    // Calculate the union of the ranges for the mapped datasets
+    for (XYDataset dataset : mappedDatasets) {
+        if (dataset != null) {
+            XYItemRenderer renderer = getRendererForDataset(dataset);
+            Range bounds;
+            if (isDomainAxis) {
+                bounds = renderer != null ? renderer.findDomainBounds(dataset) : DatasetUtilities.findDomainBounds(dataset);
+            }
+            else {
+                bounds = renderer != null ? renderer.findRangeBounds(dataset) : DatasetUtilities.findRangeBounds(dataset);
+            }
+            // Avoid adding a null range
+            if (bounds != null) {
+                result = result == null ? bounds : Range.combine(result, bounds);
+            }
+
+            // Add annotations for the dataset to the included annotations list
+            if (renderer != null) {
+                Collection<XYAnnotation> annotations = renderer.getAnnotations();
+                for (XYAnnotation annotation : annotations) {
                     if (annotation instanceof XYAnnotationBoundsInfo) {
                         includedAnnotations.add(annotation);
                     }
                 }
             }
         }
-
-        // iterate through the datasets that map to the axis and get the union
-        // of the ranges.
-        Iterator iterator = mappedDatasets.iterator();
-        while (iterator.hasNext()) {
-            XYDataset d = (XYDataset) iterator.next();
-            if (d != null) {
-                XYItemRenderer r = getRendererForDataset(d);
-                if (isDomainAxis) {
-                    if (r != null) {
-                        result = Range.combine(result, r.findDomainBounds(d));
-                    }
-                    else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findDomainBounds(d));
-                    }
-                }
-                else {
-                    if (r != null) {
-                        result = Range.combine(result, r.findRangeBounds(d));
-                    }
-                    else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findRangeBounds(d));
-                    }
     }
 
-                    Collection c = r.getAnnotations();
-                    Iterator i = c.iterator();
-                    while (i.hasNext()) {
-                        XYAnnotation a = (XYAnnotation) i.next();
-                        if (a instanceof XYAnnotationBoundsInfo) {
-                            includedAnnotations.add(a);
-                        }
-                    }
-            }
-        }
-
-        Iterator it = includedAnnotations.iterator();
-        while (it.hasNext()) {
-            XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();
-            if (xyabi.getIncludeInDataBounds()) {
-                if (isDomainAxis) {
-                    result = Range.combine(result, xyabi.getXRange());
-                }
-                else {
-                    result = Range.combine(result, xyabi.getYRange());
+    // Calculate the union of the ranges for the included annotations
+    for (XYAnnotation annotation : includedAnnotations) {
+        if (annotation instanceof XYAnnotationBoundsInfo
+                && ((XYAnnotationBoundsInfo) annotation).getIncludeInDataBounds()) {
+            Range bounds = isDomainAxis ? ((XYAnnotationBoundsInfo) annotation).getXRange()
+                                        : ((XYAnnotationBoundsInfo) annotation).getYRange();
+            // Avoid adding a null range
+            if (bounds != null) {
+                result = result == null ? bounds : Range.combine(result, bounds);
             }
         }
     }
 
     return result;
-
 }
\ No newline at end of file
