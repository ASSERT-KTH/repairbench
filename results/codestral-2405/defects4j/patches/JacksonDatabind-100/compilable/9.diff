diff --git a/tmp/13d2bf2a-6506-41f8-bfe7-61ff823518e1_buggy.java b/tmp/b8200a7d-8494-472c-9a61-4f004f97e0ca_fixed.java
index fc8c302..f9bda7d 100644
--- a/tmp/13d2bf2a-6506-41f8-bfe7-61ff823518e1_buggy.java
+++ b/tmp/b8200a7d-8494-472c-9a61-4f004f97e0ca_fixed.java
@@ -1,23 +1,33 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // Modified to handle text nodes as well
+        if (n.isTextual()) {
+            String text = n.textValue();
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException e) {
+                throw new JsonParseException(null, "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage());
+            }
+        }
+        // The original binaryValue() function
+        else {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
+    }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
