diff --git a/tmp/7aa77e64-f763-4f0e-97c8-9ce94adf7943_buggy.java b/tmp/9d36e182-221d-46f5-933a-4090d17ecfcb_fixed.java
index fc8c302..832423e 100644
--- a/tmp/7aa77e64-f763-4f0e-97c8-9ce94adf7943_buggy.java
+++ b/tmp/9d36e182-221d-46f5-933a-4090d17ecfcb_fixed.java
@@ -1,23 +1,24 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
-        if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
+    if (n != null && n.isTextual()) {
+        // Try to decode the text node as Base64
+        String text = n.textValue();
+        if (b64variant.usesPadding() && text.length() % 4 != 0) {
+            // If padding is used and the length is not a multiple of 4, it's not valid Base64
+            return null;
+        }
+        try {
+            byte[] data = b64variant.decode(text);
             return data;
-            }
-            if (n.isPojo()) {
-                Object ob = ((POJONode) n).getPojo();
-                if (ob instanceof byte[]) {
-                    return (byte[]) ob;
-                }
+        } catch (IllegalArgumentException e) {
+            // If an exception is thrown, it means the text is not valid Base64
+            return null;
         }
     }
-        // otherwise return null to mark we have no binary content
+    // Otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
