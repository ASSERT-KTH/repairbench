diff --git a/tmp/6df858ee-17ab-4f4b-8c80-62bd044e301c_buggy.java b/tmp/b3a2706d-e3ee-4f8b-b4cd-7f9c262a98d0_fixed.java
index fc8c302..348466c 100644
--- a/tmp/6df858ee-17ab-4f4b-8c80-62bd044e301c_buggy.java
+++ b/tmp/b3a2706d-e3ee-4f8b-b4cd-7f9c262a98d0_fixed.java
@@ -1,23 +1,30 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
-        if (n != null) {
+    if (n != null && n.isTextual()) {
+        // decode from base64
+        try {
+            return b64variant.decode(n.textValue());
+        } catch (IllegalArgumentException e) {
+            throw new JsonParseException(null, "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage());
+        }
+    } else if (n != null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
