diff --git a/tmp/0f812cab-4b64-4e22-8c91-d6cbefb4b822_buggy.java b/tmp/c38d9e3a-d2b8-4fc3-ab14-1bcf59c1904e_fixed.java
index 4bbd561..43f856a 100644
--- a/tmp/0f812cab-4b64-4e22-8c91-d6cbefb4b822_buggy.java
+++ b/tmp/c38d9e3a-d2b8-4fc3-ab14-1bcf59c1904e_fixed.java
@@ -1,37 +1,36 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        if (index < input.length() - 2 && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
             char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
+            if ((start < input.length()) && (firstChar == 'x' || firstChar == 'X')) {
                 start++;
                 isHex = true;
             }
 
             int end = start;
-            while(input.charAt(end) != ';') {
+            while (end < input.length() && input.charAt(end) != ';') {
                 end++;
             }
 
             int entityValue;
             try {
                 if (isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch (NumberFormatException nfe) {
                 return 0;
             }
 
-                out.write(entityValue);
+            out.write(Character.toChars(entityValue));
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
\ No newline at end of file
