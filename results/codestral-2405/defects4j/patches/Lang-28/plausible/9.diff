diff --git a/tmp/1409e0fa-5880-46b0-b714-c850a086e558_buggy.java b/tmp/f52c4f5f-df5c-402a-b766-cdb6e8ee5e40_fixed.java
index 4bbd561..afe4414 100644
--- a/tmp/1409e0fa-5880-46b0-b714-c850a086e558_buggy.java
+++ b/tmp/f52c4f5f-df5c-402a-b766-cdb6e8ee5e40_fixed.java
@@ -1,37 +1,35 @@
-    /**
-     * {@inheritDoc}
-     */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    if(index < input.length() - 1 && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
+        if(start < input.length()) {
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
 
             int end = start;
-            while(input.charAt(end) != ';') {
+            while(end < input.length() && input.charAt(end) != ';') {
                 end++;
             }
 
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
-            } catch(NumberFormatException nfe) {
-                return 0;
-            }
-
-                out.write(entityValue);
+                char[] chars = Character.toChars(entityValue);
+                out.write(chars);
                 return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+            } catch(NumberFormatException nfe) {
+                // fall through
+            }
+        }
     }
     return 0;
 }
\ No newline at end of file
