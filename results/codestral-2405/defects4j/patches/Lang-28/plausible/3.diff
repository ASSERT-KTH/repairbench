diff --git a/tmp/496af261-3b49-453a-9576-412694f88503_buggy.java b/tmp/8a2f9bb7-10de-48ce-819c-d9b88951703e_fixed.java
index 4bbd561..588a22e 100644
--- a/tmp/496af261-3b49-453a-9576-412694f88503_buggy.java
+++ b/tmp/8a2f9bb7-10de-48ce-819c-d9b88951703e_fixed.java
@@ -1,37 +1,47 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    if(index < input.length() - 2 && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
         char firstChar = input.charAt(start);
         if(firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while(end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if(end == input.length()) {
+            return 0; // ';' not found, return 0 to indicate no translation was done
+        }
+
         int entityValue;
         try {
             if(isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch(NumberFormatException nfe) {
-                return 0;
+            return 0; // Number format exception, return 0 to indicate no translation was done
         }
 
+        if (entityValue < Character.MIN_SUPPLEMENTARY_CODE_POINT) {
             out.write(entityValue);
+        } else {
+            out.write(Character.highSurrogate(entityValue));
+            out.write(Character.lowSurrogate(entityValue));
+        }
+
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
-        return 0;
+
+    return 0; // Indicate no translation was done
 }
\ No newline at end of file
