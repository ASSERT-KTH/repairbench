diff --git a/tmp/0b02aae1-64e5-43a6-b064-5cb4a4af9005_buggy.java b/tmp/e52ca1ba-18bd-4e96-ac72-22035bec0b56_fixed.java
index b529d33..f03cab5 100644
--- a/tmp/0b02aae1-64e5-43a6-b064-5cb4a4af9005_buggy.java
+++ b/tmp/e52ca1ba-18bd-4e96-ac72-22035bec0b56_fixed.java
@@ -1,29 +1,16 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
 private char getMappingCode(final String str, final int index) {
     // map() throws IllegalArgumentException
     final char mappedChar = this.map(str.charAt(index));
     // HW rule check
     if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
-                final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+        final char preChar = str.charAt(index - 1);
+        if ('H' == preChar || 'W' == preChar) {
+            final char prePreChar = str.charAt(index - 2);
+            final char prePreCode = this.map(prePreChar);
+            if (prePreCode == mappedChar && prePreCode != this.map(preChar)) {
                 return 0;
             }
         }
     }
     return mappedChar;
 }
\ No newline at end of file
