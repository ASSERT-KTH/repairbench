diff --git a/tmp/f0b0e606-388b-44a8-81a0-0b05e0c334f0_buggy.java b/tmp/4d60b80a-8d52-4d17-a923-8167b74de559_fixed.java
index b529d33..e3fedc5 100644
--- a/tmp/f0b0e606-388b-44a8-81a0-0b05e0c334f0_buggy.java
+++ b/tmp/4d60b80a-8d52-4d17-a923-8167b74de559_fixed.java
@@ -1,29 +1,14 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
 private char getMappingCode(final String str, final int index) {
-        // map() throws IllegalArgumentException
-        final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
+    char mappedChar = this.map(str.charAt(index));
     if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
-                final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
-                    return 0;
+        char prevChar = str.charAt(index - 1);
+        if ('H' == prevChar || 'W' == prevChar) {
+            char prePrevChar = str.charAt(index - 2);
+            char prevCode = this.map(prePrevChar);
+            if (prevCode == mappedChar || 'H' == prePrevChar || 'W' == prePrevChar) {
+                mappedChar = '0';
             }
         }
     }
     return mappedChar;
 }
\ No newline at end of file
