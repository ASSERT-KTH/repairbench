diff --git a/tmp/fc287f8e-1cb2-4ea6-a45d-cf513804280b_buggy.java b/tmp/8c48c169-8f36-4110-9df5-0b7b7cd0cc20_fixed.java
index 4b163f6..2287b85 100644
--- a/tmp/fc287f8e-1cb2-4ea6-a45d-cf513804280b_buggy.java
+++ b/tmp/8c48c169-8f36-4110-9df5-0b7b7cd0cc20_fixed.java
@@ -1,28 +1,26 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
 public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+    long totalSkipped = 0;
+    int toRead = 0;
+    byte[] skipBuffer = new byte[8192]; // use a buffer of reasonable size
+
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
-                break;
-            }
+        if (skipped > 0) {
+            totalSkipped += skipped;
             numToSkip -= skipped;
+        } else if (skipped == 0) {
+            // some InputStream implementations may return 0 when skipping 0 bytes!
+            toRead = (int) Math.min(8192, numToSkip);
+            if (input.read(skipBuffer, 0, toRead) < 0) {
+                // EOF has been reached, return
+                break;
+            }
+            totalSkipped += toRead;
+            numToSkip -= toRead;
+        } else {
+            throw new IOException("Invalid number of bytes skipped: " + skipped);
+        }
     }
 
-        return available - numToSkip;
+    return totalSkipped;
 }
\ No newline at end of file
