diff --git a/tmp/d625981f-d03e-43c8-bb83-c9a3787b57e5_buggy.java b/tmp/cf6e91d6-aba4-416f-9c8a-d8f07c7c88a8_fixed.java
index bc80637..f74127b 100644
--- a/tmp/d625981f-d03e-43c8-bb83-c9a3787b57e5_buggy.java
+++ b/tmp/cf6e91d6-aba4-416f-9c8a-d8f07c7c88a8_fixed.java
@@ -1,33 +1,34 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
+                // Break only if the deserializer is not a modifier
+                if (!(deser instanceof BeanDeserializerModifier.KeyDeserializerModifier)) {
                     break;
                 }
             }
         }
+    }
+    // Apply modifier for enums
+    if (deser != null && type.isEnumType() && _factoryConfig.hasDeserializerModifiers()) {
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+        }
+    }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
-                for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
-                    deser = mod.modifyKeyDeserializer(config, type, deser);
-                }
-            }
-        }
     return deser;
 }
\ No newline at end of file
