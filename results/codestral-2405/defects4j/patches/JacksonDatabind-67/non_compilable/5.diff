diff --git a/tmp/6f394b82-4a96-46f7-be00-d3d67d174bf5_buggy.java b/tmp/df498339-bb5c-497c-817f-6023056ec7c3_fixed.java
index bc80637..75f1675 100644
--- a/tmp/6f394b82-4a96-46f7-be00-d3d67d174bf5_buggy.java
+++ b/tmp/df498339-bb5c-497c-817f-6023056ec7c3_fixed.java
@@ -1,33 +1,40 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
-        if (deser == null) {
-            if (type.isEnumType()) {
+    // Here we'll check if the current deserializer was created by
+    // modifier or not. If it was, then no need to create a new one.
+    boolean enumDeserModified = deser != null
+        && deser.getClass() != StdKeyDeserializers.EnumKeyDeserializer.class;
+    // If the deserializer was not modified, that means the default one was used.
+    // In that case, let's check if we're dealing with an enum.
+    if (!enumDeserModified && type.isEnumType()) {
         return _createEnumKeyDeserializer(ctxt, type);
     }
+    // Only use the findStringBasedKeyDeserializer if the deserializer
+    // was not modified and was not an enum.
+    if (!enumDeserModified && deser == null) {
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
-        // and then post-processing
+    // Then post-processing
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
     return deser;
 }
\ No newline at end of file
