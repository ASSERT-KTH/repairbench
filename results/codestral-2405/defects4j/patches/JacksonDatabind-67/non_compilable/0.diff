diff --git a/tmp/dad7bf7c-22eb-4cd2-a5cf-2f64d21a889b_buggy.java b/tmp/9247edf3-6b82-4c91-8339-504c62b14ad0_fixed.java
index bc80637..0bb99d9 100644
--- a/tmp/dad7bf7c-22eb-4cd2-a5cf-2f64d21a889b_buggy.java
+++ b/tmp/9247edf3-6b82-4c91-8339-504c62b14ad0_fixed.java
@@ -1,33 +1,44 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
                 return _createEnumKeyDeserializer(ctxt, type);
             }
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
         // and then post-processing
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
+                    if (type.isEnumType()) {
+                        deser = new KeyDeserializer() {
+                            @Override
+                            public Object deserializeKey(String key, DeserializationContext ctxt)
+                                    throws IOException
+                            {
+                                Class<? extends Enum> rawClass = (Class<Enum<?>>) type.getRawClass();
+                                return Enum.valueOf(rawClass, key.toLowerCase());
+                            }
+                        };
+                    }
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
