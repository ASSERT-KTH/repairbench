diff --git a/tmp/3a829591-36ab-4808-8696-30e7b6313991_buggy.java b/tmp/5fbf1c74-392b-428a-a8da-9eeaf50e2edd_fixed.java
index bc80637..39bf027 100644
--- a/tmp/3a829591-36ab-4808-8696-30e7b6313991_buggy.java
+++ b/tmp/5fbf1c74-392b-428a-a8da-9eeaf50e2edd_fixed.java
@@ -1,33 +1,40 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // Fix:
+    // Move this block of code before the custom key deserializer is set
+    // to ensure that the EnumDeserializerModifier has a chance to modify it.
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
-            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
+        // Fix:
+        // Instead of finding a generic string-based key deserializer, we
+        // should allow any custom deserializers set via the DeserializerModifier
+        // to be used here. This will give the EnumDeserializerModifier
+        // a chance to provide a custom key deserializer.
+        // deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
     // and then post-processing
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
     return deser;
 }
\ No newline at end of file
