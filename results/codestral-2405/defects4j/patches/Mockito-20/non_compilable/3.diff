diff --git a/tmp/b650e2ad-e70e-45bc-b6e4-30663be8565e_buggy.java b/tmp/39c0c6fb-c5e7-470b-86ed-92174312d583_fixed.java
index f9a9b5b..5d0c2fb 100644
--- a/tmp/b650e2ad-e70e-45bc-b6e4-30663be8565e_buggy.java
+++ b/tmp/39c0c6fb-c5e7-470b-86ed-92174312d583_fixed.java
@@ -1,30 +1,38 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
-            mockInstance = classInstantiator.instantiate(mockedProxyType);
+        MockCreationSettings.ConstructorInvocation invocationSettings = settings.getConstructorInvocation();
+        Object outerInstance = invocationSettings.getOuterInstance();
+        if (outerInstance == null && mockedProxyType.getEnclosingClass() != null && !Modifier.isStatic(mockedProxyType.getModifiers())) {
+            throw new MockitoException("Attempting to mock a non-static inner class without setting the outer instance.");
+        }
+        if (Modifier.isAbstract(mockedProxyType.getModifiers()) && mockedProxyType.getDeclaredConstructor() == null) {
+            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSimpleName() + "'. It's an abstract class without a zero-argument constructor.");
+        }
+        mockInstance = classInstantiator.instantiate(mockedProxyType, invocationSettings);
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ),cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
         throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
