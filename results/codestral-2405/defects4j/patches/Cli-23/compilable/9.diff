diff --git a/tmp/54983a05-bf07-49e9-8da0-15a915dcae70_buggy.java b/tmp/4fc7affa-4f85-4ab1-970b-01d8369d374c_fixed.java
index 227a4ef..1cf6969 100644
--- a/tmp/54983a05-bf07-49e9-8da0-15a915dcae70_buggy.java
+++ b/tmp/4fc7affa-4f85-4ab1-970b-01d8369d374c_fixed.java
@@ -1,48 +1,23 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                             int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
+    while (pos != -1) {
+        sb.append(rtrim(text.substring(0, pos)));
+        text = text.substring(pos).trim();
 
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+        if (!text.isEmpty()) {
+            sb.append(defaultNewLine).append(createPadding(nextLineTabStop));
             pos = findWrapPos(text, width, 0);
+        } else {
+            pos = -1;
+        }
+    }
 
-            if (pos == -1)
-            {
+    if (!text.isEmpty()) {
         sb.append(text);
+    }
 
     return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
 }
\ No newline at end of file
