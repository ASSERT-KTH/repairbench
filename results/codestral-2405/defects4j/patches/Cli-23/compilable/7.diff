diff --git a/tmp/7c9ee868-df5b-4be2-8190-1d7be9922b2f_buggy.java b/tmp/39a3c570-bb37-4f57-bb54-115f827f8c9d_fixed.java
index 227a4ef..4adad22 100644
--- a/tmp/7c9ee868-df5b-4be2-8190-1d7be9922b2f_buggy.java
+++ b/tmp/39a3c570-bb37-4f57-bb54-115f827f8c9d_fixed.java
@@ -1,48 +1,27 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
+    int lastPos = -1;
 
-        if (pos == -1)
+    while (pos != -1)
     {
-            sb.append(rtrim(text));
-
-            return sb;
+        if (pos == lastPos)
+        {
+            throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]. Original text: " + text);
         }
+
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // all following lines must be padded with nextLineTabStop space characters
         final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            int lastPos = pos;
         text = padding + text.substring(pos).trim();
+
+        lastPos = pos;
         pos = findWrapPos(text, width, 0);
+    }
 
-            if (pos == -1)
-            {
     sb.append(text);
 
     return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
 }
\ No newline at end of file
