diff --git a/tmp/5488ee56-54bd-46dd-b245-33d4bc53222a_buggy.java b/tmp/3ef07e88-7a29-4494-b5db-a4028b0767a7_fixed.java
index 39dd8e7..371ff23 100644
--- a/tmp/5488ee56-54bd-46dd-b245-33d4bc53222a_buggy.java
+++ b/tmp/3ef07e88-7a29-4494-b5db-a4028b0767a7_fixed.java
@@ -1,30 +1,36 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
-                while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+            while (!tq.isEmpty() && !tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
-            tq.consumeWhitespace();
+    } else {
+        // Assign key to value if an "=" was not found
+        value = key;
+        key = "";
     }
+    tq.consumeWhitespace();
     if (key.length() != 0)
         return Attribute.createFromEncoded(key, value);
-        else {
+    else if (value.length() != 0) {
+        // If key is empty but value is not, it's a standalone attribute
+        return Attribute.createFromEncoded(value, "");
+    } else {
         tq.consume();
-                
         return null;
     }
 }
\ No newline at end of file
