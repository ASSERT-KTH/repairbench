diff --git a/tmp/9587897d-ab3a-48cb-ae26-5ac912ec9088_buggy.java b/tmp/2dfa12e4-cfe8-4f4a-8394-65f12da8364c_fixed.java
index 39dd8e7..1a4a877 100644
--- a/tmp/9587897d-ab3a-48cb-ae26-5ac912ec9088_buggy.java
+++ b/tmp/2dfa12e4-cfe8-4f4a-8394-65f12da8364c_fixed.java
@@ -1,30 +1,32 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
-                value = tq.chompTo(SQ);
+            value = tq.chompTo(SQ).orElse("");
         } else if (tq.matchChomp(DQ)) {
-                value = tq.chompTo(DQ);
+            value = tq.chompTo(DQ).orElse("");
         } else {
             StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    if (!key.isEmpty()) {
         return Attribute.createFromEncoded(key, value);
-        else {
+    } else {
+        // If the key is empty, consume the next character to avoid an infinite loop.
+        if (!tq.isEmpty()) {
             tq.consume();
+        }
 
         return null;
     }
 }
\ No newline at end of file
