diff --git a/tmp/36d4726b-727b-4658-bc34-de5a4c88ea2c_buggy.java b/tmp/4aa10d72-f69f-427a-9edf-187b49b379b4_fixed.java
index a7d4ff8..760ed9a 100644
--- a/tmp/36d4726b-727b-4658-bc34-de5a4c88ea2c_buggy.java
+++ b/tmp/4aa10d72-f69f-427a-9edf-187b49b379b4_fixed.java
@@ -1,28 +1,35 @@
 void addNumber(double x) {
-    // This is not pretty printing. This is to prevent misparsing of x- -4 as
-    // x--4 (which is a syntax error).
     char prev = getLastChar();
-    boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
+    if (Double.doubleToLongBits(x) == Double.doubleToLongBits(-0.0)) {
+        // Negative zero case
+        if (prev == '-') {
             add(" ");
         }
-
-    if ((long) x == x && !negativeZero) {
+        add("-0.0");
+    } else if (x < 0 && prev == '-') {
+        // Prevent misparsing of x- -4 as x--4 (which is a syntax error).
+        add(" ");
+        add(Double.toString(x));
+    } else {
+        if ((long) x == x) {
             long value = (long) x;
             long mantissa = value;
             int exp = 0;
+
             if (Math.abs(x) >= 100) {
                 while (mantissa / 10 * Math.pow(10, exp + 1) == value) {
                     mantissa /= 10;
                     exp++;
                 }
             }
+
             if (exp > 2) {
                 add(Long.toString(mantissa) + "E" + Integer.toString(exp));
             } else {
                 add(Long.toString(value));
             }
         } else {
             add(String.valueOf(x));
         }
     }
+}
\ No newline at end of file
