diff --git a/tmp/66021172-dbb2-40a3-8b54-b78f944d32e1_buggy.java b/tmp/81f6f1a8-701f-41f9-a19c-53bf04e4d97c_fixed.java
index 1a63a66..bbde0fc 100644
--- a/tmp/66021172-dbb2-40a3-8b54-b78f944d32e1_buggy.java
+++ b/tmp/81f6f1a8-701f-41f9-a19c-53bf04e4d97c_fixed.java
@@ -1,21 +1,16 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+
+    // Creating a new array with the old superInterfaces and the subclass's interfaces
+    HashSet<JavaType> newSuperInterfaces = new HashSet<>(_superInterfaces);
+    for(JavaType interfaceType : _bindings.getRegisteredSubtypes(subclass)) {
+        newSuperInterfaces.add(interfaceType);
+    }
+
+    return new SimpleType(subclass, _bindings, this, newSuperInterfaces, _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
