diff --git a/tmp/b27a682a-3056-4fc1-9cf4-0ab4ba5de7d4_buggy.java b/tmp/81720234-bc35-4da9-bb30-3eddb56c96f8_fixed.java
index 3c69e10..8025c57 100644
--- a/tmp/b27a682a-3056-4fc1-9cf4-0ab4ba5de7d4_buggy.java
+++ b/tmp/81720234-bc35-4da9-bb30-3eddb56c96f8_fixed.java
@@ -1,27 +1,15 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
 private double calculateAsymptoticPValue(final double Umin,
                                          final int n1,
                                          final int n2)
     throws ConvergenceException, MaxCountExceededException {
 
-        final int n1n2prod = n1 * n2;
-
     // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
-        final double EU = n1n2prod / 2.0;
-        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
+    double EU = n1 * n2 / 2.0;
+    double VarU = n1 * n2 * (n1 + n2 + 1) / 12.0;
 
-        final double z = (Umin - EU) / FastMath.sqrt(VarU);
+    double z = (Umin - EU) / FastMath.sqrt(VarU);
 
-        final NormalDistribution standardNormal = new NormalDistribution(0, 1);
+    NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
     return 2 * standardNormal.cumulativeProbability(z);
 }
\ No newline at end of file
