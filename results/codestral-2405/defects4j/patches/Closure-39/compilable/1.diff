diff --git a/tmp/80d0556b-61f1-4461-82ba-cbbbd15ee385_buggy.java b/tmp/0e8dab74-7e4e-4645-8cdb-36be73c2255e_fixed.java
index e4d90e7..bc4b663 100644
--- a/tmp/80d0556b-61f1-4461-82ba-cbbbd15ee385_buggy.java
+++ b/tmp/0e8dab74-7e4e-4645-8cdb-36be73c2255e_fixed.java
@@ -1,45 +1,46 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
         return getReferenceName();
-    } else if (prettyPrint) {
-      // Don't pretty print recursively.
-      prettyPrint = false;
-
-      // Use a tree set so that the properties are sorted.
-      Set<String> propertyNames = Sets.newTreeSet();
-      for (ObjectType current = this;
-           current != null && !current.isNativeObjectType() &&
-               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
-           current = current.getImplicitPrototype()) {
-        propertyNames.addAll(current.getOwnPropertyNames());
-      }
-
+    } else {
         StringBuilder sb = new StringBuilder();
         sb.append("{");
 
+        int propertiesToPrint;
+        if (forAnnotations) {
+            propertiesToPrint = Integer.MAX_VALUE;
+        } else {
+            propertiesToPrint = MAX_PRETTY_PRINTED_PROPERTIES;
+        }
+
         int i = 0;
-      for (String property : propertyNames) {
+        for (ObjectType current = this;
+             current != null && !current.isNativeObjectType() && i < propertiesToPrint;
+             current = current.getImplicitPrototype()) {
+            for (String property : current.getOwnPropertyNames()) {
                 if (i > 0) {
                     sb.append(", ");
                 }
 
                 sb.append(property);
                 sb.append(": ");
-        sb.append(getPropertyType(property).toString());
+
+                JSType propertyType = current.getPropertyType(property);
+                if (propertyType instanceof RecordType) {
+                    sb.append(((RecordType) propertyType).toStringHelper(forAnnotations));
+                } else {
+                    sb.append(propertyType.toString());
+                }
 
                 ++i;
-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+                if (i == propertiesToPrint) {
                     sb.append(", ...");
                     break;
                 }
             }
+        }
 
         sb.append("}");
-
-      prettyPrint = true;
         return sb.toString();
-    } else {
-      return "{...}";
     }
 }
\ No newline at end of file
