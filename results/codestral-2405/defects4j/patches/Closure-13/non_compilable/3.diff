diff --git a/tmp/e91e728a-2dea-4c3e-b7e6-8e7199ef9466_buggy.java b/tmp/3c0e9504-ac04-4250-bfd5-a1ecb679318f_fixed.java
index b5d94e0..a61ca97 100644
--- a/tmp/e91e728a-2dea-4c3e-b7e6-8e7199ef9466_buggy.java
+++ b/tmp/3c0e9504-ac04-4250-bfd5-a1ecb679318f_fixed.java
@@ -1,26 +1,26 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
+      boolean shouldRetraverse = false;
       Node c = node.getFirstChild();
       while(c != null) {
         traverse(c);
+        if (shouldRetraverse(c)) { // Assuming this function checks if the child node should be revisited
+          shouldRetraverse = true;
+        }
         Node next = c.getNext();
         c = next;
       }
 
       visit(node);
       visits++;
 
       Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+    } while (shouldRetraverse || shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
