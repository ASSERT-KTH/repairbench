diff --git a/tmp/c9ecb2fd-f238-4829-9a36-4496ee1f4cbf_buggy.java b/tmp/fce42d42-cc56-4037-bba1-9cb4ae76e318_fixed.java
index b5d94e0..f080cfd 100644
--- a/tmp/c9ecb2fd-f238-4829-9a36-4496ee1f4cbf_buggy.java
+++ b/tmp/fce42d42-cc56-4037-bba1-9cb4ae76e318_fixed.java
@@ -1,26 +1,19 @@
-  private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
-    if (!shouldVisit(node)) {
+private void traverse(Node node, int depth) {
+  if (!shouldVisit(node) || depth > MAX_DEPTH) {
       return;
   }
 
-    int visits = 0;
-    do {
   Node c = node.getFirstChild();
   while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
-        c = next;
+    traverse(c, depth + 1);
+    c = c.getNext();
   }
 
   visit(node);
-      visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+  if (shouldRetraverse(node)) {
+    traverse(node, depth);
+  }
 
   exitNode(node);
 }
\ No newline at end of file
