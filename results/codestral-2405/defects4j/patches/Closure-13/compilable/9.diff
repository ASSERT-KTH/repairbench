diff --git a/tmp/3ff72a23-2f78-4e58-8cf2-8afe4ba9febe_buggy.java b/tmp/49ef4bf5-bc9f-4251-b501-c867f68e025d_fixed.java
index b5d94e0..44c116d 100644
--- a/tmp/3ff72a23-2f78-4e58-8cf2-8afe4ba9febe_buggy.java
+++ b/tmp/49ef4bf5-bc9f-4251-b501-c867f68e025d_fixed.java
@@ -1,26 +1,29 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
-    if (!shouldVisit(node)) {
-      return;
-    }
-
   int visits = 0;
+  Node currentNode = node;
   do {
-      Node c = node.getFirstChild();
+    while (!shouldVisit(currentNode)) {
+      currentNode = currentNode.getNext();
+      if (currentNode == null) {
+        return;
+      }
+    }
+
+    Node c = currentNode.getFirstChild();
     while(c != null) {
       traverse(c);
-        Node next = c.getNext();
-        c = next;
+      c = c.getNext();
     }
 
-      visit(node);
+    visit(currentNode);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+    Preconditions.checkState(visits < 10000, "too many iterations");
+  } while (shouldRetraverse(currentNode));
 
-    exitNode(node);
+  exitNode(currentNode);
 }
\ No newline at end of file
