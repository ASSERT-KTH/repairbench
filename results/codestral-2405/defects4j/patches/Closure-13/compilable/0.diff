diff --git a/tmp/5d4c76d7-b4f0-4b9c-be31-ead7555e810a_buggy.java b/tmp/6742f3b1-6674-4ec6-aaec-69fc5f5196b9_fixed.java
index b5d94e0..b854afe 100644
--- a/tmp/5d4c76d7-b4f0-4b9c-be31-ead7555e810a_buggy.java
+++ b/tmp/6742f3b1-6674-4ec6-aaec-69fc5f5196b9_fixed.java
@@ -1,26 +1,23 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
-    if (!shouldVisit(node)) {
-      return;
-    }
-
-    int visits = 0;
+    boolean retraverse;
     do {
+        retraverse = false;
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
-        Node next = c.getNext();
-        c = next;
+            if (shouldRetraverse(c)) {
+                retraverse = true;
+            }
+            c = c.getNext();
         }
 
+        if (shouldVisit(node)) {
             visit(node);
-      visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+            if (shouldRetraverse(node)) {
+                retraverse = true;
+            }
+        }
+    } while (retraverse);
 
     exitNode(node);
 }
\ No newline at end of file
