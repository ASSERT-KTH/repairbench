diff --git a/tmp/98b2864a-38a6-40af-a83b-bb5ef56c94e8_buggy.java b/tmp/df5fd891-2e2f-4253-b2cf-2ca71c57bbfd_fixed.java
index 56b2d66..efcaa98 100644
--- a/tmp/98b2864a-38a6-40af-a83b-bb5ef56c94e8_buggy.java
+++ b/tmp/df5fd891-2e2f-4253-b2cf-2ca71c57bbfd_fixed.java
@@ -1,45 +1,39 @@
-    /**
-     * Removes the phase 1 objective function, positive cost non-artificial variables,
-     * and the non-basic artificial variables from this tableau.
-     */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
-        List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+    List<Integer> columnsToDrop = new ArrayList<>();
+    columnsToDrop.add(0);  // Objective function
 
     // positive cost non-artificial variables
-        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
-            final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+    for (int i = getNumObjectiveFunctions(); i < tableau.getColumnDimension(); i++) {
+        if (tableau.getEntry(0, i) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
-        for (int i = 0; i < getNumArtificialVariables(); i++) {
-          int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
-            columnsToDrop.add(col);
+    for (int i = getArtificialVariableOffset(); i < getArtificialVariableOffset() + getNumArtificialVariables(); i++) {
+        if (getBasicRow(i) == null) {
+            columnsToDrop.add(i);
         }
     }
 
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
+    double[][] matrix = new double[tableau.getRowDimension() - 1][tableau.getColumnDimension() - columnsToDrop.size()];
+    for (int i = 1; i < tableau.getRowDimension(); i++) {
         int col = 0;
-          for (int j = 0; j < getWidth(); j++) {
+        for (int j = 0; j < tableau.getColumnDimension(); j++) {
             if (!columnsToDrop.contains(j)) {
                 matrix[i - 1][col++] = tableau.getEntry(i, j);
             }
         }
     }
 
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
         columnLabels.remove((int) columnsToDrop.get(i));
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file
