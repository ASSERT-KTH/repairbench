diff --git a/tmp/a764a019-aa9d-44c1-9974-8584c1d60e21_buggy.java b/tmp/b91ad2aa-3573-4fb9-bf3e-07aa188df0a0_fixed.java
index 1c53d31..49c1cf6 100644
--- a/tmp/a764a019-aa9d-44c1-9974-8584c1d60e21_buggy.java
+++ b/tmp/b91ad2aa-3573-4fb9-bf3e-07aa188df0a0_fixed.java
@@ -1,20 +1,25 @@
-  @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
+    TypeAdapter<?> typeAdapter = null;
+    try {
         if (TypeAdapter.class.isAssignableFrom(value)) {
             Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
             typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
         } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
             Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
             typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
                 .construct()
                 .create(gson, fieldType);
         } else {
             throw new IllegalArgumentException(
                 "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
         }
+    } catch (Exception e) {
+        throw new RuntimeException("Error creating TypeAdapter.", e);
+    }
+    if (typeAdapter != null) {
         typeAdapter = typeAdapter.nullSafe();
+    }
     return typeAdapter;
 }
\ No newline at end of file
