diff --git a/tmp/703048da-05d9-429e-872d-72fd0072c851_buggy.java b/tmp/5532907c-745e-4c07-9751-96aacb9cfce3_fixed.java
index f650982..6a19921 100644
--- a/tmp/703048da-05d9-429e-872d-72fd0072c851_buggy.java
+++ b/tmp/5532907c-745e-4c07-9751-96aacb9cfce3_fixed.java
@@ -1,42 +1,44 @@
-    /**
-     * Compares two values
-     */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right)
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
         if (l instanceof InitialContext || l instanceof SelfContext) {
             l = ((EvalContext) l).getSingleNodePointer();
         }
 
         if (r instanceof InitialContext || r instanceof SelfContext) {
             r = ((EvalContext) r).getSingleNodePointer();
         }
 
         if (l instanceof Collection) {
             l = ((Collection) l).iterator();
         }
 
         if (r instanceof Collection) {
             r = ((Collection) r).iterator();
         }
 
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
             return contains((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
             return contains((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
+            Iterator iterL = (Iterator) l;
+            Iterator iterR = (Iterator) r;
+            while (iterL.hasNext() && iterR.hasNext()) {
+                if (!equal(iterL.next(), iterR.next())) {
+                    return false;
                 }
-        return equal(l, r);
+            }
+            return !(iterL.hasNext() || iterR.hasNext());
+        }
+
+        // If neither l nor r is an Iterator, compare them directly
+        return Objects.equals(l, r);
     }
\ No newline at end of file
