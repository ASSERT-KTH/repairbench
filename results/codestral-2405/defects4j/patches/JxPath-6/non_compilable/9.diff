diff --git a/tmp/e729355d-e723-461c-9264-ea2a5ecca464_buggy.java b/tmp/cbf08422-399a-45de-875c-57ffc6f7523e_fixed.java
index f650982..55e4e23 100644
--- a/tmp/e729355d-e723-461c-9264-ea2a5ecca464_buggy.java
+++ b/tmp/cbf08422-399a-45de-875c-57ffc6f7523e_fixed.java
@@ -1,42 +1,43 @@
-    /**
-     * Compares two values
-     */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right)
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
+        l = new ArrayList<Object>((Collection) l);
     }
 
     if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
+        r = new ArrayList<Object>((Collection) r);
     }
 
-        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
+    if ((l instanceof List) && !(r instanceof List)) {
+        return containsAll((List) l, r);
     }
-        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
+    if (!(l instanceof List) && (r instanceof List)) {
+        return containsAll((List) r, l);
     }
-        if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
+    if (l instanceof List && r instanceof List) {
+        return findMatch((List) l, (List) r);
     }
-        return equal(l, r);
+    return Objects.equals(l, r);
+}
+
+private boolean containsAll(List l, Object r){
+    return l.contains(r);
+}
+
+private boolean findMatch(List l, List r){
+    return l.containsAll(r) && r.containsAll(l);
 }
\ No newline at end of file
