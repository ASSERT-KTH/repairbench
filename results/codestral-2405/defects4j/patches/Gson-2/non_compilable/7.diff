diff --git a/tmp/dfbc8d5d-c77a-4b9f-8ab5-624689035dcc_buggy.java b/tmp/9fc6cd61-4698-4e06-92bd-5372dcd19775_fixed.java
index 6e45f80..fb66b22 100644
--- a/tmp/dfbc8d5d-c77a-4b9f-8ab5-624689035dcc_buggy.java
+++ b/tmp/9fc6cd61-4698-4e06-92bd-5372dcd19775_fixed.java
@@ -1,21 +1,33 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
+        if (requestedType == JsonElement.class) {
+          return (TypeAdapter<T2>) new TypeAdapter<JsonElement>() {
+            @Override
+            public JsonElement read(JsonReader in) throws IOException {
+              JsonDeserializationContext deserializationContext = gson.newJsonDeserializationContext(gson.deserializationContext);
+              return gson.getDefaultAdapter(JsonElement.class).deserialize(in, null, deserializationContext);
+            }
+            @Override
+            public void write(JsonWriter out, JsonElement value) throws IOException {
+              gson.getDefaultAdapter(JsonElement.class).write(out, value);
+            }
+          };
+        }
         return (TypeAdapter<T2>) typeAdapter;
-
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
