diff --git a/tmp/ba01f9c8-7538-415d-bdf8-42e1ed638973_buggy.java b/tmp/271d75b6-e257-4fcb-bd4b-06a91ebd500d_fixed.java
index 6e45f80..c3ae778 100644
--- a/tmp/ba01f9c8-7538-415d-bdf8-42e1ed638973_buggy.java
+++ b/tmp/271d75b6-e257-4fcb-bd4b-06a91ebd500d_fixed.java
@@ -1,21 +1,21 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
-  public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
-      final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
+public static <T1, T3> TypeAdapterFactory newTypeHierarchyFactory(
+    final Class<T1> clazz, final TypeAdapter<T3> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
-        if (!clazz.isAssignableFrom(requestedType)) {
+      if (!clazz.isAssignableFrom(requestedType) ||
+          !typeAdapter.getClass().equals(gson.getAdapter(TypeToken.get(requestedType)).getClass())) {
         return null;
       }
       return (TypeAdapter<T2>) typeAdapter;
-
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
