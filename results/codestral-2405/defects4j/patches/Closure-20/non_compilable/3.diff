diff --git a/tmp/f7932f81-7538-45d0-8b6c-c7cc2e62480d_buggy.java b/tmp/48994399-8d4d-40b8-bd86-7497cf895b1a_fixed.java
index d4e6d48..a407dd3 100644
--- a/tmp/f7932f81-7538-45d0-8b6c-c7cc2e62480d_buggy.java
+++ b/tmp/48994399-8d4d-40b8-bd86-7497cf895b1a_fixed.java
@@ -1,23 +1,16 @@
   private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
-    if (callTarget != null && callTarget.isName() &&
-          callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
+    if (callTarget != null && callTarget.isName() && callTarget.getString().equals("String")
+            && callTarget.getNext() != null && callTarget.getNext().getNext() == null) {
       Node value = callTarget.getNext();
-      if (value != null) {
       Node addition = IR.add(
           IR.string("").srcref(callTarget),
-            value.detachFromParent());
+          value.detachFromParent(),
+          Token.ADD);
       n.getParent().replaceChild(n, addition);
       reportCodeChange();
       return addition;
     }
-    }
     return n;
   }
\ No newline at end of file
