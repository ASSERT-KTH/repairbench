diff --git a/tmp/a278d86f-55c7-4bb0-859d-69ea36318f97_buggy.java b/tmp/eb7416cc-aeb0-460e-aba3-86d4817e349c_fixed.java
index 7fb120e..8d33d4d 100644
--- a/tmp/a278d86f-55c7-4bb0-859d-69ea36318f97_buggy.java
+++ b/tmp/eb7416cc-aeb0-460e-aba3-86d4817e349c_fixed.java
@@ -1,16 +1,16 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
-    static String getCharsetFromContentType(String contentType) {
-        if (contentType == null) return null;
-        Matcher m = charsetPattern.matcher(contentType);
-        if (m.find()) {
-            String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
-            return charset;
+@Test
+public void testCharset() {
+    assertEquals("UTF-8", DataUtil.getCharsetFromContentType("text/html;charset=utf-8 "));
+    assertEquals("UTF-8", DataUtil.getCharsetFromContentType("text/html; charset=UTF-8"));
+    assertEquals("ISO-8859-1", DataUtil.getCharsetFromContentType("text/html; charset=ISO-8859-1"));
+    assertEquals(null, DataUtil.getCharsetFromContentType("text/html"));
+    assertEquals(null, DataUtil.getCharsetFromContentType(null));
+    assertEquals(null, DataUtil.getCharsetFromContentType("text/html;charset=Unknown"));
 }
-        return null;
+
+@Test public void testQuotedCharset() {
+    assertEquals("UTF-8", DataUtil.getCharsetFromContentType("text/html; charset=\"utf-8\""));
+    assertEquals("UTF-8", DataUtil.getCharsetFromContentType("text/html;charset=\"UTF-8\""));
+    assertEquals("ISO-8859-1", DataUtil.getCharsetFromContentType("text/html; charset=\"ISO-8859-1\""));
+    assertEquals(null, DataUtil.getCharsetFromContentType("text/html; charset=\"Unsupported\""));
 }
\ No newline at end of file
