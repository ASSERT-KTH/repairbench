diff --git a/tmp/75be671f-65da-4626-8153-c6852df798b3_buggy.java b/tmp/b01abce9-e126-4bb9-b6d4-93e7cd7f9fdb_fixed.java
index 71189c3..b640e8a 100644
--- a/tmp/75be671f-65da-4626-8153-c6852df798b3_buggy.java
+++ b/tmp/b01abce9-e126-4bb9-b6d4-93e7cd7f9fdb_fixed.java
@@ -1,46 +1,47 @@
-    public void validate(final WriteableCommandLine commandLine)
-        throws OptionException {
+public void validate(final WriteableCommandLine commandLine) throws OptionException {
     // number of options found
     int present = 0;
 
     // reference to first unexpected option
     Option unexpected = null;
 
     for (final Iterator i = options.iterator(); i.hasNext();) {
         final Option option = (Option) i.next();
 
         // needs validation?
         boolean validate = option.isRequired() || option instanceof Group;
         if (validate) {
             option.validate(commandLine);
         }
 
         // if the child option is present then validate it
         if (commandLine.hasOption(option)) {
             if (++present > maximum) {
                 unexpected = option;
 
                 break;
             }
 
-                option.validate(commandLine);
+            // Change the option.validate(commandLine) call to:
+            option.validate(commandLine.getValue(option).toString());
         }
     }
 
     // too many options
     if (unexpected != null) {
         throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
                                   unexpected.getPreferredName());
     }
 
-        // too few option
+    // too few options
     if (present < minimum) {
         throw new OptionException(this, ResourceConstants.MISSING_OPTION);
     }
 
     // validate each anonymous argument
     for (final Iterator i = anonymous.iterator(); i.hasNext();) {
         final Option option = (Option) i.next();
-            option.validate(commandLine);
+        // Change the option.validate(commandLine) call to:
+        option.validate(commandLine.getValue(option).toString());
     }
 }
\ No newline at end of file
