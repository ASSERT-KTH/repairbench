diff --git a/tmp/ebbadf02-a2b1-449b-ae17-39271d9f7973_buggy.java b/tmp/31eea692-94d6-40c3-8c07-71ab7cadea95_fixed.java
index 03b03d7..42f9330 100644
--- a/tmp/ebbadf02-a2b1-449b-ae17-39271d9f7973_buggy.java
+++ b/tmp/31eea692-94d6-40c3-8c07-71ab7cadea95_fixed.java
@@ -1,25 +1,27 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
 
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
-        }
-        
+    if (instantBefore != instantAfter) { // not an overlap (different local times)
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        // return the instant that falls in the same local timezone after or before the overlap
+        if (earlierOrLater) {
+            long potentialInstant = convertLocalToUTC(local, true, instantAfter);
+            if (potentialInstant > instant) {
+                return instant;
+            }
+            return potentialInstant;
+        } else {
+            long potentialInstant = convertLocalToUTC(local, false, instantBefore);
+            if (potentialInstant < instant) {
+                return instant;
+            }
+            return potentialInstant;
+        }
+    }
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    return instant; // no overlap, no change in instant
 }
\ No newline at end of file
