diff --git a/tmp/56ce24c0-0d38-438a-880f-191d6ccefa99_buggy.java b/tmp/a00ce577-7a87-4e79-b266-29d3639b8804_fixed.java
index 10616db..ab12d69 100644
--- a/tmp/56ce24c0-0d38-438a-880f-191d6ccefa99_buggy.java
+++ b/tmp/a00ce577-7a87-4e79-b266-29d3639b8804_fixed.java
@@ -1,19 +1,24 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        // Add this block to handle leap year issues
+        int[] newValues = iChronology.get(partial, instant);
+        if (newValues[0] == 2 && newValues[1] == 29 && (newValues[partial.size() - 1] % 4 != 0 || (newValues[partial.size() - 1] % 100 == 0 && newValues[partial.size() - 1] % 400 != 0))) {
+            newValues[1] = 28;
+        }
+
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
