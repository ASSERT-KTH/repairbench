diff --git a/tmp/ef3122e2-44ed-4da1-92bc-3bf3ab916bf2_buggy.java b/tmp/b03aebbe-6731-4324-a283-1b144ed10ee1_fixed.java
index 10616db..afa91eb 100644
--- a/tmp/ef3122e2-44ed-4da1-92bc-3bf3ab916bf2_buggy.java
+++ b/tmp/b03aebbe-6731-4324-a283-1b144ed10ee1_fixed.java
@@ -1,19 +1,33 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
+        // Check if the start date is 29th of February
+        if (values[0] == 2 && values[1] == 29) {
+            // The start date is 29th of February
+            // Add the number of days equals to valueToAdd * 30.44 (approximately 30.44 days in a month)
+            int dayOfMonth = (int) Math.round((values[1] - 1) + (valueToAdd * 30.44));
+
+            // Adjust the month and day accordingly
+            int adjustedMonth = ((values[0] - 1) + dayOfMonth / 31) % 12 + 1;
+            dayOfMonth = (dayOfMonth % 31) + 1;
+
+            values[0] = adjustedMonth;
+            values[1] = dayOfMonth;
+            return values;
+        } else {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
+        }
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
