diff --git a/tmp/09aa6d12-ee09-4b6c-9db0-7ced4eccf53a_buggy.java b/tmp/cc1de55d-de2c-4058-b8d6-b2b1802bdcf2_fixed.java
index 10616db..20faedd 100644
--- a/tmp/09aa6d12-ee09-4b6c-9db0-7ced4eccf53a_buggy.java
+++ b/tmp/cc1de55d-de2c-4058-b8d6-b2b1802bdcf2_fixed.java
@@ -1,19 +1,41 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        if (MonthDayFieldType.MONTH_OF_YEAR == partial.getFieldType(fieldIndex)) {
+            // Calculate the total number of months to add
+            int monthValue = partial.get(MonthDayFieldType.MONTH_OF_YEAR) + valueToAdd;
+            // Calculate the year for the new month
+            int year = partial.get(DateTimeFieldType.year()) + monthValue / 12;
+            // Calculate the new month
+            int month = monthValue % 12;
+            if (month < 0) {
+                month += 12;
+                year--;
+            } else if (month > 12) {
+                month -= 12;
+                year++;
+            }
+            instant = iChronology.year().set(instant, year);
+            instant = iChronology.monthOfYear().set(instant, month);
+            // Handle overflow for days that are beyond the end of the month, like 29th of February in non-leap years
+            try {
+                instant = iChronology.dayOfMonth().add(instant, 0);
+            } catch (IllegalFieldValueException e) {
+                instant = iChronology.monthOfYear().add(instant, 1);
+                instant = iChronology.dayOfMonth().withMaximumValue(instant);
+            }
+        } else {
             instant = add(instant, valueToAdd);
+        }
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
