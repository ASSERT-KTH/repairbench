diff --git a/tmp/e5c4cfc8-f117-4a57-b4c7-3471b60dee39_buggy.java b/tmp/cec37a4b-5643-4ff2-a976-6ab64e4f7743_fixed.java
index 10616db..173139a 100644
--- a/tmp/e5c4cfc8-f117-4a57-b4c7-3471b60dee39_buggy.java
+++ b/tmp/cec37a4b-5643-4ff2-a976-6ab64e4f7743_fixed.java
@@ -1,19 +1,37 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+        int year = values[0];
+        int month = values[1] + valueToAdd;
+        int day = values[2];
+
+        // If adding/subtracting months results in a year change, adjust the year
+        if (month > 12) {
+            month -= 12;
+            year += 1;
+        } else if (month < 1) {
+            month += 12;
+            year -= 1;
         }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        // Check if the day is valid for the new month
+        if (day == 31 && (month == 4 || month == 6 || month == 9 || month == 11)) {
+            // If the day is 31 and the month has only 30 days, set the day to 30
+            day = 30;
+        } else if (day == 30 || day == 31) {
+            // If the day is 30 or 31, check if the new month has enough days
+            int maxDaysInMonth = DateTime.now().withYear(year).withMonthOfYear(month).dayOfMonth().getMaximumValue();
+            if (day > maxDaysInMonth) {
+                // If not, set the day to the maximum valid day for the new month
+                day = maxDaysInMonth;
+            }
+        }
+
+        // Create a new MonthDay with the adjusted year, month, and day
+        return new int[]{year, month, day};
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
