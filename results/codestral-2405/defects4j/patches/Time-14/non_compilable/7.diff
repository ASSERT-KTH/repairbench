diff --git a/tmp/d4b6ccc5-e668-4bbd-a5ff-b55717979d2e_buggy.java b/tmp/101bf47d-3889-4e5f-bd19-e9a1ae391d68_fixed.java
index 10616db..19a9cc9 100644
--- a/tmp/d4b6ccc5-e668-4bbd-a5ff-b55717979d2e_buggy.java
+++ b/tmp/101bf47d-3889-4e5f-bd19-e9a1ae391d68_fixed.java
@@ -1,19 +1,13 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
-        if (valueToAdd == 0) {
-            return values;
-        }
-            // month is largest field and being added to, such as month-day
-        if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
-            }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
-        } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+        //... rest of the function...
+        else {
+            int[] newValues = super.add(partial, fieldIndex, values, valueToAdd);
+            int newMonth = newValues[partial.indexOf(DateTimeFieldType.monthOfYear())];
+            int maxDaysInNewMonth = new DateTime().withMonthOfYear(newMonth).dayOfMonth().getMaximumValue();
+            if (newValues[partial.indexOf(DateTimeFieldType.dayOfMonth())] > maxDaysInNewMonth) {
+                newValues[partial.indexOf(DateTimeFieldType.dayOfMonth())] = maxDaysInNewMonth;
+            }
+            return newValues;
         }
     }
\ No newline at end of file
