diff --git a/tmp/1facd132-b516-48dd-a477-48c487bf5657_buggy.java b/tmp/0a9278e5-7781-4bfa-90dc-2054ebb8cc73_fixed.java
index 10616db..ac98ee2 100644
--- a/tmp/1facd132-b516-48dd-a477-48c487bf5657_buggy.java
+++ b/tmp/0a9278e5-7781-4bfa-90dc-2054ebb8cc73_fixed.java
@@ -1,19 +1,25 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
+    // followup on superclass algorithm updates since it can't handle 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+
+        // if leap year adjustment is necessary, set to end of month (February 28th)
+        if(partial.getChronology().monthOfYear().isLeap(instant) == false && result[partial.getFieldType().indexOf(DateTimeFieldType.monthOfYear())] == 2 && result[partial.getFieldType().indexOf(DateTimeFieldType.dayOfMonth())] == 29) {
+            result[partial.getFieldType().indexOf(DateTimeFieldType.dayOfMonth())] = 28;
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
