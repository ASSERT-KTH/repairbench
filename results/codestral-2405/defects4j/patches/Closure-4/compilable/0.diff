diff --git a/tmp/5851bc0e-ab91-4bf2-992d-473645962f03_buggy.java b/tmp/8d9fe57d-d85f-41c8-8eb0-2abbe791a25f_fixed.java
index d6a560a..f522cb4 100644
--- a/tmp/5851bc0e-ab91-4bf2-992d-473645962f03_buggy.java
+++ b/tmp/8d9fe57d-d85f-41c8-8eb0-2abbe791a25f_fixed.java
@@ -1,33 +1,33 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+    // Important: Detect cycles hanging off this type early before attempting
+    // to resolve. This can prevent infinite recursion if there's a cycle in
+    // the inheritance chain.
+    if (detectImplicitPrototypeCycle()) {
+        handleTypeCycle(t);
+        return this;
+    }
+
+    // Proceed with resolution
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
     if (resolved) {
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
     }
 
+    // If after registry resolution this type is still unresolved, try properties.
+    if (!isResolved()) {
         resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
+        super.resolveInternal(t, enclosing);
     }
 
-    super.resolveInternal(t, enclosing);
+    // If still resolved, it means both registry and property resolutions completed
+    // successfully. If not, then either the type was already resolved during registry
+    // resolution or there was a problem during the property resolution that has been
+    // handled appropriately within those methods.
     if (isResolved()) {
         finishPropertyContinuations();
     }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+
+    return registry.isLastGeneration() ? getReferencedType() : this;
 }
\ No newline at end of file
