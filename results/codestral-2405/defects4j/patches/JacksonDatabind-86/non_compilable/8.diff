diff --git a/tmp/b9330f6f-6d2d-4ad8-8d3a-1145258b798b_buggy.java b/tmp/2033b688-566a-49ad-8d06-d000a16c3a95_fixed.java
index e69de29..4d08a54 100644
--- a/tmp/b9330f6f-6d2d-4ad8-8d3a-1145258b798b_buggy.java
+++ b/tmp/2033b688-566a-49ad-8d06-d000a16c3a95_fixed.java
@@ -0,0 +1,23 @@
+public void testSuperClassWithReferencedJavaType() {
+    TypeFactory tf = objectMapper().getTypeFactory();
+    // Construct super class first to set the cache correctly
+    JavaType baseType = tf.constructType(Base.class);
+    // Now construct subclass
+    JavaType subType = tf.constructType(Sub.class);
+
+    JavaType baseTypeFromSub = subType.getSuperClass();
+    assertNotNull(baseTypeFromSub.getSuperClass());
+    // Additional assertions can be added to check if baseTypeFromSub is an instance of ResolvedRecursiveType
+}
+
+public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {
+    TypeFactory tf = TypeFactory.defaultInstance();
+    // Construct super class first
+    tf.constructType(Base.class);
+    // Now construct subclass
+    tf.constructType(Sub.class);
+
+    Sub sub = new Sub();
+    String serialized = objectMapper().writeValueAsString(sub);
+    assertEquals("{\"base\":1,\"sub\":2}", serialized);
+}
\ No newline at end of file
