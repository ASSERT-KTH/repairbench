diff --git a/tmp/fdcacc8d-563b-4830-8f33-f430d518db6a_buggy.java b/tmp/14cf8afb-e013-44ec-a01e-56e18a575ff9_fixed.java
index 01967cc..463c640 100644
--- a/tmp/fdcacc8d-563b-4830-8f33-f430d518db6a_buggy.java
+++ b/tmp/14cf8afb-e013-44ec-a01e-56e18a575ff9_fixed.java
@@ -1,35 +1,25 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // fall through
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
-
+        if (_isEnabledDefaultTyping && !_typeFactory.hasNonConcreteTypeIdResolver()) {
+            return t.getRawClass() != Object.class && (!t.isConcrete() || TreeNode.class.isAssignableFrom(t.getRawClass()));
+        }
+        return (t.getRawClass() == Object.class || !t.isConcrete() || TreeNode.class.isAssignableFrom(t.getRawClass()));
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // [Issue#88] Should not apply to JSON tree models:
+        if (_isEnabledDefaultTyping && !_typeFactory.hasNonConcreteTypeIdResolver()) {
+            return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+        }
         return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
     default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
+        return t.getRawClass() == Object.class;
     }
 }
\ No newline at end of file
