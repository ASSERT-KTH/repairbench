diff --git a/tmp/f5d0e3d1-759d-408b-8801-7695276f3785_buggy.java b/tmp/9709f31d-af4a-4de3-b360-4dc9c53a0069_fixed.java
index 08093b4..d346775 100644
--- a/tmp/f5d0e3d1-759d-408b-8801-7695276f3785_buggy.java
+++ b/tmp/9709f31d-af4a-4de3-b360-4dc9c53a0069_fixed.java
@@ -1,42 +1,35 @@
-    /**
-     * Writes a PAX extended header with the given map as contents.
-     * @since 1.4
-     */
 void writePaxHeaders(String entryName,
                          Map<String, String> headers) throws IOException {
+
     String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
-            // TarEntry's constructor would think this is a directory
-            // and not allow any data to be written
+
+    // Check length after all operations
     if (name.length() >= TarConstants.NAMELEN) {
         name = name.substring(0, TarConstants.NAMELEN - 1);
     }
+
     TarArchiveEntry pex = new TarArchiveEntry(name,
                                               TarConstants.LF_PAX_EXTENDED_HEADER_LC);
 
     StringWriter w = new StringWriter();
     for (Map.Entry<String, String> h : headers.entrySet()) {
         String key = h.getKey();
         String value = h.getValue();
         int len = key.length() + value.length()
             + 3 /* blank, equals and newline */
             + 2 /* guess 9 < actual length < 100 */;
         String line = len + " " + key + "=" + value + "\n";
         int actualLength = line.getBytes(CharsetNames.UTF_8).length;
         while (len != actualLength) {
-                // Adjust for cases where length < 10 or > 100
-                // or where UTF-8 encoding isn't a single octet
-                // per character.
-                // Must be in loop as size may go from 99 to 100 in
-                // first pass so we'd need a second.
             len = actualLength;
             line = len + " " + key + "=" + value + "\n";
             actualLength = line.getBytes(CharsetNames.UTF_8).length;
         }
         w.write(line);
     }
     byte[] data = w.toString().getBytes(CharsetNames.UTF_8);
     pex.setSize(data.length);
     putArchiveEntry(pex);
     write(data);
     closeArchiveEntry();
 }
\ No newline at end of file
