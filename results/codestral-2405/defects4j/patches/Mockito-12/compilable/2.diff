diff --git a/tmp/8cde0675-c275-4c55-aeaf-cd359fbf2586_buggy.java b/tmp/afe6dbe0-443c-4d6e-a93d-52799e3f1a32_fixed.java
index bada2b6..031a10c 100644
--- a/tmp/8cde0675-c275-4c55-aeaf-cd359fbf2586_buggy.java
+++ b/tmp/afe6dbe0-443c-4d6e-a93d-52799e3f1a32_fixed.java
@@ -1,16 +1,17 @@
 /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
+ * Finds the generic type (parametrized type) of the field.
+ * If the field is not generic it returns Object.class.
  *
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
-        }
-        
+    if (generic instanceof ParameterizedType) {
+        return (Class<?>) ((ParameterizedType) generic).getRawType();
+    } else if (generic instanceof Class) {
+        return (Class<?>) generic;
+    } else {
         return Object.class;
     }
+}
\ No newline at end of file
