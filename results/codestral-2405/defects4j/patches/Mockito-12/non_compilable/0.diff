diff --git a/tmp/2c07b2c3-f60f-495a-b493-5aebba564173_buggy.java b/tmp/8f24787b-637c-436a-b2f4-1ebb92d5d801_fixed.java
index bada2b6..019bc71 100644
--- a/tmp/2c07b2c3-f60f-495a-b493-5aebba564173_buggy.java
+++ b/tmp/8f24787b-637c-436a-b2f4-1ebb92d5d801_fixed.java
@@ -1,16 +1,16 @@
 /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
+ * Finds the generic type (parametrized type) of the field.
+ * If the field is not generic it returns Object.class.
  *
  * @param field
-     * @return
+ * @return the generic type; Object.class if the field is not generic
  */
-    public Class getGenericType(Field field) {        
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+public Type getGenericType(Field field) {
+    Type genericType = field.getGenericType();
+
+    if (genericType instanceof ParameterizedType) {
+        return ((ParameterizedType) genericType).getRawType();
     }
 
     return Object.class;
 }
\ No newline at end of file
