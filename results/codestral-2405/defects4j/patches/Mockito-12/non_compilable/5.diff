diff --git a/tmp/b50616f0-ed4a-4bd1-a8a1-2ad925be169c_buggy.java b/tmp/9094dbad-771a-4807-8220-9475a5a179ec_fixed.java
index bada2b6..ad814bc 100644
--- a/tmp/b50616f0-ed4a-4bd1-a8a1-2ad925be169c_buggy.java
+++ b/tmp/9094dbad-771a-4807-8220-9475a5a179ec_fixed.java
@@ -1,16 +1,16 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
-    public Class getGenericType(Field field) {        
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.Type;
+import java.util.Set;
+
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (actual instanceof ParameterizedType) {
+            //handle nested generics by returning the raw type
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
+        return (Class<?>) actual;
     }
-        
     return Object.class;
 }
\ No newline at end of file
