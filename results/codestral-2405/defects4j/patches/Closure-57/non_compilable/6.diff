diff --git a/tmp/990b43f5-3342-49e8-aa4e-66df625e2139_buggy.java b/tmp/18bd513f-0823-44dd-864b-6e8d84447f4c_fixed.java
index 1ea204a..8279859 100644
--- a/tmp/990b43f5-3342-49e8-aa4e-66df625e2139_buggy.java
+++ b/tmp/18bd513f-0823-44dd-864b-6e8d84447f4c_fixed.java
@@ -1,17 +1,23 @@
   private static String extractClassNameIfGoog(Node node, Node parent,
       String functionName){
     String className = null;
     if (NodeUtil.isExprCall(parent)) {
-      Node callee = node.getFirstChild();
-      if (callee != null && callee.getType() == Token.GETPROP) {
-        String qualifiedName = callee.getQualifiedName();
+      Node callee = parent.getFirstChild();
+      if (callee != null && callee.getType() == Token.CALL) { // A function call
+        Node function = callee.getFirstChild();
+        if (function != null && function.getType() == Token.GETPROP) { // A property access
+          String qualifiedName = function.getQualifiedName();
           if (functionName.equals(qualifiedName)) {
-          Node target = callee.getNext();
-          if (target != null) {
-            className = target.getString();
+            Node argumentsNode = function.getNext();
+            if (argumentsNode != null) {
+              Node argument = argumentsNode.getFirstChild();
+              if (argument != null && argument.getType() == Token.STRINGLIT) { // If argument is a string literal
+                className = argument.getString();
+              }
+            }
           }
         }
       }
     }
     return className;
   }
\ No newline at end of file
