diff --git a/tmp/a9bdede0-51da-4202-a768-5b88c7b22215_buggy.java b/tmp/240b5687-0e70-48f2-9359-46a0b956dea6_fixed.java
index 904dba7..adc75d1 100644
--- a/tmp/a9bdede0-51da-4202-a768-5b88c7b22215_buggy.java
+++ b/tmp/240b5687-0e70-48f2-9359-46a0b956dea6_fixed.java
@@ -1,46 +1,42 @@
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
-        excerpt.get(
-            source, error.sourceName, error.lineNumber, excerptFormatter);
+            source.getExcerpt(error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
         b.append(error.sourceName);
         if (error.lineNumber > 0) {
             b.append(':');
             b.append(error.lineNumber);
+            b.append(':');
         }
-      b.append(": ");
+        b.append(' ');
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
         b.append(sourceExcerpt);
         b.append('\n');
-      int charno = error.getCharno();
+        int charno = error.getCharno() - 1;
 
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+        // Appending ' ' for each character up to the error position and '^' at the end
+        if (0 <= charno && charno < sourceExcerpt.length()) {
             for (int i = 0; i < charno; i++) {
-          char c = sourceExcerpt.charAt(i);
-          if (Character.isWhitespace(c)) {
-            b.append(c);
+                if (sourceExcerpt.charAt(i) == '\t') {
+                    b.append('\t');
                 } else {
                     b.append(' ');
                 }
             }
             b.append("^\n");
         }
     }
     return b.toString();
 }
\ No newline at end of file
