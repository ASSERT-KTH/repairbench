diff --git a/tmp/c0cfe2ef-31b6-43fb-a6a3-0bdd41620e13_buggy.java b/tmp/2b87d258-3a21-4843-9fb2-e0960a4caca0_fixed.java
index 904dba7..9261bc9 100644
--- a/tmp/c0cfe2ef-31b6-43fb-a6a3-0bdd41620e13_buggy.java
+++ b/tmp/2b87d258-3a21-4843-9fb2-e0960a4caca0_fixed.java
@@ -1,46 +1,41 @@
 private String format(JSError error, boolean warning) {
   // extract source excerpt
   SourceExcerptProvider source = getSource();
   String sourceExcerpt = source == null ? null :
-        excerpt.get(
+      ExcerptGenerator.getExcerpt(
           source, error.sourceName, error.lineNumber, excerptFormatter);
 
   // formatting the message
   StringBuilder b = new StringBuilder();
   if (error.sourceName != null) {
     b.append(error.sourceName);
     if (error.lineNumber > 0) {
       b.append(':');
       b.append(error.lineNumber);
     }
     b.append(": ");
   }
 
   b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
   b.append(" - ");
-
   b.append(error.description);
   b.append('\n');
+
   if (sourceExcerpt != null) {
     b.append(sourceExcerpt);
     b.append('\n');
     int charno = error.getCharno();
 
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+    if (excerptFormatter == ExcerptFormatter.LINE
+        && 0 <= charno && charno <= sourceExcerpt.length()) {
       for (int i = 0; i < charno; i++) {
         char c = sourceExcerpt.charAt(i);
-          if (Character.isWhitespace(c)) {
-            b.append(c);
-          } else {
-            b.append(' ');
-          }
+        b.append(Character.isWhitespace(c) ? c : ' ');
       }
+      if (charno < sourceExcerpt.length()) {
         b.append("^\n");
       }
     }
+  }
   return b.toString();
 }
\ No newline at end of file
