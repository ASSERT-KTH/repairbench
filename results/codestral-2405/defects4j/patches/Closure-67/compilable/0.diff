diff --git a/tmp/e9ed4193-d66a-46d3-8b70-08e28fb24bff_buggy.java b/tmp/fc5abe7e-1c77-48e5-b987-61774c7b7ca8_fixed.java
index 939f49b..04e8798 100644
--- a/tmp/e9ed4193-d66a-46d3-8b70-08e28fb24bff_buggy.java
+++ b/tmp/fc5abe7e-1c77-48e5-b987-61774c7b7ca8_fixed.java
@@ -1,21 +1,17 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+  if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)) {
+    if (n.getType() == Token.GETPROP) {
+      Node propNode = n.getFirstChild().getLastChild();
+      if (propNode.getType() == Token.STRING && propNode.getString().equals("prototype")) {
+        return true;
+      }
+    } else if (n.getType() == Token.GETELEM) {
+      Node propNode = n.getFirstChild().getLastChild();
+      if (propNode.getType() == Token.STRING && propNode.getString().equals("prototype")) {
         return true;
       }
     }
   }
-
   return false;
 }
\ No newline at end of file
