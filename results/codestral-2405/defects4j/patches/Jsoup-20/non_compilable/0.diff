diff --git a/tmp/29d99357-b100-457d-9169-b295bd67b440_buggy.java b/tmp/96d14ba7-c8d3-45a8-b13f-23ae18521ffb_fixed.java
index db19f52..2818a9e 100644
--- a/tmp/29d99357-b100-457d-9169-b295bd67b440_buggy.java
+++ b/tmp/96d14ba7-c8d3-45a8-b13f-23ae18521ffb_fixed.java
@@ -1,32 +1,38 @@
-    // switching the chartset midstream when a meta http-equiv tag defines the charset.
 static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {
     String docData;
     Document doc = null;
-        if (charsetName == null) { // determine from meta. safe parse as UTF-8
-            // look for <meta http-equiv="Content-Type" content="text/html;charset=gb2312"> or HTML5 <meta charset="gb2312">
-            docData = Charset.forName(defaultCharset).decode(byteData).toString();
+    if (charsetName == null) {
+        charsetName = defaultCharset;
+    }
+
+    docData = Charset.forName(charsetName).decode(byteData).toString();
+
+    // Handling any spurious byte-order-mark
+    if (docData.startsWith(StringUtil.BOM)) {
+        docData = docData.substring(1);
+    }
+
     doc = parser.parseInput(docData, baseUri);
+    doc.outputSettings().charset(charsetName);
+
+    if (charsetName.equals(defaultCharset)) {
         Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
-            if (meta != null) { // if not found, will keep utf-8 as best attempt
+        if (meta != null) {
             String foundCharset = meta.hasAttr("http-equiv") ? getCharsetFromContentType(meta.attr("content")) : meta.attr("charset");
-                if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
+            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(charsetName)) {
                 charsetName = foundCharset;
                 byteData.rewind();
-                    docData = Charset.forName(foundCharset).decode(byteData).toString();
-                    doc = null;
-                }
-            }
-        } else { // specified by content type header (or by user on file load)
-            Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
                 docData = Charset.forName(charsetName).decode(byteData).toString();
+
+                //Handling any spurious byte-order-mark after charset change
+                if (docData.startsWith(StringUtil.BOM)) {
+                    docData = docData.substring(1);
                 }
-        if (doc == null) {
-            // there are times where there is a spurious byte-order-mark at the start of the text. Shouldn't be present
-            // in utf-8. If after decoding, there is a BOM, strip it; otherwise will cause the parser to go straight
-            // into head mode
 
                 doc = parser.parseInput(docData, baseUri);
                 doc.outputSettings().charset(charsetName);
             }
+        }
+    }
     return doc;
 }
\ No newline at end of file
