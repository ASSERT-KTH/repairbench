diff --git a/tmp/6586b9a0-0395-42b2-afcb-d5820efc45ea_buggy.java b/tmp/6c3f8e29-45b1-4a9d-8b08-d5c262ae3134_fixed.java
index ec6c9ee..fb42d65 100644
--- a/tmp/6586b9a0-0395-42b2-afcb-d5820efc45ea_buggy.java
+++ b/tmp/6c3f8e29-45b1-4a9d-8b08-d5c262ae3134_fixed.java
@@ -1,21 +1,28 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+        if (!notPrinter && !notParser) {
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
+        } else if (!notPrinter) {
+            return new PeriodFormatter(sep.finish(f.getPrinter(), null), null);
+        } else if (!notParser) {
+            return new PeriodFormatter(null, sep.finish(null, f.getParser()));
+        }
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
+    return null;  // This line should never be reached, but it's needed to compile
 }
\ No newline at end of file
