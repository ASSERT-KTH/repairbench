diff --git a/tmp/d03df079-c8a1-4bb7-a303-ff08829a26b7_buggy.java b/tmp/ff7dff2e-f186-49d1-9bf4-e3cf3fade73a_fixed.java
index 0f439b3..1062d02 100644
--- a/tmp/d03df079-c8a1-4bb7-a303-ff08829a26b7_buggy.java
+++ b/tmp/ff7dff2e-f186-49d1-9bf4-e3cf3fade73a_fixed.java
@@ -1,38 +1,29 @@
-    /**
-     * Reads bytes from the current tar archive entry.
-     *
-     * This method is aware of the boundaries of the current
-     * entry in the archive and will deal with them as if they
-     * were this stream's start and EOF.
-     *
-     * @param buf The buffer into which to place bytes read.
-     * @param offset The offset at which to place bytes read.
-     * @param numToRead The number of bytes to read.
-     * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
-     */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
 
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
 
     numToRead = Math.min(numToRead, available());
 
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
+    int totalRead = 0;
+    while (totalRead < numToRead && entryOffset < entrySize) {
+        int read = is.read(buf, offset + totalRead, numToRead - totalRead);
+        if (read == -1) {
+            throw new IOException("Truncated TAR archive"); // modify this line
+        }
+        count(read);
+        totalRead += read;
+        entryOffset += read;
+    }
 
-        if (totalRead == -1) {
-            hasHitEOF = true;
-        } else {
-            entryOffset += totalRead;
+    if (totalRead == 0) {
+        throw new IOException("Truncated TAR archive"); // add this line
     }
 
     return totalRead;
 }
\ No newline at end of file
