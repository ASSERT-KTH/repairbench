diff --git a/tmp/021a0a79-675e-474b-80c7-717e84fe2ca9_buggy.java b/tmp/34f8cdc9-3cd7-48d0-be55-88bd88637953_fixed.java
index 710fcc0..28c22a8 100644
--- a/tmp/021a0a79-675e-474b-80c7-717e84fe2ca9_buggy.java
+++ b/tmp/34f8cdc9-3cd7-48d0-be55-88bd88637953_fixed.java
@@ -1,37 +1,15 @@
 Object returnValueFor(Class<?> type) {
     if (Primitives.isPrimitiveOrWrapper(type)) {
         return Primitives.defaultValueForPrimitiveOrWrapper(type);
-            //new instances are used instead of Collections.emptyList(), etc.
-            //to avoid UnsupportedOperationException if code under test modifies returned collection
-        } else if (type == Collection.class) {
-            return new LinkedList<Object>();
-        } else if (type == Set.class) {
-            return new HashSet<Object>();
-        } else if (type == HashSet.class) {
-            return new HashSet<Object>();
-        } else if (type == SortedSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == TreeSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == LinkedHashSet.class) {
-            return new LinkedHashSet<Object>();
-        } else if (type == List.class) {
-            return new LinkedList<Object>();
-        } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
-        } else if (type == ArrayList.class) {
-            return new ArrayList<Object>();
-        } else if (type == Map.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == HashMap.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == TreeMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
+    } else if (type == Collection.class || type == Iterable.class) {
+        return Collections.emptyList();
+    } else if (type == Set.class || type == HashSet.class || type == LinkedHashSet.class || type == TreeSet.class || type == SortedSet.class) {
+        return Collections.emptySet();
+    } else if (type == List.class || type == LinkedList.class || type == ArrayList.class) {
+        return Collections.emptyList();
+    } else if (type == Map.class || type == HashMap.class || type == TreeMap.class || type == SortedMap.class || type == LinkedHashMap.class) {
+        return Collections.emptyMap();
     }
-        //Let's not care about the rest of collections.
+    // If the type is not a known collection type, return null.
     return null;
 }
\ No newline at end of file
