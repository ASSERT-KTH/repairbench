diff --git a/tmp/26d28bad-ecd0-4f03-9372-dc3b87ef2e85_buggy.java b/tmp/6ac3e0a9-d0cb-494f-9cb8-f0f55a5191f1_fixed.java
index 8e93a5e..481ca14 100644
--- a/tmp/26d28bad-ecd0-4f03-9372-dc3b87ef2e85_buggy.java
+++ b/tmp/6ac3e0a9-d0cb-494f-9cb8-f0f55a5191f1_fixed.java
@@ -1,43 +1,39 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
+    int pos = 0;
+    while (true) {
+        pos = findWrapPos(text, width, pos);
+        if (pos == -1) {
+            // Append remaining text if no more wrapping positions to be found
+            if (sb.length() > 0 && "\n".equals(sb.substring(sb.length() - 1))) {
+                // Already appended a new line, just append the text without padding
+                sb.append(text.trim());
+            } else {
+                // No new line appended, need to add the padding and then the text
+                sb.append(createPadding(nextLineTabStop)).append(text.trim());
             }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
+            break;
+        } else {
+            // Append the text up to the wrap position and then a new line, repeat the loop
+            if (sb.length() > 0) {
+                // Not the first line, add padding before appending the text
+                sb.append(createPadding(nextLineTabStop));
             }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(text.substring(0, pos)).append(defaultNewLine);
+            text = text.substring(pos).trim();
         }
     }
+    return sb;
+}
\ No newline at end of file
