diff --git a/tmp/87a4b6ab-0cd8-4162-a042-ebb3e3d42177_buggy.java b/tmp/94344a19-a4b2-443a-a1e4-e223d5e799b1_fixed.java
index a7d0787..534fbaa 100644
--- a/tmp/87a4b6ab-0cd8-4162-a042-ebb3e3d42177_buggy.java
+++ b/tmp/94344a19-a4b2-443a-a1e4-e223d5e799b1_fixed.java
@@ -1,54 +1,24 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+    if (PatternOptionBuilder.STRING_VALUE == clazz) {
         return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
         return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+    } else if (Number.class.isAssignableFrom(clazz)) {
         return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+    } else if (java.util.Date.class.isAssignableFrom(clazz)) {
         return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+    } else if (java.lang.Class.class.isAssignableFrom(clazz)) {
         return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+    } else if (java.io.File.class.isAssignableFrom(clazz)) {
         return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+    } else if (java.io.FileDescriptor.class.isAssignableFrom(clazz)) {
         return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+    } else if (java.util.List.class.isAssignableFrom(clazz) && clazz.isInstance(Collections.emptyList())) {
         return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+    } else if (java.net.URL.class.isAssignableFrom(clazz)) {
         return (T) createURL(str);
-        }
-        else
-        {
-            return null;
+    } else {
+        throw new ParseException("No creator defined for the class: " + clazz.getName());
     }
 }
\ No newline at end of file
