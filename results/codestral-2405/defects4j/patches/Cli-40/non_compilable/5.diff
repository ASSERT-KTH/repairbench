diff --git a/tmp/3f4939e2-70ce-4bfe-8baf-29ab75e1f6b4_buggy.java b/tmp/df6792cc-d959-43f6-afb6-89db0d73822f_fixed.java
index a7d0787..44093f8 100644
--- a/tmp/3f4939e2-70ce-4bfe-8baf-29ab75e1f6b4_buggy.java
+++ b/tmp/df6792cc-d959-43f6-afb6-89db0d73822f_fixed.java
@@ -1,54 +1,29 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+    try {
+        if (PatternOptionBuilder.STRING_VALUE == clazz) {
             return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
             return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
             return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.DATE_VALUE == clazz) {
             return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
             return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILE_VALUE == clazz) {
             return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
             return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILES_VALUE == clazz) {
             return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.URL_VALUE == clazz) {
             return (T) createURL(str);
-        }
-        else
-        {
+        } else if (Integer.class == clazz) {
+            return (T) Integer.valueOf(str);
+        } else {
             return null;
         }
+    } catch (NumberFormatException e) {
+        throw new ParseException("Cannot parse the string \"" + str + "\" into a Integer instance", e);
+    }
 }
\ No newline at end of file
