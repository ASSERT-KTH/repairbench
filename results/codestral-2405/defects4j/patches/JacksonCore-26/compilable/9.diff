diff --git a/tmp/5a81e9ef-64a3-41a2-9d11-8ca43b6bb5c7_buggy.java b/tmp/4607d1a8-d8fc-40eb-a4ee-c93b474fac12_fixed.java
index 0722547..474a06e 100644
--- a/tmp/5a81e9ef-64a3-41a2-9d11-8ca43b6bb5c7_buggy.java
+++ b/tmp/4607d1a8-d8fc-40eb-a4ee-c93b474fac12_fixed.java
@@ -1,26 +1,22 @@
 @Override
 public void feedInput(byte[] buf, int start, int end) throws IOException
 {
-        // Must not have remaining input
     if (_inputPtr < _inputEnd) {
         _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
     }
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
-        // and shouldn't have been marked as end-of-input
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
-        // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+    int oldBufferLen = ((_inputEnd != _inputPtr) ? _origBufferLen : 0);
+    _currInputProcessed += oldBufferLen;
+    _currInputRowStart -= (_inputEnd - _inputPtr - oldBufferLen);
 
-        // And then update buffer settings
     _inputBuffer = buf;
     _inputPtr = start;
     _inputEnd = end;
     _origBufferLen = end - start;
 }
\ No newline at end of file
