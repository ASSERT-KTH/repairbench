diff --git a/tmp/912957ee-636b-4631-b181-f0a3b1d78e81_buggy.java b/tmp/bceaefd4-ddec-44fc-b181-9c0b682d5be5_fixed.java
index 0722547..e25727c 100644
--- a/tmp/912957ee-636b-4631-b181-f0a3b1d78e81_buggy.java
+++ b/tmp/bceaefd4-ddec-44fc-b181-9c0b682d5be5_fixed.java
@@ -1,26 +1,25 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
-        // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
-        // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
+        // Time to update pointers first, adjust for already processed input
+        int alreadyProcessed = _inputEnd - _inputPtr;
+        _currInputProcessed += alreadyProcessed;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        // Adjust row start to account for the past extension wrt new buffer
+        _currInputRowStart = start - alreadyProcessed;
 
-        // And then update buffer settings
+        // Update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
     }
\ No newline at end of file
