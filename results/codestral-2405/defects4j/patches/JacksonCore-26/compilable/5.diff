diff --git a/tmp/134ce581-f8bd-4b7c-a552-76f9ddc0f36d_buggy.java b/tmp/f417ce93-8be5-43d3-ace9-fb1bc87490bd_fixed.java
index 0722547..4cb93c5 100644
--- a/tmp/134ce581-f8bd-4b7c-a552-76f9ddc0f36d_buggy.java
+++ b/tmp/f417ce93-8be5-43d3-ace9-fb1bc87490bd_fixed.java
@@ -1,26 +1,24 @@
 @Override
 public void feedInput(byte[] buf, int start, int end) throws IOException
 {
-        // Must not have remaining input
-        if (_inputPtr < _inputEnd) {
-            _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
-        }
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
-        // and shouldn't have been marked as end-of-input
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
-        // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
+    if (_inputPtr >= _inputEnd) {
+        // No remaining input, update _currInputProcessed directly
+        _currInputProcessed += start - _inputEnd;
+    } else {
+        // There's remaining input in the buffer, the new input will contribute to the row start
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        _currInputProcessed += _origBufferLen - (_inputEnd - _inputPtr);
+    }
 
-        // And then update buffer settings
     _inputBuffer = buf;
     _inputPtr = start;
     _inputEnd = end;
     _origBufferLen = end - start;
 }
\ No newline at end of file
