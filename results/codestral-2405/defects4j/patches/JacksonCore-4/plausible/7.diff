diff --git a/tmp/1b4b8267-4fc4-4c48-95f1-c64195f42138_buggy.java b/tmp/c1f63d08-8f19-4d39-a329-16ff0c884d55_fixed.java
index c6cb157..ff2bb1c 100644
--- a/tmp/1b4b8267-4fc4-4c48-95f1-c64195f42138_buggy.java
+++ b/tmp/c1f63d08-8f19-4d39-a329-16ff0c884d55_fixed.java
@@ -1,14 +1,20 @@
     /**
      * Method called to expand size of the current segment, to
      * accommodate for more contiguous content. Usually only
      * used when parsing tokens like names if even then.
      */
     public char[] expandCurrentSegment()
     {
         final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
+        // Let's grow by 50% by default, but if already at maximum size, increase by 25%
         final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        int newLen = (len >= MAX_SEGMENT_LEN) ? (int) (len * 1.25) : (len + (len >> 1));
+        newLen = Math.min(MAX_SEGMENT_LEN, newLen);
+
+        if (newLen <= len) {
+            // If we calculated the new length to be less than or equal to current length, which means we're at MAX_SEGMENT_LEN
+            // and the new length would still be beyond the maximum allowed, so we increase it by just 1.
+            newLen = len + 1;
+        }
         return (_currentSegment = Arrays.copyOf(curr, newLen));
     }
\ No newline at end of file
