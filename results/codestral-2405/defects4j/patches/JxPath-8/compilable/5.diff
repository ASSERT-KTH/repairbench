diff --git a/tmp/b369496c-6ab0-4482-964c-98bd47d9a200_buggy.java b/tmp/d4b5437a-2211-422b-a4ad-7c843733781f_fixed.java
index 98d89dc..5e97eeb 100644
--- a/tmp/b369496c-6ab0-4482-964c-98bd47d9a200_buggy.java
+++ b/tmp/d4b5437a-2211-422b-a4ad-7c843733781f_fixed.java
@@ -1,23 +1,40 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
+    if(left instanceof Double || right instanceof Double){
+        double ld = left instanceof Double ? (double)left : InfoSetUtil.doubleValue(left);
+        double rd = right instanceof Double ? (double)right : InfoSetUtil.doubleValue(right);
+
+        if(Double.isNaN(ld) || Double.isNaN(rd)) {
+            if(ld == rd) {
+                return evaluateCompare(0);
+            }
+
+            // Neither NaN nor NaN, NaN is not equal to any value.
+            if(Double.isNaN(ld) || Double.isNaN(rd)) {
+                return evaluateCompare(Double.NaN == rd ? 0 : -1);
+            }
+        }
+    }
+
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
+
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
