diff --git a/tmp/3b038df9-1bdd-4844-b299-28e02515f391_buggy.java b/tmp/5f546f47-3791-4cb3-90ed-e0409088b899_fixed.java
index 98d89dc..f6c5188 100644
--- a/tmp/3b038df9-1bdd-4844-b299-28e02515f391_buggy.java
+++ b/tmp/5f546f47-3791-4cb3-90ed-e0409088b899_fixed.java
@@ -1,23 +1,33 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
-        double ld = InfoSetUtil.doubleValue(left);
-        double rd = InfoSetUtil.doubleValue(right);
+
+    double ld = Double.isNaN(InfoSetUtil.doubleValue(left)) ? Double.NaN : InfoSetUtil.doubleValue(left);
+    double rd = Double.isNaN(InfoSetUtil.doubleValue(right)) ? Double.NaN : InfoSetUtil.doubleValue(right);
+
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        if (Double.isNaN(ld) && Double.isNaN(rd)) {
+            return evaluateCompare(0);
+        } else {
+            return evaluateCompare(null);
+        }
+    } else {
         return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
     }
+}
\ No newline at end of file
