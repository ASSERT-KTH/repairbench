diff --git a/tmp/e66218a7-d984-4a56-96db-bb32408aad27_buggy.java b/tmp/a863b79d-cf5e-45cb-b899-cb340fd21559_fixed.java
index cfdcd9c..8b2a9fd 100644
--- a/tmp/e66218a7-d984-4a56-96db-bb32408aad27_buggy.java
+++ b/tmp/a863b79d-cf5e-45cb-b899-cb340fd21559_fixed.java
@@ -1,51 +1,54 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
     if (isAssignmentTarget(n)) {
       return n;
     }
 
     if (!right.isNumber()) {
       // Sometimes people like to use complex expressions to index into
       // arrays, or strings to index into array methods.
       return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
       error(INVALID_GETELEM_INDEX_ERROR, right);
       return n;
     }
 
     if (intIndex < 0) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
     Node current = left.getFirstChild();
-    Node elem = null;
-    for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
+    int i = 0;
+    while (current != null && i < intIndex) {
+      if (!current.isEmpty()) {
+        i++;
+      }
       current = current.getNext();
     }
 
-    if (elem == null) {
+    if (current == null) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
-    if (elem.isEmpty()) {
-      elem = NodeUtil.newUndefinedNode(elem);
+    Node elem;
+    if (current.isEmpty()) {
+      elem = NodeUtil.newUndefinedNode(current);
     } else {
-      left.removeChild(elem);
+      elem = current.cloneTree();
+      left.removeChild(current);
     }
 
     // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
   }
\ No newline at end of file
