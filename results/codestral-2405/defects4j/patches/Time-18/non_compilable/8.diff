diff --git a/tmp/ad76e630-4259-4157-aa9e-e5df8e88f0db_buggy.java b/tmp/9b122a9f-773e-4b62-8795-e7cf542070d8_fixed.java
index be2af16..63e7918 100644
--- a/tmp/ad76e630-4259-4157-aa9e-e5df8e88f0db_buggy.java
+++ b/tmp/9b122a9f-773e-4b62-8795-e7cf542070d8_fixed.java
@@ -1,29 +1,32 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Try Gregorian first, then Julian if necessary
     long instant;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    } catch (IllegalFieldValueException e) {
+        // The date is not valid in Gregorian, try Julian
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+    }
+
+    // Check if the date is in the cutover gap
+    if (instant >= iCutoverMillis && instant < LONG_MAX_VALUE) {
         throw new IllegalArgumentException("Specified date does not exist");
     }
-        }
+
     return instant;
 }
\ No newline at end of file
