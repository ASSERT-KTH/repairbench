diff --git a/tmp/ec506994-9e8e-4440-b44e-8b3ce503048f_buggy.java b/tmp/3452a2fc-a498-4a8f-9606-d62684eccecc_fixed.java
index be2af16..25bf870 100644
--- a/tmp/ec506994-9e8e-4440-b44e-8b3ce503048f_buggy.java
+++ b/tmp/3452a2fc-a498-4a8f-9606-d62684eccecc_fixed.java
@@ -1,29 +1,32 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
-        if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        }
-
+    if ((base = getBase()) == null || base == iGregorianChronology) {
         // Assume date is Gregorian.
         long instant;
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+
+        if (instant < iCutoverMillis && iJulianChronology.isLeapYear(year)) {
+            // Maybe it's Julian and it's a leap year.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
+    } else {
+        // Use the base chronology if it's not null and not the Gregorian chronology.
+        return base.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    }
 }
\ No newline at end of file
