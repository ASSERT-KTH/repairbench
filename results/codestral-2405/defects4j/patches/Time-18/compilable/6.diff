diff --git a/tmp/9da773e3-5914-4eae-a864-1f601899dd39_buggy.java b/tmp/2bcbf4cf-cd59-4c3e-ba27-04ce8b9edf79_fixed.java
index be2af16..91c7b3c 100644
--- a/tmp/9da773e3-5914-4eae-a864-1f601899dd39_buggy.java
+++ b/tmp/2bcbf4cf-cd59-4c3e-ba27-04ce8b9edf79_fixed.java
@@ -1,29 +1,34 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Try Gregorian first.
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+        // If not valid in Gregorian, try Julian.
+        long julianInstant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+
+        if (julianInstant >= iCutoverMillis) {
+            // If date is valid in Julian but invalid in Gregorian, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
+        } else {
+            // If the date is valid in Julian, use Julian.
+            instant = julianInstant;
         }
     }
     return instant;
 }
\ No newline at end of file
