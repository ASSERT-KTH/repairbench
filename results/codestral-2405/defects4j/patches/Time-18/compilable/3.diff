diff --git a/tmp/ecd8b301-7c46-4f3e-b46f-b124aacbe5dc_buggy.java b/tmp/99aad5d5-1714-46d0-9460-84264dd4ac36_fixed.java
index be2af16..1fbaccd 100644
--- a/tmp/ecd8b301-7c46-4f3e-b46f-b124aacbe5dc_buggy.java
+++ b/tmp/99aad5d5-1714-46d0-9460-84264dd4ac36_fixed.java
@@ -1,29 +1,36 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Assume date is Julian.
+    long julianInstant = iJulianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+
+    // If it doesn't fall into the Julian calendar leap year rules,
+    // Check the Gregorian calendar.
+    if (julianInstant < iCutoverMillis) {
+        long gregorianInstant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+
+        if (gregorianInstant >= iCutoverMillis) {
+            // Okay, it's in the illegal cut-over gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
+
+        // If the date is valid in Gregorian, use that instant.
+        return gregorianInstant;
     }
-        return instant;
+
+    // Otherwise, use the Julian instant.
+    return julianInstant;
 }
\ No newline at end of file
