diff --git a/tmp/962c6819-25c2-4957-89f7-cdcf8d831273_buggy.java b/tmp/26b4ad3d-fc9d-4dce-b5fa-ae439fd8f266_fixed.java
index 4aff4e4..4a73a67 100644
--- a/tmp/962c6819-25c2-4957-89f7-cdcf8d831273_buggy.java
+++ b/tmp/26b4ad3d-fc9d-4dce-b5fa-ae439fd8f266_fixed.java
@@ -1,15 +1,25 @@
-    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
+private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols, Set<String> customProtocols) {
+    // try to resolve relative urls to abs, and optionally update the attribute so output HTML has abs.
+    // rels without a baseURI get removed
     String value = el.absUrl(attr.getKey());
     if (!preserveRelativeLinks)
         attr.setValue(value);
 
+    // Check if the protocol is in the custom protocols set
+    if (customProtocols != null && !customProtocols.isEmpty()) {
+        for (String customProtocol : customProtocols) {
+            if (value.toLowerCase().startsWith(customProtocol + ":")) {
+                return true;
+            }
+        }
+    }
+
+    // If the protocol is not a custom protocol, check it against the default protocols set
     for (Protocol protocol : protocols) {
         String prot = protocol.toString() + ":";
         if (value.toLowerCase().startsWith(prot)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
