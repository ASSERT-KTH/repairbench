diff --git a/tmp/65b31f29-3c7a-41f4-b871-c1c03924e75b_buggy.java b/tmp/389b40dd-44bc-41e1-b243-47990132af54_fixed.java
index 3127f85..3376d82 100644
--- a/tmp/65b31f29-3c7a-41f4-b871-c1c03924e75b_buggy.java
+++ b/tmp/389b40dd-44bc-41e1-b243-47990132af54_fixed.java
@@ -1,24 +1,19 @@
-    /**
-     * For this distribution, {@code X}, this method returns {@code P(X < x)}.
-     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
-     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
-     *
-     * @param x Value at which the CDF is evaluated.
-     * @return CDF evaluated at {@code x}.
-     * @throws MathException if the algorithm fails to converge
-     */
 public double cumulativeProbability(double x) throws MathException {
+    if (Double.isInfinite(x)) {
+        return (x > 0) ? 1.0 : 0.0;
+    }
+
     final double dev = x - mean;
     try {
-        return 0.5 * (1.0 + Erf.erf((dev) /
+        return 0.5 * (1.0 + Erf.erf(dev /
                 (standardDeviation * FastMath.sqrt(2.0))));
     } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+        if (x < (mean - 40 * standardDeviation)) {
             return 0;
-            } else if (x > (mean + 20 * standardDeviation)) {
+        } else if (x > (mean + 40 * standardDeviation)) {
             return 1;
         } else {
             throw ex;
         }
     }
 }
\ No newline at end of file
