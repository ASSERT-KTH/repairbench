diff --git a/tmp/26a29a27-d5f7-4e56-8827-cc49d6e80e9f_buggy.java b/tmp/c296b9a7-33e3-4a7d-855b-a8a81ca8b4a8_fixed.java
index 1c875ad..ab3d7a3 100644
--- a/tmp/26a29a27-d5f7-4e56-8827-cc49d6e80e9f_buggy.java
+++ b/tmp/c296b9a7-33e3-4a7d-855b-a8a81ca8b4a8_fixed.java
@@ -1,31 +1,18 @@
 public void captureArgumentsFrom(Invocation invocation) {
     if (invocation.getMethod().isVarArgs()) {
         int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
-
+        Object[] array = (Object[]) invocation.getRawArguments()[indexOfVararg];
+        for (int i = 0; i < array.length; i++) {
+            if (matchers.size() > i && matchers.get(i) instanceof CapturesArguments) {
+                ((CapturesArguments) matchers.get(i)).captureFrom(array[i]);
+            }
+        }
     } else {
         for (int position = 0; position < matchers.size(); position++) {
             Matcher m = matchers.get(position);
-                if (m instanceof CapturesArguments) {
-                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
+            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
+                ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
             }
         }
     }
-
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
 }
\ No newline at end of file
