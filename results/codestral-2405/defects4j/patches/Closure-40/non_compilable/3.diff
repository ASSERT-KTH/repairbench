diff --git a/tmp/d8dfe8ce-aad2-43d8-afa1-a9f82c670aec_buggy.java b/tmp/83c3e5c8-024e-4618-9d52-ce03a17441bd_fixed.java
index 670114d..e499a89 100644
--- a/tmp/d8dfe8ce-aad2-43d8-afa1-a9f82c670aec_buggy.java
+++ b/tmp/83c3e5c8-024e-4618-9d52-ce03a17441bd_fixed.java
@@ -1,48 +1,27 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
-      // Record global variable and function declarations
   if (t.inGlobalScope()) {
-        if (NodeUtil.isVarDeclaration(n)) {
-          NameInformation ns = createNameInformation(t, n, parent);
-          Preconditions.checkNotNull(ns);
-          recordSet(ns.name, n);
-        } else if (NodeUtil.isFunctionDeclaration(n)) {
+    // ...
+    else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
-            JsName nameInfo = getName(nameNode.getString(), true);
+        JsName nameInfo = getName(nameNode.getString(), false);
+        if (nameInfo != null) {
           recordSet(nameInfo.name, nameNode);
         }
-        } else if (NodeUtil.isObjectLitKey(n, parent)) {
-          NameInformation ns = createNameInformation(t, n, parent);
-          if (ns != null) {
-            recordSet(ns.name, n);
-          }
-        }
-      }
-
-      // Record assignments and call sites
-      if (n.isAssign()) {
-        Node nameNode = n.getFirstChild();
-
-        NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null) {
-          if (ns.isPrototype) {
-            recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
-          } else {
-            recordSet(ns.name, nameNode);
       }
     }
+    // ...
   } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
+    // ...
     if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
+      JsName name = getName(ns.name, true);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
