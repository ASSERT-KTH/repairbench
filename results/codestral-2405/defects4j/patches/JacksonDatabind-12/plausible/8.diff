diff --git a/tmp/14117b24-105e-41e2-9d6d-d631b32f0b80_buggy.java b/tmp/6a742dec-2a09-44e2-a5ee-07fad42e71b0_fixed.java
index 845704e..52a667e 100644
--- a/tmp/14117b24-105e-41e2-9d6d-d631b32f0b80_buggy.java
+++ b/tmp/6a742dec-2a09-44e2-a5ee-07fad42e71b0_fixed.java
@@ -1,21 +1,8 @@
-    /**
-     * Turns out that these are expensive enough to create so that caching
-     * does make sense.
-     *<p>
-     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
-     * JAXB Annotations (failing a test).
-     * It is also possible that some other settings could make deserializers
-     * un-cacheable; but on the other hand, caching can make a big positive
-     * difference with performance... so it's a hard choice.
-     * 
-     * @since 2.4.4
-     */
 @Override
 public boolean isCachable() {
     /* As per [databind#735], existence of value or key deserializer (only passed
      * if annotated to use non-standard one) should also prevent caching.
      */
-        return (_valueTypeDeserializer == null)
+    return (_valueDeserializer == null) // Change _valueTypeDeserializer to _valueDeserializer
             && (_ignorableProperties == null);
 }
\ No newline at end of file
