diff --git a/tmp/f2ce9664-c71c-4436-ac88-f5b5d09824f6_buggy.java b/tmp/0abf346f-dd07-4e09-8705-0b2a6d45303a_fixed.java
index a9a5e27..47bdc4f 100644
--- a/tmp/f2ce9664-c71c-4436-ac88-f5b5d09824f6_buggy.java
+++ b/tmp/0abf346f-dd07-4e09-8705-0b2a6d45303a_fixed.java
@@ -1,24 +1,34 @@
 /**
  * Multiply two values throwing an exception if overflow occurs.
  *
  * @param val1  the first value
  * @param val2  the second value
  * @return the new total
  * @throws ArithmeticException if the value is too big or too small
  * @since 1.2
  */
 public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                return -val1;
-            case 0:
+    if (val2 == 0) {
         return 0L;
-            case 1:
+    }
+    // handle val2 = 1 and val2 = -1 before the multiplication, as they are common cases
+    if (val2 == 1) {
         return val1;
     }
+    if (val2 == -1) {
+        throwIfOverflowedWhenNegate(val1);
+        return -val1;
+    }
+
     long total = val1 * val2;
-        if (total / val2 != val1) {
+    if (val1 != 0 && total / val1 != val2) {
         throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
     return total;
 }
+
+private static void throwIfOverflowedWhenNegate(long val) {
+    if (val == Long.MIN_VALUE) {
+        throw new ArithmeticException("Multiplication overflows a long: -" + val);
+    }
+}
\ No newline at end of file
