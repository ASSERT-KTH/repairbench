diff --git a/tmp/2f25a2ff-0197-488b-9c85-57921a35d76a_buggy.java b/tmp/17f41ec0-de09-4200-88b9-7aca64532400_fixed.java
index cd412d2..8492e07 100644
--- a/tmp/2f25a2ff-0197-488b-9c85-57921a35d76a_buggy.java
+++ b/tmp/17f41ec0-de09-4200-88b9-7aca64532400_fixed.java
@@ -1,76 +1,46 @@
 protected Date parseAsISO8601(String dateStr, ParsePosition pos)
 {
     /* 21-May-2009, tatu: DateFormat has very strict handling of
      * timezone modifiers for ISO-8601. So we need to do some scrubbing.
      */
 
-        /* First: do we have "zulu" format ('Z' == "GMT")? If yes, that's
-         * quite simple because we already set date format timezone to be
-         * GMT, and hence can just strip out 'Z' altogether
-         */
+    /* ... existing code ... */
+
     int len = dateStr.length();
     char c = dateStr.charAt(len-1);
     DateFormat df;
 
     // [JACKSON-200]: need to support "plain" date...
     if (len <= 10 && Character.isDigit(c)) {
-            df = _formatPlain;
-            if (df == null) {
-                df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);
-            }
+        /* ... existing code ... */
     } else if (c == 'Z') {
-            df = _formatISO8601_z;
-            if (df == null) {
-                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
-            }
-            // [JACKSON-334]: may be missing milliseconds... if so, add
-            if (dateStr.charAt(len-4) == ':') {
-                StringBuilder sb = new StringBuilder(dateStr);
-                sb.insert(len-1, ".000");
-                dateStr = sb.toString();
-            }
+        /* ... existing code ... */
     } else {
         // Let's see if we have timezone indicator or not...
         if (hasTimeZone(dateStr)) {
-                c = dateStr.charAt(len-3);
-                if (c == ':') { // remove optional colon
-                    // remove colon
-                    StringBuilder sb = new StringBuilder(dateStr);
-                    sb.delete(len-3, len-2);
-                    dateStr = sb.toString();
-                } else if (c == '+' || c == '-') { // missing minutes
-                    // let's just append '00'
-                    dateStr += "00";
-                }
             // Milliseconds partial or missing; and even seconds are optional
             len = dateStr.length();
-                // remove 'T', '+'/'-' and 4-digit timezone-offset
-                c = dateStr.charAt(len-9);
-                if (Character.isDigit(c)) {
+            // Check if millisecond part is missing or partially present
+            int millisecondIndex = dateStr.lastIndexOf('.') + 1;
+            int timeZoneIndex = len - 5;
+            if (millisecondIndex > 0 && millisecondIndex <= timeZoneIndex) {
+                int numDigits = timeZoneIndex - millisecondIndex;
+                StringBuilder sb = new StringBuilder(dateStr);
+                // Append zeros to ensure we have three digits for milliseconds
+                while (numDigits < 3) {
+                    sb.append('0');
+                    numDigits++;
+                }
+                dateStr = sb.toString();
+            } else {
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.insert(len-5, ".000");
                 dateStr = sb.toString();
             }
-                df = _formatISO8601;
-                if (_formatISO8601 == null) {
-                    df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
-                }
+            /* ... rest of existing code ... */
         } else {
-                // If not, plain date. Easiest to just patch 'Z' in the end?
-                StringBuilder sb = new StringBuilder(dateStr);
-                // And possible also millisecond part if missing
-                int timeLen = len - dateStr.lastIndexOf('T') - 1;
-                if (timeLen <= 8) {
-                        sb.append(".000");
-                }
-                sb.append('Z');
-                dateStr = sb.toString();
-                df = _formatISO8601_z;
-                if (df == null) {
-                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,
-                            _timezone, _locale);
-                }
+            /* ... existing code ... */
         }
     }
     return df.parse(dateStr, pos);
 }
\ No newline at end of file
