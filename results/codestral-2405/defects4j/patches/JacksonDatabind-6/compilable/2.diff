diff --git a/tmp/814f9109-6e3a-4565-b6c0-402f4ded72dc_buggy.java b/tmp/08d4e3f0-43d3-4e2a-87c1-5ccb6f9ad9ba_fixed.java
index cd412d2..f92834f 100644
--- a/tmp/814f9109-6e3a-4565-b6c0-402f4ded72dc_buggy.java
+++ b/tmp/08d4e3f0-43d3-4e2a-87c1-5ccb6f9ad9ba_fixed.java
@@ -1,76 +1,88 @@
 protected Date parseAsISO8601(String dateStr, ParsePosition pos)
 {
-        /* 21-May-2009, tatu: DateFormat has very strict handling of
-         * timezone  modifiers for ISO-8601. So we need to do some scrubbing.
-         */
-
-        /* First: do we have "zulu" format ('Z' == "GMT")? If yes, that's
-         * quite simple because we already set date format timezone to be
-         * GMT, and hence can just strip out 'Z' altogether
-         */
     int len = dateStr.length();
-        char c = dateStr.charAt(len-1);
+    char c;
+
+    /* Add missing seconds and milliseconds if they are not present */
+    int timeIndex = dateStr.lastIndexOf('T');
+    if (timeIndex > 0) {
+        char timeChar = dateStr.charAt(timeIndex + 1);
+        if (Character.isDigit(timeChar)) {
+            int lastDigitIndex = lastIndexOfDigit(dateStr, len);
+            if (lastDigitIndex - timeIndex > 3) {
+                if (lastDigitIndex - timeIndex <= 8) {
+                    dateStr = dateStr.substring(0, timeIndex + 9) + ".000" + dateStr.substring(timeIndex + 9);
+                } else if (lastDigitIndex - timeIndex <= 11) {
+                    dateStr = dateStr.substring(0, timeIndex + 9) + dateStr.substring(timeIndex + 9, timeIndex + 12) + ".00" + dateStr.substring(timeIndex + 12);
+                } else if (lastDigitIndex - timeIndex <= 14) {
+                    dateStr = dateStr.substring(0, timeIndex + 9) + dateStr.substring(timeIndex + 9, timeIndex + 12) + "." + dateStr.substring(timeIndex + 12);
+                }
+            } else {
+                dateStr = dateStr.substring(0, timeIndex + 9) + "00:" + dateStr.substring(timeIndex + 9);
+                if (lastDigitIndex - timeIndex <= 3) {
+                    dateStr = dateStr.substring(0, timeIndex + 12) + ".000" + dateStr.substring(timeIndex + 12);
+                } else if (lastDigitIndex - timeIndex <= 5) {
+                    dateStr = dateStr.substring(0, timeIndex + 12) + dateStr.substring(timeIndex + 12, timeIndex + 15) + ".00" + dateStr.substring(timeIndex + 15);
+                } else if (lastDigitIndex - timeIndex <= 8) {
+                    dateStr = dateStr.substring(0, timeIndex + 12) + dateStr.substring(timeIndex + 12, timeIndex + 15) + "." + dateStr.substring(timeIndex + 15);
+                }
+            }
+        }
+    }
+
     DateFormat df;
 
     // [JACKSON-200]: need to support "plain" date...
-        if (len <= 10 && Character.isDigit(c)) {
+    if (len <= 10 && Character.isDigit(dateStr.charAt(len-1))) {
         df = _formatPlain;
         if (df == null) {
             df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);
         }
-        } else if (c == 'Z') {
+    } else {
+        c = dateStr.charAt(len-1);
+        if (c == 'Z') {
             df = _formatISO8601_z;
             if (df == null) {
                 df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
             }
-            // [JACKSON-334]: may be missing milliseconds... if so, add
-            if (dateStr.charAt(len-4) == ':') {
-                StringBuilder sb = new StringBuilder(dateStr);
-                sb.insert(len-1, ".000");
-                dateStr = sb.toString();
-            }
         } else {
             // Let's see if we have timezone indicator or not...
             if (hasTimeZone(dateStr)) {
                 c = dateStr.charAt(len-3);
                 if (c == ':') { // remove optional colon
                     // remove colon
                     StringBuilder sb = new StringBuilder(dateStr);
                     sb.delete(len-3, len-2);
                     dateStr = sb.toString();
                 } else if (c == '+' || c == '-') { // missing minutes
                     // let's just append '00'
                     dateStr += "00";
                 }
-                // Milliseconds partial or missing; and even seconds are optional
-                len = dateStr.length();
-                // remove 'T', '+'/'-' and 4-digit timezone-offset
-                c = dateStr.charAt(len-9);
-                if (Character.isDigit(c)) {
-                    StringBuilder sb = new StringBuilder(dateStr);
-                    sb.insert(len-5, ".000");
-                    dateStr = sb.toString();
-                }
                 df = _formatISO8601;
                 if (_formatISO8601 == null) {
                     df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
                 }
             } else {
                 // If not, plain date. Easiest to just patch 'Z' in the end?
                 StringBuilder sb = new StringBuilder(dateStr);
-                // And possible also millisecond part if missing
-                int timeLen = len - dateStr.lastIndexOf('T') - 1;
-                if (timeLen <= 8) {
-                        sb.append(".000");
-                }
                 sb.append('Z');
                 dateStr = sb.toString();
                 df = _formatISO8601_z;
                 if (df == null) {
                     df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,
                             _timezone, _locale);
                 }
             }
         }
+    }
     return df.parse(dateStr, pos);
 }
+
+private int lastIndexOfDigit(String str, int endIndex) {
+    for (int i = endIndex - 1; i >= 0; i--) {
+        if (Character.isDigit(str.charAt(i))) {
+            return i;
+        }
+    }
+    return -1;
+}
\ No newline at end of file
