diff --git a/tmp/4ccb4f3b-73cc-4bca-b5ef-6c7a282fcf71_buggy.java b/tmp/d3332d73-c11b-4e45-a673-7d61196a3b37_fixed.java
index c9da1b7..222d735 100644
--- a/tmp/4ccb4f3b-73cc-4bca-b5ef-6c7a282fcf71_buggy.java
+++ b/tmp/d3332d73-c11b-4e45-a673-7d61196a3b37_fixed.java
@@ -1,33 +1,21 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+        if ((_explicitCreators & mask) != 0) { // both are explicitly annotated
+            if (!explicit) { // new one is not explicitly annotated, ignore
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            // both explicit: throw exception
             throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                     +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
