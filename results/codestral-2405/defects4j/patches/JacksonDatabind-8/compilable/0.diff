diff --git a/tmp/d87ea274-4545-43d9-9921-55e1e9f97df4_buggy.java b/tmp/97abc1cc-5302-4dbd-998f-192248a73ce0_fixed.java
index c9da1b7..4af6d6b 100644
--- a/tmp/d87ea274-4545-43d9-9921-55e1e9f97df4_buggy.java
+++ b/tmp/97abc1cc-5302-4dbd-998f-192248a73ce0_fixed.java
@@ -1,33 +1,31 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
+
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+        if ((_explicitCreators & mask) != 0) { // already had explicitly annotated
+            if (!explicit) { // new one not annotated
+                // Check if newOne is more specific and potentially overriding oldOne
+                if (oldOne.getClass().isAssignableFrom(newOne.getClass())) {
+                    _creators[typeIndex] = _fixAccess(newOne);
+                }
                 return;
-                }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            } else { // both explicit: verify
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                         +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
             }
         }
+
+        if (oldOne.getClass() == newOne.getClass()) {
+            throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                    +" creators: already had "+oldOne+", encountered "+newOne);
+        }
+    }
+
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
