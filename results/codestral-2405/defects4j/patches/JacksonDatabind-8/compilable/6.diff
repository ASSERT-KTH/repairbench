diff --git a/tmp/efc50d5b-2cca-4e18-b261-8a631e3fb915_buggy.java b/tmp/4aee55ec-72ab-45a1-a110-c02502c9429b_fixed.java
index c9da1b7..c811f18 100644
--- a/tmp/efc50d5b-2cca-4e18-b261-8a631e3fb915_buggy.java
+++ b/tmp/4aee55ec-72ab-45a1-a110-c02502c9429b_fixed.java
@@ -1,33 +1,25 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
-        if (oldOne != null) {
 
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+    // skip if new one is not explicitly annotated and there's already an explicitly marked one
+    if (!explicit && ((_explicitCreators & mask) != 0)) {
         return;
     }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
 
+    // already had an explicitly marked one.
+    if (oldOne != null) {
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
             throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                     +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
         }
     }
+
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
