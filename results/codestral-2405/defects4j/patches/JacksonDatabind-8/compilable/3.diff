diff --git a/tmp/a615f1e9-0919-4034-b05d-f9b81d07a525_buggy.java b/tmp/2e1073d6-3059-498c-83bd-d4df85acde00_fixed.java
index c9da1b7..a19e743 100644
--- a/tmp/a615f1e9-0919-4034-b05d-f9b81d07a525_buggy.java
+++ b/tmp/2e1073d6-3059-498c-83bd-d4df85acde00_fixed.java
@@ -1,33 +1,40 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+        if ((_explicitCreators & mask) != 0) { // already had explicitly annotated
+            if (!explicit) { // skip if new one is not explicitly annotated
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+            // both are explicitly annotated: check if the creators are the same
+            if (oldOne.equals(newOne)) {
+                // same creators are fine, no need to throw an exception
+                return;
             }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            // throw an exception if creators are different
             throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                     +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+        } else {
+            // oldOne is not explicitly annotated, check if newOne is explicitly annotated
+            if (explicit) {
+                _explicitCreators |= mask;
+                _creators[typeIndex] = _fixAccess(newOne);
             }
+            // If both are not explicitly annotated then it's fine to override if the classes are the same.
+            // Otherwise, we can't decide which one to use, so we throw an exception.
+            if (oldOne.getClass() != newOne.getClass()) {
+                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                        +" creators: already had "+oldOne+", encountered "+newOne);
             }
+        }
+    } else {
+        // oldOne is null, so we can safely assign the newOne
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
+}
\ No newline at end of file
