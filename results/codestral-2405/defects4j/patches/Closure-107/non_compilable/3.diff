diff --git a/tmp/379d6968-0947-465c-a068-f97fd602c05d_buggy.java b/tmp/25fc2930-1de5-431c-b07d-6cc04a4ea6a9_fixed.java
index fa9dfcc..11beab6 100644
--- a/tmp/379d6968-0947-465c-a068-f97fd602c05d_buggy.java
+++ b/tmp/25fc2930-1de5-431c-b07d-6cc04a4ea6a9_fixed.java
@@ -1,61 +1,65 @@
+{
   @Override
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     if (flags.processJqueryPrimitives) {
       options.setCodingConvention(new JqueryCodingConvention());
     } else {
       options.setCodingConvention(new ClosureCodingConvention());
     }
 
     options.setExtraAnnotationNames(flags.extraAnnotationName);
 
     CompilationLevel level = flags.compilationLevel;
     level.setOptionsForCompilationLevel(options);
 
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
 
     if (flags.useTypesForOptimization) {
       level.setTypeBasedOptimizationOptions(options);
     }
 
     if (flags.generateExports) {
       options.setGenerateExports(flags.generateExports);
     }
 
     WarningLevel wLevel = flags.warningLevel;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
 
     options.closurePass = flags.processClosurePrimitives;
 
     options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&
         flags.processJqueryPrimitives;
 
     options.angularPass = flags.angularPass;
 
     if (!flags.translationsFile.isEmpty()) {
       try {
         options.messageBundle = new XtbMessageBundle(
             new FileInputStream(flags.translationsFile),
             flags.translationsProject);
       } catch (IOException e) {
         throw new RuntimeException("Reading XTB file", e);
       }
     } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
+      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
+      // so we might as well inline it. But we should keep the i18n
+      // warnings enabled, because the user didn't really "ask" for i18n.
+      wLevel.setOptionsForWarningLevel(options, true);
+      options.messageBundle = new EmptyMessageBundle();
+    } else {
       // In SIMPLE or WHITESPACE mode, if the user hasn't specified a
       // translations file, they might reasonably try to write their own
       // implementation of goog.getMsg that makes the substitution at
-      // run-time.
-      //
-      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
-      // so we might as well inline it. But shut off the i18n warnings,
-      // because the user didn't really ask for i18n.
-      options.messageBundle = new EmptyMessageBundle();
+      // run-time. In this case, we should keep the i18n warnings enabled.
+      wLevel.setOptionsForWarningLevel(options);
     }
 
     return options;
   }
+}
\ No newline at end of file
