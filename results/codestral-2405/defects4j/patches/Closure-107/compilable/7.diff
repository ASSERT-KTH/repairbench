diff --git a/tmp/e89e0018-5c60-4a00-a26f-78efa9b6285b_buggy.java b/tmp/241363ff-b6f7-482c-984a-9632f22f3f9f_fixed.java
index fa9dfcc..bae154a 100644
--- a/tmp/e89e0018-5c60-4a00-a26f-78efa9b6285b_buggy.java
+++ b/tmp/241363ff-b6f7-482c-984a-9632f22f3f9f_fixed.java
@@ -1,61 +1,55 @@
   @Override
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     if (flags.processJqueryPrimitives) {
       options.setCodingConvention(new JqueryCodingConvention());
     } else {
       options.setCodingConvention(new ClosureCodingConvention());
     }
 
     options.setExtraAnnotationNames(flags.extraAnnotationName);
 
     CompilationLevel level = flags.compilationLevel;
     level.setOptionsForCompilationLevel(options);
 
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
 
     if (flags.useTypesForOptimization) {
       level.setTypeBasedOptimizationOptions(options);
     }
 
     if (flags.generateExports) {
       options.setGenerateExports(flags.generateExports);
     }
 
     WarningLevel wLevel = flags.warningLevel;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
 
     options.closurePass = flags.processClosurePrimitives;
 
-    options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&
-        flags.processJqueryPrimitives;
+    options.jqueryPass = flags.processJqueryPrimitives;
 
     options.angularPass = flags.angularPass;
 
-    if (!flags.translationsFile.isEmpty()) {
+    if (flags.translationsFile.isEmpty() && CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
+      // In ADVANCED_OPTIMIZATIONS mode, if the user hasn't specified a
+      // translations file, we should inline goog.getMsg. But we should
+      // avoid i18n warnings because the user didn't explicitly ask for i18n.
+      options.messageBundle = new EmptyMessageBundle();
+    } else if (!flags.translationsFile.isEmpty()) {
       try {
         options.messageBundle = new XtbMessageBundle(
             new FileInputStream(flags.translationsFile),
             flags.translationsProject);
       } catch (IOException e) {
         throw new RuntimeException("Reading XTB file", e);
       }
-    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
-      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a
-      // translations file, they might reasonably try to write their own
-      // implementation of goog.getMsg that makes the substitution at
-      // run-time.
-      //
-      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
-      // so we might as well inline it. But shut off the i18n warnings,
-      // because the user didn't really ask for i18n.
-      options.messageBundle = new EmptyMessageBundle();
     }
 
     return options;
   }
\ No newline at end of file
