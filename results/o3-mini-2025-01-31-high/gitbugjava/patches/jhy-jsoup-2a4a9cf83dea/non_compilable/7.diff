diff --git a/tmp/38140863-fab1-458c-8a1f-5ad1e6424b93_buggy.java b/tmp/be62bf32-3795-4f6d-ad6e-a53de1e797cf_fixed.java
index c9c2b44..1b21bd3 100644
--- a/tmp/38140863-fab1-458c-8a1f-5ad1e6424b93_buggy.java
+++ b/tmp/be62bf32-3795-4f6d-ad6e-a53de1e797cf_fixed.java
@@ -1,13 +1,20 @@
 @Override
 public boolean matches(Element root, Element element) {
-            // evaluate from last to first
-            for (int i = evaluators.size() -1; i >= 0; --i) {
+    // Start with the candidate element and work backwards through the evaluators.
+    int i = evaluators.size() - 1;
+    if (!evaluators.get(i).matches(root, element))
+        return false;
+    // Walk up the chain for the remaining evaluators.
+    while (i > 0) {
+        // Move to the candidateâ€™s parent.
+        element = element.parent();
+        // For descendant combinators, keep climbing until we find an ancestor that matches.
+        while (element != null && !evaluators.get(i - 1).matches(root, element)) {
+            element = element.parent();
+        }
         if (element == null)
             return false;
-                Evaluator eval = evaluators.get(i);
-                if (!eval.matches(root, element))
-                    return false;
-                element = element.parent();
+        i--;
     }
     return true;
 }
\ No newline at end of file
