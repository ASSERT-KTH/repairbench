diff --git a/tmp/e178cc42-a037-4883-8523-3eab208cfb0f_buggy.java b/tmp/9e3b2a69-6b46-4bc6-acf6-11930e4fa614_fixed.java
index c9c2b44..ae64b11 100644
--- a/tmp/e178cc42-a037-4883-8523-3eab208cfb0f_buggy.java
+++ b/tmp/9e3b2a69-6b46-4bc6-acf6-11930e4fa614_fixed.java
@@ -1,13 +1,28 @@
 @Override
 public boolean matches(Element root, Element element) {
-            // evaluate from last to first
-            for (int i = evaluators.size() -1; i >= 0; --i) {
+    // First, ensure the candidate element is actually within the given root
+    if (!(root.equals(element) || root.contains(element)))
+        return false;
+
+    // The last evaluator must directly match the candidate element.
+    int sz = evaluators.size();
+    if (!evaluators.get(sz - 1).matches(root, element))
+        return false;
+
+    // Now, work backwards through the evaluators. For each one, move up the 
+    // ancestry (possibly skipping several levels) until we find one that matches.
+    // If we reach the root without a match, then the candidate does not match.
+    for (int i = sz - 2; i >= 0; i--) {
+        element = element.parent();
         if (element == null)
             return false;
-                Evaluator eval = evaluators.get(i);
-                if (!eval.matches(root, element))
+        while (!evaluators.get(i).matches(root, element)) {
+            if (element == root)
                 return false;
             element = element.parent();
+            if (element == null)
+                return false;
+        }
     }
     return true;
 }
\ No newline at end of file
