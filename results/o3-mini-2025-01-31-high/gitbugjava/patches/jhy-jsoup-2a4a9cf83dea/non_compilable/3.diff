diff --git a/tmp/40cbc22f-b4e8-493c-a88d-c76c795a4af3_buggy.java b/tmp/c4ef7c25-8001-4f82-9930-0770fbfc8911_fixed.java
index c9c2b44..f722e75 100644
--- a/tmp/40cbc22f-b4e8-493c-a88d-c76c795a4af3_buggy.java
+++ b/tmp/c4ef7c25-8001-4f82-9930-0770fbfc8911_fixed.java
@@ -1,13 +1,26 @@
 @Override
 public boolean matches(Element root, Element element) {
-            // evaluate from last to first
-            for (int i = evaluators.size() -1; i >= 0; --i) {
-                if (element == null)
+    int size = evaluators.size();
+    // When used in a descendant query (more than one evaluator), the element
+    // must be a proper descendant of the context (i.e. not the root itself).
+    if (size > 1 && element == root)
         return false;
-                Evaluator eval = evaluators.get(i);
-                if (!eval.matches(root, element))
+
+    int i = size - 1;
+    // The candidate element must match the right-most evaluator.
+    if (!evaluators.get(i).matches(root, element))
         return false;
+
+    // For each remaining evaluator (moving left in the selector),
+    // look upward through the ancestors until a match is found.
+    for (i--; i >= 0; i--) {
         element = element.parent();
+        while (element != null && element != root && !evaluators.get(i).matches(root, element)) {
+            element = element.parent();
+        }
+        // If we reached the root (or ran out of ancestors) without a match, then fail.
+        if (element == null || element == root)
+            return false;
     }
     return true;
 }
\ No newline at end of file
