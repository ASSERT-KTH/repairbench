diff --git a/tmp/2230e4ec-d4f2-4aa4-9ee7-7348facb8467_buggy.java b/tmp/07b0615e-d3dc-4d25-aedc-faca48aede15_fixed.java
index 1c732f4..e753c9d 100644
--- a/tmp/2230e4ec-d4f2-4aa4-9ee7-7348facb8467_buggy.java
+++ b/tmp/07b0615e-d3dc-4d25-aedc-faca48aede15_fixed.java
@@ -1,88 +1,111 @@
 @Override
 protected Object decode(
         Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
     String sentence = (String) msg;
+    // Extract the content between the first and last '|' characters
     sentence = sentence.substring(sentence.indexOf('|') + 1, sentence.lastIndexOf('|'));
 
     Position position = new Position();
     position.setProtocol(getProtocolName());
 
     for (String entry : sentence.split(",")) {
         int delimiter = entry.indexOf('=');
         String key = entry.substring(0, delimiter);
         String value = entry.substring(delimiter + 1);
         switch (key) {
             case "unit":
                 DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, value);
                 if (deviceSession != null) {
                     position.setDeviceId(deviceSession.getDeviceId());
                 }
                 break;
             case "gps_valid":
                 position.setValid(Integer.parseInt(value) != 0);
                 break;
             case "datetime_actual":
                 position.setTime(new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").parse(value));
                 break;
             case "latitude":
                 position.setLatitude(Double.parseDouble(value));
                 break;
             case "longitude":
                 position.setLongitude(Double.parseDouble(value));
                 break;
             case "altitude":
                 position.setAltitude(Double.parseDouble(value));
                 break;
             case "velocity":
                 position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(value)));
                 break;
             case "heading":
                 position.setCourse(Integer.parseInt(value));
                 break;
             case "eventid":
                 position.set(Position.KEY_EVENT, Integer.parseInt(value));
                 break;
             case "mileage":
+                // Convert mileage (in km) into odometer value in meters
                 position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));
                 break;
+            case "odometer":
+                // Ignore the raw odometer field to avoid overwriting mileage conversion
+                break;
             case "satellites":
                 position.set(Position.KEY_SATELLITES, Integer.parseInt(value));
                 break;
             case "ignition":
                 position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);
                 break;
             case "door":
                 position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);
                 break;
             case "arm":
                 position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);
                 break;
             case "fuel":
                 position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));
                 break;
             case "rpm":
                 position.set(Position.KEY_RPM, Integer.parseInt(value));
                 break;
             case "main_voltage":
                 position.set(Position.KEY_POWER, Double.parseDouble(value));
                 break;
             case "backup_voltage":
                 position.set(Position.KEY_BATTERY, Double.parseDouble(value));
                 break;
             case "analog1":
             case "analog2":
             case "analog3":
+                // Append the last character (digit) to the adc prefix, e.g. "adc1"
                 position.set(Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'), Double.parseDouble(value));
                 break;
+            // Process extra boolean fields that are sent as 0/1,
+            // so that "1" is stored as true instead of the string "1"
+            case "pending":
+            case "gps_connected":
+            case "logic_state":
+            case "emergency":
+            case "driver":
+            case "disarm":
+            case "siren":
+            case "lock":
+            case "immobilizer":
+            case "unlock":
+                position.set(key, Integer.parseInt(value) != 0);
+                break;
+            // Extra keys that are left as their string value
             case "extra1":
             case "extra2":
             case "extra3":
+                position.set(key, value);
+                break;
             default:
                 position.set(key, value);
                 break;
         }
     }
 
     return position;
 }
\ No newline at end of file
