diff --git a/tmp/0d59d241-af1d-42f5-a92d-6f72404e3259_buggy.java b/tmp/6a276d10-73c7-4014-9435-eaf7e98155df_fixed.java
index bdde834..be230c7 100644
--- a/tmp/0d59d241-af1d-42f5-a92d-6f72404e3259_buggy.java
+++ b/tmp/6a276d10-73c7-4014-9435-eaf7e98155df_fixed.java
@@ -1,10 +1,21 @@
 static boolean isNonRetryableHTTPCode(CloseableHttpResponse response, boolean retryHTTP403) {
-    return response != null
-        && (response.getStatusLine().getStatusCode() < 500
-            || // service unavailable
-            response.getStatusLine().getStatusCode() >= 600)
-        && // gateway timeout
-        response.getStatusLine().getStatusCode() != 408
-        && // request timeout
-        (!retryHTTP403 || response.getStatusLine().getStatusCode() != 403);
+  if (response == null) {
+    return false;
+  }
+  int statusCode = response.getStatusLine().getStatusCode();
+  // Always retry on HTTP 408 (Request Timeout) and 429 (Too Many Requests)
+  if (statusCode == 408 || statusCode == 429) {
+    return false;
+  }
+  // If the no-retry on HTTP 403 option is disabled, then 403 is non-retryable.
+  // But if retryHTTP403 is enabled, then 403 should be retried.
+  if (retryHTTP403 && statusCode == 403) {
+    return false;
+  }
+  // HTTP codes in the 500-599 range are considered retryable.
+  if (statusCode >= 500 && statusCode < 600) {
+    return false;
+  }
+  // All other status codes are non-retryable.
+  return true;
 }
\ No newline at end of file
