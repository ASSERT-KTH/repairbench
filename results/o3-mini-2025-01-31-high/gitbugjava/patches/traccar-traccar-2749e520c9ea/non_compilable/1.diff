diff --git a/tmp/269338c7-6c7a-4894-942e-8484e3122332_buggy.java b/tmp/579c94ca-775c-4ec2-ab12-dfa73b2ab86d_fixed.java
index 7b9216c..f81bd2f 100644
--- a/tmp/269338c7-6c7a-4894-942e-8484e3122332_buggy.java
+++ b/tmp/579c94ca-775c-4ec2-ab12-dfa73b2ab86d_fixed.java
@@ -1,47 +1,68 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
+    // Process optional TLV parameters (e.g. gyro data).
+    // The gyro parameter is identified by parameter id 0x040c.
+    while (buf.readableBytes() >= 3) {
+        int paramId = buf.readUnsignedShort();
+        int length = buf.readUnsignedByte();
+        if (buf.readableBytes() < length) {
+            break; // not enough data for this parameter, exit loop
+        }
+        if (paramId == 0x040c) {
+            byte[] gyroBytes = new byte[length];
+            buf.readBytes(gyroBytes);
+            StringBuilder sb = new StringBuilder();
+            for (byte b : gyroBytes) {
+                sb.append(String.format("%02x", b));
+            }
+            position.set("gyro", sb.toString());
+        } else {
+            buf.skipBytes(length);
+        }
+    }
+
     return position;
 }
\ No newline at end of file
