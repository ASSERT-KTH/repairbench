diff --git a/tmp/20dafd0d-6039-46a3-a320-f325be969028_buggy.java b/tmp/b54cd1e3-687f-4ad8-a642-1328cb97aa0b_fixed.java
index 862c60c..cf69019 100644
--- a/tmp/20dafd0d-6039-46a3-a320-f325be969028_buggy.java
+++ b/tmp/b54cd1e3-687f-4ad8-a642-1328cb97aa0b_fixed.java
@@ -1,25 +1,30 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                       parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && (((TextNode) next).isBlank()));
+        if (couldSkip && isBlank())
+            return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        // Add an indent if this is the first sibling, or if outlining applies, or if the previous sibling is a <br>
+        if (!isBlank() && (
+                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock())
+             || (out.outline() && siblingNodes().size() > 0)
+             || (previousSibling() instanceof Element && "br".equals(((Element) previousSibling()).tagName()))
+            ))
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
