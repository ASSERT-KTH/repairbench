diff --git a/tmp/11848d38-9f0d-4557-bbc6-e97ccae39c5b_buggy.java b/tmp/2dbcb67f-910a-4d78-b96b-d6f6bc3bfe52_fixed.java
index 862c60c..e39be39 100644
--- a/tmp/11848d38-9f0d-4557-bbc6-e97ccae39c5b_buggy.java
+++ b/tmp/2dbcb67f-910a-4d78-b96b-d6f6bc3bfe52_fixed.java
@@ -1,25 +1,34 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && ((TextNode) next).isBlank());
+        if (couldSkip && isBlank())
+            return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        // NEW: If the previous sibling is a <br> element, then force an indent.
+        boolean preIndent = false;
+        Node prev = this.previousSibling();
+        if (prev instanceof Element && ((Element) prev).tag().getName().equals("br"))
+            preIndent = true;
+
+        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank())
+            || (out.outline() && siblingNodes().size() > 0 && !isBlank())
+            || preIndent) {
             indent(accum, depth, out);
         }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
