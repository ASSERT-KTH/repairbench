diff --git a/tmp/3aead8f1-ff67-4b4d-a78e-085c27b8e2b9_buggy.java b/tmp/1d657e86-f94d-4bd3-987a-48574e360580_fixed.java
index 862c60c..257a838 100644
--- a/tmp/3aead8f1-ff67-4b4d-a78e-085c27b8e2b9_buggy.java
+++ b/tmp/1d657e86-f94d-4bd3-987a-48574e360580_fixed.java
@@ -1,25 +1,33 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && (((TextNode) next).isBlank()));
+        if (couldSkip && isBlank())
+            return;
 
+        // indent when appropriate:
+        // either the node is the first non-blank text of a formatted block,
+        // or we're in outline mode,
+        // or if the previous sibling is a <br> element (so the text should appear on a new line).
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+            (out.outline() && siblingNodes().size() > 0 && !isBlank()) ||
+            (siblingIndex > 0 && siblingNodes().get(siblingIndex - 1) instanceof Element &&
+             ((Element) siblingNodes().get(siblingIndex - 1)).tagName().equals("br") && !isBlank())) {
             indent(accum, depth, out);
         }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
