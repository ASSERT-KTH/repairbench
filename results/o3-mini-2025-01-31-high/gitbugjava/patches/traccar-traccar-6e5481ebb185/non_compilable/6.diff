diff --git a/tmp/ac5348ac-1203-4e32-847f-d2fb213c3b89_buggy.java b/tmp/9d250ec0-c0cb-458f-8373-016e6ae15131_fixed.java
index ee599aa..7955333 100644
--- a/tmp/ac5348ac-1203-4e32-847f-d2fb213c3b89_buggy.java
+++ b/tmp/9d250ec0-c0cb-458f-8373-016e6ae15131_fixed.java
@@ -1,50 +1,60 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
 
     int length = 0;
+    int start = buf.readerIndex();
+
     if (hasLength) {
         length = buf.readUnsignedByte();
         if (length == 0) {
             boolean zeroedData = true;
+            // Check if the next data bytes are all zero; note that we use the current readerIndex as reference.
             for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
                 if (buf.getByte(i) != 0) {
                     zeroedData = false;
                     break;
                 }
             }
             if (zeroedData) {
                 buf.skipBytes(Math.min(buf.readableBytes(), 45));
             }
             return false;
         }
+        // Mark start for calculating the number of bytes actually consumed in LBS fields.
+        start = buf.readerIndex();
     }
 
+    // Decode LBS fields.
     int mcc = buf.readUnsignedShort();
     int mnc;
     if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
         mnc = buf.readUnsignedShort();
     } else {
         mnc = buf.readUnsignedByte();
     }
     int lac;
     if (type == MSG_LBS_ALARM) {
         lac = buf.readInt();
     } else {
         lac = buf.readUnsignedShort();
     }
     long cid;
     if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
         cid = buf.readLong();
     } else if (type == MSG_GPS_LBS_6) {
         cid = buf.readUnsignedInt();
     } else {
         cid = buf.readUnsignedMedium();
     }
 
     position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
-        if (length > 9) {
-            buf.skipBytes(length - 9);
+    // If there is extra data in the LBS block, skip it.
+    if (hasLength) {
+        int bytesRead = buf.readerIndex() - start;
+        if (length > bytesRead) {
+            buf.skipBytes(length - bytesRead);
+        }
     }
 
     return true;
 }
\ No newline at end of file
