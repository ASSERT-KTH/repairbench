diff --git a/tmp/de88431b-a843-42ee-8d35-edbf19cdd2f1_buggy.java b/tmp/fe51723a-eb19-4123-bb42-4918b5be4995_fixed.java
index eb0a5c8..04d0d9c 100644
--- a/tmp/de88431b-a843-42ee-8d35-edbf19cdd2f1_buggy.java
+++ b/tmp/fe51723a-eb19-4123-bb42-4918b5be4995_fixed.java
@@ -1,27 +1,29 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
+  // Only register a call context when the command is a creation request.
+  // Instead of relying on extractCommandType().isCreationCommand(), which
+  // was incorrectly classifying DELETE commands, we use the raw method.
+  if (!"CREATE".equalsIgnoreCase(ariCommand.getMethod())) {
     return Try.success(Done.done());
   }
 
   final Option<AriResource> maybeResource =
       ariCommand
           .extractResourceRelations()
           .find(AriResourceRelation::isCreated)
           .map(AriResourceRelation::getResource);
 
   if (maybeResource.isEmpty()) {
     return Try.failure(
         new RuntimeException(
             String.format(
                 "Failed to extract resourceId from command '%s'", ariCommand.toString())));
   }
 
   final AriResource resource = maybeResource.get();
-
   callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
   return Try.success(Done.done());
 }
\ No newline at end of file
