diff --git a/tmp/ae76d195-9ce2-45f7-a07c-eb5d99490c96_buggy.java b/tmp/853c1392-0410-45c2-bb05-91dd60cca340_fixed.java
index d87dd79..6291328 100644
--- a/tmp/ae76d195-9ce2-45f7-a07c-eb5d99490c96_buggy.java
+++ b/tmp/853c1392-0410-45c2-bb05-91dd60cca340_fixed.java
@@ -1,47 +1,53 @@
 @Override
-    protected Object decode(
-            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+protected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    // Search forward for the first occurrence of the frame delimiter
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
+    if (endIndex < 0) {
+        return null;
+    }
+
+    // Create a new buffer for the decoded frame,
+    // reading only up to the first complete frame.
+    ByteBuf frame = Unpooled.buffer(endIndex - buf.readerIndex());
     while (buf.readerIndex() < endIndex) {
         byte b1 = buf.readByte();
         if (b1 == '}') {
+            // Ensure there is a following byte for the escape sequence.
+            if (buf.readerIndex() >= endIndex) {
+                throw new IllegalArgumentException("Incomplete escape sequence");
+            }
             byte b2 = buf.readByte();
             switch (b2) {
                 case 0x01:
                     frame.writeByte('}');
                     break;
                 case 0x02:
                     frame.writeByte('[');
                     break;
                 case 0x03:
                     frame.writeByte(']');
                     break;
                 case 0x04:
                     frame.writeByte(',');
                     break;
                 case 0x05:
                     frame.writeByte('*');
                     break;
                 default:
                     throw new IllegalArgumentException(String.format(
                             "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
             }
         } else {
             frame.writeByte(b1);
         }
     }
     return frame;
 }
\ No newline at end of file
-
-        return null;
-    }
