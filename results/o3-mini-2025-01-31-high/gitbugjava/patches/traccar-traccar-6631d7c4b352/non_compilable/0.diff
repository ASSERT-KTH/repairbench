diff --git a/tmp/f1f69fb5-0128-4525-8236-b961dc051b84_buggy.java b/tmp/a891c152-811c-4c59-bda0-ea5885f8a3d1_fixed.java
index d87dd79..c421796 100644
--- a/tmp/f1f69fb5-0128-4525-8236-b961dc051b84_buggy.java
+++ b/tmp/a891c152-811c-4c59-bda0-ea5885f8a3d1_fixed.java
@@ -1,47 +1,60 @@
 @Override
-    protected Object decode(
-            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+protected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+    int startIndex = buf.readerIndex();
+    int frameEndIndex = -1;
 
-        int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
-            if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
+    // Scan forward from the reader index for the first unescaped ']'
+    for (int i = startIndex; i < buf.writerIndex(); i++) {
+        byte b = buf.getByte(i);
+        if (b == '}') {
+            // Make sure we have the escaped value available
+            if (i + 1 >= buf.writerIndex()) {
+                return null; // incomplete escape sequence, wait for more data
+            }
+            i++; // skip next byte as it is part of the escape sequence
+        } else if (b == ']') {
+            frameEndIndex = i;
             break;
         }
     }
 
-        if (endIndex > 0) {
+    // No complete frame found
+    if (frameEndIndex < 0) {
+        return null;
+    }
+
+    int frameEnd = frameEndIndex + 1; // include the closing bracket
+
+    // Decode the frame (handling escape sequences)
     ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
+    while (buf.readerIndex() < frameEnd) {
+        byte b = buf.readByte();
+        if (b == '}') {
             byte b2 = buf.readByte();
             switch (b2) {
                 case 0x01:
                     frame.writeByte('}');
                     break;
                 case 0x02:
                     frame.writeByte('[');
                     break;
                 case 0x03:
                     frame.writeByte(']');
                     break;
                 case 0x04:
                     frame.writeByte(',');
                     break;
                 case 0x05:
                     frame.writeByte('*');
                     break;
                 default:
                     throw new IllegalArgumentException(String.format(
                             "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
             }
         } else {
-                    frame.writeByte(b1);
+            frame.writeByte(b);
         }
     }
+
     return frame;
 }
\ No newline at end of file
-
-        return null;
-    }
