diff --git a/tmp/e2984140-1218-4e59-8243-9f5ac0794576_buggy.java b/tmp/e969eabe-3524-4df4-ae7f-76f530ba5909_fixed.java
index 139579d..3f2f4b1 100644
--- a/tmp/e2984140-1218-4e59-8243-9f5ac0794576_buggy.java
+++ b/tmp/e969eabe-3524-4df4-ae7f-76f530ba5909_fixed.java
@@ -1,43 +1,44 @@
-    // performance sensitive
 public boolean hasClass(String className) {
-        final String classAttr = attributes.get("class");
+    // Retrieve the "class" attribute in a case-insensitive manner.
+    // This fixes the bug where elements with attribute names like "Class" or "CLASS" were missed.
+    String classAttr = attributes.getIgnoreCase("class");
+    if (classAttr == null)
+        classAttr = "";
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
+    // If the entire attribute exactly matches the requested class name (ignoring case)
     if (len == wantLen) {
         return className.equalsIgnoreCase(classAttr);
     }
 
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
+    // Otherwise, scan the attribute looking for whitespace-delimited tokens.
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                // End of a token â€“ if token length matches and equals (ignoring case), then we have a match.
+                if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen))
                     return true;
-                    }
                 inClass = false;
             }
         } else {
             if (!inClass) {
-                    // we're in a class name : keep the start of the substring
                 inClass = true;
                 start = i;
             }
         }
     }
 
-        // check the last entry
+    // Check the last token in the attribute string.
     if (inClass && len - start == wantLen) {
         return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
 
     return false;
 }
\ No newline at end of file
