diff --git a/tmp/c03c06ce-db84-4419-a273-dad14a8dddd2_buggy.java b/tmp/7efc0003-b9cb-427a-8649-cc2e03be612b_fixed.java
index 139579d..65acb51 100644
--- a/tmp/c03c06ce-db84-4419-a273-dad14a8dddd2_buggy.java
+++ b/tmp/7efc0003-b9cb-427a-8649-cc2e03be612b_fixed.java
@@ -1,43 +1,44 @@
 // performance sensitive
 public boolean hasClass(String className) {
-        final String classAttr = attributes.get("class");
+    // Look up the "class" attribute without being tripped up by key case.
+    String classAttr = null;
+    for (Attribute attr : attributes) {
+        if (attr.getKey().equalsIgnoreCase("class")) {
+            classAttr = attr.getValue();
+            break;
+        }
+    }
+    if (classAttr == null || classAttr.length() == 0)
+        return false;
+
     final int len = classAttr.length();
     final int wantLen = className.length();
 
-        if (len == 0 || len < wantLen) {
+    if (len < wantLen)
         return false;
-        }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
+    // fast path: if there is no extra whitespace, the attribute must exactly equal className (ignoring case)
+    if (len == wantLen)
         return className.equalsIgnoreCase(classAttr);
-        }
 
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
+    // otherwise, do a whitespace‐aware scan to check for a token that equals className (ignoring case)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                if ((i - start) == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen))
                     return true;
-                    }
                 inClass = false;
             }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
+        } else if (!inClass) {
             inClass = true;
             start = i;
         }
     }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
+    // check the last token if the string didn’t end with whitespace
+    if (inClass && (len - start) == wantLen)
         return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
 
     return false;
 }
\ No newline at end of file
