diff --git a/tmp/b74d3a0d-8709-4470-a1a0-c7faf3e5d189_buggy.java b/tmp/43d53c05-8859-4384-bb2f-c5b4d341822c_fixed.java
index 139579d..0130679 100644
--- a/tmp/b74d3a0d-8709-4470-a1a0-c7faf3e5d189_buggy.java
+++ b/tmp/43d53c05-8859-4384-bb2f-c5b4d341822c_fixed.java
@@ -1,43 +1,43 @@
 // performance sensitive
 public boolean hasClass(String className) {
-        final String classAttr = attributes.get("class");
+    // Use a case-insensitive lookup for the "class" attribute.
+    final String classAttr = attributes.getIgnoreCase("class");
+    if (classAttr == null || classAttr.length() == 0)
+        return false;
+        
     final int len = classAttr.length();
     final int wantLen = className.length();
     
-        if (len == 0 || len < wantLen) {
+    if (len < wantLen)
         return false;
-        }
     
     // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
+    if (len == wantLen)
+        return classAttr.equalsIgnoreCase(className);
     
     // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
                 // whitespace ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen))
                     return true;
-                    }
                 inClass = false;
             }
         } else {
             if (!inClass) {
-                    // we're in a class name : keep the start of the substring
+                // start a new token
                 inClass = true;
                 start = i;
             }
         }
     }
     
-        // check the last entry
-        if (inClass && len - start == wantLen) {
+    // check the last token
+    if (inClass && len - start == wantLen)
         return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
     
     return false;
 }
\ No newline at end of file
