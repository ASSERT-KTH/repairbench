diff --git a/tmp/7426245e-666b-4ced-8cf0-37ab3b4f31ae_buggy.java b/tmp/4aad4e1f-a0cd-421d-930d-aacb95d11e25_fixed.java
index 70cafe0..69b5083 100644
--- a/tmp/7426245e-666b-4ced-8cf0-37ab3b4f31ae_buggy.java
+++ b/tmp/4aad4e1f-a0cd-421d-930d-aacb95d11e25_fixed.java
@@ -1,18 +1,16 @@
-    /**
-     * Checks whether the given column is basic.
-     * @param col index of the column to check
-     * @return the row that the variable is basic in.  null if the column is not basic
-     */
 private Integer getBasicRow(final int col) {
-        Integer row = null;
+    Integer candidate = null;
     for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
-                } else {
+            if (candidate != null) {
                 return null;
             }
+            candidate = i;
         }
     }
-        return row;
+    // A column is basic only if its nonzero entry is 1.0.
+    if (candidate != null && !MathUtils.equals(getEntry(candidate, col), 1.0, epsilon)) {
+        return null;
+    }
+    return candidate;
 }
\ No newline at end of file
