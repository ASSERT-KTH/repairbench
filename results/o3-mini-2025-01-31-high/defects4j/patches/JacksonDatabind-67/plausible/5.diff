diff --git a/tmp/35809716-2253-4ad5-a90c-1a7158ac834f_buggy.java b/tmp/106ba628-9083-4109-bff7-49d6de5fd0ab_fixed.java
index bc80637..026e499 100644
--- a/tmp/35809716-2253-4ad5-a90c-1a7158ac834f_buggy.java
+++ b/tmp/106ba628-9083-4109-bff7-49d6de5fd0ab_fixed.java
@@ -1,33 +1,30 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
-            JavaType type)
-        throws JsonMappingException
-    {
+        JavaType type) throws JsonMappingException {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+            // Instead of returning immediately for enums, assign to 'deser'
+            // so that subsequent modifier application will occur.
+            deser = _createEnumKeyDeserializer(ctxt, type);
+        } else {
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+    }
+    if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
             deser = mod.modifyKeyDeserializer(config, type, deser);
         }
     }
-        }
     return deser;
 }
\ No newline at end of file
