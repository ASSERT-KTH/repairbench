diff --git a/tmp/ba9ecb19-849e-4476-9ab9-e72e791cb391_buggy.java b/tmp/c6aeecae-e934-4d06-a00b-796ca019f70a_fixed.java
index 0722547..b85f8c2 100644
--- a/tmp/ba9ecb19-849e-4476-9ab9-e72e791cb391_buggy.java
+++ b/tmp/c6aeecae-e934-4d06-a00b-796ca019f70a_fixed.java
@@ -1,26 +1,30 @@
 @Override
 public void feedInput(byte[] buf, int start, int end) throws IOException
 {
     // Must not have remaining input
     if (_inputPtr < _inputEnd) {
         _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
     }
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
     // and shouldn't have been marked as end-of-input
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
-        // Time to update pointers first
+    // Only update the cumulative count if there was previous input;
+    // if no data was fed before, don't add anything.
+    if (_inputEnd > 0) {
         _currInputProcessed += _origBufferLen;
+    }
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
+    // Adjust row start so that positions from the new segment are relative
+    // to the old segment as if the current row had extended from the previous input.
     _currInputRowStart = start - (_inputEnd - _currInputRowStart);
 
-        // And then update buffer settings
+    // Update buffer pointers and record the new segment length
     _inputBuffer = buf;
     _inputPtr = start;
     _inputEnd = end;
     _origBufferLen = end - start;
 }
\ No newline at end of file
