diff --git a/tmp/d237d684-030a-488d-a782-5560644807ec_buggy.java b/tmp/5704fb27-68bd-46d4-a644-3e3c858c102c_fixed.java
index 3127f85..7518784 100644
--- a/tmp/d237d684-030a-488d-a782-5560644807ec_buggy.java
+++ b/tmp/5704fb27-68bd-46d4-a644-3e3c858c102c_fixed.java
@@ -1,24 +1,31 @@
-    /**
-     * For this distribution, {@code X}, this method returns {@code P(X < x)}.
-     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
-     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
-     *
-     * @param x Value at which the CDF is evaluated.
-     * @return CDF evaluated at {@code x}.
-     * @throws MathException if the algorithm fails to converge
-     */
 public double cumulativeProbability(double x) throws MathException {
-        final double dev = x - mean;
+    // Handle infinite values explicitly to avoid issues in computing erf.
+    if (x == Double.POSITIVE_INFINITY) {
+        return 1.0;
+    }
+    if (x == Double.NEGATIVE_INFINITY) {
+        return 0.0;
+    }
+
+    double dev = x - mean;
+    // For values extremely far from the mean, return 0 or 1 directly.
+    if (dev < -40 * standardDeviation) {
+        return 0.0;
+    }
+    if (dev > 40 * standardDeviation) {
+        return 1.0;
+    }
+
     try {
-        return 0.5 * (1.0 + Erf.erf((dev) /
-                    (standardDeviation * FastMath.sqrt(2.0))));
+        return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * FastMath.sqrt(2.0))));
     } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
-                return 0;
+        // If the algorithm fails to converge, use top-coding near the tails.
+        if (x < (mean - 20 * standardDeviation)) {
+            return 0.0;
         } else if (x > (mean + 20 * standardDeviation)) {
-                return 1;
+            return 1.0;
         } else {
-                throw ex;
+            throw new MathException("Unable to compute cumulative probability", ex);
         }
     }
 }
\ No newline at end of file
