diff --git a/tmp/6bfce29c-1a53-499a-9167-901326eb518f_buggy.java b/tmp/3486637f-6caa-4584-84e9-f8b885dfb581_fixed.java
index c9da1b7..53b9284 100644
--- a/tmp/6bfce29c-1a53-499a-9167-901326eb518f_buggy.java
+++ b/tmp/3486637f-6caa-4584-84e9-f8b885dfb581_fixed.java
@@ -1,33 +1,31 @@
-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
-    {
+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+        if ((_explicitCreators & mask) != 0) {
             if (!explicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
         }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+        // Compare the declaring classes, not the wrapper types.
+        Class<?> oldDeclaring = oldOne.getDeclaringClass();
+        Class<?> newDeclaring = newOne.getDeclaringClass();
+        if (oldDeclaring == newDeclaring) {
+            throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
+                    + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
+        } else if (oldDeclaring.isAssignableFrom(newDeclaring)) {
+            // newOne is declared in a subclass (more specific); override oldOne.
+        } else if (newDeclaring.isAssignableFrom(oldDeclaring)) {
+            // oldOne is more specific; ignore newOne.
+            return;
+        } else {
             throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                     + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
