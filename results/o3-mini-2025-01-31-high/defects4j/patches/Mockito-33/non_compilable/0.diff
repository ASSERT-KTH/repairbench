diff --git a/tmp/114b5c60-3a67-4795-95ea-78147094d6e7_buggy.java b/tmp/0c0efa56-a16e-4499-a599-c3d23d4d71be_fixed.java
index e1fc51f..54a58c3 100644
--- a/tmp/114b5c60-3a67-4795-95ea-78147094d6e7_buggy.java
+++ b/tmp/0c0efa56-a16e-4499-a599-c3d23d4d71be_fixed.java
@@ -1,9 +1,21 @@
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // First try the normal equality check
+    if (m1.equals(m2)) {
+        return true;
+    }
+
+    // Fallback: check if the methods have the same name and parameter types.
+    // This handles the case when one of the methods is a forwarding/bridge method.
+    if (!m1.getName().equals(m2.getName())) {
+        return false;
+    }
+
+    if (!Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())) {
+        return false;
+    }
+
+    return true;
 }
\ No newline at end of file
