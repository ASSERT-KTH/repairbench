diff --git a/tmp/a3b87432-0613-497d-a4ce-e68b7b9a5251_buggy.java b/tmp/8021894b-e025-41a6-96dd-f4e04e079ba1_fixed.java
index e1fc51f..cd5d9ee 100644
--- a/tmp/a3b87432-0613-497d-a4ce-e68b7b9a5251_buggy.java
+++ b/tmp/8021894b-e025-41a6-96dd-f4e04e079ba1_fixed.java
@@ -1,9 +1,11 @@
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Sometimes, due to generics, the JVM generates forwarding methods.
+    // They may not be equal (because of different declaring classes) even
+    // though they have the same signature.
+    // So, we compare the method name and the parameter types.
+    return m1.getName().equals(m2.getName()) &&
+           Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());
 }
\ No newline at end of file
