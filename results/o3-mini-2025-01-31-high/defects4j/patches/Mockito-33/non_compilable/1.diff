diff --git a/tmp/63bfb22e-5aee-4db8-9029-ce49f23b855f_buggy.java b/tmp/437473ae-531e-4577-9257-7b849c4941e7_fixed.java
index e1fc51f..80716f9 100644
--- a/tmp/63bfb22e-5aee-4db8-9029-ce49f23b855f_buggy.java
+++ b/tmp/437473ae-531e-4577-9257-7b849c4941e7_fixed.java
@@ -1,9 +1,14 @@
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    if (m1.equals(m2)) {
+        return true;
+    }
+    
+    // When generics are involved, Java can generate bridge/forwarding methods so that
+    // the actual Method objects are not equal even though they represent the same method.
+    // In such cases we compare the method name and parameter types.
+    return m1.getName().equals(m2.getName()) && 
+           Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());
 }
\ No newline at end of file
