diff --git a/tmp/f6a4f745-71a0-4daf-ab4c-851b141382a3_buggy.java b/tmp/def24e54-1e76-4b9d-a983-b655db093307_fixed.java
index 25c13b3..b2f4170 100644
--- a/tmp/f6a4f745-71a0-4daf-ab4c-851b141382a3_buggy.java
+++ b/tmp/def24e54-1e76-4b9d-a983-b655db093307_fixed.java
@@ -1,15 +1,10 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
 protected double getInitialDomain(double p) {
-        double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+    if (d > 2.0) {
+        // When the mean exists (d > 2), use it as the starting guess.
+        return d / (d - 2.0);
+    }
+    // For small degrees of freedom (d â‰¤ 2) the mean is undefined,
+    // so return a sensible positive default value.
+    return 1.0;
 }
\ No newline at end of file
