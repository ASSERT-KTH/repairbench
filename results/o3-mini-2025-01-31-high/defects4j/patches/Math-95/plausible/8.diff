diff --git a/tmp/d59e08e0-26ab-4314-8f7c-47e2933a1f66_buggy.java b/tmp/b8a90e8d-a577-4097-9f80-603be9698d31_fixed.java
index 25c13b3..c5ecb28 100644
--- a/tmp/d59e08e0-26ab-4314-8f7c-47e2933a1f66_buggy.java
+++ b/tmp/b8a90e8d-a577-4097-9f80-603be9698d31_fixed.java
@@ -1,15 +1,20 @@
 /**
  * Access the initial domain value, based on <code>p</code>, used to
  * bracket a CDF root.  This method is used by
  * {@link #inverseCumulativeProbability(double)} to find critical values.
  * 
+ * <p>The mean of the F distribution is given by d/(d - 2) only when the denominator
+ * degrees of freedom (d) is greater than 2. For small degrees of freedom the mean does not exist,
+ * so we must use a safe default positive value (here, 1.0) to ensure that the initial guess is in
+ * the valid domain (0, infinity).</p>
+ * 
  * @param p the desired probability for the critical value
  * @return initial domain value
  */
 protected double getInitialDomain(double p) {
-        double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+    if (d > 2.0) {
+        return d / (d - 2.0);
+    }
+    return 1.0; // safe fallback for small degrees of freedom
 }
\ No newline at end of file
