diff --git a/tmp/31f5d5f3-e57d-4076-afac-b4ef180adaab_buggy.java b/tmp/2be57499-8698-44f9-bbc7-f1ce9bfc6312_fixed.java
index e4d90e7..b5a59e4 100644
--- a/tmp/31f5d5f3-e57d-4076-afac-b4ef180adaab_buggy.java
+++ b/tmp/2be57499-8698-44f9-bbc7-f1ce9bfc6312_fixed.java
@@ -1,45 +1,56 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
-    } else if (prettyPrint) {
-      // Don't pretty print recursively.
+  }
+  // When recursing, return a short representation.
+  if (!prettyPrint) {
+    return forAnnotations ? "?" : "{...}";
+  }
+
+  // Temporarily disable pretty printing to avoid infinite recursion.
+  boolean oldPrettyPrint = prettyPrint;
   prettyPrint = false;
+  StringBuilder sb = new StringBuilder();
+  sb.append("{");
 
-      // Use a tree set so that the properties are sorted.
   Set<String> propertyNames = Sets.newTreeSet();
+  if (forAnnotations) {
+    // When printing annotations, show all properties.
+    for (ObjectType current = this;
+         current != null && !current.isNativeObjectType();
+         current = current.getImplicitPrototype()) {
+      propertyNames.addAll(current.getOwnPropertyNames());
+    }
+  } else {
+    // For non-annotation printing, limit the number of properties.
     for (ObjectType current = this;
          current != null && !current.isNativeObjectType() &&
          propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
-
-      StringBuilder sb = new StringBuilder();
-      sb.append("{");
+  }
 
   int i = 0;
   for (String property : propertyNames) {
     if (i > 0) {
       sb.append(", ");
     }
-
     sb.append(property);
     sb.append(": ");
-        sb.append(getPropertyType(property).toString());
-
-        ++i;
-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+    sb.append(forAnnotations
+              ? getPropertyType(property).toAnnotationString()
+              : getPropertyType(property).toString());
+    i++;
+    // If printing normally and there are too many properties, show only the first ones.
+    if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES &&
+        propertyNames.size() > MAX_PRETTY_PRINTED_PROPERTIES) {
       sb.append(", ...");
       break;
     }
   }
-
   sb.append("}");
-
-      prettyPrint = true;
+  prettyPrint = oldPrettyPrint;
   return sb.toString();
-    } else {
-      return "{...}";
-    }
 }
\ No newline at end of file
