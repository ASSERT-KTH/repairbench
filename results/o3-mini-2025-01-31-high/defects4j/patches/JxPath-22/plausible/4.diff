diff --git a/tmp/98b0fd76-99de-4b37-addb-fe12be8f0518_buggy.java b/tmp/d6d2f1b6-9e84-477f-b278-52fc3b49a9ee_fixed.java
index 1bd0d7e..0f2d5eb 100644
--- a/tmp/98b0fd76-99de-4b37-addb-fe12be8f0518_buggy.java
+++ b/tmp/d6d2f1b6-9e84-477f-b278-52fc3b49a9ee_fixed.java
@@ -1,31 +1,31 @@
-    /**
-     * Get the ns uri of the specified node.
-     * @param node Node to check
-     * @return String ns uri
-     */
 public static String getNamespaceURI(Node node) {
     if (node instanceof Document) {
         node = ((Document) node).getDocumentElement();
     }
 
     Element element = (Element) node;
-
     String uri = element.getNamespaceURI();
+    // Normalize empty-string URI to null so that default namespace lookup is performed.
+    if (uri != null && uri.length() == 0) {
+        uri = null;
+    }
+
     if (uri == null) {
         String prefix = getPrefix(node);
         String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
-    
         Node aNode = node;
         while (aNode != null) {
             if (aNode.getNodeType() == Node.ELEMENT_NODE) {
                 Attr attr = ((Element) aNode).getAttributeNode(qname);
                 if (attr != null) {
-                        return attr.getValue();
+                    // If the attribute value is empty, treat it as no namespace.
+                    String ns = attr.getValue();
+                    return (ns != null && ns.length() == 0) ? null : ns;
                 }
             }
             aNode = aNode.getParentNode();
         }
         return null;
     }
     return uri;
 }
\ No newline at end of file
