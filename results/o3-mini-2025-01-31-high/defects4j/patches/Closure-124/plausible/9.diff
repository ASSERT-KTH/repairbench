diff --git a/tmp/bf53a72a-1d2c-4ec1-b3ce-e56a8b4aafa4_buggy.java b/tmp/bebdc63f-b791-4db4-b755-3135a85c4c66_fixed.java
index 2573d30..cb3b599 100644
--- a/tmp/bf53a72a-1d2c-4ec1-b3ce-e56a8b4aafa4_buggy.java
+++ b/tmp/bebdc63f-b791-4db4-b755-3135a85c4c66_fixed.java
@@ -1,20 +1,21 @@
-  /**
-   * Checks name referenced in node to determine if it might have
-   * changed.
-   * @return Whether the replacement can be made.
-   */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Walk down the chain until we hit a node that is not a GETPROP.
+  Node base = node;
+  while (base.isGetProp()) {
+    base = base.getFirstChild();
+  }
+
+  // Now, if the base is a name that has an assignment in the replacement,
+  // then the replacement is not safe.
+  if (base.isName() && isNameAssignedTo(base.getString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
