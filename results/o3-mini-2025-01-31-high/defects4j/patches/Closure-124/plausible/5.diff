diff --git a/tmp/c084576f-d026-445c-a673-39f30e6548c6_buggy.java b/tmp/7871a56e-2f41-4082-9bca-fcae22930466_fixed.java
index 2573d30..78f52ab 100644
--- a/tmp/c084576f-d026-445c-a673-39f30e6548c6_buggy.java
+++ b/tmp/7871a56e-2f41-4082-9bca-fcae22930466_fixed.java
@@ -1,20 +1,25 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Walk down the leftmost chain to find the base name.
+  Node base = node.getFirstChild();
+  while (base != null && base.isGetProp()) {
+    base = base.getFirstChild();
+  }
+  
+  // If the base is a name which we know gets assigned to, then it is unsafe.
+  if (base != null && base.isName() && isNameAssignedTo(base.getString(), replacement)) {
     return false;
   }
   
   return true;
 }
\ No newline at end of file
