diff --git a/tmp/c567bb67-882c-47ba-9e70-10a9b74c26c7_buggy.java b/tmp/9ae11719-f9cd-47a3-a973-ee94774281ed_fixed.java
index 2573d30..9edd4fe 100644
--- a/tmp/c567bb67-882c-47ba-9e70-10a9b74c26c7_buggy.java
+++ b/tmp/9ae11719-f9cd-47a3-a973-ee94774281ed_fixed.java
@@ -1,20 +1,20 @@
-  /**
-   * Checks name referenced in node to determine if it might have
-   * changed.
-   * @return Whether the replacement can be made.
-   */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // For a chained GETPROP (e.g. x.parentNode.parentNode), we need
+  // to walk to the leftmost target. That is, find the actual name.
+  Node target = node.getFirstChild();
+  while (target != null && target.isGetProp()) {
+    target = target.getFirstChild();
+  }
+
+  if (target != null && target.isName() && isNameAssignedTo(target.getString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
