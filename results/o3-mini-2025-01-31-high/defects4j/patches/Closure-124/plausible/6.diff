diff --git a/tmp/b2dcce4f-4e22-4133-8f6c-990e89cc8a73_buggy.java b/tmp/f01d53fd-52d2-4937-9afd-14c646b44973_fixed.java
index 2573d30..33e2459 100644
--- a/tmp/b2dcce4f-4e22-4133-8f6c-990e89cc8a73_buggy.java
+++ b/tmp/f01d53fd-52d2-4937-9afd-14c646b44973_fixed.java
@@ -1,20 +1,18 @@
-  /**
-   * Checks name referenced in node to determine if it might have
-   * changed.
-   * @return Whether the replacement can be made.
-   */
 private boolean isSafeReplacement(Node node, Node replacement) {
-    // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
   
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Instead of only checking the immediate child,
+  // traverse down the left-hand side of the getProp chain
+  // to find the actual base name.
+  Node base = node;
+  while (base.isGetProp()) {
+    base = base.getFirstChild();
+  }
+  if (base.isName() && isNameAssignedTo(base.getString(), replacement)) {
     return false;
   }
-
   return true;
 }
\ No newline at end of file
