diff --git a/tmp/4e4f5afe-427e-496d-8924-c6c55baea5ca_buggy.java b/tmp/2da6bf68-dfd4-4ec5-b5a7-bbf0fb679d0c_fixed.java
index b529d33..1b85d9a 100644
--- a/tmp/4e4f5afe-427e-496d-8924-c6c55baea5ca_buggy.java
+++ b/tmp/2da6bf68-dfd4-4ec5-b5a7-bbf0fb679d0c_fixed.java
@@ -1,29 +1,15 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
 private char getMappingCode(final String str, final int index) {
-        // map() throws IllegalArgumentException
+    // map() throws IllegalArgumentException if the character is not mapped.
     final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
+    // HW rule check: if the previous character is H or W then check the character before that.
     if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
+        final char prevChar = str.charAt(index - 1);
+        if (prevChar == 'H' || prevChar == 'W') {
             final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+            if (this.map(preHWChar) == mappedChar) {
                 return 0;
             }
         }
     }
     return mappedChar;
 }
\ No newline at end of file
