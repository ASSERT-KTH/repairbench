diff --git a/tmp/c0ebb68e-6bb0-423c-bfe7-b0dca1cb7f75_buggy.java b/tmp/d1965776-f743-4869-bcd9-ae29ff8c3a80_fixed.java
index de9af32..6f4c163 100644
--- a/tmp/c0ebb68e-6bb0-423c-bfe7-b0dca1cb7f75_buggy.java
+++ b/tmp/d1965776-f743-4869-bcd9-ae29ff8c3a80_fixed.java
@@ -1,18 +1,21 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
     if (child.getType() == Token.NAME) {
       changed.add(child.getString());
+    } else if (child.getType() == Token.GETPROP) {
+      // Handle calls of the form "functionName.call(...)" by retrieving the actual function name.
+      if ("call".equals(child.getString())) {
+        Node callee = child.getFirstChild();
+        if (callee != null && callee.getType() == Token.NAME) {
+          changed.add(callee.getString());
+        }
+      }
     }
   }
-
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
