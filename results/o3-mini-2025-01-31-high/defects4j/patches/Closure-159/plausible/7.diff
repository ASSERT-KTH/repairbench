diff --git a/tmp/52cd1b14-6ed7-44b8-9f19-e22fe38c9985_buggy.java b/tmp/21febb3c-3541-4005-93b9-c92302608421_fixed.java
index de9af32..818cf18 100644
--- a/tmp/52cd1b14-6ed7-44b8-9f19-e22fe38c9985_buggy.java
+++ b/tmp/21febb3c-3541-4005-93b9-c92302608421_fixed.java
@@ -1,18 +1,22 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node callee = node.getFirstChild();
+    if (callee.getType() == Token.NAME) {
+      changed.add(callee.getString());
+    } else if (callee.getType() == Token.GETPROP) {
+      Node prop = callee.getLastChild();
+      if (prop != null && "call".equals(prop.getString())) {
+        Node target = callee.getFirstChild();
+        if (target != null && target.getType() == Token.NAME) {
+          changed.add(target.getString());
+        }
+      }
     }
   }
 
-    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
-      findCalledFunctions(c, changed);
+  for (Node child = node.getFirstChild(); child != null; child = child.getNext()) {
+    findCalledFunctions(child, changed);
   }
 }
\ No newline at end of file
