diff --git a/tmp/899bb730-806d-4373-a7e8-8a7908784d12_buggy.java b/tmp/045e2d2e-1578-4aad-81ad-84e59e0e360f_fixed.java
index de9af32..20aaa90 100644
--- a/tmp/899bb730-806d-4373-a7e8-8a7908784d12_buggy.java
+++ b/tmp/045e2d2e-1578-4aad-81ad-84e59e0e360f_fixed.java
@@ -1,18 +1,23 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node callTarget = node.getFirstChild();
+    if (callTarget.getType() == Token.NAME) {
+      changed.add(callTarget.getString());
+    } else if (callTarget.getType() == Token.GETPROP) {
+      Node property = callTarget.getLastChild();
+      // Handle calls of the form f.call(...) or f.apply(...)
+      if ("call".equals(property.getString()) || "apply".equals(property.getString())) {
+        Node functionNameNode = callTarget.getFirstChild();
+        if (functionNameNode.getType() == Token.NAME) {
+          changed.add(functionNameNode.getString());
+        }
+      }
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
