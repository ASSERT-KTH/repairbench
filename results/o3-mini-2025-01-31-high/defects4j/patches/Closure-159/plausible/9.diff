diff --git a/tmp/1fd2669f-2e56-494c-99c1-e4288561a3d4_buggy.java b/tmp/acbc6c39-2ce1-44bb-a63c-2cf7b46dfac9_fixed.java
index de9af32..f338118 100644
--- a/tmp/1fd2669f-2e56-494c-99c1-e4288561a3d4_buggy.java
+++ b/tmp/acbc6c39-2ce1-44bb-a63c-2cf7b46dfac9_fixed.java
@@ -1,18 +1,21 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
     if (child.getType() == Token.NAME) {
       changed.add(child.getString());
+    } else if (child.getType() == Token.GETPROP) {
+      // Handle calls like initialize.call(this, options)
+      Node target = child.getFirstChild();
+      Node prop = child.getLastChild();
+      if (prop != null && "call".equals(prop.getString()) && target.getType() == Token.NAME) {
+        changed.add(target.getString());
+      }
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
