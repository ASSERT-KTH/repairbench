diff --git a/tmp/47d9a7f5-bc8d-4e46-ada8-aa2a88dc0a8a_buggy.java b/tmp/5c1e5dfd-9a14-495b-9c01-1098150630f7_fixed.java
index de9af32..3bb050b 100644
--- a/tmp/47d9a7f5-bc8d-4e46-ada8-aa2a88dc0a8a_buggy.java
+++ b/tmp/5c1e5dfd-9a14-495b-9c01-1098150630f7_fixed.java
@@ -1,18 +1,23 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
-    // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node callee = node.getFirstChild();
+    if (callee != null) {
+      if (callee.getType() == Token.NAME) {
+        changed.add(callee.getString());
+      } else if (callee.getType() == Token.GETPROP) {
+        Node prop = callee.getLastChild();
+        if (prop != null && "call".equals(prop.getString())) {
+          Node target = callee.getFirstChild();
+          if (target != null && target.getType() == Token.NAME) {
+            changed.add(target.getString());
+          }
+        }
+      }
     }
   }
   
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
