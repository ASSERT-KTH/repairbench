diff --git a/tmp/b2d4e32b-a505-4cd4-9cef-4bcd70674861_buggy.java b/tmp/91cc4af4-ad80-48ae-8c08-222a537a1f81_fixed.java
index b86c1ea..12eb7e5 100644
--- a/tmp/b2d4e32b-a505-4cd4-9cef-4bcd70674861_buggy.java
+++ b/tmp/91cc4af4-ad80-48ae-8c08-222a537a1f81_fixed.java
@@ -1,38 +1,27 @@
-    /**
-     * Translate an input onto a Writer. This is intentionally final as its algorithm is 
-     * tightly coupled with the abstract method of this class. 
-     *
-     * @param input CharSequence that is being translated
-     * @param out Writer to translate the text to
-     * @throws IOException if and only if the Writer produces an IOException
-     */
 public final void translate(CharSequence input, Writer out) throws IOException {
     if (out == null) {
         throw new IllegalArgumentException("The Writer must not be null");
     }
     if (input == null) {
         return;
     }
     int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+    int len = input.length();
     while (pos < len) {
         int consumed = translate(input, pos, out);
         if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
-                out.write(c);
-            }
-            else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+            char c1 = input.charAt(pos);
+            if (Character.isHighSurrogate(c1) && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {
+                // Write the surrogate pair together
+                out.write(c1);
+                out.write(input.charAt(pos + 1));
+                pos += 2;
             } else {
+                out.write(c1);
                 pos++;
             }
+        } else {
+            pos += consumed;
         }
-                pos--;
-            }
-            pos++;
     }
 }
\ No newline at end of file
