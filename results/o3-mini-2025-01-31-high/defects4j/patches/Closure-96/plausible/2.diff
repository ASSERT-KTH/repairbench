diff --git a/tmp/41eb849b-4f87-4f12-89a4-873a01b968fc_buggy.java b/tmp/8dfaf5ae-9efe-460b-a084-010a1efc94ef_fixed.java
index e0ecec8..3f65ded 100644
--- a/tmp/41eb849b-4f87-4f12-89a4-873a01b968fc_buggy.java
+++ b/tmp/8dfaf5ae-9efe-460b-a084-010a1efc94ef_fixed.java
@@ -1,35 +1,40 @@
-  /**
-   * Visits the parameters of a CALL or a NEW node.
-   */
 private void visitParameterList(NodeTraversal t, Node call,
     FunctionType functionType) {
   Iterator<Node> arguments = call.children().iterator();
   arguments.next(); // skip the function name
 
   Iterator<Node> parameters = functionType.getParameters().iterator();
   int ordinal = 0;
-    Node parameter = null;
+  Node lastParameter = null;
   Node argument = null;
-    while (arguments.hasNext() &&
-           parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
-        parameter = parameters.next();
+  // Process each formal parameter with its corresponding argument.
+  while (arguments.hasNext() && parameters.hasNext()) {
+    lastParameter = parameters.next();
     argument = arguments.next();
     ordinal++;
+    validator.expectArgumentMatchesParameter(t, argument,
+        getJSType(argument), getJSType(lastParameter), call, ordinal);
+  }
 
+  // If the function is var_args (maxArgs is Integer.MAX_VALUE) then use the last formal parameter
+  // to check every extra argument.
+  if (functionType.getMaxArguments() == Integer.MAX_VALUE && lastParameter != null) {
+    while (arguments.hasNext()) {
+      argument = arguments.next();
+      ordinal++;
       validator.expectArgumentMatchesParameter(t, argument,
-          getJSType(argument), getJSType(parameter), call, ordinal);
+          getJSType(argument), getJSType(lastParameter), call, ordinal);
+    }
   }
 
   int numArgs = call.getChildCount() - 1;
   int minArgs = functionType.getMinArguments();
   int maxArgs = functionType.getMaxArguments();
   if (minArgs > numArgs || maxArgs < numArgs) {
     report(t, call, WRONG_ARGUMENT_COUNT,
         validator.getReadableJSTypeName(call.getFirstChild(), false),
         String.valueOf(numArgs), String.valueOf(minArgs),
         maxArgs != Integer.MAX_VALUE ?
           " and no more than " + maxArgs + " argument(s)" : "");
   }
 }
\ No newline at end of file
