diff --git a/tmp/2bc60c24-9788-4d5c-b187-f6977d28b53a_buggy.java b/tmp/701eab82-f820-440c-92cb-c599a2ba693f_fixed.java
index 845704e..c990abc 100644
--- a/tmp/2bc60c24-9788-4d5c-b187-f6977d28b53a_buggy.java
+++ b/tmp/701eab82-f820-440c-92cb-c599a2ba693f_fixed.java
@@ -1,21 +1,10 @@
-    /**
-     * Turns out that these are expensive enough to create so that caching
-     * does make sense.
-     *<p>
-     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
-     * JAXB Annotations (failing a test).
-     * It is also possible that some other settings could make deserializers
-     * un-cacheable; but on the other hand, caching can make a big positive
-     * difference with performance... so it's a hard choice.
-     * 
-     * @since 2.4.4
-     */
 @Override
 public boolean isCachable() {
-        /* As per [databind#735], existence of value or key deserializer (only passed
-         * if annotated to use non-standard one) should also prevent caching.
+    /* As per [databind#735], if there is a custom value type deserializer or a key deserializer
+     * (which only gets passed if non-standard), or ignorable properties, then this instance
+     * must not be cached.
      */
     return (_valueTypeDeserializer == null)
+            && (_keyDeserializer == null)
             && (_ignorableProperties == null);
 }
\ No newline at end of file
