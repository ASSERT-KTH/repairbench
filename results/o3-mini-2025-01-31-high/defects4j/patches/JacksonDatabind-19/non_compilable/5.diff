diff --git a/tmp/01419e07-20e8-43b2-a2d2-bfbd44cbe06c_buggy.java b/tmp/2b0ce1c1-32f0-4e0f-b505-30a84a4e1645_fixed.java
index 1bec4d6..bf5f617 100644
--- a/tmp/01419e07-20e8-43b2-a2d2-bfbd44cbe06c_buggy.java
+++ b/tmp/2b0ce1c1-32f0-4e0f-b505-30a84a4e1645_fixed.java
@@ -1,14 +1,18 @@
 private JavaType _mapType(Class<?> rawClass)
 {
+    // Special case: java.util.Properties should be treated as Map<String, String>
+    if (Properties.class.isAssignableFrom(rawClass)) {
+        return MapType.construct(rawClass, _fromClass(String.class), _fromClass(String.class));
+    }
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type " + rawClass.getName() + ": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
