diff --git a/tmp/5e2e8d65-30dc-428f-83b0-f941e498d286_buggy.java b/tmp/9782d387-3531-4386-a1a6-242bc7c5cfbe_fixed.java
index 98dde53..22bc989 100644
--- a/tmp/5e2e8d65-30dc-428f-83b0-f941e498d286_buggy.java
+++ b/tmp/9782d387-3531-4386-a1a6-242bc7c5cfbe_fixed.java
@@ -1,34 +1,45 @@
 public void head(org.jsoup.nodes.Node source, int depth) {
     namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
     if (source instanceof org.jsoup.nodes.Element) {
         org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
         String prefix = updateNamespaces(sourceEl);
         String namespace = namespacesStack.peek().get(prefix);
         String tagName = sourceEl.tagName();
-
-                Element el =
-                    doc.createElementNS(namespace, tagName);
+        Element el;
+        // If there is an undeclared namespace (i.e. namespace is null)
+        // and the tagName is qualified (has a colon), work around the DOM restriction.
+        if (namespace == null && tagName.indexOf(':') != -1) {
+            int colon = tagName.indexOf(':');
+            String localName = tagName.substring(colon + 1);
+            // Create an element using only the local name (which is safe since it lacks a colon)
+            el = doc.createElementNS(namespace, localName);
+            // Then rename the node so that its nodeName retains the original qualified name.
+            // This yields getLocalName() = localName and getNodeName() = original qualified name.
+            el = (Element) doc.renameNode(el, namespace, tagName);
+        } else {
+            el = doc.createElementNS(namespace, tagName);
+        }
         copyAttributes(sourceEl, el);
         if (dest == null) { // sets up the root
             doc.appendChild(el);
         } else {
             dest.appendChild(el);
         }
         dest = el; // descend
     } else if (source instanceof org.jsoup.nodes.TextNode) {
         org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
         Text text = doc.createTextNode(sourceText.getWholeText());
         dest.appendChild(text);
     } else if (source instanceof org.jsoup.nodes.Comment) {
         org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
         Comment comment = doc.createComment(sourceComment.getData());
         dest.appendChild(comment);
     } else if (source instanceof org.jsoup.nodes.DataNode) {
         org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
         Text node = doc.createTextNode(sourceData.getWholeData());
         dest.appendChild(node);
     } else {
         // unhandled
     }
 }
\ No newline at end of file
