diff --git a/tmp/ab7c6227-f8b9-48fd-a3cb-b4a9302ec4af_buggy.java b/tmp/8fe15fef-8148-4438-8ebd-90a7c74a65f5_fixed.java
index 19fe1b4..a603452 100644
--- a/tmp/ab7c6227-f8b9-48fd-a3cb-b4a9302ec4af_buggy.java
+++ b/tmp/8fe15fef-8148-4438-8ebd-90a7c74a65f5_fixed.java
@@ -1,17 +1,59 @@
 public static boolean isJSIdentifier(String s) {
-      int length = s.length();
-
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+  // A valid JS identifier for conversion must be nonempty,
+  // consist solely of simple ASCII characters matching
+  // the regex [A-Za-z_$][A-Za-z0-9_$]*,
+  // and must not be one of the reserved words.
+  if (s == null || s.isEmpty()) {
     return false;
   }
-
-      for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+  if (!s.matches("[A-Za-z_$][A-Za-z0-9_$]*")) {
     return false;
   }
-      }
-
+  // Disallow reserved words.
+  // (This list covers ECMAScript reserved words that cannot be used in dot notation.)
+  switch (s) {
+    case "break":
+    case "case":
+    case "catch":
+    case "class":
+    case "const":
+    case "continue":
+    case "debugger":
+    case "default":
+    case "delete":
+    case "do":
+    case "else":
+    case "export":
+    case "extends":
+    case "finally":
+    case "for":
+    case "function":
+    case "if":
+    case "import":
+    case "in":
+    case "instanceof":
+    case "new":
+    case "return":
+    case "super":
+    case "switch":
+    case "this":
+    case "throw":
+    case "try":
+    case "typeof":
+    case "var":
+    case "void":
+    case "while":
+    case "with":
+    case "enum":
+    case "await":
+    case "implements":
+    case "package":
+    case "protected":
+    case "static":
+    case "interface":
+    case "private":
+      return false;
+    default:
       return true;
   }
+}
\ No newline at end of file
