diff --git a/tmp/ccb81808-9bae-457e-9f27-9368d0747964_buggy.java b/tmp/9d9ad3bf-1d78-4403-bcad-9cb50f8bbb65_fixed.java
index f9a9b5b..16193e5 100644
--- a/tmp/ccb81808-9bae-457e-9f27-9368d0747964_buggy.java
+++ b/tmp/9d9ad3bf-1d78-4403-bcad-9cb50f8bbb65_fixed.java
@@ -1,30 +1,41 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
-        T mockInstance = null;
+    T mockInstance;
     try {
+        // If the settings request that the targetâ€™s constructor be invoked,
+        // use the instantiation method that passes along constructor arguments and an outer instance.
+        if (settings.isUsingConstructor()) {
+            mockInstance = classInstantiator.instantiateUsingConstructor(
+                    mockedProxyType,
+                    settings.getConstructorArguments(), // may be an empty array if 0-arg constructor
+                    settings.getOuterInstance()           // may be null if not mocking an inner class
+            );
+        } else {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
+        }
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ), cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+        throw new MockitoException("Unable to create mock instance of type '" 
+            + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
