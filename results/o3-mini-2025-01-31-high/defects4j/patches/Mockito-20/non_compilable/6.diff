diff --git a/tmp/0dd7877d-46ec-4f93-a5ec-96e9f3d5533e_buggy.java b/tmp/92402f65-0539-406f-a2b2-3f7a3c41f19c_fixed.java
index f9a9b5b..54d1cf7 100644
--- a/tmp/0dd7877d-46ec-4f93-a5ec-96e9f3d5533e_buggy.java
+++ b/tmp/92402f65-0539-406f-a2b2-3f7a3c41f19c_fixed.java
@@ -1,30 +1,42 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
+        if (settings.isUsingConstructor()) {
+            Object[] constructorArgs = settings.getConstructorArgs();
+            if (constructorArgs == null) {
+                constructorArgs = new Object[0];
+            }
+            if (settings.getOuterInstance() != null) {
+                mockInstance = classInstantiator.instantiate(mockedProxyType, settings.getOuterInstance(), constructorArgs);
+            } else {
+                mockInstance = classInstantiator.instantiate(mockedProxyType, constructorArgs);
+            }
+        } else {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
+        }
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ), cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+        throw new MockitoException("Unable to create mock instance of type '" + settings.getTypeToMock().getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
