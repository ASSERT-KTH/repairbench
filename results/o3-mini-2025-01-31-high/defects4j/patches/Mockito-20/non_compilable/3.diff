diff --git a/tmp/3b1c0bda-50d5-4f4d-b0eb-33bc45f3ed49_buggy.java b/tmp/45158bd4-3a8a-4113-b598-808b405c8423_fixed.java
index f9a9b5b..6dbe9db 100644
--- a/tmp/3b1c0bda-50d5-4f4d-b0eb-33bc45f3ed49_buggy.java
+++ b/tmp/45158bd4-3a8a-4113-b598-808b405c8423_fixed.java
@@ -1,30 +1,37 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
+        if (settings.isUsingConstructor()) {
+            // When a real constructor (and possibly an outer instance) should be used,
+            // delegate to a method that actually calls the constructor.
+            mockInstance = classInstantiator.instantiateUsingConstructor(mockedProxyType, settings);
+        } else {
+            // Otherwise bypass constructor invocation (e.g. via Objenesis)
             mockInstance = classInstantiator.instantiate(mockedProxyType);
+        }
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ), cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+        throw new MockitoException("Unable to create mock instance of type '" + settings.getTypeToMock().getSimpleName() + "'", e);
     }
 }
\ No newline at end of file
