diff --git a/tmp/c878f272-53a9-46e8-aa3a-dabb20fb3c2d_buggy.java b/tmp/f1e92f87-5dc1-49a5-91b6-62fe33f775c6_fixed.java
index 10616db..35c2000 100644
--- a/tmp/c878f272-53a9-46e8-aa3a-dabb20fb3c2d_buggy.java
+++ b/tmp/f1e92f87-5dc1-49a5-91b6-62fe33f775c6_fixed.java
@@ -1,19 +1,26 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
+        long instant;
+        // For a MonthDay (which has only monthOfYear and dayOfMonth),
+        // we must build the instant using a leap year such as 2000 so that 2/29 is valid.
+        if (partial.size() == 2 &&
+            partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&
+            partial.getFieldType(1) == DateTimeFieldType.dayOfMonth()) {
+            int month = values[0];
+            int day = values[1];
+            instant = iChronology.getDateTimeMillis(2000, month, day, 0);
+        } else {
+            instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
+        }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
