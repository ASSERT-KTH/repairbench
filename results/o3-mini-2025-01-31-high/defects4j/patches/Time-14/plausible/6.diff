diff --git a/tmp/39918d14-af49-4e46-a273-5d69a1a5fc18_buggy.java b/tmp/59171715-90d0-4276-a18f-252bdeb52995_fixed.java
index 10616db..55a20ef 100644
--- a/tmp/39918d14-af49-4e46-a273-5d69a1a5fc18_buggy.java
+++ b/tmp/59171715-90d0-4276-a18f-252bdeb52995_fixed.java
@@ -1,19 +1,25 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
+        long instant;
+        // When the partial represents a MonthDay (i.e. only month and day),
+        // we use a leap-year (2000) as the anchor year. Using 0L (1970-01-01)
+        // fails for Feb 29 because 1970 is not a leap year.
+        if (partial.size() == 2 &&
+            partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&
+            partial.getFieldType(1) == DateTimeFieldType.dayOfMonth()) {
+            instant = iChronology.getDateTimeMillis(2000, values[0], values[1], 0);
+        } else {
+            instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
+        }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
