diff --git a/tmp/cc0240f2-2825-4d2a-bd3c-e1ac87fcbd91_buggy.java b/tmp/c37c71bb-2ebd-4b02-a26b-74b331bb5c7f_fixed.java
index 670114d..9301079 100644
--- a/tmp/cc0240f2-2825-4d2a-bd3c-e1ac87fcbd91_buggy.java
+++ b/tmp/c37c71bb-2ebd-4b02-a26b-74b331bb5c7f_fixed.java
@@ -1,48 +1,52 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
-
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
+    // In calls such as goog.inherits(child, parent), the first child is
+    // the function being called, so we use the second child (first argument)
+    // as the target for the class definition.
+    if (n.getChildCount() >= 2) {
+      Node childNode = n.getChildAtIndex(1);
+      NameInformation ns = createNameInformation(t, childNode, n);
       if (ns != null && ns.onlyAffectsClassDef) {
         JsName name = getName(ns.name, false);
         if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
         }
       }
     }
   }
+}
\ No newline at end of file
