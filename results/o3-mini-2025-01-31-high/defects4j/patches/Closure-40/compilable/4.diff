diff --git a/tmp/6d612d8d-ef87-49e0-b351-03f47a670548_buggy.java b/tmp/d4ba3748-568e-4f79-b06d-dc84f90f1aed_fixed.java
index 670114d..64d7cc3 100644
--- a/tmp/6d612d8d-ef87-49e0-b351-03f47a670548_buggy.java
+++ b/tmp/d4ba3748-568e-4f79-b06d-dc84f90f1aed_fixed.java
@@ -1,48 +1,57 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
+    Node callee = n.getFirstChild();
+    // When processing a call, use the callee by default...
+    Node nameNode = callee;
+    // ...but if this is a call to goog.inherits, use its first argument
+    // (i.e. the constructor being defined) rather than the callee itself.
+    if (callee.isGetProp() &&
+        "inherits".equals(callee.getLastChild().getString()) &&
+        n.getChildCount() > 1) {
+      nameNode = n.getChildAtIndex(1);
+    }
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
