diff --git a/tmp/c1c158a8-8d5b-4cfb-a556-062dd6241e1c_buggy.java b/tmp/f0aee3ef-3929-4cfe-b561-e501d0a46847_fixed.java
index 0b7c52e..00128ad 100644
--- a/tmp/c1c158a8-8d5b-4cfb-a556-062dd6241e1c_buggy.java
+++ b/tmp/f0aee3ef-3929-4cfe-b561-e501d0a46847_fixed.java
@@ -1,27 +1,24 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
+  for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
     String name = child.getString();
-        T type = typeSystem.getType(getScope(), n, name);
+    // Use the child node (not n) to obtain the type for the property.
+    T type = typeSystem.getType(getScope(), child, name);
 
     Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
+    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
+      // TODO(user): It doesn't look like the user can do much in this case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
