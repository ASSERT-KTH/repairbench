diff --git a/tmp/937c589b-7fe5-45be-8fc6-c1c1cd3ce14f_buggy.java b/tmp/4af23d44-1f54-4b23-b68e-653ba65e491c_fixed.java
index 0b7c52e..31457ee 100644
--- a/tmp/937c589b-7fe5-45be-8fc6-c1c1cd3ce14f_buggy.java
+++ b/tmp/4af23d44-1f54-4b23-b68e-653ba65e491c_fixed.java
@@ -1,27 +1,35 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
-        // Maybe STRING, GET, SET
+  for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
+    // The property key can be defined as a plain string, a getter, or a setter.
+    // However, if the key was written with quotes, we must not schedule renaming.
+    String name;
+    if (child.isGetterDef() || child.isSetterDef()) {
+      // For getters/setters the key is stored as the first child.
+      Node key = child.getFirstChild();
+      if (key.isQuotedString()) {
+        continue;
+      }
+      name = key.getString();
+    } else {
+      if (child.isQuotedString()) {
+        continue;
+      }
+      name = child.getString();
+    }
 
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
     T type = typeSystem.getType(getScope(), n, name);
-
     Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
+    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
+      // TODO(user): Currently the only action is to report an error.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
