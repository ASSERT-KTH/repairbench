diff --git a/tmp/bc26e3d6-1a79-488f-8e2f-1b75e024c6c2_buggy.java b/tmp/ba18a867-75da-4c63-a2ae-c0b59765984f_fixed.java
index 66bb99f..fde7a5b 100644
--- a/tmp/bc26e3d6-1a79-488f-8e2f-1b75e024c6c2_buggy.java
+++ b/tmp/ba18a867-75da-4c63-a2ae-c0b59765984f_fixed.java
@@ -1,14 +1,15 @@
 @Override
-        public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
-        {
+public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
     if (p.getCurrentToken() == JsonToken.START_OBJECT) {
         p.nextToken();
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
     if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
+    if (p.getCurrentToken() == JsonToken.END_OBJECT) {
+        // Return an empty ObjectNode when encountering an END_OBJECT token (empty JSON object)
+        return ctxt.getNodeFactory().objectNode();
+    }
     throw ctxt.mappingException(ObjectNode.class);
 }
\ No newline at end of file
