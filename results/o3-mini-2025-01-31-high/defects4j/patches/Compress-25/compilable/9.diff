diff --git a/tmp/161ce42a-73f5-4880-8b87-02eee23d5d52_buggy.java b/tmp/c6ea3bbd-c669-4ed6-b5eb-8bfb668f6a71_fixed.java
index 6c0aa19..7a1c182 100644
--- a/tmp/161ce42a-73f5-4880-8b87-02eee23d5d52_buggy.java
+++ b/tmp/c6ea3bbd-c669-4ed6-b5eb-8bfb668f6a71_fixed.java
@@ -1,20 +1,21 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
+    // Use a fixed pushback buffer size instead of using buf.capacity()
+    // (which was causing the first stored entry to be read incorrectly)
+    in = new PushbackInputStream(inputStream, 512);
+    this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
     // haven't read anything so far
 }
\ No newline at end of file
