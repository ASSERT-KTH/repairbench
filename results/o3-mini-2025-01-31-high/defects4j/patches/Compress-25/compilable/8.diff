diff --git a/tmp/ddb136c4-6251-4275-bf64-2e4594609515_buggy.java b/tmp/7b43124a-e514-4a4a-9ae3-368eaa7c8f4d_fixed.java
index 6c0aa19..fe62167 100644
--- a/tmp/ddb136c4-6251-4275-bf64-2e4594609515_buggy.java
+++ b/tmp/7b43124a-e514-4a4a-9ae3-368eaa7c8f4d_fixed.java
@@ -1,20 +1,22 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
+    // Instead of using buf.capacity() (which may be 0 or otherwise incorrect),
+    // we now supply a fixed pushback buffer size. This avoids the bug in reading
+    // the first STORED entry.
+    in = new PushbackInputStream(inputStream, 512);
+    this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
     // haven't read anything so far
 }
\ No newline at end of file
