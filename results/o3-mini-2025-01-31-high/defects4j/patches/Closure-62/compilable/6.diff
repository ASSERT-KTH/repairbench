diff --git a/tmp/3077aec5-799c-4c06-b353-b393e1e8d06d_buggy.java b/tmp/83ff9bd1-a587-4aa1-b429-017f634ad8f7_fixed.java
index 904dba7..617d131 100644
--- a/tmp/3077aec5-799c-4c06-b353-b393e1e8d06d_buggy.java
+++ b/tmp/83ff9bd1-a587-4aa1-b429-017f634ad8f7_fixed.java
@@ -1,46 +1,45 @@
 private String format(JSError error, boolean warning) {
   // extract source excerpt
   SourceExcerptProvider source = getSource();
   String sourceExcerpt = source == null ? null :
-        excerpt.get(
-            source, error.sourceName, error.lineNumber, excerptFormatter);
+      excerpt.get(source, error.sourceName, error.lineNumber, excerptFormatter);
 
   // formatting the message
   StringBuilder b = new StringBuilder();
   if (error.sourceName != null) {
     b.append(error.sourceName);
     if (error.lineNumber > 0) {
       b.append(':');
       b.append(error.lineNumber);
     }
     b.append(": ");
   }
 
   b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
   b.append(" - ");
 
   b.append(error.description);
   b.append('\n');
   if (sourceExcerpt != null) {
     b.append(sourceExcerpt);
     b.append('\n');
     int charno = error.getCharno();
 
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+    // When the excerpt formatter is of type LINE, even if the error character
+    // position is at the end of the line (i.e. charno == sourceExcerpt.length()),
+    // we print the caret. (Also note that we now use "<=" instead of "<".)
+    if (excerptFormatter.equals(LINE)
+        && 0 <= charno && charno <= sourceExcerpt.length()) {
       for (int i = 0; i < charno; i++) {
         char c = sourceExcerpt.charAt(i);
         if (Character.isWhitespace(c)) {
           b.append(c);
         } else {
           b.append(' ');
         }
       }
       b.append("^\n");
     }
   }
   return b.toString();
 }
\ No newline at end of file
