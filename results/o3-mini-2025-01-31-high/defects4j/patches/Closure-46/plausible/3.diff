diff --git a/tmp/b376f2d9-37e6-4bc2-a477-084f47af570a_buggy.java b/tmp/f5b501c9-f6d5-4d38-847c-32ff3990f634_fixed.java
index 46817a7..3627088 100644
--- a/tmp/b376f2d9-37e6-4bc2-a477-084f47af570a_buggy.java
+++ b/tmp/f5b501c9-f6d5-4d38-847c-32ff3990f634_fixed.java
@@ -1,16 +1,15 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+  // If one record is a subtype of the other, the join is the broader one.
+  if (this.isSubtype(that)) {
+    return that;
   }
+  if (that.isSubtype(this)) {
+    return this;
   }
-    return builder.build();
+  // Otherwise, the least supertype (join) of two record types is their union.
+  return registry.createUnionType(this, that);
 }
\ No newline at end of file
