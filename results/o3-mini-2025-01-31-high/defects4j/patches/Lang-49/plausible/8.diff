diff --git a/tmp/2a4d1e85-f63b-40ad-b4bb-a8a916306e84_buggy.java b/tmp/dda7b725-4e7a-43ea-b94e-10c2d4dd13fd_fixed.java
index 08e51e4..b7e1685 100644
--- a/tmp/2a4d1e85-f63b-40ad-b4bb-a8a916306e84_buggy.java
+++ b/tmp/dda7b725-4e7a-43ea-b94e-10c2d4dd13fd_fixed.java
@@ -1,16 +1,19 @@
-    /**
-     * <p>Reduce the fraction to the smallest values for the numerator and
-     * denominator, returning the result.</p>
-     * 
-     * <p>For example, if this fraction represents 2/4, then the result
-     * will be 1/2.</p>
-     *
-     * @return a new reduced fraction instance, or this if no simplification possible
-     */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
+    if (numerator == 0) {
+        // For zero, the canonical representation is 0/1.
+        return (denominator == 1) ? this : Fraction.ZERO;
+    }
+    int num = numerator;
+    int den = denominator;
+    // Normalize so that the denominator is positive.
+    if (den < 0) {
+        num = -num;
+        den = -den;
+    }
+    int gcd = greatestCommonDivisor(Math.abs(num), den);
     if (gcd == 1) {
-            return this;
+        // If already reduced but the normalization changed the sign, create a new instance.
+        return (num == numerator && den == denominator) ? this : Fraction.getFraction(num, den);
     }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    return Fraction.getFraction(num / gcd, den / gcd);
 }
\ No newline at end of file
