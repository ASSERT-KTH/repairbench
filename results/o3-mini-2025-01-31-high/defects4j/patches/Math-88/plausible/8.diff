diff --git a/tmp/b3980c59-58e3-410b-b71d-9f90cd9d316d_buggy.java b/tmp/eee2e440-7c5c-4c30-80c6-4e01b2ee0a93_fixed.java
index 544303b..8b404ab 100644
--- a/tmp/b3980c59-58e3-410b-b71d-9f90cd9d316d_buggy.java
+++ b/tmp/eee2e440-7c5c-4c30-80c6-4e01b2ee0a93_fixed.java
@@ -1,29 +1,24 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
         coefficients[i] =
             (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
             (restrictToNonNegative ? 0 : mostNegative);
+        // if the same row already served as the basis for an earlier variable,
+        // then its value has already been taken and this variable should be 0.
         if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+            for (int j = 0; j < i; j++) {
+                Integer otherBasicRow = getBasicRow(getNumObjectiveFunctions() + j);
+                if (basicRow.equals(otherBasicRow)) {
                     coefficients[i] = 0;
+                    break;
                 }
             }
         }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
