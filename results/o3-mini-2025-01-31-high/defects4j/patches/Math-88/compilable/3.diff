diff --git a/tmp/5109a6ea-42da-4a12-9125-d89f689ceadb_buggy.java b/tmp/f058152d-22c8-4131-8ab2-cf927b2f119a_fixed.java
index 544303b..12978a2 100644
--- a/tmp/5109a6ea-42da-4a12-9125-d89f689ceadb_buggy.java
+++ b/tmp/f058152d-22c8-4131-8ab2-cf927b2f119a_fixed.java
@@ -1,29 +1,21 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
+    Integer basicRow = getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         // if multiple variables can take a given value 
         // then we choose the first and set the rest equal to 0
         coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
+            (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) +
             (restrictToNonNegative ? 0 : mostNegative);
         if (basicRow != null) {
             for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
                     coefficients[i] = 0;
                 }
             }
         }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
