diff --git a/tmp/69f80bfe-c509-4ec5-a7c7-60b7636cba14_buggy.java b/tmp/ff837304-7e3c-40cf-ba21-9e1ae0463461_fixed.java
index 03b03d7..494a080 100644
--- a/tmp/69f80bfe-c509-4ec5-a7c7-60b7636cba14_buggy.java
+++ b/tmp/ff837304-7e3c-40cf-ba21-9e1ae0463461_fixed.java
@@ -1,25 +1,28 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
+    // Check if there is an overlap by comparing the local time computed
+    // 3 hours before and after. In a non-overlap these are equal.
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+        return instant;  // no overlap: gap or normal case
     }
 
-        // work out range of instants that have duplicate local times
+    // Compute the ambiguous local time corresponding to the UTC instant.
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    // Calculate the two possible instants corresponding to this local time.
+    long adjustedEarlier = convertLocalToUTC(local, false, instantBefore);
+    long adjustedLater = convertLocalToUTC(local, false, instantAfter);
+    if (adjustedEarlier == adjustedLater) {
+        return instant;  // not ambiguous
+    }
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // If the instant is already one of the two possibilities,
+    // return it if it already has the desired offset.
+    if (instant == adjustedEarlier) {
+        return earlierOrLater ? adjustedLater : instant;
+    } else if (instant == adjustedLater) {
+        return earlierOrLater ? instant : adjustedEarlier;
+    }
+    // Otherwise, choose based solely on the flag.
+    return earlierOrLater ? adjustedLater : adjustedEarlier;
 }
\ No newline at end of file
