diff --git a/tmp/3252a60f-1ef4-4b33-9c82-9bceb3523e2a_buggy.java b/tmp/9e7c08da-70a0-4b64-91a4-309958bf668e_fixed.java
index 03b03d7..74d6505 100644
--- a/tmp/3252a60f-1ef4-4b33-9c82-9bceb3523e2a_buggy.java
+++ b/tmp/9e7c08da-70a0-4b64-91a4-309958bf668e_fixed.java
@@ -1,25 +1,16 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
 
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Swap the candidate. When earlierOrLater is true (request later offset), use instantBefore;
+    // otherwise, use instantAfter.
+    return convertLocalToUTC(local, false, earlierOrLater ? instantBefore : instantAfter);
 }
\ No newline at end of file
