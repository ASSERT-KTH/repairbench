diff --git a/tmp/9c2081e0-d0e0-46ba-b231-89bb0dbb5fe2_buggy.java b/tmp/99e9e0da-25e3-4192-908b-83d4b373cb2e_fixed.java
index 03b03d7..2ea6397 100644
--- a/tmp/9c2081e0-d0e0-46ba-b231-89bb0dbb5fe2_buggy.java
+++ b/tmp/99e9e0da-25e3-4192-908b-83d4b373cb2e_fixed.java
@@ -1,25 +1,38 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
         
         // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
+        long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;
+        long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;
+        long offsetBefore = getOffset(instantBefore);
+        long offsetAfter = getOffset(instantAfter);
+        if (offsetBefore <= offsetAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
         
         // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        long diff = offsetBefore - offsetAfter;
+        long transition = nextTransition(instantBefore);
+        long overlapStart = transition - diff;
+        long overlapEnd = transition + diff;
+        if (instant < overlapStart || instant >= overlapEnd) {
+          return instant;  // not an overlap
+        }
         
         // calculate result
+        long afterStart = instant - overlapStart;
+        if (afterStart >= diff) {
           // currently in later offset
+          return earlierOrLater ? instant : instant - diff;
+        } else {
           // currently in earlier offset
+          return earlierOrLater ? instant + diff : instant;
+        }
     }
