diff --git a/tmp/2662ea47-ee47-4e3a-9506-326c4db12546_buggy.java b/tmp/e3aec5a5-973a-41dd-9476-cd63abad465f_fixed.java
index 39dd8e7..6868d05 100644
--- a/tmp/2662ea47-ee47-4e3a-9506-326c4db12546_buggy.java
+++ b/tmp/e3aec5a5-973a-41dd-9476-cd63abad465f_fixed.java
@@ -1,30 +1,31 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
-                while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+            // Without a starting quote, scan until a tag end, a "/" that could start "/>" or whitespace
+            while (!tq.isEmpty() && !tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
+
     if (key.length() != 0)
         return Attribute.createFromEncoded(key, value);
     else {
-            tq.consume();
-                
+        // If thereâ€™s no attribute key, simply advance (if possible) then return null.
+        if (!tq.isEmpty()) tq.consume();
         return null;
     }
 }
\ No newline at end of file
