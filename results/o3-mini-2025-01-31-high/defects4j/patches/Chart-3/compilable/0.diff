diff --git a/tmp/19842d32-3ab3-4948-a124-71e5c0a84664_buggy.java b/tmp/ffc66387-9d31-49f0-8f98-92354eecdf78_fixed.java
index 388771b..97b0193 100644
--- a/tmp/19842d32-3ab3-4948-a124-71e5c0a84664_buggy.java
+++ b/tmp/ffc66387-9d31-49f0-8f98-92354eecdf78_fixed.java
@@ -1,37 +1,30 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
 public TimeSeries createCopy(int start, int end)
         throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
-        TimeSeries copy = (TimeSeries) super.clone();
-        copy.data = new java.util.ArrayList();
-        if (this.data.size() > 0) {
+
+    // Instead of cloning 'this' (which carries over stale min/max values),
+    // create a new TimeSeries with the same properties.
+    TimeSeries copy = new TimeSeries(this.getKey());
+    copy.setDescription(this.getDescription());
+    copy.setMaximumItemCount(this.getMaximumItemCount());
+    copy.setMaximumItemAge(this.getMaximumItemAge());
+
+    // Add the subset of data items to the new series.
+    // Using a new series means that the min/max (and other state) is recalculated
+    // only from the items that are added.
     for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
         TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
         try {
             copy.add(clone);
-                }
-                catch (SeriesException e) {
+        } catch (SeriesException e) {
             e.printStackTrace();
         }
     }
-        }
     return copy;
 }
\ No newline at end of file
