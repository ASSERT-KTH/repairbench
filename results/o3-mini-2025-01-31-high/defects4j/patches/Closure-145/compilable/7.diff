diff --git a/tmp/ae894104-3063-463f-af3c-21ddb37d5edd_buggy.java b/tmp/0195b3b3-ceed-4a7b-a7df-ce04cf5ecf4d_fixed.java
index 57f69c5..ba4d79f 100644
--- a/tmp/ae894104-3063-463f-af3c-21ddb37d5edd_buggy.java
+++ b/tmp/0195b3b3-ceed-4a7b-a7df-ce04cf5ecf4d_fixed.java
@@ -1,12 +1,11 @@
-  /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
-   */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+  // If n is a BLOCK or LABEL with exactly one child,
+  // then check that lone child. (Only simple statements qualify.)
+  if (n.getType() == Token.BLOCK || n.getType() == Token.LABEL) {
+    return n.getChildCount() == 1 && isOneExactlyFunctionOrDo(n.getFirstChild());
+  }
+  // For our IE/Safari compatibility, we must not allow a bare
+  // FUNCTION or DO to be “inlined” (i.e. printed without braces).
+  // (An expression or other statement is fine to print without a block.)
+  return !(n.getType() == Token.FUNCTION || n.getType() == Token.DO);
 }
\ No newline at end of file
