diff --git a/tmp/8bfa2104-66a1-4b97-b19b-d4059b8560da_buggy.java b/tmp/40d0a68d-443a-4b1f-8fd5-2b400000a62e_fixed.java
index 57f69c5..7a147f7 100644
--- a/tmp/8bfa2104-66a1-4b97-b19b-d4059b8560da_buggy.java
+++ b/tmp/40d0a68d-443a-4b1f-8fd5-2b400000a62e_fixed.java
@@ -1,12 +1,17 @@
-  /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
-   */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+  // If n is a BLOCK with a single child, use that child.
+  if (n.getType() == Token.BLOCK) {
+    if (n.getChildCount() != 1) {
+      return false;
+    }
+    n = n.getFirstChild();
+  }
+  // If n is a LABEL, examine its attached statement.
+  if (n.getType() == Token.LABEL) {
+    n = n.getLastChild();
+  }
+  // If the node is a FUNCTION or DO, then we must keep its block
+  // (for Safari/IE compatibility) rather than eliding the surrounding braces.
+  // For other kinds of statements it is safe to drop the block.
+  return n.getType() != Token.FUNCTION && n.getType() != Token.DO;
 }
\ No newline at end of file
