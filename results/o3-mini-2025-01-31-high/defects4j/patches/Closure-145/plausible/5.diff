diff --git a/tmp/d4a0d62f-2aa5-493e-95f5-acdd1d0972ca_buggy.java b/tmp/6e964372-cf20-49e2-990b-3c2c97130b8c_fixed.java
index 57f69c5..2c8f65b 100644
--- a/tmp/d4a0d62f-2aa5-493e-95f5-acdd1d0972ca_buggy.java
+++ b/tmp/6e964372-cf20-49e2-990b-3c2c97130b8c_fixed.java
@@ -1,12 +1,18 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a DO or FUNCTION (with or without labels).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+  // Unwrap any labels.
+  while (n != null && n.getType() == Token.LABEL) {
+    n = n.getLastChild();
+  }
+  // If n is a block then it must have exactly one child,
+  // otherwise it is not "exactly" a FUNCTION or DO.
+  if (n != null && n.getType() == Token.BLOCK) {
+    if (n.getChildCount() != 1) {
+      return false;
+    }
+    n = n.getFirstChild();
+  }
+  return n != null && (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
 }
\ No newline at end of file
