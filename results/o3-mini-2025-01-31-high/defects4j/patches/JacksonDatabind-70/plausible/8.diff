diff --git a/tmp/77f56c5f-de8e-4102-b100-0885c693b432_buggy.java b/tmp/90c2a224-f25c-4d88-bd58-8da25762cb7a_fixed.java
index 0313249..3ffa829 100644
--- a/tmp/77f56c5f-de8e-4102-b100-0885c693b432_buggy.java
+++ b/tmp/90c2a224-f25c-4d88-bd58-8da25762cb7a_fixed.java
@@ -1,32 +1,27 @@
-    /**
-     * Specialized method for removing specified existing entry.
-     * NOTE: entry MUST exist, otherwise an exception is thrown.
-     */
 public void remove(SettableBeanProperty propToRm)
 {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
     boolean found = false;
 
     for (int i = 1, end = _hashArea.length; i < end; i += 2) {
         SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
         if (prop == null) {
             continue;
         }
         if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
+            // Instead of using prop.getName(), use the key from the name slot (which is lower-case)
+            String storedKey = (String) _hashArea[i - 1];
+            if (key.equals(storedKey)) {
+                found = true;
                 _propsInOrder[_findFromOrdered(prop)] = null;
                 continue;
             }
         }
         props.add(prop);
     }
     if (!found) {
         throw new NoSuchElementException("No entry '" + propToRm.getName() + "' found, can't remove");
     }
     init(props);
 }
\ No newline at end of file
