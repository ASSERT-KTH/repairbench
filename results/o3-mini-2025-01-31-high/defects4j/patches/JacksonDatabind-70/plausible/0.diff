diff --git a/tmp/4ec90e0a-0150-4431-9d82-c4b3cf9d0d0b_buggy.java b/tmp/b6122184-abf9-4a08-a695-9d7aebaabda0_fixed.java
index 0313249..9b8bd70 100644
--- a/tmp/4ec90e0a-0150-4431-9d82-c4b3cf9d0d0b_buggy.java
+++ b/tmp/b6122184-abf9-4a08-a695-9d7aebaabda0_fixed.java
@@ -1,32 +1,25 @@
-    /**
-     * Specialized method for removing specified existing entry.
-     * NOTE: entry MUST exist, otherwise an exception is thrown.
-     */
 public void remove(SettableBeanProperty propToRm)
 {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
     boolean found = false;
 
     for (int i = 1, end = _hashArea.length; i < end; i += 2) {
         SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
         if (prop == null) {
             continue;
         }
-            if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
+        // IMPORTANT: compare against the key stored in the preceding slot (which is lower-cased),
+        // not the value returned by prop.getName()
+        if (!found && key.equals(_hashArea[i - 1])) {
+            found = true;
             _propsInOrder[_findFromOrdered(prop)] = null;
             continue;
         }
-            }
         props.add(prop);
     }
     if (!found) {
         throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
     }
     init(props);
 }
\ No newline at end of file
