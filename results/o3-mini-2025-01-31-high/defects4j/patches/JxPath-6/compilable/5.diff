diff --git a/tmp/ebc47094-3bf8-4609-b156-8c832ebf7d04_buggy.java b/tmp/f1da50d9-c572-4aa8-a654-f10563f7d666_fixed.java
index f650982..f7ce29f 100644
--- a/tmp/ebc47094-3bf8-4609-b156-8c832ebf7d04_buggy.java
+++ b/tmp/f1da50d9-c572-4aa8-a654-f10563f7d666_fixed.java
@@ -1,42 +1,37 @@
-    /**
-     * Compares two values
-     */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right) 
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
-
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
-        if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
-        }
-
-        if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
-        }
+    // Instead of converting a Collection immediately into an Iterator (which
+    // loses the ability to iterate over the node-set more than once),
+    // we test for a node-set (either a Collection or Iterator) and then obtain
+    // a fresh Iterator if possible.
+    boolean lIsNodeSet = (l instanceof Collection) || (l instanceof Iterator);
+    boolean rIsNodeSet = (r instanceof Collection) || (r instanceof Iterator);
 
-        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
+    if (lIsNodeSet && !rIsNodeSet) {
+        Iterator<?> lIter = (l instanceof Collection) ? ((Collection<?>) l).iterator() : (Iterator<?>) l;
+        return contains(lIter, r);
     }
-        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
+    if (!lIsNodeSet && rIsNodeSet) {
+        Iterator<?> rIter = (r instanceof Collection) ? ((Collection<?>) r).iterator() : (Iterator<?>) r;
+        return contains(rIter, l);
     }
-        if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
+    if (lIsNodeSet && rIsNodeSet) {
+        Iterator<?> lIter = (l instanceof Collection) ? ((Collection<?>) l).iterator() : (Iterator<?>) l;
+        Iterator<?> rIter = (r instanceof Collection) ? ((Collection<?>) r).iterator() : (Iterator<?>) r;
+        return findMatch(lIter, rIter);
     }
     return equal(l, r);
 }
\ No newline at end of file
