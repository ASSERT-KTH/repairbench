diff --git a/tmp/358b5711-100a-4011-8ebd-d2741aa5fea4_buggy.java b/tmp/f574efda-ec59-4c66-bd92-6a611e08a459_fixed.java
index b5d94e0..ea81e03 100644
--- a/tmp/358b5711-100a-4011-8ebd-d2741aa5fea4_buggy.java
+++ b/tmp/f574efda-ec59-4c66-bd92-6a611e08a459_fixed.java
@@ -1,26 +1,20 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
+  // First, traverse the children exactly once.
+  for (Node child = node.getFirstChild(); child != null; child = child.getNext()) {
+    traverse(child);
+  }
+
   int visits = 0;
+  // Then repeatedly process this node until no more changes occur.
   do {
-      Node c = node.getFirstChild();
-      while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
-        c = next;
-      }
-
     visit(node);
     visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
+    Preconditions.checkState(visits < 10000, "too many iterations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
