diff --git a/tmp/eb5f7736-b068-4096-a2ce-2342bd94a710_buggy.java b/tmp/67109ec9-9543-4b30-8c72-175d9020b105_fixed.java
index bada2b6..388e7b0 100644
--- a/tmp/eb5f7736-b068-4096-a2ce-2342bd94a710_buggy.java
+++ b/tmp/67109ec9-9543-4b30-8c72-175d9020b105_fixed.java
@@ -1,16 +1,12 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic instanceof ParameterizedType) {
+        Type actualTypeArgument = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actualTypeArgument instanceof Class<?>) {
+            return (Class<?>) actualTypeArgument;
+        } else if (actualTypeArgument instanceof ParameterizedType) {
+            return (Class<?>) ((ParameterizedType) actualTypeArgument).getRawType();
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
