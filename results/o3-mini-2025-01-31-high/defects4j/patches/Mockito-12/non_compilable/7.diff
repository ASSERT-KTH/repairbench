diff --git a/tmp/79ca5059-98bc-484e-818b-13d465e3726d_buggy.java b/tmp/ed7db3f4-888c-4ebc-990f-1d5c966fd817_fixed.java
index bada2b6..7b53ccb 100644
--- a/tmp/79ca5059-98bc-484e-818b-13d465e3726d_buggy.java
+++ b/tmp/ed7db3f4-888c-4ebc-990f-1d5c966fd817_fixed.java
@@ -1,16 +1,17 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            return (Class) ((ParameterizedType) actual).getRawType();
+        } else if (actual instanceof WildcardType) {
+            Type[] upperBounds = ((WildcardType) actual).getUpperBounds();
+            if (upperBounds != null && upperBounds.length > 0 && upperBounds[0] instanceof Class) {
+                return (Class) upperBounds[0];
+            }
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
