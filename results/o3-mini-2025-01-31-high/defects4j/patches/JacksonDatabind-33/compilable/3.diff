diff --git a/tmp/dbea77ae-3ebd-4f50-821a-2b39eb0751d6_buggy.java b/tmp/cc4aa756-6392-470d-9efb-350f73bd9a96_fixed.java
index 3cb9232..9dfae69 100644
--- a/tmp/dbea77ae-3ebd-4f50-821a-2b39eb0751d6_buggy.java
+++ b/tmp/cc4aa756-6392-470d-9efb-350f73bd9a96_fixed.java
@@ -1,26 +1,22 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
-        String name = null;
-
+public PropertyName findNameForSerialization(Annotated a) {
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
-            name = jg.value();
-        } else {
+        String name = jg.value();
+        if (name != null && name.length() > 0) {
+            return PropertyName.construct(name);
+        }
+    }
     JsonProperty pann = _findAnnotation(a, JsonProperty.class);
     if (pann != null) {
-                name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
-                    || _hasAnnotation(a, JsonView.class)
-                    || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
-            } else {
+        String name = pann.value();
+        if (name != null && name.length() > 0) {
+            return PropertyName.construct(name);
+        }
+    }
+    // Previously, an annotation such as JsonSerialize, JsonView or JsonRawValue
+    // would force an explicit empty name (""), which later caused unwrapped
+    // properties to be dropped. With this fix we simply return null instead,
+    // so that the default naming (and unwrapping) behavior is used.
     return null;
 }
\ No newline at end of file
-        }
-        return PropertyName.construct(name);
-    }
