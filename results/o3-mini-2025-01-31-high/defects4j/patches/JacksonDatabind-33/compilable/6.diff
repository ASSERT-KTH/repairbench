diff --git a/tmp/729c2d45-0caa-4a8c-bb61-8045da7f8d03_buggy.java b/tmp/4f9bc197-365e-4c7b-8bb5-cf6d575475d2_fixed.java
index 3cb9232..f156785 100644
--- a/tmp/729c2d45-0caa-4a8c-bb61-8045da7f8d03_buggy.java
+++ b/tmp/4f9bc197-365e-4c7b-8bb5-cf6d575475d2_fixed.java
@@ -1,26 +1,31 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
+public PropertyName findNameForSerialization(Annotated a) {
+    // If the property is marked as unwrapped, do not give it an explicit name.
+    // This allows its contents to merge directly into the parent.
+    if (_findAnnotation(a, JsonUnwrapped.class) != null) {
+        return null;
+    }
+    
     String name = null;
     
+    // Use @JsonGetter if present
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
-        if (jg != null) {
+    if (jg != null && jg.value().length() > 0) {
         name = jg.value();
     } else {
+        // Otherwise, try to get it from @JsonProperty
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
-            if (pann != null) {
+        if (pann != null && pann.value().length() > 0) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
+            // With any of these annotations and no explicit name,
+            // leave it as the default (by returning null)
+            return null;
         } else {
             return null;
         }
     }
     return PropertyName.construct(name);
 }
\ No newline at end of file
