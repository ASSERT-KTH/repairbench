diff --git a/tmp/a6848fd7-9434-43bf-87fd-00a09f5857d9_buggy.java b/tmp/15b81461-4c48-4efd-9f41-41db364bfd17_fixed.java
index 3cb9232..e0969c0 100644
--- a/tmp/a6848fd7-9434-43bf-87fd-00a09f5857d9_buggy.java
+++ b/tmp/15b81461-4c48-4efd-9f41-41db364bfd17_fixed.java
@@ -1,26 +1,26 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
+public PropertyName findNameForSerialization(Annotated a) {
     String name = null;
-
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
+            // Instead of returning an empty string (which prevents unwrapped merging),
+            // return null so that the default (unwrapped) behavior is used.
+            return null;
         } else {
             return null;
         }
     }
+    // If the defined name is empty, treat it as "not explicitly defined" and return null.
+    if (name == null || name.isEmpty()) {
+        return null;
+    }
     return PropertyName.construct(name);
 }
\ No newline at end of file
