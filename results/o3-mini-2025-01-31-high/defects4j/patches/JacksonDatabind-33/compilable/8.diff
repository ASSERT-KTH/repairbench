diff --git a/tmp/ec565584-8082-4310-a3b2-5b883f1cb9ff_buggy.java b/tmp/38da84a9-746b-4140-8ed0-a747c69a2334_fixed.java
index 3cb9232..08ac7db 100644
--- a/tmp/ec565584-8082-4310-a3b2-5b883f1cb9ff_buggy.java
+++ b/tmp/38da84a9-746b-4140-8ed0-a747c69a2334_fixed.java
@@ -1,26 +1,31 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
-        String name = null;
+    // If the property is unwrapped then no wrapper name should be used:
+    JsonUnwrapped unwrapped = _findAnnotation(a, JsonUnwrapped.class);
+    if (unwrapped != null && unwrapped.enabled()) {
+        return null;
+    }
 
+    String name = null;
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
+            /* 22-Apr-2014, tatu: Should figure out a better way to do this,
+             * but itâ€™s actually a bit tricky to do it more efficiently (meta-annotations
              * add more lookups; AnnotationMap costs etc)
              */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
             return null;
         }
     }
     return PropertyName.construct(name);
 }
\ No newline at end of file
