diff --git a/tmp/20be036c-d7ba-4ca3-a977-495effe261b5_buggy.java b/tmp/ee063c94-d0de-4c89-a80d-6db315a0bafa_fixed.java
index 3cb9232..351db8d 100644
--- a/tmp/20be036c-d7ba-4ca3-a977-495effe261b5_buggy.java
+++ b/tmp/ee063c94-d0de-4c89-a80d-6db315a0bafa_fixed.java
@@ -1,26 +1,26 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
+public PropertyName findNameForSerialization(Annotated a) {
     String name = null;
-
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
+            // For annotations like these, an empty String was being used as a marker.
+            // However, an empty name should be treated as if no explicit property name was set.
             name = "";
         } else {
             return null;
         }
     }
+    // If an explicit name was provided but is empty, treat it as not overriding the default.
+    if (name == null || name.isEmpty()) {
+        return null;
+    }
     return PropertyName.construct(name);
 }
\ No newline at end of file
