diff --git a/tmp/0c93ea36-01f5-4b94-a365-a5c0574af51f_buggy.java b/tmp/363d69cc-8e90-4d81-a066-4a455bd08858_fixed.java
index 3cb9232..85a62c7 100644
--- a/tmp/0c93ea36-01f5-4b94-a365-a5c0574af51f_buggy.java
+++ b/tmp/363d69cc-8e90-4d81-a066-4a455bd08858_fixed.java
@@ -1,26 +1,27 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
+public PropertyName findNameForSerialization(Annotated a) {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
             return null;
         }
     }
+    // If the resolved name is an empty String, that means we want to use
+    // the default naming; an explicit empty name would otherwise override
+    // the unwrapping (or other name transformations) incorrectly.
+    if (name.isEmpty()) {
+        return PropertyName.USE_DEFAULT;
+    }
     return PropertyName.construct(name);
 }
\ No newline at end of file
