diff --git a/tmp/4c4d8ce3-2aee-4b81-a032-2b3b059eb3de_buggy.java b/tmp/81e4ecf4-b236-487e-9b0a-c60120bd5f44_fixed.java
index 07b0792..1e94955 100644
--- a/tmp/4c4d8ce3-2aee-4b81-a032-2b3b059eb3de_buggy.java
+++ b/tmp/81e4ecf4-b236-487e-9b0a-c60120bd5f44_fixed.java
@@ -1,22 +1,20 @@
-    /**
-     * @return Whether the variable is only assigned a value once for its
-     *     lifetime.
-     */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
-      // Make sure this assignment is not in a loop.
-      for (BasicBlock block = ref.getBasicBlock();
-           block != null; block = block.getParent()) {
-        if (block.isFunction) {
-          break;
-        } else if (block.isLoop) {
+  // Walk up the basic‐block chain to check that this assignment is
+  // executed only once.  In particular, if the assignment is inside a loop
+  // or a function that isn’t immediately invoked it may be executed repeatedly.
+  for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {
+    if (block.isLoop) {
+      return false;
+    }
+    if (block.isFunction && !block.isImmediatelyInvoked()) {
       return false;
     }
   }
 
   return true;
 }
\ No newline at end of file
