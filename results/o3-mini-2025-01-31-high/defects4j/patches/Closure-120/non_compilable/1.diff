diff --git a/tmp/fa843ce1-5e56-4cb7-ab57-57bcbeacdb11_buggy.java b/tmp/48555bb5-a43a-4448-835d-1ec5bb3f50a7_fixed.java
index 07b0792..6764272 100644
--- a/tmp/fa843ce1-5e56-4cb7-ab57-57bcbeacdb11_buggy.java
+++ b/tmp/48555bb5-a43a-4448-835d-1ec5bb3f50a7_fixed.java
@@ -1,22 +1,27 @@
-    /**
-     * @return Whether the variable is only assigned a value once for its
-     *     lifetime.
-     */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
-      // Make sure this assignment is not in a loop.
-      for (BasicBlock block = ref.getBasicBlock();
-           block != null; block = block.getParent()) {
-        if (block.isFunction) {
+  // Instead of stopping at any function block,
+  // only stop when we reach the block in which the variable was declared.
+  // If the assignment occurs in a function other than that declaration block,
+  // it may be executed repeatedly (e.g. via recursion) so we cannot inline it.
+
+  BasicBlock declBlock = getDeclaration().getBasicBlock();
+  for (BasicBlock block = ref.getBasicBlock(); block != null; block = block.getParent()) {
+    if (block == declBlock) {
       break;
-        } else if (block.isLoop) {
+    }
+    if (block.isLoop) {
+      return false;
+    }
+    // If we hit a function block that is not the declaration block,
+    // then the assignment is in a function that doesnâ€™t own the declaration.
+    if (block.isFunction) {
       return false;
     }
   }
-
   return true;
 }
\ No newline at end of file
