diff --git a/tmp/06ad14d0-caa4-4f56-bf32-94b90806205c_buggy.java b/tmp/0c779f2b-22ac-459e-a103-68d808fdf53d_fixed.java
index 19fd63e..e68483d 100644
--- a/tmp/06ad14d0-caa4-4f56-bf32-94b90806205c_buggy.java
+++ b/tmp/0c779f2b-22ac-459e-a103-68d808fdf53d_fixed.java
@@ -1,24 +1,11 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
 private boolean isFoldableExpressBlock(Node n) {
-    if (n.getType() == Token.BLOCK) {
-      if (n.hasOneChild()) {
-        Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+  if (n.getType() == Token.BLOCK && n.hasOneChild()) {
+    Node child = n.getFirstChild();
+    // If the sole child is an EXPR_RESULT, unwrap it.
+    if (child.getType() == Token.EXPR_RESULT && child.hasOneChild()) {
+      child = child.getFirstChild();
     }
+    return NodeUtil.isExpressionNode(child);
   }
-
   return false;
 }
\ No newline at end of file
