diff --git a/tmp/4f627bd8-cf5d-4100-8e59-1eab8d03501f_buggy.java b/tmp/3ecf8018-c47d-44d4-98f5-ad8e8e378626_fixed.java
index e69de29..0fcbb11 100644
--- a/tmp/4f627bd8-cf5d-4100-8e59-1eab8d03501f_buggy.java
+++ b/tmp/3ecf8018-c47d-44d4-98f5-ad8e8e378626_fixed.java
@@ -0,0 +1,17 @@
+public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass) {
+    // If the requested class is exactly the same as the base, nothing to change.
+    if (baseType.getRawClass() == subclass) {
+        return baseType;
+    }
+    // Verify that subclass is a valid narrowing of the base type.
+    if (!baseType.getRawClass().isAssignableFrom(subclass)) {
+        throw new IllegalArgumentException("Class " + subclass.getName()
+                + " is not a subtype of " + baseType.getRawClass().getName());
+    }
+    // For SimpleType instances, narrowBy preserves already resolved base properties.
+    if (baseType instanceof SimpleType) {
+        return ((SimpleType) baseType).narrowBy(subclass);
+    }
+    // Otherwise, delegate to the standard construction method using the existing type bindings.
+    return _fromClass(subclass, baseType.getBindings());
+}
\ No newline at end of file
