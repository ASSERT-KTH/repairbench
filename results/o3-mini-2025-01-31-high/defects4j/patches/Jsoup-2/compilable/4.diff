diff --git a/tmp/25d3fc2c-179d-401f-929d-f12132ad5bea_buggy.java b/tmp/bf4d5570-34bf-40d1-b0d7-615e842c7e22_fixed.java
index 1b29465..4ded9de 100644
--- a/tmp/25d3fc2c-179d-401f-929d-f12132ad5bea_buggy.java
+++ b/tmp/bf4d5570-34bf-40d1-b0d7-615e842c7e22_fixed.java
@@ -1,50 +1,56 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
+    boolean isEmptyElement = tag.isEmpty(); // normally, empty element if tag is defined as empty (eg: img)
+    if (tq.matchChomp("/>")) { // self-closing tag syntax: <tag/>
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
+    // For data tags (like script, textarea), we do not want to allow additional parsed content,
+    // so treat them as if they were self closed.
+    if (tag.isData())
+        isEmptyElement = true;
+
     addChildToParent(child, isEmptyElement);
 
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
+    // For pcdata tags (textarea, script) we manually chomp to the closing tag and add the text as a child.
     if (tag.isData()) {
-            String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
+        String data = tq.chompTo("</" + tagName + ">");
+        // Consume the closing tag
+        tq.consume("</" + tagName + ">");
         
         Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+        if (tag.equals(titleTag) || tag.equals(textareaTag))
             dataNode = TextNode.createFromEncoded(data, baseUri);
         else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+            dataNode = new DataNode(data, baseUri);
         child.appendChild(dataNode);
     }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
+        if (href.length() != 0) { // ignore e.g. <base target> etc.
             baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+            doc.setBaseUri(href); // update doc so that later element creation gets the proper base uri
         }
     }
 }
\ No newline at end of file
