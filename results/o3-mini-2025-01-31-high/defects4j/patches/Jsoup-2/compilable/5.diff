diff --git a/tmp/f2c41b2e-ee7a-49d0-b492-d036992debec_buggy.java b/tmp/44b1d8fb-d408-4298-b20a-ec1c2fbe8f93_fixed.java
index 1b29465..c0c3268 100644
--- a/tmp/f2c41b2e-ee7a-49d0-b492-d036992debec_buggy.java
+++ b/tmp/44b1d8fb-d408-4298-b20a-ec1c2fbe8f93_fixed.java
@@ -1,50 +1,55 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
-            isEmptyElement = true;
-        } else {
-            tq.matchChomp(">");
-        }
-        addChildToParent(child, isEmptyElement);
-
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
+    // For data tags (e.g. script, style), the content is treated as raw text and the tag
+    // is immediately closed (so subsequent text won't be added inside it)
     if (tag.isData()) {
-            String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
+        tq.matchChomp(">"); // finish the start tag
+        // Grab everything up to the proper closing tag
+        String data = tq.chompTo("</" + tagName + ">");
+        tq.consume("</" + tagName + ">"); // fully consume the closing tag
 
         Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+        if (tag.equals(titleTag) || tag.equals(textareaTag))
             dataNode = TextNode.createFromEncoded(data, baseUri);
         else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+            dataNode = new DataNode(data, baseUri);
         child.appendChild(dataNode);
+        // Mark as empty so the element is not pushed onto (or left on) the stack.
+        addChildToParent(child, true);
+    } else {
+        boolean isEmptyElement = tag.isEmpty(); // empty if the tag is an empty tag (e.g. img) or self-closed
+        if (tq.matchChomp("/>")) {
+            isEmptyElement = true;
+        } else {
+            tq.matchChomp(">");
+        }
+        addChildToParent(child, isEmptyElement);
     }
 
-        // <base href>: update the base uri
+    // <base href>: update the base uri if found
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
+        if (href.length() != 0) { // ignore other attributes like <base target>
             baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+            doc.setBaseUri(href);
         }
     }
 }
\ No newline at end of file
