diff --git a/tmp/7fd3657d-d482-4525-aecc-97186c1f661a_buggy.java b/tmp/f0f43d0d-fa4a-4e49-a0ff-20388db3fa2e_fixed.java
index 1b29465..3b3ad8a 100644
--- a/tmp/7fd3657d-d482-4525-aecc-97186c1f661a_buggy.java
+++ b/tmp/f0f43d0d-fa4a-4e49-a0ff-20388db3fa2e_fixed.java
@@ -1,50 +1,50 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
     boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
     if (tq.matchChomp("/>")) { // close empty element or tag
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
     // pc data only tags (textarea, script): chomp to end tag, add content as text node
     if (tag.isData()) {
         String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
+        tq.matchChomp("</" + tagName + ">");
         
         Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+        if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags
             dataNode = TextNode.createFromEncoded(data, baseUri);
         else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+            dataNode = new DataNode(data, baseUri); // raw data (e.g. in script)
         child.appendChild(dataNode);   
     }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
         if (href.length() != 0) { // ignore <base target> etc
             baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+            doc.setBaseUri(href); // update base on the document
         }
     }
 }
\ No newline at end of file
