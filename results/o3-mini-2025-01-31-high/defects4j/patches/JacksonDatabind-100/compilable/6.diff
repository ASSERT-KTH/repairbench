diff --git a/tmp/a98d5be7-091c-4d2e-94c6-8291b74139a3_buggy.java b/tmp/1279a6f9-1fc9-4918-854e-516d7cdb21d1_fixed.java
index fc8c302..b8174d6 100644
--- a/tmp/a98d5be7-091c-4d2e-94c6-8291b74139a3_buggy.java
+++ b/tmp/1279a6f9-1fc9-4918-854e-516d7cdb21d1_fixed.java
@@ -1,23 +1,34 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+        // if this node is already a binary node, use its binary value
+        if (n.isBinary()) {
+            return n.binaryValue();
         }
+        // if the node is textual, decode the Base64 text using the supplied variant
+        if (n.isTextual()) {
+            String base64 = n.textValue();
+            if (base64.isEmpty()) {
+                return new byte[0];
+            }
+            try {
+                return b64variant.decode(base64);
+            } catch (IllegalArgumentException iae) {
+                throw new JsonParseException(null,
+                        "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + iae.getMessage(), iae);
+            }
+        }
+        // if the node is a POJO node, check if it holds a byte[] already
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
+    // no binary content available
     return null;
 }
\ No newline at end of file
