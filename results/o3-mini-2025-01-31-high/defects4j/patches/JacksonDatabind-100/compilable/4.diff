diff --git a/tmp/eade6f68-fad7-4aba-a412-ba5e520dfe97_buggy.java b/tmp/f5eb9d70-92ba-4952-b6db-bc9a985a1c1a_fixed.java
index fc8c302..3823620 100644
--- a/tmp/eade6f68-fad7-4aba-a412-ba5e520dfe97_buggy.java
+++ b/tmp/f5eb9d70-92ba-4952-b6db-bc9a985a1c1a_fixed.java
@@ -1,23 +1,30 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+        // If the node is an actual binary node, return its content.
+        if (n.isBinary()) {
+            return n.binaryValue();
         }
+        // If it's a text node, decode the text using the provided Base64 variant.
+        if (n.isTextual()) {
+            try {
+                return b64variant.decode(n.textValue());
+            } catch (IllegalArgumentException iae) {
+                throw new JsonParseException(null,
+                    "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + iae.getMessage(), iae);
+            }
+        }
+        // If it's a POJO node, check if it encapsulates a byte[].
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
+    // Otherwise, no binary content is present.
     return null;
 }
\ No newline at end of file
