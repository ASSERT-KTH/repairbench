diff --git a/tmp/53ab7e57-64ac-448d-914e-626ed63e1d86_buggy.java b/tmp/72bab999-0863-473f-9022-205754f151f1_fixed.java
index fc8c302..db9ac14 100644
--- a/tmp/53ab7e57-64ac-448d-914e-626ed63e1d86_buggy.java
+++ b/tmp/72bab999-0863-473f-9022-205754f151f1_fixed.java
@@ -1,23 +1,47 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // For non-textual nodes (eg, BinaryNode) we can use the regular binaryValue() if available:
+        if (!n.isTextual()) {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+        }
+        // For textual nodes, decode the Base64 content using the provided variant
+        if (n.isTextual()) {
+            String text = n.textValue();
+            java.util.Base64.Decoder decoder;
+            if (b64variant == Base64Variants.MODIFIED_FOR_URL) {
+                decoder = java.util.Base64.getUrlDecoder();
+            } else if (b64variant == Base64Variants.MIME) {
+                decoder = java.util.Base64.getMimeDecoder();
+            } else if (b64variant == Base64Variants.MIME_NO_LINEFEEDS) {
+                // When line feeds are not expected, the basic decoder works
+                decoder = java.util.Base64.getDecoder();
+            } else if (b64variant == Base64Variants.PEM) {
+                // PEM is similar to MIME in terms of decoding
+                decoder = java.util.Base64.getMimeDecoder();
+            } else {
+                decoder = java.util.Base64.getDecoder();
+            }
+            try {
+                return decoder.decode(text);
+            } catch (IllegalArgumentException e) {
+                throw new JsonParseException("Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), null, e);
+            }
+        }
+        // For POJO nodes, if the embedded value is a byte array, return it directly
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
+    // If no binary content is available, return null
     return null;
 }
\ No newline at end of file
