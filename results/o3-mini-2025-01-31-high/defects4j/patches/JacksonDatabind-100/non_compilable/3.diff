diff --git a/tmp/b56513d8-adba-44c5-b9bf-30d7c248f273_buggy.java b/tmp/2ab422d0-4c54-4a1f-99f7-12d465cf9f32_fixed.java
index fc8c302..c6ede88 100644
--- a/tmp/b56513d8-adba-44c5-b9bf-30d7c248f273_buggy.java
+++ b/tmp/2ab422d0-4c54-4a1f-99f7-12d465cf9f32_fixed.java
@@ -1,23 +1,25 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+        // If the node already holds binary data (e.g. a BinaryNode), just return it.
+        if (n.isBinary()) {
+            return n.binaryValue();
         }
+        // When the node is textual, use the variant-specific decoding.
+        if (n.isTextual()) {
+            return ((TextNode) n).binaryValue(b64variant);
+        }
+        // Also allow POJO nodes that actually contain a byte array.
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
+    // If none of the above worked, there is no binary content.
     return null;
 }
\ No newline at end of file
