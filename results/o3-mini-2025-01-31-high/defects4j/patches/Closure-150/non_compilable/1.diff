diff --git a/tmp/58a79e00-2fd6-4d3b-b965-3be37ef758e8_buggy.java b/tmp/8943ff04-cc78-44eb-9268-93d920561821_fixed.java
index 800e6e1..8d1a548 100644
--- a/tmp/58a79e00-2fd6-4d3b-b965-3be37ef758e8_buggy.java
+++ b/tmp/8943ff04-cc78-44eb-9268-93d920561821_fixed.java
@@ -1,32 +1,34 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
-    @Override public void visit(NodeTraversal t, Node n, Node parent) {
+@Override
+public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
+    case Token.GETPROP:
+      // When a GETPROP node is a stub (e.g. "goog.foo;" or "this.foo;")
+      // and there is a JSDoc attached, treat it as a declaration.
+      // Also, ensure it appears as an expression statement.
+      if (parent != null && parent.getType() == Token.EXPR_RESULT &&
+          n.getJSDocInfo() != null) {
+        defineQualifiedSlot(n, parent);
+      }
+      break;
   }
 }
\ No newline at end of file
