diff --git a/tmp/7a0e62f2-481c-40cf-afac-acab37d14420_buggy.java b/tmp/e861edfe-6f0a-45c0-8018-dbb07a14c6f3_fixed.java
index 800e6e1..3546fa2 100644
--- a/tmp/7a0e62f2-481c-40cf-afac-acab37d14420_buggy.java
+++ b/tmp/e861edfe-6f0a-45c0-8018-dbb07a14c6f3_fixed.java
@@ -1,32 +1,37 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
-    @Override public void visit(NodeTraversal t, Node n, Node parent) {
-      if (n == scope.getRootNode()) return;
+@Override
+public void visit(NodeTraversal t, Node n, Node parent) {
+  if (n == scope.getRootNode()) {
+    return;
+  }
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
+      // When a FUNCTION node is a child of a NAME, the VAR declaration will
+      // do the work, so we can skip it here.
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
+    case Token.GETPROP:
+      // Handle namespaced function stubs (e.g. "/** @param {number} x */ goog.foo;")
+      // as well as properties on "this" in constructors.
+      JSDocInfo info = n.getJSDocInfo();
+      if (info != null && (info.hasParameterTypes() || info.hasReturnType())) {
+        defineDeclaredFunction(n, parent);
+      }
+      break;
   }
 }
\ No newline at end of file
