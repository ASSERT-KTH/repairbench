diff --git a/tmp/601e905c-8996-4934-9f92-c48f7d33e42e_buggy.java b/tmp/e63b691c-3b64-4b15-b99b-e2b0fa9d42bc_fixed.java
index 6cfa79b..898058e 100644
--- a/tmp/601e905c-8996-4934-9f92-c48f7d33e42e_buggy.java
+++ b/tmp/e63b691c-3b64-4b15-b99b-e2b0fa9d42bc_fixed.java
@@ -1,12 +1,11 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    // For extreme values, simply return 0 or 1 rather than attempting
+    // to compute the error function (which can fail to converge).
+    if (x <= mean - 10 * standardDeviation) {
+        return 0.0;
+    }
+    if (x >= mean + 10 * standardDeviation) {
+        return 1.0;
+    }
+    return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));
 }
\ No newline at end of file
