diff --git a/tmp/65ddd4cd-824d-4edb-af8d-8f168b3e074d_buggy.java b/tmp/3114bcb4-1675-4930-98f5-777d5e5b80ac_fixed.java
index 6cfa79b..f1204eb 100644
--- a/tmp/65ddd4cd-824d-4edb-af8d-8f168b3e074d_buggy.java
+++ b/tmp/3114bcb4-1675-4930-98f5-777d5e5b80ac_fixed.java
@@ -1,12 +1,23 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < x).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at x. 
  * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
+ * x is 10 or more standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    // Compute the number of standard deviations from the mean.
+    double dev = (x - mean) / standardDeviation;
+    
+    // Top-code extreme values to avoid convergence issues.
+    if (dev <= -10.0) {
+        return 0.0;
+    }
+    if (dev >= 10.0) {
+        return 1.0;
+    }
+    
+    // Compute the cumulative probability via the error function.
+    return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));
 }
\ No newline at end of file
