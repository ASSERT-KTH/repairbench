diff --git a/tmp/54aee29f-7e0b-4616-8db2-b0459e506424_buggy.java b/tmp/1dc11087-1072-48dc-8c49-e818e497a36b_fixed.java
index 4e21866..aec339e 100644
--- a/tmp/54aee29f-7e0b-4616-8db2-b0459e506424_buggy.java
+++ b/tmp/1dc11087-1072-48dc-8c49-e818e497a36b_fixed.java
@@ -1,10 +1,17 @@
-    /**
-     * Computes the square-root of the weight matrix.
-     *
-     * @param m Symmetric, positive-definite (weight) matrix.
-     * @return the square-root of the weight matrix.
-     */
 private RealMatrix squareRoot(RealMatrix m) {
-            final EigenDecomposition dec = new EigenDecomposition(m);
-            return dec.getSquareRoot();
+    // When the weight matrix is diagonal (as is usually the case in the fitter),
+    // we can compute its square root without forming a full dense matrix.
+    if (m instanceof DiagonalMatrix) {
+        double[] diag = ((DiagonalMatrix) m).getData();
+        double[] sqrtDiag = new double[diag.length];
+        for (int i = 0; i < diag.length; i++) {
+            sqrtDiag[i] = FastMath.sqrt(diag[i]);
+        }
+        return new DiagonalMatrix(sqrtDiag);
+    }
+    // For a general symmetric positive-definite matrix, using an
+    // eigen-decomposition (which creates a dense n×n array)
+    // is very memory intensive. Instead we use the Cholesky decomposition,
+    // which returns a lower-triangular matrix L such that L * Lᵀ = m.
+    return new CholeskyDecomposition(m).getL();
 }
\ No newline at end of file
