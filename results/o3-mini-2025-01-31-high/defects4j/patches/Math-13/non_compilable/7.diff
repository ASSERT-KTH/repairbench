diff --git a/tmp/8543a9f6-5c05-42ee-b4ce-55f62eb06616_buggy.java b/tmp/9474adb8-200e-4446-923b-33e02ce5271c_fixed.java
index 4e21866..c386548 100644
--- a/tmp/8543a9f6-5c05-42ee-b4ce-55f62eb06616_buggy.java
+++ b/tmp/9474adb8-200e-4446-923b-33e02ce5271c_fixed.java
@@ -1,10 +1,24 @@
 /**
  * Computes the square-root of the weight matrix.
  *
+ * When the weight matrix is diagonal, computing its square root
+ * element‑wise is far more efficient than performing a full eigen‐decomposition.
+ *
  * @param m Symmetric, positive-definite (weight) matrix.
  * @return the square-root of the weight matrix.
  */
 private RealMatrix squareRoot(RealMatrix m) {
+    // If the matrix is already diagonal, compute the square root elementwise.
+    // This avoids the huge memory consumption from eigen-decomposition on large diagonal matrices.
+    if (m instanceof DiagonalMatrix) {
+        double[] diag = ((DiagonalMatrix) m).getData();
+        double[] sqrtDiag = new double[diag.length];
+        for (int i = 0; i < diag.length; i++) {
+            sqrtDiag[i] = Math.sqrt(diag[i]);
+        }
+        return new DiagonalMatrix(sqrtDiag);
+    }
+    // Otherwise fall back to the eigen decomposition approach.
     final EigenDecomposition dec = new EigenDecomposition(m);
     return dec.getSquareRoot();
 }
\ No newline at end of file
