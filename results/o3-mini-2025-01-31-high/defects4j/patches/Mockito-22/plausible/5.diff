diff --git a/tmp/565d7459-94b1-4a93-8e12-d3cd0d1b56ac_buggy.java b/tmp/4e5f199a-0e16-43e4-b0ac-eb84bbb8a21f_fixed.java
index 111ba5e..0e4228a 100644
--- a/tmp/565d7459-94b1-4a93-8e12-d3cd0d1b56ac_buggy.java
+++ b/tmp/4e5f199a-0e16-43e4-b0ac-eb84bbb8a21f_fixed.java
@@ -1,9 +1,27 @@
 public static boolean areEqual(Object o1, Object o2) {
+    // If both are the same object (or both null) then they are equal.
+    if (o1 == o2) {
+        return true;
+    }
     if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+        return false;
+    }
+    // If both objects are arrays, compare them element by element.
+    if (o1.getClass().isArray() && o2.getClass().isArray()) {
+        int len1 = java.lang.reflect.Array.getLength(o1);
+        int len2 = java.lang.reflect.Array.getLength(o2);
+        if (len1 != len2) {
+            return false;
+        }
+        for (int i = 0; i < len1; i++) {
+            Object e1 = java.lang.reflect.Array.get(o1, i);
+            Object e2 = java.lang.reflect.Array.get(o2, i);
+            if (!areEqual(e1, e2)) {
+                return false;
+            }
+        }
+        return true;
+    }
+    // For non-array objects, use the standard equals method.
     return o1.equals(o2);
 }
\ No newline at end of file
-    }
