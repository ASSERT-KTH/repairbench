diff --git a/tmp/3ff459c3-017b-425c-b79b-5b4e78d0dde3_buggy.java b/tmp/5e2a6012-54e9-4546-9e20-3d9dd3a86962_fixed.java
index ec709bd..520bb4e 100644
--- a/tmp/3ff459c3-017b-425c-b79b-5b4e78d0dde3_buggy.java
+++ b/tmp/5e2a6012-54e9-4546-9e20-3d9dd3a86962_fixed.java
@@ -1,8 +1,29 @@
 @Override
-    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
-    {
-        // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit
-        //    special unfortunately
+public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    // In cases of polymorphic type handling with an unknown type id,
+    // the parser may be left in the middle of reading an object (e.g. at a FIELD_NAME)
+    // so we must skip the entire value (object or array) to avoid leaving unconsumed tokens.
+    JsonToken t = p.getCurrentToken();
+    if (t == JsonToken.FIELD_NAME) {
+        // Weâ€™re already inside an object (its START_OBJECT has been consumed),
+        // so loop until we hit the matching END_OBJECT.
+        while (p.nextToken() != JsonToken.END_OBJECT) {
+            // If we encounter a nested object/array, skip its contents.
+            if (p.getCurrentToken() == JsonToken.START_OBJECT
+                    || p.getCurrentToken() == JsonToken.START_ARRAY) {
                 p.skipChildren();
+            }
+        }
+        // Now that we are at END_OBJECT, advance one more to leave this value.
+        p.nextToken();
+    } else if (t == JsonToken.START_OBJECT || t == JsonToken.START_ARRAY) {
+        // For a container value that has not yet been processed (rare in this case),
+        // skip its children and move past the closing token.
+        p.skipChildren();
+        p.nextToken();
+    } else {
+        // For non-container (scalar) values, just move past it.
+        p.nextToken();
+    }
     return null;
 }
\ No newline at end of file
