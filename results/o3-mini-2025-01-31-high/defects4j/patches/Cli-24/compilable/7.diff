diff --git a/tmp/05d8ea38-5a7b-4dcf-bacc-07519ce103c2_buggy.java b/tmp/d0fa7c39-1bc1-4856-bfff-bf0726b56068_fixed.java
index 229b3e7..9ba21bd 100644
--- a/tmp/05d8ea38-5a7b-4dcf-bacc-07519ce103c2_buggy.java
+++ b/tmp/d0fa7c39-1bc1-4856-bfff-bf0726b56068_fixed.java
@@ -1,55 +1,49 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
-
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
+    // Allow the case when nextLineTabStop equals width.
+    if (nextLineTabStop > width)
     {
-            // stops infinite loop happening
+        // Stops infinite loop happening.
         throw new IllegalStateException("Total width is less than the width of the argument and indent " +
                                         "- no room for the description");
     }
     
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // All following lines must be padded with nextLineTabStop space characters.
     final String padding = createPadding(nextLineTabStop);
-
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
         
         if ((text.length() > width) && (pos == nextLineTabStop - 1)) 
         {
             pos = width;
         }
-
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
