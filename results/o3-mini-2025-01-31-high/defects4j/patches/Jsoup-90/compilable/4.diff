diff --git a/tmp/fc59d926-b894-4647-a69e-f35f9e535a14_buggy.java b/tmp/49b391a4-1863-4ee0-a12f-ed7b33c767ea_fixed.java
index 373b1e8..7e69c79 100644
--- a/tmp/fc59d926-b894-4647-a69e-f35f9e535a14_buggy.java
+++ b/tmp/49b391a4-1863-4ee0-a12f-ed7b33c767ea_fixed.java
@@ -1,37 +1,46 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
-            if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+    if (input.length >= 3
+        && (input[0] & 0xFF) == 0xEF
+        && (input[1] & 0xFF) == 0xBB
+        && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
-            int end;
-            for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+    for (int len = input.length; i < len; ++i) {
+        int o = input[i] & 0xFF;
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
-                // UTF-8 leading:
+        int end;
         if ((o & 0xE0) == 0xC0) {
+            // must have one continuation byte
+            if (i + 1 >= len)
+                return false;
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
+            // must have two continuation bytes
+            if (i + 2 >= len)
+                return false;
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
+            // must have three continuation bytes
+            if (i + 3 >= len)
+                return false;
             end = i + 3;
         } else {
             return false;
         }
 
-
         while (i < end) {
             i++;
-                    o = input[i];
+            o = input[i] & 0xFF;
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
