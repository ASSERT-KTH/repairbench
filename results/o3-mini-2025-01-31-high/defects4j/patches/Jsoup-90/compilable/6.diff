diff --git a/tmp/26202525-02ad-420c-bd7b-5ba109b933e0_buggy.java b/tmp/510d0d30-ecd7-4c65-9f89-02c35c3e941c_fixed.java
index 373b1e8..a6e9073 100644
--- a/tmp/26202525-02ad-420c-bd7b-5ba109b933e0_buggy.java
+++ b/tmp/510d0d30-ecd7-4c65-9f89-02c35c3e941c_fixed.java
@@ -1,37 +1,42 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
-            if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+    if (input.length >= 3 
+            && ((input[0] & 0xFF) == 0xEF)
+            && ((input[1] & 0xFF) == 0xBB)
+            && ((input[2] & 0xFF) == 0xBF)) {
         i = 3;
     }
 
-            int end;
     for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+        int o = input[i] & 0xFF;
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
-                // UTF-8 leading:
+        int end;
         if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
+            end = i + 1;  // Expect one continuation byte
         } else if ((o & 0xF0) == 0xE0) {
-                    end = i + 2;
+            end = i + 2;  // Expect two continuation bytes
         } else if ((o & 0xF8) == 0xF0) {
-                    end = i + 3;
+            end = i + 3;  // Expect three continuation bytes
         } else {
             return false;
         }
 
+        // Check if there are enough bytes left for the continuation bytes.
+        if (end >= j) {
+            return false;
+        }
 
         while (i < end) {
             i++;
-                    o = input[i];
+            o = input[i] & 0xFF;
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
