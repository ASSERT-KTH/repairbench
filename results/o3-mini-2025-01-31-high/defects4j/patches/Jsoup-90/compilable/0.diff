diff --git a/tmp/60f62ea6-b943-43ee-a1a9-5a5a92adb4e6_buggy.java b/tmp/13414025-0e0c-4285-bf5a-b3b3b1b08143_fixed.java
index 373b1e8..3ef0def 100644
--- a/tmp/60f62ea6-b943-43ee-a1a9-5a5a92adb4e6_buggy.java
+++ b/tmp/13414025-0e0c-4285-bf5a-b3b3b1b08143_fixed.java
@@ -1,37 +1,40 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
     int end;
-            for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+    for (int j = input.length; i < j; i++) {
+        int o = input[i] & 0xFF;
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
-                // UTF-8 leading:
+        // UTF-8 leading byte check and determination of number of continuation bytes.
         if ((o & 0xE0) == 0xC0) {
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
             end = i + 3;
         } else {
             return false;
         }
 
+        // Check that there are enough bytes remaining for the continuation bytes
+        if (end >= j) return false;
 
+        // Verify that each continuation byte starts with binary 10
         while (i < end) {
             i++;
-                    o = input[i];
+            o = input[i] & 0xFF;
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
