diff --git a/tmp/13810f92-974b-4e50-8d63-47108ded016c_buggy.java b/tmp/9a77cf5d-607a-41f8-a45a-c725e5c91657_fixed.java
index fbd0884..db5caf5 100644
--- a/tmp/13810f92-974b-4e50-8d63-47108ded016c_buggy.java
+++ b/tmp/9a77cf5d-607a-41f8-a45a-c725e5c91657_fixed.java
@@ -1,23 +1,31 @@
-    /**
-     * Flip qd array if warranted.
-     * @param n number of rows in the block
-     * @param step within the array (1 for flipping all elements, 2 for flipping
-     * only every other element)
-     * @return true if qd array was flipped
-     */
 private boolean flipIfWarranted(final int n, final int step) {
     if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
-            int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
+        // Reverse the entire array (stored as n blocks of 4 elements)
+        // by swapping each block with its mirror. When n is odd the middle block is
+        // reversed in place.
+        final int numPairs = n / 2;
+        for (int i = 0; i < numPairs; i++) {
+            int j = n - 1 - i;
+            int iOffset = 4 * i;
+            int jOffset = 4 * j;
+            // Swap the i-th block with the j-th block reversing the order in each block.
             for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                double tmp = work[iOffset + k];
+                work[iOffset + k] = work[jOffset + (3 - k)];
+                work[jOffset + (3 - k)] = tmp;
+            }
+        }
+        // If n is odd, reverse the middle block in place.
+        if ((n & 1) == 1) {
+            int mid = n / 2;
+            int offset = 4 * mid;
+            for (int k = 0; k < 2; k += step) {
+                double tmp = work[offset + k];
+                work[offset + k] = work[offset + (3 - k)];
+                work[offset + (3 - k)] = tmp;
             }
-                j -= 4;
         }
         return true;
     }
     return false;
 }
\ No newline at end of file
