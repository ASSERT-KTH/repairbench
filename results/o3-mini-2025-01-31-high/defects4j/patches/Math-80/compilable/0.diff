diff --git a/tmp/065d6cde-07cd-4adc-91ac-51e02cd4ffa4_buggy.java b/tmp/99226559-812f-4395-9ba8-6f002d51874b_fixed.java
index fbd0884..f1f3a0c 100644
--- a/tmp/065d6cde-07cd-4adc-91ac-51e02cd4ffa4_buggy.java
+++ b/tmp/99226559-812f-4395-9ba8-6f002d51874b_fixed.java
@@ -1,23 +1,19 @@
-    /**
-     * Flip qd array if warranted.
-     * @param n number of rows in the block
-     * @param step within the array (1 for flipping all elements, 2 for flipping
-     * only every other element)
-     * @return true if qd array was flipped
-     */
 private boolean flipIfWarranted(final int n, final int step) {
     if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
+        // flip array: swap corresponding rows without reversing the order in each row
         int j = 4 * n - 1;
         for (int i = 0; i < j; i += 4) {
             for (int k = 0; k < 4; k += step) {
                 final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                // Instead of using "j - k" (which reverses the row),
+                // use (j - 3) + k so that the partner rowâ€™s block (whose first element is at j-3)
+                // is swapped in the same order.
+                work[i + k] = work[(j - 3) + k];
+                work[(j - 3) + k] = tmp;
             }
             j -= 4;
         }
         return true;
     }
     return false;
 }
\ No newline at end of file
