diff --git a/tmp/e05b4813-5907-4958-8624-16a97ddc253c_buggy.java b/tmp/5f4e3934-8294-4bbd-9c67-bc18e332f134_fixed.java
index fbd0884..6becc8a 100644
--- a/tmp/e05b4813-5907-4958-8624-16a97ddc253c_buggy.java
+++ b/tmp/5f4e3934-8294-4bbd-9c67-bc18e332f134_fixed.java
@@ -1,23 +1,19 @@
-    /**
-     * Flip qd array if warranted.
-     * @param n number of rows in the block
-     * @param step within the array (1 for flipping all elements, 2 for flipping
-     * only every other element)
-     * @return true if qd array was flipped
-     */
 private boolean flipIfWarranted(final int n, final int step) {
     if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
-            int j = 4 * n - 1;
+        // We must reverse the order of the 4-element blocks without
+        // reversing the order within each block.
+        // That is, swap block m and block n-1-m for m=0,...,floor((n-1)/2).
+        // A simple way to do that is to have a pointer to the start of the last block.
+        int j = 4 * (n - 1);  // starting index of the last block
         for (int i = 0; i < j; i += 4) {
             for (int k = 0; k < 4; k += step) {
                 final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                work[i + k] = work[j + k];
+                work[j + k] = tmp;
             }
             j -= 4;
         }
         return true;
     }
     return false;
 }
\ No newline at end of file
