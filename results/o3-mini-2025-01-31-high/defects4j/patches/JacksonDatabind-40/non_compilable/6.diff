diff --git a/tmp/5a944445-8d39-4bea-8c2a-351152a4f23c_buggy.java b/tmp/a18f0246-fc12-4d62-a03c-695bfb34daed_fixed.java
index e69de29..01cb454 100644
--- a/tmp/5a944445-8d39-4bea-8c2a-351152a4f23c_buggy.java
+++ b/tmp/a18f0246-fc12-4d62-a03c-695bfb34daed_fixed.java
@@ -0,0 +1,32 @@
+private Object coerceEmptyString(String value, Class<?> targetType) {
+    // Only "coerce" if input is actually empty
+    if (value != null && value.isEmpty()) {
+        if (targetType.isPrimitive()) {
+            // Convert empty string into the default value for the primitive type:
+            if (targetType == int.class) {
+                return 0;
+            } else if (targetType == long.class) {
+                return 0L;
+            } else if (targetType == double.class) {
+                return 0.0;
+            } else if (targetType == float.class) {
+                return 0.0f;
+            } else if (targetType == boolean.class) {
+                return false;
+            } else if (targetType == byte.class) {
+                return (byte) 0;
+            } else if (targetType == short.class) {
+                return (short) 0;
+            } else if (targetType == char.class) {
+                return '\u0000';
+            } else {
+                // Should not occur; all primitives should be handled above.
+                throw new IllegalArgumentException("Unsupported primitive type: " + targetType.getName());
+            }
+        }
+        // For non-primitive types, default empty value to null.
+        return null;
+    }
+    // For non-empty values, defer to normal processing (or throw if this utility is only meant for empty string coercion).
+    throw new IllegalArgumentException("Expected empty string for coercion, got: " + value);
+}
\ No newline at end of file
