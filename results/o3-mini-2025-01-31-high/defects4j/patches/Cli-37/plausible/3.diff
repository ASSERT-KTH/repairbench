diff --git a/tmp/7fa2fda5-72ec-4eca-b860-ff2cd89db3d1_buggy.java b/tmp/18b4d066-d812-4e82-937b-9adddeb3ab97_fixed.java
index a7e6997..2bbf8ee 100644
--- a/tmp/7fa2fda5-72ec-4eca-b860-ff2cd89db3d1_buggy.java
+++ b/tmp/18b4d066-d812-4e82-937b-9adddeb3ab97_fixed.java
@@ -1,12 +1,18 @@
-    /**
-     * Tells if the token looks like a short option.
-     * 
-     * @param token
-     */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
-
-        // remove leading "-" and "=value"
+private boolean isShortOption(String token) {
+    if (token == null || !token.startsWith("-") || token.startsWith("--")) {
+        return false;
+    }
+    // Remove the leading "-"
+    String opt = token.substring(1);
+    // Remove any "=value" part if present
+    int eqPos = opt.indexOf('=');
+    if (eqPos != -1) {
+        opt = opt.substring(0, eqPos);
+    }
+    // First, check if the entire option string is recognized
+    if (options.hasShortOption(opt)) {
+        return true;
+    }
+    // Otherwise, check if the first character qualifies as a short option
+    return opt.length() > 0 && options.hasShortOption(opt.substring(0, 1));
 }
\ No newline at end of file
