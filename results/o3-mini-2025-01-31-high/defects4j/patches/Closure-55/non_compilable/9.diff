diff --git a/tmp/64db5cf0-4e5f-464d-a85e-8979bd1ec9f6_buggy.java b/tmp/34628e2b-b3a4-445f-9c4c-a1a8ad0145ce_fixed.java
index 43937f5..b1f34e5 100644
--- a/tmp/64db5cf0-4e5f-464d-a85e-8979bd1ec9f6_buggy.java
+++ b/tmp/34628e2b-b3a4-445f-9c4c-a1a8ad0145ce_fixed.java
@@ -1,3 +1,23 @@
 private static boolean isReduceableFunctionExpression(Node n) {
+  // If we see a call, check if it is an __defineGetter__/__defineSetter__ call.
+  if (n.isCall()) {
+    Node callee = n.getFirstChild();
+    if (callee != null && callee.isGetProp()) {
+      Node prop = callee.getLastChild();
+      if (prop != null) {
+        String propName = prop.getString();
+        if ("__defineGetter__".equals(propName) || "__defineSetter__".equals(propName)) {
+          // In __defineGetter__/__defineSetter__ calls, the function is the second argument.
+          Node funcArg = n.getChildCount() > 1 ? n.getChildAtIndex(1) : null;
+          return funcArg != null && NodeUtil.isFunctionExpression(funcArg);
+        }
+      }
+    }
+  }
+  // Also allow getter/setter definitions.
+  if (n.isGetterDef() || n.isSetterDef()) {
+    return true;
+  }
+  // Otherwise, simply check whether it is a function expression.
   return NodeUtil.isFunctionExpression(n);
 }
\ No newline at end of file
