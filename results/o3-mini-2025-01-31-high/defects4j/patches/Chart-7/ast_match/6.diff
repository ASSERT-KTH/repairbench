diff --git a/tmp/73d10c71-9e5f-46db-8553-5c0ceae5bd85_buggy.java b/tmp/2a37652c-55e2-4dd8-b5cf-d76b0dc27afa_fixed.java
index eb0c9a2..d954f3f 100644
--- a/tmp/73d10c71-9e5f-46db-8553-5c0ceae5bd85_buggy.java
+++ b/tmp/2a37652c-55e2-4dd8-b5cf-d76b0dc27afa_fixed.java
@@ -1,85 +1,63 @@
-    /**
-     * Update the index values for the maximum and minimum bounds.
-     * 
-     * @param period  the time period.
-     * @param index  the index of the time period.
-     */
 private void updateBounds(TimePeriod period, int index) {
-        
     long start = period.getStart().getTime();
     long end = period.getEnd().getTime();
     long middle = start + ((end - start) / 2);
 
     if (this.minStartIndex >= 0) {
-            long minStart = getDataItem(this.minStartIndex).getPeriod()
-                .getStart().getTime();
+        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
         if (start < minStart) {
             this.minStartIndex = index;
         }
-        }
-        else {
+    } else {
         this.minStartIndex = index;
     }
 
     if (this.maxStartIndex >= 0) {
-            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
-                .getStart().getTime();
+        long maxStart = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
         if (start > maxStart) {
             this.maxStartIndex = index;
         }
-        }
-        else {
+    } else {
         this.maxStartIndex = index;
     }
 
     if (this.minMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long minMiddle = s + (e - s) / 2;
+        long s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+        long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+        long minMiddle = s + ((e - s) / 2);
         if (middle < minMiddle) {
             this.minMiddleIndex = index;
         }
-        }
-        else {
+    } else {
         this.minMiddleIndex = index;
     }
 
     if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long maxMiddle = s + (e - s) / 2;
+        long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
+        long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
+        long maxMiddle = s + ((e - s) / 2);
         if (middle > maxMiddle) {
             this.maxMiddleIndex = index;
         }
-        }
-        else {
+    } else {
         this.maxMiddleIndex = index;
     }
 
     if (this.minEndIndex >= 0) {
-            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
-                .getTime();
+        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
         if (end < minEnd) {
             this.minEndIndex = index;
         }
-        }
-        else {
+    } else {
         this.minEndIndex = index;
     }
 
     if (this.maxEndIndex >= 0) {
-            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
-                .getTime();
+        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
         if (end > maxEnd) {
             this.maxEndIndex = index;
         }
-        }
-        else {
+    } else {
         this.maxEndIndex = index;
     }
-        
 }
\ No newline at end of file
