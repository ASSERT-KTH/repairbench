diff --git a/tmp/3dbcf8dc-21a0-43b5-a178-bdbbdd4b3c25_buggy.java b/tmp/11267aef-c35b-4764-92d6-65d92df9f308_fixed.java
index fa9dfcc..285c8e1 100644
--- a/tmp/3dbcf8dc-21a0-43b5-a178-bdbbdd4b3c25_buggy.java
+++ b/tmp/11267aef-c35b-4764-92d6-65d92df9f308_fixed.java
@@ -1,61 +1,52 @@
 @Override
 protected CompilerOptions createOptions() {
   CompilerOptions options = new CompilerOptions();
   if (flags.processJqueryPrimitives) {
     options.setCodingConvention(new JqueryCodingConvention());
   } else {
     options.setCodingConvention(new ClosureCodingConvention());
   }
   
   options.setExtraAnnotationNames(flags.extraAnnotationName);
 
   CompilationLevel level = flags.compilationLevel;
   level.setOptionsForCompilationLevel(options);
-
   if (flags.debug) {
     level.setDebugOptionsForCompilationLevel(options);
   }
-
   if (flags.useTypesForOptimization) {
     level.setTypeBasedOptimizationOptions(options);
   }
-
   if (flags.generateExports) {
     options.setGenerateExports(flags.generateExports);
   }
 
-    WarningLevel wLevel = flags.warningLevel;
-    wLevel.setOptionsForWarningLevel(options);
-    for (FormattingOption formattingOption : flags.formatting) {
-      formattingOption.applyToOptions(options);
-    }
-
-    options.closurePass = flags.processClosurePrimitives;
-
-    options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&
-        flags.processJqueryPrimitives;
-
-    options.angularPass = flags.angularPass;
-
+  // Set up the message bundle early so that warning level configuration
+  // (which depends on a non-null messageBundle) will not generate unnecessary
+  // i18n warnings. In ADVANCED_OPTIMIZATIONS mode, if no translations file was
+  // specified, install an empty bundle to disable message warnings.
   if (!flags.translationsFile.isEmpty()) {
     try {
       options.messageBundle = new XtbMessageBundle(
           new FileInputStream(flags.translationsFile),
           flags.translationsProject);
     } catch (IOException e) {
       throw new RuntimeException("Reading XTB file", e);
     }
   } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
-      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a
-      // translations file, they might reasonably try to write their own
-      // implementation of goog.getMsg that makes the substitution at
-      // run-time.
-      //
-      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
-      // so we might as well inline it. But shut off the i18n warnings,
-      // because the user didn't really ask for i18n.
     options.messageBundle = new EmptyMessageBundle();
   }
 
+  WarningLevel wLevel = flags.warningLevel;
+  wLevel.setOptionsForWarningLevel(options);
+  for (FormattingOption formattingOption : flags.formatting) {
+    formattingOption.applyToOptions(options);
+  }
+
+  options.closurePass = flags.processClosurePrimitives;
+  options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&
+      flags.processJqueryPrimitives;
+  options.angularPass = flags.angularPass;
+
   return options;
 }
\ No newline at end of file
