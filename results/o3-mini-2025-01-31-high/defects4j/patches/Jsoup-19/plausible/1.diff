diff --git a/tmp/78aae051-af4d-4fc4-be1d-b326b68ae03c_buggy.java b/tmp/89ddc1cc-6f70-41ee-98fc-d9a2938bc8d4_fixed.java
index 4aff4e4..ab36d35 100644
--- a/tmp/78aae051-af4d-4fc4-be1d-b326b68ae03c_buggy.java
+++ b/tmp/89ddc1cc-6f70-41ee-98fc-d9a2938bc8d4_fixed.java
@@ -1,15 +1,19 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
-            attr.setValue(value);
+    // Try to resolve relative URLs to absolute form and update the attribute if needed.
+    // For elements without a base URI, el.absUrl(...) returns an empty string, so we need
+    // to fall back to the original attribute value.
+    String abs = el.absUrl(attr.getKey());
+    String value = abs.length() > 0 ? abs : attr.getValue();
+    if (abs.length() > 0 && !preserveRelativeLinks) {
+        attr.setValue(abs);
+    }
     
+    String lowerValue = value.toLowerCase();
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        String prot = protocol.toString().toLowerCase() + ":";
+        if (lowerValue.startsWith(prot)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
