diff --git a/tmp/9c42bd9c-9880-4e04-b920-947907792274_buggy.java b/tmp/8a9118df-4bc7-4a45-9234-1befa0ff9b5b_fixed.java
index 29a9d2f..5eb1313 100644
--- a/tmp/9c42bd9c-9880-4e04-b920-947907792274_buggy.java
+++ b/tmp/8a9118df-4bc7-4a45-9234-1befa0ff9b5b_fixed.java
@@ -1,43 +1,37 @@
 /**
  * Handles a goog.require call.
  */
 private void processRequireCall(NodeTraversal t, Node n, Node parent) {
   Node left = n.getFirstChild();
   Node arg = left.getNext();
   if (verifyLastArgumentIsString(t, left, arg)) {
     String ns = arg.getString();
     ProvidedName provided = providedNames.get(ns);
     if (provided == null || !provided.isExplicitlyProvided()) {
       unrecognizedRequires.add(
           new UnrecognizedRequire(n, ns, t.getSourceName()));
     } else {
       JSModule providedModule = provided.explicitModule;
-
       // This must be non-null, because there was an explicit provide.
       Preconditions.checkNotNull(providedModule);
-
       JSModule module = t.getModule();
       if (moduleGraph != null &&
           module != providedModule &&
           !moduleGraph.dependsOn(module, providedModule)) {
         compiler.report(
             t.makeError(n, XMODULE_REQUIRE_ERROR, ns,
                 providedModule.getName(),
                 module.getName()));
       }
     }
 
     maybeAddToSymbolTable(left);
     maybeAddStringNodeToSymbolTable(arg);
 
-      // Requires should be removed before further processing.
-      // Some clients run closure pass multiple times, first with
-      // the checks for broken requires turned off. In these cases, we
-      // allow broken requires to be preserved by the first run to
-      // let them be caught in the subsequent run.
-      if (provided != null) {
+    // Always remove the goog.require call before further processing.
+    // This prevents leaving behind a call that could trigger an
+    // undeclared variable error (e.g. for "goog").
     parent.detachFromParent();
     compiler.reportCodeChange();
   }
 }
\ No newline at end of file
-  }
