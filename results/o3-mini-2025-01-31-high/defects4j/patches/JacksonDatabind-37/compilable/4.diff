diff --git a/tmp/7201db6c-057c-4e85-a18f-ab9c7286126f_buggy.java b/tmp/23dc07dc-17ef-4601-8920-8036277a6b5e_fixed.java
index e5ad041..745e9a0 100644
--- a/tmp/7201db6c-057c-4e85-a18f-ab9c7286126f_buggy.java
+++ b/tmp/23dc07dc-17ef-4601-8920-8036277a6b5e_fixed.java
@@ -1,19 +1,8 @@
 @Override
-    protected JavaType _narrow(Class<?> subclass)
-    {
-        if (_class == subclass) {
+protected JavaType _narrow(Class<?> subclass) {
+    if (subclass == _class) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // Delegate to TypeFactory to re-resolve type parameters and create a proper specialized type.
+    return TypeFactory.defaultInstance().constructSpecializedType(this, subclass);
 }
\ No newline at end of file
