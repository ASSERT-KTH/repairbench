diff --git a/tmp/eec00169-36db-4a4e-abd7-4c90dc5825b6_buggy.java b/tmp/e1e2e6ec-5d07-425c-ab9c-9db4a22d0473_fixed.java
index e5ad041..f26ae88 100644
--- a/tmp/eec00169-36db-4a4e-abd7-4c90dc5825b6_buggy.java
+++ b/tmp/e1e2e6ec-5d07-425c-ab9c-9db4a22d0473_fixed.java
@@ -1,19 +1,14 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
     if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
+        throw new IllegalArgumentException("Class " + subclass.getName() + " not sub-type of " + _class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+    // Instead of reusing the original _superClass and _superInterfaces (which were computed
+    // for _class), pass null so that the new SimpleType will re-resolve its hierarchy.
+    return new SimpleType(subclass, _bindings, null, null,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
