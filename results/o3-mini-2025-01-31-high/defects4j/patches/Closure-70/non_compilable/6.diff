diff --git a/tmp/ad175272-b4e5-4367-84b0-23e89b5ba253_buggy.java b/tmp/f0cb3595-024c-4fef-8990-df28bb3efeb3_fixed.java
index 1530b34..527140f 100644
--- a/tmp/ad175272-b4e5-4367-84b0-23e89b5ba253_buggy.java
+++ b/tmp/f0cb3595-024c-4fef-8990-df28bb3efeb3_fixed.java
@@ -1,23 +1,22 @@
-    /**
-     * Declares all of a function's arguments.
-     */
 private void declareArguments(Node functionNode) {
-      Node astParameters = functionNode.getFirstChild().getNext();
-      Node body = astParameters.getNext();
+  // In a function node the parameters are always the second child,
+  // regardless of whether the function is named or anonymous.
+  Node astParameters = functionNode.getSecondChild();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
-      if (functionType != null) {
-        Node jsDocParameters = functionType.getParametersNode();
-        if (jsDocParameters != null) {
-          Node jsDocParameter = jsDocParameters.getFirstChild();
+  // Even if there is no JSDoc type info for the parameters,
+  // we must declare the parameters so that later redeclarations
+  // (for example, a var that has the same name as a parameter)
+  // will generate an appropriate warning.
+  Node jsDocParameters = (functionType != null)
+      ? functionType.getParametersNode() : null;
+  Node jsDocParameter = (jsDocParameters != null)
+      ? jsDocParameters.getFirstChild() : null;
   for (Node astParameter : astParameters.children()) {
     if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+      defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);
       jsDocParameter = jsDocParameter.getNext();
     } else {
       defineSlot(astParameter, functionNode, null, true);
     }
   }
 }
\ No newline at end of file
-      }
-    } // end declareArguments
