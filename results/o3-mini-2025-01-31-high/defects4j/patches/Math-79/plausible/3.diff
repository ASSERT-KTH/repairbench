diff --git a/tmp/cb021762-08b4-4733-986f-571769cf4988_buggy.java b/tmp/a408a885-e3d2-43b9-9dc6-37cf726f8d7d_fixed.java
index 6e238e7..a16cfc5 100644
--- a/tmp/cb021762-08b4-4733-986f-571769cf4988_buggy.java
+++ b/tmp/a408a885-e3d2-43b9-9dc6-37cf726f8d7d_fixed.java
@@ -1,15 +1,21 @@
 /**
  * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
  *
-     * @param p1 the first point
-     * @param p2 the second point
-     * @return the L<sub>2</sub> distance between the two points
+ * @param p1 the first point, must not be null
+ * @param p2 the second point, must not be null and have the same dimension as p1
+ * @return the L<sub>2</sub> (Euclidean) distance between the two points
  */
 public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+    if (p1 == null || p2 == null) {
+        throw new NullPointerException("Input arrays must not be null");
+    }
+    if (p1.length != p2.length) {
+        throw new IllegalArgumentException("Point dimensions must be equal");
+    }
+    double sum = 0.0;
     for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
-          sum += dp * dp;
+        double diff = p1[i] - p2[i];
+        sum += diff * diff;
     }
     return Math.sqrt(sum);
 }
\ No newline at end of file
