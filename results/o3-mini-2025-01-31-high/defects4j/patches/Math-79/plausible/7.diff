diff --git a/tmp/9572b72d-28f5-4e7d-8d90-f1f06f0d148c_buggy.java b/tmp/95da1496-8a19-4e0a-bca8-10f1f4827425_fixed.java
index 6e238e7..e54b7cb 100644
--- a/tmp/9572b72d-28f5-4e7d-8d90-f1f06f0d148c_buggy.java
+++ b/tmp/95da1496-8a19-4e0a-bca8-10f1f4827425_fixed.java
@@ -1,15 +1,14 @@
-    /**
-     * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
-     *
-     * @param p1 the first point
-     * @param p2 the second point
-     * @return the L<sub>2</sub> distance between the two points
-     */
 public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+    if (p1 == null || p2 == null) {
+        throw new NullPointerException("Input points must not be null");
+    }
+    if (p1.length != p2.length) {
+        throw new IllegalArgumentException("Points must have the same dimension");
+    }
+    double sum = 0.0;
     for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
-          sum += dp * dp;
+        double diff = p1[i] - p2[i];
+        sum += diff * diff;
     }
     return Math.sqrt(sum);
 }
\ No newline at end of file
