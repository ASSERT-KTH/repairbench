diff --git a/tmp/29e685a0-7acd-4187-9cd1-f7f126941985_buggy.java b/tmp/02eb0453-734a-491a-9a19-2e9d43a5aee3_fixed.java
index d357c7e..a75d992 100644
--- a/tmp/29e685a0-7acd-4187-9cd1-f7f126941985_buggy.java
+++ b/tmp/02eb0453-734a-491a-9a19-2e9d43a5aee3_fixed.java
@@ -1,16 +1,18 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        // If no stream is present then this is likely an entry of size 0.
+        // In that case we return an empty stream instead of throwing an exception.
+        return new ByteArrayInputStream(new byte[0]);
     }
 
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
