diff --git a/tmp/c5940dac-e7b2-4b56-995c-21635fdcd36c_buggy.java b/tmp/eb562e36-a7a8-4e14-8384-29dc028add6e_fixed.java
index d357c7e..6470d9b 100644
--- a/tmp/c5940dac-e7b2-4b56-995c-21635fdcd36c_buggy.java
+++ b/tmp/eb562e36-a7a8-4e14-8384-29dc028add6e_fixed.java
@@ -1,16 +1,17 @@
 private InputStream getCurrentStream() throws IOException {
+    // Instead of failing when no stream is present, return an empty stream.
+    // This happens for 7z entries of size 0.
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        return new ByteArrayInputStream(new byte[0]);
     }
     
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
+        // For solid archives, skip the leading streams until the one corresponding
+        // to the current entry is reached.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
     
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
