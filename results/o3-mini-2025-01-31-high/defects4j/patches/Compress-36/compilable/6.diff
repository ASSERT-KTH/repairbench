diff --git a/tmp/6c3d133e-3fb2-436e-a3ff-66d2218403c9_buggy.java b/tmp/e8d05235-cf32-4620-903b-5749b68fc530_fixed.java
index d357c7e..4163ff6 100644
--- a/tmp/6c3d133e-3fb2-436e-a3ff-66d2218403c9_buggy.java
+++ b/tmp/e8d05235-cf32-4620-903b-5749b68fc530_fixed.java
@@ -1,16 +1,18 @@
 private InputStream getCurrentStream() throws IOException {
+    // If no deferred stream exists, it may be because we're accessing
+    // a 0-length entry. In that case, return an empty stream.
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        return new ByteArrayInputStream(new byte[0]);
     }
 
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
     
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
