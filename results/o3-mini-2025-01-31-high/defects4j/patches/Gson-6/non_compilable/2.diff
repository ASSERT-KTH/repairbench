diff --git a/tmp/d848b8a3-43d6-4a9f-9ddf-9b4f450f0bb3_buggy.java b/tmp/1ee0a00d-d67c-4936-85df-84610b6e75eb_fixed.java
index 1c53d31..ff65089 100644
--- a/tmp/d848b8a3-43d6-4a9f-9ddf-9b4f450f0bb3_buggy.java
+++ b/tmp/1ee0a00d-d67c-4936-85df-84610b6e75eb_fixed.java
@@ -1,20 +1,25 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  // If a factory returned null, delegate to Gsonâ€™s default adapter.
+  if (typeAdapter == null) {
+    typeAdapter = gson.getAdapter(fieldType);
+  } else if (annotation.nullSafe()) {
     typeAdapter = typeAdapter.nullSafe();
+  }
   return typeAdapter;
 }
\ No newline at end of file
