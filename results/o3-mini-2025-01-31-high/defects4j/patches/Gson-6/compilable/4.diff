diff --git a/tmp/c8f22a32-4982-4cfc-a80a-9017f25032e2_buggy.java b/tmp/326447cc-eb01-4e2f-986c-cfdaff3d62b3_fixed.java
index 1c53d31..a61f4bc 100644
--- a/tmp/c8f22a32-4982-4cfc-a80a-9017f25032e2_buggy.java
+++ b/tmp/326447cc-eb01-4e2f-986c-cfdaff3d62b3_fixed.java
@@ -1,20 +1,20 @@
-  @SuppressWarnings("unchecked") // Casts guarded by conditionals.
+@SuppressWarnings("unchecked")
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    TypeAdapter<?> typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    return typeAdapter.nullSafe();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
+    TypeAdapter<?> typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
-    } else {
+    if (typeAdapter != null) {
+      return typeAdapter;
+    }
+  }
   throw new IllegalArgumentException(
       "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
 }
\ No newline at end of file
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
-  }
