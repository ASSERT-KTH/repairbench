diff --git a/tmp/d80bcc51-11f5-42d8-9e42-e89b000c24ea_buggy.java b/tmp/f86d262e-491c-497c-a5ea-4019dd20b79c_fixed.java
index 1c53d31..dd5e2a8 100644
--- a/tmp/d80bcc51-11f5-42d8-9e42-e89b000c24ea_buggy.java
+++ b/tmp/f86d262e-491c-497c-a5ea-4019dd20b79c_fixed.java
@@ -1,20 +1,20 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+  // Only wrap in nullSafe() if a non-null TypeAdapter was created.
+  return typeAdapter == null ? null : typeAdapter.nullSafe();
 }
\ No newline at end of file
