diff --git a/tmp/6105c83a-8446-4926-b5be-0f106f3cefd2_buggy.java b/tmp/23b8dfa5-2696-4ea0-80b4-bdc66fdc3556_fixed.java
index 939f49b..df08703 100644
--- a/tmp/6105c83a-8446-4926-b5be-0f106f3cefd2_buggy.java
+++ b/tmp/23b8dfa5-2696-4ea0-80b4-bdc66fdc3556_fixed.java
@@ -1,21 +1,16 @@
 private boolean isPrototypePropertyAssign(Node assign) {
-      Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+  Node lhs = assign.getFirstChild();
+  if (lhs != null && NodeUtil.isVarOrSimpleAssignLhs(lhs, assign) &&
+      (lhs.isGetProp() || lhs.isGetElem())) {
+    Node receiver = lhs.getFirstChild();
+    if (receiver != null && (receiver.isGetProp() || receiver.isGetElem()) &&
+        receiver.getChildCount() >= 2) {
+      Node protoKey = receiver.getChildAtIndex(1);
+      if (protoKey.getType() == Token.STRING &&
+          "prototype".equals(protoKey.getString())) {
         return true;
       }
     }
   }
-
   return false;
 }
\ No newline at end of file
