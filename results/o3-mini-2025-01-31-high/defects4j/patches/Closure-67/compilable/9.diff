diff --git a/tmp/9375f46e-3068-43c7-9880-cea632cdd5b5_buggy.java b/tmp/7ae3a51e-fae0-4f16-9698-76ec2711485b_fixed.java
index 939f49b..77f64d3 100644
--- a/tmp/9375f46e-3068-43c7-9880-cea632cdd5b5_buggy.java
+++ b/tmp/7ae3a51e-fae0-4f16-9698-76ec2711485b_fixed.java
@@ -1,21 +1,20 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+  if (n != null
+      && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
+      && (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM)) {
+    // Get the object part of the property access.
+    Node target = n.getFirstChild();
+    if (target != null
+        && (target.getType() == Token.GETPROP || target.getType() == Token.GETELEM)) {
+      // In both GETPROP and GETELEM nodes, the property name is the last child.
+      Node prototypeProp = target.getLastChild();
+      if (prototypeProp != null
+          && prototypeProp.getType() == Token.STRING
+          && "prototype".equals(prototypeProp.getString())) {
         return true;
       }
     }
   }
-
   return false;
 }
\ No newline at end of file
