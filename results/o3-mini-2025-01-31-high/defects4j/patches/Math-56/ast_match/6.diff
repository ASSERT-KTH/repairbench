diff --git a/tmp/4025fa80-7099-45d0-a706-27b86788fa82_buggy.java b/tmp/c2c24341-8cb6-49e4-a828-25c9b9e6ee66_fixed.java
index 2608424..8ce26bb 100644
--- a/tmp/4025fa80-7099-45d0-a706-27b86788fa82_buggy.java
+++ b/tmp/c2c24341-8cb6-49e4-a828-25c9b9e6ee66_fixed.java
@@ -1,39 +1,23 @@
-    /**
-     * Convert to multidimensional counter.
-     *
-     * @param index Index in unidimensional counter.
-     * @return the multidimensional counts.
-     * @throws OutOfRangeException if {@code index} is not between
-     * {@code 0} and the value returned by {@link #getSize()} (excluded).
-     */
 public int[] getCounts(int index) {
-        if (index < 0 ||
-            index >= totalSize) {
+    if (index < 0 || index >= totalSize) {
         throw new OutOfRangeException(index, 0, totalSize);
     }
 
     final int[] indices = new int[dimension];
-
     int count = 0;
     for (int i = 0; i < last; i++) {
         int idx = 0;
         final int offset = uniCounterOffset[i];
         while (count <= index) {
             count += offset;
             ++idx;
         }
         --idx;
         count -= offset;
         indices[i] = idx;
     }
-
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
+    // The last dimension increments by one each time.
+    indices[last] = index - count;
 
     return indices;
 }
\ No newline at end of file
