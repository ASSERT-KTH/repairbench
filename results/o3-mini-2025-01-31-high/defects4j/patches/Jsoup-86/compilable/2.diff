diff --git a/tmp/b86c06fd-3481-4b35-a7f5-d1d49c40dde2_buggy.java b/tmp/de147a39-72a8-4cc7-915a-7013ee11c179_fixed.java
index b8e7fdb..acb03bc 100644
--- a/tmp/b86c06fd-3481-4b35-a7f5-d1d49c40dde2_buggy.java
+++ b/tmp/de147a39-72a8-4cc7-915a-7013ee11c179_fixed.java
@@ -1,15 +1,24 @@
-    /**
-     * Attempt to cast this comment to an XML Declaration note.
-     * @return an XML declaration if it could be parsed as one, null otherwise.
-     */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+    // Must be at least two characters, and start with '!' or '?' to be a valid XML declaration candidate.
+    if (data.length() < 2 || (!data.startsWith("!") && !data.startsWith("?"))) {
+        return null;
+    }
+
+    // Remove the first and last character and wrap in angle brackets so we can parse it as an element.
+    String tag = data.substring(1, data.length() - 1);
+    Document doc = Jsoup.parse("<" + tag + ">", baseUri(), Parser.xmlParser());
+
+    // Instead of relying on childNodeSize (which may be non-elements), use the element children.
+    Element el = doc.children().first();
+    if (el == null) {
+        return null;
+    }
+
+    XmlDeclaration decl = new XmlDeclaration(
+            NodeUtils.parser(doc).settings().normalizeTag(el.tagName()),
+            data.startsWith("!")
+    );
     decl.attributes().addAll(el.attributes());
-        }
     return decl;
 }
\ No newline at end of file
