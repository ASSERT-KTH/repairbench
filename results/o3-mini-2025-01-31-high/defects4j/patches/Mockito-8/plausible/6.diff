diff --git a/tmp/8471eb82-24b7-4781-9fa9-d8be42a68774_buggy.java b/tmp/7ef4ee54-6b7c-4505-9b30-3eb6f5238a9c_fixed.java
index 42b58d0..0f5fd46 100644
--- a/tmp/8471eb82-24b7-4781-9fa9-d8be42a68774_buggy.java
+++ b/tmp/7ef4ee54-6b7c-4505-9b30-3eb6f5238a9c_fixed.java
@@ -1,19 +1,22 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    TypeVariable<?>[] typeParameters = ((Class<?>) rawType).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
-            if (actualTypeArgument instanceof WildcardType) {
+        // If the actual type argument is the same as the type parameter, break the self-reference
+        if (actualTypeArgument.equals(typeParameter)) {
+            contextualActualTypeParameters.put(typeParameter, rawType);
+        } else if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
