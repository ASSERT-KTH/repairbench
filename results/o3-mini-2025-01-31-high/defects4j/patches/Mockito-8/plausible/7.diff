diff --git a/tmp/7e6ddc99-93b1-4a38-ade7-c18f3a37d5e1_buggy.java b/tmp/de4e5c39-6944-47f9-8069-ff7408380b4c_fixed.java
index 42b58d0..251a0c8 100644
--- a/tmp/7e6ddc99-93b1-4a38-ade7-c18f3a37d5e1_buggy.java
+++ b/tmp/de4e5c39-6944-47f9-8069-ff7408380b4c_fixed.java
@@ -1,19 +1,37 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable<?>[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof ParameterizedType) {
+            ParameterizedType pt = (ParameterizedType) actualTypeArgument;
+            // If the actual type argument is a parameterized type whose raw type is the same as the declaring raw type,
+            // then use the raw type to break a potential self‚Äêreferential cycle.
+            if (pt.getRawType().equals(rawType)) {
+                contextualActualTypeParameters.put(typeParameter, rawType);
+            } else {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            TypeVariable<?> tv = (TypeVariable<?>) actualTypeArgument;
+            // If the actual type argument is a type variable declared by the same raw type,
+            // map it to the raw type to avoid self-reference.
+            if (tv.getGenericDeclaration().equals(rawType)) {
+                contextualActualTypeParameters.put(typeParameter, rawType);
+            } else {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
