diff --git a/tmp/cd494602-8c79-4d62-8e8b-69b144779aee_buggy.java b/tmp/3860350b-feb8-4279-890a-90b1bd5df150_fixed.java
index 42b58d0..2037793 100644
--- a/tmp/cd494602-8c79-4d62-8e8b-69b144779aee_buggy.java
+++ b/tmp/3860350b-feb8-4279-890a-90b1bd5df150_fixed.java
@@ -1,19 +1,25 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable<?>[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // If the actual type argument is self-referencing (i.e. equal to the whole parameterized type),
+        // then stop the infinite recursion by substituting the raw type.
+        if (actualTypeArgument.equals(parameterizedType)) {
+            actualTypeArgument = rawType;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
