diff --git a/tmp/864f8c59-5402-4f4c-891c-963535b3d429_buggy.java b/tmp/0be8bff4-bc0f-4bfe-b5c5-6641c26b79d1_fixed.java
index d9b400d..4d72312 100644
--- a/tmp/864f8c59-5402-4f4c-891c-963535b3d429_buggy.java
+++ b/tmp/0be8bff4-bc0f-4bfe-b5c5-6641c26b79d1_fixed.java
@@ -1,21 +1,15 @@
-    /**
-     * <p>Create a number from a String. If a . is present, it creates a 
-     *    Double, otherwise a Long. </p>
-     *
-     * @param str the value
-     * @return the number represented by <code>str</code>, if <code>str</code>
-     * is not a number, null is returned.
-     */
 public static Number createNumber(String str)
 {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+    try {
+        Number number = org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        // If the input contains a '.' (i.e. itâ€™s meant to be a decimal),
+        // then ensure we return a Double (not a BigDecimal or Float).
+        if (str.indexOf('.') != -1 && !(number instanceof Double)) {
+            return Double.valueOf(number.doubleValue());
         }
-        catch (NumberFormatException nfe)
-        {
+        return number;
+    } catch (NumberFormatException nfe) {
         System.err.println(nfe.getMessage());
     }
-
     return null;
 }
\ No newline at end of file
