diff --git a/tmp/47da1b32-4bdb-4b02-97e5-34a96c6c90fa_buggy.java b/tmp/11b93ab2-e630-49eb-95f9-dbf33ecbc32a_fixed.java
index d9b400d..4f3a011 100644
--- a/tmp/47da1b32-4bdb-4b02-97e5-34a96c6c90fa_buggy.java
+++ b/tmp/11b93ab2-e630-49eb-95f9-dbf33ecbc32a_fixed.java
@@ -1,21 +1,24 @@
 /**
-     * <p>Create a number from a String. If a . is present, it creates a 
-     *    Double, otherwise a Long. </p>
+ * <p>Create a number from a String. If a . is present (or if an exponent is present),
+ *    it creates a Double, otherwise a Long. </p>
  *
  * @param str the value
-     * @return the number represented by <code>str</code>, if <code>str</code>
-     * is not a number, null is returned.
+ * @return the number represented by <code>str</code>; if <code>str</code> is not a number, null is returned.
  */
-    public static Number createNumber(String str)
-    {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+public static Number createNumber(String str) {
+    if (str == null) {
+        return null;
     }
-        catch (NumberFormatException nfe)
-        {
+    try {
+        // If the string contains a decimal point or an exponent indicator,
+        // parse it as a Double; otherwise, parse it as a Long.
+        if (str.indexOf('.') >= 0 || str.indexOf('e') >= 0 || str.indexOf('E') >= 0) {
+            return Double.valueOf(str);
+        } else {
+            return Long.valueOf(str);
+        }
+    } catch (NumberFormatException nfe) {
         System.err.println(nfe.getMessage());
-        }
-
         return null;
     }
+}
\ No newline at end of file
