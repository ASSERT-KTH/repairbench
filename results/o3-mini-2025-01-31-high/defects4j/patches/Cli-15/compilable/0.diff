diff --git a/tmp/6580737f-59d8-498d-9be0-1c447cf42d4e_buggy.java b/tmp/57f79f15-918b-4ffe-adad-12dea5b4c011_fixed.java
index 4e8b037..bf6f38c 100644
--- a/tmp/6580737f-59d8-498d-9be0-1c447cf42d4e_buggy.java
+++ b/tmp/57f79f15-918b-4ffe-adad-12dea5b4c011_fixed.java
@@ -1,20 +1,39 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
-        List valueList = (List) values.get(option);
+public List getValues(final Option option, List defaultValues) {
+    // First, try to get user‐supplied values.
+    List userValues = (List) values.get(option);
     
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // Determine the “complete” default list in order.
+    // If the caller passed a non‐empty defaultValues list, use it;
+    // otherwise, try our internal defaults map.
+    List defaults = (defaultValues != null && !defaultValues.isEmpty())
+            ? defaultValues
+            : (List) this.defaultValues.get(option);
+    
+    // If no user‐supplied values exist, simply return a copy of the defaults (or empty list).
+    if (userValues == null || userValues.isEmpty()) {
+        return defaults == null ? Collections.EMPTY_LIST : new ArrayList(defaults);
+    }
+    
+    // When some values were supplied, we want to “fill in” the missing ones
+    // from the complete set of default values.
+    // That is, we take the full default list then override the initial entries
+    // with the user‐supplied values.
+    List finalList = new ArrayList();
+    if (defaults != null) {
+        finalList.addAll(defaults);
+    } else {
+        // No defaults available; just use the user values.
+        finalList.addAll(userValues);
     }
     
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // Replace the beginning entries with the user–supplied ones.
+    for (int i = 0; i < userValues.size(); i++) {
+        if (i < finalList.size()) {
+            finalList.set(i, userValues.get(i));
+        } else {
+            finalList.add(userValues.get(i));
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
     
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return finalList;
 }
\ No newline at end of file
