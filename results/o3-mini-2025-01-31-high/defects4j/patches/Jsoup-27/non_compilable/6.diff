diff --git a/tmp/ac6b1bc2-7816-44c5-8510-a1c051a7e6e0_buggy.java b/tmp/98262a18-556e-4ff4-a3fd-f32306bfea27_fixed.java
index 7fb120e..47eb852 100644
--- a/tmp/ac6b1bc2-7816-44c5-8510-a1c051a7e6e0_buggy.java
+++ b/tmp/98262a18-556e-4ff4-a3fd-f32306bfea27_fixed.java
@@ -1,16 +1,21 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
-        if (contentType == null) return null;
+    if (contentType == null)
+        return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // Remove quotes if present
+        if ((charset.startsWith("\"") && charset.endsWith("\"")) ||
+            (charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        try {
+            if (!java.nio.charset.Charset.isSupported(charset))
+                return null;
+        } catch (IllegalCharsetNameException e) {
+            return null;
+        }
         return charset;
     }
     return null;
 }
\ No newline at end of file
