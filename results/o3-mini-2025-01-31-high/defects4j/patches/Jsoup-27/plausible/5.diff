diff --git a/tmp/a9227d0b-e195-46cf-90a7-d231aa0c7f19_buggy.java b/tmp/43bee6d0-26c1-4a2a-a69d-26654330c37f_fixed.java
index 7fb120e..37702ac 100644
--- a/tmp/a9227d0b-e195-46cf-90a7-d231aa0c7f19_buggy.java
+++ b/tmp/43bee6d0-26c1-4a2a-a69d-26654330c37f_fixed.java
@@ -1,16 +1,23 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
-        if (contentType == null) return null;
+    if (contentType == null)
+        return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // if the charset is quoted, remove the quotes
+        if ((charset.startsWith("\"") && charset.endsWith("\"")) ||
+            (charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        // Only return the charset if it is supported.
+        // Charset.isSupported() is case-insensitive, so we can check the raw value.
+        try {
+            if (!java.nio.charset.Charset.isSupported(charset))
+                return null;
+        } catch (Exception e) {
+            return null;
+        }
         return charset;
     }
     return null;
 }
\ No newline at end of file
