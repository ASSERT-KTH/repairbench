diff --git a/tmp/a4bf0a67-b69b-422c-9e61-29f5ab4152ba_buggy.java b/tmp/6c8dfb16-817a-44e6-8e72-fcd365c0d746_fixed.java
index 00914da..ec43f40 100644
--- a/tmp/a4bf0a67-b69b-422c-9e61-29f5ab4152ba_buggy.java
+++ b/tmp/6c8dfb16-817a-44e6-8e72-fcd365c0d746_fixed.java
@@ -1,17 +1,26 @@
-    // does not recurse.
 private void normalise(Element element) {
-        List<Node> toMove = new ArrayList<Node>();
+    List<Node> toMove = new ArrayList<>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
         }
     }
+    if (toMove.isEmpty())
+        return;
 
-        for (Node node: toMove) {
+    // Build a new list of nodes to insert at the beginning of the body,
+    // inserting a space between stray text nodes if there is more than one.
+    List<Node> nodesToInsert = new ArrayList<>();
+    for (int i = 0, size = toMove.size(); i < size; i++) {
+        if (i > 0)
+            nodesToInsert.add(new TextNode(" ", ""));
+        Node node = toMove.get(i);
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        nodesToInsert.add(node);
     }
+    // Instead of appending to the body, insert these nodes at the beginning so that
+    // stray text (like "foo") appears before the bodyâ€™s native content.
+    body().insertChildren(0, nodesToInsert);
 }
\ No newline at end of file
