diff --git a/tmp/2f173355-a368-4ac3-b589-e9bdc25c879e_buggy.java b/tmp/eb64e74d-22e7-4971-8b4e-c41a1bb71d8a_fixed.java
index 00914da..a5bb7ac 100644
--- a/tmp/2f173355-a368-4ac3-b589-e9bdc25c879e_buggy.java
+++ b/tmp/eb64e74d-22e7-4971-8b4e-c41a1bb71d8a_fixed.java
@@ -1,17 +1,23 @@
-    // does not recurse.
 private void normalise(Element element) {
-        List<Node> toMove = new ArrayList<Node>();
+    List<Node> toMove = new ArrayList<>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
         }
     }
+    if (toMove.isEmpty())
+        return;
 
+    // Build a list of nodes to prepend (each moved TextNode is preceded by a space)
+    List<Node> moved = new ArrayList<>(toMove.size() * 2);
     for (Node node : toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        moved.add(new TextNode(" ", ""));
+        moved.add(node);
     }
+    // Insert all the moved nodes at the beginning of the body element so that
+    // the orphan text nodes (like "foo") appear before the natural body content.
+    body().insertChildren(0, moved);
 }
\ No newline at end of file
