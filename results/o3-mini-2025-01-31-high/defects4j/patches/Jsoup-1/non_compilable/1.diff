diff --git a/tmp/ac6fdf2e-c6a4-4f46-aca7-67a11b2b1300_buggy.java b/tmp/6b33965f-7e90-4353-80fb-2877d6ed2001_fixed.java
index 00914da..2ca396a 100644
--- a/tmp/ac6fdf2e-c6a4-4f46-aca7-67a11b2b1300_buggy.java
+++ b/tmp/6b33965f-7e90-4353-80fb-2877d6ed2001_fixed.java
@@ -1,17 +1,20 @@
-    // does not recurse.
 private void normalise(Element element) {
-        List<Node> toMove = new ArrayList<Node>();
+    List<Node> toMove = new ArrayList<>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
         }
     }
-
-        for (Node node: toMove) {
+    // Instead of appending, we want to insert the stray text nodes
+    // at the beginning of the body so that their original order is preserved.
+    // By iterating in reverse order and inserting at position 0,
+    // the final order in the body will be as originally encountered.
+    for (int i = toMove.size() - 1; i >= 0; i--) {
+        Node node = toMove.get(i);
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        body().insertChildren(0, new TextNode(" ", ""));
+        body().insertChildren(0, node);
     }
 }
\ No newline at end of file
