diff --git a/tmp/c5d2635d-c5df-4ce2-be11-4604b7ce017d_buggy.java b/tmp/f745f0b0-53bf-458f-b2b8-cd23881333f5_fixed.java
index b2d53db..2b03580 100644
--- a/tmp/c5d2635d-c5df-4ce2-be11-4604b7ce017d_buggy.java
+++ b/tmp/f745f0b0-53bf-458f-b2b8-cd23881333f5_fixed.java
@@ -1,34 +1,37 @@
 void read(Tokeniser t, CharacterReader r) {
+    // Only try to consume as an end tag if the pending tag is appropriate.
+    if (t.isAppropriateEndTagToken()) {
         if (r.matchesLetter()) {
             String name = r.consumeLetterSequence();
             t.tagPending.appendTagName(name.toLowerCase());
             t.dataBuffer.append(name);
             r.advance();
             return;
         }
-
-            if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
+        if (!r.isEmpty()) {
             char c = r.consume();
             switch (c) {
                 case '\t':
                 case '\n':
                 case '\f':
                 case ' ':
                     t.transition(BeforeAttributeName);
                     break;
                 case '/':
                     t.transition(SelfClosingStartTag);
                     break;
                 case '>':
                     t.emitTagPending();
                     t.transition(Data);
                     break;
                 default:
                     t.dataBuffer.append(c);
                     anythingElse(t, r);
                     break;
             }
-            } else {
+            return;
+        }
+    }
+    // If not an appropriate end tag token or no matching character found, fall back
     anythingElse(t, r);
 }
\ No newline at end of file
-        }
