diff --git a/tmp/8f0fa060-b67f-4f80-a370-693e5a9972ce_buggy.java b/tmp/13f82726-cde4-4231-adcf-381b42ca28c5_fixed.java
index b2d53db..59af0fa 100644
--- a/tmp/8f0fa060-b67f-4f80-a370-693e5a9972ce_buggy.java
+++ b/tmp/13f82726-cde4-4231-adcf-381b42ca28c5_fixed.java
@@ -1,34 +1,35 @@
 void read(Tokeniser t, CharacterReader r) {
+    // Only process a letter as part of an end tag name if the token is appropriate.
+    if (t.isAppropriateEndTagToken()) {
         if (r.matchesLetter()) {
             String name = r.consumeLetterSequence();
             t.tagPending.appendTagName(name.toLowerCase());
             t.dataBuffer.append(name);
             r.advance();
             return;
         }
-
-            if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
+        if (!r.isEmpty()) {
             char c = r.consume();
             switch (c) {
                 case '\t':
                 case '\n':
                 case '\f':
                 case ' ':
                     t.transition(BeforeAttributeName);
-                        break;
+                    return;
                 case '/':
                     t.transition(SelfClosingStartTag);
-                        break;
+                    return;
                 case '>':
                     t.emitTagPending();
                     t.transition(Data);
-                        break;
+                    return;
                 default:
                     t.dataBuffer.append(c);
                     anythingElse(t, r);
-                        break;
+                    return;
+            }
+        }
     }
-            } else {
     anythingElse(t, r);
 }
\ No newline at end of file
-        }
