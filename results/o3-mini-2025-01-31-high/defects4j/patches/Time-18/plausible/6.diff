diff --git a/tmp/1ac9ba01-f318-440e-ab61-415772718f56_buggy.java b/tmp/761f1417-67d9-48e7-a768-2376dc7cb910_fixed.java
index be2af16..fd1f672 100644
--- a/tmp/1ac9ba01-f318-440e-ab61-415772718f56_buggy.java
+++ b/tmp/761f1417-67d9-48e7-a768-2376dc7cb910_fixed.java
@@ -1,29 +1,36 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    try {
+        instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    } catch (IllegalFieldValueException ex) {
+        // Gregorian fields failed (e.g. Feb 29 in a non-leap Gregorian year),
+        // so try computing using the Julian chronology.
+        instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant >= iCutoverMillis) {
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+        return instant;
+    }
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        // The computed Gregorian instant falls before the cutover,
+        // so recalculate using the Julian chronology.
+        instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
