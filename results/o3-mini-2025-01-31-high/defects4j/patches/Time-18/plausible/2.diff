diff --git a/tmp/8f8fdcde-950e-45be-b001-7381dbacbb98_buggy.java b/tmp/f2d457f9-3de9-4974-9846-576571db68b7_fixed.java
index be2af16..4fcd09c 100644
--- a/tmp/8f8fdcde-950e-45be-b001-7381dbacbb98_buggy.java
+++ b/tmp/f2d457f9-3de9-4974-9846-576571db68b7_fixed.java
@@ -1,29 +1,39 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
-        throws IllegalArgumentException
-    {
-        Chronology base;
-        if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    throws IllegalArgumentException {
+    Chronology base = getBase();
+    if (base != null) {
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    try {
+        // Try computing using Gregorian chronology first.
+        long gregorianMillis = iGregorianChronology.getDateTimeMillis(
+                year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        if (gregorianMillis >= iCutoverMillis) {
+            return gregorianMillis;
+        }
+        // Date is before the cutover according to Gregorian,
+        // so recalculate using the Julian chronology.
+        long julianMillis = iJulianChronology.getDateTimeMillis(
+                year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        if (julianMillis >= iCutoverMillis) {
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        return julianMillis;
+    } catch (IllegalFieldValueException ex) {
+        // If the Gregorian calculation fails (for example, 1500-02-29 is invalid in Gregorian),
+        // try using the Julian chronology.
+        long julianMillis = iJulianChronology.getDateTimeMillis(
+                year, monthOfYear, dayOfMonth,
+                hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (julianMillis >= iCutoverMillis) {
+            throw new IllegalArgumentException("Specified date does not exist", ex);
+        }
+        return julianMillis;
     }
-        return instant;
 }
\ No newline at end of file
