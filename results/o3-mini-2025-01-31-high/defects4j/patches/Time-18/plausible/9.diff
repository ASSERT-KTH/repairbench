diff --git a/tmp/e58cf9d8-1b62-477a-9e71-e337d99a92ae_buggy.java b/tmp/fc654339-d057-4390-828c-38f5c239569c_fixed.java
index be2af16..c79c71d 100644
--- a/tmp/e58cf9d8-1b62-477a-9e71-e337d99a92ae_buggy.java
+++ b/tmp/fc654339-d057-4390-828c-38f5c239569c_fixed.java
@@ -1,29 +1,38 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
-        Chronology base;
-        if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    Chronology base = getBase();
+    if (base != null) {
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    try {
+        // Try constructing with Gregorian Chronology first.
+        instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    } catch (IllegalFieldValueException ex) {
+        // If Gregorian validation fails (eg. 1500-02-29, since 1500 is not a Gregorian leap year),
+        // try using the Julian Chronology.
+        instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            // The resulting instant falls in the illegal cutover gap.
+            throw new IllegalArgumentException("Specified date does not exist", ex);
+        }
+        return instant;
+    }
+    if (instant < iCutoverMillis) {
+        // Even if Gregorian succeeded, dates before the cutover should use the Julian system.
+        long julianInstant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                                                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (julianInstant >= iCutoverMillis) {
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        return julianInstant;
     }
     return instant;
 }
\ No newline at end of file
