diff --git a/tmp/2ba9b02c-8bf2-4344-a91a-58c97f0d8b70_buggy.java b/tmp/dd264105-75f6-4918-97a7-7c4039563f74_fixed.java
index 3c69e10..7ea2c9a 100644
--- a/tmp/2ba9b02c-8bf2-4344-a91a-58c97f0d8b70_buggy.java
+++ b/tmp/dd264105-75f6-4918-97a7-7c4039563f74_fixed.java
@@ -1,27 +1,19 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
 private double calculateAsymptoticPValue(final double Umin,
                                          final int n1,
                                          final int n2)
     throws ConvergenceException, MaxCountExceededException {
 
     final int n1n2prod = n1 * n2;
 
-        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
+    // Normal approximation for the Mannâ€“Whitney U statistic:
+    // Mean and variance under the null hypothesis.
     final double EU = n1n2prod / 2.0;
     final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
     final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
     final NormalDistribution standardNormal = new NormalDistribution(0, 1);
-
-        return 2 * standardNormal.cumulativeProbability(z);
+    // For a two-sided p-value we take the smaller tail probability and multiply by 2.
+    double p = 2 * standardNormal.cumulativeProbability(-Math.abs(z));
+    return Math.min(p, 1.0);
 }
\ No newline at end of file
