diff --git a/tmp/402ef29a-d811-4398-a885-5a5b10608697_buggy.java b/tmp/9213c99d-ae78-4819-b2eb-2ef71f9192ec_fixed.java
index 3c69e10..e45bfb6 100644
--- a/tmp/402ef29a-d811-4398-a885-5a5b10608697_buggy.java
+++ b/tmp/9213c99d-ae78-4819-b2eb-2ef71f9192ec_fixed.java
@@ -1,27 +1,31 @@
 /**
  * @param Umin smallest Mann-Whitney U value
  * @param n1 number of subjects in first sample
  * @param n2 number of subjects in second sample
  * @return two-sided asymptotic p-value
  * @throws ConvergenceException if the p-value cannot be computed
  * due to a convergence error
  * @throws MaxCountExceededException if the maximum number of
  * iterations is exceeded
  */
 private double calculateAsymptoticPValue(final double Umin,
                                          final int n1,
                                          final int n2)
     throws ConvergenceException, MaxCountExceededException {
 
     final int n1n2prod = n1 * n2;
 
-        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
+    // Compute expected value and variance of U (see Wikipedia article on Mann–Whitney U test)
     final double EU = n1n2prod / 2.0;
     final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
+    // Compute z-statistic from the U statistic
     final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
     final NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
-        return 2 * standardNormal.cumulativeProbability(z);
+    // The two-sided p-value is 2 * min{Φ(z), 1-Φ(z)},
+    // which can be computed as 2*(1 - Φ(|z|)).
+    double p = 2 * (1 - standardNormal.cumulativeProbability(Math.abs(z)));
+    return p > 1 ? 1 : p;
 }
\ No newline at end of file
