diff --git a/tmp/e2cdbae3-b367-47df-b410-b2ec2dd9615a_buggy.java b/tmp/07d62d62-49de-47d8-abd3-af744c510add_fixed.java
index b36b2a9..c34ab16 100644
--- a/tmp/e2cdbae3-b367-47df-b410-b2ec2dd9615a_buggy.java
+++ b/tmp/07d62d62-49de-47d8-abd3-af744c510add_fixed.java
@@ -1,26 +1,30 @@
 JSType meet(JSType that) {
   UnionTypeBuilder builder = new UnionTypeBuilder(registry);
   for (JSType alternate : alternates) {
     if (alternate.isSubtype(that)) {
       builder.addAlternate(alternate);
     }
   }
 
   if (that instanceof UnionType) {
     for (JSType otherAlternate : ((UnionType) that).alternates) {
       if (otherAlternate.isSubtype(this)) {
         builder.addAlternate(otherAlternate);
       }
     }
   } else if (that.isSubtype(this)) {
     builder.addAlternate(that);
   }
+  
   JSType result = builder.build();
   if (result != null) {
     return result;
-    } else if (this.isObject() && that.isObject()) {
+  } 
+  // Instead of testing this.isObject() we now check if the type is a subtype of OBJECT_TYPE.
+  else if (this.isSubtype(getNativeType(JSTypeNative.OBJECT_TYPE)) &&
+           that.isSubtype(getNativeType(JSTypeNative.OBJECT_TYPE))) {
     return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
   } else {
     return getNativeType(JSTypeNative.NO_TYPE);
   }
 }
\ No newline at end of file
