diff --git a/tmp/a6f4ea7c-2692-49b4-8358-fe9a13f6573c_buggy.java b/tmp/35c59d62-98d7-4f05-b4de-9cb7a97ec279_fixed.java
index d926eea..7c82e0d 100644
--- a/tmp/a6f4ea7c-2692-49b4-8358-fe9a13f6573c_buggy.java
+++ b/tmp/35c59d62-98d7-4f05-b4de-9cb7a97ec279_fixed.java
@@ -1,48 +1,46 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+        BeanProperty property) throws JsonMappingException {
     if (property == null) {
         return this;
     }
+    // First, check for explicit JsonFormat overrides
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
+        // No annotation: use the global (configured) date format if possible
+        DateFormat df = serializers.getConfig().getDateFormat();
+        if (df instanceof SimpleDateFormat) {
+            return withFormat(Boolean.FALSE, (SimpleDateFormat) df.clone());
+        }
         return this;
     }
-        // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
-
-        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
-        // First: custom pattern will override things
-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
-                                || format.hasLocale() || format.hasTimeZone()) {
+    if ((shape == JsonFormat.Shape.STRING)
+            || format.hasPattern()
+            || format.hasLocale()
+            || format.hasTimeZone()) {
         TimeZone tz = format.getTimeZone();
         final String pattern = format.hasPattern()
                 ? format.getPattern()
                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
         final Locale loc = format.hasLocale()
                 ? format.getLocale()
                 : serializers.getLocale();
         SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
         if (tz == null) {
             tz = serializers.getTimeZone();
         }
         df.setTimeZone(tz);
         return withFormat(Boolean.FALSE, df);
     }
-
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+    // Fallback: if no explicit pattern was found in the annotation, try using
+    // the global DateFormat from the provider's configuration.
+    DateFormat df = serializers.getConfig().getDateFormat();
+    if (df instanceof SimpleDateFormat) {
+        return withFormat(Boolean.FALSE, (SimpleDateFormat) df.clone());
+    }
     return this;
 }
\ No newline at end of file
