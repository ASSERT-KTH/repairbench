diff --git a/tmp/f8331512-db08-4475-8959-448c8b97afe4_buggy.java b/tmp/965857df-257f-4975-aecd-11ce132c0145_fixed.java
index d926eea..a134880 100644
--- a/tmp/f8331512-db08-4475-8959-448c8b97afe4_buggy.java
+++ b/tmp/965857df-257f-4975-aecd-11ce132c0145_fixed.java
@@ -1,48 +1,37 @@
 @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property)
+        throws JsonMappingException {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
-        if (format == null) {
-            return this;
-        }
-        // Simple case first: serialize as numeric timestamp?
+    if (format != null) {
         JsonFormat.Shape shape = format.getShape();
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
-
-        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
-        // First: custom pattern will override things
         if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                 || format.hasLocale() || format.hasTimeZone()) {
             TimeZone tz = format.getTimeZone();
             final String pattern = format.hasPattern()
                     ? format.getPattern()
                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-            final Locale loc = format.hasLocale()
-                            ? format.getLocale()
-                            : serializers.getLocale();
+            final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+    }
+    // No explicit overrides? Use the global default if WRITE_DATES_AS_TIMESTAMPS is disabled:
+    if (!serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        DateFormat df = serializers.getConfig().getDateFormat();
+        if (df instanceof SimpleDateFormat) {
+            df = (DateFormat) ((SimpleDateFormat) df).clone();
+        }
+        return withFormat(Boolean.FALSE, df);
+    }
     return this;
 }
\ No newline at end of file
