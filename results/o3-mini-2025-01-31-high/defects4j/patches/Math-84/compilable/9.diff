diff --git a/tmp/d7d18a6e-a917-48a6-baa1-d9f54d3b210a_buggy.java b/tmp/cbbdc899-4ae7-4d30-ba87-85e6f8990f92_fixed.java
index 5f1dcf2..cda0291 100644
--- a/tmp/d7d18a6e-a917-48a6-baa1-d9f54d3b210a_buggy.java
+++ b/tmp/cbbdc899-4ae7-4d30-ba87-85e6f8990f92_fixed.java
@@ -1,41 +1,36 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
-
+    // One iteration: update the simplex and return.
     incrementIterationsCounter();
 
-            // save the original vertex
+    // Save the original simplex configuration.
     final RealPointValuePair[] original = simplex;
     final RealPointValuePair best = original[0];
 
-            // perform a reflection step
+    // Reflection step.
     final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
     if (comparator.compare(reflected, best) < 0) {
-
-                // compute the expanded simplex
+        // Reflection improved the simplex.
         final RealPointValuePair[] reflectedSimplex = simplex;
         final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
         if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
+            // Accept the reflected simplex.
             simplex = reflectedSimplex;
         }
-
         return;
-
     }
 
-            // compute the contracted simplex
+    // Contraction step.
     final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
     if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
+        // Accept the contracted simplex.
         return;
     }
 
-        }
-
+    // Neither reflection nor contraction yielded an improvement.
+    // Perform a shrink step: reduce all vertices toward the best vertex.
+    evaluateNewSimplex(original, 0.5, comparator);
 }
\ No newline at end of file
