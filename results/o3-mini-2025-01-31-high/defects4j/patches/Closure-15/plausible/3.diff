diff --git a/tmp/284e2df4-6fa5-48f1-9f15-04967d325c77_buggy.java b/tmp/7c4dd0d4-f7a3-4363-a279-6db258659d13_fixed.java
index b56897c..10f7d1d 100644
--- a/tmp/284e2df4-6fa5-48f1-9f15-04967d325c77_buggy.java
+++ b/tmp/7c4dd0d4-f7a3-4363-a279-6db258659d13_fixed.java
@@ -1,27 +1,29 @@
 @Override
 public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
+  // When the node is null it means we reached the implicit return
+  // (i.e. the function might return without an explicit return statement)
   if (n == null) {
     return false;
   }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+  // If we ever see a delete (delete a[b]), that is a side effect.
+  if (n.isDelProp()) {
+    return true;
+  }
+
+  // We only care about calls to functions that are not side-effect free.
   if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
     return true;
   }
 
   if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
     return true;
   }
 
-
   for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
     if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
       return true;
     }
   }
   return false;
 }
\ No newline at end of file
