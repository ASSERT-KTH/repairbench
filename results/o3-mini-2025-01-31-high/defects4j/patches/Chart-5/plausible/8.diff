diff --git a/tmp/50db5eae-878d-4503-bbc7-803643a4d41e_buggy.java b/tmp/6ba9d746-a3d1-4065-a564-e44a352f1fc2_fixed.java
index fd8eae5..06f7128 100644
--- a/tmp/50db5eae-878d-4503-bbc7-803643a4d41e_buggy.java
+++ b/tmp/6ba9d746-a3d1-4065-a564-e44a352f1fc2_fixed.java
@@ -1,47 +1,45 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
 
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
     int index = indexOf(x);
     if (index >= 0 && !this.allowDuplicateXValues) {
         XYDataItem existing = (XYDataItem) this.data.get(index);
         try {
             overwritten = (XYDataItem) existing.clone();
-            }
-            catch (CloneNotSupportedException e) {
+        } catch (CloneNotSupportedException e) {
             throw new SeriesException("Couldn't clone XYDataItem!");
         }
+        // Update the existing item
         existing.setY(y);
-        }
-        else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+    } else {
+        XYDataItem newItem = new XYDataItem(x, y);
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            int insertIndex;
+            if (this.allowDuplicateXValues && index >= 0) {
+                // indexOf(x) found an item with the same x. When duplicate
+                // x-values are allowed we want the new item to be inserted
+                // after the block of existing items with x.
+                insertIndex = index + 1;
+                while (insertIndex < this.data.size()
+                        && ((XYDataItem) this.data.get(insertIndex)).getX().equals(x)) {
+                    insertIndex++;
                 }
-            else {
-                this.data.add(new XYDataItem(x, y));
+            } else {
+                // When no duplicate is found, binarySearch returns a negative index.
+                insertIndex = -index - 1;
             }
-            // check if this addition will exceed the maximum item count...
+            this.data.add(insertIndex, newItem);
+        } else {
+            this.data.add(newItem);
+        }
+        // If adding the new item exceeds the maximum, remove the first (oldest) item.
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file
