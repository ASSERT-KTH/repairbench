diff --git a/tmp/cdd4af4b-f802-4fc1-9d89-25f5257ca088_buggy.java b/tmp/18ed1f72-2877-4a77-9da8-8ff149981cb4_fixed.java
index fd8eae5..dc420a5 100644
--- a/tmp/cdd4af4b-f802-4fc1-9d89-25f5257ca088_buggy.java
+++ b/tmp/18ed1f72-2877-4a77-9da8-8ff149981cb4_fixed.java
@@ -1,47 +1,54 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
-
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
+    
+    if (!this.allowDuplicateXValues) {
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
             }
             catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
         }
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+            int insertionIndex = this.autoSort ? (-index - 1) : this.data.size();
+            this.data.add(insertionIndex, new XYDataItem(x, y));
+            if (getItemCount() > this.maximumItemCount) {
+                this.data.remove(0);
+            }
+        }
+    }
+    else { // allow duplicate x-values
+        XYDataItem newItem = new XYDataItem(x, y);
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            // Use binarySearch to find the insertion point.
+            // When duplicates are allowed, binarySearch may return a non-negative index (an arbitrary match),
+            // so we insert the new item after all existing items with the same x-value.
+            int insertionIndex = Collections.binarySearch(this.data, newItem);
+            if (insertionIndex < 0) {
+                insertionIndex = -insertionIndex - 1;
             }
             else {
-                this.data.add(new XYDataItem(x, y));
+                while (insertionIndex < this.data.size() && 
+                       ((XYDataItem) this.data.get(insertionIndex)).getX().equals(x)) {
+                    insertionIndex++;
+                }
+            }
+            this.data.add(insertionIndex, newItem);
+        }
+        else {
+            this.data.add(newItem);
         }
-            // check if this addition will exceed the maximum item count...
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file
