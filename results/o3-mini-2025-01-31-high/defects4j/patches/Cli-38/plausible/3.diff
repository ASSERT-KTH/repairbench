diff --git a/tmp/cb66b83c-e8e5-4191-a466-26f6a1b52433_buggy.java b/tmp/e86cdbab-de98-442a-be13-e09e456fdec2_fixed.java
index 81a6e8b..f9073c9 100644
--- a/tmp/cb66b83c-e8e5-4191-a466-26f6a1b52433_buggy.java
+++ b/tmp/e86cdbab-de98-442a-be13-e09e456fdec2_fixed.java
@@ -1,19 +1,28 @@
-    /**
-     * Tells if the token looks like a short option.
-     * 
-     * @param token
-     */
 private boolean isShortOption(String token)
 {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
+    if (!token.startsWith("-") || token.equals("-"))
     {
         return false;
     }
 
-        // remove leading "-" and "=value"
+    // Remove leading "-" and any "=value"
     int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    String optName = (pos == -1 ? token.substring(1) : token.substring(1, pos));
+
+    // If the complete option name is registered, itâ€™s a valid short option.
+    if (options.hasShortOption(optName))
+    {
+        return true;
+    }
+
+    // Otherwise, try interpreting the token as several concatenated short options.
+    for (int i = 0; i < optName.length(); i++)
+    {
+        String shortOpt = String.valueOf(optName.charAt(i));
+        if (!options.hasShortOption(shortOpt))
+        {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
