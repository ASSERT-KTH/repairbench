diff --git a/tmp/ca918e24-a90f-4572-b39e-eecb8d56636c_buggy.java b/tmp/1e87475b-3150-43cf-bc5b-1c954df7505f_fixed.java
index 81a6e8b..da22bd3 100644
--- a/tmp/ca918e24-a90f-4572-b39e-eecb8d56636c_buggy.java
+++ b/tmp/1e87475b-3150-43cf-bc5b-1c954df7505f_fixed.java
@@ -1,19 +1,34 @@
-    /**
-     * Tells if the token looks like a short option.
-     * 
-     * @param token
-     */
 private boolean isShortOption(String token)
 {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
     if (!token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
 
-        // remove leading "-" and "=value"
+    // Remove leading "-" and any "=value" portion.
     int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    String opt = pos == -1 ? token.substring(1) : token.substring(1, pos);
+
+    // First, if the whole option name is registered, then it's a valid short option.
+    if (options.hasShortOption(opt))
+    {
+        return true;
+    }
+
+    // Otherwise, if the option is longer than one character,
+    // check if each individual character represents a valid short option.
+    if (opt.length() > 1)
+    {
+        for (int i = 0; i < opt.length(); i++)
+        {
+            String singleOpt = String.valueOf(opt.charAt(i));
+            if (!options.hasShortOption(singleOpt))
+            {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    return false;
 }
\ No newline at end of file
