diff --git a/tmp/f74942c7-8bfb-4d4c-8ea3-de92b7a642e2_buggy.java b/tmp/4aebeddc-53af-46f3-9379-91f1a1157feb_fixed.java
index 81a6e8b..689f153 100644
--- a/tmp/f74942c7-8bfb-4d4c-8ea3-de92b7a642e2_buggy.java
+++ b/tmp/4aebeddc-53af-46f3-9379-91f1a1157feb_fixed.java
@@ -1,19 +1,38 @@
-    /**
-     * Tells if the token looks like a short option.
-     * 
-     * @param token
-     */
 private boolean isShortOption(String token)
 {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
+    if (token == null || !token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
+    // Tokens starting with "--" are long options, not short ones.
+    if (token.length() > 1 && token.charAt(1) == '-')
+    {
+        return false;
+    }
+    
+    int pos = token.indexOf('=');
+    String opt = (pos == -1) ? token.substring(1) : token.substring(1, pos);
+    
+    // First, if the entire option (e.g. "t1" in "-t1") is defined, it's a valid short option.
+    if (options.hasShortOption(opt))
+    {
+        return true;
+    }
+    
+    // If no equals-sign is found, check if every character is a valid short option;
+    // this allows tokens like "-ab" to be interpreted as "-a" and "-b" separately.
+    if (pos == -1 && opt.length() > 1)
+    {
+        for (int i = 0; i < opt.length(); i++)
+        {
+            String singleOpt = String.valueOf(opt.charAt(i));
+            if (!options.hasShortOption(singleOpt))
+            {
+                return false;
+            }
+        }
+        return true;
+    }
     
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    return false;
 }
\ No newline at end of file
