diff --git a/tmp/2d415cbd-4866-405d-9dc8-80decda29667_buggy.java b/tmp/21a8e08b-efe2-4063-88f4-1cd19fb6697b_fixed.java
index 4b7f469..15053ef 100644
--- a/tmp/2d415cbd-4866-405d-9dc8-80decda29667_buggy.java
+++ b/tmp/21a8e08b-efe2-4063-88f4-1cd19fb6697b_fixed.java
@@ -1,10 +1,38 @@
 static boolean isSimpleNumber(String s) {
   int len = s.length();
-    for (int index = 0; index < len; index++) {
-      char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+  if (len == 0) return false;
+  
+  // Allow hexadecimal numbers: they start with "0x" or "0X" and then one or more hex digits.
+  if (len > 2 && s.charAt(0) == '0' &&
+      (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {
+    for (int i = 2; i < len; i++) {
+      char c = s.charAt(i);
+      if (!((c >= '0' && c <= '9') ||
+            (c >= 'a' && c <= 'f') ||
+            (c >= 'A' && c <= 'F'))) {
         return false;
       }
     }
-    return len > 0;
+    return true;
+  }
+
+  // If the literal contains a dot, it is not a simple integer literal.
+  if (s.indexOf('.') != -1) return false;
+  
+  // If the literal starts with 0 and has more digits, it is intended to be octal.
+  // In that case, every character (after the initial 0) must be in the range '0'-'7'.
+  if (s.charAt(0) == '0' && len > 1) {
+    for (int i = 1; i < len; i++) {
+      char c = s.charAt(i);
+      if (c < '0' || c > '7') return false;
+    }
+    return true;
+  }
+  
+  // Otherwise, it must be a plain decimal number.
+  for (int i = 0; i < len; i++) {
+    char c = s.charAt(i);
+    if (c < '0' || c > '9') return false;
+  }
+  return true;
 }
\ No newline at end of file
