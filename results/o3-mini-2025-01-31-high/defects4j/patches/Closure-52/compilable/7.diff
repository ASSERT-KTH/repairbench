diff --git a/tmp/44b694cb-7be6-44fa-aafc-f0f450fb8171_buggy.java b/tmp/aad6b46a-81c4-4568-a4ce-56204b860dbb_fixed.java
index 4b7f469..22419b9 100644
--- a/tmp/44b694cb-7be6-44fa-aafc-f0f450fb8171_buggy.java
+++ b/tmp/aad6b46a-81c4-4568-a4ce-56204b860dbb_fixed.java
@@ -1,10 +1,32 @@
 static boolean isSimpleNumber(String s) {
   int len = s.length();
-    for (int index = 0; index < len; index++) {
-      char c = s.charAt(index);
+  if (len == 0) return false;
+
+  // Handle hexadecimal literals: they must start with "0x" or "0X"
+  // and be followed by at least one hexadecimal digit.
+  if (s.startsWith("0x") || s.startsWith("0X")) {
+    if (len == 2) return false;
+    for (int i = 2; i < len; i++) {
+      char c = s.charAt(i);
+      if (!((c >= '0' && c <= '9') ||
+            (c >= 'a' && c <= 'f') ||
+            (c >= 'A' && c <= 'F'))) {
+        return false;
+      }
+    }
+    return true;
+  }
+
+  // If there is a period, then we donâ€™t want to treat it as
+  // a simple number literal (we want ".2" or "0.2" to be printed as strings).
+  if (s.indexOf('.') != -1) return false;
+  
+  // Otherwise, every character must be a digit.
+  for (int i = 0; i < len; i++) {
+    char c = s.charAt(i);
     if (c < '0' || c > '9') {
       return false;
     }
   }
-    return len > 0;
+  return true;
 }
\ No newline at end of file
