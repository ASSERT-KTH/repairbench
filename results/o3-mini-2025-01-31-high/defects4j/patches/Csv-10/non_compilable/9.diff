diff --git a/tmp/d0d0f9f3-0c93-4a05-ab81-7ad33a0a2539_buggy.java b/tmp/6069917b-c891-4f03-a30c-ee6c318e18fe_fixed.java
index 97f28e5..3c39862 100644
--- a/tmp/d0d0f9f3-0c93-4a05-ab81-7ad33a0a2539_buggy.java
+++ b/tmp/6069917b-c891-4f03-a30c-ee6c318e18fe_fixed.java
@@ -1,26 +1,25 @@
-    /**
-     * Creates a printer that will print values to the given stream following the CSVFormat.
-     * <p>
-     * Currently, only a pure encapsulation format or a pure escaping format is supported. Hybrid formats (encapsulation
-     * and escaping with a different character) are not supported.
-     * </p>
-     * 
-     * @param out
-     *        stream to which to print. Must not be null.
-     * @param format
-     *        the CSV format. Must not be null.
-     * @throws IOException
-     *         thrown if the optional header cannot be printed.
-     * @throws IllegalArgumentException
-     *         thrown if the parameters of the format are inconsistent or if either out or format are null.
-     */
 public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {
     Assertions.notNull(out, "out");
     Assertions.notNull(format, "format");
 
     this.out = out;
     this.format = format;
     this.format.validate();
-        // TODO: Is it a good idea to do this here instead of on the first call to a print method?
-        // It seems a pain to have to track whether the header has already been printed or not.
+
+    // If a header has been set up in the CSVFormat, print it now.
+    // This ensures that the header appears before any records are printed.
+    final String[] header = format.getHeader();
+    if (header != null) {
+        for (int i = 0; i < header.length; i++) {
+            if (i > 0) {
+                out.append(format.getDelimiter());
+            }
+            // Simply append the header value (or an empty string if null).
+            out.append(header[i] != null ? header[i] : "");
+        }
+        // Append the record separator (typically "\r\n").
+        out.append(format.getRecordSeparator());
+        // Mark that the header was printed so subsequent print calls won't print it again.
+        this.headerPrinted = true;
+    }
 }
\ No newline at end of file
