diff --git a/tmp/cd5b357b-d644-4d79-adf4-91faad68f5a5_buggy.java b/tmp/e594c7b4-b320-48ca-b0b4-b20bb9b816ed_fixed.java
index 97f28e5..c0536b9 100644
--- a/tmp/cd5b357b-d644-4d79-adf4-91faad68f5a5_buggy.java
+++ b/tmp/e594c7b4-b320-48ca-b0b4-b20bb9b816ed_fixed.java
@@ -1,26 +1,15 @@
-    /**
-     * Creates a printer that will print values to the given stream following the CSVFormat.
-     * <p>
-     * Currently, only a pure encapsulation format or a pure escaping format is supported. Hybrid formats (encapsulation
-     * and escaping with a different character) are not supported.
-     * </p>
-     * 
-     * @param out
-     *        stream to which to print. Must not be null.
-     * @param format
-     *        the CSV format. Must not be null.
-     * @throws IOException
-     *         thrown if the optional header cannot be printed.
-     * @throws IllegalArgumentException
-     *         thrown if the parameters of the format are inconsistent or if either out or format are null.
-     */
 public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {
     Assertions.notNull(out, "out");
     Assertions.notNull(format, "format");
 
     this.out = out;
     this.format = format;
     this.format.validate();
-        // TODO: Is it a good idea to do this here instead of on the first call to a print method?
-        // It seems a pain to have to track whether the header has already been printed or not.
+
+    // If a header is defined and we are not supposed to skip printing it,
+    // print the header immediately.
+    if (this.format.getHeader() != null && !this.format.isSkipHeaderRecord()) {
+        printRecord(this.format.getHeader());
+        this.headerPrinted = true;
+    }
 }
\ No newline at end of file
