diff --git a/tmp/c66d7f83-09a9-423d-98e5-982b831f0812_buggy.java b/tmp/69c3097c-0a85-4482-92ba-602dc14210a6_fixed.java
index 2d9cf24..f38a527 100644
--- a/tmp/c66d7f83-09a9-423d-98e5-982b831f0812_buggy.java
+++ b/tmp/69c3097c-0a85-4482-92ba-602dc14210a6_fixed.java
@@ -1,33 +1,28 @@
-    public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
-    {
-        // There are certain nasty classes that could cause problems, mostly
-        // via default typing -- catch them here.
+public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException {
     final Class<?> raw = type.getRawClass();
     String full = raw.getName();
 
     main_check:
     do {
-            if (_cfgIllegalClassNames.contains(full)) {
+        if (_cfgIllegalClassNames != null && _cfgIllegalClassNames.contains(full)) {
             break;
         }
-
         // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
         //    for some Spring framework types
         // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
         if (full.startsWith(PREFIX_STRING)) {
             for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
                 String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
-                    if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
-                            || "AbstractApplicationContext".equals(name)) {
+                // looking for "AbstractPointcutAdvisor" but no point to allow any is there?
+                // ditto  for "AbstractApplicationContext": block all ApplicationContexts
+                if ("AbstractPointcutAdvisor".equals(name) || "AbstractApplicationContext".equals(name)) {
                     break main_check;
                 }
             }
         }
         return;
     } while (false);
 
     throw JsonMappingException.from(ctxt,
             String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
 }
\ No newline at end of file
