diff --git a/tmp/23ecc731-5f8f-46fc-b711-7407034362a1_buggy.java b/tmp/144eb3da-64dc-4c8d-be72-24390444dfc3_fixed.java
index 5abdeb5..64fe16a 100644
--- a/tmp/23ecc731-5f8f-46fc-b711-7407034362a1_buggy.java
+++ b/tmp/144eb3da-64dc-4c8d-be72-24390444dfc3_fixed.java
@@ -1,29 +1,28 @@
-    /**
-     * Computes the number of uses of the variable varName and store it in
-     * numUseWithinUseCfgNode.
-     */
 private void getNumUseInUseCfgNode(final Node cfgNode) {
-
   numUsesWithinCfgNode = 0;
+
+  // When the entire cfgNode is just a chain of assignments,
+  // we want to count even a name that appears as the lhs.
+  // Otherwise, we ignore the lhs of an assignment.
+  final boolean isAssignmentChain =
+      cfgNode.isAssign() ||
+      (cfgNode.isExprResult() && cfgNode.getFirstChild() != null && cfgNode.getFirstChild().isAssign());
+
   AbstractCfgNodeTraversalCallback gatherCb =
       new AbstractCfgNodeTraversalCallback() {
-
         @Override
         public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
-              // Don't count lhs of top-level assignment chain
+          if (n.isName() && n.getString().equals(varName)) {
+            // Skip counting a name when it is the left-hand side of an assignment,
+            // except if the entire cfgNode is itself an assignment chain.
+            if (parent != null && parent.isAssign() &&
+                parent.getFirstChild() == n && !isAssignmentChain) {
+              return;
+            }
             numUsesWithinCfgNode++;
           }
         }
-
       };
 
   NodeTraversal.traverse(compiler, cfgNode, gatherCb);
 }
\ No newline at end of file
