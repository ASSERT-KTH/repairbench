diff --git a/tmp/1830ca49-0cdd-41d0-b8a0-ebee5afb7999_buggy.java b/tmp/0a2c8c17-3115-4e36-9c08-a121f6b1ece0_fixed.java
index 0fc103a..7cb5eb2 100644
--- a/tmp/1830ca49-0cdd-41d0-b8a0-ebee5afb7999_buggy.java
+++ b/tmp/0a2c8c17-3115-4e36-9c08-a121f6b1ece0_fixed.java
@@ -1,23 +1,13 @@
-    /**
-     * Remove the leading and trailing quotes from <code>str</code>.
-     * E.g. if str is '"one two"', then 'one two' is returned.
-     *
-     * @param str The string from which the leading and trailing quotes
-     * should be removed.
-     *
-     * @return The string without the leading and trailing quotes.
-     */
-    static String stripLeadingAndTrailingQuotes(String str)
-    {
-        if (str.startsWith("\""))
-        {
-            str = str.substring(1, str.length());
+static String stripLeadingAndTrailingQuotes(String str) {
+    // Only remove outer quotes if theyâ€™re the only quotes in the entire string.
+    // e.g. remove them from "\"foo\"" but leave "foo \"bar\"" and "\"foo\" and \"bar\"" alone.
+    if (str.length() > 1 
+          && str.startsWith("\"") 
+          && str.endsWith("\"")
+          // Check that removing all quotes would remove exactly two characters,
+          // i.e. that the only quotes in the string are the first and last.
+          && str.replace("\"", "").length() == str.length() - 2) {
+        return str.substring(1, str.length() - 1);
     }
-        int length = str.length();
-        if (str.endsWith("\""))
-        {
-            str = str.substring(0, length - 1);
-        }
-        
     return str;
 }
\ No newline at end of file
