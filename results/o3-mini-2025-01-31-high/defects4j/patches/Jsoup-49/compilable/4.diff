diff --git a/tmp/e83a49fd-a865-49ca-86a8-fb1f160bab73_buggy.java b/tmp/65ef8c68-398f-4164-b6cb-bd09ee46fd54_fixed.java
index a37dc7a..fbb9e58 100644
--- a/tmp/e83a49fd-a865-49ca-86a8-fb1f160bab73_buggy.java
+++ b/tmp/65ef8c68-398f-4164-b6cb-bd09ee46fd54_fixed.java
@@ -1,10 +1,22 @@
 protected void addChildren(int index, Node... children) {
     Validate.noNullElements(children);
     ensureChildNodes();
+    // Save each childâ€™s original sibling index if it is already in this parent.
+    int[] origIndexes = new int[children.length];
+    for (int i = 0; i < children.length; i++) {
+        Node child = children[i];
+        origIndexes[i] = child.parent() == this ? child.siblingIndex() : -1;
+    }
+    // Iterate in reverse so that the children keep their relative order.
     for (int i = children.length - 1; i >= 0; i--) {
-            Node in = children[i];
-            reparentChild(in);
-            childNodes.add(index, in);
+        Node child = children[i];
+        int origIndex = origIndexes[i];
+        reparentChild(child);
+        // If the child was already in this parent and located before the target insertion point,
+        // then the removal has shifted indices so adjust the index accordingly.
+        if (origIndex != -1 && origIndex < index)
+            index--;
+        childNodes.add(index, child);
     }
     reindexChildren(index);
 }
\ No newline at end of file
