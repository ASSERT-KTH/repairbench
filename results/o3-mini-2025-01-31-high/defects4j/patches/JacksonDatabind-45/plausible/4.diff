diff --git a/tmp/24e8661b-ab0f-45d2-a3fa-51618faf8f49_buggy.java b/tmp/365579e6-dbc2-4b04-9fba-d215f1240fde_fixed.java
index 0dbce00..8abe668 100644
--- a/tmp/24e8661b-ab0f-45d2-a3fa-51618faf8f49_buggy.java
+++ b/tmp/365579e6-dbc2-4b04-9fba-d215f1240fde_fixed.java
@@ -1,33 +1,34 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+        BeanProperty property) throws JsonMappingException {
     if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+        JsonFormat.Value format = serializers.getAnnotationIntrospector()
+                .findFormat((Annotated) property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // Force use of String format if either the shape is explicitly STRING
+            // OR if shape is ANY but one of the pattern/locale/timeZone properties has been set.
+            if (shape == JsonFormat.Shape.STRING
+                    || (shape == JsonFormat.Shape.ANY
+                        && (format.hasPattern() || format.hasLocale() || format.getTimeZone() != null))) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
     return this;
 }
\ No newline at end of file
