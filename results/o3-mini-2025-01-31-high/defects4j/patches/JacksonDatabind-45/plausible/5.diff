diff --git a/tmp/f4699778-8fc1-438c-8111-4a8cafb0b208_buggy.java b/tmp/f1e6a2c4-8319-4abd-acf6-7676068150bd_fixed.java
index 0dbce00..d9624d2 100644
--- a/tmp/f4699778-8fc1-438c-8111-4a8cafb0b208_buggy.java
+++ b/tmp/f1e6a2c4-8319-4abd-acf6-7676068150bd_fixed.java
@@ -1,33 +1,33 @@
 @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property)
+        throws JsonMappingException {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
+            // If explicit numeric shape is indicated, use timestamp serialization
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // If explicit string shape OR if a formatting override is provided (pattern, locale, or timezone),
+            // then force use of a date format.
+            if (shape == JsonFormat.Shape.STRING || format.hasPattern() 
+                    || format.hasLocale() || (format.getTimeZone() != null)) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern() 
                         ? format.getPattern() 
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale() 
                         ? format.getLocale() 
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
     return this;
 }
\ No newline at end of file
