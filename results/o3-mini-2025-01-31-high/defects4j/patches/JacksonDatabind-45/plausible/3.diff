diff --git a/tmp/293db90d-e401-47b3-8428-7c861add7700_buggy.java b/tmp/40c1ad89-ca70-427e-bd61-bef9e43e3d6a_fixed.java
index 0dbce00..ed06852 100644
--- a/tmp/293db90d-e401-47b3-8428-7c861add7700_buggy.java
+++ b/tmp/40c1ad89-ca70-427e-bd61-bef9e43e3d6a_fixed.java
@@ -1,33 +1,34 @@
 @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property)
+        throws JsonMappingException {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
+            // First, if the annotation explicitly says "numeric" then use timestamps.
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // If the user has specified a custom pattern, locale, or timezone—or explicitly set Shape.STRING—
+            // then force textual (formatted) date serialization.
+            if (shape == JsonFormat.Shape.STRING || format.hasPattern() || format.hasLocale() || format.getTimeZone() != null) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
+    // If no contextual annotation (or an "empty" one) exists, then use the default 
+    // (which respects SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
     return this;
 }
\ No newline at end of file
