diff --git a/tmp/5049fe78-ac5f-4593-9e30-ba3d9afe46eb_buggy.java b/tmp/ff5f0894-b7b1-4004-9a77-c4084e70085f_fixed.java
index 0dbce00..36e9741 100644
--- a/tmp/5049fe78-ac5f-4593-9e30-ba3d9afe46eb_buggy.java
+++ b/tmp/ff5f0894-b7b1-4004-9a77-c4084e70085f_fixed.java
@@ -1,33 +1,38 @@
 @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property)
+        throws JsonMappingException {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
-                JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
-                }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // If the annotation explicitly specifies a pattern, timezone, or locale,
+            // or forces STRING via shape, then use String formatting regardless
+            // of the WRITE_DATES_AS_TIMESTAMPS setting.
+            if (format.hasPattern() 
+                    || format.getTimeZone() != null 
+                    || format.hasLocale()
+                    || format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
+                String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
+                Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+            // Otherwise, if the format explicitly calls for numeric shape,
+            // force numeric timestamp format.
+            if (format.getShape().isNumeric()) {
+                return withFormat(Boolean.TRUE, null);
             }
         }
+    }
+    // No meaningful annotation overrides: use the serializer as configured
+    // (which will defer to SerializationFeature.WRITE_DATES_AS_TIMESTAMPS).
     return this;
 }
\ No newline at end of file
