diff --git a/tmp/1c93d444-669d-4788-95df-6028185599ab_buggy.java b/tmp/825a9fcd-e4d4-4dd6-95fb-2b7529a2bf5b_fixed.java
index 0dbce00..dbdad30 100644
--- a/tmp/1c93d444-669d-4788-95df-6028185599ab_buggy.java
+++ b/tmp/825a9fcd-e4d4-4dd6-95fb-2b7529a2bf5b_fixed.java
@@ -1,33 +1,53 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
-        if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+        BeanProperty property) throws JsonMappingException {
+    JsonFormat.Value format = (property == null) ? null
+            : serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
     if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
-                JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
-                }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+        // If there is an explicit formatting override (pattern, locale, or timezone),
+        // then we force string formatting.
+        if (format.hasPattern() || format.hasLocale() || format.getTimeZone() != null) {
             TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
+            String pattern = format.hasPattern()
                     ? format.getPattern()
                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
+            Locale loc = format.hasLocale()
                     ? format.getLocale()
                     : serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
+        // Otherwise, if a shape is explicitly defined (and not just "ANY"),
+        // use it.
+        JsonFormat.Shape shape = format.getShape();
+        if (shape != JsonFormat.Shape.ANY) {
+            if (shape.isNumeric()) {
+                return withFormat(Boolean.TRUE, null);
             }
+            if (shape == JsonFormat.Shape.STRING) {
+                // Even if no pattern was provided, force string formatting.
+                TimeZone tz = serializers.getTimeZone();
+                String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                Locale loc = serializers.getLocale();
+                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                df.setTimeZone(tz);
+                return withFormat(Boolean.FALSE, df);
+            }
+        }
+    }
+    // No explicit format override; use provider configuration.
+    boolean useTimestamp = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
+    if (useTimestamp) {
+        return withFormat(Boolean.TRUE, null);
+    } else {
+        TimeZone tz = serializers.getTimeZone();
+        Locale loc = serializers.getLocale();
+        SimpleDateFormat df = new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, loc);
+        df.setTimeZone(tz);
+        return withFormat(Boolean.FALSE, df);
     }
-        return this;
 }
\ No newline at end of file
