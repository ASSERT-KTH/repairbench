diff --git a/tmp/f5876fd4-7ecd-4820-8d7a-ce3ab03b3081_buggy.java b/tmp/08dbfb23-7033-40ab-aea7-775e139b4103_fixed.java
index bfa2423..64e2394 100644
--- a/tmp/f5876fd4-7ecd-4820-8d7a-ce3ab03b3081_buggy.java
+++ b/tmp/08dbfb23-7033-40ab-aea7-775e139b4103_fixed.java
@@ -1,23 +1,30 @@
-    /**
-     * Generate a random sample from the distribution.
-     *
-     * @param sampleSize the number of random values to generate.
-     * @return an array representing the random sample.
-     * @throws NotStrictlyPositiveException if {@code sampleSize} is not
-     * positive.
-     */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
-            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
-                    sampleSize);
+        throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    // Draw the first sample in order to choose an array component type that can safely hold all samples.
+    T firstSample = sample();
+    Class<?> protoClass = singletons.get(0).getClass();
+    Class<?> sampleClass = firstSample.getClass();
+    Class<?> candidateType;
     
-        for (int i = 0; i < sampleSize; i++) {
+    if (protoClass.isAssignableFrom(sampleClass)) {
+        // The prototype is a supertype of the sample: use it.
+        candidateType = protoClass;
+    } else if (sampleClass.isAssignableFrom(protoClass)) {
+        // The sample is a supertype of the prototype: use it.
+        candidateType = sampleClass;
+    } else {
+        // They are unrelated; fall back on Object.
+        candidateType = Object.class;
+    }
+    
+    // Create the result array using the determined candidateType.
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(candidateType, sampleSize);
+    out[0] = firstSample;
+    for (int i = 1; i < sampleSize; i++) {
         out[i] = sample();
     }
-
     return out;
-
 }
\ No newline at end of file
