diff --git a/tmp/ffeb995e-7b01-420a-bf1b-90e599084171_buggy.java b/tmp/4b65b89d-8be2-43f3-9ae2-724dac9db3ad_fixed.java
index c84c989..a33cca6 100644
--- a/tmp/ffeb995e-7b01-420a-bf1b-90e599084171_buggy.java
+++ b/tmp/4b65b89d-8be2-43f3-9ae2-724dac9db3ad_fixed.java
@@ -1,27 +1,39 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Read the date and time, but do not assign it directly to position.setTime()
+    long timeValue = buf.readUnsignedIntLE();
+    Date dateTime = new Date(timeValue * 1000); // Convert seconds to milliseconds
+
+    // Check if the date is within a reasonable range (e.g., 25 hours from now)
+    long currentTime = System.currentTimeMillis();
+    if (dateTime.getTime() > currentTime + 25L * 60 * 60 * 1000) {
+        // Adjust the time to be within the acceptable range
+        dateTime = new Date(currentTime);
+    }
+
+    position.setTime(dateTime);
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
