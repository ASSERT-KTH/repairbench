diff --git a/tmp/1e8d6a40-29ee-4afd-bfe6-4e77fc5c25e9_buggy.java b/tmp/a9ab2c48-d7bf-474b-916d-eddea8ea2fb2_fixed.java
index c84c989..2209f4c 100644
--- a/tmp/1e8d6a40-29ee-4afd-bfe6-4e77fc5c25e9_buggy.java
+++ b/tmp/a9ab2c48-d7bf-474b-916d-eddea8ea2fb2_fixed.java
@@ -1,27 +1,37 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Read date and time
+    long dateTime = buf.readUnsignedIntLE();
+    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+    calendar.set(Calendar.YEAR, (int) (dateTime >> 26 & 0x3F) + 2000);
+    calendar.set(Calendar.MONTH, (int) (dateTime >> 22 & 0x0F) - 1);
+    calendar.set(Calendar.DAY_OF_MONTH, (int) (dateTime >> 17 & 0x1F));
+    calendar.set(Calendar.HOUR_OF_DAY, (int) (dateTime >> 12 & 0x1F));
+    calendar.set(Calendar.MINUTE, (int) (dateTime >> 6 & 0x3F));
+    calendar.set(Calendar.SECOND, (int) (dateTime & 0x3F));
+    position.setTime(calendar.getTime());
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
