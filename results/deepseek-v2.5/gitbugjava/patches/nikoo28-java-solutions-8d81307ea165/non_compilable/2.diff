diff --git a/tmp/cc4e368d-55c4-4a42-aa6a-cf2023edb058_buggy.java b/tmp/0c7c9d02-f62e-435a-bae9-b4b835cfe573_fixed.java
index 9739964..40882b7 100644
--- a/tmp/cc4e368d-55c4-4a42-aa6a-cf2023edb058_buggy.java
+++ b/tmp/0c7c9d02-f62e-435a-bae9-b4b835cfe573_fixed.java
@@ -1,27 +1,31 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+        while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i])
             indexStack.pop();
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
+        // If index stack is empty, the price at index 'i' is greater than all previous values
         if (indexStack.isEmpty())
             spans[i] = i + 1;
         else
             spans[i] = i - indexStack.peek();
 
         indexStack.push(i);
     }
 
+    // Adjust spans for cases where prices are equal
+    for (int i = 1; i < prices.length; i++) {
+        if (prices[i] == prices[i - 1]) {
+            spans[i] = spans[i - 1] + 1;
+        }
+    }
+
     return spans;
 }
\ No newline at end of file
