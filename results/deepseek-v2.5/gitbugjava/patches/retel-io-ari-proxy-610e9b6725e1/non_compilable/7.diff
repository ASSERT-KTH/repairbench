diff --git a/tmp/62317a3e-fa82-48a7-a054-86b536fef181_buggy.java b/tmp/a7290cdf-054e-4403-9aa2-7da6ee0c263f_fixed.java
index eb0a5c8..18d75f2 100644
--- a/tmp/62317a3e-fa82-48a7-a054-86b536fef181_buggy.java
+++ b/tmp/a7290cdf-054e-4403-9aa2-7da6ee0c263f_fixed.java
@@ -1,27 +1,31 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
+  // Check if the command is a creation command or a delete command
+  if (!ariCommand.extractCommandType().isCreationCommand() && !ariCommand.extractCommandType().isDeletionCommand()) {
     return Try.success(Done.done());
   }
 
   final Option<AriResource> maybeResource =
       ariCommand
           .extractResourceRelations()
           .find(AriResourceRelation::isCreated)
           .map(AriResourceRelation::getResource);
 
   if (maybeResource.isEmpty()) {
     return Try.failure(
         new RuntimeException(
             String.format(
                 "Failed to extract resourceId from command '%s'", ariCommand.toString())));
   }
 
   final AriResource resource = maybeResource.get();
 
+  // Only register call context if it's not a delete request
+  if (!ariCommand.extractCommandType().isDeletionCommand()) {
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
+  }
   return Try.success(Done.done());
 }
\ No newline at end of file
