diff --git a/tmp/b51e4e8e-1946-4943-a0ec-62c22045c2c6_buggy.java b/tmp/037148ae-1134-469e-af0e-d22a8a96819a_fixed.java
index 23f078d..f50392e 100644
--- a/tmp/b51e4e8e-1946-4943-a0ec-62c22045c2c6_buggy.java
+++ b/tmp/037148ae-1134-469e-af0e-d22a8a96819a_fixed.java
@@ -1,14 +1,19 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), "UTF-8");
+            int questionMarkIndex = encoded.indexOf('?');
+            if (questionMarkIndex != -1) {
+                encoded = encoded.substring(0, questionMarkIndex);
+            }
+            sb.append(encoded);
         } else {
             sb.append((char) c);
         }
+        i += Character.charCount(c);
     }
 }
\ No newline at end of file
