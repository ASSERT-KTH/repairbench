diff --git a/tmp/2466487a-4470-471e-9b43-de18a3a7183c_buggy.java b/tmp/74e7dc64-560f-4854-b09a-be4922ded35b_fixed.java
index 23f078d..57fe2d5 100644
--- a/tmp/2466487a-4470-471e-9b43-de18a3a7183c_buggy.java
+++ b/tmp/74e7dc64-560f-4854-b09a-be4922ded35b_fixed.java
@@ -1,14 +1,19 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name());
+            // Remove the redundant "%3F" that might appear due to supplementary characters
+            if (encoded.contains("%3F")) {
+                encoded = encoded.replace("%3F", "");
+            }
+            sb.append(encoded);
         } else {
             sb.append((char) c);
         }
+        i += Character.charCount(c); // Move to the next code point
     }
 }
\ No newline at end of file
