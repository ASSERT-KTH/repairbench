diff --git a/tmp/4685165b-9eee-4955-bdae-f952c00c5d13_buggy.java b/tmp/972d2f95-802f-483f-ad89-ceafc09dbd02_fixed.java
index 03b03d7..22ed326 100644
--- a/tmp/4685165b-9eee-4955-bdae-f952c00c5d13_buggy.java
+++ b/tmp/972d2f95-802f-483f-ad89-ceafc09dbd02_fixed.java
@@ -1,25 +1,26 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
     
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Determine the correct instant before or after the overlap
+    long instantToUse = earlierOrLater ? instantAfter : instantBefore;
+    
+    // Convert the local time back to UTC using the correct instant
+    return convertLocalToUTC(local, false, instantToUse);
 }
\ No newline at end of file
