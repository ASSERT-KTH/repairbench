diff --git a/tmp/3bf7e85a-08a9-4d81-bd3f-27dc6d8ef2d9_buggy.java b/tmp/f2ca2ad6-a0d9-4633-a1a0-616df5d6c543_fixed.java
index bfa2423..c05ba00 100644
--- a/tmp/3bf7e85a-08a9-4d81-bd3f-27dc6d8ef2d9_buggy.java
+++ b/tmp/f2ca2ad6-a0d9-4633-a1a0-616df5d6c543_fixed.java
@@ -1,23 +1,21 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
  * @return an array representing the random sample.
-     * @throws NotStrictlyPositiveException if {@code sampleSize} is not
-     * positive.
+ * @throws NotStrictlyPositiveException if {@code sampleSize} is not positive.
  */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
-            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
-                    sampleSize);
+        throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);
     }
 
+    @SuppressWarnings("unchecked")
     final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
     for (int i = 0; i < sampleSize; i++) {
         out[i] = sample();
     }
 
     return out;
-
 }
\ No newline at end of file
