diff --git a/tmp/630eb78f-f8aa-4728-8342-c50d5abf7f8a_buggy.java b/tmp/de2df848-4933-4bcc-98ca-9dcf67bd775c_fixed.java
index 904dba7..9fd2ce2 100644
--- a/tmp/630eb78f-f8aa-4728-8342-c50d5abf7f8a_buggy.java
+++ b/tmp/de2df848-4933-4bcc-98ca-9dcf67bd775c_fixed.java
@@ -1,46 +1,45 @@
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
         b.append(error.sourceName);
         if (error.lineNumber > 0) {
             b.append(':');
             b.append(error.lineNumber);
         }
         b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
         b.append(sourceExcerpt);
         b.append('\n');
         int charno = error.getCharno();
 
         // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
+        // charno == sourceExcerpt.length() means something is missing
         // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+        if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) {
             for (int i = 0; i < charno; i++) {
                 char c = sourceExcerpt.charAt(i);
                 if (Character.isWhitespace(c)) {
                     b.append(c);
                 } else {
                     b.append(' ');
                 }
             }
             b.append("^\n");
         }
     }
     return b.toString();
 }
\ No newline at end of file
