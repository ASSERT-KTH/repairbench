diff --git a/tmp/576ecb23-f77f-4f5e-ac2b-205c0fdd7f63_buggy.java b/tmp/4a37a791-bd58-4285-8217-cccd36cb5683_fixed.java
index e69de29..e00a52b 100644
--- a/tmp/576ecb23-f77f-4f5e-ac2b-205c0fdd7f63_buggy.java
+++ b/tmp/4a37a791-bd58-4285-8217-cccd36cb5683_fixed.java
@@ -0,0 +1,30 @@
+import com.fasterxml.jackson.core.JsonFactory;
+import com.fasterxml.jackson.core.JsonGenerator;
+import java.io.IOException;
+
+public class TestJsonGeneratorFeatures {
+
+    private static final JsonFactory JSON_F = new JsonFactory();
+
+    private void _testFieldNameQuotingEnabled(JsonFactory f, boolean explicitQuotes, boolean expectQuotes, String expected) throws IOException {
+        StringWriter sw = new StringWriter();
+        JsonGenerator g = f.createGenerator(sw);
+        g.writeStartObject();
+        if (explicitQuotes) {
+            g.writeFieldName("\"foo\"");
+        } else {
+            g.writeFieldName("foo");
+        }
+        g.writeNumber(1);
+        g.writeEndObject();
+        g.close();
+        String json = sw.toString();
+        assertEquals(expected, json);
+    }
+
+    private void assertEquals(String expected, String actual) {
+        if (!expected.equals(actual)) {
+            throw new ComparisonFailure("expected:<{" + expected + "}> but was:<{" + actual + "}>", expected, actual);
+        }
+    }
+}
\ No newline at end of file
