diff --git a/tmp/04959190-c725-4151-a04a-75a27b716011_buggy.java b/tmp/84faec07-8a3b-421b-becd-92835f6ffc52_fixed.java
index e69de29..bd544fe 100644
--- a/tmp/04959190-c725-4151-a04a-75a27b716011_buggy.java
+++ b/tmp/84faec07-8a3b-421b-becd-92835f6ffc52_fixed.java
@@ -0,0 +1,31 @@
+import java.io.ObjectInputStream;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import org.apache.commons.collections4.map.AbstractMapDecorator;
+import org.apache.commons.collections4.MultiMap;
+
+public class MultiValueMap<K, V> extends AbstractMapDecorator<K, List<V>> implements MultiMap<K, V> {
+
+    private static final long serialVersionUID = 1L;
+
+    private final Class<? extends List<V>> listClass;
+
+    public static <K, V> MultiValueMap<K, V> multiValueMap(Map<K, List<V>> map, Class<? extends List<V>> listClass) {
+        return new MultiValueMap<>(map, listClass);
+    }
+
+    protected MultiValueMap(Map<K, List<V>> map, Class<? extends List<V>> listClass) {
+        super(map);
+        this.listClass = listClass;
+    }
+
+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject();
+        if (!listClass.equals(ArrayList.class) && !listClass.equals(List.class)) {
+            throw new UnsupportedOperationException("unsafe clazz accepted when de-serializing MultiValueMap");
+        }
+    }
+}
\ No newline at end of file
