diff --git a/tmp/17c91af4-ec81-45ab-b059-4b592b71eef5_buggy.java b/tmp/924c0373-ff6c-4917-83df-5be2fedd5034_fixed.java
index e69de29..4302885 100644
--- a/tmp/17c91af4-ec81-45ab-b059-4b592b71eef5_buggy.java
+++ b/tmp/924c0373-ff6c-4917-83df-5be2fedd5034_fixed.java
@@ -0,0 +1,25 @@
+public class MultiValueMap<K, V> extends AbstractMap<K, Object> implements Serializable {
+    private final Map<K, Collection<V>> map;
+    private final Class<? extends Collection<V>> collectionClass;
+
+    public MultiValueMap(Map<K, Collection<V>> map, Class<? extends Collection<V>> collectionClass) {
+        this.map = map;
+        this.collectionClass = collectionClass;
+    }
+
+    private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {
+        ois.defaultReadObject();
+        map = (Map<K, Collection<V>>) ois.readObject();
+        collectionClass = (Class<? extends Collection<V>>) ois.readObject();
+
+        if (!isValidCollectionClass(collectionClass)) {
+            throw new UnsupportedOperationException("Unsafe class type for collection: " + collectionClass.getName());
+        }
+    }
+
+    private boolean isValidCollectionClass(Class<? extends Collection<V>> clazz) {
+        return ArrayList.class.isAssignableFrom(clazz) || LinkedList.class.isAssignableFrom(clazz);
+    }
+
+    // Other methods of MultiValueMap
+}
\ No newline at end of file
