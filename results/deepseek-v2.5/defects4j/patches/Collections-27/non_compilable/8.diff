diff --git a/tmp/e0b1f596-1a6e-45c7-812d-a29a2c7b56eb_buggy.java b/tmp/b062854b-3c2c-47c1-a552-4ab1286d7aa1_fixed.java
index e69de29..29de9ea 100644
--- a/tmp/e0b1f596-1a6e-45c7-812d-a29a2c7b56eb_buggy.java
+++ b/tmp/b062854b-3c2c-47c1-a552-4ab1286d7aa1_fixed.java
@@ -0,0 +1,27 @@
+public class MultiValueMap<K, V> extends AbstractMapDecorator<K, Object> implements Serializable, MultiValuedMap<K, V> {
+
+    private static final long serialVersionUID = 4384615456444252104L;
+
+    private final Class<? extends Collection<V>> collectionClass;
+
+    public static <K, V> MultiValueMap<K, V> multiValueMap(Map<K, Object> map, Class<? extends Collection<V>> collectionClass) {
+        return new MultiValueMap<>(map, collectionClass);
+    }
+
+    protected MultiValueMap(Map<K, Object> map, Class<? extends Collection<V>> collectionClass) {
+        super(map);
+        this.collectionClass = collectionClass;
+        if (!Serializable.class.isAssignableFrom(collectionClass)) {
+            throw new UnsupportedOperationException("The collection class must be Serializable");
+        }
+    }
+
+    // Other methods of the MultiValueMap class
+
+    private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException {
+        stream.defaultReadObject();
+        if (!Serializable.class.isAssignableFrom(collectionClass)) {
+            throw new UnsupportedOperationException("The collection class must be Serializable");
+        }
+    }
+}
\ No newline at end of file
