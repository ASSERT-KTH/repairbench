diff --git a/tmp/cb2ed4a5-b42d-4be8-b4e8-3d8c299c88d1_buggy.java b/tmp/bf540470-48f3-44ad-929e-cf840e493900_fixed.java
index 8e93a5e..ccc1db0 100644
--- a/tmp/cb2ed4a5-b42d-4be8-b4e8-3d8c299c88d1_buggy.java
+++ b/tmp/bf540470-48f3-44ad-929e-cf840e493900_fixed.java
@@ -1,43 +1,38 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        // Trim the substring to avoid leading spaces
+        text = text.substring(pos).trim();
+
+        // Add the padding only at the beginning of the new line
+        if (!text.isEmpty()) {
+            text = padding + text;
+        }
+
+        pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
