diff --git a/tmp/1868c501-1cde-41f6-a176-bfe3c743b917_buggy.java b/tmp/cff53e73-e99d-4979-b0aa-f6e745efe277_fixed.java
index 47915ed..5f826e1 100644
--- a/tmp/1868c501-1cde-41f6-a176-bfe3c743b917_buggy.java
+++ b/tmp/cff53e73-e99d-4979-b0aa-f6e745efe277_fixed.java
@@ -1,22 +1,26 @@
     /* (non-Javadoc)
      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
      */
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
             //see issue 184.
             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
             //Only for compareTo() method by the Comparable interface
+            if (invocation.getMock() == invocation.getArgument(0)) {
+                return 0;
+            } else {
                 return 1;
             }
+        }
         
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
\ No newline at end of file
