diff --git a/tmp/21690fce-9fe2-4a3c-b918-b4c55e18f751_buggy.java b/tmp/f2b2b6d7-cbb0-4102-ac24-a47237478c17_fixed.java
index 4685979..e06fee2 100644
--- a/tmp/21690fce-9fe2-4a3c-b918-b4c55e18f751_buggy.java
+++ b/tmp/f2b2b6d7-cbb0-4102-ac24-a47237478c17_fixed.java
@@ -1,16 +1,22 @@
 /**
  * Encodes {@code value}.
  *
  * @param value a finite value. May not be {@link Double#isNaN() NaNs} or
-   *     {@link Double#isInfinite() infinities}.
+ *     {@link Double#isInfinite() infinities} unless the writer is lenient.
  * @return this writer.
  */
 public JsonWriter value(double value) throws IOException {
   writeDeferredName();
-    if (Double.isNaN(value) || Double.isInfinite(value)) {
+  if (!isLenient() && (Double.isNaN(value) || Double.isInfinite(value))) {
     throw new IllegalArgumentException("Numeric values must be finite, but was " + value);
   }
   beforeValue();
   out.append(Double.toString(value));
   return this;
 }
+
+private boolean isLenient() {
+  // Assume there is a method or field that determines if the writer is lenient
+  // For example, a field `lenient` or a method `getLenient()`
+  return lenient; // or return getLenient();
+}
\ No newline at end of file
