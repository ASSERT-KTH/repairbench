diff --git a/tmp/594ed38e-7c6c-42e5-9ed4-bc3dd494e46d_buggy.java b/tmp/eb0237f8-7a4f-492e-8c83-7c9750e1a903_fixed.java
index 544303b..e365009 100644
--- a/tmp/594ed38e-7c6c-42e5-9ed4-bc3dd494e46d_buggy.java
+++ b/tmp/eb0237f8-7a4f-492e-8c83-7c9750e1a903_fixed.java
@@ -1,29 +1,33 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
+    Integer basicRow = getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+    
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+        
+        // Compute the coefficient value if basicRow is not null
+        double coefficientValue = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        
+        // Adjust the coefficient value if necessary
         if (basicRow != null) {
             for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
+                    coefficientValue = 0;
+                    break;
                 }
             }
         }
+        
+        coefficients[i] = coefficientValue - (restrictToNonNegative ? 0 : mostNegative);
     }
+    
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
