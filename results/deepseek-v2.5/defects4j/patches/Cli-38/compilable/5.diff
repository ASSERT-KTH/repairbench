diff --git a/tmp/2f49267a-22bd-49ef-99da-a90976f08119_buggy.java b/tmp/406328ed-2a0b-4ccc-88d7-612aebe29aec_fixed.java
index 81a6e8b..ccc4a13 100644
--- a/tmp/2f49267a-22bd-49ef-99da-a90976f08119_buggy.java
+++ b/tmp/406328ed-2a0b-4ccc-88d7-612aebe29aec_fixed.java
@@ -1,19 +1,31 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        // remove leading "-" 
+        String optName = token.substring(1);
+
+        // Check if the token contains an '=' and handle it accordingly
+        int pos = optName.indexOf("=");
+        if (pos != -1) {
+            optName = optName.substring(0, pos);
+        }
+
+        // Check each character in the optName to see if it's a valid short option
+        for (char c : optName.toCharArray()) {
+            if (!options.hasShortOption(String.valueOf(c))) {
+                return false;
+            }
+        }
+
+        return true;
     }
\ No newline at end of file
