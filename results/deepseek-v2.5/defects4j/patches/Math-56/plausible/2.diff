diff --git a/tmp/36340293-d3e6-46a5-9273-4d6c33b52e67_buggy.java b/tmp/3d9fd69a-e995-41db-8090-875e4ebb1690_fixed.java
index 2608424..de08f84 100644
--- a/tmp/36340293-d3e6-46a5-9273-4d6c33b52e67_buggy.java
+++ b/tmp/3d9fd69a-e995-41db-8090-875e4ebb1690_fixed.java
@@ -1,39 +1,36 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
         int count = 0;
         for (int i = 0; i < last; i++) {
             int idx = 0;
             final int offset = uniCounterOffset[i];
-            while (count <= index) {
+            while (count + offset <= index) { // Change the condition to include the exact match
                 count += offset;
                 ++idx;
             }
-            --idx;
-            count -= offset;
             indices[i] = idx;
         }
 
-        int idx = 1;
+        int idx = 0;
         while (count < index) {
-            count += idx;
+            count += 1;
             ++idx;
         }
-        --idx;
         indices[last] = idx;
 
         return indices;
     }
\ No newline at end of file
