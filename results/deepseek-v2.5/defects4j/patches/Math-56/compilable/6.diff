diff --git a/tmp/1f16ad18-2230-45e4-ba6f-6060687cdd80_buggy.java b/tmp/d2e25a6d-4da4-4736-8a82-b2c21bc9c69c_fixed.java
index 2608424..e8c94be 100644
--- a/tmp/1f16ad18-2230-45e4-ba6f-6060687cdd80_buggy.java
+++ b/tmp/d2e25a6d-4da4-4736-8a82-b2c21bc9c69c_fixed.java
@@ -1,39 +1,28 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
-        if (index < 0 ||
-            index >= totalSize) {
+        if (index < 0 || index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
         int count = 0;
-        for (int i = 0; i < last; i++) {
+        for (int i = 0; i < dimension; i++) {
             int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
+            final int offset = i == 0 ? 1 : uniCounterOffset[i - 1];
+            while (count + offset <= index) {
                 count += offset;
                 ++idx;
             }
-            --idx;
-            count -= offset;
             indices[i] = idx;
         }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
-
         return indices;
     }
\ No newline at end of file
