diff --git a/tmp/36239eba-9c4d-412e-89a8-8e1f08c5151e_buggy.java b/tmp/c46dba89-5145-46f1-a2d3-60c16996e6fc_fixed.java
index 5abdeb5..c8ac945 100644
--- a/tmp/36239eba-9c4d-412e-89a8-8e1f08c5151e_buggy.java
+++ b/tmp/c46dba89-5145-46f1-a2d3-60c16996e6fc_fixed.java
@@ -1,29 +1,37 @@
 /**
  * Computes the number of uses of the variable varName and store it in
  * numUseWithinUseCfgNode.
  */
 private void getNumUseInUseCfgNode(final Node cfgNode) {
 
   numUsesWithinCfgNode = 0;
   AbstractCfgNodeTraversalCallback gatherCb =
       new AbstractCfgNodeTraversalCallback() {
 
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
-              // Don't count lhs of top-level assignment chain
+      if (n.isName() && n.getString().equals(varName)) {
+        // Check if the name node is on the left-hand side of an assignment
+        if (parent.isAssign() && parent.getFirstChild() == n) {
+          // Don't count lhs of assignments
+          return;
+        }
+        // Don't count uses in the same ternary operator condition
+        if (parent.isCond() && parent.getFirstChild() == n) {
+          return;
+        }
+        // Don't count uses in the same logical operator condition
+        if (parent.isAnd() || parent.isOr() || parent.isHook()) {
+          if (parent.getFirstChild() == n || parent.getChildAtIndex(1) == n) {
+            return;
+          }
+        }
+        // Count the use
         numUsesWithinCfgNode++;
       }
     }
 
   };
 
   NodeTraversal.traverse(compiler, cfgNode, gatherCb);
 }
\ No newline at end of file
