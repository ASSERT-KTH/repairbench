diff --git a/tmp/2800912f-291a-4d6d-b8ab-6d9023ce8c5e_buggy.java b/tmp/88e4566e-1063-47ea-b964-0d28e861f9ec_fixed.java
index 1650d36..73d4706 100644
--- a/tmp/2800912f-291a-4d6d-b8ab-6d9023ce8c5e_buggy.java
+++ b/tmp/88e4566e-1063-47ea-b964-0d28e861f9ec_fixed.java
@@ -1,25 +1,34 @@
     /**
      * <p>Checks if two calendar objects represent the same local time.</p>
      *
      * <p>This method compares the values of the fields of the two objects.
-     * In addition, both calendars must be the same of the same type.</p>
+     * In addition, both calendars must be of the same type.</p>
      * 
      * @param cal1  the first calendar, not altered, not null
      * @param cal2  the second calendar, not altered, not null
-     * @return true if they represent the same millisecond instant
+     * @return true if they represent the same local time
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
     public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
         if (cal1 == null || cal2 == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
+        
+        // Normalize the TimeZones to the same reference, keeping the local time values the same
+        TimeZone tz1 = cal1.getTimeZone();
+        TimeZone tz2 = cal2.getTimeZone();
+        Calendar normalizedCal1 = Calendar.getInstance(tz1);
+        Calendar normalizedCal2 = Calendar.getInstance(tz1);
+        normalizedCal1.setTimeInMillis(cal1.getTimeInMillis());
+        normalizedCal2.setTimeInMillis(cal2.getTimeInMillis());
+        
+        return (normalizedCal1.get(Calendar.MILLISECOND) == normalizedCal2.get(Calendar.MILLISECOND) &&
+                normalizedCal1.get(Calendar.SECOND) == normalizedCal2.get(Calendar.SECOND) &&
+                normalizedCal1.get(Calendar.MINUTE) == normalizedCal2.get(Calendar.MINUTE) &&
+                normalizedCal1.get(Calendar.HOUR_OF_DAY) == normalizedCal2.get(Calendar.HOUR_OF_DAY) &&
+                normalizedCal1.get(Calendar.DAY_OF_YEAR) == normalizedCal2.get(Calendar.DAY_OF_YEAR) &&
+                normalizedCal1.get(Calendar.YEAR) == normalizedCal2.get(Calendar.YEAR) &&
+                normalizedCal1.get(Calendar.ERA) == normalizedCal2.get(Calendar.ERA) &&
                 cal1.getClass() == cal2.getClass());
     }
\ No newline at end of file
