diff --git a/tmp/a69a242b-8a8b-4ec5-af57-7b5b5bc3891b_buggy.java b/tmp/010fa858-9d6c-45ec-805b-d0290ffb6478_fixed.java
index 1650d36..746e9d3 100644
--- a/tmp/a69a242b-8a8b-4ec5-af57-7b5b5bc3891b_buggy.java
+++ b/tmp/010fa858-9d6c-45ec-805b-d0290ffb6478_fixed.java
@@ -1,25 +1,34 @@
     /**
      * <p>Checks if two calendar objects represent the same local time.</p>
      *
      * <p>This method compares the values of the fields of the two objects.
-     * In addition, both calendars must be the same of the same type.</p>
+     * In addition, both calendars must be of the same type.</p>
      * 
      * @param cal1  the first calendar, not altered, not null
      * @param cal2  the second calendar, not altered, not null
-     * @return true if they represent the same millisecond instant
+     * @return true if they represent the same local time
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
     public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
         if (cal1 == null || cal2 == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
+        // Create copies of the calendars to avoid altering the original objects
+        Calendar cal1Copy = (Calendar) cal1.clone();
+        Calendar cal2Copy = (Calendar) cal2.clone();
+        
+        // Set both calendars to the same time zone before comparison
+        TimeZone tz = TimeZone.getTimeZone("UTC");
+        cal1Copy.setTimeZone(tz);
+        cal2Copy.setTimeZone(tz);
+
+        return (cal1Copy.get(Calendar.MILLISECOND) == cal2Copy.get(Calendar.MILLISECOND) &&
+                cal1Copy.get(Calendar.SECOND) == cal2Copy.get(Calendar.SECOND) &&
+                cal1Copy.get(Calendar.MINUTE) == cal2Copy.get(Calendar.MINUTE) &&
+                cal1Copy.get(Calendar.HOUR_OF_DAY) == cal2Copy.get(Calendar.HOUR_OF_DAY) &&
+                cal1Copy.get(Calendar.DAY_OF_YEAR) == cal2Copy.get(Calendar.DAY_OF_YEAR) &&
+                cal1Copy.get(Calendar.YEAR) == cal2Copy.get(Calendar.YEAR) &&
+                cal1Copy.get(Calendar.ERA) == cal2Copy.get(Calendar.ERA) &&
                 cal1.getClass() == cal2.getClass());
     }
\ No newline at end of file
