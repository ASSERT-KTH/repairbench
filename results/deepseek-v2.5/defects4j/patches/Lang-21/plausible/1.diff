diff --git a/tmp/a6be69d7-9abb-4ba6-a35d-f6c18d55612f_buggy.java b/tmp/0c13f364-774b-4a99-9bd0-67059919d54a_fixed.java
index 1650d36..508f95f 100644
--- a/tmp/a6be69d7-9abb-4ba6-a35d-f6c18d55612f_buggy.java
+++ b/tmp/0c13f364-774b-4a99-9bd0-67059919d54a_fixed.java
@@ -1,25 +1,34 @@
 /**
  * <p>Checks if two calendar objects represent the same local time.</p>
  *
-     * <p>This method compares the values of the fields of the two objects.
-     * In addition, both calendars must be the same of the same type.</p>
+ * <p>This method compares the values of the fields of the two objects
+ * after normalizing them to the same time zone. In addition, both calendars
+ * must be of the same type.</p>
  * 
  * @param cal1  the first calendar, not altered, not null
  * @param cal2  the second calendar, not altered, not null
-     * @return true if they represent the same millisecond instant
+ * @return true if they represent the same local time after normalization
  * @throws IllegalArgumentException if either date is <code>null</code>
  * @since 2.1
  */
 public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
     if (cal1 == null || cal2 == null) {
         throw new IllegalArgumentException("The date must not be null");
     }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
+    
+    // Normalize both calendars to the same time zone
+    TimeZone tz = TimeZone.getDefault();
+    Calendar normalizedCal1 = (Calendar) cal1.clone();
+    Calendar normalizedCal2 = (Calendar) cal2.clone();
+    normalizedCal1.setTimeZone(tz);
+    normalizedCal2.setTimeZone(tz);
+    
+    return (normalizedCal1.get(Calendar.MILLISECOND) == normalizedCal2.get(Calendar.MILLISECOND) &&
+            normalizedCal1.get(Calendar.SECOND) == normalizedCal2.get(Calendar.SECOND) &&
+            normalizedCal1.get(Calendar.MINUTE) == normalizedCal2.get(Calendar.MINUTE) &&
+            normalizedCal1.get(Calendar.HOUR_OF_DAY) == normalizedCal2.get(Calendar.HOUR_OF_DAY) && // Use HOUR_OF_DAY to compare the 24-hour format
+            normalizedCal1.get(Calendar.DAY_OF_YEAR) == normalizedCal2.get(Calendar.DAY_OF_YEAR) &&
+            normalizedCal1.get(Calendar.YEAR) == normalizedCal2.get(Calendar.YEAR) &&
+            normalizedCal1.get(Calendar.ERA) == normalizedCal2.get(Calendar.ERA) &&
             cal1.getClass() == cal2.getClass());
 }
\ No newline at end of file
