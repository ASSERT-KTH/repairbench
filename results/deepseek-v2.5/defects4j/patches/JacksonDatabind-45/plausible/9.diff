diff --git a/tmp/ac748295-3f32-424d-b890-0ad0a5b54c14_buggy.java b/tmp/c77bc7a9-c9ef-4069-9e1d-19c9b20ad4f0_fixed.java
index 0dbce00..9c0a29d 100644
--- a/tmp/ac748295-3f32-424d-b890-0ad0a5b54c14_buggy.java
+++ b/tmp/c77bc7a9-c9ef-4069-9e1d-19c9b20ad4f0_fixed.java
@@ -1,33 +1,44 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // Check if the shape is ANY and there is a pattern, locale, or timezone specified
+            if (format.getShape() == JsonFormat.Shape.ANY) {
+                boolean hasPattern = format.hasPattern();
+                boolean hasLocale = format.hasLocale();
+                boolean hasTimeZone = format.getTimeZone() != null;
+
+                if (hasPattern || hasLocale || hasTimeZone) {
+                    shape = JsonFormat.Shape.STRING;
+                }
+            }
+
+            if (shape == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
     return this;
 }
\ No newline at end of file
