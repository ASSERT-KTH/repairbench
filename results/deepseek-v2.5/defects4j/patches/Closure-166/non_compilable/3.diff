diff --git a/tmp/2f2b3901-b963-48d0-8434-4b9ce999ffdc_buggy.java b/tmp/8cff08ea-2119-4a65-8659-f1c36e4aae8e_fixed.java
index 5f96616..56c497c 100644
--- a/tmp/2f2b3901-b963-48d0-8434-4b9ce999ffdc_buggy.java
+++ b/tmp/8cff08ea-2119-4a65-8659-f1c36e4aae8e_fixed.java
@@ -1,20 +1,34 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    RecordType recordConstraint = constraint.toObjectType().toMaybeRecordType();
+    if (recordConstraint != null) {
+      for (String prop : recordConstraint.getOwnPropertyNames()) {
+        JSType propType = recordConstraint.getPropertyType(prop);
+        if (propType != null) {
+          JSDocInfo info = JSDocInfoBuilder.build(propType).build();
+          if (info != null) {
+            JSType propertyType = info.getType();
+            if (propertyType != null) {
+              matchRecordTypeConstraint(propertyType.toObjectType());
+            }
+          }
+        }
+      }
+    }
   }
 }
\ No newline at end of file
