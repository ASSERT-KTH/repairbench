diff --git a/tmp/ad396e61-ede5-4dcf-8582-fb93e7ae62de_buggy.java b/tmp/e7212a33-72e0-40be-bf15-308221242d6f_fixed.java
index 5f96616..e114407 100644
--- a/tmp/ad396e61-ede5-4dcf-8582-fb93e7ae62de_buggy.java
+++ b/tmp/e7212a33-72e0-40be-bf15-308221242d6f_fixed.java
@@ -1,20 +1,27 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
     matchRecordTypeConstraint(constraint.toObjectType());
+  } else if (constraint.isUnionType()) {
+    // Handle union types to match properties on each union member.
+    for (JSType type : constraint.getUnionMembers()) {
+      if (type.isRecordType()) {
+        matchRecordTypeConstraint(type.toObjectType());
+      }
+    }
   }
 }
\ No newline at end of file
