diff --git a/tmp/4afe1e08-cb33-4c5e-8b68-c30da70169d7_buggy.java b/tmp/fa891842-0da9-46d3-a5de-0e716296881b_fixed.java
index 25c13b3..174bda3 100644
--- a/tmp/4afe1e08-cb33-4c5e-8b68-c30da70169d7_buggy.java
+++ b/tmp/fa891842-0da9-46d3-a5de-0e716296881b_fixed.java
@@ -1,15 +1,23 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        
+        // Handle the case when degrees of freedom are too small
+        if (d <= 2.0) {
+            // Fallback to a reasonable value to avoid invalid endpoint parameters
+            ret = 1.0;
+        } else {
+            // Use mean for degrees of freedom greater than 2
             ret = d / (d - 2.0);
+        }
+        
         return ret;
     }
\ No newline at end of file
