diff --git a/tmp/21ebd4d7-288f-473c-8ff9-08d0d67553ca_buggy.java b/tmp/f03a092f-0591-4759-bb02-6d00b0793c4c_fixed.java
index 46817a7..a252b14 100644
--- a/tmp/21ebd4d7-288f-473c-8ff9-08d0d67553ca_buggy.java
+++ b/tmp/f03a092f-0591-4759-bb02-6d00b0793c4c_fixed.java
@@ -1,16 +1,29 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
+  
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+  RecordType thatRecordType = that.toMaybeRecordType();
+  
+  // Add common properties with equivalent types from both records
   for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+    if (thatRecordType.hasProperty(property) &&
+        thatRecordType.getPropertyType(property).isEquivalentTo(
             getPropertyType(property))) {
       builder.addProperty(property, getPropertyType(property),
           getPropertyNode(property));
     }
   }
+  
+  // Add properties from 'that' record that are not in 'this' record
+  for (String property : thatRecordType.getProperties()) {
+    if (!properties.containsKey(property)) {
+      builder.addProperty(property, thatRecordType.getPropertyType(property),
+          thatRecordType.getPropertyNode(property));
+    }
+  }
+  
   return builder.build();
 }
\ No newline at end of file
