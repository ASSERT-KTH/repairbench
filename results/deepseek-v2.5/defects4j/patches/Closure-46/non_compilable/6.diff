diff --git a/tmp/1cddbbcc-d999-428a-b20e-4a989d17341f_buggy.java b/tmp/bf3c8320-8ed4-4b14-bc17-0cdd95e77acb_fixed.java
index 46817a7..c36cbea 100644
--- a/tmp/1cddbbcc-d999-428a-b20e-4a989d17341f_buggy.java
+++ b/tmp/bf3c8320-8ed4-4b14-bc17-0cdd95e77acb_fixed.java
@@ -1,16 +1,34 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
+
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+  Set<String> allProperties = new HashSet<>(properties.keySet());
+  allProperties.addAll(that.toMaybeRecordType().getOwnPropertyNames());
+
+  boolean hasDifferences = false;
+  for (String property : allProperties) {
+    JSType thisPropertyType = getPropertyType(property);
+    JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+
+    if (thisPropertyType != null && thatPropertyType != null) {
+      builder.addProperty(property, registry.createUnionType(thisPropertyType, thatPropertyType), getPropertyNode(property));
+    } else if (thisPropertyType != null) {
+      builder.addProperty(property, thisPropertyType, getPropertyNode(property));
+    } else if (thatPropertyType != null) {
+      builder.addProperty(property, thatPropertyType, that.toMaybeRecordType().getPropertyNode(property));
     }
+
+    if (thisPropertyType == null || thatPropertyType == null || !thisPropertyType.isEquivalentTo(thatPropertyType)) {
+      hasDifferences = true;
     }
+  }
+
+  if (hasDifferences) {
+    return registry.createUnionType(this, that);
+  }
+
   return builder.build();
 }
\ No newline at end of file
