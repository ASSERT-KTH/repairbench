diff --git a/tmp/18048e1a-cfb2-412c-9500-8533fd50f757_buggy.java b/tmp/180679ff-40c5-4be1-af1c-389c74d6ca9d_fixed.java
index 46817a7..a1d4a32 100644
--- a/tmp/18048e1a-cfb2-412c-9500-8533fd50f757_buggy.java
+++ b/tmp/180679ff-40c5-4be1-af1c-389c74d6ca9d_fixed.java
@@ -1,16 +1,33 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+  Map<String, JSType> propertiesToAdd = new HashMap<>();
+
+  // Add properties from this record type
   for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    propertiesToAdd.put(property, getPropertyType(property));
   }
+
+  // Add properties from the other record type
+  for (String property : that.toMaybeRecordType().getProperties()) {
+    if (!propertiesToAdd.containsKey(property)) {
+      propertiesToAdd.put(property, that.toMaybeRecordType().getPropertyType(property));
+    } else {
+      JSType thisPropertyType = propertiesToAdd.get(property);
+      JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+      if (!thisPropertyType.isEquivalentTo(thatPropertyType)) {
+        propertiesToAdd.put(property, registry.createUnionType(thisPropertyType, thatPropertyType));
       }
+    }
+  }
+
+  // Build the new record type
+  for (Map.Entry<String, JSType> entry : propertiesToAdd.entrySet()) {
+    builder.addProperty(entry.getKey(), entry.getValue(), getPropertyNode(entry.getKey()));
+  }
+
   return builder.build();
 }
\ No newline at end of file
