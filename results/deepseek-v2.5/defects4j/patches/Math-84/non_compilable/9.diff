diff --git a/tmp/fa40acce-0597-4335-973b-55638008fde1_buggy.java b/tmp/ae51f536-563e-4187-b2ab-fe153a11a741_fixed.java
index 5f1dcf2..5e7eedc 100644
--- a/tmp/fa40acce-0597-4335-973b-55638008fde1_buggy.java
+++ b/tmp/ae51f536-563e-4187-b2ab-fe153a11a741_fixed.java
@@ -1,41 +1,50 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
+            // Check convergence after accepting the reflected simplex
+            if (getConvergenceChecker().converged(getIterations(), simplex, original)) {
                 return;
-
+            }
+            continue;
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
 
-            // check convergence
+            // Check convergence after accepting the contracted simplex
+            if (getConvergenceChecker().converged(getIterations(), simplex, original)) {
                 return;
             }
-
+            continue;
         }
 
+        // Check convergence at the end of each iteration
+        if (getConvergenceChecker().converged(getIterations(), simplex, original)) {
+            return;
+        }
+    }
 }
\ No newline at end of file
