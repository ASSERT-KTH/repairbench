diff --git a/tmp/35007d7f-12f5-4de6-864b-13a59ca417a0_buggy.java b/tmp/f810ad7e-64fa-4f52-8582-8f767875ca21_fixed.java
index 5f1dcf2..6f41d28 100644
--- a/tmp/35007d7f-12f5-4de6-864b-13a59ca417a0_buggy.java
+++ b/tmp/f810ad7e-64fa-4f52-8582-8f767875ca21_fixed.java
@@ -1,41 +1,62 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
-            // save the original vertex
+        // Save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
-            // perform a reflection step
+        // Perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
-                // compute the expanded simplex
+            // Compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
+                // Accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
+            // Check convergence
+            if (isConverged(comparator)) {
                 return;
+            }
 
+            continue; // Continue the loop if not converged
         }
 
-            // compute the contracted simplex
+        // Compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
+            // Accept the contracted simplex
 
-            // check convergence
+            // Check convergence
+            if (isConverged(comparator)) {
                 return;
             }
 
+            continue; // Continue the loop if not converged
         }
 
+        // Check for maximum iterations
+        if (getIterations() >= getMaxIterations()) {
+            throw new OptimizationException(new MaxIterationsExceededException(getMaxIterations()));
+        }
+    }
+}
+
+// Helper method to check convergence
+private boolean isConverged(final Comparator<RealPointValuePair> comparator) {
+    for (int i = 0; i < simplex.length; i++) {
+        if (comparator.compare(simplex[i], simplex[0]) != 0) {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
