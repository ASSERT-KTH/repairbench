diff --git a/tmp/1194ec53-ca2a-4c3d-b348-737753fe05f9_buggy.java b/tmp/1036c21a-2a3a-4546-8745-fb4ab5a01af5_fixed.java
index 822447c..bfff28b 100644
--- a/tmp/1194ec53-ca2a-4c3d-b348-737753fe05f9_buggy.java
+++ b/tmp/1036c21a-2a3a-4546-8745-fb4ab5a01af5_fixed.java
@@ -1,37 +1,40 @@
     /**
      * <p>
      * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
      * passed.
      * </p>
      * 
      * @param writer
      *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
      * @param str
      *            The <code>String</code> to escape. Assumed to be a non-null value.
      * @throws IOException
      *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
      *             methods.
      * 
      * @see #escape(String)
      * @see Writer
      */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
         for (int i = 0; i < len; i++) {
             char c = str.charAt(i);
-            String entityName = this.entityName(c);
-            if (entityName == null) {
-                if (c > 0x7F) {
+            if (Character.isHighSurrogate(c) && i + 1 < len && Character.isLowSurrogate(str.charAt(i + 1))) {
+                // Handle surrogate pairs
+                char high = c;
+                char low = str.charAt(++i);
+                int codePoint = Character.toCodePoint(high, low);
+                writer.write("&#");
+                writer.write(Integer.toString(codePoint, 10));
+                writer.write(';');
+            } else if (c > 0x7F || c == '&' || c == '<' || c == '>' || c == '"' || c == '\'') {
+                // Handle single characters that need escaping
                 writer.write("&#");
                 writer.write(Integer.toString(c, 10));
                 writer.write(';');
             } else {
+                // Write the character as is
                 writer.write(c);
             }
-            } else {
-                writer.write('&');
-                writer.write(entityName);
-                writer.write(';');
-            }
         }
     }
\ No newline at end of file
