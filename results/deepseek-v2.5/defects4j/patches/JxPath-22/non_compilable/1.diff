diff --git a/tmp/c03c4f56-cd59-4000-9a26-41f8cfc01613_buggy.java b/tmp/9b5b63bc-e7ac-48a9-8326-ee932ac0e2f4_fixed.java
index 1bd0d7e..4b912c9 100644
--- a/tmp/c03c4f56-cd59-4000-9a26-41f8cfc01613_buggy.java
+++ b/tmp/9b5b63bc-e7ac-48a9-8326-ee932ac0e2f4_fixed.java
@@ -1,31 +1,27 @@
 /**
-     * Get the ns uri of the specified node.
-     * @param node Node to check
-     * @return String ns uri
+ * Multiply two values throwing an exception if overflow occurs.
+ * 
+ * @param val1  the first value
+ * @param val2  the second value
+ * @return the new total
+ * @throws ArithmeticException if the value is too big or too small
+ * @since 1.2
  */
-    public static String getNamespaceURI(Node node) {
-        if (node instanceof Document) {
-            node = ((Document) node).getDocumentElement();
+public static long safeMultiply(long val1, int val2) {
+    switch (val2) {
+        case -1:
+            if (val1 == Long.MIN_VALUE) {
+                throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
             }
-
-        Element element = (Element) node;
-
-        String uri = element.getNamespaceURI();
-        if (uri == null) {
-            String prefix = getPrefix(node);
-            String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
-    
-            Node aNode = node;
-            while (aNode != null) {
-                if (aNode.getNodeType() == Node.ELEMENT_NODE) {
-                    Attr attr = ((Element) aNode).getAttributeNode(qname);
-                    if (attr != null) {
-                        return attr.getValue();
+            return -val1;
+        case 0:
+            return 0L;
+        case 1:
+            return val1;
     }
+    long total = val1 * val2;
+    if (val2 != 0 && total / val2 != val1) {
+      throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
-                aNode = aNode.getParentNode();
-            }
-            return null;
-        }
-        return uri;
+    return total;
 }
\ No newline at end of file
