diff --git a/tmp/e4304780-6626-41de-8a88-1abf7ad15b19_buggy.java b/tmp/04d8f637-e994-4591-8181-5900c0dcdfd9_fixed.java
index 1bd0d7e..75e77d1 100644
--- a/tmp/e4304780-6626-41de-8a88-1abf7ad15b19_buggy.java
+++ b/tmp/04d8f637-e994-4591-8181-5900c0dcdfd9_fixed.java
@@ -1,31 +1,29 @@
     /**
-     * Get the ns uri of the specified node.
-     * @param node Node to check
-     * @return String ns uri
+     * Multiply two values throwing an exception if overflow occurs.
+     * 
+     * @param val1  the first value
+     * @param val2  the second value
+     * @return the new total
+     * @throws ArithmeticException if the value is too big or too small
+     * @since 1.2
      */
-    public static String getNamespaceURI(Node node) {
-        if (node instanceof Document) {
-            node = ((Document) node).getDocumentElement();
+    public static long safeMultiply(long val1, int val2) {
+        if (val2 == 0) {
+            return 0L;
         }
-
-        Element element = (Element) node;
-
-        String uri = element.getNamespaceURI();
-        if (uri == null) {
-            String prefix = getPrefix(node);
-            String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
-    
-            Node aNode = node;
-            while (aNode != null) {
-                if (aNode.getNodeType() == Node.ELEMENT_NODE) {
-                    Attr attr = ((Element) aNode).getAttributeNode(qname);
-                    if (attr != null) {
-                        return attr.getValue();
+        if (val2 == 1) {
+            return val1;
         }
+        if (val2 == -1) {
+            if (val1 == Long.MIN_VALUE) {
+                throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
             }
-                aNode = aNode.getParentNode();
+            return -val1;
         }
-            return null;
+        
+        long total = val1 * val2;
+        if (val1 != 0 && total / val2 != val1) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
         }
-        return uri;
+        return total;
     }
\ No newline at end of file
