diff --git a/tmp/25fa3bd6-d1a4-4f5e-a58f-51e833039412_buggy.java b/tmp/b702acff-0d25-4ba5-8056-93c99fc6e028_fixed.java
index e3e3ec4..6a8d67c 100644
--- a/tmp/25fa3bd6-d1a4-4f5e-a58f-51e833039412_buggy.java
+++ b/tmp/b702acff-0d25-4ba5-8056-93c99fc6e028_fixed.java
@@ -1,9 +1,21 @@
     /**
      * {@inheritDoc}
      *
      * For population size {@code N}, number of successes {@code m}, and sample
      * size {@code n}, the mean is {@code n * m / N}.
      */
     public double getNumericalMean() {
-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
+        int sampleSize = getSampleSize();
+        int numberOfSuccesses = getNumberOfSuccesses();
+        int populationSize = getPopulationSize();
+
+        // Check for overflow before performing the multiplication
+        if (sampleSize > 0 && numberOfSuccesses > 0 && populationSize > 0 &&
+            sampleSize <= populationSize && numberOfSuccesses <= populationSize &&
+            sampleSize <= Integer.MAX_VALUE / numberOfSuccesses) {
+            return (double) (sampleSize * numberOfSuccesses) / (double) populationSize;
+        } else {
+            // Handle the case where overflow might occur or other invalid cases
+            return Double.NaN;
+        }
     }
\ No newline at end of file
