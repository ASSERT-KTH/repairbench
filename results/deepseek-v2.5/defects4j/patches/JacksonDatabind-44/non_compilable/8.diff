diff --git a/tmp/2a892dd9-27fb-4fb6-b4ac-619b10a43f1c_buggy.java b/tmp/22171e5f-adeb-4dea-8485-3bdd240d2623_fixed.java
index 1a63a66..b452363 100644
--- a/tmp/2a892dd9-27fb-4fb6-b4ac-619b10a43f1c_buggy.java
+++ b/tmp/22171e5f-adeb-4dea-8485-3bdd240d2623_fixed.java
@@ -1,21 +1,15 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+    // Ensure that the new SimpleType instance includes all necessary information to deserialize the subclass
+    TypeBindings bindings = _bindings.childInstance(subclass);
+    List<ResolvedType> superInterfaces = new ArrayList<>(_superInterfaces);
+    superInterfaces.add(subclass);
+
+    return new SimpleType(subclass, bindings, this, superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
