diff --git a/tmp/3491d2ef-691f-4f27-90d2-68ec18a893a0_buggy.java b/tmp/fbb0b9cb-8152-438b-9e2e-9cb4fe1def9d_fixed.java
index 21f64c6..51aab45 100644
--- a/tmp/3491d2ef-691f-4f27-90d2-68ec18a893a0_buggy.java
+++ b/tmp/fbb0b9cb-8152-438b-9e2e-9cb4fe1def9d_fixed.java
@@ -1,23 +1,29 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
+        int seqLength = seq.length();
+
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
+
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                int i = offset + 1;
+                int j = 1;
+                while (i < length && j < seqLength && seq.charAt(j) == input[i]) {
+                    i++;
+                    j++;
+                }
+                if (j == seqLength) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
