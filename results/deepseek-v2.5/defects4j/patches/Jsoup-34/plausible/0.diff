diff --git a/tmp/df957e98-7e4c-4bb2-a6a9-8bd7190f6e99_buggy.java b/tmp/8155e96e-978f-4716-9060-82ecb98d12a5_fixed.java
index 21f64c6..c95bbff 100644
--- a/tmp/df957e98-7e4c-4bb2-a6a9-8bd7190f6e99_buggy.java
+++ b/tmp/8155e96e-978f-4716-9060-82ecb98d12a5_fixed.java
@@ -1,23 +1,24 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
+            // scan to first instance of startChar:
             if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                continue;
+            int i = offset;
+            int j = 0;
+            while (j < seq.length() && i < length && seq.charAt(j) == input[i]) {
+                i++;
+                j++;
+            }
+            if (j == seq.length()) // found full sequence
                 return offset - pos;
         }
-        }
         return -1;
     }
\ No newline at end of file
