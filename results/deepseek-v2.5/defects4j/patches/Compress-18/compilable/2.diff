diff --git a/tmp/ef691908-5d8f-4f54-ba2a-37c8aa296d00_buggy.java b/tmp/f231bd00-860d-4991-97be-edcfb104b0c3_fixed.java
index 08093b4..eac53f2 100644
--- a/tmp/ef691908-5d8f-4f54-ba2a-37c8aa296d00_buggy.java
+++ b/tmp/f231bd00-860d-4991-97be-edcfb104b0c3_fixed.java
@@ -1,42 +1,42 @@
 /**
  * Writes a PAX extended header with the given map as contents.
  * @since 1.4
  */
-    void writePaxHeaders(String entryName,
-                         Map<String, String> headers) throws IOException {
+void writePaxHeaders(String entryName, Map<String, String> headers) throws IOException {
     String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
     // TarEntry's constructor would think this is a directory
     // and not allow any data to be written
     if (name.length() >= TarConstants.NAMELEN) {
         name = name.substring(0, TarConstants.NAMELEN - 1);
     }
-        TarArchiveEntry pex = new TarArchiveEntry(name,
-                                                  TarConstants.LF_PAX_EXTENDED_HEADER_LC);
+    TarArchiveEntry pex = new TarArchiveEntry(name, TarConstants.LF_PAX_EXTENDED_HEADER_LC);
 
     StringWriter w = new StringWriter();
     for (Map.Entry<String, String> h : headers.entrySet()) {
         String key = h.getKey();
         String value = h.getValue();
         int len = key.length() + value.length()
             + 3 /* blank, equals and newline */
             + 2 /* guess 9 < actual length < 100 */;
         String line = len + " " + key + "=" + value + "\n";
         int actualLength = line.getBytes(CharsetNames.UTF_8).length;
         while (len != actualLength) {
             // Adjust for cases where length < 10 or > 100
             // or where UTF-8 encoding isn't a single octet
             // per character.
             // Must be in loop as size may go from 99 to 100 in
             // first pass so we'd need a second.
             len = actualLength;
             line = len + " " + key + "=" + value + "\n";
             actualLength = line.getBytes(CharsetNames.UTF_8).length;
         }
         w.write(line);
     }
     byte[] data = w.toString().getBytes(CharsetNames.UTF_8);
     pex.setSize(data.length);
+    // Ensure the entry is not marked as a directory before setting the size
+    pex.setIds(0, 0);
     putArchiveEntry(pex);
     write(data);
     closeArchiveEntry();
 }
\ No newline at end of file
