diff --git a/tmp/619f2c56-fee7-4dac-ab9a-0f238074c7e2_buggy.java b/tmp/7a21fb0f-d8eb-40ff-a994-45c000c51d90_fixed.java
index e7bb994..27b86fd 100644
--- a/tmp/619f2c56-fee7-4dac-ab9a-0f238074c7e2_buggy.java
+++ b/tmp/7a21fb0f-d8eb-40ff-a994-45c000c51d90_fixed.java
@@ -1,102 +1,104 @@
     /**
      * Returns the range for the specified axis.
      *
      * @param axis  the axis.
      *
      * @return The range.
      */
     public Range getDataRange(ValueAxis axis) {
 
         Range result = null;
         List mappedDatasets = new ArrayList();
         List includedAnnotations = new ArrayList();
         boolean isDomainAxis = true;
 
         // is it a domain axis?
         int domainIndex = getDomainAxisIndex(axis);
         if (domainIndex >= 0) {
             isDomainAxis = true;
             mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
                     new Integer(domainIndex)));
             if (domainIndex == 0) {
                 // grab the plot's annotations
                 Iterator iterator = this.annotations.iterator();
                 while (iterator.hasNext()) {
                     XYAnnotation annotation = (XYAnnotation) iterator.next();
                     if (annotation instanceof XYAnnotationBoundsInfo) {
                         includedAnnotations.add(annotation);
                     }
                 }
             }
         }
 
         // or is it a range axis?
         int rangeIndex = getRangeAxisIndex(axis);
         if (rangeIndex >= 0) {
             isDomainAxis = false;
             mappedDatasets.addAll(getDatasetsMappedToRangeAxis(
                     new Integer(rangeIndex)));
             if (rangeIndex == 0) {
                 Iterator iterator = this.annotations.iterator();
                 while (iterator.hasNext()) {
                     XYAnnotation annotation = (XYAnnotation) iterator.next();
                     if (annotation instanceof XYAnnotationBoundsInfo) {
                         includedAnnotations.add(annotation);
                     }
                 }
             }
         }
 
         // iterate through the datasets that map to the axis and get the union
         // of the ranges.
         Iterator iterator = mappedDatasets.iterator();
         while (iterator.hasNext()) {
             XYDataset d = (XYDataset) iterator.next();
             if (d != null) {
                 XYItemRenderer r = getRendererForDataset(d);
                 if (isDomainAxis) {
                     if (r != null) {
                         result = Range.combine(result, r.findDomainBounds(d));
                     }
                     else {
                         result = Range.combine(result,
                                 DatasetUtilities.findDomainBounds(d));
                     }
                 }
                 else {
                     if (r != null) {
                         result = Range.combine(result, r.findRangeBounds(d));
                     }
                     else {
                         result = Range.combine(result,
                                 DatasetUtilities.findRangeBounds(d));
                     }
                 }
                 
+                // Ensure the renderer is not null before accessing its annotations
+                if (r != null) {
                     Collection c = r.getAnnotations();
                     Iterator i = c.iterator();
                     while (i.hasNext()) {
                         XYAnnotation a = (XYAnnotation) i.next();
                         if (a instanceof XYAnnotationBoundsInfo) {
                             includedAnnotations.add(a);
                         }
                     }
                 }
             }
+        }
 
         Iterator it = includedAnnotations.iterator();
         while (it.hasNext()) {
             XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();
             if (xyabi.getIncludeInDataBounds()) {
                 if (isDomainAxis) {
                     result = Range.combine(result, xyabi.getXRange());
                 }
                 else {
                     result = Range.combine(result, xyabi.getYRange());
                 }
             }
         }
 
         return result;
-
     }
\ No newline at end of file
