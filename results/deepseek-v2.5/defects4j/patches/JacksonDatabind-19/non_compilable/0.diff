diff --git a/tmp/026dc4c2-63e3-4070-9aa4-cc08d37ffccb_buggy.java b/tmp/c3658bd4-8e43-41eb-86f8-5dd824fa3d2a_fixed.java
index 1bec4d6..1c1007a 100644
--- a/tmp/026dc4c2-63e3-4070-9aa4-cc08d37ffccb_buggy.java
+++ b/tmp/c3658bd4-8e43-41eb-86f8-5dd824fa3d2a_fixed.java
@@ -1,14 +1,18 @@
 private JavaType _mapType(Class<?> rawClass)
 {
-        // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    // Properties are special, as per [databind#810]
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
+    if (rawClass == Properties.class) {
+        // Properties are special and should always have String key and value types
+        return MapType.construct(rawClass, TypeFactory.unknownType(), TypeFactory.unknownType()).withKeyType(TypeFactory.defaultInstance().constructType(String.class)).withContentType(TypeFactory.defaultInstance().constructType(String.class));
+    }
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
