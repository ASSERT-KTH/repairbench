diff --git a/tmp/a1c44af1-adff-46c6-b7c3-518d252154bb_buggy.java b/tmp/1a7ef20b-5b44-4c60-822d-04ad02688e36_fixed.java
index 1bec4d6..20d36c8 100644
--- a/tmp/a1c44af1-adff-46c6-b7c3-518d252154bb_buggy.java
+++ b/tmp/1a7ef20b-5b44-4c60-822d-04ad02688e36_fixed.java
@@ -1,14 +1,20 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
-        JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
+    JavaType[] typeParams;
+    if (rawClass == Properties.class) {
+        // Special handling for Properties: it should be treated as a Map<String, String>
+        typeParams = new JavaType[] { _typeFactory.constructType(String.class), _typeFactory.constructType(String.class) };
+    } else {
+        typeParams = findTypeParameters(rawClass, Map.class);
+    }
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
