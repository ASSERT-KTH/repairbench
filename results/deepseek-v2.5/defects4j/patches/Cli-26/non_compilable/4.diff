diff --git a/tmp/487b1fb9-2d6f-4bfa-b1ee-79e22a7e48bd_buggy.java b/tmp/5cfcae73-3442-4ab0-a554-58c46e224b54_fixed.java
index cc69d41..951d936 100644
--- a/tmp/487b1fb9-2d6f-4bfa-b1ee-79e22a7e48bd_buggy.java
+++ b/tmp/5cfcae73-3442-4ab0-a554-58c46e224b54_fixed.java
@@ -1,29 +1,49 @@
 /**
  * Create an Option using the current settings and with
  * the specified Option <code>char</code>.
  *
  * @param opt the <code>java.lang.String</code> representation
  * of the Option
  * @return the Option instance
  * @throws IllegalArgumentException if <code>opt</code> is not
  * a valid character.  See Option.
  */
 public static Option create(String opt) throws IllegalArgumentException
 {
-            // create the option
-        Option option = new Option(opt, description);
+    // Validate the option character
+    if (opt == null || opt.length() == 0) {
+        throw new IllegalArgumentException("opt is null or empty");
+    }
 
-            // set the option properties
-            option.setLongOpt(longopt);
-            option.setRequired(required);
-            option.setOptionalArg(optionalArg);
-            option.setArgs(numberOfArgs);
-            option.setType(type);
-            option.setValueSeparator(valuesep);
-            option.setArgName(argName);
-            // reset the OptionBuilder properties
+    // Create the option
+    Option option = new Option(opt, OptionBuilder.description);
+
+    // Set the option properties only if they are set in OptionBuilder
+    if (OptionBuilder.longopt != null) {
+        option.setLongOpt(OptionBuilder.longopt);
+    }
+    if (OptionBuilder.required != null) {
+        option.setRequired(OptionBuilder.required);
+    }
+    if (OptionBuilder.optionalArg != null) {
+        option.setOptionalArg(OptionBuilder.optionalArg);
+    }
+    if (OptionBuilder.numberOfArgs != null) {
+        option.setArgs(OptionBuilder.numberOfArgs);
+    }
+    if (OptionBuilder.type != null) {
+        option.setType(OptionBuilder.type);
+    }
+    if (OptionBuilder.valuesep != null) {
+        option.setValueSeparator(OptionBuilder.valuesep);
+    }
+    if (OptionBuilder.argName != null) {
+        option.setArgName(OptionBuilder.argName);
+    }
+
+    // Reset the OptionBuilder properties
     OptionBuilder.reset();
 
-        // return the Option instance
+    // Return the Option instance
     return option;
 }
\ No newline at end of file
