diff --git a/tmp/2bdd464c-503d-44e1-b018-daf5dd862d29_buggy.java b/tmp/06a192ca-b3cd-4f70-af94-a91c82284575_fixed.java
index cc69d41..0d47675 100644
--- a/tmp/2bdd464c-503d-44e1-b018-daf5dd862d29_buggy.java
+++ b/tmp/06a192ca-b3cd-4f70-af94-a91c82284575_fixed.java
@@ -1,29 +1,40 @@
     /**
      * Create an Option using the current settings and with
      * the specified Option <code>char</code>.
      *
      * @param opt the <code>java.lang.String</code> representation
      * of the Option
      * @return the Option instance
      * @throws IllegalArgumentException if <code>opt</code> is not
      * a valid character.  See Option.
      */
     public static Option create(String opt) throws IllegalArgumentException
     {
+        // Get the properties from the OptionBuilder
+        String description = OptionBuilder.getDescription();
+        String longopt = OptionBuilder.getLongOpt();
+        boolean required = OptionBuilder.isRequired();
+        boolean optionalArg = OptionBuilder.hasOptionalArg();
+        int numberOfArgs = OptionBuilder.getArgs();
+        Object type = OptionBuilder.getType();
+        char valuesep = OptionBuilder.getValueSeparator();
+        String argName = OptionBuilder.getArgName();
+
         // create the option
         Option option = new Option(opt, description);
 
         // set the option properties
         option.setLongOpt(longopt);
         option.setRequired(required);
         option.setOptionalArg(optionalArg);
         option.setArgs(numberOfArgs);
         option.setType(type);
         option.setValueSeparator(valuesep);
         option.setArgName(argName);
+        
         // reset the OptionBuilder properties
         OptionBuilder.reset();
 
         // return the Option instance
         return option;
     }
\ No newline at end of file
