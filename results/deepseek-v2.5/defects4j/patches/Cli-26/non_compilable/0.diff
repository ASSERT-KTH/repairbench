diff --git a/tmp/f1a7cc1b-860b-4d93-83d9-c9c3c0fec312_buggy.java b/tmp/5afe7b4f-5361-4ad1-babe-6c74fd75be31_fixed.java
index cc69d41..b3e7327 100644
--- a/tmp/f1a7cc1b-860b-4d93-83d9-c9c3c0fec312_buggy.java
+++ b/tmp/5afe7b4f-5361-4ad1-babe-6c74fd75be31_fixed.java
@@ -1,29 +1,29 @@
     /**
      * Create an Option using the current settings and with
      * the specified Option <code>char</code>.
      *
      * @param opt the <code>java.lang.String</code> representation
      * of the Option
      * @return the Option instance
      * @throws IllegalArgumentException if <code>opt</code> is not
      * a valid character.  See Option.
      */
     public static Option create(String opt) throws IllegalArgumentException
     {
             // create the option
-        Option option = new Option(opt, description);
+        Option option = new Option(opt, OptionBuilder.getDescription());
 
             // set the option properties
-            option.setLongOpt(longopt);
-            option.setRequired(required);
-            option.setOptionalArg(optionalArg);
-            option.setArgs(numberOfArgs);
-            option.setType(type);
-            option.setValueSeparator(valuesep);
-            option.setArgName(argName);
+            option.setLongOpt(OptionBuilder.getLongOpt());
+            option.setRequired(OptionBuilder.isRequired());
+            option.setOptionalArg(OptionBuilder.hasOptionalArg());
+            option.setArgs(OptionBuilder.getArgs());
+            option.setType(OptionBuilder.getType());
+            option.setValueSeparator(OptionBuilder.getValueSeparator());
+            option.setArgName(OptionBuilder.getArgName());
             // reset the OptionBuilder properties
             OptionBuilder.reset();
 
         // return the Option instance
         return option;
     }
\ No newline at end of file
