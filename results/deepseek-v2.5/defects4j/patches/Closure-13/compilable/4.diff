diff --git a/tmp/5a9de45d-3ef2-4cc7-a12a-83bddc1adc9d_buggy.java b/tmp/ea31ed85-d964-41dd-844e-9bf22cf31aa5_fixed.java
index b5d94e0..3eb52c8 100644
--- a/tmp/5a9de45d-3ef2-4cc7-a12a-83bddc1adc9d_buggy.java
+++ b/tmp/ea31ed85-d964-41dd-844e-9bf22cf31aa5_fixed.java
@@ -1,26 +1,35 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
+    boolean shouldReiterate = false;
+
     do {
       Node c = node.getFirstChild();
       while (c != null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+      Preconditions.checkState(visits < 10000, "too many iterations");
+
+      // Check if we need to re-traverse the node
+      shouldReiterate = shouldRetraverse(node);
+      if (shouldReiterate) {
+        // Reset the visit count if we are going to re-traverse
+        visits = 0;
+      }
+    } while (shouldReiterate);
 
     exitNode(node);
   }
\ No newline at end of file
