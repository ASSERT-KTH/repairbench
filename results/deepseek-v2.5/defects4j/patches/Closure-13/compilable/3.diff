diff --git a/tmp/b08ea814-22e9-40bf-bbaf-2ca67f5629f4_buggy.java b/tmp/458be03f-ecdd-4f6a-8386-fc83b30cc3c6_fixed.java
index b5d94e0..30dd925 100644
--- a/tmp/b08ea814-22e9-40bf-bbaf-2ca67f5629f4_buggy.java
+++ b/tmp/458be03f-ecdd-4f6a-8386-fc83b30cc3c6_fixed.java
@@ -1,26 +1,33 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
+  boolean rerunVisit = false;
   do {
     Node c = node.getFirstChild();
     while(c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
+    // Only perform the visit once per loop iteration
+    // to avoid infinite recursion
+    if (!rerunVisit) {
       visit(node);
+      rerunVisit = true;
+    }
+
     visits++;
 
     Preconditions.checkState(visits < 10000, "too many interations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
