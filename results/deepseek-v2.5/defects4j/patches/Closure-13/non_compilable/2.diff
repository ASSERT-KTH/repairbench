diff --git a/tmp/701a3982-5785-46fe-ae8f-a36f8389c56c_buggy.java b/tmp/2892a038-e806-4ed4-aab0-fa095e51b42e_fixed.java
index b5d94e0..33d9ed7 100644
--- a/tmp/701a3982-5785-46fe-ae8f-a36f8389c56c_buggy.java
+++ b/tmp/2892a038-e806-4ed4-aab0-fa095e51b42e_fixed.java
@@ -1,26 +1,28 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
+  boolean hasChanges = false;
   do {
     Node c = node.getFirstChild();
     while(c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
-      visit(node);
+    // Visit the node and check if it has changes
+    hasChanges |= visit(node);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+    Preconditions.checkState(visits < 10000, "too many iterations");
+  } while (hasChanges && shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
