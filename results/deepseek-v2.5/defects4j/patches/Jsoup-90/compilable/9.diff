diff --git a/tmp/d0593ba7-adc7-446f-be8b-a3980918ef79_buggy.java b/tmp/99a11f47-4984-4da6-ad7a-a15f49765abf_fixed.java
index 373b1e8..1b7061a 100644
--- a/tmp/d0593ba7-adc7-446f-be8b-a3980918ef79_buggy.java
+++ b/tmp/99a11f47-4984-4da6-ad7a-a15f49765abf_fixed.java
@@ -1,37 +1,36 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
-            int end;
     for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+        int o = input[i] & 0xFF;
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
         // UTF-8 leading:
         if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
+            if (i + 1 >= j || (input[i + 1] & 0xC0) != 0x80) {
+                return false;
+            }
+            i += 1;
         } else if ((o & 0xF0) == 0xE0) {
-                    end = i + 2;
+            if (i + 2 >= j || (input[i + 1] & 0xC0) != 0x80 || (input[i + 2] & 0xC0) != 0x80) {
+                return false;
+            }
+            i += 2;
         } else if ((o & 0xF8) == 0xF0) {
-                    end = i + 3;
+            if (i + 3 >= j || (input[i + 1] & 0xC0) != 0x80 || (input[i + 2] & 0xC0) != 0x80 || (input[i + 3] & 0xC0) != 0x80) {
+                return false;
+            }
+            i += 3;
         } else {
             return false;
         }
-
-
-                while (i < end) {
-                    i++;
-                    o = input[i];
-                    if ((o & 0xC0) != 0x80) {
-                        return false;
-                    }
-                }
     }
     return true;
 }
\ No newline at end of file
