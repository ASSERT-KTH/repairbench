diff --git a/tmp/70dc5031-8a8d-43b4-a320-3e78438bda2b_buggy.java b/tmp/a43f0df5-a226-4dde-96a4-670a32d40665_fixed.java
index d57736b..c54a547 100644
--- a/tmp/70dc5031-8a8d-43b4-a320-3e78438bda2b_buggy.java
+++ b/tmp/a43f0df5-a226-4dde-96a4-670a32d40665_fixed.java
@@ -1,39 +1,30 @@
-  /**
-   * Suppose X is an object with inferred properties.
-   * Suppose also that X is used in a way where it would only type-check
-   * correctly if some of those properties are widened.
-   * Then we should be polite and automatically widen X's properties for him.
-   *
-   * For a concrete example, consider:
-   * param x {{prop: (number|undefined)}}
-   * function f(x) {}
-   * f({});
-   *
-   * If we give the anonymous object an inferred property of (number|undefined),
-   * then this code will type-check appropriately.
-   */
 private void inferPropertyTypesToMatchConstraint(
     JSType type, JSType constraint) {
   if (type == null || constraint == null) {
     return;
   }
 
   ObjectType constraintObj =
       ObjectType.cast(constraint.restrictByNotNullOrUndefined());
   if (constraintObj != null && constraintObj.isRecordType()) {
     ObjectType objType = ObjectType.cast(type.restrictByNotNullOrUndefined());
     if (objType != null) {
       for (String prop : constraintObj.getOwnPropertyNames()) {
         JSType propType = constraintObj.getPropertyType(prop);
         if (!objType.isPropertyTypeDeclared(prop)) {
           JSType typeToInfer = propType;
           if (!objType.hasProperty(prop)) {
             typeToInfer =
                 getNativeType(VOID_TYPE).getLeastSupertype(propType);
           }
+          // Check if the property is already inferred with a narrower type
+          JSType existingInferredType = objType.getImplicitPrototype().getPropertyType(prop);
+          if (existingInferredType != null) {
+            typeToInfer = typeToInfer.getLeastSupertype(existingInferredType);
+          }
           objType.defineInferredProperty(prop, typeToInfer, null);
         }
       }
     }
   }
 }
\ No newline at end of file
