diff --git a/tmp/0108f25a-e3fc-4210-aaaf-b60e0374490a_buggy.java b/tmp/9bf67304-3711-4dc7-8d84-046397d899d9_fixed.java
index c222270..417c841 100644
--- a/tmp/0108f25a-e3fc-4210-aaaf-b60e0374490a_buggy.java
+++ b/tmp/9bf67304-3711-4dc7-8d84-046397d899d9_fixed.java
@@ -1,7 +1,16 @@
 public Object generateId(Object forPojo) {
-        // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of
-        //    id being generated for "alwaysAsId", but not being written as POJO; regardless,
-        //    need to use existing id if there is one:
+    // Declare the variable 'id' to store the generated ID
+    Object id;
+    // Check if the generated ID is for an "alwaysAsId" case
+    if (generator instanceof IdGenerator && ((IdGenerator) generator).isAlwaysAsId(forPojo)) {
+        // Use the existing ID if available, otherwise generate a new one
+        id = ((IdGenerator) generator).getExistingId(forPojo);
+        if (id == null) {
             id = generator.generateId(forPojo);
+        }
+    } else {
+        // Generate a new ID if not an "alwaysAsId" case
+        id = generator.generateId(forPojo);
+    }
     return id;
 }
\ No newline at end of file
