diff --git a/tmp/ac51005b-ba73-4de0-a765-a3f108d08c85_buggy.java b/tmp/e3614b0e-2175-49cb-8830-8de6cf2a5737_fixed.java
index be2af16..5d326a6 100644
--- a/tmp/ac51005b-ba73-4de0-a765-a3f108d08c85_buggy.java
+++ b/tmp/e3614b0e-2175-49cb-8830-8de6cf2a5737_fixed.java
@@ -1,29 +1,37 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    } catch (IllegalFieldValueException e) {
+        // If GregorianChronology throws an exception, try JulianChronology
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
+        if (instant < iCutoverMillis) {
+            return instant;
+        } else {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
+    if (instant < iCutoverMillis) {
         return instant;
+    } else {
+        // Okay, it's in the illegal cutover gap.
+        throw new IllegalArgumentException("Specified date does not exist");
+    }
 }
\ No newline at end of file
