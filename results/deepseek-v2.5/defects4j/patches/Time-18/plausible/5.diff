diff --git a/tmp/466d4d7e-565a-420c-bd10-e49a65539a96_buggy.java b/tmp/18334abb-e953-4673-8f0c-b7098d81eb7f_fixed.java
index be2af16..637c510 100644
--- a/tmp/466d4d7e-565a-420c-bd10-e49a65539a96_buggy.java
+++ b/tmp/18334abb-e953-4673-8f0c-b7098d81eb7f_fixed.java
@@ -1,29 +1,44 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    } catch (IllegalFieldValueException e) {
+        // If Gregorian throws an exception, try Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        return instant;
+    }
+
+    if (instant < iCutoverMillis) {
+        // Maybe it's Julian.
+        long julianInstant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (julianInstant < iCutoverMillis) {
+            instant = julianInstant;
+        } else if (julianInstant >= iCutoverMillis) {
+            // Okay, it's in the illegal cutover gap.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
     }
     return instant;
 }
\ No newline at end of file
