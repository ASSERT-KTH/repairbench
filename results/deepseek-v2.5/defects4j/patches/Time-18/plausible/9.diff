diff --git a/tmp/bd8f8d2e-cfa2-463f-ada1-a243dd2e150a_buggy.java b/tmp/f805b775-de1b-408c-8d92-0ec2a49137dc_fixed.java
index be2af16..6326314 100644
--- a/tmp/bd8f8d2e-cfa2-463f-ada1-a243dd2e150a_buggy.java
+++ b/tmp/f805b775-de1b-408c-8d92-0ec2a49137dc_fixed.java
@@ -1,29 +1,45 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    } catch (IllegalArgumentException e) {
+        // If Gregorian throws an exception, try Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
+        if (instant < iCutoverMillis) {
+            return instant;
+        } else {
+            // If the Julian instant is still invalid, it must be out of range.
+            throw e;
+        }
+    }
+
+    if (instant < iCutoverMillis) {
+        // Maybe it's Julian.
+        long julianInstant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (julianInstant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
+        } else {
+            instant = julianInstant;
         }
     }
     return instant;
 }
\ No newline at end of file
