diff --git a/tmp/b4d8e6c6-cc2c-4abb-afe2-33feacf91e12_buggy.java b/tmp/bca74f0b-d591-4e2b-9626-334a3dda58a6_fixed.java
index be2af16..1998955 100644
--- a/tmp/b4d8e6c6-cc2c-4abb-afe2-33feacf91e12_buggy.java
+++ b/tmp/bca74f0b-d591-4e2b-9626-334a3dda58a6_fixed.java
@@ -1,29 +1,38 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    try {
+        instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    } catch (IllegalFieldValueException e) {
+        // If Gregorian throws an exception, try Julian
+        instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant >= iCutoverMillis) {
+            // If Julian instant is in the cutover period, throw the exception from Gregorian
+            throw e;
+        }
+        return instant;
+    }
+
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+        instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
                                                       hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
