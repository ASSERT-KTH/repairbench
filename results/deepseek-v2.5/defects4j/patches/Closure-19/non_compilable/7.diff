diff --git a/tmp/5dbcd125-c76c-4770-b259-b01df5a8b022_buggy.java b/tmp/57103dda-a078-4885-ac28-1e1abc5816ff_fixed.java
index fa42cd9..4e27030 100644
--- a/tmp/5dbcd125-c76c-4770-b259-b01df5a8b022_buggy.java
+++ b/tmp/57103dda-a078-4885-ac28-1e1abc5816ff_fixed.java
@@ -1,27 +1,6 @@
-  /**
-   * Declares a refined type in {@code scope} for the name represented by
-   * {@code node}. It must be possible to refine the type of the given node in
-   * the given scope, as determined by {@link #getTypeIfRefinable}.
-   */
-  protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
-    switch (node.getType()) {
-      case Token.NAME:
-        scope.inferSlotType(node.getString(), type);
-        break;
-
-      case Token.GETPROP:
-        String qualifiedName = node.getQualifiedName();
-        Preconditions.checkNotNull(qualifiedName);
-
-        JSType origType = node.getJSType();
-        origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
-        scope.inferQualifiedSlot(node, qualifiedName, origType, type);
-        break;
-
-        // "this" references aren't currently modeled in the CFG.
-
-      default:
-        throw new IllegalArgumentException("Node cannot be refined. \n" +
-            node.toStringTree());
-    }
+private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
+    tb.insert(startTag);
+    tb.tokeniser.transition(TokeniserState.Rawtext);
+    tb.markInsertionMode();
+    tb.transition(HtmlTreeBuilderState.Text);
 }
\ No newline at end of file
