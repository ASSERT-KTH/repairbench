diff --git a/tmp/f339d393-a78f-4eff-9a08-11a68ace88bc_buggy.java b/tmp/934a67ad-f997-4af9-801d-a5a3625867d9_fixed.java
index fecb896..a143e1e 100644
--- a/tmp/f339d393-a78f-4eff-9a08-11a68ace88bc_buggy.java
+++ b/tmp/934a67ad-f997-4af9-801d-a5a3625867d9_fixed.java
@@ -1,34 +1,30 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
         if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+            if (c == open) {
                 depth++;
                 if (start == -1)
                     start = pos;
-                }
-                else if (c.equals(close))
+            } else if (c == close) {
                 depth--;
+                if (depth == 0 && end == -1)
+                    end = pos; // mark the end of the balanced string
+            }
         }
-
-            if (depth > 0 && last != 0)
-                end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
-        return (end >= 0) ? queue.substring(start, end) : "";
+
+    // Ensure that the end position is valid and not within the balanced string
+    if (end == -1 || end <= start) {
+        return "";
+    }
+
+    return queue.substring(start, end);
 }
\ No newline at end of file
