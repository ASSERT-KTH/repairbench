diff --git a/tmp/446b8ae5-eb73-4270-867b-3d3053cc45d7_buggy.java b/tmp/9f9e2b54-71a1-44dd-b11f-78ccbd544ef2_fixed.java
index 0878b6b..c3c2b78 100644
--- a/tmp/446b8ae5-eb73-4270-867b-3d3053cc45d7_buggy.java
+++ b/tmp/9f9e2b54-71a1-44dd-b11f-78ccbd544ef2_fixed.java
@@ -1,3 +1,22 @@
-  public final boolean isEmptyType() {
-    return isNoType() || isNoObjectType() || isNoResolvedType();
+    /**
+     * For this distribution, X, this method returns P(X < <code>x</code>).
+     * @param x the value at which the CDF is evaluated.
+     * @return CDF evaluated at <code>x</code>. 
+     * @throws MathException if the algorithm fails to converge; unless
+     * x is more than 20 standard deviations from the mean, in which case the
+     * convergence exception is caught and 0 or 1 is returned.
+     */
+    public double cumulativeProbability(double x) throws MathException {
+        try {
+            return 0.5 * (1.0 + Erf.erf((x - mean) /
+                    (standardDeviation * Math.sqrt(2.0))));
+        } catch (MathException e) {
+            // Check if x is more than 20 standard deviations from the mean
+            double z = (x - mean) / standardDeviation;
+            if (Math.abs(z) > 20.0) {
+                return z < 0 ? 0.0 : 1.0;
+            } else {
+                throw e;
+            }
+        }
     }
\ No newline at end of file
