diff --git a/tmp/52c39a6d-eaf1-48c8-a7a9-8f2b74b1d5bd_buggy.java b/tmp/bd6e0d5a-ef68-45d3-99e2-453f04b4a7a4_fixed.java
index 1c53d31..4f90af4 100644
--- a/tmp/52c39a6d-eaf1-48c8-a7a9-8f2b74b1d5bd_buggy.java
+++ b/tmp/bd6e0d5a-ef68-45d3-99e2-453f04b4a7a4_fixed.java
@@ -1,20 +1,26 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  
+  // Ensure that typeAdapter is not null before calling nullSafe()
+  if (typeAdapter == null) {
+    throw new IllegalStateException("TypeAdapter constructed from annotation is null");
+  }
+  
   typeAdapter = typeAdapter.nullSafe();
   return typeAdapter;
 }
\ No newline at end of file
