diff --git a/tmp/598f8b28-2f0a-4758-936c-84a6c7385ecf_buggy.java b/tmp/6b4f5e1f-89de-41bb-9b17-2fd0d257fbad_fixed.java
index 3ec995f..625869e 100644
--- a/tmp/598f8b28-2f0a-4758-936c-84a6c7385ecf_buggy.java
+++ b/tmp/6b4f5e1f-89de-41bb-9b17-2fd0d257fbad_fixed.java
@@ -1,26 +1,38 @@
 /**
  * <p>
  * Converts the given Java version string to an <code>int</code>.
  * </p>
  * 
  * <p>
  * Example return values:
  * </p>
  * <ul>
  * <li><code>120</code> for Java 1.2</li>
  * <li><code>131</code> for Java 1.3.1</li>
  * <li><code>160</code> for Java 1.6.0_20</li>
  * </ul>
  * 
  * <p>
  * Patch releases are not reported.
  * </p>
  * <p>
  * This method is package private instead of private to support unit test invocation.
  * </p>
  * 
  * @return the version, for example 131 for Java 1.3.1
  */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+static int toJavaVersionInt(String version) {
+    if (version == null || version.isEmpty()) {
+        return 0;
+    }
+    String[] parts = version.split("[\\._]");
+    int major = 0;
+    int minor = 0;
+    if (parts.length > 0) {
+        major = Integer.parseInt(parts[0]) * 100;
+    }
+    if (parts.length > 1) {
+        minor = Integer.parseInt(parts[1]);
+    }
+    return major + minor;
 }
\ No newline at end of file
