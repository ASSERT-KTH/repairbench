diff --git a/tmp/9a231da9-cf44-4fd6-9754-46016d6523a4_buggy.java b/tmp/c664ecde-fbe2-468c-996c-4beb34b2d7a8_fixed.java
index dc93be3..b82f930 100644
--- a/tmp/9a231da9-cf44-4fd6-9754-46016d6523a4_buggy.java
+++ b/tmp/c664ecde-fbe2-468c-996c-4beb34b2d7a8_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        
+        // If the tag is a known empty tag, force an end tag
+        if (Tag.valueOf(startTag.name()).isEmpty()) {
+            insert(new Token.EndTag(el.tagName()));
+        }
+        
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
