diff --git a/tmp/9eeb07e2-1b3a-4c4d-bc4f-c825a76f9fae_buggy.java b/tmp/3e54e46b-3046-4fea-bd7a-c482cc82c587_fixed.java
index dc93be3..5f1aa49 100644
--- a/tmp/9eeb07e2-1b3a-4c4d-bc4f-c825a76f9fae_buggy.java
+++ b/tmp/3e54e46b-3046-4fea-bd7a-c482cc82c587_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (Tag.valueOf(startTag.name()).isKnownEmpty()) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName())); // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
+        } else {
+            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+            insert(el);
+            tokeniser.emit(new Token.EndTag(el.tagName())); // ensure we get out of whatever state we are in. emitted for yielded processing
+            return el;
+        }
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
