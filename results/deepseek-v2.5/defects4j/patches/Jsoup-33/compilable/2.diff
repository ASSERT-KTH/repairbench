diff --git a/tmp/4efeb2dd-2456-4b6b-83bb-16bf68920061_buggy.java b/tmp/3b8b7f6f-d012-41e3-a6f8-fb219903636c_fixed.java
index dc93be3..f898b33 100644
--- a/tmp/4efeb2dd-2456-4b6b-83bb-16bf68920061_buggy.java
+++ b/tmp/3b8b7f6f-d012-41e3-a6f8-fb219903636c_fixed.java
@@ -1,14 +1,20 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
+        
+        // If the tag is known to be empty, emit an end tag to close it properly
+        if (el.tag().isEmpty()) {
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
+        
         return el;
     }
\ No newline at end of file
