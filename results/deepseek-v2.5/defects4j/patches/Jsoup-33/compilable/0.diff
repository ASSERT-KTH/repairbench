diff --git a/tmp/64239a6e-a55e-415c-b4a6-13530d6417d1_buggy.java b/tmp/355ceeac-d155-469b-9271-334cce5ef2d8_fixed.java
index dc93be3..a0d9b2a 100644
--- a/tmp/64239a6e-a55e-415c-b4a6-13530d6417d1_buggy.java
+++ b/tmp/355ceeac-d155-469b-9271-334cce5ef2d8_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
+    
+    // If the element is known to be empty, emit an end tag to close it properly
+    if (Tag.valueOf(startTag.name()).isEmpty()) {
+        tokeniser.emit(new Token.EndTag(el.tagName()));
+    }
+    
     return el;
 }
\ No newline at end of file
