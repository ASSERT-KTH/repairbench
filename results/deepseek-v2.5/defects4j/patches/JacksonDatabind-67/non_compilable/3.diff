diff --git a/tmp/13dd4677-df55-4752-a8de-2d0cece4eea5_buggy.java b/tmp/edd4d821-6d47-48eb-86a1-c3b6466b30df_fixed.java
index bc80637..540a750 100644
--- a/tmp/13dd4677-df55-4752-a8de-2d0cece4eea5_buggy.java
+++ b/tmp/edd4d821-6d47-48eb-86a1-c3b6466b30df_fixed.java
@@ -1,33 +1,44 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
+        }
         // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+        if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
-                    deser = mod.modifyKeyDeserializer(config, type, deser);
+                KeyDeserializer originalDeser = deser;
+                deser = mod.modifyKeyDeserializer(config, type, originalDeser);
+                // Check if the modifier returns a custom deserializer for enums
+                if (type.isEnumType() && deser == originalDeser) {
+                    deser = new KeyDeserializer() {
+                        @Override
+                        public Object deserializeKey(String key, DeserializationContext ctxt)
+                                throws IOException {
+                            Class<? extends Enum> rawClass = (Class<Enum<?>>) type.getRawClass();
+                            return Enum.valueOf(rawClass, key.toLowerCase());
+                        }
+                    };
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
