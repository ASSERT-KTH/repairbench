diff --git a/tmp/fd09ddff-bb45-40c9-911d-0b977804464f_buggy.java b/tmp/a58acb22-8a7d-4810-b061-c0b7bb068a67_fixed.java
index bc80637..8256b47 100644
--- a/tmp/fd09ddff-bb45-40c9-911d-0b977804464f_buggy.java
+++ b/tmp/a58acb22-8a7d-4810-b061-c0b7bb068a67_fixed.java
@@ -1,33 +1,42 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
+    // Ensure custom key deserializers are not overridden
+    if (deser == null && _factoryConfig.hasDeserializerModifiers()) {
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+            if (deser != null) {
+                break;
+            }
+        }
+    }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
     // and then post-processing
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
     return deser;
 }
\ No newline at end of file
