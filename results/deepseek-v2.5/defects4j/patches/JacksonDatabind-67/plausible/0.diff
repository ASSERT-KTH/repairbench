diff --git a/tmp/61bb651e-6bc9-4c93-bb1e-0ccd26c33978_buggy.java b/tmp/376825e4-1ebf-431c-a222-e6d90f125a0f_fixed.java
index bc80637..07c2b58 100644
--- a/tmp/61bb651e-6bc9-4c93-bb1e-0ccd26c33978_buggy.java
+++ b/tmp/376825e4-1ebf-431c-a222-e6d90f125a0f_fixed.java
@@ -1,33 +1,48 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
-        if (_factoryConfig.hasKeyDeserializers()) {
+
+    // Check if a custom KeyDeserializer is available from the deserializer modifier
+    if (_factoryConfig.hasDeserializerModifiers()) {
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+            if (deser != null) {
+                break;
+            }
+        }
+    }
+
+    // If no custom KeyDeserializer was found, proceed with the default behavior
+    if (deser == null && _factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+
+    // Handle enum types specifically if no deserializer was found
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
-        // and then post-processing
+
+    // Post-processing for deserializer modifiers
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
+
     return deser;
 }
\ No newline at end of file
