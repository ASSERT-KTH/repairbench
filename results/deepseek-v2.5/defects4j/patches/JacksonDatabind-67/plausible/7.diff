diff --git a/tmp/33a263cd-a801-4d3e-bf95-35154b1c10c4_buggy.java b/tmp/88d934c5-3525-4821-aac6-e537771591c1_fixed.java
index bc80637..b94d8d3 100644
--- a/tmp/33a263cd-a801-4d3e-bf95-35154b1c10c4_buggy.java
+++ b/tmp/88d934c5-3525-4821-aac6-e537771591c1_fixed.java
@@ -1,33 +1,36 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
+            deser = _createEnumKeyDeserializer(ctxt, type);
         }
+        if (deser == null) { // Ensure deserializer is still null before finding string-based one
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
+    }
     // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+    if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
             deser = mod.modifyKeyDeserializer(config, type, deser);
+            if (deser == null) { // If the modifier returns null, break the loop
+                break;
             }
         }
     }
     return deser;
 }
\ No newline at end of file
