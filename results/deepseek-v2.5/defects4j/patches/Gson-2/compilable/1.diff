diff --git a/tmp/84be18e1-8221-4b9b-b41a-70bdff21b833_buggy.java b/tmp/228ec0eb-85f8-4706-9fbb-17d1262a3cf6_fixed.java
index 6e45f80..8a6e971 100644
--- a/tmp/84be18e1-8221-4b9b-b41a-70bdff21b833_buggy.java
+++ b/tmp/228ec0eb-85f8-4706-9fbb-17d1262a3cf6_fixed.java
@@ -1,21 +1,22 @@
-  /**
-   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
-   * that the deserialized type matches the type requested.
-   */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Ensure the type adapter is of the correct type
+      if (typeAdapter.getClass().equals(TypeAdapter.class)) {
         return (TypeAdapter<T2>) typeAdapter;
+      }
+      return null;
+    }
 
-      }
-      @Override public String toString() {
+    @Override
+    public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
