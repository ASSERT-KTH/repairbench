diff --git a/tmp/6c067167-2f35-49d9-96f0-d3e62e28a20f_buggy.java b/tmp/929508c7-2cc8-4e79-b9a7-61360f0e8a69_fixed.java
index 6e45f80..0533d44 100644
--- a/tmp/6c067167-2f35-49d9-96f0-d3e62e28a20f_buggy.java
+++ b/tmp/929508c7-2cc8-4e79-b9a7-61360f0e8a69_fixed.java
@@ -1,21 +1,30 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
+        return (TypeAdapter<T2>) new TypeAdapter<T1>() {
+          @Override
+          public void write(JsonWriter out, T1 value) throws IOException {
+            typeAdapter.write(out, value);
+          }
 
+          @Override
+          public T1 read(JsonReader in) throws IOException {
+            return typeAdapter.read(in);
+          }
+        };
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
