diff --git a/tmp/043bc9dc-84b3-42e3-be0b-f6f2ef20096e_buggy.java b/tmp/02dce456-d08e-4f2b-872c-56b340dfcb1a_fixed.java
index 6e45f80..1d44eb3 100644
--- a/tmp/043bc9dc-84b3-42e3-be0b-f6f2ef20096e_buggy.java
+++ b/tmp/02dce456-d08e-4f2b-872c-56b340dfcb1a_fixed.java
@@ -1,21 +1,33 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
+        // Create a new TypeAdapter for T2 that delegates to the original TypeAdapter<T1>
+        return new TypeAdapter<T2>() {
+          @Override
+          public void write(JsonWriter out, T2 value) throws IOException {
+            typeAdapter.write(out, (T1) value);
+          }
 
+          @Override
+          public T2 read(JsonReader in) throws IOException {
+            return (T2) typeAdapter.read(in);
+          }
+        };
       }
-      @Override public String toString() {
+
+      @Override
+      public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
