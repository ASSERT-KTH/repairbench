diff --git a/tmp/c0923105-a244-4129-b8f7-599a7764aac5_buggy.java b/tmp/7280dc24-19bd-4205-839f-dd0fdf81c6f9_fixed.java
index 3002587..fcf17b6 100644
--- a/tmp/c0923105-a244-4129-b8f7-599a7764aac5_buggy.java
+++ b/tmp/7280dc24-19bd-4205-839f-dd0fdf81c6f9_fixed.java
@@ -1,10 +1,30 @@
     /**
      * Fits a Gaussian function to the observed points.
      *
      * @return the parameters of the Gaussian function that best fits the
      * observed points (in the same order as above).
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        
+        // Custom Gaussian.Parametric class that enforces non-negative sigma
+        class NonNegativeSigmaGaussianParametric extends Gaussian.Parametric {
+            @Override
+            public double value(double x, double... parameters) {
+                if (parameters[2] <= 0) {
+                    throw new IllegalArgumentException("Sigma must be positive");
+                }
+                return super.value(x, parameters);
+            }
+
+            @Override
+            public double[] gradient(double x, double... parameters) {
+                if (parameters[2] <= 0) {
+                    throw new IllegalArgumentException("Sigma must be positive");
+                }
+                return super.gradient(x, parameters);
+            }
+        }
+
+        return fit(new NonNegativeSigmaGaussianParametric(), guess);
     }
\ No newline at end of file
