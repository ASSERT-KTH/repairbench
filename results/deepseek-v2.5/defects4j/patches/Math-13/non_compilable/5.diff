diff --git a/tmp/6c8f5c06-7e5a-4f38-8cda-1824547cab94_buggy.java b/tmp/acce9487-806b-4f16-8d87-f8527283d8a7_fixed.java
index 4e21866..ae96a53 100644
--- a/tmp/6c8f5c06-7e5a-4f38-8cda-1824547cab94_buggy.java
+++ b/tmp/acce9487-806b-4f16-8d87-f8527283d8a7_fixed.java
@@ -1,10 +1,52 @@
 /**
  * Computes the square-root of the weight matrix.
  *
  * @param m Symmetric, positive-definite (weight) matrix.
  * @return the square-root of the weight matrix.
  */
 private RealMatrix squareRoot(RealMatrix m) {
+    // Check if the input matrix is symmetric and positive-definite
+    if (!isSymmetric(m) || !isPositiveDefinite(m)) {
+        throw new IllegalArgumentException("Matrix must be symmetric and positive-definite.");
+    }
+    
     final EigenDecomposition dec = new EigenDecomposition(m);
     return dec.getSquareRoot();
 }
+
+/**
+ * Checks if a matrix is symmetric.
+ *
+ * @param m Matrix to check.
+ * @return true if the matrix is symmetric, false otherwise.
+ */
+private boolean isSymmetric(RealMatrix m) {
+    int n = m.getRowDimension();
+    if (n != m.getColumnDimension()) {
+        return false;
+    }
+    for (int i = 0; i < n; i++) {
+        for (int j = 0; j < n; j++) {
+            if (m.getEntry(i, j) != m.getEntry(j, i)) {
+                return false;
+            }
+        }
+    }
+    return true;
+}
+
+/**
+ * Checks if a matrix is positive-definite.
+ *
+ * @param m Matrix to check.
+ * @return true if the matrix is positive-definite, false otherwise.
+ */
+private boolean isPositiveDefinite(RealMatrix m) {
+    try {
+        // Attempt to compute the Cholesky decomposition
+        new CholeskyDecomposition(m);
+        return true;
+    } catch (Exception e) {
+        return false;
+    }
+}
\ No newline at end of file
