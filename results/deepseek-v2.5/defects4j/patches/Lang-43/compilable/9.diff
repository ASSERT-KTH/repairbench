diff --git a/tmp/61583b93-6931-4ce5-b875-9792d4296a13_buggy.java b/tmp/f9f8c006-960b-4f71-af2a-0f4fbfa900c9_fixed.java
index b6b11b6..aadc5d8 100644
--- a/tmp/61583b93-6931-4ce5-b875-9792d4296a13_buggy.java
+++ b/tmp/f9f8c006-960b-4f71-af2a-0f4fbfa900c9_fixed.java
@@ -1,38 +1,50 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+        if (c[start] != QUOTE) {
+            throw new IllegalArgumentException("Quoted string must start with a quote at position " + start);
         }
-        int lastHold = start;
+        if (appendTo != null) {
+            appendTo.append(c[start]);
+        }
+        pos.setIndex(start + 1);
+        boolean escaped = false;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+                if (appendTo != null) {
+                    appendTo.append(c, pos.getIndex(), ESCAPED_QUOTE.length());
+                }
                 pos.setIndex(i + ESCAPED_QUOTE.length());
-                lastHold = pos.getIndex();
+                escaped = true;
                 continue;
             }
-            switch (c[pos.getIndex()]) {
+            switch (c[i]) {
             case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                if (escaped) {
+                    escaped = false; // Reset escaped flag
+                } else {
+                    if (appendTo != null) {
+                        appendTo.append(c, pos.getIndex(), i - pos.getIndex());
+                    }
+                    pos.setIndex(i + 1);
+                    return appendTo;
+                }
+                break;
             default:
-                next(pos);
+                // Continue parsing
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
