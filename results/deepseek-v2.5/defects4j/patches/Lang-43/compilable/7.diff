diff --git a/tmp/deb2d83c-8a91-477d-90b2-f17a50ae6a44_buggy.java b/tmp/5bf37c48-94c1-4d89-8a14-c352e96f4ff7_fixed.java
index b6b11b6..fd2e069 100644
--- a/tmp/deb2d83c-8a91-477d-90b2-f17a50ae6a44_buggy.java
+++ b/tmp/5bf37c48-94c1-4d89-8a14-c352e96f4ff7_fixed.java
@@ -1,38 +1,35 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+            if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, i)) {
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
                 pos.setIndex(i + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
                 continue;
             }
-            switch (c[pos.getIndex()]) {
+            switch (c[i]) {
             case QUOTE:
-                next(pos);
+                pos.setIndex(i + 1);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+                        i - lastHold);
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
