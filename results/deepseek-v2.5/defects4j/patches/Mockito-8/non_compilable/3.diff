diff --git a/tmp/fb5f0564-f5c0-4069-88f8-17bf7d080900_buggy.java b/tmp/17bd20e1-e90e-4320-a9ba-2e2d287866c4_fixed.java
index 42b58d0..3b418b4 100644
--- a/tmp/fb5f0564-f5c0-4069-88f8-17bf7d080900_buggy.java
+++ b/tmp/17bd20e1-e90e-4320-a9ba-2e2d287866c4_fixed.java
@@ -1,19 +1,29 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    
+    // Check if the type has already been processed
+    if (contextualActualTypeParameters.containsKey(rawType)) {
+        return;
+    }
+    
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
+    
+    // Mark the type as processed
+    contextualActualTypeParameters.put(rawType, rawType);
 }
\ No newline at end of file
