diff --git a/tmp/ce11b902-b500-438e-8e2b-7f4830a88b2a_buggy.java b/tmp/4812e935-e1a6-4520-bd1a-55f91372ef6f_fixed.java
index 42b58d0..2f3f72d 100644
--- a/tmp/ce11b902-b500-438e-8e2b-7f4830a88b2a_buggy.java
+++ b/tmp/4812e935-e1a6-4520-bd1a-55f91372ef6f_fixed.java
@@ -1,19 +1,26 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable<?>[] typeParameters = rawType.getTypeParameters();
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else {
+            // Avoid infinite recursion by checking if the actual type argument is the same as the class type
+            if (actualTypeArgument.equals(classType)) {
+                contextualActualTypeParameters.put(typeParameter, typeParameter);
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
+        }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
