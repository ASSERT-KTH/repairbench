diff --git a/tmp/b454e049-df79-40a4-93fc-7589dbf15a94_buggy.java b/tmp/75902128-abff-4763-8ea0-8ac5792ea9a8_fixed.java
index b4af58a..5f9a2f6 100644
--- a/tmp/b454e049-df79-40a4-93fc-7589dbf15a94_buggy.java
+++ b/tmp/75902128-abff-4763-8ea0-8ac5792ea9a8_fixed.java
@@ -1,53 +1,58 @@
 /**
  * Creates a new timeseries by copying a subset of the data in this time
  * series.
  *
  * @param start  the first time period to copy (<code>null</code> not
  *         permitted).
  * @param end  the last time period to copy (<code>null</code> not
  *         permitted).
  *
  * @return A time series containing a copy of this time series from start
  *         until end.
  *
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
 public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
     throws CloneNotSupportedException {
 
     if (start == null) {
         throw new IllegalArgumentException("Null 'start' argument.");
     }
     if (end == null) {
         throw new IllegalArgumentException("Null 'end' argument.");
     }
     if (start.compareTo(end) > 0) {
         throw new IllegalArgumentException(
                 "Requires start on or before end.");
     }
     boolean emptyRange = false;
     int startIndex = getIndex(start);
     if (startIndex < 0) {
         startIndex = -(startIndex + 1);
         if (startIndex == this.data.size()) {
             emptyRange = true;  // start is after last data item
         }
     }
     int endIndex = getIndex(end);
     if (endIndex < 0) {             // end period is not in original series
         endIndex = -(endIndex + 1); // this is first item AFTER end period
         endIndex = endIndex - 1;    // so this is last item BEFORE end
-        }
         if (endIndex < 0) {
             emptyRange = true;
         }
+    }
+    else {
+        // Ensure endIndex points to the last occurrence of the end period
+        while (endIndex < this.data.size() - 1 && this.data.get(endIndex + 1).getPeriod().equals(end)) {
+            endIndex++;
+        }
+    }
     if (emptyRange) {
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
         return copy;
     }
     else {
         return createCopy(startIndex, endIndex);
     }
-
 }
\ No newline at end of file
