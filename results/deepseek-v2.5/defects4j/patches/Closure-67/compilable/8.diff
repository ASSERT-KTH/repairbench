diff --git a/tmp/df4f13fe-6e33-448f-9326-d6e85e5f1ec5_buggy.java b/tmp/2ed82fb6-d1b7-4b27-963c-4957b2f51fe9_fixed.java
index 939f49b..67b8b2c 100644
--- a/tmp/df4f13fe-6e33-448f-9326-d6e85e5f1ec5_buggy.java
+++ b/tmp/2ed82fb6-d1b7-4b27-963c-4957b2f51fe9_fixed.java
@@ -1,21 +1,22 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        n.getFirstChild().getType() == Token.GETPROP
+        || n.getFirstChild().getType() == Token.NAME; // Check for Token.NAME to handle aliasing
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node child = n.getFirstChild().getType() == Token.GETPROP ? n.getFirstChild().getFirstChild().getNext() : n.getFirstChild().getNext();
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
