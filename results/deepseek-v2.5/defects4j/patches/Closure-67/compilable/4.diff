diff --git a/tmp/fde26966-e96b-40b2-92d6-918493afc28f_buggy.java b/tmp/3fe37999-a15e-42db-a47b-636b7c0f6358_fixed.java
index 939f49b..d0e3de4 100644
--- a/tmp/fde26966-e96b-40b2-92d6-918493afc28f_buggy.java
+++ b/tmp/3fe37999-a15e-42db-a47b-636b7c0f6358_fixed.java
@@ -1,21 +1,22 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+        && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        Node child = n.getFirstChild();
         
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        // Check if the child node is a GETPROP and its first child is a GETPROP
+        if (child.getType() == Token.GETPROP) {
+            Node grandChild = child.getFirstChild();
+            // Check if the grandchild is a GETPROP and its first child is a STRING
+            if (grandChild.getType() == Token.GETPROP &&
+                grandChild.getFirstChild() != null &&
+                grandChild.getFirstChild().getType() == Token.STRING &&
+                grandChild.getFirstChild().getString().equals("prototype")) {
                 return true;
             }
         }
     }
 
     return false;
 }
\ No newline at end of file
