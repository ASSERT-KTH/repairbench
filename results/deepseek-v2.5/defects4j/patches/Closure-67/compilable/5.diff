diff --git a/tmp/09b3f19e-0402-46d7-b2ec-d54439cd6fa2_buggy.java b/tmp/1b8f70e7-14d0-4213-ad98-cddb8e918997_fixed.java
index 939f49b..6123576 100644
--- a/tmp/09b3f19e-0402-46d7-b2ec-d54439cd6fa2_buggy.java
+++ b/tmp/1b8f70e7-14d0-4213-ad98-cddb8e918997_fixed.java
@@ -1,21 +1,25 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+          Node child = n.getFirstChild();
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          while (child != null && child.getType() == Token.GETPROP) {
+            Node propNode = child.getLastChild();
+            if (propNode.getType() == Token.STRING &&
+                propNode.getString().equals("prototype")) {
               return true;
             }
+            child = child.getFirstChild();
+          }
         }
       }
 
       return false;
     }
\ No newline at end of file
