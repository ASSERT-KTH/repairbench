diff --git a/tmp/630974b6-d81e-4da7-8ccb-c2693b2262fe_buggy.java b/tmp/4364a29b-8d48-44ae-ba44-fd9f20359e26_fixed.java
index f9a9b5b..3f0fa80 100644
--- a/tmp/630974b6-d81e-4da7-8ccb-c2693b2262fe_buggy.java
+++ b/tmp/4364a29b-8d48-44ae-ba44-fd9f20359e26_fixed.java
@@ -1,30 +1,37 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
         mockInstance = classInstantiator.instantiate(mockedProxyType);
+        if (mockInstance == null) {
+            throw new InstantiationException("Failed to instantiate mock instance");
+        }
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
-                    "  proxy instance class : " + describeClass(mockInstance),
+                "  proxy instance class : " + (mockInstance != null ? describeClass(mockInstance.getClass()) : "null"),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ), cce);
-        } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+    } catch (InstantiationException e) {
+        if (settings.getTypeToMock().isInterface() || Modifier.isAbstract(settings.getTypeToMock().getModifiers())) {
+            throw new MockitoException("Unable to create mock instance of the abstract type '" + mockedProxyType.getSimpleName() + "'", e);
+        } else {
+            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSimpleName() + "'", e);
+        }
     }
 }
\ No newline at end of file
