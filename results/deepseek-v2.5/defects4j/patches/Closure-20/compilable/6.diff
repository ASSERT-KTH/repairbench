diff --git a/tmp/1e6ae327-96b9-4dfe-b739-dca1a9a585b0_buggy.java b/tmp/deffc0e8-5bd3-4222-88dc-7948d52fa087_fixed.java
index d4e6d48..cf8dcc8 100644
--- a/tmp/1e6ae327-96b9-4dfe-b739-dca1a9a585b0_buggy.java
+++ b/tmp/deffc0e8-5bd3-4222-88dc-7948d52fa087_fixed.java
@@ -1,23 +1,23 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
             callTarget.getString().equals("String")) {
         // Fold String(a) to '' + (a) on immutable literals,
         // which allows further optimizations
         //
         // We can't do this in the general case, because String(a) has
         // slightly different semantics than '' + (a). See
         // http://code.google.com/p/closure-compiler/issues/detail?id=759
         Node value = callTarget.getNext();
-      if (value != null) {
+        if (value != null && value.getNext() == null) { // Ensure there is only one argument
             Node addition = IR.add(
                     IR.string("").srcref(callTarget),
                     value.detachFromParent());
             n.getParent().replaceChild(n, addition);
             reportCodeChange();
             return addition;
         }
     }
     return n;
 }
\ No newline at end of file
