diff --git a/tmp/134ea79f-08b9-45c1-a940-3c43a3a0f175_buggy.java b/tmp/378256dd-9215-4f44-9287-4d40a4230172_fixed.java
index 10616db..2359395 100644
--- a/tmp/134ea79f-08b9-45c1-a940-3c43a3a0f175_buggy.java
+++ b/tmp/378256dd-9215-4f44-9287-4d40a4230172_fixed.java
@@ -1,19 +1,28 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] adjustedValues = iChronology.get(partial, instant);
+        
+        // Adjust the day if it exceeds the maximum days in the resulting month
+        int month = adjustedValues[0];
+        int day = adjustedValues[1];
+        int maxDay = iChronology.dayOfMonth().getMaximumValue(iChronology.monthOfYear().set(instant, month));
+        if (day > maxDay) {
+            adjustedValues[1] = maxDay;
+        }
+        
+        return adjustedValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
