diff --git a/tmp/5eb4685f-2b37-4092-9b74-25b793bebf0b_buggy.java b/tmp/f1b0bb62-8345-4e6b-9d7a-6d435e6271f2_fixed.java
index 10616db..8ae89ef 100644
--- a/tmp/5eb4685f-2b37-4092-9b74-25b793bebf0b_buggy.java
+++ b/tmp/f1b0bb62-8345-4e6b-9d7a-6d435e6271f2_fixed.java
@@ -1,19 +1,28 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+        
+        // Adjust the day to be valid for the new month
+        int monthField = partial.getFieldType(0).getField(iChronology).get(instant);
+        int dayField = partial.getFieldType(1).getField(iChronology).get(instant);
+        int maxDayOfMonth = iChronology.dayOfMonth().getMaximumValue(monthField);
+        if (dayField > maxDayOfMonth) {
+            newValues[1] = maxDayOfMonth;
+        }
+        
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
