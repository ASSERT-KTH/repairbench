diff --git a/tmp/90fca30f-39f8-41ca-83af-ae54708082a7_buggy.java b/tmp/ab91868b-46ff-4a67-b10d-8ab227541644_fixed.java
index 10616db..fed474e 100644
--- a/tmp/90fca30f-39f8-41ca-83af-ae54708082a7_buggy.java
+++ b/tmp/ab91868b-46ff-4a67-b10d-8ab227541644_fixed.java
@@ -1,19 +1,33 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+
+        // Adjust dayOfMonth to be valid for the new month
+        DateTimeField dayOfMonthField = iChronology.dayOfMonth();
+        DateTimeField monthField = iChronology.monthOfYear();
+        int currentMonth = monthField.get(instant);
+        int currentDayOfMonth = dayOfMonthField.get(instant);
+        int maxDayOfMonth = dayOfMonthField.getMaximumValue(instant);
+
+        if (currentDayOfMonth > maxDayOfMonth) {
+            result[0] = currentMonth;
+            result[1] = maxDayOfMonth;
+        }
+
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
