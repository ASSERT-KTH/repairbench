diff --git a/tmp/e4ab6bf1-336c-43fd-bc8f-91c4bb2bf4f5_buggy.java b/tmp/ec92270a-e019-45fb-84ea-13d57250c1ce_fixed.java
index 10616db..dd0705b 100644
--- a/tmp/e4ab6bf1-336c-43fd-bc8f-91c4bb2bf4f5_buggy.java
+++ b/tmp/ec92270a-e019-45fb-84ea-13d57250c1ce_fixed.java
@@ -1,19 +1,29 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+        // Adjust the day field to be within the valid range for the resulting month
+        if (partial.getFieldType(1) == DateTimeFieldType.monthOfYear() && partial.getFieldType(2) == DateTimeFieldType.dayOfMonth()) {
+            int newMonth = result[1];
+            int newDay = result[2];
+            int maxDayOfMonth = iChronology.dayOfMonth().getMaximumValue(instant, newMonth);
+            if (newDay > maxDayOfMonth) {
+                result[2] = maxDayOfMonth;
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
