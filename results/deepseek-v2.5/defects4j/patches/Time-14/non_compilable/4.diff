diff --git a/tmp/40ee35bb-5c46-4457-8c4a-451725e05a31_buggy.java b/tmp/4e8cf171-083d-4650-8971-3bd1f8c76be5_fixed.java
index 10616db..6a3d674 100644
--- a/tmp/40ee35bb-5c46-4457-8c4a-451725e05a31_buggy.java
+++ b/tmp/4e8cf171-083d-4650-8971-3bd1f8c76be5_fixed.java
@@ -1,19 +1,29 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] resultValues = iChronology.get(partial, instant);
+            // Adjust the day if it exceeds the maximum days in the resulting month
+            if (partial.getFieldType(1) instanceof DurationFieldType) {
+                int monthFieldIndex = 1;
+                int dayFieldIndex = 0;
+                int currentMonthDays = iChronology.dayOfMonth().getMaximumValue(instant);
+                if (resultValues[dayFieldIndex] > currentMonthDays) {
+                    resultValues[dayFieldIndex] = currentMonthDays;
+                }
+            }
+            return resultValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
