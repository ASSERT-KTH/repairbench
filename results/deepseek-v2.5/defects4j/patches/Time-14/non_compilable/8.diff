diff --git a/tmp/b486ae9a-9726-4660-a496-23ef5c421bcf_buggy.java b/tmp/50d104a1-f5a4-4b0f-9223-5b931d0dcc06_fixed.java
index 10616db..c61bfc8 100644
--- a/tmp/b486ae9a-9726-4660-a496-23ef5c421bcf_buggy.java
+++ b/tmp/50d104a1-f5a4-4b0f-9223-5b931d0dcc06_fixed.java
@@ -1,19 +1,30 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        
+        // Adjust the day of the month if necessary
+        int[] resultValues = iChronology.get(partial, instant);
+        if (partial.getFieldType(1) == DateTimeFieldType.dayOfMonth()) {
+            int year = resultValues[0];
+            int month = resultValues[1];
+            int day = resultValues[2];
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);
+            if (day > maxDay) {
+                resultValues[2] = maxDay;
+            }
+        }
+        return resultValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
