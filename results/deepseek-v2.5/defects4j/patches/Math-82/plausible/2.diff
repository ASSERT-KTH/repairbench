diff --git a/tmp/ece97864-ddba-4b71-a4ad-d57ded278298_buggy.java b/tmp/1b09e83f-0a8a-4d09-85d6-914b272e3392_fixed.java
index 220820e..9aca7ee 100644
--- a/tmp/ece97864-ddba-4b71-a4ad-d57ded278298_buggy.java
+++ b/tmp/1b09e83f-0a8a-4d09-85d6-914b272e3392_fixed.java
@@ -1,22 +1,24 @@
 /**
  * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
  * @param tableau simple tableau for the problem
  * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
  * @return row with the minimum ratio
  */
 private Integer getPivotRow(final int col, final SimplexTableau tableau) {
     double minRatio = Double.MAX_VALUE;
     Integer minRatioPos = null;
+    boolean foundNegativeEntry = false;
     for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
         final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
         final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+        if (MathUtils.compareTo(entry, 0, epsilon) > 0) { // Changed to > 0 to handle ties correctly
             final double ratio = rhs / entry;
             if (ratio < minRatio) {
                 minRatio = ratio;
                 minRatioPos = i; 
+                foundNegativeEntry = true;
             }
         }
     }
-        return minRatioPos;
+    return foundNegativeEntry ? minRatioPos : null; // Return null if no negative entry was found
 }
\ No newline at end of file
