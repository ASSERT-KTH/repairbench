diff --git a/tmp/49f6f826-2275-4c95-b08c-4974b5683112_buggy.java b/tmp/7425ffd5-8921-4c29-9022-9d538089eca4_fixed.java
index 2573d30..4d45abc 100644
--- a/tmp/49f6f826-2275-4c95-b08c-4974b5683112_buggy.java
+++ b/tmp/7425ffd5-8921-4c29-9022-9d538089eca4_fixed.java
@@ -1,20 +1,29 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    Node firstChild = node.getFirstChild();
+    if (firstChild.isName()
+        && isNameAssignedTo(firstChild.getString(), replacement)) {
       return false;
     }
 
+    // Check if the property access is on a name that might have changed
+    Node parent = node.getParent();
+    if (parent != null && parent.isAssign()) {
+      Node lhs = parent.getFirstChild();
+      if (lhs.isGetProp() && lhs.getFirstChild().isName() && lhs.getFirstChild().getString().equals(firstChild.getString())) {
+        return false;
+      }
+    }
+
     return true;
   }
\ No newline at end of file
