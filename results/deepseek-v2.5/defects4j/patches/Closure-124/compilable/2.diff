diff --git a/tmp/fc259a9b-4264-400d-bb42-968ca708abb7_buggy.java b/tmp/71f462ab-5220-4b45-99b8-bed48d4ef924_fixed.java
index 2573d30..b15deb5 100644
--- a/tmp/fc259a9b-4264-400d-bb42-968ca708abb7_buggy.java
+++ b/tmp/71f462ab-5220-4b45-99b8-bed48d4ef924_fixed.java
@@ -1,20 +1,30 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    Node firstChild = node.getFirstChild();
+    if (firstChild.isName()
+        && isNameAssignedTo(firstChild.getString(), replacement)) {
       return false;
     }
 
+    // Check if the property access chain has multiple levels
+    Node nextChild = firstChild.getNext();
+    while (nextChild != null && nextChild.isGetProp()) {
+      Node propChild = nextChild.getFirstChild();
+      if (propChild.isName() && isNameAssignedTo(propChild.getString(), replacement)) {
+        return false;
+      }
+      nextChild = propChild.getNext();
+    }
+
     return true;
   }
\ No newline at end of file
