diff --git a/tmp/35c49667-9cd6-4f2a-9da9-3a43c7e70318_buggy.java b/tmp/82db4b25-591a-4f82-a535-df8162b3c8bb_fixed.java
index 3c69e10..dc744d5 100644
--- a/tmp/35c49667-9cd6-4f2a-9da9-3a43c7e70318_buggy.java
+++ b/tmp/82db4b25-591a-4f82-a535-df8162b3c8bb_fixed.java
@@ -1,27 +1,20 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
-    private double calculateAsymptoticPValue(final double Umin,
-                                             final int n1,
-                                             final int n2)
+private double calculateAsymptoticPValue(final double Umin, final int n1, final int n2)
         throws ConvergenceException, MaxCountExceededException {
 
     final int n1n2prod = n1 * n2;
 
     // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
     final double EU = n1n2prod / 2.0;
     final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
+    // Check for zero variance to avoid division by zero
+    if (VarU == 0) {
+        throw new ConvergenceException("Variance is zero, cannot compute p-value");
+    }
+
     final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
     final NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
     return 2 * standardNormal.cumulativeProbability(z);
 }
\ No newline at end of file
