diff --git a/tmp/ec10f065-58e6-4d07-b86e-73f138d50c4a_buggy.java b/tmp/54ed21fe-8ceb-41b7-aa3a-59fe08b889a5_fixed.java
index 4e8b037..d5dad44 100644
--- a/tmp/ec10f065-58e6-4d07-b86e-73f138d50c4a_buggy.java
+++ b/tmp/54ed21fe-8ceb-41b7-aa3a-59fe08b889a5_fixed.java
@@ -1,20 +1,33 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
 
         // augment the list with the default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = (List) this.defaultValues.get(option);
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+
+        // if there are more default values as specified, add them to the list
+        if (valueList != null && valueList.size() < option.getMaxArgs()) {
+            List tempList = new ArrayList(valueList);
+            List optionDefaults = (List) this.defaultValues.get(option);
+            if (optionDefaults != null) {
+                for (Object defaultValue : optionDefaults) {
+                    if (tempList.size() < option.getMaxArgs()) {
+                        tempList.add(defaultValue);
+                    } else {
+                        break;
+                    }
+                }
+            }
+            valueList = tempList;
+        }
 
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
\ No newline at end of file
