diff --git a/tmp/f865ade4-8990-46ea-9024-bb938e3c2357_buggy.java b/tmp/ee160cf3-e74a-460f-bb4d-5cd586a56dc1_fixed.java
index 6cfa79b..276beb9 100644
--- a/tmp/f865ade4-8990-46ea-9024-bb938e3c2357_buggy.java
+++ b/tmp/ee160cf3-e74a-460f-bb4d-5cd586a56dc1_fixed.java
@@ -1,12 +1,21 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>.
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    try {
+        return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));
+    } catch (MathException e) {
+        if (x < mean - 20 * standardDeviation) {
+            return 0.0;
+        } else if (x > mean + 20 * standardDeviation) {
+            return 1.0;
+        } else {
+            throw e;
+        }
+    }
 }
\ No newline at end of file
