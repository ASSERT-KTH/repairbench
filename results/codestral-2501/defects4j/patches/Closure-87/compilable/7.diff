diff --git a/tmp/30be2c7e-7808-4371-91ce-2b48c8f31ef1_buggy.java b/tmp/efd5c7d4-f1bb-4379-8ec5-7059d2ec6e7f_fixed.java
index 19fd63e..801277f 100644
--- a/tmp/30be2c7e-7808-4371-91ce-2b48c8f31ef1_buggy.java
+++ b/tmp/efd5c7d4-f1bb-4379-8ec5-7059d2ec6e7f_fixed.java
@@ -1,24 +1,20 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
 
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
+      // Check if the node is an EXPR_RESULT and its child is an expression
+      if (maybeExpr.getType() == Token.EXPR_RESULT && maybeExpr.hasOneChild()) {
+        maybeExpr = maybeExpr.getFirstChild();
+      }
 
       return NodeUtil.isExpressionNode(maybeExpr);
     }
   }
 
   return false;
 }
\ No newline at end of file
