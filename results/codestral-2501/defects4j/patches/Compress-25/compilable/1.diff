diff --git a/tmp/d887c3bc-a821-46f5-a6e1-20e9f34be711_buggy.java b/tmp/fb022b7d-d1ae-421e-b88d-da16817b637b_fixed.java
index 6c0aa19..f53b1dc 100644
--- a/tmp/d887c3bc-a821-46f5-a6e1-20e9f34be711_buggy.java
+++ b/tmp/fb022b7d-d1ae-421e-b88d-da16817b637b_fixed.java
@@ -1,20 +1,22 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
     in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+    this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
+    // Initialize the buffer to read the first entry
+    buf.clear();
+    buf.putInt(0x04034b50);
+    buf.flip();
 }
\ No newline at end of file
