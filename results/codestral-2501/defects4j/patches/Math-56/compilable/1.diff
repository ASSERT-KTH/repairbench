diff --git a/tmp/21f82279-b2d4-4cd2-a4b2-d3bca359eb3f_buggy.java b/tmp/09a6ab60-cb68-47b9-96a4-78fa8df45605_fixed.java
index 2608424..6efa7f3 100644
--- a/tmp/21f82279-b2d4-4cd2-a4b2-d3bca359eb3f_buggy.java
+++ b/tmp/09a6ab60-cb68-47b9-96a4-78fa8df45605_fixed.java
@@ -1,39 +1,28 @@
-    /**
-     * Convert to multidimensional counter.
-     *
-     * @param index Index in unidimensional counter.
-     * @return the multidimensional counts.
-     * @throws OutOfRangeException if {@code index} is not between
-     * {@code 0} and the value returned by {@link #getSize()} (excluded).
-     */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
         int count = 0;
         for (int i = 0; i < last; i++) {
             int idx = 0;
             final int offset = uniCounterOffset[i];
-            while (count <= index) {
+            while (count + offset <= index) {
                 count += offset;
                 ++idx;
             }
-            --idx;
-            count -= offset;
             indices[i] = idx;
         }
 
-        int idx = 1;
-        while (count < index) {
+        int idx = 0;
+        while (count + idx <= index) {
             count += idx;
             ++idx;
         }
-        --idx;
         indices[last] = idx;
 
         return indices;
     }
\ No newline at end of file
