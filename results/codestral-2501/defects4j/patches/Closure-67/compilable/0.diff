diff --git a/tmp/8c8dc18a-70fc-4b86-b616-970c5a3a29bd_buggy.java b/tmp/647c1c5c-4345-4b23-aeb9-0cfbf7368503_fixed.java
index 939f49b..239d5be 100644
--- a/tmp/8c8dc18a-70fc-4b86-b616-970c5a3a29bd_buggy.java
+++ b/tmp/647c1c5c-4345-4b23-aeb9-0cfbf7368503_fixed.java
@@ -1,21 +1,17 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
+    Node propNode = n.getFirstChild();
+    if (propNode != null && propNode.getType() == Token.GETPROP) {
+      Node child = propNode.getFirstChild().getNext();
+      if (child != null && child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
