diff --git a/tmp/3adc10ec-13f5-4fc1-817a-dd63a6323c63_buggy.java b/tmp/e26468d2-2853-4828-8fcf-0a36233f1c57_fixed.java
index 939f49b..d715616 100644
--- a/tmp/3adc10ec-13f5-4fc1-817a-dd63a6323c63_buggy.java
+++ b/tmp/e26468d2-2853-4828-8fcf-0a36233f1c57_fixed.java
@@ -1,21 +1,29 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+        && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
             Node child = n.getFirstChild().getFirstChild().getNext();
 
             if (child.getType() == Token.STRING &&
                 child.getString().equals("prototype")) {
                 return true;
             }
         }
     }
 
+    // Check if the assignment is directly to a prototype property
+    if (n != null && n.getType() == Token.GETPROP) {
+        Node child = n.getFirstChild().getNext();
+
+        if (child.getType() == Token.STRING &&
+            child.getString().equals("prototype")) {
+            return true;
+        }
+    }
+
     return false;
 }
\ No newline at end of file
