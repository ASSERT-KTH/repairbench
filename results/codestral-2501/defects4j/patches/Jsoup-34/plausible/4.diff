diff --git a/tmp/e5db4cae-b332-46d6-bf04-05dd73cee027_buggy.java b/tmp/17274161-0610-46e6-b681-d8374634a7b4_fixed.java
index 21f64c6..2db0a96 100644
--- a/tmp/e5db4cae-b332-46d6-bf04-05dd73cee027_buggy.java
+++ b/tmp/17274161-0610-46e6-b681-d8374634a7b4_fixed.java
@@ -1,23 +1,17 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
         if (startChar != input[offset])
             while(++offset < length && startChar != input[offset]);
+        if (offset >= length) break; // avoid ArrayIndexOutOfBoundsException
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
+        if (last <= length) {
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
             if (i == last) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
