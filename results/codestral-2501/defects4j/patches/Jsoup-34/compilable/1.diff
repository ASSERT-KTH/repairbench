diff --git a/tmp/6263373e-a46d-4357-9e7a-32713b9e09c4_buggy.java b/tmp/382b6c81-ac4a-4e02-ae09-7da779fea855_fixed.java
index 21f64c6..aac5035 100644
--- a/tmp/6263373e-a46d-4357-9e7a-32713b9e09c4_buggy.java
+++ b/tmp/382b6c81-ac4a-4e02-ae09-7da779fea855_fixed.java
@@ -1,23 +1,18 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
-            if (startChar != input[offset])
+        if (startChar != input[offset]) {
             while (++offset < length && startChar != input[offset]);
+            if (offset >= length) return -1; // If we reached the end, sequence not found
+        }
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
+        if (last < length) {
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
             if (i == last) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
