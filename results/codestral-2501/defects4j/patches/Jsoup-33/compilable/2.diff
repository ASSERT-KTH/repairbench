diff --git a/tmp/fc427ab1-ee7a-4178-a793-0e96b2cc90cb_buggy.java b/tmp/4b0253ed-0a2a-4a2d-b300-608b1e87cbf4_fixed.java
index dc93be3..2168dae 100644
--- a/tmp/fc427ab1-ee7a-4178-a793-0e96b2cc90cb_buggy.java
+++ b/tmp/4b0253ed-0a2a-4a2d-b300-608b1e87cbf4_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
+
+    // Ensure known empty tags have a closing tag
+    if (el.tag().isKnownTag() && el.tag().isSelfClosing()) {
+        tokeniser.emit(new Token.EndTag(el.tagName()));
+    }
+
     return el;
 }
\ No newline at end of file
