diff --git a/tmp/6f892d32-8a1d-4e23-95a8-c8b9714e7129_buggy.java b/tmp/7f761880-1856-4539-8529-af65461e8f58_fixed.java
index 5f1dcf2..690c602 100644
--- a/tmp/6f892d32-8a1d-4e23-95a8-c8b9714e7129_buggy.java
+++ b/tmp/7f761880-1856-4539-8529-af65461e8f58_fixed.java
@@ -1,41 +1,53 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
+            } else {
+                // accept the expanded simplex
+                simplex = new RealPointValuePair[] { expanded };
             }
 
             return;
 
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
+            simplex = new RealPointValuePair[] { contracted };
 
             // check convergence
+            if (isConverged()) {
                 return;
             }
-
+        } else {
+            // shrink the simplex
+            shrinkSimplex(comparator);
         }
 
+        // check convergence
+        if (isConverged()) {
+            return;
+        }
+    }
 }
\ No newline at end of file
