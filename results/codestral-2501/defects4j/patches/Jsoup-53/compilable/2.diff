diff --git a/tmp/3400300d-bd9b-4a2d-8580-3dd3f2f9b40f_buggy.java b/tmp/22bb628f-18c9-4edb-be22-07cbf6251932_fixed.java
index fecb896..b3df3bb 100644
--- a/tmp/3400300d-bd9b-4a2d-8580-3dd3f2f9b40f_buggy.java
+++ b/tmp/22bb628f-18c9-4edb-be22-07cbf6251932_fixed.java
@@ -1,34 +1,40 @@
 /**
  * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
  * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
  * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
  * contains text strings; use unescape for that.
  * @param open opener
  * @param close closer
  * @return data matched from the queue
  */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
         if (last == 0 || last != ESC) {
             if (c.equals(open)) {
                 depth++;
                 if (start == -1)
                     start = pos;
-                }
-                else if (c.equals(close))
+            } else if (c.equals(close)) {
                 depth--;
             }
+        }
 
-            if (depth > 0 && last != 0)
+        if (depth > 0 && last != 0) {
             end = pos; // don't include the outer match pair in the return
+        }
         last = c;
     } while (depth > 0);
-        return (end >= 0) ? queue.substring(start, end) : "";
+
+    if (start == -1 || end == -1) {
+        return "";
+    }
+
+    return queue.substring(start, end);
 }
\ No newline at end of file
