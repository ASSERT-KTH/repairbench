diff --git a/tmp/581e8f98-8b2b-445d-9b1a-b21dac10f472_buggy.java b/tmp/70817841-6b62-4019-8604-1d05bb14a97a_fixed.java
index e69de29..bfbc040 100644
--- a/tmp/581e8f98-8b2b-445d-9b1a-b21dac10f472_buggy.java
+++ b/tmp/70817841-6b62-4019-8604-1d05bb14a97a_fixed.java
@@ -0,0 +1,29 @@
+import com.fasterxml.jackson.annotation.JsonTypeInfo;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.SerializationFeature;
+
+@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = "@class")
+class Base {
+    public int base = 1;
+}
+
+class Sub extends Base {
+    public int sub = 2;
+}
+
+public class TestTypeFactoryWithRecursiveTypes {
+    public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {
+        TypeFactory tf = TypeFactory.defaultInstance();
+        tf.constructType(Base.class);
+        tf.constructType(Sub.class);
+        Sub sub = new Sub();
+        ObjectMapper objectMapper = new ObjectMapper();
+        objectMapper.enable(SerializationFeature.INDENT_OUTPUT);
+        String serialized = objectMapper.writeValueAsString(sub);
+        assertEquals("{\"base\":1,\"sub\":2}", serialized);
+    }
+
+    public static void main(String[] args) throws IOException {
+        new TestTypeFactoryWithRecursiveTypes().testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType();
+    }
+}
\ No newline at end of file
