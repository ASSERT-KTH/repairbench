diff --git a/tmp/fed5257c-5157-4173-a3cc-3ea88c294629_buggy.java b/tmp/afb4415a-6d5b-4262-a56a-a6950752b3e6_fixed.java
index e8705ac..af1e81e 100644
--- a/tmp/fed5257c-5157-4173-a3cc-3ea88c294629_buggy.java
+++ b/tmp/afb4415a-6d5b-4262-a56a-a6950752b3e6_fixed.java
@@ -1,24 +1,18 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
 private void annotateCalls(Node n) {
   Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
+  // Keep track of the "this" context of a call.  A call without an
   // explicit "this" is a free call.
   Node first = n.getFirstChild();
 
   // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+  if (first != null && !NodeUtil.isGet(first)) {
     n.putBooleanProp(Node.FREE_CALL, true);
   }
 
   // Keep track of the context in which eval is called. It is important
   // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+  if (first != null && first.isName() && "eval".equals(first.getString())) {
     first.putBooleanProp(Node.DIRECT_EVAL, true);
   }
 }
\ No newline at end of file
