diff --git a/tmp/1e5f97f3-9e51-47ea-9eec-ca936fc19789_buggy.java b/tmp/16b1b79b-6ad5-4a35-92a7-c7407bc49909_fixed.java
index e8705ac..dfe8647 100644
--- a/tmp/1e5f97f3-9e51-47ea-9eec-ca936fc19789_buggy.java
+++ b/tmp/16b1b79b-6ad5-4a35-92a7-c7407bc49909_fixed.java
@@ -1,24 +1,22 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
 private void annotateCalls(Node n) {
   Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
+  // Keep track of the "this" context of a call. A call without an
   // explicit "this" is a free call.
   Node first = n.getFirstChild();
 
   // ignore cast nodes.
+  while (first.isCast()) {
+    first = first.getFirstChild();
+  }
 
   if (!NodeUtil.isGet(first)) {
     n.putBooleanProp(Node.FREE_CALL, true);
   }
 
   // Keep track of the context in which eval is called. It is important
   // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+  if (first.isName() && "eval".equals(first.getString())) {
     first.putBooleanProp(Node.DIRECT_EVAL, true);
   }
 }
\ No newline at end of file
