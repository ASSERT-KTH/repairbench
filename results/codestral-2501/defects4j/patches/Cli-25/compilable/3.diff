diff --git a/tmp/83b1bab5-d0ab-4be9-9f76-37e307a5ad25_buggy.java b/tmp/842ba63e-9131-4940-bd23-e1c5fbf9dd1b_fixed.java
index 875b31b..d7b4f17 100644
--- a/tmp/83b1bab5-d0ab-4be9-9f76-37e307a5ad25_buggy.java
+++ b/tmp/842ba63e-9131-4940-bd23-e1c5fbf9dd1b_fixed.java
@@ -1,54 +1,34 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+    protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
         int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+        if (pos == -1) {
             sb.append(rtrim(text));
-
             return sb;
         }
+
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
+        if (nextLineTabStop >= width) {
             // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // all following lines must be padded with nextLineTabStop space characters
         final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
+        while (true) {
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
 
-            if (pos == -1)
-            {
+            if (pos == -1) {
                 sb.append(text);
-
                 return sb;
             }
 
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
+            if (pos == nextLineTabStop - 1) {
                 pos = width;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
