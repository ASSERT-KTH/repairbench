diff --git a/tmp/37209bac-f8c9-42ea-b27d-db82077c23e1_buggy.java b/tmp/271daf77-359d-4863-b780-4d4b8aef57fb_fixed.java
index 98d89dc..5188372 100644
--- a/tmp/37209bac-f8c9-42ea-b27d-db82077c23e1_buggy.java
+++ b/tmp/271daf77-359d-4863-b780-4d4b8aef57fb_fixed.java
@@ -1,23 +1,32 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    // Fix for NaN comparison
+    if (Double.isNaN(ld) && Double.isNaN(rd)) {
+        return true;
+    }
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        return false;
+    }
+
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
