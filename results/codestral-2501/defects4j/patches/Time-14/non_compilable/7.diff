diff --git a/tmp/7af388bb-9ba7-4aa1-8355-292bbdb52b4c_buggy.java b/tmp/4726e468-56d0-4808-bb4e-be2e88d313d9_fixed.java
index 10616db..05397af 100644
--- a/tmp/7af388bb-9ba7-4aa1-8355-292bbdb52b4c_buggy.java
+++ b/tmp/4726e468-56d0-4808-bb4e-be2e88d313d9_fixed.java
@@ -1,19 +1,30 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+
+        // Adjust for leap year and end of month issues
+        for (int i = 0; i < newValues.length; i++) {
+            if (partial.getFieldType(i).isLeapYear() && newValues[i] > partial.getFieldType(i).getMaximumValue()) {
+                newValues[i] = partial.getFieldType(i).getMaximumValue();
+            }
+            if (partial.getFieldType(i).isEndOfMonth() && newValues[i] > partial.getFieldType(i).getMaximumValue()) {
+                newValues[i] = partial.getFieldType(i).getMaximumValue();
+            }
+        }
+
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
