diff --git a/tmp/4c220b1a-6945-4698-bab9-9f40fb5e7a8b_buggy.java b/tmp/51fefbab-fa31-488f-a663-e386d29d4eed_fixed.java
index 10616db..c066705 100644
--- a/tmp/4c220b1a-6945-4698-bab9-9f40fb5e7a8b_buggy.java
+++ b/tmp/51fefbab-fa31-488f-a663-e386d29d4eed_fixed.java
@@ -1,19 +1,29 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+
+        // Adjust for leap years and end of month
+        for (int i = 0; i < partial.size(); i++) {
+            int fieldType = partial.getFieldType(i).getField(iChronology).getType();
+            if (fieldType == DateTimeFieldType.dayOfMonth().getType()) {
+                int maxDays = partial.getChronology().dayOfMonth().getMaximumValue(newValues[DateTimeFieldType.monthOfYear().getType() - 1]);
+                if (newValues[i] > maxDays) {
+                    newValues[i] = maxDays;
+                }
+            }
+        }
+
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
