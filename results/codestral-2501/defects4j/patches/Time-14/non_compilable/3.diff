diff --git a/tmp/212e9fc3-7d2c-4cdd-ab7a-ba611b23fdcd_buggy.java b/tmp/a1e96924-2451-422a-90b6-8963d59f9811_fixed.java
index 10616db..245f8d0 100644
--- a/tmp/212e9fc3-7d2c-4cdd-ab7a-ba611b23fdcd_buggy.java
+++ b/tmp/a1e96924-2451-422a-90b6-8963d59f9811_fixed.java
@@ -1,19 +1,27 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+
+        // Adjust for month-day fields to handle end of month scenarios
+        if (partial.getFieldType(fieldIndex).getName().equals("monthOfYear")) {
+            int month = result[fieldIndex];
+            int day = result[fieldIndex + 1];
+            if (day > partial.getFieldType(fieldIndex + 1).getMaximumValue(month, iChronology)) {
+                result[fieldIndex + 1] = partial.getFieldType(fieldIndex + 1).getMaximumValue(month, iChronology);
+            }
+        }
+
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
