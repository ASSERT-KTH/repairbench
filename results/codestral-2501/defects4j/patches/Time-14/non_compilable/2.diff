diff --git a/tmp/ed3f55d9-7205-4443-b622-2708fe1dec3a_buggy.java b/tmp/5620fb62-ef59-41ea-8b58-e5eac323385b_fixed.java
index 10616db..e9614be 100644
--- a/tmp/ed3f55d9-7205-4443-b622-2708fe1dec3a_buggy.java
+++ b/tmp/5620fb62-ef59-41ea-8b58-e5eac323385b_fixed.java
@@ -1,19 +1,32 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+
+        // Adjust for leap years and end of month issues
+        if (partial.size() >= 2 && partial.getFieldType(1).getName().equals("dayOfMonth")) {
+            int month = result[0];
+            int day = result[1];
+            if (day > 28) {
+                int maxDayInMonth = DateTimeUtils.getDaysInMonth(month, iChronology.getYear(instant));
+                if (day > maxDayInMonth) {
+                    result[1] = maxDayInMonth;
+                }
+            }
+        }
+
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
