diff --git a/tmp/5a172d15-b51a-4c1f-b331-b2d5469fb96d_buggy.java b/tmp/2d7d4e28-6d86-479e-8198-61e45dee7b73_fixed.java
index bada2b6..fcd8345 100644
--- a/tmp/5a172d15-b51a-4c1f-b331-b2d5469fb96d_buggy.java
+++ b/tmp/2d7d4e28-6d86-479e-8198-61e45dee7b73_fixed.java
@@ -1,16 +1,20 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
  *
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
     if (generic != null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
         // in case of nested generics we don't go deep
     }
 
     return Object.class;
 }
\ No newline at end of file
