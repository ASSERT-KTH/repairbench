diff --git a/tmp/0b26489d-356a-40ed-a1a7-ec558b86d398_buggy.java b/tmp/051de5d0-732d-4584-8797-3fb85f2619b8_fixed.java
index 1c53d31..2f9c789 100644
--- a/tmp/0b26489d-356a-40ed-a1a7-ec558b86d398_buggy.java
+++ b/tmp/051de5d0-732d-4584-8797-3fb85f2619b8_fixed.java
@@ -1,20 +1,22 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
         Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
         typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
         Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
         typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
             .construct()
             .create(gson, fieldType);
     } else {
         throw new IllegalArgumentException(
             "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+    if (typeAdapter != null) {
         typeAdapter = typeAdapter.nullSafe();
+    }
     return typeAdapter;
 }
\ No newline at end of file
