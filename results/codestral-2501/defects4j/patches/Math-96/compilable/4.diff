diff --git a/tmp/e3adb59d-3d3b-4a32-9255-cd1879a2b17b_buggy.java b/tmp/c2380994-0871-4d2e-b225-e2f4d3c1e80c_fixed.java
index f674e52..6e73def 100644
--- a/tmp/e3adb59d-3d3b-4a32-9255-cd1879a2b17b_buggy.java
+++ b/tmp/c2380994-0871-4d2e-b225-e2f4d3c1e80c_fixed.java
@@ -1,41 +1,19 @@
-    /**
-     * Test for the equality of two Complex objects.
-     * <p>
-     * If both the real and imaginary parts of two Complex numbers
-     * are exactly the same, and neither is <code>Double.NaN</code>, the two
-     * Complex objects are considered to be equal.</p>
-     * <p>
-     * All <code>NaN</code> values are considered to be equal - i.e, if either
-     * (or both) real and imaginary parts of the complex number are equal
-     * to <code>Double.NaN</code>, the complex number is equal to 
-     * <code>Complex.NaN</code>.</p>
-     *
-     * @param other Object to test for equality to this
-     * @return true if two Complex objects are equal, false if
-     *         object is null, not an instance of Complex, or
-     *         not equal to this Complex instance
-     * 
-     */
 public boolean equals(Object other) {
     boolean ret;
 
     if (this == other) {
         ret = true;
-        } else if (other == null) {
+    } else if (other == null || !(other instanceof Complex)) {
         ret = false;
     } else {
-            try {
         Complex rhs = (Complex) other;
-                if (rhs.isNaN()) {
-                    ret = this.isNaN();
+        if (Double.isNaN(real) || Double.isNaN(imaginary) || Double.isNaN(rhs.getReal()) || Double.isNaN(rhs.getImaginary())) {
+            ret = Double.isNaN(real) && Double.isNaN(rhs.getReal()) && Double.isNaN(imaginary) && Double.isNaN(rhs.getImaginary());
         } else {
-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
-                }
-            } catch (ClassCastException ex) {
-                // ignore exception
-                ret = false;
+            ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) &&
+                  (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
         }
     }
 
     return ret;
 }
\ No newline at end of file
