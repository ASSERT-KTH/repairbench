diff --git a/tmp/3d57eeea-4781-4489-b278-55d4ae10a0a8_buggy.java b/tmp/9df8c1fe-fbcc-468d-9dda-ccf649fdd0d2_fixed.java
index e0ecec8..5fab84d 100644
--- a/tmp/3d57eeea-4781-4489-b278-55d4ae10a0a8_buggy.java
+++ b/tmp/9df8c1fe-fbcc-468d-9dda-ccf649fdd0d2_fixed.java
@@ -1,35 +1,36 @@
 /**
  * Visits the parameters of a CALL or a NEW node.
  */
-  private void visitParameterList(NodeTraversal t, Node call,
-      FunctionType functionType) {
+private void visitParameterList(NodeTraversal t, Node call, FunctionType functionType) {
     Iterator<Node> arguments = call.children().iterator();
     arguments.next(); // skip the function name
 
     Iterator<Node> parameters = functionType.getParameters().iterator();
     int ordinal = 0;
     Node parameter = null;
     Node argument = null;
-    while (arguments.hasNext() &&
-           parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
+    while (arguments.hasNext()) {
+        if (parameters.hasNext()) {
             parameter = parameters.next();
+        } else {
+            // This is a var_args function, and we have more arguments than parameters.
+            parameter = null;
+        }
         argument = arguments.next();
         ordinal++;
 
         validator.expectArgumentMatchesParameter(t, argument,
-          getJSType(argument), getJSType(parameter), call, ordinal);
+            getJSType(argument), parameter != null ? getJSType(parameter) : null, call, ordinal);
     }
 
     int numArgs = call.getChildCount() - 1;
     int minArgs = functionType.getMinArguments();
     int maxArgs = functionType.getMaxArguments();
     if (minArgs > numArgs || maxArgs < numArgs) {
         report(t, call, WRONG_ARGUMENT_COUNT,
                 validator.getReadableJSTypeName(call.getFirstChild(), false),
                 String.valueOf(numArgs), String.valueOf(minArgs),
                 maxArgs != Integer.MAX_VALUE ?
                 " and no more than " + maxArgs + " argument(s)" : "");
     }
 }
\ No newline at end of file
