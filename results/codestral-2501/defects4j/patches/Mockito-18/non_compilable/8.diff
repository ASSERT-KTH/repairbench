diff --git a/tmp/c5a611be-1de2-4ceb-9a40-f7d373f44513_buggy.java b/tmp/b2ad8cbc-4925-45f7-a64a-a53fb68382e7_fixed.java
index 710fcc0..23f842a 100644
--- a/tmp/c5a611be-1de2-4ceb-9a40-f7d373f44513_buggy.java
+++ b/tmp/b2ad8cbc-4925-45f7-a64a-a53fb68382e7_fixed.java
@@ -1,37 +1,36 @@
 Object returnValueFor(Class<?> type) {
     if (Primitives.isPrimitiveOrWrapper(type)) {
         return Primitives.defaultValueForPrimitiveOrWrapper(type);
-            //new instances are used instead of Collections.emptyList(), etc.
-            //to avoid UnsupportedOperationException if code under test modifies returned collection
     } else if (type == Collection.class) {
-            return new LinkedList<Object>();
+        return Collections.emptyList();
     } else if (type == Set.class) {
-            return new HashSet<Object>();
+        return Collections.emptySet();
     } else if (type == HashSet.class) {
-            return new HashSet<Object>();
+        return Collections.emptySet();
     } else if (type == SortedSet.class) {
-            return new TreeSet<Object>();
+        return Collections.emptySortedSet();
     } else if (type == TreeSet.class) {
-            return new TreeSet<Object>();
+        return Collections.emptySortedSet();
     } else if (type == LinkedHashSet.class) {
-            return new LinkedHashSet<Object>();
+        return Collections.emptySet();
     } else if (type == List.class) {
-            return new LinkedList<Object>();
+        return Collections.emptyList();
     } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
+        return Collections.emptyList();
     } else if (type == ArrayList.class) {
-            return new ArrayList<Object>();
+        return Collections.emptyList();
     } else if (type == Map.class) {
-            return new HashMap<Object, Object>();
+        return Collections.emptyMap();
     } else if (type == HashMap.class) {
-            return new HashMap<Object, Object>();
+        return Collections.emptyMap();
     } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
+        return Collections.emptySortedMap();
     } else if (type == TreeMap.class) {
-            return new TreeMap<Object, Object>();
+        return Collections.emptySortedMap();
     } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
+        return Collections.emptyMap();
+    } else if (type == Iterable.class) {
+        return Collections.emptyList();
     }
-        //Let's not care about the rest of collections.
     return null;
 }
\ No newline at end of file
