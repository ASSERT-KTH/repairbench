diff --git a/tmp/f311d405-40c4-4fdd-bb35-d2b8235a5547_buggy.java b/tmp/34851735-038d-47d8-87f3-5ea09ff132ab_fixed.java
index 03b03d7..dbf3145 100644
--- a/tmp/f311d405-40c4-4fdd-bb35-d2b8235a5547_buggy.java
+++ b/tmp/34851735-038d-47d8-87f3-5ea09ff132ab_fixed.java
@@ -1,25 +1,28 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  *
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
 
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
 
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    long adjustedInstant = convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
     // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    if (adjustedInstant == instant) {
+        // If the adjusted instant is the same as the original, return the original instant
+        return instant;
+    }
+    return adjustedInstant;
 }
\ No newline at end of file
