diff --git a/tmp/e0cb705a-23d6-4203-a29c-fc06cc722b8f_buggy.java b/tmp/b1e77ae4-d027-4a91-8557-5db61d9b732f_fixed.java
index 6e45f80..027b1b1 100644
--- a/tmp/e0cb705a-23d6-4203-a29c-fc06cc722b8f_buggy.java
+++ b/tmp/b1e77ae4-d027-4a91-8557-5db61d9b732f_fixed.java
@@ -1,21 +1,21 @@
-  /**
-   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
-   * that the deserialized type matches the type requested.
-   */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Ensure the typeAdapter is capable of handling the requested type
+      if (clazz.isAssignableFrom(requestedType)) {
         return (TypeAdapter<T2>) typeAdapter;
-
+      } else {
+        return null;
+      }
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
