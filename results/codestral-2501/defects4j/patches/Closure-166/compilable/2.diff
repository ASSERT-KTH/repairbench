diff --git a/tmp/e72639c4-a240-491a-9306-13adf6faaa50_buggy.java b/tmp/5970df6f-ef7e-47df-8e98-41c3f2e7e9ee_fixed.java
index 5f96616..f5a20a9 100644
--- a/tmp/e72639c4-a240-491a-9306-13adf6faaa50_buggy.java
+++ b/tmp/5970df6f-ef7e-47df-8e98-41c3f2e7e9ee_fixed.java
@@ -1,20 +1,27 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
     matchRecordTypeConstraint(constraint.toObjectType());
+  } else if (constraint.isUnionType()) {
+    for (JSType alternate : constraint.toMaybeUnionType().getAlternates()) {
+      if (alternate.isRecordType()) {
+        matchRecordTypeConstraint(alternate.toObjectType());
+        break;
+      }
+    }
   }
 }
\ No newline at end of file
