diff --git a/tmp/3976d2bf-02da-4aa2-ad3f-3d7f54068808_buggy.java b/tmp/40be92fc-6eb2-4abe-adbf-2a8acf865ec4_fixed.java
index 5f96616..b93f947 100644
--- a/tmp/3976d2bf-02da-4aa2-ad3f-3d7f54068808_buggy.java
+++ b/tmp/40be92fc-6eb2-4abe-adbf-2a8acf865ec4_fixed.java
@@ -1,20 +1,26 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
+    // Correctly handle the record type constraint
     matchRecordTypeConstraint(constraint.toObjectType());
+  } else if (constraint.isUnionType()) {
+    // Handle union types by matching each type in the union
+    for (JSType alternate : constraint.toMaybeUnionType().getAlternates()) {
+      matchConstraint(alternate);
+    }
   }
 }
\ No newline at end of file
