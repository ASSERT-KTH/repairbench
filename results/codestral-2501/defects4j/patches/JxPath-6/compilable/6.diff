diff --git a/tmp/46fc2801-0622-45a0-acd3-8006a57938f7_buggy.java b/tmp/8caa2bdf-c949-453c-bc31-8ecf9272474a_fixed.java
index f650982..af2b683 100644
--- a/tmp/46fc2801-0622-45a0-acd3-8006a57938f7_buggy.java
+++ b/tmp/8caa2bdf-c949-453c-bc31-8ecf9272474a_fixed.java
@@ -1,42 +1,49 @@
-    /**
-     * Compares two values
-     */
-    protected boolean equal(
-        EvalContext context,
-        Expression left,
-        Expression right) 
+protected boolean equal(EvalContext context, Expression left, Expression right)
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
 //    System.err.println("COMPARING: " +
 //        (l == null ? "null" : l.getClass().getName()) + " " +
 //        (r == null ? "null" : r.getClass().getName()));
 
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
     }
 
     if ((l instanceof Iterator) && !(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
     if (!(l instanceof Iterator) && (r instanceof Iterator)) {
         return contains((Iterator) r, l);
     }
     if (l instanceof Iterator && r instanceof Iterator) {
         return findMatch((Iterator) l, (Iterator) r);
     }
+
+    // Fix: Ensure proper comparison of elements within iterators
+    if (l instanceof Iterator && r instanceof Iterator) {
+        Iterator<?> it1 = (Iterator<?>) l;
+        Iterator<?> it2 = (Iterator<?>) r;
+        while (it1.hasNext() && it2.hasNext()) {
+            if (!equal(it1.next(), it2.next())) {
+                return false;
+            }
+        }
+        return !it1.hasNext() && !it2.hasNext();
+    }
+
     return equal(l, r);
 }
\ No newline at end of file
