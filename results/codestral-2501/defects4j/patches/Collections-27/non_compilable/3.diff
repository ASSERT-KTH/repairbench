diff --git a/tmp/b3d9f6ae-86ad-4372-afc9-c512d456c946_buggy.java b/tmp/e1856b5a-f3e1-4eaa-b718-eb110d2b6408_fixed.java
index e69de29..729cebd 100644
--- a/tmp/b3d9f6ae-86ad-4372-afc9-c512d456c946_buggy.java
+++ b/tmp/e1856b5a-f3e1-4eaa-b718-eb110d2b6408_fixed.java
@@ -0,0 +1,37 @@
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.Serializable;
+import java.util.HashMap;
+
+public class MultiValueMap implements Serializable {
+    private HashMap map;
+    private Class valueClass;
+
+    public MultiValueMap(HashMap map, Class valueClass) {
+        this.map = map;
+        this.valueClass = valueClass;
+    }
+
+    public static MultiValueMap multiValueMap(HashMap map, Class valueClass) {
+        return new MultiValueMap(map, valueClass);
+    }
+
+    private void writeObject(ObjectOutputStream out) throws IOException {
+        out.defaultWriteObject();
+    }
+
+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject();
+        if (!isSafeClass(valueClass)) {
+            throw new UnsupportedOperationException("Unsafe class type detected during deserialization");
+        }
+    }
+
+    private boolean isSafeClass(Class<?> clazz) {
+        // Define the safe classes here, for example:
+        return clazz == ArrayList.class || clazz == String.class;
+    }
+
+    // Other methods and fields...
+}
\ No newline at end of file
