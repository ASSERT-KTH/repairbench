diff --git a/tmp/d030286e-e927-42fe-ae55-47680d5deb8d_buggy.java b/tmp/bb0942b1-c0c9-4083-833c-3b966f9d6d79_fixed.java
index 8bae155..60670a7 100644
--- a/tmp/d030286e-e927-42fe-ae55-47680d5deb8d_buggy.java
+++ b/tmp/bb0942b1-c0c9-4083-833c-3b966f9d6d79_fixed.java
@@ -1,5 +1,28 @@
     @Override
     public String asStringLiteral()
     {
-        return '"' + this.value + '"';
+        // Get the raw string value
+        String val = this.value;
+
+        boolean containsSingle = val.contains("'");
+        boolean containsDouble = val.contains("\"");
+
+        // Determine the best quote character to use for the literal representation
+        if (containsDouble && !containsSingle)
+        {
+            // If the string contains double quotes but no single quotes,
+            // use single quotes as delimiters to avoid escaping the internal double quotes.
+            // We still need to escape any backslashes within the string.
+            String escapedValue = val.replace("\\", "\\\\");
+            // No need to escape ' since it's not present according to the condition.
+            return "'" + escapedValue + "'";
+        }
+        else
+        {
+            // In all other cases (contains single only, contains both, contains neither),
+            // use double quotes as delimiters. This is generally the preferred style.
+            // We need to escape backslashes and any internal double quotes.
+            String escapedValue = val.replace("\\", "\\\\").replace("\"", "\\\"");
+            return "\"" + escapedValue + "\"";
+        }
     }
\ No newline at end of file
