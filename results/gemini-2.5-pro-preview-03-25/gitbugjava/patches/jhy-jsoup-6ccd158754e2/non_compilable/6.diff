diff --git a/tmp/25485bd5-36da-426b-b40d-2dd98d1c7af3_buggy.java b/tmp/0fbd0fc5-391a-477a-82c2-35c137659ba2_fixed.java
index 23f078d..c9d13e5 100644
--- a/tmp/25485bd5-36da-426b-b40d-2dd98d1c7af3_buggy.java
+++ b/tmp/0fbd0fc5-391a-477a-82c2-35c137659ba2_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+        for (int i = 0; i < s.length(); ) { // Use code point iteration
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
+                // Convert the code point to its character representation (possibly 2 chars for supplementary)
+                // then URL encode it using UTF-8
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
+                // Basic ASCII character
                 sb.append((char) c);
             }
+            // Advance the index by the number of char units used by the current code point
+            i += Character.charCount(c);
         }
     }
\ No newline at end of file
