diff --git a/tmp/179cefd7-5b60-4623-acec-9b008f7d1c07_buggy.java b/tmp/bf1dd6cd-7736-4d9d-b54f-ffaeb9a3b912_fixed.java
index 23f078d..36da6e2 100644
--- a/tmp/179cefd7-5b60-4623-acec-9b008f7d1c07_buggy.java
+++ b/tmp/bf1dd6cd-7736-4d9d-b54f-ffaeb9a3b912_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+        for (int i = 0; i < s.length(); ) { // Note the removal of i++ here
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
+                // Convert the code point to a String, then URL-encode it
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
+                // ASCII character, append directly
                 sb.append((char) c);
             }
+            // Advance index by the number of chars used by the current code point (1 for BMP, 2 for supplementary)
+            i += Character.charCount(c);
         }
     }
\ No newline at end of file
