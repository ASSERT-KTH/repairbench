diff --git a/tmp/472c41b3-850b-4952-856b-ad3d54a4089d_buggy.java b/tmp/28d56b4c-200d-44fe-8c00-7626b76c694d_fixed.java
index e807cbf..784c2d1 100644
--- a/tmp/472c41b3-850b-4952-856b-ad3d54a4089d_buggy.java
+++ b/tmp/28d56b4c-200d-44fe-8c00-7626b76c694d_fixed.java
@@ -1,7 +1,23 @@
     private boolean isInlineable(Document.OutputSettings out) {
+        // 1. Must be an inline tag itself.
         if (!tag.isInline())
             return false;
+
+        // 2. Special handling for <br>: Only inlineable if its parent is also inline.
+        //    Otherwise (if parent is block), it acts as a line break and should not be treated as inline content.
+        if (tag.getName().equals("br")) {
+            // Simplified: <br> is never inlineable when pretty printing with block parents involved,
+            // as it inherently introduces a break. Let's refine based on parent type.
+            // Only truly inlineable if parent itself is inline.
+            return parent() != null && parent().tag().isInline();
+            // Prior logic caused issues like #1911 where <br> in block was inlineable if not first.
+        }
+
+        // 3. General inline elements:
+        //    - Parent must establish a block context (be block or null)
+        //    - Must not be the first significant child in that block context
+        //    - Output settings must not force outlining.
         return (parent() == null || parent().isBlock())
             && !isEffectivelyFirst()
             && !out.outline();
     }
\ No newline at end of file
