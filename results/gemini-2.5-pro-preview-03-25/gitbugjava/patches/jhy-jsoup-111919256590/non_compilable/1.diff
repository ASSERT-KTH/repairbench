diff --git a/tmp/2c4d787f-329f-4507-9a9c-3aa31c1a8b25_buggy.java b/tmp/bafd5b96-2086-400c-8dea-a5085741ec87_fixed.java
index e807cbf..ffce6d3 100644
--- a/tmp/2c4d787f-329f-4507-9a9c-3aa31c1a8b25_buggy.java
+++ b/tmp/bafd5b96-2086-400c-8dea-a5085741ec87_fixed.java
@@ -1,7 +1,26 @@
     private boolean isInlineable(Document.OutputSettings out) {
-        if (!tag.isInline())
+        // Special handling for <br> because it's an inline tag but behaves like a block boundary for pretty printing.
+        // A <br> is considered "inlineable" (eligible to not have a preceding indent) only when:
+        // - It's the first effective child of a block element.
+        // - We are not in outline mode.
+        // Otherwise (e.g., a <br> after other content), it should trigger an indent like a block element.
+        if (tag.getName().equals("br")) {
+            // Short circuit evaluation: Check conditions that make it non-inlineable first.
+            if (out.outline() || parent() == null || !parent().isBlock())
+                return false; // Can't be inlineable if outlining, root, or parent not block
+            // If parent is block and not outlining, inlineable status depends ONLY on being the first effective child.
+            return isEffectivelyFirst(); // Inlineable only if it's the first child
+        }
+
+        // General case for other tags:
+        if (!tag.isInline()) // Block tags are never inlineable (they always cause indent if parent is block)
             return false;
+
+        // Inline tags are considered inlineable (eligible to not have a preceding indent) if:
+        // 1. Parent is block (or null - root allows inlineable)
+        // 2. It's NOT the first effective child (the first effective child should be indented)
+        // 3. Not in outline mode
         return (parent() == null || parent().isBlock())
             && !isEffectivelyFirst()
             && !out.outline();
     }
\ No newline at end of file
