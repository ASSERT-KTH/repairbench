diff --git a/tmp/62d7a499-fe5d-4943-b7c9-5494bcfb8d97_buggy.java b/tmp/0b133a61-ae9f-4d41-96f2-d48fccae26f4_fixed.java
index 33e2e76..c68215b 100644
--- a/tmp/62d7a499-fe5d-4943-b7c9-5494bcfb8d97_buggy.java
+++ b/tmp/0b133a61-ae9f-4d41-96f2-d48fccae26f4_fixed.java
@@ -1,126 +1,133 @@
     private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
         CellTower cellTower = new CellTower();
         String[] keys = form.substring(1).split("%");
         for (String key : keys) {
             switch (key) {
                 case "SA":
                     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                     break;
                 case "MV":
                     position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
                     break;
                 case "BV":
                     position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
                     break;
                 case "GQ":
                     cellTower.setSignalStrength((int) buf.readUnsignedByte());
                     break;
                 case "CE":
                     cellTower.setCellId(buf.readUnsignedInt());
                     break;
                 case "LC":
                     cellTower.setLocationAreaCode(buf.readUnsignedShort());
                     break;
                 case "CN":
                     int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
                     cellTower.setMobileCountryCode(combinedMobileCodes / 100);
                     cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
                     break;
                 case "RL":
                     buf.readUnsignedByte(); // rxlev
                     break;
                 case "PC":
                     position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
                     break;
                 case "AT":
                     position.setAltitude(buf.readUnsignedInt());
                     break;
                 case "RP":
                     position.set(Position.KEY_RPM, buf.readUnsignedShort());
                     break;
                 case "GS":
                     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                     break;
                 case "DT":
                     position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
                     break;
                 case "VN":
                     position.set(Position.KEY_VIN, readString(buf));
                     break;
                 case "MF":
                     buf.readUnsignedShort(); // mass air flow rate
                     break;
                 case "EL":
                     buf.readUnsignedByte(); // engine load
                     break;
                 case "TR":
                     position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                     break;
                 case "ET":
                     position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
                     break;
                 case "FL":
                     position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                     break;
                 case "ML":
                     buf.readUnsignedByte(); // mil status
                     break;
                 case "FC":
                     position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
                     break;
                 case "CI":
-                    readString(buf); // format string
+                    readString(buf); // format string (or custom info identifier) - value often discarded
                     break;
                 case "AV1":
                     position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
                     break;
                 case "NC":
                     readString(buf); // gsm neighbor cell info
                     break;
                 case "SM":
                     buf.readUnsignedShort(); // max speed between reports
                     break;
                 case "GL":
                     readString(buf); // google link
                     break;
                 case "MA":
                     readString(buf); // mac address
                     break;
                 case "PD":
                     buf.readUnsignedByte(); // pending code status
                     break;
                 case "CD":
                     position.set(Position.KEY_ICCID, readString(buf));
                     break;
                 case "CM":
                     buf.readLong(); // imsi
                     break;
                 case "GN":
                     buf.skipBytes(60); // g sensor data
                     break;
                 case "GV":
                     buf.skipBytes(6); // maximum g force
                     break;
                 case "ME":
                     buf.readLong(); // imei
                     break;
                 case "IA":
                     buf.readUnsignedByte(); // intake air temperature
                     break;
                 case "MP":
                     buf.readUnsignedByte(); // manifold absolute pressure
                     break;
                 default:
+                    // Handle unknown keys if necessary, e.g., log a warning
+                    // Depending on protocol, might need to skip a fixed/variable number of bytes
                     break;
             }
         }
 
+        // Check CellTower data validity before creating Network object
+        // Fix: Check cellId for null before comparing with 0 to prevent NPE from unboxing
+        Long cellId = cellTower.getCellId();
         if (cellTower.getMobileCountryCode() != null
                 && cellTower.getMobileNetworkCode() != null
-            && cellTower.getCellId() != null && cellTower.getCellId() != 0
+                && cellId != null && cellId != 0L // Safe check for non-null and non-zero Long
                 && cellTower.getLocationAreaCode() != null) {
             position.setNetwork(new Network(cellTower));
         } else if (cellTower.getSignalStrength() != null) {
+            // Fallback: If network info is incomplete but signal strength exists, set it as RSSI
+            // Note: This might overwrite RSSI read from "GS" key if both are present
             position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
         }
     }
\ No newline at end of file
