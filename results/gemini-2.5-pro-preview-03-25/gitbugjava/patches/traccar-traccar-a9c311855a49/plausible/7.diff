diff --git a/tmp/0f6211e3-dc0f-45f3-88cf-d0789130d34e_buggy.java b/tmp/429dbbc4-adb9-4383-a5be-6b3189ab540c_fixed.java
index ff397b6..f23f1a6 100644
--- a/tmp/0f6211e3-dc0f-45f3-88cf-d0789130d34e_buggy.java
+++ b/tmp/429dbbc4-adb9-4383-a5be-6b3189ab540c_fixed.java
@@ -1,35 +1,42 @@
     @Override
     protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
         JsonObject json;
         try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
             json = Json.createReader(inputStream).readObject();
         }
 
         String type = json.getString("rpt");
         switch (type) {
             case "hf":
             case "loc":
                 Position position = new Position(getProtocolName());
                 position.setDeviceId(deviceSession.getDeviceId());
 
                 position.setValid(true);
 
-                DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
+                // Correct the date format to match the input "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
+                // Use 'X' for ISO 8601 time zone designator to handle 'Z' as UTC
+                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSX");
+                // Setting TimeZone explicitly is also an option if 'X' is not used, but 'X' is generally preferred for ISO 8601
+                // dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
                 position.setTime(dateFormat.parse(json.getString("ts")));
 
                 JsonObject location = json.getJsonObject("location");
                 position.setLatitude(location.getJsonNumber("lat").doubleValue());
                 position.setLongitude(location.getJsonNumber("lon").doubleValue());
 
-                position.setCourse(json.getInt("bear"));
-                position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
+                // Use getJsonNumber and intValue() for consistency and potential type safety
+                position.setCourse(json.getJsonNumber("bear").intValue());
+                position.setSpeed(UnitsConverter.knotsFromCps(json.getJsonNumber("spd").intValue()));
 
                 position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
 
                 return position;
 
             default:
+                // It's good practice to log or handle unknown types if necessary
+                // Log.warning("Unknown PUI report type: " + type);
                 return null;
         }
     }
\ No newline at end of file
