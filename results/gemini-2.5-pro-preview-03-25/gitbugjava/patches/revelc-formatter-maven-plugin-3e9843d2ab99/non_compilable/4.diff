diff --git a/tmp/ee20a07a-cade-4953-9889-595a74e53be7_buggy.java b/tmp/d079465f-d0cb-47ea-93d5-fe6f06f06853_fixed.java
index 1098336..6264b7e 100644
--- a/tmp/ee20a07a-cade-4953-9889-595a74e53be7_buggy.java
+++ b/tmp/d079465f-d0cb-47ea-93d5-fe6f06f06853_fixed.java
@@ -1,16 +1,33 @@
     @Override
     protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
         final var source = new InputSource(new StringReader(code));
         final var parser = new CSSOMParser(new SACParserCSS3());
         final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
+
+        // Ensure the formatter uses the requested line ending
+        this.formatter.setLineSeparator(ending.getChars());
+
         var formattedCode = sheet.getCssText(this.formatter);
 
         // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
-        formattedCode = formattedCode.replace("\t;", "\\9;");
+        // Need to handle potential variations in whitespace generated by the formatter.
+        // Regex ensures we replace \t; possibly surrounded by whitespace, but preserves the \9; structure.
+        formattedCode = formattedCode.replaceAll("\\s*\\t\\s*;", "\\\\9;");
 
+        // Remove potential trailing newline added by the formatter if the original code didn't have one
+        // and if the formatted code is not empty. The comparison check later handles the empty case.
+        if (!code.endsWith(ending.getChars()) && formattedCode.endsWith(ending.getChars())) {
+             // Check if the only difference is the trailing newline
+             if (code.equals(formattedCode.substring(0, formattedCode.length() - ending.getChars().length()))) {
+                 formattedCode = formattedCode.substring(0, formattedCode.length() - ending.getChars().length());
+             }
+        }
+
+        // Avoid returning unchanged code, which signals no formatting was needed.
         if (code.equals(formattedCode)) {
             return null;
         }
+
         return formattedCode;
     }
\ No newline at end of file
