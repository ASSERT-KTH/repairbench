diff --git a/tmp/834ca487-e7f9-4853-aa66-a703f991040e_buggy.java b/tmp/8595711b-55fa-47d3-96ef-1c77f6e3b440_fixed.java
index c84c989..f63b801 100644
--- a/tmp/834ca487-e7f9-4853-aa66-a703f991040e_buggy.java
+++ b/tmp/8595711b-55fa-47d3-96ef-1c77f6e3b440_fixed.java
@@ -1,27 +1,35 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
         buf.readUnsignedShortLE(); // length
 
         buf.skipBytes(3); // identification header
         buf.readUnsignedIntLE(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
 
-        buf.skipBytes(23); // coordinates block
+        // The following fields seem to be part of the actual payload,
+        // handled by decodeMinimalDataSet or similar methods later.
+        // buf.readUnsignedIntLE(); // date and time - Incorrectly read here
+        // buf.skipBytes(23); // coordinates block - Incorrectly skipped here
+        // buf.skipBytes(3); // data tag header - Incorrectly skipped here
 
-        buf.skipBytes(3); // data tag header
+        // decodeMinimalDataSet should decode the rest of the payload, including time and coordinates
         decodeMinimalDataSet(position, buf);
 
+        // Check if time was decoded, if not, the payload might be different or incomplete
+        if (position.getFixTime() == null) {
+            getLastLocation(position, null); // Use previous location time if available
+        }
+
         return position;
     }
\ No newline at end of file
