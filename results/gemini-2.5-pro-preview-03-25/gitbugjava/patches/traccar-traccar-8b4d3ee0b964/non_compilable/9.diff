diff --git a/tmp/1e679ed0-3aa9-4e8e-8f80-21de86be50f0_buggy.java b/tmp/4a21e616-e358-446e-b9d6-0c27e67edb26_fixed.java
index 27f2719..2e25795 100644
--- a/tmp/1e679ed0-3aa9-4e8e-8f80-21de86be50f0_buggy.java
+++ b/tmp/4a21e616-e358-446e-b9d6-0c27e67edb26_fixed.java
@@ -1,90 +1,97 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         String sentence = (String) msg;
 
         if (sentence.startsWith("!1,")) {
             int index = sentence.indexOf(',', 3);
             if (index < 0) {
                 index = sentence.length();
             }
             getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
             return null;
         }
 
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
         if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
             return null;
         }
 
-        Position position = new Position(getProtocolName());
+        // Ensure protocol name is available before creating Position
+        // This prevents NullPointerException if getProtocolName() returns null
+        // (e.g., if the Protocol object wasn't provided to the constructor)
+        String protocolName = getProtocolName();
+        if (protocolName == null) {
+            return null; // Cannot create Position without protocol name
+        }
+        Position position = new Position(protocolName);
         position.setDeviceId(deviceSession.getDeviceId());
 
         String type = sentence.substring(1, 2);
         position.set(Position.KEY_TYPE, type);
 
         if (type.equals("3")) {
 
             getLastLocation(position, null);
 
             position.set(Position.KEY_RESULT, sentence.substring(3));
 
             return position;
 
         } else if (type.equals("5")) {
 
             String[] values = sentence.split(",");
 
             getLastLocation(position, null);
 
             position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
             if (values.length >= 4) {
                 position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
             }
 
             return position;
 
         } else if (type.equals("B") || type.equals("D")) {
 
             Parser parser = new Parser(PATTERN_BD, sentence);
             if (!parser.matches()) {
                 return null;
             }
 
             decodeFix(position, parser);
             decodeState(position, parser);
 
             position.set(Position.KEY_SATELLITES, parser.nextInt(0));
             position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
             position.set(Position.KEY_HDOP, parser.nextDouble(0));
 
             return position;
 
         } else if (type.equals("C")) {
 
             Parser parser = new Parser(PATTERN_C, sentence);
             if (!parser.matches()) {
                 return null;
             }
 
             decodeFix(position, parser);
             decodeState(position, parser);
 
             return position;
 
         } else if (type.equals("A")) {
 
             Parser parser = new Parser(PATTERN_A, sentence);
             if (!parser.matches()) {
                 return null;
             }
 
             decodeFix(position, parser);
 
             return position;
 
         }
 
         return null;
     }
\ No newline at end of file
