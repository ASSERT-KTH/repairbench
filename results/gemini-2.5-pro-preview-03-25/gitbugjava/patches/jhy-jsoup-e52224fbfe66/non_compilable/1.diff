diff --git a/tmp/4a4b5068-f445-4659-a1e2-71e248280d3a_buggy.java b/tmp/367aad1c-ecb1-4805-a5bf-da6e5dca6262_fixed.java
index acd5eb5..9e5c4d9 100644
--- a/tmp/4a4b5068-f445-4659-a1e2-71e248280d3a_buggy.java
+++ b/tmp/367aad1c-ecb1-4805-a5bf-da6e5dca6262_fixed.java
@@ -1,32 +1,35 @@
     @Override
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
         final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
         boolean trimLeading = false, trimTrailing = false;
 
         if (normaliseWhite) {
             trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
             trimTrailing = trimLikeBlock && nextSibling() == null;
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             Node prev = previousSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
                 || (prev instanceof Element && ((Element) prev).isBlock())
                 ;
             if (couldSkip && isBlank) return;
 
+            // FIMXE: This condition was modified to fix https://github.com/jhy/jsoup/issues/1127
+            // Originally: (siblingIndex > 0 && isNode(prev, "br"))
+            // Fixed: Add !isBlank check to avoid indenting before blank text following a <br>
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && isNode(prev, "br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+                (siblingIndex > 0 && isNode(prev, "br") && !isBlank) // special case wrap on inline <br> - doesn't make sense as a block tag, but should indentKNOWN AFTER, only if text is not blank
             )
                 indent(accum, depth, out);
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
