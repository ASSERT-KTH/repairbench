diff --git a/tmp/245d4a2c-adc7-4b6f-9624-eeaa8bd0ebd7_buggy.java b/tmp/270f69e6-1359-41c2-813d-5d8031432f12_fixed.java
index 7030ef0..c8a261f 100644
--- a/tmp/245d4a2c-adc7-4b6f-9624-eeaa8bd0ebd7_buggy.java
+++ b/tmp/270f69e6-1359-41c2-813d-5d8031432f12_fixed.java
@@ -1,15 +1,35 @@
+import org.jsoup.helper.Validate;
+import org.jsoup.internal.Normalizer;
+import org.jsoup.nodes.TagName;
+
+// Import for ValidationException - assuming it's a nested class or in the same package
+// (Adjust import if ValidationException is defined elsewhere)
+import org.jsoup.safety.Safelist.ValidationException; // Hypothetical import, adjust as needed
+
+import java.util.Set; // Assuming tagNames is a Set<TagName>
+
     /**
      Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)
 
      @param tags tag names to allow
      @return this (for chaining)
+     @throws ValidationException if attempting to add an unsupported tag (e.g., {@code <noscript>})
      */
     public Safelist addTags(String... tags) {
         Validate.notNull(tags);
 
         for (String tagName : tags) {
             Validate.notEmpty(tagName);
-            tagNames.add(TagName.valueOf(tagName));
+            // Tags are stored lowercase, check lowercase against unsupported tags:
+            String normalName = Normalizer.lowerCase(tagName);
+            Validate.notEmpty(normalName, "Tag name cannot be empty after normalization"); // ensure we don't add ""
+
+            // Check against unsupported tags. <noscript> is unsupported as it allows arbitrary JS.
+            if (normalName.equals("noscript")) {
+                throw new ValidationException("Cannot add unsupported tag 'noscript' to safelist.");
+            }
+
+            tagNames.add(TagName.valueOf(normalName)); // ensure TagName is created with normalized name
         }
         return this;
     }
\ No newline at end of file
