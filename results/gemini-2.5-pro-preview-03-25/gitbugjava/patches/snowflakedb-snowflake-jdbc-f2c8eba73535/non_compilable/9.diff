diff --git a/tmp/aa0d977e-abba-4d45-872e-0ce092744506_buggy.java b/tmp/f45badd7-2a9d-41a6-8024-f3129b8eb565_fixed.java
index bdde834..751cc12 100644
--- a/tmp/aa0d977e-abba-4d45-872e-0ce092744506_buggy.java
+++ b/tmp/f45badd7-2a9d-41a6-8024-f3129b8eb565_fixed.java
@@ -1,10 +1,24 @@
   static boolean isNonRetryableHTTPCode(CloseableHttpResponse response, boolean retryHTTP403) {
-    return response != null
-        && (response.getStatusLine().getStatusCode() < 500
-            || // service unavailable
-            response.getStatusLine().getStatusCode() >= 600)
-        && // gateway timeout
-        response.getStatusLine().getStatusCode() != 408
-        && // request timeout
-        (!retryHTTP403 || response.getStatusLine().getStatusCode() != 403);
+    if (response == null) {
+      // If response is null, the original code would evaluate (response != null) as false,
+      // resulting in the entire expression being false. Maintain this behavior.
+      return false;
+    }
+    int statusCode = response.getStatusLine().getStatusCode();
+
+    // Determine if the status code is considered retryable based on standard practices and the retryHTTP403 flag.
+    // Retryable codes are typically:
+    // - 408 (Request Timeout)
+    // - 429 (Too Many Requests)
+    // - 5xx server errors (>= 500 and < 600)
+    // - 403 (Forbidden) only if the retryHTTP403 flag is set to true.
+    boolean isRetryable =
+        (statusCode == 408) // Request Timeout
+            || (statusCode == 429) // Too Many Requests
+            || (statusCode >= 500 && statusCode < 600) // Server errors (5xx)
+            || (statusCode == 403 && retryHTTP403); // Forbidden, only if retry flag is true
+
+    // The function should return true if the code is NON-retryable.
+    // Therefore, return the inverse of isRetryable.
+    return !isRetryable;
   }
\ No newline at end of file
