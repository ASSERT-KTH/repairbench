diff --git a/tmp/52a3ca6c-2e64-4482-b5d3-30b5d95896ce_buggy.java b/tmp/07d25801-2108-423b-ae83-4fb2985352a3_fixed.java
index bdde834..f77773a 100644
--- a/tmp/52a3ca6c-2e64-4482-b5d3-30b5d95896ce_buggy.java
+++ b/tmp/07d25801-2108-423b-ae83-4fb2985352a3_fixed.java
@@ -1,10 +1,12 @@
   static boolean isNonRetryableHTTPCode(CloseableHttpResponse response, boolean retryHTTP403) {
-    return response != null
-        && (response.getStatusLine().getStatusCode() < 500
-            || // service unavailable
-            response.getStatusLine().getStatusCode() >= 600)
-        && // gateway timeout
-        response.getStatusLine().getStatusCode() != 408
-        && // request timeout
-        (!retryHTTP403 || response.getStatusLine().getStatusCode() != 403);
+    // Check for null response first. Based on the original logic structure,
+    // if response is null, the entire expression evaluates to false.
+    if (response == null) {
+      return false; // Or handle as an error, but maintain original short-circuit logic
+    }
+    int statusCode = response.getStatusLine().getStatusCode();
+    return (statusCode < 500 || statusCode >= 600) // Non-retryable codes are generally < 500 or >= 600...
+        && statusCode != 408 // ...except for 408 (Request Timeout), which IS retryable
+        && statusCode != 429 // ...except for 429 (Too Many Requests), which IS retryable
+        && (!retryHTTP403 || statusCode != 403); // ...and 403 (Forbidden) is retryable ONLY if retryHTTP403 is true
   }
\ No newline at end of file
