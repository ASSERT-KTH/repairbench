diff --git a/tmp/cc5f2cd4-9de5-4f3a-af66-af3db73f4561_buggy.java b/tmp/0f10847c-5c7c-4bd6-b086-2304febe04cd_fixed.java
index bdde834..53181f7 100644
--- a/tmp/cc5f2cd4-9de5-4f3a-af66-af3db73f4561_buggy.java
+++ b/tmp/0f10847c-5c7c-4bd6-b086-2304febe04cd_fixed.java
@@ -1,10 +1,17 @@
   static boolean isNonRetryableHTTPCode(CloseableHttpResponse response, boolean retryHTTP403) {
-    return response != null
-        && (response.getStatusLine().getStatusCode() < 500
-            || // service unavailable
-            response.getStatusLine().getStatusCode() >= 600)
-        && // gateway timeout
-        response.getStatusLine().getStatusCode() != 408
-        && // request timeout
-        (!retryHTTP403 || response.getStatusLine().getStatusCode() != 403);
+    // Check for null response first
+    if (response == null) {
+      // Consistent with original short-circuit logic which would evaluate 'response != null' to false
+      return false;
+    }
+    int statusCode = response.getStatusLine().getStatusCode();
+
+    // Determine if the status code represents a non-retryable condition.
+    // Generally, 5xx errors, 408 (Timeout), and 429 (Too Many Requests) are retryable.
+    // 403 (Forbidden) is retryable only if retryHTTP403 is true.
+    // Other codes (1xx, 2xx, 3xx, other 4xx, >=600) are non-retryable.
+    return (statusCode < 500 || statusCode >= 600) // Excludes the 5xx range (server errors)
+        && statusCode != 408 // Excludes 408 (Request Timeout)
+        && statusCode != 429 // Excludes 429 (Too Many Requests)
+        && (!retryHTTP403 || statusCode != 403); // Excludes 403 only if retryHTTP403 is true
   }
\ No newline at end of file
