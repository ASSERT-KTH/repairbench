diff --git a/tmp/3a8bfd47-16b8-4848-a415-2ccec1d7264f_buggy.java b/tmp/4529039c-a3f8-4557-b956-a51987d5ba07_fixed.java
index bdde834..d438e3b 100644
--- a/tmp/3a8bfd47-16b8-4848-a415-2ccec1d7264f_buggy.java
+++ b/tmp/4529039c-a3f8-4557-b956-a51987d5ba07_fixed.java
@@ -1,10 +1,31 @@
   static boolean isNonRetryableHTTPCode(CloseableHttpResponse response, boolean retryHTTP403) {
-    return response != null
-        && (response.getStatusLine().getStatusCode() < 500
-            || // service unavailable
-            response.getStatusLine().getStatusCode() >= 600)
-        && // gateway timeout
-        response.getStatusLine().getStatusCode() != 408
-        && // request timeout
-        (!retryHTTP403 || response.getStatusLine().getStatusCode() != 403);
+    if (response == null) {
+      return true; // Cannot determine, assume non-retryable
+    }
+    int statusCode = response.getStatusLine().getStatusCode();
+
+    // Retryable codes are:
+    // - 5xx server errors (except potentially >= 600, which are non-standard)
+    // - 408 (Request Timeout)
+    // - 429 (Too Many Requests)
+    // - 403 (Forbidden) only if retryHTTP403 is true
+
+    // Non-retryable codes are everything else.
+
+    // Check for specific retryable codes first
+    if (statusCode == 408 || statusCode == 429) {
+      return false; // These are explicitly retryable
+    }
+
+    if (statusCode == 403 && retryHTTP403) {
+      return false; // 403 is retryable if the flag is set
+    }
+
+    // Check for server errors (5xx range)
+    if (statusCode >= 500 && statusCode < 600) {
+      return false; // Standard server errors are retryable
+    }
+
+    // All other codes (1xx, 2xx, 3xx, 4xx except the ones handled above, >=600) are non-retryable.
+    return true;
   }
\ No newline at end of file
