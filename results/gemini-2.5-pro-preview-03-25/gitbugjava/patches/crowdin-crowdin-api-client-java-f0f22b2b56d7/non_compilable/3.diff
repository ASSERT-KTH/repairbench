diff --git a/tmp/b59c637c-8680-4717-8024-8731d8fb9e36_buggy.java b/tmp/b6f7835f-c6b0-405d-b7da-1d1532c796f9_fixed.java
index f399576..f38ab79 100644
--- a/tmp/b59c637c-8680-4717-8024-8731d8fb9e36_buggy.java
+++ b/tmp/b6f7835f-c6b0-405d-b7da-1d1532c796f9_fixed.java
@@ -1,26 +1,128 @@
+import com.crowdin.client.core.model.EnumConverter;
+import com.crowdin.client.core.model.EnumDeserializer;
+import com.crowdin.client.core.model.EnumSerializer;
+import com.crowdin.client.core.model.FileData;
+import com.crowdin.client.core.model.FileDataDeserializer;
+import com.crowdin.client.framework.TimestampDeserializer;
+import com.crowdin.client.glossaries.model.Term;
+import com.crowdin.client.glossaries.model.TermResponseObject;
+import com.crowdin.client.glossaries.model.TermResponseObjectDeserializer;
+import com.crowdin.client.projectsgroups.model.Project;
+import com.crowdin.client.projectsgroups.model.ProjectFileFormatSettings;
+import com.crowdin.client.projectsgroups.model.ProjectFileFormatSettingsDeserializer;
+import com.crowdin.client.projectsgroups.model.ProjectResponseObject;
+import com.crowdin.client.projectsgroups.model.ProjectResponseObjectDeserializer;
+import com.crowdin.client.sourcefiles.model.Branch;
+import com.crowdin.client.sourcefiles.model.BranchResponseObject;
+import com.crowdin.client.sourcefiles.model.BranchResponseObjectDeserializer;
+import com.crowdin.client.sourcefiles.model.Directory;
+import com.crowdin.client.sourcefiles.model.DirectoryResponseObject;
+import com.crowdin.client.sourcefiles.model.DirectoryResponseObjectDeserializer;
+import com.crowdin.client.sourcefiles.model.ExportOptions;
+import com.crowdin.client.sourcefiles.model.File;
+import com.crowdin.client.sourcefiles.model.FileExportOptionsDeserializer;
+import com.crowdin.client.sourcefiles.model.FileImportOptionsDeserializer;
+import com.crowdin.client.sourcefiles.model.FileInfo;
+import com.crowdin.client.sourcefiles.model.FileInfoDeserializer;
+import com.crowdin.client.sourcefiles.model.FileResponseObject;
+import com.crowdin.client.sourcefiles.model.FileResponseObjectDeserializer;
+import com.crowdin.client.sourcefiles.model.GeneralFileExportOptions;
+import com.crowdin.client.sourcefiles.model.ImportOptions;
+import com.crowdin.client.sourcefiles.model.OtherFileImportOptions;
+import com.crowdin.client.sourcefiles.model.PropertyFileExportOptions;
+import com.crowdin.client.sourcefiles.model.XmlFileImportOptions;
+import com.crowdin.client.sourcestrings.model.SourceString;
+import com.crowdin.client.sourcestrings.model.SourceStringResponseObject;
+import com.crowdin.client.sourcestrings.model.SourceStringResponseObjectDeserializer;
+import com.crowdin.client.storage.model.Storage;
+import com.crowdin.client.storage.model.StorageResponseObject;
+import com.crowdin.client.storage.model.StorageResponseObjectDeserializer;
+import com.crowdin.client.tasks.model.Task;
+import com.crowdin.client.tasks.model.TaskResponseObject;
+import com.crowdin.client.tasks.model.TaskResponseObjectDeserializer;
+import com.crowdin.client.translationmemory.model.TranslationMemory;
+import com.crowdin.client.translationmemory.model.TranslationMemoryResponseObject;
+import com.crowdin.client.translationmemory.model.TranslationMemoryResponseObjectDeserializer;
+import com.crowdin.client.translations.model.LanguageTranslations;
+import com.crowdin.client.translations.model.LanguageTranslationsDeserializer;
+import com.crowdin.client.translations.model.UploadTranslationsRequest;
+import com.crowdin.client.translations.model.UploadTranslationsResponse;
+import com.crowdin.client.translations.model.UploadTranslationsResponseDeserializer;
+import com.crowdin.client.users.model.User;
+import com.crowdin.client.users.model.UserResponseObject;
+import com.crowdin.client.users.model.UserResponseObjectDeserializer;
+import com.crowdin.client.webhooks.model.Webhook;
+import com.crowdin.client.webhooks.model.WebhookResponseObject;
+import com.crowdin.client.webhooks.model.WebhookResponseObjectDeserializer;
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.JsonInclude;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.core.JsonParser;
+import com.fasterxml.jackson.databind.DeserializationFeature;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.module.SimpleModule;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Map;
+import java.util.TimeZone;
+
+import com.crowdin.client.core.http.exceptions.CrowdinApiException;
+import com.crowdin.client.core.http.exceptions.CrowdinApiExceptionDeserializer;
+import com.crowdin.client.projectsgroups.model.*; // Import specific classes instead of wildcard
+import com.crowdin.client.sourcefiles.model.*; // Import specific classes instead of wildcard
+
+public class JacksonJsonTransformer implements JsonTransformer {
+
+    private final ObjectMapper objectMapper;
+    private final ObjectMapper errorObjectMapper;
+
     public JacksonJsonTransformer() {
         ObjectMapper cleanObjectMapper = new ObjectMapper()
             .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
         SimpleModule enumModule = new SimpleModule()
             .addDeserializer(Enum.class, new EnumDeserializer());
 
         SimpleModule module = new SimpleModule()
             .addSerializer(Enum.class, new EnumSerializer())
             .addDeserializer(Enum.class, new EnumDeserializer())
             .addDeserializer(CrowdinApiException.class, new CrowdinApiExceptionDeserializer(cleanObjectMapper))
             .addDeserializer(Project.class, new ProjectDeserializer(cleanObjectMapper.copy()
                 .registerModule(enumModule)))
             .addDeserializer(FileInfo.class, new FileInfoDeserializer(cleanObjectMapper.copy()
                 .registerModule(enumModule)
                 .registerModule(new SimpleModule()
                     .addDeserializer(ImportOptions.class, new FileImportOptionsDeserializer(cleanObjectMapper))
                     .addDeserializer(ExportOptions.class, new FileExportOptionsDeserializer(cleanObjectMapper)))))
             .addDeserializer(LanguageTranslations.class, new LanguageTranslationsDeserializer(cleanObjectMapper));
         this.objectMapper = cleanObjectMapper.copy()
                 .setSerializationInclusion(JsonInclude.Include.NON_NULL)
-                .setDateFormat(new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss+hh:mm"))
+                // Use ISO 8601 timezone format (XXX) instead of incorrect +hh:mm
+                .setDateFormat(new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssXXX"))
                 .registerModule(module)
                 .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)
                 .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY);
         this.errorObjectMapper = cleanObjectMapper;
     }
+
+    @Override
+    public <T> T parse(String json, Class<T> clazz) {
+        try {
+            if (clazz == CrowdinApiException.class) {
+                return (T) errorObjectMapper.readValue(json, CrowdinApiException.class);
+            }
+            return objectMapper.readValue(json, clazz);
+        } catch (Exception e) {
+            throw new RuntimeException(e);
+        }
+    }
+
+    @Override
+    public String convert(Object obj) {
+        try {
+            return objectMapper.writeValueAsString(obj);
+        } catch (Exception e) {
+            throw new RuntimeException(e);
+        }
+    }
+}
\ No newline at end of file
