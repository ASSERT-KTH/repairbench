diff --git a/tmp/16fd39a1-9b32-4dd1-9ae6-c4d579712f3a_buggy.java b/tmp/fa7c3f6c-c6aa-4be8-bf29-91e1fcaff5b5_fixed.java
index c9c2b44..01fedb9 100644
--- a/tmp/16fd39a1-9b32-4dd1-9ae6-c4d579712f3a_buggy.java
+++ b/tmp/fa7c3f6c-c6aa-4be8-bf29-91e1fcaff5b5_fixed.java
@@ -1,13 +1,20 @@
         @Override
         public boolean matches(Element root, Element element) {
             // evaluate from last to first
             for (int i = evaluators.size() -1; i >= 0; --i) {
-                if (element == null)
+                // Check if element is null, or if we have moved up the tree and hit the root node.
+                // The specified structural relationship (e.g., parent > child) must occur *within* the root's context.
+                // If we need to check the root element itself for a match, it means the relationship crosses
+                // the root boundary, so it's not a match within this context.
+                if (element == null || element == root)
                     return false;
+                
                 Evaluator eval = evaluators.get(i);
-                if (!eval.matches(root, element))
+                if (!eval.matches(root, element)) // Check if the current element matches the current evaluator
                     return false;
-                element = element.parent();
+                
+                element = element.parent(); // Move up to the parent for the next (previous in sequence) evaluator
             }
+            // If the loop completed, all evaluators matched their corresponding ancestor elements within the root context.
             return true;
         }
\ No newline at end of file
