diff --git a/tmp/c2880810-c508-4a29-a5ef-d56bd77d59d8_buggy.java b/tmp/aacc69b2-4d67-4ad9-948e-3dfffcccec67_fixed.java
index 593602f..e4088db 100644
--- a/tmp/c2880810-c508-4a29-a5ef-d56bd77d59d8_buggy.java
+++ b/tmp/aacc69b2-4d67-4ad9-948e-3dfffcccec67_fixed.java
@@ -1,6 +1,24 @@
     @Override
     public String toString() {
-        return rangesList.stream()
-            .map(RangesList::formatRanges)
-            .collect(joining(OR_JOINER));
+        // Format each range set within the list
+        List<String> formattedRanges = rangesList.stream()
+            .map(RangesList::formatRanges) // Assumes this formats one RangeSet, potentially adding parentheses
+            .collect(Collectors.toList());
+
+        // If there's only one range set, return its string representation.
+        // The failing test implies outer parentheses added by formatRanges should be removed in this case.
+        if (formattedRanges.size() == 1) {
+            String singleRangeString = formattedRanges.get(0);
+            // Remove outer parentheses only if they exist and the list size is 1.
+            if (singleRangeString.length() > 2 && singleRangeString.startsWith("(") && singleRangeString.endsWith(")")) {
+                return singleRangeString.substring(1, singleRangeString.length() - 1);
+            } else {
+                // Return as is if no parentheses or formatRanges didn't add them.
+                return singleRangeString;
+            }
+        } else {
+            // If there are multiple range sets, join them with the OR_JOINER.
+            // Parentheses around each formatted set (if added by formatRanges) are kept for clarity.
+            return String.join(OR_JOINER, formattedRanges);
+        }
     }
\ No newline at end of file
