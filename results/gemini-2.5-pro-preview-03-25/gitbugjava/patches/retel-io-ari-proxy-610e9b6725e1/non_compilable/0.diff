diff --git a/tmp/0949ac3f-3fda-446b-bb01-879edbed4a40_buggy.java b/tmp/a16ade78-da22-4646-a1e2-402759fa1789_fixed.java
index eb0a5c8..5f4b754 100644
--- a/tmp/0949ac3f-3fda-446b-bb01-879edbed4a40_buggy.java
+++ b/tmp/a16ade78-da22-4646-a1e2-402759fa1789_fixed.java
@@ -1,27 +1,36 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
-      return Try.success(Done.done());
-    }
-
+    // Check if the command is a creation command.
+    if (ariCommand.extractCommandType().isCreationCommand()) {
+      // If it is a creation command, try to extract the created resource.
       final Option<AriResource> maybeResource =
           ariCommand
               .extractResourceRelations()
-            .find(AriResourceRelation::isCreated)
+              .find(AriResourceRelation::isCreated) // Find the relation indicating creation
               .map(AriResourceRelation::getResource);
 
+      // Check if the resource extraction was successful.
       if (maybeResource.isEmpty()) {
+        // If resource extraction failed for a creation command, return a failure.
+        // Use a more specific message indicating it was expected for a creation command.
         return Try.failure(
             new RuntimeException(
                 String.format(
-                  "Failed to extract resourceId from command '%s'", ariCommand.toString())));
+                    "Failed to extract created resourceId from creation command '%s'",
+                    ariCommand.toString())));
       }
 
+      // If resource extraction was successful, get the resource and register the context.
       final AriResource resource = maybeResource.get();
-
       callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
       return Try.success(Done.done());
+
+    } else {
+      // If it's not a creation command (e.g., DELETE), do nothing and return success.
+      // This correctly handles the case where no registration should occur.
+      return Try.success(Done.done());
+    }
   }
\ No newline at end of file
