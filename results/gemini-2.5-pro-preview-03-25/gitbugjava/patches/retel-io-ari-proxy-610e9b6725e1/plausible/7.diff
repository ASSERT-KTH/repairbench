diff --git a/tmp/6516f89a-2270-464d-95dd-35c53bbed5c7_buggy.java b/tmp/49640b21-368a-44e4-b9bd-0aeeb366c18a_fixed.java
index eb0a5c8..bbc232c 100644
--- a/tmp/6516f89a-2270-464d-95dd-35c53bbed5c7_buggy.java
+++ b/tmp/49640b21-368a-44e4-b9bd-0aeeb366c18a_fixed.java
@@ -1,27 +1,49 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
+    // Determine if the command's HTTP method is DELETE.
+    // We assume AriCommand provides a way to access the method, e.g., getMethod().
+    // This check is necessary because the test shows registration happens for DELETE,
+    // implying either isCreationCommand() is true for DELETE or resource extraction
+    // incorrectly finds a "created" resource for DELETE.
+    // We explicitly prevent registration for DELETE commands regardless of other checks.
+    boolean isDeleteCommand = "DELETE".equalsIgnoreCase(ariCommand.getMethod()); // Assuming getMethod() exists
+
+    // Use the command's own classification of whether it's a creation command.
+    boolean isCreation = ariCommand.extractCommandType().isCreationCommand();
+
+    // If the command is not classified as creation by its type,
+    // OR if it is explicitly a DELETE command (which shouldn't register context here),
+    // then return successfully without doing anything.
+    if (!isCreation || isDeleteCommand) {
       return Try.success(Done.done());
     }
 
+    // --- If we reach here: the command is classified as creation AND it is not DELETE ---
+
+    // Attempt to extract the resource relation marked as created.
     final Option<AriResource> maybeResource =
         ariCommand
             .extractResourceRelations()
             .find(AriResourceRelation::isCreated)
             .map(AriResourceRelation::getResource);
 
+    // Check if we successfully extracted the created resource details.
     if (maybeResource.isEmpty()) {
+      // If classified as creation (and not DELETE), but we couldn't extract the resource,
+      // it indicates an inconsistency or error.
       return Try.failure(
           new RuntimeException(
               String.format(
-                  "Failed to extract resourceId from command '%s'", ariCommand.toString())));
+                  "Failed to extract resourceId from supposed creation command '%s'",
+                  ariCommand.toString())));
     }
 
+    // Successfully extracted the resource from a non-DELETE creation command.
+    // Register the call context with the resource ID.
     final AriResource resource = maybeResource.get();
-
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
     return Try.success(Done.done());
   }
\ No newline at end of file
