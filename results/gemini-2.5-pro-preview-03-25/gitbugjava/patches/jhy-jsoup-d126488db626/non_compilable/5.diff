diff --git a/tmp/3499a945-8b0a-4014-aff0-022c7f1c76f8_buggy.java b/tmp/3b26b6dc-0eff-4ddb-bef9-2c0569f01df6_fixed.java
index 5bf31b1..51bfe19 100644
--- a/tmp/3499a945-8b0a-4014-aff0-022c7f1c76f8_buggy.java
+++ b/tmp/3b26b6dc-0eff-4ddb-bef9-2c0569f01df6_fixed.java
@@ -1,17 +1,18 @@
     private String consumeSubQuery() {
         StringBuilder sq = StringUtil.borrowBuilder();
         while (!tq.isEmpty()) {
             if (tq.matches("("))
                 sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
             else if (tq.matches("["))
                 sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
             else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
+                // Found a combinator. If sq has content, this combinator is for the next part, so stop.
+                // If sq is empty, it means we have a sequence like `>,` or the queue started
+                // with a combinator. In either case, stop consuming for *this* subquery. The parser
+                // should handle the combinator TQ starts with.
                 break;
-                else
-                    tq.consume();
             else
                 sq.append(tq.consume());
         }
         return StringUtil.releaseBuilder(sq);
     }
\ No newline at end of file
