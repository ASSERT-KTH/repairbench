diff --git a/tmp/6f2b7db4-3916-47d2-a1e3-182809e3353b_buggy.java b/tmp/7e5a5976-55a3-482d-b505-516725ebad88_fixed.java
index dd3b100..5107734 100644
--- a/tmp/6f2b7db4-3916-47d2-a1e3-182809e3353b_buggy.java
+++ b/tmp/7e5a5976-55a3-482d-b505-516725ebad88_fixed.java
@@ -1,12 +1,28 @@
         public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
-            if (root == null || p == root || q == root) {
-                return root;
+            // Base case: If root is null, return null.
+            if (root == null) {
+                return null;
             }
-            if ((root.val - p.val) * (root.val - q.val) > 0) {
-                if (root.val - p.val > 0) {
+
+            int rootVal = root.val;
+            int pVal = p.val;
+            int qVal = q.val;
+
+            // If both p and q have values smaller than the root's value,
+            // the LCA must be in the left subtree.
+            if (pVal < rootVal && qVal < rootVal) {
                 return lowestCommonAncestor(root.left, p, q);
             }
+            // If both p and q have values larger than the root's value,
+            // the LCA must be in the right subtree.
+            else if (pVal > rootVal && qVal > rootVal) {
                 return lowestCommonAncestor(root.right, p, q);
             }
+            // Otherwise, the current root is the LCA. This occurs when:
+            // 1. p and q are on opposite sides of the root (pVal < rootVal < qVal or qVal < rootVal < pVal).
+            // 2. One of p or q is the root itself (pVal == rootVal or qVal == rootVal).
+            // In either case, the paths to p and q diverge at this root node.
+            else {
                 return root;
             }
+        }
\ No newline at end of file
