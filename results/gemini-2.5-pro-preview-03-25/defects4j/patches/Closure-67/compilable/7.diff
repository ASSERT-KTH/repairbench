diff --git a/tmp/1443982d-da4f-4915-8d7c-20c6e0947c2f_buggy.java b/tmp/6a365176-a2d3-4862-8932-45ad974f0873_fixed.java
index 939f49b..75232f8 100644
--- a/tmp/1443982d-da4f-4915-8d7c-20c6e0947c2f_buggy.java
+++ b/tmp/6a365176-a2d3-4862-8932-45ad974f0873_fixed.java
@@ -1,21 +1,25 @@
     private boolean isPrototypePropertyAssign(Node assign) {
-      Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      Node lhs = assign.getFirstChild(); // Get the LHS: e.g., x.prototype.y or x['prototype']['y']
+
+      // Check if LHS is a property access (GETPROP or GETELEM) and a valid assignment target
+      if (lhs != null && NodeUtil.isVarOrSimpleAssignLhs(lhs, assign) &&
+          (lhs.getType() == Token.GETPROP || lhs.getType() == Token.GETELEM)) {
+
+        Node objectNode = lhs.getFirstChild(); // Get the object part: e.g., x.prototype or x['prototype']
+
+        // Check if the object part is also a property access (GETPROP or GETELEM)
+        // representing (...).prototype or (...)['prototype']
+        if (objectNode != null &&
+            (objectNode.getType() == Token.GETPROP || objectNode.getType() == Token.GETELEM)) {
+
+          Node prototypeNameNode = objectNode.getLastChild(); // Get the potential "prototype" node
+
+          // Check if the property name node is a STRING token and its value is "prototype"
+          if (prototypeNameNode != null && prototypeNameNode.getType() == Token.STRING &&
+              prototypeNameNode.getString().equals("prototype")) {
             return true;
           }
         }
       }
-
       return false;
     }
\ No newline at end of file
