diff --git a/tmp/28306a74-1264-42ab-9e1a-7507448845e6_buggy.java b/tmp/d9d2deb2-d8ae-4587-8976-1eea23eecbe6_fixed.java
index 939f49b..2636a07 100644
--- a/tmp/28306a74-1264-42ab-9e1a-7507448845e6_buggy.java
+++ b/tmp/d9d2deb2-d8ae-4587-8976-1eea23eecbe6_fixed.java
@@ -1,21 +1,31 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
+      // Fix: Allow GETELEM for prototype assignments like Foo.prototype['bar'] = ...
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
+          && (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM) // Changed this line
           ) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+        // Check if the base of the property access (n.getFirstChild()) is a GETPROP node
+        // e.g., For Foo.prototype.bar, n is GETPROP(bar), n.getFirstChild() is GETPROP(prototype)
+        // e.g., For Foo.prototype['bar'], n is GETELEM('bar'), n.getFirstChild() is GETPROP(prototype)
+        Node base = n.getFirstChild();
+        boolean isBaseGetProp = base != null && base.getType() == Token.GETPROP;
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        if (isBaseGetProp) {
+          // Get the property name node from the base GETPROP (e.g., "prototype")
+          // base.getFirstChild() is the object (e.g., Foo)
+          // base.getFirstChild().getNext() should be the property name (e.g., "prototype")
+          // Alternatively, base.getLastChild() should also work.
+          Node prototypeNameNode = base.getLastChild(); // Using getLastChild is slightly more robust
+
+          // Check if the property name is indeed the string "prototype"
+          if (prototypeNameNode != null && prototypeNameNode.getType() == Token.STRING &&
+              prototypeNameNode.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
