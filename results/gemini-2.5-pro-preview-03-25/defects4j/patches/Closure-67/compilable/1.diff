diff --git a/tmp/4649b2bc-bd2b-4dca-8eba-0e9344fbb467_buggy.java b/tmp/a2a6a3ed-0d6a-47d6-ac51-e09a9f5157ec_fixed.java
index 939f49b..c51d060 100644
--- a/tmp/4649b2bc-bd2b-4dca-8eba-0e9344fbb467_buggy.java
+++ b/tmp/a2a6a3ed-0d6a-47d6-ac51-e09a9f5157ec_fixed.java
@@ -1,21 +1,26 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
+      // Check if the LHS is a property access (GETPROP or GETELEM)
+      // e.g., foo.bar or foo['bar']
+      // and is a valid assignment target.
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+          && (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM)) { // Added GETELEM check
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+        Node objNode = n.getFirstChild(); // The object being accessed (e.g., foo.prototype)
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        // Check if the object being accessed is itself a GETPROP node
+        // This ensures we have the structure obj.prop or obj['prop']
+        // and specifically that the 'obj' part looks like 'something.prototype'
+        if (objNode != null && objNode.getType() == Token.GETPROP) {
+          // Check if the property name is "prototype"
+          Node grandchild = objNode.getFirstChild().getNext(); // The property name node ('prototype')
+          if (grandchild != null && grandchild.getType() == Token.STRING &&
+              grandchild.getString().equals("prototype")) {
+            // We found the pattern: some_obj.prototype.property = ...
+            // or some_obj.prototype['property'] = ...
             return true;
           }
         }
       }
-
       return false;
     }
\ No newline at end of file
