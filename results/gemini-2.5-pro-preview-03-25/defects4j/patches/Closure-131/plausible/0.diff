diff --git a/tmp/0694e6b4-21d1-4756-b073-e24576e7a4e6_buggy.java b/tmp/f45fa9dd-a1bc-4e6c-9321-d2e857a5f7d7_fixed.java
index 19fe1b4..3d652b2 100644
--- a/tmp/0694e6b4-21d1-4756-b073-e24576e7a4e6_buggy.java
+++ b/tmp/f45fa9dd-a1bc-4e6c-9321-d2e857a5f7d7_fixed.java
@@ -1,17 +1,44 @@
+    /**
+     * Determines whether the given string is a valid JavaScript identifier.
+     * NOTE: This function is conservative and assumes that Unicode characters
+     * are NOT valid in identifiers. This is because many browsers still have
+     * problems understanding identifiers with Unicode characters in them.
+     * See https://github.com/google/closure-compiler/issues/223
+     *
+     * If we ever change this function to support Unicode identifiers, we will
+     * likely need to create a separate function for "safe" identifiers that
+     * can be used as property names.
+     */
     public static boolean isJSIdentifier(String s) {
       int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+      if (length == 0) {
         return false;
       }
 
+      char firstChar = s.charAt(0);
+      // Check if the first character is a valid start character (a-z, A-Z, $, _)
+      // Note: Excludes Unicode letters for conservatism.
+      if (!((firstChar >= 'a' && firstChar <= 'z') ||
+            (firstChar >= 'A' && firstChar <= 'Z') ||
+            firstChar == '$' ||
+            firstChar == '_')) {
+        return false;
+      }
+
+      // Check the rest of the characters
       for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        char c = s.charAt(i);
+        // Check if the character is a valid part character (a-z, A-Z, 0-9, $, _)
+        // Note: Excludes Unicode letters, digits, and combining marks.
+        if (!((c >= 'a' && c <= 'z') ||
+              (c >= 'A' && c <= 'Z') ||
+              (c >= '0' && c <= '9') ||
+              c == '$' ||
+              c == '_')) {
           return false;
         }
       }
 
       return true;
     }
\ No newline at end of file
