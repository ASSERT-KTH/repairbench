diff --git a/tmp/857ee4d2-0f07-4dd1-93ea-fc762f53cd74_buggy.java b/tmp/354ff073-b041-4008-b863-382599a89a1a_fixed.java
index 19fe1b4..12567a6 100644
--- a/tmp/857ee4d2-0f07-4dd1-93ea-fc762f53cd74_buggy.java
+++ b/tmp/354ff073-b041-4008-b863-382599a89a1a_fixed.java
@@ -1,17 +1,42 @@
+    /**
+     * Checks whether the given string is a valid identifier according to
+     * ECMA-262 Section 7.6 specification. This mimics the restrictions
+     * imposed by the JS compiler. It does not include reserved words.
+     *
+     * A JavaScript identifier must start with a letter, $, or _.
+     * Subsequent characters can be letters, numbers, $, or _.
+     *
+     * Note that this differs from Java identifiers in that JS identifiers
+     * cannot contain Java's "identifier ignorable" characters (Unicode
+     * format-control characters).
+     *
+     * @param s The string to check.
+     * @return Whether {@code s} is a valid JavaScript identifier.
+     */
     public static boolean isJSIdentifier(String s) {
       int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+      if (length == 0) {
+        return false;
+      }
+
+      char firstChar = s.charAt(0);
+      // JS identifier start: Unicode letter, $, _
+      // Check using Character.isLetter for Unicode support.
+      if (!(Character.isLetter(firstChar) || firstChar == '$' || firstChar == '_')) {
           return false;
       }
 
       for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        char c = s.charAt(i);
+        // JS identifier part: Unicode letter, digit, $, _
+        // Check using Character.isLetterOrDigit for Unicode support.
+        // Importantly, this excludes format-control characters (like \u0004)
+        // which are allowed by Character.isJavaIdentifierPart but not in JS.
+        if (!(Character.isLetterOrDigit(c) || c == '$' || c == '_')) {
           return false;
         }
       }
 
       return true;
     }
\ No newline at end of file
