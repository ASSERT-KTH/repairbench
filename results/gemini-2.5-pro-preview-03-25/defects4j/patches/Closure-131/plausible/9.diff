diff --git a/tmp/b8da05f5-510b-4c15-97ec-bdd9761691ed_buggy.java b/tmp/64b45972-f4c2-4be9-a533-e372a2087863_fixed.java
index 19fe1b4..aa7903a 100644
--- a/tmp/b8da05f5-510b-4c15-97ec-bdd9761691ed_buggy.java
+++ b/tmp/64b45972-f4c2-4be9-a533-e372a2087863_fixed.java
@@ -1,17 +1,37 @@
     public static boolean isJSIdentifier(String s) {
       int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+      if (length == 0) {
         return false;
       }
 
+      char firstChar = s.charAt(0);
+      // Check first character: Must be ASCII letter, '_', or '$'
+      // JavaScript identifier rules are broader than this (allowing Unicode),
+      // but ConvertToDottedProperties operates more conservatively, only
+      // converting property names that are valid *and* simple ASCII/$_ identifiers
+      // to avoid issues with reserved words or browser inconsistencies.
+      if (!((firstChar >= 'a' && firstChar <= 'z') ||
+            (firstChar >= 'A' && firstChar <= 'Z') ||
+            firstChar == '_' ||
+            firstChar == '$')) {
+        return false;
+      }
+
+      // Check remaining characters: Must be ASCII letter, ASCII digit, '_', or '$'
       for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        char c = s.charAt(i);
+        if (!((c >= 'a' && c <= 'z') ||
+              (c >= 'A' && c <= 'Z') ||
+              (c >= '0' && c <= '9') ||
+              c == '_' ||
+              c == '$')) {
           return false;
         }
       }
 
+      // Note: This function does not check for JavaScript reserved words.
+      // The calling code (ConvertToDottedProperties) might handle reserved words
+      // separately or rely on this function only for character validation.
       return true;
     }
\ No newline at end of file
