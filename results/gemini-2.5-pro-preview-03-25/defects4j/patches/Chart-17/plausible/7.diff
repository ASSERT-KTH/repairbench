diff --git a/tmp/21b0430b-f6fb-473a-8e89-aa439bec3f25_buggy.java b/tmp/bef43827-f56e-4ba7-a0a4-b26977738a2c_fixed.java
index 55391e1..2536463 100644
--- a/tmp/21b0430b-f6fb-473a-8e89-aa439bec3f25_buggy.java
+++ b/tmp/bef43827-f56e-4ba7-a0a4-b26977738a2c_fixed.java
@@ -1,19 +1,35 @@
     /**
      * Returns a clone of the time series.
      * <P>
      * Notes:
      * <ul>
      *   <li>no need to clone the domain and range descriptions, since String
      *     object is immutable;</li>
-     *   <li>we pass over to the more general method clone(start, end).</li>
+     *   <li>we pass over to the more general method createCopy(start, end).</li>
      * </ul>
      *
      * @return A clone of the time series.
      *
      * @throws CloneNotSupportedException not thrown by this class, but
      *         subclasses may differ.
      */
     public Object clone() throws CloneNotSupportedException {
-        Object clone = createCopy(0, getItemCount() - 1);
+        TimeSeries clone; // Use specific type for clarity and avoid casts later
+        if (this.getItemCount() == 0) {
+            // If the series is empty, createCopy(0, -1) would fail because
+            // the end index is less than the start index.
+            // Handle this case by creating a clone using super.clone()
+            // which handles metadata, and then ensure the data list is
+            // a distinct empty list.
+            clone = (TimeSeries) super.clone();
+            // Assuming the underlying data structure is a List field named 'data'.
+            // We need to give the clone its own empty list instance.
+            // Based on TimeSeries source code, it uses java.util.ArrayList.
+            clone.data = new java.util.ArrayList();
+        }
+        else {
+            // If the series is not empty, use the existing createCopy method.
+            clone = (TimeSeries) createCopy(0, getItemCount() - 1);
+        }
         return clone;
     }
\ No newline at end of file
