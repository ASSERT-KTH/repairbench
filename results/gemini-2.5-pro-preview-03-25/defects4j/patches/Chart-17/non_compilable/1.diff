diff --git a/tmp/2b366b79-27d5-4ba3-989a-13d0f0e95aa4_buggy.java b/tmp/e58f0eed-5a02-4cc7-9ab4-aad360b410de_fixed.java
index 55391e1..af97e2c 100644
--- a/tmp/2b366b79-27d5-4ba3-989a-13d0f0e95aa4_buggy.java
+++ b/tmp/e58f0eed-5a02-4cc7-9ab4-aad360b410de_fixed.java
@@ -1,19 +1,36 @@
     /**
      * Returns a clone of the time series.
      * <P>
      * Notes:
      * <ul>
      *   <li>no need to clone the domain and range descriptions, since String 
      *     object is immutable;</li>
      *   <li>we pass over to the more general method clone(start, end).</li>
      * </ul>
      *
      * @return A clone of the time series.
      * 
      * @throws CloneNotSupportedException not thrown by this class, but 
      *         subclasses may differ.
      */
+    @Override
     public Object clone() throws CloneNotSupportedException {
+        // The createCopy(start, end) method requires start <= end.
+        // When the time series is empty, getItemCount() is 0,
+        // so getItemCount() - 1 is -1. Calling createCopy(0, -1)
+        // results in an IllegalArgumentException because 0 > -1.
+        // We handle the empty series case separately.
+        if (getItemCount() == 0) {
+            // Perform a shallow clone using super.clone()
+            TimeSeries clone = (TimeSeries) super.clone();
+            // Ensure the clone has its own independent (and empty) data list.
+            // Assuming the internal list is named 'data' and is of type List.
+            // Direct field access is possible because clone() is part of TimeSeries.
+            clone.data = new java.util.ArrayList(); 
+            return clone;
+        } else {
+            // For non-empty series, delegate to createCopy as originally intended.
             Object clone = createCopy(0, getItemCount() - 1);
             return clone;
         }
+    }
\ No newline at end of file
