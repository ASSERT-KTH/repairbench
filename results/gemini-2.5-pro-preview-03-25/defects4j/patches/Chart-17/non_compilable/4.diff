diff --git a/tmp/baf05fb3-ba49-44e9-853c-136bf74e9c0b_buggy.java b/tmp/2e3f4273-46b0-40f2-914b-e7fed7639a74_fixed.java
index 55391e1..e2e518d 100644
--- a/tmp/baf05fb3-ba49-44e9-853c-136bf74e9c0b_buggy.java
+++ b/tmp/2e3f4273-46b0-40f2-914b-e7fed7639a74_fixed.java
@@ -1,19 +1,36 @@
     /**
      * Returns a clone of the time series.
      * <P>
      * Notes:
      * <ul>
      *   <li>no need to clone the domain and range descriptions, since String
      *     object is immutable;</li>
      *   <li>we pass over to the more general method clone(start, end).</li>
      * </ul>
      *
      * @return A clone of the time series.
      *
      * @throws CloneNotSupportedException not thrown by this class, but
      *         subclasses may differ.
      */
+    @Override
     public Object clone() throws CloneNotSupportedException {
-        Object clone = createCopy(0, getItemCount() - 1);
+        // The original code failed for empty series, because createCopy()
+        // requires start <= end, but for an empty series getItemCount() - 1
+        // is -1, leading to createCopy(0, -1) which throws an
+        // IllegalArgumentException.
+        int itemCount = getItemCount();
+        if (itemCount > 0) {
+            // If the series is not empty, delegate to createCopy to clone
+            // the series and its data items.
+            Object clone = createCopy(0, itemCount - 1);
             return clone;
         }
+        else {
+            // If the series is empty, calling createCopy(0, -1) fails.
+            // We can use super.clone() which (via Series.clone()) correctly
+            // handles cloning the series metadata and provides a new empty data list.
+            Object clone = super.clone();
+            return clone;
+        }
+    }
\ No newline at end of file
