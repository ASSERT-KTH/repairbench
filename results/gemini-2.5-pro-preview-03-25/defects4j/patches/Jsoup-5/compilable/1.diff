diff --git a/tmp/4f043ee0-ca71-4144-87d7-6078c61a4116_buggy.java b/tmp/efab13ac-918e-4f7a-9274-eea7b7e4e785_fixed.java
index 39dd8e7..9624f8b 100644
--- a/tmp/4f043ee0-ca71-4144-87d7-6078c61a4116_buggy.java
+++ b/tmp/efab13ac-918e-4f7a-9274-eea7b7e4e785_fixed.java
@@ -1,30 +1,36 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
-                while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+                // Simplified condition: scan until whitespace, or > T অনুসরণ করা হচ্ছে।
+                // Original condition: !tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()
+                // Let's stick to the original condition which might be more robust against edge cases like <a title=a>b>.
+                while (!tq.isEmpty() && !tq.matchesWhitespace() && !tq.matchesAny("<", "/>", ">")) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
+            // Key is empty, therefore this attribute is invalid. Consume the unknown character to maintain progress
+            // unless we are already at the end of the stream.
+            if (!tq.isEmpty())
                 tq.consume();
                 
             return null;
         }
     }
\ No newline at end of file
