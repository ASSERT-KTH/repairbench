diff --git a/tmp/c4a5d79b-14bb-4b8b-a690-8dd848bff892_buggy.java b/tmp/334b073a-ee44-4f58-bc8a-754b13720d48_fixed.java
index 308b324..d05761e 100644
--- a/tmp/c4a5d79b-14bb-4b8b-a690-8dd848bff892_buggy.java
+++ b/tmp/334b073a-ee44-4f58-bc8a-754b13720d48_fixed.java
@@ -1,11 +1,30 @@
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+// Class definition and other methods would be here...
+
 /**
  * Check to see if the given block comment looks like it should be JSDoc.
+ * A non-JSDoc comment is suspicious if it contains a JSDoc-like tag,
+ * typically starting with "@" at the beginning of a line.
  */
 private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
+  // This pattern looks for "@" preceded by the beginning of the string or a
+  // newline, followed by optional whitespace, an optional asterisk, and optional whitespace.
+  // This covers common JSDoc tag occurrences like "@foo", "* @foo", " * @foo".
+  Pattern suspiciousCommentPattern = Pattern.compile("(?:^|\\n)\\s*\\*?\\s*@");
+  Matcher matcher = suspiciousCommentPattern.matcher(comment.getValue());
+
+  // We trigger the warning if the pattern is found anywhere in the comment,
+  // indicating a potential misplaced JSDoc tag.
+  if (matcher.find()) {
     errorReporter.warning(
         SUSPICIOUS_COMMENT_WARNING,
         sourceName,
         comment.getLineno(), "", 0);
   }
 }
+
+// Need to ensure imports for Pattern and Matcher are present at the top of the file:
+// import java.util.regex.Matcher;
+// import java.util.regex.Pattern;
\ No newline at end of file
