diff --git a/tmp/a585c670-d315-4ec7-9aaa-b7dcb5650957_buggy.java b/tmp/0a37ac1b-7a07-4388-a06f-b3868dacaa07_fixed.java
index 57c40b2..852393e 100644
--- a/tmp/a585c670-d315-4ec7-9aaa-b7dcb5650957_buggy.java
+++ b/tmp/0a37ac1b-7a07-4388-a06f-b3868dacaa07_fixed.java
@@ -1,27 +1,40 @@
   /**
    * Visits a GETPROP node.
    *
    * @param t The node traversal object that supplies context, such as the
    * scope chain to use in name lookups as well as error reporting.
    * @param n The node being visited.
    * @param parent The parent of <code>n</code>
    */
   private void visitGetProp(NodeTraversal t, Node n, Node parent) {
     // obj.prop or obj.method()
     // Lots of types can appear on the left, a call to a void function can
     // never be on the left. getPropertyType will decide what is acceptable
     // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
 
+    // Check for dictionary access.
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
+      // Don't check property access on dicts, but ensure the node gets typed.
+      ensureTyped(t, n);
       return;
-    } else if (validator.expectNotNullOrUndefined(t, n, childType,
-        "No properties on this expression", getNativeType(OBJECT_TYPE))) {
+    }
+
+    // Check if the property access is on a null or undefined object.
+    // This check should happen regardless of whether it's an assignment.
+    // Note: JSType objects can be null if the node has not been type-checked
+    // (e.g. in externs). Let the validator handle this.
+    boolean validated = validator.expectNotNullOrUndefined(t, n, childType,
+        "No properties on this expression", getNativeType(OBJECT_TYPE));
+
+    // If the base object is not null or undefined, check the property access.
+    if (validated) {
       checkPropertyAccess(childType, property.getString(), t, n);
     }
+
+    // Ensure the GETPROP node has a type, especially for type inference.
     ensureTyped(t, n);
   }
\ No newline at end of file
