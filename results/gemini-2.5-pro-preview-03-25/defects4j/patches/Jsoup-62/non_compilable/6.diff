diff --git a/tmp/40d6bf2b-8bbc-4522-a772-9e1393d8118a_buggy.java b/tmp/a4546bb1-1433-464f-8e06-77df60481ae7_fixed.java
index 7dc89ed..4f1878a 100644
--- a/tmp/40d6bf2b-8bbc-4522-a772-9e1393d8118a_buggy.java
+++ b/tmp/a4546bb1-1433-464f-8e06-77df60481ae7_fixed.java
@@ -1,20 +1,25 @@
         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
-            String name = t.asEndTag().normalName();
+            // String name = t.asEndTag().normalName(); // Buggy line: normalName might be lowercased even if preserveCase=true
+            String name = t.asEndTag().tagName(); // Fixed line: tagName respects preserveCase setting
             ArrayList<Element> stack = tb.getStack();
             for (int pos = stack.size() -1; pos >= 0; pos--) {
                 Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
+                if (node.nodeName().equals(name)) { // nodeName also respects preserveCase setting
                     tb.generateImpliedEndTags(name);
                     if (!name.equals(tb.currentElement().nodeName()))
                         tb.error(this);
                     tb.popStackToClose(name);
                     break;
                 } else {
+                    // special elements protect against closing outside of scope
                     if (tb.isSpecial(node)) {
                         tb.error(this);
                         return false;
                     }
                 }
             }
+            // Acknowledge the token was processed (or ignored if appropriate conditions met, e.g. isSpecial element encountered).
+            // This differs from the spec, which indicates ignoring the token if no matching element in scope.
+            // However, this reflects jsoup's historical behavior.
             return true;
         }
\ No newline at end of file
