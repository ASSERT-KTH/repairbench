diff --git a/tmp/0ef7bc2b-018b-4a61-ac04-5e756badf65e_buggy.java b/tmp/8fb77057-a2a5-4990-a4dd-cadeab3e513e_fixed.java
index 7dc89ed..6db029d 100644
--- a/tmp/0ef7bc2b-018b-4a61-ac04-5e756badf65e_buggy.java
+++ b/tmp/8fb77057-a2a5-4990-a4dd-cadeab3e513e_fixed.java
@@ -1,20 +1,30 @@
         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
-            String name = t.asEndTag().normalName();
+            String name = t.asEndTag().normalName(); // Use normalized name from token
             ArrayList<Element> stack = tb.getStack();
             for (int pos = stack.size() -1; pos >= 0; pos--) {
                 Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
+                // Compare normalized tag names consistently.
+                if (node.normalName().equals(name)) {
                     tb.generateImpliedEndTags(name);
-                    if (!name.equals(tb.currentElement().nodeName()))
+                    // Check if the element we found matches the current element; error if not.
+                    // This check should also use normalized names for consistency.
+                    if (!name.equals(tb.currentElement().normalName()))
                         tb.error(this);
                     tb.popStackToClose(name);
                     break;
                 } else {
+                    // Hitting html/body tags here indicates input error, handled by isSpecial.
+                    // Cannot close over special elements (e.g., <html>, <body>, formatting elements in scope).
                     if (tb.isSpecial(node)) {
                         tb.error(this);
                         return false;
                     }
                 }
             }
+            // If we reach here, the tag was not found on the stack.
+            // Per HTML5 spec 13.2.6.4.8 "Any other end tag": "If the stack of open elements
+            // does not have an element in scope... ignore the token."
+            // Returning true signifies the token was handled (by ignoring it).
+            // Foster parenting and other mechanisms might handle the unclosed elements later.
             return true;
         }
\ No newline at end of file
