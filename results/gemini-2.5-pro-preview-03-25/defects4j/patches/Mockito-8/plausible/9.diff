diff --git a/tmp/e1158da9-3675-4db3-bf48-d4d1cd8af1ff_buggy.java b/tmp/a4ae93c3-4c50-48bf-aac0-ffa5a8fdbd6e_fixed.java
index 42b58d0..289af0b 100644
--- a/tmp/e1158da9-3675-4db3-bf48-d4d1cd8af1ff_buggy.java
+++ b/tmp/a4ae93c3-4c50-48bf-aac0-ffa5a8fdbd6e_fixed.java
@@ -1,19 +1,31 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+        
+        // Defensive check, though normally lengths should match for valid ParameterizedType
+        if (typeParameters.length != actualTypeArguments.length) {
+            return; // Or handle error appropriately
+        }
+
         for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+            TypeVariable<?> typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
+            // Prevent mapping a type variable to itself, which can cause infinite recursion
+            // in cases like <T extends Something<T>>.
+            if (actualTypeArgument.equals(typeParameter)) {
+                continue;
+            }
+
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
