diff --git a/tmp/15c4ddfb-5a60-4df9-b8df-b2b3024748e9_buggy.java b/tmp/640fa0f1-75e4-42ca-a0c2-e87816363516_fixed.java
index 66bb99f..9712ac9 100644
--- a/tmp/15c4ddfb-5a60-4df9-b8df-b2b3024748e9_buggy.java
+++ b/tmp/640fa0f1-75e4-42ca-a0c2-e87816363516_fixed.java
@@ -1,14 +1,29 @@
         @Override
         public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
         {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
-                p.nextToken();
-                return deserializeObject(p, ctxt, ctxt.getNodeFactory());
+            final JsonNodeFactory nodeFactory = ctxt.getNodeFactory();
+            // NOTE: behaviour change in 2.9useppe START_OBJECT case is NOT handled here;
+            // caller is assumed to handle it. This may be revert back in future.
+            // (either that, or take JsonNodeFactory)
+            //
+            // But for now, START_OBJECT handled externally (by standard delegating deserializer),
+            // and we assume FIELD_NAME or END_OBJECT were passed
+
+            if (p.isExpectedStartObjectToken()) {
+                // 23-Jun-2020, tatu: With 2.12, we maybe should try to support this?
+                //    Need to reconsider interaction, Task-databind#2835
+                 return deserializeObject(p, ctxt, nodeFactory);
             }
+
             // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
             //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
-                return deserializeObject(p, ctxt, ctxt.getNodeFactory());
+            JsonToken t = p.getCurrentToken();
+            if (t == JsonToken.FIELD_NAME) {
+                return deserializeObject(p, ctxt, nodeFactory);
+            }
+            // Added check: handle case where caller consumed START_OBJECT and the object is empty.
+            if (t == JsonToken.END_OBJECT) {
+                 return nodeFactory.objectNode();
             }
             throw ctxt.mappingException(ObjectNode.class);
          }
\ No newline at end of file
