diff --git a/tmp/517f74d1-2e07-42d9-a5a8-941b2a9139cd_buggy.java b/tmp/14cf1aff-0aa1-4964-bb92-069db605fa6a_fixed.java
index 66bb99f..24a87b2 100644
--- a/tmp/517f74d1-2e07-42d9-a5a8-941b2a9139cd_buggy.java
+++ b/tmp/14cf1aff-0aa1-4964-bb92-069db605fa6a_fixed.java
@@ -1,14 +1,27 @@
         @Override
         public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
         {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+            // 03-Aug-2018, tatu: Simple check to avoid passing structured types, walking arrays etc:
+            if (p.isExpectedStartObjectToken()) {
                 p.nextToken();
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
+            JsonToken t = p.getCurrentToken();
+            if (t == JsonToken.END_OBJECT) {
                  // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
                  //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+                 return ctxt.getNodeFactory().objectNode();
+            }
+            if (t == JsonToken.FIELD_NAME) {
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
-            throw ctxt.mappingException(ObjectNode.class);
+            // Prio to 2.9.7 we threw exception; but it seems more logical to
+            // check for possibility of Array value too?
+            // (Try to be more tolerant WRT structural conversions)
+            /* Let's not allow this quite yet
+            if (t == JsonToken.START_ARRAY) {
+                 // !!! TODO: implement
+            }
+            */
+            throw ctxt.mappingException(ObjectNode.class, t);
          }
\ No newline at end of file
