diff --git a/tmp/14f1b5f1-d2be-4c6f-b8fa-61c6e3474db8_buggy.java b/tmp/e1ea5c5c-c8e5-46c6-8283-3c994114c577_fixed.java
index 66bb99f..895211a 100644
--- a/tmp/14f1b5f1-d2be-4c6f-b8fa-61c6e3474db8_buggy.java
+++ b/tmp/e1ea5c5c-c8e5-46c6-8283-3c994114c577_fixed.java
@@ -1,14 +1,23 @@
         @Override
         public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
         {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
-                p.nextToken();
+            JsonToken t = p.getCurrentToken();
+
+            if (t == JsonToken.START_OBJECT) {
+                p.nextToken(); // Consume START_OBJECT
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
             // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
             //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+            if (t == JsonToken.FIELD_NAME) {
+                // Or, FIELD_NAME if START_OBJECT already consumed
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
-            throw ctxt.mappingException(ObjectNode.class);
+            // Or, END_OBJECT for empty ObjectNode like {} if START_OBJECT was consumed by caller
+            if (t == JsonToken.END_OBJECT) {
+                return ctxt.getNodeFactory().objectNode();
+            }
+            // Any other token is invalid
+            // Use mappingException that takes token type for better error message
+            throw ctxt.mappingException(ObjectNode.class, t);
          }
\ No newline at end of file
