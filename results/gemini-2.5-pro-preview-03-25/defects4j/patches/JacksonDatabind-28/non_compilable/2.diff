diff --git a/tmp/09d9b9e6-3cc5-4bb8-9f30-0c82066ed577_buggy.java b/tmp/c454b595-05d6-45b9-85f1-3192b81c248e_fixed.java
index 66bb99f..78b8851 100644
--- a/tmp/09d9b9e6-3cc5-4bb8-9f30-0c82066ed577_buggy.java
+++ b/tmp/c454b595-05d6-45b9-85f1-3192b81c248e_fixed.java
@@ -1,14 +1,23 @@
         @Override
         public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
         {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+            final JsonNodeFactory nodeFactory = ctxt.getNodeFactory();
+            // 13-Oct-2015, tatu: We used to require START_OBJECT, but now also accept FIELD_NAME
+            //    and END_OBJECT, depending on context (some callers advance token).
+            if (p.isExpectedStartObjectToken()) {
                 p.nextToken();
-                return deserializeObject(p, ctxt, ctxt.getNodeFactory());
+                return deserializeObject(p, ctxt, nodeFactory);
             }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
-                return deserializeObject(p, ctxt, ctxt.getNodeFactory());
+            JsonToken t = p.currentToken();
+            if (t == JsonToken.FIELD_NAME) {
+                return deserializeObject(p, ctxt, nodeFactory);
             }
-            throw ctxt.mappingException(ObjectNode.class);
+            // 13-Oct-2015, tatu: As per [databind#941], END_OBJECT is valid/acceptable
+            //     token too, now. But should only create an empty node.
+            if (t == JsonToken.END_OBJECT) {
+                 return nodeFactory.objectNode();
+            }
+            // Post-2.6: let's use standard error handling method:
+            return (ObjectNode) ctxt.handleUnexpectedToken(ObjectNode.class, p);
+//            throw ctxt.mappingException(ObjectNode.class, t); // earlier code
          }
\ No newline at end of file
