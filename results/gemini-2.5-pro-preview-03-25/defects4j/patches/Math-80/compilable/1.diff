diff --git a/tmp/94b33af5-c989-4efa-a25a-0a478123c6de_buggy.java b/tmp/b432fa24-7fc9-4c93-a31e-e83ee9484b32_fixed.java
index fbd0884..8af3ae8 100644
--- a/tmp/94b33af5-c989-4efa-a25a-0a478123c6de_buggy.java
+++ b/tmp/b432fa24-7fc9-4c93-a31e-e83ee9484b32_fixed.java
@@ -1,23 +1,26 @@
     /**
      * Flip qd array if warranted.
      * @param n number of rows in the block
      * @param step within the array (1 for flipping all elements, 2 for flipping
      * only every other element)
      * @return true if qd array was flipped
      */
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
             int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
+            // The original loop condition 'i < j' was buggy for odd n.
+            // The correct condition iterates n/2 times swapping blocks from start and end.
+            // See MATH-737 for details.
+            for (int i = 0; i < n / 2 * 4; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
                     work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }
                 j -= 4;
             }
             return true;
         }
         return false;
     }
\ No newline at end of file
