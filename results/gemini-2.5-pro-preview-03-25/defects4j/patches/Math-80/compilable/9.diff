diff --git a/tmp/da11ecad-e6b1-4cea-807f-607dcd59b7a4_buggy.java b/tmp/09b7865f-8944-469d-a6e8-dfdf8e0138df_fixed.java
index fbd0884..f3f78cd 100644
--- a/tmp/da11ecad-e6b1-4cea-807f-607dcd59b7a4_buggy.java
+++ b/tmp/09b7865f-8944-469d-a6e8-dfdf8e0138df_fixed.java
@@ -1,23 +1,26 @@
     /**
      * Flip qd array if warranted.
      * @param n number of rows in the block
      * @param step within the array (1 for flipping all elements, 2 for flipping
      * only every other element)
      * @return true if qd array was flipped
      */
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
             int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
+            // The original loop condition 'i < j' caused problems for odd n (see MATH-208).
+            // The corrected loop condition 'i < n * 2' ensures the loop iterates n/2 times,
+            // correctly handling the swapping of the first half of the blocks with the second half.
+            for (int i = 0; i < n * 2; i += 4) {
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
                     work[i + k] = work[j - k];
                     work[j - k] = tmp;
                 }
                 j -= 4;
             }
             return true;
         }
         return false;
     }
\ No newline at end of file
