diff --git a/tmp/15011a15-0e03-4641-90b7-bbbc6723c9ed_buggy.java b/tmp/958203bb-a386-464b-a439-9ce2b5d3e0dc_fixed.java
index fbd0884..26ec8b9 100644
--- a/tmp/15011a15-0e03-4641-90b7-bbbc6723c9ed_buggy.java
+++ b/tmp/958203bb-a386-464b-a439-9ce2b5d3e0dc_fixed.java
@@ -1,23 +1,32 @@
     /**
      * Flip qd array if warranted.
      * @param n number of rows in the block
      * @param step within the array (1 for flipping all elements, 2 for flipping
      * only every other element)
      * @return true if qd array was flipped
      */
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
                 for (int k = 0; k < 4; k += step) {
+                    // Only swap if the indices are distinct and haven't crossed
+                    if (i + k < j - k) {
                         final double tmp = work[i + k];
                         work[i + k] = work[j - k];
                         work[j - k] = tmp;
+                    } else {
+                        // If indices have crossed or met, further increments of k
+                        // within this inner loop will also cross or meet.
+                        // Breaking prevents redundant swaps or swapping an element with itself.
+                        // This optimization assumes k increases monotonically.
+                        break;
+                    }
                 }
                 j -= 4;
             }
             return true;
         }
         return false;
     }
\ No newline at end of file
