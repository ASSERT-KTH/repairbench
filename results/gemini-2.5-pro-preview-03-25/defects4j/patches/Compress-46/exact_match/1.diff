diff --git a/tmp/b4531f88-4eab-4e2e-8e0c-6186dd3595d8_buggy.java b/tmp/a7dabaef-84e5-43e8-a79c-880871f8b568_fixed.java
index 084a224..faf56ac 100644
--- a/tmp/b4531f88-4eab-4e2e-8e0c-6186dd3595d8_buggy.java
+++ b/tmp/a7dabaef-84e5-43e8-a79c-880871f8b568_fixed.java
@@ -1,7 +1,11 @@
     private static ZipLong unixTimeToZipLong(long l) {
-        final long TWO_TO_32 = 0x100000000L;
-        if (l >= TWO_TO_32) {
+        // X5455 timestamps are stored as signed 32-bit integers.
+        // We need to check if the provided long value fits within this range.
+        if (l < Integer.MIN_VALUE || l > Integer.MAX_VALUE) {
+            // The original check used TWO_TO_32 (0x100000000L), which corresponds to the
+            // upper bound of an *unsigned* 32-bit integer. The test failure and the
+            // exception message indicate that a *signed* 32-bit integer range is expected.
             throw new IllegalArgumentException("X5455 timestamps must fit in a signed 32 bit integer: " + l);
         }
         return new ZipLong(l);
     }
\ No newline at end of file
