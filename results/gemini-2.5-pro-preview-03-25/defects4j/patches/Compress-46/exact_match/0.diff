diff --git a/tmp/3c04e804-4332-465d-8858-c42a59268d62_buggy.java b/tmp/7bbcdec2-9804-4d4e-b317-f06417f8e4ec_fixed.java
index 084a224..e817b3d 100644
--- a/tmp/3c04e804-4332-465d-8858-c42a59268d62_buggy.java
+++ b/tmp/7bbcdec2-9804-4d4e-b317-f06417f8e4ec_fixed.java
@@ -1,7 +1,12 @@
     private static ZipLong unixTimeToZipLong(long l) {
-        final long TWO_TO_32 = 0x100000000L;
-        if (l >= TWO_TO_32) {
+        // X5455 timestamps are stored as signed 32-bit integers.
+        // See http://www.pkware.com/documents/casestudies/APPNOTE.TXT (Section 4.6.8)
+        // Although the ZIP format uses unsigned integers for its standard timestamp,
+        // X5455 specifically uses time_t, which is generally a signed 32-bit integer
+        // on many systems, leading to the Y2038 problem this field aims to partially address.
+        // The check should ensure the value fits within Integer.MIN_VALUE and Integer.MAX_VALUE.
+        if (l < Integer.MIN_VALUE || l > Integer.MAX_VALUE) {
             throw new IllegalArgumentException("X5455 timestamps must fit in a signed 32 bit integer: " + l);
         }
         return new ZipLong(l);
     }
\ No newline at end of file
