diff --git a/tmp/3cbd38a4-eb4a-4547-8bfc-190a47e20cf4_buggy.java b/tmp/a0a8665a-fd18-4cbb-a9bf-6d3eae06e64d_fixed.java
index 6fecc90..faff077 100644
--- a/tmp/3cbd38a4-eb4a-4547-8bfc-190a47e20cf4_buggy.java
+++ b/tmp/a0a8665a-fd18-4cbb-a9bf-6d3eae06e64d_fixed.java
@@ -1,7 +1,19 @@
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
+      // Estimates whether the node evaluation may result in a string.
+      // TODO(nickreid): Handle more types (e.g. OR, AND). For now, limit to HOOK.
+      // If the node type is known precisely, delegate to the helper. Otherwise,
+      // use the recursive logic via allResultsMatch.
+      if (n.isHook()) {
+        // A hook result depends on the condition, check each branch.
+        // recurse must be true here. Recurse into the results.
+        Node first = n.getSecondChild();
+        Node second = n.getLastChild();
+        return mayBeString(first, true) || mayBeString(second, true);
+      }
       return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
+      // Just checks the node type without deep analysis.
       return mayBeStringHelper(n);
     }
   }
\ No newline at end of file
