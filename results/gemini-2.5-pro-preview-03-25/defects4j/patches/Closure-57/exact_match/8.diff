diff --git a/tmp/96af5806-bc9d-4ef8-9a5c-3a8ad77b5c01_buggy.java b/tmp/000856b5-0bf5-4006-bf88-8f5008842f1e_fixed.java
index 1ea204a..4d91f5c 100644
--- a/tmp/96af5806-bc9d-4ef8-9a5c-3a8ad77b5c01_buggy.java
+++ b/tmp/000856b5-0bf5-4006-bf88-8f5008842f1e_fixed.java
@@ -1,17 +1,24 @@
   private static String extractClassNameIfGoog(Node node, Node parent,
       String functionName){
     String className = null;
+    // Check if the parent is an EXPR_RESULT node containing a CALL node.
     if (NodeUtil.isExprCall(parent)) {
-      Node callee = node.getFirstChild();
+      // 'node' is the CALL node.
+      Node callee = node.getFirstChild(); // Get the function being called (e.g., goog.require)
+      // Check if the callee is a GETPROP node (like 'goog.require')
       if (callee != null && callee.getType() == Token.GETPROP) {
+        // Get the qualified name of the function (e.g., "goog.require")
         String qualifiedName = callee.getQualifiedName();
+        // Check if the function name matches the expected one (e.g., "goog.require")
         if (functionName.equals(qualifiedName)) {
+          // Get the first argument passed to the function
           Node target = callee.getNext();
-          if (target != null) {
+          // Check if the argument exists and is a string literal
+          if (target != null && target.getType() == Token.STRING) {
             className = target.getString();
           }
         }
       }
     }
     return className;
   }
\ No newline at end of file
