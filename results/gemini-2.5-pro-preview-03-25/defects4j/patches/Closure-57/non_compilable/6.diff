diff --git a/tmp/ccd0d8b3-ea84-4979-a455-ca437d35a1a3_buggy.java b/tmp/08bf8399-2fea-40d0-88d1-91eec62c5752_fixed.java
index 1ea204a..393e832 100644
--- a/tmp/ccd0d8b3-ea84-4979-a455-ca437d35a1a3_buggy.java
+++ b/tmp/08bf8399-2fea-40d0-88d1-91eec62c5752_fixed.java
@@ -1,17 +1,20 @@
   private static String extractClassNameIfGoog(Node node, Node parent,
       String functionName){
     String className = null;
+    // Check if the parent is an EXPR_RESULT node, which implies node is a CALL node.
     if (NodeUtil.isExprCall(parent)) {
-      Node callee = node.getFirstChild();
-      if (callee != null && callee.getType() == Token.GETPROP) {
-        String qualifiedName = callee.getQualifiedName();
-        if (functionName.equals(qualifiedName)) {
-          Node target = callee.getNext();
-          if (target != null) {
+      // node is the CALL node.
+      Node callee = node.getFirstChild(); // Get the function being called (e.g., goog.require)
+      if (callee != null && callee.isGetProp()) { // Check if it's a property access (like foo.bar)
+        String qualifiedName = callee.getQualifiedName(); // Get the full name (e.g., "goog.require")
+        if (functionName.equals(qualifiedName)) { // Check if it matches the expected function name (e.g., "goog.require")
+          Node target = callee.getNext(); // Get the first argument to the call.
+          // Ensure the first argument exists and is a string literal.
+          if (target != null && target.isString()) {
             className = target.getString();
           }
         }
       }
     }
     return className;
   }
\ No newline at end of file
