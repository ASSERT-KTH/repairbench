diff --git a/tmp/cd4ab2bc-d075-4d3b-954f-ebd4562be61f_buggy.java b/tmp/f6a10757-82ac-4904-bbdf-d02518e744e5_fixed.java
index 1ea204a..94d0dfe 100644
--- a/tmp/cd4ab2bc-d075-4d3b-954f-ebd4562be61f_buggy.java
+++ b/tmp/f6a10757-82ac-4904-bbdf-d02518e744e5_fixed.java
@@ -1,17 +1,24 @@
   private static String extractClassNameIfGoog(Node node, Node parent,
       String functionName){
     String className = null;
+    // Check if the parent is an expression result node, meaning the call
+    // is a statement like goog.require('foo');
     if (NodeUtil.isExprCall(parent)) {
+      // node is the CALL node
       Node callee = node.getFirstChild();
+      // Check if the callee is a GETPROP node (e.g., goog.require)
       if (callee != null && callee.getType() == Token.GETPROP) {
         String qualifiedName = callee.getQualifiedName();
+        // Check if the qualified name matches the expected function name
         if (functionName.equals(qualifiedName)) {
+          // Get the first argument to the call
           Node target = callee.getNext();
-          if (target != null) {
+          // Ensure the argument exists and is a STRING literal
+          if (target != null && target.isString()) {
             className = target.getString();
           }
         }
       }
     }
     return className;
   }
\ No newline at end of file
