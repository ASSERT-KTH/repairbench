diff --git a/tmp/692151eb-3707-4d2b-a00f-6f83905687a8_buggy.java b/tmp/c3f4dce5-0fab-4d36-85fe-21536a05fa76_fixed.java
index 511560e..8eff6ef 100644
--- a/tmp/692151eb-3707-4d2b-a00f-6f83905687a8_buggy.java
+++ b/tmp/c3f4dce5-0fab-4d36-85fe-21536a05fa76_fixed.java
@@ -1,21 +1,21 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
-        int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
+        final int bottom = stack.size() - 1; // Start from the top of the stack
+        // limit the search depth; avoid walking too far up the tree
+        // The bug was in the calculation of 'top' and the modification of 'bottom'.
+        // 'bottom' should always be the actual stack top index.
+        // 'top' should be calculated based on the actual 'bottom' and MaxScopeSearchDepth.
+        final int top = bottom >= MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
 
-        for (int pos = bottom; pos >= top; pos--) {
+        for (int pos = bottom; pos >= top; pos--) { // Iterate from bottom down to top
             final String elName = stack.get(pos).nodeName();
             if (inSorted(elName, targetNames))
                 return true;
             if (inSorted(elName, baseTypes))
                 return false;
             if (extraTypes != null && inSorted(elName, extraTypes))
                 return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
-        return false;
+        //Validate.fail("Should not be reachable"); // Can be reached if we hit the search depth limit or the root 'html' element falls within baseTypes.
+        return false; // Reached top search limit or stack bottom without finding target or boundary
     }
\ No newline at end of file
