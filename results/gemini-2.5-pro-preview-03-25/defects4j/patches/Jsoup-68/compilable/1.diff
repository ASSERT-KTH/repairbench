diff --git a/tmp/adda4e5a-7084-4884-bac9-f3b48b58e23a_buggy.java b/tmp/1cc5ffa4-fc65-4a52-9503-24f21c64eea1_fixed.java
index 511560e..528a99d 100644
--- a/tmp/adda4e5a-7084-4884-bac9-f3b48b58e23a_buggy.java
+++ b/tmp/1cc5ffa4-fc65-4a52-9503-24f21c64eea1_fixed.java
@@ -1,21 +1,20 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
-        int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
+        // Search backwards up the stack from the current node position for MaxScopeSearchDepth items.
+        final int bottom = stack.size() - 1;
+        final int topMost = 0; // Stop searching when we get to the top of the stack (root element)
+        // Limit the search depth by calculating the topmost element index to check
+        final int top = (bottom >= MaxScopeSearchDepth) ? bottom - MaxScopeSearchDepth + 1 : topMost;
 
         for (int pos = bottom; pos >= top; pos--) {
             final String elName = stack.get(pos).nodeName();
             if (inSorted(elName, targetNames))
                 return true;
             if (inSorted(elName, baseTypes))
                 return false;
             if (extraTypes != null && inSorted(elName, extraTypes))
                 return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
-        return false;
+        // Validate.fail("Should not be reachable"); // Commented out as reaching here is possible and valid when search depth is limited
+        return false; // Did not find anything in the specified scope within the search depth
     }
\ No newline at end of file
