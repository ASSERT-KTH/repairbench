diff --git a/tmp/9443a584-8533-481b-a8d3-b63274c743bc_buggy.java b/tmp/4b9803af-72b5-4abf-8c85-23f334ce31e2_fixed.java
index 511560e..db56abf 100644
--- a/tmp/9443a584-8533-481b-a8d3-b63274c743bc_buggy.java
+++ b/tmp/4b9803af-72b5-4abf-8c85-23f334ce31e2_fixed.java
@@ -1,21 +1,20 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
         int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
+        // The spec search is limited 'up' the stack compared to current node.
+        // MaxScopeSearchDepth prevents runaway lookups - max 100 elements up stack typically, or stack size
+        final int top = bottom >= MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
         // don't walk too far up the tree
 
         for (int pos = bottom; pos >= top; pos--) {
             final String elName = stack.get(pos).nodeName();
             if (inSorted(elName, targetNames))
                 return true;
             if (inSorted(elName, baseTypes))
                 return false;
             if (extraTypes != null && inSorted(elName, extraTypes))
                 return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+        // Validate.fail("Should not be reachable"); // With MaxScopeSearchDepth limit, can be reached. Omitted nodeName() call for performance.
         return false;
     }
\ No newline at end of file
