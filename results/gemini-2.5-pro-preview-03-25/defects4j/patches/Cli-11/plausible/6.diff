diff --git a/tmp/b3efe6bd-eeda-45c0-b72e-8f96d486a079_buggy.java b/tmp/1b075381-5e96-4e6a-b1dd-de134df539ed_fixed.java
index 6ea5795..b183512 100644
--- a/tmp/b3efe6bd-eeda-45c0-b72e-8f96d486a079_buggy.java
+++ b/tmp/1b075381-5e96-4e6a-b1dd-de134df539ed_fixed.java
@@ -1,37 +1,48 @@
     /**
      * Appends the usage clause for an Option to a StringBuffer.
      *
      * @param buff the StringBuffer to append to
      * @param option the Option to append
      * @param required whether the Option is required or not
      */
     private static void appendOption(final StringBuffer buff,
                                      final Option option,
                                      final boolean required)
     {
         if (!required)
         {
             buff.append("[");
         }
 
         if (option.getOpt() != null)
         {
             buff.append("-").append(option.getOpt());
         }
         else
         {
             buff.append("--").append(option.getLongOpt());
         }
 
         // if the Option has a value
-        if (option.hasArg() && (option.getArgName() != null))
+        if (option.hasArg())
         {
-            buff.append(" <").append(option.getArgName()).append(">");
+            final String argName = option.getArgName();
+            // Append the arg name if it is specified and not empty
+            if (argName != null && argName.length() > 0)
+            {
+                buff.append(" <").append(argName).append(">");
+            }
+            // Else if the arg name is null (not specified), append the default name
+            else if (argName == null)
+            {
+                 buff.append(" <").append(HelpFormatter.DEFAULT_ARG_NAME).append(">");
+            }
+            // Else the arg name is present but empty (""), do not append anything for the argument
         }
 
         // if the Option is not a required option
         if (!required)
         {
             buff.append("]");
         }
     }
\ No newline at end of file
