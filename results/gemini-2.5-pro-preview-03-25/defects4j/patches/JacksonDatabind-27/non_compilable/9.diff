diff --git a/tmp/c3f1f31a-09a0-47a2-bb31-a8b3847cfbce_buggy.java b/tmp/f921aac1-bef3-487c-b82d-739130b6ac71_fixed.java
index 5bc9804..706adb1 100644
--- a/tmp/c3f1f31a-09a0-47a2-bb31-a8b3847cfbce_buggy.java
+++ b/tmp/f921aac1-bef3-487c-b82d-739130b6ac71_fixed.java
@@ -1,85 +1,98 @@
     @SuppressWarnings("resource")
     protected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p, DeserializationContext ctxt)
         throws IOException
     {
         final ExternalTypeHandler ext = _externalTypeIdHandler.start();
         final PropertyBasedCreator creator = _propertyBasedCreator;
         PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);
 
-        TokenBuffer tokens = new TokenBuffer(p);
+        // 03-Feb-2017, tatu: Need to store non-creator properties apparently, merge later
+        TokenBuffer tokens = new TokenBuffer(p, ctxt);
         tokens.writeStartObject();
 
         JsonToken t = p.getCurrentToken();
         for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
             String propName = p.getCurrentName();
             p.nextToken(); // to point to value
             // creator property?
             SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
             if (creatorProp != null) {
-                // first: let's check to see if this might be part of value with external type id:
-                // 11-Sep-2015, tatu: Important; do NOT pass buffer as last arg, but null,
-                //   since it is not the bean
+                // Check if external type handler should handle this property
+                // (NOTE: passing buffer feeds information back to handler case, but does not work with current impl)
                 if (ext.handlePropertyValue(p, ctxt, propName, buffer)) {
-                    ;
-                } else {
-                    // Last creator property to set?
+                    // yes, handled by handler, who will figure out value to use, buffer
+                    continue;
+                }
+                // If not handled by external handler, buffer it:
+                // (also need to check if pointing to creator property that is NOT visible; if so, skip)
                 if (buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {
-                        t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
-                        Object bean;
-                        try {
-                            bean = creator.build(ctxt, buffer);
-                        } catch (Exception e) {
-                            wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
-                            continue; // never gets here
-                        }
-                        // if so, need to copy all remaining tokens into buffer
-                        while (t == JsonToken.FIELD_NAME) {
-                            p.nextToken(); // to skip name
-                            tokens.copyCurrentStructure(p);
-                            t = p.nextToken();
-                        }
-                        if (bean.getClass() != _beanType.getRawClass()) {
-                            // !!! 08-Jul-2011, tatu: Could theoretically support; but for now
-                            //   it's too complicated, so bail out
-                            throw ctxt.mappingException("Can not create polymorphic instances with unwrapped values");
-                        }
-                        return ext.complete(p, ctxt, bean);
-                    }
+                    // Ok, fully buffered parameter, but we don't try to build bean yet,
+                    // need to accumulate all properties for type handler to work properly.
+                    // Just continue with loop.
+                     t = p.nextToken(); // Need to move past value, maybe?
+
+                     // [databind#928]: Need to check if this resolves everything? Can't know for sure yet...
+                     // but maybe see if we could now determine the type? Or possibly just buffer the whole thing?
+
+                     // 16-Dec-2015, tatu: Note: used to try building here, but that does not work
+                     //    with external type id case. Need to defer building.
                  }
                 continue;
             }
-            // Object Id property?
+
+            // If not creator property, maybe Object Id property?
             if (buffer.readIdProperty(propName)) {
                 continue;
             }
-            // regular property? needs buffering
+            // Or regular property? Needs buffering too.
             SettableBeanProperty prop = _beanProperties.find(propName);
             if (prop != null) {
                 buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                 continue;
             }
-            // external type id (or property that depends on it)?
+
+            // Or external type id itself? This has to be checked AFTER property search above
+            // A) because we need to know Type Id property name (could be creator property)
+            // B) because it is possible that Type Id property is also Object Id property
+            //    or Creator property. Whoops. Latter case should be fine, former... need to verify.
+            //
+            // And note: we pass 'null' and not 'buffer', as we can't be using CreatorProperty method here
              if (ext.handlePropertyValue(p, ctxt, propName, null)) {
                  continue;
              }
+
             /* As per [JACKSON-313], things marked as ignorable should not be
              * passed to any setter
              */
-            if (_ignorableProps != null && _ignorableProps.contains(propName)) {
+            Set<String> ignorables = _ignorableProps;
+            if (ignorables != null && ignorables.contains(propName)) {
                 handleIgnoredProperty(p, ctxt, handledType(), propName);
                 continue;
             }
             // "any property"?
             if (_anySetter != null) {
+                // TODO: Needs work... Add buffered anything measurement?
                  buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
+                 continue; // continue loop
             }
+
+            // Unknown: buffer typically?
+            // 13-Jun-2020, tatu: Let's try buffering to TokenBuffer, for now
+            //   Need to refine this aspect based on reported problems
+             tokens.writeFieldName(propName);
+             tokens.copyCurrentStructure(p);
         }
 
-        // We hit END_OBJECT; resolve the pieces:
+        // We hit END_OBJECT; resolve the pieces: build bean, possibly using creator
         try {
+             // Creation delegated to ExternalTypeHandler
             return ext.complete(p, ctxt, buffer, creator);
         } catch (Exception e) {
+            // We may get here if PropertyBasedCreator does not cooperate enough
+            // wrt missing creator properties... has been the case with some older JAXB aspects
+            // 18-Sep-2017, tatu: Let's try wrapInstantiationProblem here? Seems logical?
+//            return wrapInstantiationProblem(e, ctxt);
             wrapInstantiationProblem(e, ctxt);
             return null; // never gets here
         }
     }
\ No newline at end of file
