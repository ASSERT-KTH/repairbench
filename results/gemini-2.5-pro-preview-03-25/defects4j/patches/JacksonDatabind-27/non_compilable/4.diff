diff --git a/tmp/220fa7b7-7b13-49ca-bc95-20af985f074f_buggy.java b/tmp/affc72cf-8b37-49ec-a809-e8ee5f8a3753_fixed.java
index 5bc9804..e9686fb 100644
--- a/tmp/220fa7b7-7b13-49ca-bc95-20af985f074f_buggy.java
+++ b/tmp/affc72cf-8b37-49ec-a809-e8ee5f8a3753_fixed.java
@@ -1,85 +1,85 @@
     @SuppressWarnings("resource")
     protected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p, DeserializationContext ctxt)
         throws IOException
     {
         final ExternalTypeHandler ext = _externalTypeIdHandler.start();
         final PropertyBasedCreator creator = _propertyBasedCreator;
         PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);
 
-        TokenBuffer tokens = new TokenBuffer(p);
+        // 05-May-2021, tatu: As per [databind#3121], may need TokenBuffer for some cases
+        TokenBuffer tokens = new TokenBuffer(p, ctxt);
         tokens.writeStartObject();
 
         JsonToken t = p.getCurrentToken();
         for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
             String propName = p.getCurrentName();
             p.nextToken(); // to point to value
+
             // creator property?
             SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
             if (creatorProp != null) {
                 // first: let's check to see if this might be part of value with external type id:
                 // 11-Sep-2015, tatu: Important; do NOT pass buffer as last arg, but null,
-                //   since it is not the bean
-                if (ext.handlePropertyValue(p, ctxt, propName, buffer)) {
+                //   since it is not the bean. Returning true means handler found Type Id property
+                // Fix for [databind#928], pass `null` instead of `buffer`
+                if (ext.handlePropertyValue(p, ctxt, propName, null)) {
+                    // If property was handled, skip normal handling. Buffer may have been populated
                     ;
                 } else {
-                    // Last creator property to set?
-                    if (buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {
-                        t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
-                        Object bean;
-                        try {
-                            bean = creator.build(ctxt, buffer);
-                        } catch (Exception e) {
-                            wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
-                            continue; // never gets here
-                        }
-                        // if so, need to copy all remaining tokens into buffer
-                        while (t == JsonToken.FIELD_NAME) {
-                            p.nextToken(); // to skip name
-                            tokens.copyCurrentStructure(p);
-                            t = p.nextToken();
-                        }
-                        if (bean.getClass() != _beanType.getRawClass()) {
-                            // !!! 08-Jul-2011, tatu: Could theoretically support; but for now
-                            //   it's too complicated, so bail out
-                            throw ctxt.mappingException("Can not create polymorphic instances with unwrapped values");
-                        }
-                        return ext.complete(p, ctxt, bean);
-                    }
+                    // If not handled by external handler, means it's a regular creator property
+                    // (not the one associated with type id -- if any). Assign parameter value:
+                    // Also, do not try to build bean yet, may need type info
+                    buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp));
                 }
                 continue;
             }
+
             // Object Id property?
             if (buffer.readIdProperty(propName)) {
                 continue;
             }
+
+            // Regular properties requires buffering. But before that, maybe external type handler needs it?
+            // 23-Aug-2021, tatu: As per [databind#3271], need to let ext handler have a go first
+             if (ext.handlePropertyValue(p, ctxt, propName, null)) {
+                 continue;
+             }
+
             // regular property? needs buffering
             SettableBeanProperty prop = _beanProperties.find(propName);
             if (prop != null) {
                 buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
                 continue;
             }
-            // external type id (or property that depends on it)?
-            if (ext.handlePropertyValue(p, ctxt, propName, null)) {
-                continue;
-            }
+
             /* As per [JACKSON-313], things marked as ignorable should not be
              * passed to any setter
              */
             if (_ignorableProps != null && _ignorableProps.contains(propName)) {
                 handleIgnoredProperty(p, ctxt, handledType(), propName);
                 continue;
             }
+
             // "any property"?
+            // 23-Aug-2021, tatu: Needs similar handling as regular properties,
+            //    wrt external type handling. Give handler chance first.
+            //    (note: call was already made earlier, so we know handler did not handle it)
             if (_anySetter != null) {
                  buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
+                 continue; // Any property handled, move to next field
             }
-        }
+
+            // Unknown property? Add to token buffer, maybe needed by type handler
+            // (otherwise handled by standard unknown property handling)
+             tokens.writeFieldName(propName);
+             tokens.copyCurrentStructure(p);
+        } // End of loop for properties
 
         // We hit END_OBJECT; resolve the pieces:
         try {
             return ext.complete(p, ctxt, buffer, creator);
         } catch (Exception e) {
-            wrapInstantiationProblem(e, ctxt);
-            return null; // never gets here
+             // 28-Aug-2019, tatu: As per [databind#2435], need to wrap more exceptions
+             return wrapInstantiationProblem(e, ctxt);
         }
     }
\ No newline at end of file
