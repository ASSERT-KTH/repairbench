diff --git a/tmp/ea1294d5-33b8-491a-b1c1-f33dfa1eb68a_buggy.java b/tmp/04d4ce64-0ad9-4d0d-8ceb-8ba05562a659_fixed.java
index 4bbd561..9f74f03 100644
--- a/tmp/ea1294d5-33b8-491a-b1c1-f33dfa1eb68a_buggy.java
+++ b/tmp/04d4ce64-0ad9-4d0d-8ceb-8ba05562a659_fixed.java
@@ -1,37 +1,70 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        // Check if potentially start of entity: '&#'
+        if (input.charAt(index) == '&' && index + 1 < input.length() && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
+            // Check if Description has enough characters for potential 'x' and number
+            if (start >= input.length()) {
+                return 0; // Not enough characters after '&#', not a valid entity start
+            }
+
             char firstChar = input.charAt(start);
             if (firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
+                // Check if enough characters after '&#x'
+                if (start >= input.length()) {
+                    return 0; // Not enough characters after '&#x', not a valid entity start
+                }
             }
 
             int end = start;
-            while(input.charAt(end) != ';') {
+            // Find the terminating ';' within bounds
+            while (end < input.length() && input.charAt(end) != ';') {
                 end++;
             }
 
+            // Check if ';' was found before the end of the input
+            if (end == input.length() || input.charAt(end) != ';') {
+                return 0; // Malformed entity: No trailing ';' found
+            }
+
+            // Check if there are digits between start and end
+            if (start == end) {
+                 return 0; // Malformed entity: No digits found e.g. "&#;" or "&#x;"
+            }
+
             int entityValue;
             try {
+                CharSequence sub = input.subSequence(start, end);
                 if (isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
+                    entityValue = Integer.parseInt(sub.toString(), 16);
                 } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
+                    entityValue = Integer.parseInt(sub.toString(), 10);
                 }
             } catch (NumberFormatException nfe) {
+                // Treat as malformed if parsing fails
                 return 0;
             }
 
+            // Handle writing the character, including supplementary characters (> 0xFFFF)
+            if (entityValue > Character.MAX_VALUE) { // Check if supplementary character
+                // Convert to surrogate pair and write
+                out.write(Character.toChars(entityValue));
+            } else {
+                // Write as single char (BMP character)
                 out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
             }
+
+            // Return the number of characters consumed (length of the numeric entity)
+            // The entity is from index to end inclusive.
+            return end - index + 1;
+        }
+        // Not a numeric entity starting at this index
         return 0;
     }
\ No newline at end of file
