diff --git a/tmp/48911db4-f585-4ebc-8a64-c05c2b0e9150_buggy.java b/tmp/9ae0063d-7a84-4364-9b9f-94a0f48adcac_fixed.java
index d457dbe..696b7a2 100644
--- a/tmp/48911db4-f585-4ebc-8a64-c05c2b0e9150_buggy.java
+++ b/tmp/9ae0063d-7a84-4364-9b9f-94a0f48adcac_fixed.java
@@ -1,10 +1,30 @@
     @Override
     public boolean equals(Object o) {
-        if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
-        if (!super.equals(o)) return false;
+        if (this == o) return true; // Identity check
+        if (o == null || getClass() != o.getClass()) return false; // Null and class check
+
+        // Note: super (Node) equals is identity only, so no call to super.equals(o)
+        // We need to compare the fields defined in Node and Element that contribute to equality.
 
         Element element = (Element) o;
 
-        return this == o;
+        // Compare Node's fields: attributes and childNodes
+        // Attributes comparison (inherited from Node)
+        if (attributes != null ? !attributes.equals(element.attributes) : element.attributes != null) return false;
+
+        // Child nodes comparison (inherited from Node)
+        // Check size first for efficiency
+        if (childNodes.size() != element.childNodes.size()) return false;
+        // Deep comparison of child nodes
+        for (int i = 0; i < childNodes.size(); i++) {
+            if (!childNodes.get(i).equals(element.childNodes.get(i))) {
+                return false;
+            }
+        }
+
+        // Compare Element's field: tag
+        if (tag != null ? !tag.equals(element.tag) : element.tag != null) return false;
+
+        // If all checks passed, the objects are considered equal
+        return true;
     }
\ No newline at end of file
