diff --git a/tmp/eb639341-6f6f-4cd6-a406-2fe1aae91893_buggy.java b/tmp/7857add4-ee8a-400d-a49f-ed18f987ed29_fixed.java
index dc93be3..7fbf063 100644
--- a/tmp/eb639341-6f6f-4cd6-a406-2fe1aae91893_buggy.java
+++ b/tmp/7857add4-ee8a-400d-a49f-ed18f987ed29_fixed.java
@@ -1,14 +1,25 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+        Tag tag = Tag.valueOf(startTag.name(), settings);
+
+        // Handle self-closing tags:
         if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
+            boolean isKnownNonEmpty = tag.isKnownTag() && !tag.isEmpty();
+            // if a known tag allows self closing, but isn't implicitly empty, add the element to stack and then implicitly end it.
+            Element el = insertEmpty(startTag); // Insert node, acknowledge if needed.
+
+            if (isKnownNonEmpty) {
+                // Treat like <tag></tag>
+                // This handles tags like <div/> or <script/> which Jsoup parses leniently.
                 stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+                tokeniser.emit(new Token.EndTag(el.tagName())); // Emit implied end tag.
+            }
+            // else: unknown tag (<foo />) or known empty tag (<hr />). These are implicitly closed by insertEmpty.
+            // Do not add to stack or emit end tag for these. This ensures <foo /> stays as a single element.
             return el;
         }
 
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
-        insert(el);
+        // Handle normal non-self-closing start tags:
+        Element el = new Element(tag, baseUri, startTag.attributes);
+        insert(el); // Call the other insert method to add to tree and stack
         return el;
     }
\ No newline at end of file
