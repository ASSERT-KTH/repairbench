diff --git a/tmp/3fcf703d-f942-4fca-8ab1-dbad69044861_buggy.java b/tmp/7bf96c2e-a15d-44c3-ac5e-3315f5fb2900_fixed.java
index 0dbce00..c03d24d 100644
--- a/tmp/3fcf703d-f942-4fca-8ab1-dbad69044861_buggy.java
+++ b/tmp/7bf96c2e-a15d-44c3-ac5e-3315f5fb2900_fixed.java
@@ -1,33 +1,53 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+            // 26-Oct-2015, tatu: Use 'getMember()' instead of 'findFormatOverride' for access
+            //    (NOTE: similar change for deser side in 2.7)
+            // 03-Feb-2017, tatu: but this MUST be guarded by null check(s)
+            AnnotatedMember member = property.getMember();
+            JsonFormat.Value format = null;
+
+            if (member != null) {
+                format = serializers.getAnnotationIntrospector().findFormat(member);
+            }
+            // If nothingoverride found, let's use defaults next
+            if (format == null) {
+                 format = _propertyFormat;
+            }
+
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+
+                // Simple case first: serialize as numeric timestamp?
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // If shape is STRING, or ANY/empty implies STRING+config, use specified formatting
+                // 04-Feb-2017, tatu: As per [databind#1551], need to ensure A) Shape.ANY implies
+                //    String (unless overridden by global feature), and B) pattern/locale/timezone needs
+                //    to be applied even if Shape is not STRING.
+                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                        || format.hasLocale() || format.hasTimezone()) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
+                                    // default pattern implementation is complex; leave to StdDateFormat
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
+                // Otherwise might be Shape.ANY, which means we should use serialization defaults
             }
         }
         return this;
     }
\ No newline at end of file
