diff --git a/tmp/08780892-25ad-40ab-828c-5530c34e58f5_buggy.java b/tmp/87af113e-1c89-43f2-9d29-fd3f7ba5b0d6_fixed.java
index 0dbce00..dee8c5e 100644
--- a/tmp/08780892-25ad-40ab-828c-5530c34e58f5_buggy.java
+++ b/tmp/87af113e-1c89-43f2-9d29-fd3f7ba5b0d6_fixed.java
@@ -1,33 +1,45 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat(property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+
+                // Simple case first: serialize as numeric timestamp?
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // Check for STRING shape or Shape.ANY with specific formatting details that imply STRING
+                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                        || format.hasLocale() || format.hasTimeZone() || format.hasLenient()) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
+                                    // As per [databind#1424]: default to ISO8601, not base implementations default
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
+                    Boolean lenient = format.getLenient();
+                    if (lenient != null) {
+                        df.setLenient(lenient);
+                    }
                     return withFormat(Boolean.FALSE, df);
                 }
+                
+                // Otherwise, Shape.ANY is fine (use defaults), or some other shape like OBJECT etc.
+                // For Dates this typically means relying on global defaults, i.e. WRITE_DATES_AS_TIMESTAMPS
             }
         }
+        // If no annotation/property, or shape is ANY without specific overrides, return 'this'
+        // to use the default configuration (which might be timestamp or string based on global settings)
         return this;
     }
\ No newline at end of file
