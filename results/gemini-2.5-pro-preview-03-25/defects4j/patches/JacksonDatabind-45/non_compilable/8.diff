diff --git a/tmp/150a8cb5-07ea-45d0-8035-ba151baf28bf_buggy.java b/tmp/1535968c-c775-4bdd-b602-edf08ac20c85_fixed.java
index 0dbce00..84f8225 100644
--- a/tmp/150a8cb5-07ea-45d0-8035-ba151baf28bf_buggy.java
+++ b/tmp/1535968c-c775-4bdd-b602-edf08ac20c85_fixed.java
@@ -1,33 +1,90 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
+            JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
+            if (format != null) {
+                JsonFormat.Shape shape = format.getShape();
+
+                // Simple case first: serialize as numeric timestamp?
+                if (shape.isNumeric()) {
+                    return withFormat(Boolean.TRUE, null);
+                }
+
+                // If shape is explicitly String, or Shape.ANY is used and pattern/locale/timezone is set,
+                // treat as String format.
+                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                        || format.hasLocale() || format.hasTimeZone()) {
+                    TimeZone tz = format.getTimeZone();
+                    final String pattern = format.hasPattern()
+                                    ? format.getPattern()
+                                    // IMPORTANT: must default to ISO8601 here, for Shape.ANY cases that indicate String
+                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    final Locale loc = format.hasLocale()
+                                    ? format.getLocale()
+                                    : serializers.getLocale();
+                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    if (tz == null) {
+                        tz = serializers.getTimeZone();
+                    }
+                    df.setTimeZone(tz);
+                    return withFormat(Boolean.FALSE, df);
+                }
+                // Otherwise, shape is ANY and no overrides, or specific shape not handleable (OBJECT/ARRAY/etc);
+                // let base class deal with it (via defaults)
+            }
+        }
+        // If no annotation, or shape is Shape.ANY without overrides, return default instance
+        return this;
+    }
+
+    // Helper method needed by the corrected logic, assuming it exists in the base class
+    // or can be added. If not, replace its call with the original introspection code:
+    // serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+    // This is just to make the provided snippet self-contained conceptually.
+    // The original code used: serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+    // So, let's revert to that to match the original structure exactly.
+
+    @Override
+    public JsonSerializer<?> createContextual(SerializerProvider serializers,
+            BeanProperty property) throws JsonMappingException
+    {
+        if (property != null) {
+            // Find format settings via property annotations (if any)
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+
+                // Simple case first: serialize as numeric timestamp?
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // If shape is explicitly String, or Shape.ANY is used and pattern/locale/timezone is set,
+                // treat as String format.
+                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                        || format.hasLocale() || format.hasTimeZone()) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
+                                    // IMPORTANT: must default to ISO8601 here, for Shape.ANY cases that indicate String
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
+                // Otherwise, shape is ANY and no overrides, or specific shape not handleable (OBJECT/ARRAY/etc);
+                // let configuration deal with it (via defaults)
             }
         }
+        // If no annotation, or shape is Shape.ANY without overrides, return `this` unmodified
         return this;
     }
