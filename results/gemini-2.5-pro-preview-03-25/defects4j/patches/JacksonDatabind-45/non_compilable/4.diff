diff --git a/tmp/a052ec3c-5ec2-4b57-bd05-6e701adc2285_buggy.java b/tmp/d4397da0-d527-41aa-b2e1-28ad6fcd4163_fixed.java
index 0dbce00..518361c 100644
--- a/tmp/a052ec3c-5ec2-4b57-bd05-6e701adc2285_buggy.java
+++ b/tmp/d4397da0-d527-41aa-b2e1-28ad6fcd4163_fixed.java
@@ -1,33 +1,58 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+            // Use the property's annotated member to find FormatOverrides
+            // (From 2.7+)
+            AnnotatedMember member = property.getMember();
+            if (member != null) {
+                JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat(member);
                 if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
                     JsonFormat.Shape shape = format.getShape();
+
+                    // Simple case first: serialize as numeric timestamp?
                     if (shape.isNumeric()) {
                         return withFormat(Boolean.TRUE, null);
                     }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                    // If not numeric, textual it is:
+                    // But possibly using default `SimpleDateFormat` variant?
+                    // 11-Nov-2015, tatu: Needs to be handled explicitly, see [databind#939]
+                    // 10-Oct-2016, tatu: And further fixes for [databind#1343] related to Shape.ANY
+                    if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                             || format.hasLocale() || format.hasTimeZone()) {
                         TimeZone tz = format.getTimeZone();
                         final String pattern = format.hasPattern()
                                         ? format.getPattern()
+                                        // Need to override globally defined pattern?
+                                        // 10-Oct-2016, tatu: For 2.8, yes -- but likely should NOT override
+                                        //    Base settings for 2.9, see [databind#1343]
                                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                         final Locale loc = format.hasLocale()
                                         ? format.getLocale()
                                         : serializers.getLocale();
                         SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                         if (tz == null) {
                             tz = serializers.getTimeZone();
                         }
                         df.setTimeZone(tz);
                         return withFormat(Boolean.FALSE, df);
                     }
+                    // 20-Mar-2016, tatu: Maybe shape is `Shape.ANY` or `SCALAR`?
+                    //   If so, could be that we want timestamp regardless of configuration?
+                    //   Let's support this by explicit request:
+                    /* Not yet implemented
+                    if (shape == JsonFormat.Shape.SCALAR) {
+                       // 13-Nov-2016, tatu: TO BE IMPLEMENTED LATER?
+
                     }
+                    */
+
+                    // Otherwise, need to make decision based on Global settings...
                 }
+            }
+        }
+        // If no specific format found, return the default serializer (which respects global settings)
         return this;
     }
\ No newline at end of file
