diff --git a/tmp/1dbfc000-2e96-4e2c-9605-db4b64c101ae_buggy.java b/tmp/c6763987-0815-49c8-b34d-f0d70f6bee22_fixed.java
index 0dbce00..49571b5 100644
--- a/tmp/1dbfc000-2e96-4e2c-9605-db4b64c101ae_buggy.java
+++ b/tmp/c6763987-0815-49c8-b34d-f0d70f6bee22_fixed.java
@@ -1,33 +1,45 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+
+                // Simple case first: serialize as numeric timestamp?
                 if (shape.isNumeric()) {
+                    // Force timestamp format (ignore global defaults)
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // Next: textual format? This includes Shape.STRING, or Shape.ANY/unspecified
+                // if pattern/locale/timezone are specified (even if global default is timestamp).
+                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
+                        || format.hasLocale() || format.hasTimeZone()) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
+                                    // [databind#960]: default to format settings, not defaults
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
+                    // Force String format (ignore global defaults)
                     return withFormat(Boolean.FALSE, df);
                 }
+                // Otherwise (Shape is ANY or SCALAR etc, or null/default,
+                // and no pattern/locale/timezone specified)
+                // -> fall through and return `this` to let global defaults apply
             }
         }
+        // No annotation/property, or annotation doesn't specify anything forcing a particular format
+        // -> return `this` to use default settings configured globally
         return this;
     }
\ No newline at end of file
