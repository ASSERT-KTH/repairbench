diff --git a/tmp/a228ea79-c7c6-44e5-b401-c26012df404e_buggy.java b/tmp/c4c786e9-9878-4d43-b3ab-c6246cb83561_fixed.java
index 98dde53..2137d52 100644
--- a/tmp/a228ea79-c7c6-44e5-b401-c26012df404e_buggy.java
+++ b/tmp/c4c786e9-9878-4d43-b3ab-c6246cb83561_fixed.java
@@ -1,34 +1,53 @@
         public void head(org.jsoup.nodes.Node source, int depth) {
             namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
             if (source instanceof org.jsoup.nodes.Element) {
                 org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
-                String prefix = updateNamespaces(sourceEl);
-                String namespace = namespacesStack.peek().get(prefix);
-                String tagName = sourceEl.tagName();
+                // Update namespaces defined ON this element first - modifies stack top
+                updateNamespaces(sourceEl);
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
-                copyAttributes(sourceEl, el);
+                final String tagName = sourceEl.tagName(); // e.g., "fb:like" or "div"
+                // Get prefix *from the tag name* ("fb" or null/empty string)
+                // Jsoup normalizes tag names to lower case, regardless of input case.
+                final String prefix = sourceEl.tag().prefix();
+                // Look up the namespace for the tag's prefix in the current scope (including any new xmlns on this node)
+                final String namespace = namespacesStack.peek().get(prefix);
+
+                Element el;
+                // If a namespace is defined for the prefix (or the default namespace for an empty prefix), use createElementNS
+                if (namespace != null) {
+                    el = doc.createElementNS(namespace, tagName);
+                } else {
+                    // If no namespace is defined for the prefix (e.g., an undeclared prefix like "fb:like"),
+                    // or there's no prefix and no default namespace defined.
+                    // Use the basic createElement. This avoids a NAMESPACE_ERR for element creation
+                    // like <fb:like> where fb is not declared. It creates an element with
+                    // namespaceURI=null, nodeName=tagName (e.g., "fb:like"), and localName=null per DOM Core spec.
+                    el = doc.createElement(tagName);
+                }
+
+                copyAttributes(sourceEl, el); // copy attributes (needs to be namespace aware too)
                 if (dest == null) { // sets up the root
                     doc.appendChild(el);
                 } else {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
             } else if (source instanceof org.jsoup.nodes.TextNode) {
                 org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
                 dest.appendChild(text);
             } else if (source instanceof org.jsoup.nodes.Comment) {
                 org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
                 Comment comment = doc.createComment(sourceComment.getData());
                 dest.appendChild(comment);
             } else if (source instanceof org.jsoup.nodes.DataNode) {
                 org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
+                // Note: DataNodes are not valid in DOM Core level 3 where CDATA nodes inherit from Text.
+                // Treat as Text for compatibility with the original code's behavior.
                 Text node = doc.createTextNode(sourceData.getWholeData());
                 dest.appendChild(node);
             } else {
-                // unhandled
+                // unhandled node types (e.g., DocumentType, EntityReference)
             }
         }
\ No newline at end of file
