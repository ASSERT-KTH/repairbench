diff --git a/tmp/5386e3c0-5ec6-4159-b5a9-d6dd1cced0e4_buggy.java b/tmp/1cd78320-373b-4d09-8a7f-1a7bcf667e25_fixed.java
index 98dde53..a2ee354 100644
--- a/tmp/5386e3c0-5ec6-4159-b5a9-d6dd1cced0e4_buggy.java
+++ b/tmp/1cd78320-373b-4d09-8a7f-1a7bcf667e25_fixed.java
@@ -1,34 +1,63 @@
         public void head(org.jsoup.nodes.Node source, int depth) {
             namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
             if (source instanceof org.jsoup.nodes.Element) {
                 org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
-                String prefix = updateNamespaces(sourceEl);
-                String namespace = namespacesStack.peek().get(prefix);
+                // Update namespaces map with declarations on this element
+                // Assumes updateNamespaces modifies namespacesStack.peek()
+                updateNamespaces(sourceEl);
+
                 String tagName = sourceEl.tagName();
+                String prefix = null;
+                String lookupKey;
+                int colon = tagName.indexOf(':');
+                if (colon > 0) {
+                    // Element tag has a prefix
+                    prefix = tagName.substring(0, colon);
+                    lookupKey = prefix;
+                } else {
+                    // Element tag has no prefix - look for default namespace
+                    lookupKey = ""; // xmlns
+                }
+
+                // Look up the namespace URI from the current stack frame
+                String namespace = namespacesStack.peek().get(lookupKey);
+
+                Element el;
+                // Check the condition that causes NAMESPACE_ERR with createElementNS:
+                // A null namespaceURI and a qualifiedName with a prefix.
+                if (namespace == null && colon > 0) {
+                    // Tag name has a prefix, but the prefix is not declared. Create element without namespace.
+                    // This avoids the NAMESPACE_ERR. The created element will have namespaceURI=null,
+                    // nodeName=tagName (e.g., "fb:like"), and potentially localName=tagName.
+                    el = doc.createElement(tagName);
+                } else {
+                    // Tag name has no prefix OR the prefix is declared. Use createElementNS.
+                    // If tagName has no prefix, namespace might be null (no default namespace), which is valid for createElementNS.
+                    // If tagName has a declared prefix, namespace will be non-null.
+                    el = doc.createElementNS(namespace, tagName);
+                }
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
                 copyAttributes(sourceEl, el);
                 if (dest == null) { // sets up the root
                     doc.appendChild(el);
                 } else {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
             } else if (source instanceof org.jsoup.nodes.TextNode) {
                 org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
                 dest.appendChild(text);
             } else if (source instanceof org.jsoup.nodes.Comment) {
                 org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
                 Comment comment = doc.createComment(sourceComment.getData());
                 dest.appendChild(comment);
             } else if (source instanceof org.jsoup.nodes.DataNode) {
                 org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
                 Text node = doc.createTextNode(sourceData.getWholeData());
                 dest.appendChild(node);
             } else {
                 // unhandled
             }
         }
\ No newline at end of file
