diff --git a/tmp/c4b069fb-4dbf-4b5a-95c1-8ae9707bf6d0_buggy.java b/tmp/3b94d77b-e230-468a-b87b-770282614807_fixed.java
index 98dde53..955eb15 100644
--- a/tmp/c4b069fb-4dbf-4b5a-95c1-8ae9707bf6d0_buggy.java
+++ b/tmp/3b94d77b-e230-468a-b87b-770282614807_fixed.java
@@ -1,34 +1,62 @@
         public void head(org.jsoup.nodes.Node source, int depth) {
             namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
             if (source instanceof org.jsoup.nodes.Element) {
                 org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
-                String prefix = updateNamespaces(sourceEl);
-                String namespace = namespacesStack.peek().get(prefix);
-                String tagName = sourceEl.tagName();
+                // Update the current namespace scope (top of stack) with any xmlns attributes defined on this element
+                // Assumes updateNamespaces modifies namespacesStack.peek()
+                updateNamespaces(sourceEl);
+
+                String tagName = sourceEl.tagName(); // The qualified tag name, e.g., "fb:like"
+                String prefix = null;
+                int colon = tagName.indexOf(':');
+                if (colon > 0) {
+                    prefix = tagName.substring(0, colon); // The prefix, e.g., "fb"
+                }
+
+                // Look up the namespace URI corresponding to the prefix (or default namespace if no prefix)
+                // in the current namespace scope (the top of the stack).
+                String namespace = null;
+                if (prefix != null) {
+                    namespace = namespacesStack.peek().get(prefix);
+                } else {
+                    // If there's no prefix, check for a default namespace definition (xmlns="...")
+                    namespace = namespacesStack.peek().get("");
+                }
+
+                Element el;
+                // If a non-empty namespace URI was found, create the element with namespace awareness.
+                if (namespace != null && !namespace.isEmpty()) {
+                    el = doc.createElementNS(namespace, tagName);
+                } else {
+                    // Otherwise (no namespace URI found for the prefix, or the URI is empty,
+                    // or there is no prefix and no default namespace), create the element without a namespace.
+                    // This specifically handles the case like <fb:like> where 'fb' is not declared,
+                    // preventing the NAMESPACE_ERR from createElementNS(null, "fb:like").
+                    el = doc.createElement(tagName);
+                }
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
                 copyAttributes(sourceEl, el);
                 if (dest == null) { // sets up the root
                     doc.appendChild(el);
                 } else {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
             } else if (source instanceof org.jsoup.nodes.TextNode) {
                 org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
                 dest.appendChild(text);
             } else if (source instanceof org.jsoup.nodes.Comment) {
                 org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
                 Comment comment = doc.createComment(sourceComment.getData());
                 dest.appendChild(comment);
             } else if (source instanceof org.jsoup.nodes.DataNode) {
                 org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
+                // Ensure Text nodes are used for DataNodes as well, consistent with original behavior
                 Text node = doc.createTextNode(sourceData.getWholeData());
                 dest.appendChild(node);
             } else {
-                // unhandled
+                // unhandled node types - the original code did nothing here, so we maintain that.
             }
         }
\ No newline at end of file
