diff --git a/tmp/d76255fa-dabc-4d89-9ac7-7c818ea9aa9c_buggy.java b/tmp/216b8175-9881-4899-a576-dfc04610769c_fixed.java
index 08a41cf..a14c04f 100644
--- a/tmp/d76255fa-dabc-4d89-9ac7-7c818ea9aa9c_buggy.java
+++ b/tmp/216b8175-9881-4899-a576-dfc04610769c_fixed.java
@@ -1,12 +1,17 @@
     /**
      * Overloaded version of {@link #readValue(InputStream)}.
      */
     public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
         throws IOException, JsonProcessingException
     {
         if (_dataFormatReaders != null) {
+            // Important: we MUST use a construct that DOES NOT close the underlying byte[]
+            // (or rather, does not managed it).
             return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
         }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
-                true));
+        // [databind#391] Used to pass 'src' directly, Calculate offset/length
+        // important: we MUST similarly NOT close the underlying reader -- (false)
+        // is important.
+        return _bindAndReadValues(_considerFilter(
+                _parserFactory.createParser(src, offset, length), true));
     }
