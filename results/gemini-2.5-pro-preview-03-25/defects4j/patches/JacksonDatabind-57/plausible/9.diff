diff --git a/tmp/a7443aa1-5d62-4529-aa5b-f0ec05a82ca2_buggy.java b/tmp/84ada37f-ea73-458a-943b-ae149030c284_fixed.java
index 08a41cf..7dbb324 100644
--- a/tmp/a7443aa1-5d62-4529-aa5b-f0ec05a82ca2_buggy.java
+++ b/tmp/84ada37f-ea73-458a-943b-ae149030c284_fixed.java
@@ -1,12 +1,18 @@
     /**
      * Overloaded version of {@link #readValue(InputStream)}.
      */
     public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
         throws IOException, JsonProcessingException
     {
         if (_dataFormatReaders != null) {
-            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
+            // important: we are NOT to close the underlying reader by default
+            DataFormatReaders.Match match = _dataFormatReaders.findFormat(src, offset, length);
+            // TODO: perhaps close if no match, or something?
+            // 26-Oct-2017, tatu: As per [databind#1805], need to ensure we create actual
+            //    parser instance using matched factory, AND that it is fed with data
+            return _detectBindAndReadValues(match, false);
         }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
+        // 03-Feb-2018, tatu: As per [databind#1842], must handle offset/length here too
+        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),
                 true));
     }
\ No newline at end of file
