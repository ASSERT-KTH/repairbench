diff --git a/tmp/964724af-adaf-4eaf-b8a2-b75aff489ec7_buggy.java b/tmp/83c42441-4b3b-490d-8285-4b47ed86b4d0_fixed.java
index 08a41cf..9eb127f 100644
--- a/tmp/964724af-adaf-4eaf-b8a2-b75aff489ec7_buggy.java
+++ b/tmp/83c42441-4b3b-490d-8285-4b47ed86b4d0_fixed.java
@@ -1,12 +1,21 @@
     /**
      * Overloaded version of {@link #readValue(InputStream)}.
      */
     public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
         throws IOException, JsonProcessingException
     {
         if (_dataFormatReaders != null) {
-            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
+            // We need to pass 'true' for auto-close, since these implicitly create InputStream from bytes
+            // 18-Oct-2017, tatu: Related to [databind#1173], not sure if reliable fix but...
+            DataFormatReaders.Match match = _dataFormatReaders.findFormat(src, offset, length);
+            // important: if no format is found, need to use the default one
+            if (!match.hasMatch()) {
+                 return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),
+                         true));
+            }
+            return _detectBindAndReadValues(match, true);
         }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
+        // 04-May-2018, tatu: [databind#2032] Need to respect offset/length in this case too
+        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),
                 true));
     }
\ No newline at end of file
