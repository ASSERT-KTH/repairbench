diff --git a/tmp/9121a578-443e-47ae-9fa6-821425fea91b_buggy.java b/tmp/da6af9bf-e59c-45c3-a178-04b4dd7525c0_fixed.java
index f955f47..81724e3 100644
--- a/tmp/9121a578-443e-47ae-9fa6-821425fea91b_buggy.java
+++ b/tmp/da6af9bf-e59c-45c3-a178-04b4dd7525c0_fixed.java
@@ -1,34 +1,29 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
-                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
-                    if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
-                    }
-                    sb.append(cls.getSimpleName());
+                    // 09-Nov-2020, tatu: Use Class.getName() to handle inner classes correctly,
+                    //   despite potential aesthetic issues with array representation (see [databind#1403]).
+                    //   Previous attempt to use combination of package + simple name did not work
+                    //   correctly for inner classes.
+                    sb.append(cls.getName());
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file
