diff --git a/tmp/715096c7-6e02-472e-a5e6-a55eff91ef82_buggy.java b/tmp/ff439d4e-cf89-4396-97f9-9b59e50c2e2d_fixed.java
index f955f47..9d2ad8c 100644
--- a/tmp/715096c7-6e02-472e-a5e6-a55eff91ef82_buggy.java
+++ b/tmp/ff439d4e-cf89-4396-97f9-9b59e50c2e2d_fixed.java
@@ -1,34 +1,40 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
                     // Hmmh. Although Class.getName() is mostly ok, it does look
                     // butt-ugly for arrays.
                     // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
                     //   as it drops enclosing class. So let's try bit different approach
+                    // 11-May-2021, tatu: Actually, `getName()` is the way to go, despite array
+                    //   representation, as it is unambiguous. `getSimpleName()` for inner classes
+                    //   would be ambiguous.
+                    /*
                     String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
                     if (pkgName != null) {
                         sb.append(pkgName);
                         sb.append('.');
                     }
                     sb.append(cls.getSimpleName());
+                    */
+                    sb.append(cls.getName());
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
