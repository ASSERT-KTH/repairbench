diff --git a/tmp/43c40a2e-e32c-4e3d-b1e4-492ecbb717bf_buggy.java b/tmp/815b5817-b2e2-4fd0-9216-e9c0d84566d7_fixed.java
index f955f47..a48463b 100644
--- a/tmp/43c40a2e-e32c-4e3d-b1e4-492ecbb717bf_buggy.java
+++ b/tmp/815b5817-b2e2-4fd0-9216-e9c0d84566d7_fixed.java
@@ -1,34 +1,41 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
                     // Hmmh. Although Class.getName() is mostly ok, it does look
                     // butt-ugly for arrays.
                     // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
                     //   as it drops enclosing class. So let's try bit different approach
+                    // 17-Mar-2017, tatu: As per [databind#1559], Class.getName() is needed back
+                    //    for proper handling of inner classes. Array handling is separate problem.
+                    /* Previous logic, dropping outer class context:
                     String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
                     if (pkgName != null) {
                         sb.append(pkgName);
                         sb.append('.');
                     }
                     sb.append(cls.getSimpleName());
+                    */
+                    // For deser/ser purposes, Class.getName() is what is needed; canonical
+                    // name may differ (for inner classes); simple name not general enough
+                    sb.append(cls.getName());
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file
