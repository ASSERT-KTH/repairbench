diff --git a/tmp/09feb523-82d1-46d2-b756-25b8b2876683_buggy.java b/tmp/d1ea85f7-899d-4aec-bdbd-edcbf06484c6_fixed.java
index f955f47..4cbc25a 100644
--- a/tmp/09feb523-82d1-46d2-b756-25b8b2876683_buggy.java
+++ b/tmp/d1ea85f7-899d-4aec-bdbd-edcbf06484c6_fixed.java
@@ -1,34 +1,50 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
+                    // 16-Feb-2019, tatu: Initially NAME was used, and that has issues with
+                    //    array types, wrappers and such. Use "simple" name wherever possible.
                     // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
                     //   as it drops enclosing class. So let's try bit different approach
+                    // 24-Jul-2019, tatu: [databind#242] Need to use `getName()` for inner classes
+                    //    ... and for now, let's apply to all. Simpler, likely fastest.
+                    //    Array type names look weird (`[Ljava.lang.String;`) but ok.
+                    /*
                     String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
                     if (pkgName != null) {
                         sb.append(pkgName);
                         sb.append('.');
                     }
-                    sb.append(cls.getSimpleName());
+                    // We may be referring to an inner class, which needs special handling.
+                    // Regular classes use "simple name"
+                    // NOTE: FQCN is fine for non-nested classes, but for inner classes,
+                    // it seems to be customary to use enclosing-class + '$' + simple-name
+                    String cn = cls.getName();
+                    int ix = cn.lastIndexOf('.');
+                    if (ix < 0) { // default package?
+                         sb.append(cn);
+                    } else {
+                         sb.append(cn.substring(ix + 1));
+                    }
+                    */
+                    sb.append(cls.getName());
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file
