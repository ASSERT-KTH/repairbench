diff --git a/tmp/82de8c22-c408-4ffb-afe6-b45bc280a47e_buggy.java b/tmp/5ca10ff2-30f4-4ead-b0c8-417c9e991a22_fixed.java
index f955f47..bd2176c 100644
--- a/tmp/82de8c22-c408-4ffb-afe6-b45bc280a47e_buggy.java
+++ b/tmp/5ca10ff2-30f4-4ead-b0c8-417c9e991a22_fixed.java
@@ -1,34 +1,31 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
                     // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
-                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
-                    if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
-                    }
-                    sb.append(cls.getSimpleName());
+                    //   as it drops enclosing class. Let's use fully-qualified name instead,
+                    //   but possibly with ClassUtil helper to handle array types slightly better.
+                    // 24-Nov-2019, tatu: Use `ClassUtil.classNameOf()` (came in 2.10) which handles
+                    //    arrays, should not use raw `getName()` as it produces `[Ljava.lang.String;` etc.
+                    //    Also handles inner classes correctly (using '$' separator)
+                    sb.append(com.fasterxml.jackson.databind.util.ClassUtil.classNameOf(cls));
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file
