diff --git a/tmp/88ed6dc3-c42d-4fee-a9f3-664c3bcc04a8_buggy.java b/tmp/4790c910-c97b-4c57-8314-6361fabd5f6f_fixed.java
index 07b0792..2e5f438 100644
--- a/tmp/88ed6dc3-c42d-4fee-a9f3-664c3bcc04a8_buggy.java
+++ b/tmp/4790c910-c97b-4c57-8314-6361fabd5f6f_fixed.java
@@ -1,22 +1,39 @@
     /**
      * @return Whether the variable is only assigned a value once for its
      *     lifetime.
      */
     boolean isAssignedOnceInLifetime() {
       Reference ref = getOneAndOnlyAssignment();
       if (ref == null) {
+        // Variable is never assigned or assigned multiple times.
         return false;
       }
 
-      // Make sure this assignment is not in a loop.
-      for (BasicBlock block = ref.getBasicBlock();
+      // Traverse up the basic block graph starting from the assignment's block.
+      // This checks for loops and enclosing functions.
+      BasicBlock assignmentBlock = ref.getBasicBlock();
+      // If the assignment block is null (e.g., CFG analysis skipped), conservatively return false.
+      if (assignmentBlock == null) {
+          return false;
+      }
+      
+      for (BasicBlock block = assignmentBlock;
            block != null; block = block.getParent()) {
+        // If the assignment is within a loop, it can occur multiple times.
+        if (block.isLoop) {
+          return false;
+        }
+        // If the assignment is within a function, it can occur multiple times
+        // if the function is called multiple times (e.g., recursion, loops,
+        // multiple call sites). Conservatively assume this might happen.
         if (block.isFunction) {
-          break;
-        } else if (block.isLoop) {
           return false;
         }
       }
 
+      // If the loop completes without encountering a loop or a function block,
+      // it implies the assignment is in the global scope and not inside any loop construct
+      // traversed by the block parents.
+      // Therefore, it's assigned exactly once in its lifetime.
       return true;
     }
\ No newline at end of file
