diff --git a/tmp/97370431-de94-483f-bd45-7b0e92f1b4f8_buggy.java b/tmp/844a2b4f-a22e-4a64-982e-2097579f0d28_fixed.java
index 07b0792..6abf6ec 100644
--- a/tmp/97370431-de94-483f-bd45-7b0e92f1b4f8_buggy.java
+++ b/tmp/844a2b4f-a22e-4a64-982e-2097579f0d28_fixed.java
@@ -1,22 +1,49 @@
     /**
      * @return Whether the variable is only assigned a value once for its
      *     lifetime.
      */
     boolean isAssignedOnceInLifetime() {
       Reference ref = getOneAndOnlyAssignment();
       if (ref == null) {
+        // If there's not exactly one assignment, it's not assigned once.
         return false;
       }
 
-      // Make sure this assignment is not in a loop.
+      // Ensure the assignment isn't within a loop structure.
+      // Traverse up the BasicBlock chain until the enclosing function or script block.
       for (BasicBlock block = ref.getBasicBlock();
            block != null; block = block.getParent()) {
         if (block.isFunction) {
+          // Reached the block representing the enclosing function/script. Stop loop check.
           break;
-        } else if (block.isLoop) {
+        }
+        if (block.isLoop) {
+          // The assignment is inside a loop. It cannot be assigned only once.
           return false;
         }
       }
 
+      // Now, check if the assignment occurs in the global scope (represented by a SCRIPT node)
+      // or inside a FUNCTION node. Assignments inside FUNCTION nodes are
+      // conservatively assumed to potentially execute multiple times (e.g., due to
+      // multiple calls or recursion), so we only consider global assignments
+      // (not in loops) as potentially assigned once in their lifetime.
+      Node assignmentNode = ref.getNode();
+      Node enclosingFcnOrScript = NodeUtil.getEnclosingFunction(assignmentNode);
+
+      // If the assignment is not enclosed in any function or script, something is unexpected.
+      // Be conservative. Note: Global code should be enclosed in a SCRIPT node.
+      if (enclosingFcnOrScript == null) {
+           return false;
+      }
+
+      // If the enclosing node is a SCRIPT, the assignment is in the global scope
+      // and not inside a loop (checked above). This is assigned once.
+      if (enclosingFcnOrScript.isScript()) {
           return true;
       }
+
+      // Otherwise, the assignment is inside a FUNCTION. Conservatively assume it
+      // can execute multiple times during the program's lifetime.
+      return false;
+    }
\ No newline at end of file
