diff --git a/tmp/252573ea-658c-438e-b24e-0e481f737955_buggy.java b/tmp/d0901969-e1fa-4cb5-8e2d-ae7c7cc0e688_fixed.java
index 135fc63..140398d 100644
--- a/tmp/252573ea-658c-438e-b24e-0e481f737955_buggy.java
+++ b/tmp/d0901969-e1fa-4cb5-8e2d-ae7c7cc0e688_fixed.java
@@ -1,48 +1,54 @@
     void resetInsertionMode() {
         boolean last = false;
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element node = stack.get(pos);
             if (pos == 0) {
                 last = true;
                 node = contextElement;
             }
             String name = node.nodeName();
             if ("select".equals(name)) {
                 transition(HtmlTreeBuilderState.InSelect);
                 break; // frag
-            } else if (("td".equals(name) || "td".equals(name) && !last)) {
+            // Fix: Original code had a typo ("td".equals(name) || "td".equals(name) ...)
+            // Correctly check for "td" or "th" as per HTML5 spec for resetting mode to InCell.
+            // Also apply the '!last' condition (matches spec's 'formatting is false') to both td and th.
+            } else if (("td".equals(name) || "th".equals(name)) && !last) {
                 transition(HtmlTreeBuilderState.InCell);
                 break;
             } else if ("tr".equals(name)) {
                 transition(HtmlTreeBuilderState.InRow);
                 break;
             } else if ("tbody".equals(name) || "thead".equals(name) || "tfoot".equals(name)) {
                 transition(HtmlTreeBuilderState.InTableBody);
                 break;
             } else if ("caption".equals(name)) {
                 transition(HtmlTreeBuilderState.InCaption);
                 break;
             } else if ("colgroup".equals(name)) {
                 transition(HtmlTreeBuilderState.InColumnGroup);
                 break; // frag
             } else if ("table".equals(name)) {
                 transition(HtmlTreeBuilderState.InTable);
                 break;
             } else if ("head".equals(name)) {
+                // Spec deviation: spec says InHead if !last, Jsoup uses InBody. Retaining Jsoup's behavior.
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             } else if ("body".equals(name)) {
                 transition(HtmlTreeBuilderState.InBody);
                 break;
             } else if ("frameset".equals(name)) {
                 transition(HtmlTreeBuilderState.InFrameset);
                 break; // frag
             } else if ("html".equals(name)) {
+                 // Spec deviation: spec says BeforeHead or AfterHead depending on head elem pointer. Retaining Jsoup's behavior.
                 transition(HtmlTreeBuilderState.BeforeHead);
                 break; // frag
             } else if (last) {
+                // Final fallback for fragment parsing context element.
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             }
         }
     }
\ No newline at end of file
