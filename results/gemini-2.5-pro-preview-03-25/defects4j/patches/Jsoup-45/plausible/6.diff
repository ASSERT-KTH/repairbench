diff --git a/tmp/fff154b6-bbf8-4401-90b6-8c4b24bcb181_buggy.java b/tmp/e224f53d-4344-4d0b-a643-0e4951f994a3_fixed.java
index 135fc63..ad479d1 100644
--- a/tmp/fff154b6-bbf8-4401-90b6-8c4b24bcb181_buggy.java
+++ b/tmp/e224f53d-4344-4d0b-a643-0e4951f994a3_fixed.java
@@ -1,48 +1,55 @@
     void resetInsertionMode() {
         boolean last = false;
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element node = stack.get(pos);
             if (pos == 0) {
                 last = true;
                 node = contextElement;
             }
+            // Since node can be the contextElement, node.nodeName() can throw NPE if context is null.
+            // However, contextElement is only used when pos == 0, and the stack should not be empty
+            // unless parsing a fragment. In the fragment case, contextElement must not be null.
+            // If stack is not empty, stack.get(pos) should not be null.
             String name = node.nodeName();
             if ("select".equals(name)) {
                 transition(HtmlTreeBuilderState.InSelect);
                 break; // frag
-            } else if (("td".equals(name) || "td".equals(name) && !last)) {
+            } else if (("td".equals(name) || "th".equals(name)) && !last) { // Changed "td".equals(name) || "td".equals(name) to "td".equals(name) || "th".equals(name)
                 transition(HtmlTreeBuilderState.InCell);
                 break;
             } else if ("tr".equals(name)) {
                 transition(HtmlTreeBuilderState.InRow);
                 break;
             } else if ("tbody".equals(name) || "thead".equals(name) || "tfoot".equals(name)) {
                 transition(HtmlTreeBuilderState.InTableBody);
                 break;
             } else if ("caption".equals(name)) {
                 transition(HtmlTreeBuilderState.InCaption);
                 break;
             } else if ("colgroup".equals(name)) {
                 transition(HtmlTreeBuilderState.InColumnGroup);
                 break; // frag
             } else if ("table".equals(name)) {
                 transition(HtmlTreeBuilderState.InTable);
                 break;
             } else if ("head".equals(name)) {
+                // As per spec, should be InHead trigger body switch; but Jsoup uses InBody to imply foster parenting
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             } else if ("body".equals(name)) {
                 transition(HtmlTreeBuilderState.InBody);
                 break;
             } else if ("frameset".equals(name)) {
                 transition(HtmlTreeBuilderState.InFrameset);
                 break; // frag
             } else if ("html".equals(name)) {
-                transition(HtmlTreeBuilderState.BeforeHead);
+                // If the head ptr is null, transition to BeforeHead, else AfterHead
+                transition(HtmlTreeBuilderState.BeforeHead); // choosing BeforeHead, as no transitions direct to AfterHead
                 break; // frag
             } else if (last) {
+                // Reset to InBody for general node on fragment parse stack
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             }
         }
     }
\ No newline at end of file
