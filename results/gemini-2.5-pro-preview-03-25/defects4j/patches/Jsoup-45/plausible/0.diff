diff --git a/tmp/5405d530-5666-4533-9792-3a2256d962b0_buggy.java b/tmp/00b9cc16-de5a-425a-8dcc-11059bbe4b52_fixed.java
index 135fc63..9585de2 100644
--- a/tmp/5405d530-5666-4533-9792-3a2256d962b0_buggy.java
+++ b/tmp/00b9cc16-de5a-425a-8dcc-11059bbe4b52_fixed.java
@@ -1,48 +1,61 @@
     void resetInsertionMode() {
         boolean last = false;
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element node = stack.get(pos);
             if (pos == 0) {
                 last = true;
+                // NOTE: The original code assigned contextElement to node here.
+                // It might be relevant for fragment parsing. Let's keep it.
+                // However, the 'name' calculation below needs to happen *after* this assignment
+                // for the last element check to use the contextElement's name.
                 node = contextElement;
             }
+            // Calculate name *after* potential node reassignment when pos == 0
             String name = node.nodeName();
+
             if ("select".equals(name)) {
                 transition(HtmlTreeBuilderState.InSelect);
                 break; // frag
-            } else if (("td".equals(name) || "td".equals(name) && !last)) {
+            // Fixed: Added "th".equals(name) check. The original code had a redundant "td" check.
+            // Also ensure the !last check applies to both td and th as per HTML5 spec ยง 8.2.3.1 step 4.
+            } else if (("td".equals(name) || "th".equals(name)) && !last) {
                 transition(HtmlTreeBuilderState.InCell);
                 break;
             } else if ("tr".equals(name)) {
                 transition(HtmlTreeBuilderState.InRow);
                 break;
             } else if ("tbody".equals(name) || "thead".equals(name) || "tfoot".equals(name)) {
                 transition(HtmlTreeBuilderState.InTableBody);
                 break;
             } else if ("caption".equals(name)) {
                 transition(HtmlTreeBuilderState.InCaption);
                 break;
             } else if ("colgroup".equals(name)) {
                 transition(HtmlTreeBuilderState.InColumnGroup);
                 break; // frag
             } else if ("table".equals(name)) {
                 transition(HtmlTreeBuilderState.InTable);
                 break;
             } else if ("head".equals(name)) {
+                // Keep original behaviour (transition to InBody), might be fragment specific
+                // Spec says InHead if !last, but this code differs.
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             } else if ("body".equals(name)) {
                 transition(HtmlTreeBuilderState.InBody);
                 break;
             } else if ("frameset".equals(name)) {
                 transition(HtmlTreeBuilderState.InFrameset);
                 break; // frag
             } else if ("html".equals(name)) {
+                // Keep original behaviour (transition to BeforeHead), might be fragment specific
+                // Spec dependence on headElement pointer.
                 transition(HtmlTreeBuilderState.BeforeHead);
                 break; // frag
             } else if (last) {
+                // This is the final fallback (Spec step 14)
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             }
         }
     }
\ No newline at end of file
