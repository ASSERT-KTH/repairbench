diff --git a/tmp/d2d18d8c-0306-484d-b385-1a513e3f1d9a_buggy.java b/tmp/5e9b0788-2844-410b-985e-9e378a7d87f0_fixed.java
index 9529ba6..1ae693a 100644
--- a/tmp/d2d18d8c-0306-484d-b385-1a513e3f1d9a_buggy.java
+++ b/tmp/5e9b0788-2844-410b-985e-9e378a7d87f0_fixed.java
@@ -1,20 +1,32 @@
     public int writeValue() {
-        // Most likely, object:
+        // Object is the most complicated context
         if (_type == TYPE_OBJECT) {
+            // Success state: must have gotten field name first
+            if (_gotName) {
+                // Ok, field name was written; now expect value
+                // And after this value, we will need a field name next
                 _gotName = false;
                 ++_index;
-            return STATUS_OK_AFTER_COLON;
+                // Colon should have been written following field name
+                return STATUS_OK_AS_IS;
+            }
+            // Error state: Needs field name, not value
+            // note: Jackson versions 2.0 - 2.2 used return value `STATUS_EXPECT_VALUE` (4) here;
+            // 2.3+ uses `STATUS_EXPECT_NAME` (5) which is what Code Generation uses
+            // => use the one that framework expects (added in 2.3)
+            return STATUS_EXPECT_NAME;
         }
 
-        // Ok, array?
+        // Array context is simpler
         if (_type == TYPE_ARRAY) {
             int ix = _index;
             ++_index;
+             // First element needs no separator, others comma
             return (ix < 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_COMMA;
         }
         
-        // Nope, root context
-        // No commas within root context, but need space
+        // Root context; assumes spaces between values are fine (or handled by separator)
         ++_index;
+        // First value is fine, subsequent ones need separator
         return (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;
     }
\ No newline at end of file
