diff --git a/tmp/2aee0ca4-e3eb-48be-bf86-b97c6a853f64_buggy.java b/tmp/ae7b32b7-16b6-461e-b835-51cb351a0982_fixed.java
index 6c5e87f..9627648 100644
--- a/tmp/2aee0ca4-e3eb-48be-bf86-b97c6a853f64_buggy.java
+++ b/tmp/ae7b32b7-16b6-461e-b835-51cb351a0982_fixed.java
@@ -1,12 +1,66 @@
+import org.apache.commons.math.exception.NotStrictlyPositiveException;
+import org.apache.commons.math.exception.NumberIsTooLargeException;
+import org.apache.commons.math.util.OpenIntToDoubleHashMap;
+
+// Import other necessary classes if needed, assuming they exist in the context
+
+// Definition of the superclass (minimal stub for context)
+abstract class AbstractRealMatrix {
+    private final int rowDimension;
+    private final int columnDimension;
+
+    protected AbstractRealMatrix(int rowDimension, int columnDimension)
+        throws NotStrictlyPositiveException {
+        if (rowDimension < 1) {
+            throw new NotStrictlyPositiveException(rowDimension); // Simplified exception
+        }
+        if (columnDimension < 1) {
+            throw new NotStrictlyPositiveException(columnDimension); // Simplified exception
+        }
+        this.rowDimension = rowDimension;
+        this.columnDimension = columnDimension;
+    }
+
+    public int getRowDimension() {
+        return rowDimension;
+    }
+
+    public int getColumnDimension() {
+        return columnDimension;
+    }
+}
+
+// The class containing the buggy constructor
+class OpenMapRealMatrix extends AbstractRealMatrix {
+    /** Number of rows of the matrix. */
+    private final int rows;
+    /** Number of columns of the matrix. */
+    private final int columns;
+    /** Storage for (sparse) matrix elements. */
+    private final OpenIntToDoubleHashMap entries;
+
     /**
      * Build a sparse matrix with the supplied row and column dimensions.
      *
      * @param rowDimension Number of rows of the matrix.
      * @param columnDimension Number of columns of the matrix.
+     * @throws NotStrictlyPositiveException if row or column dimension is not
+     * positive.
+     * @throws NumberIsTooLargeException if the total number of entries of the
+     * matrix is larger than {@code Integer.MAX_VALUE}.
      */
-    public OpenMapRealMatrix(int rowDimension, int columnDimension) {
+    public OpenMapRealMatrix(int rowDimension, int columnDimension)
+        throws NotStrictlyPositiveException, NumberIsTooLargeException {
         super(rowDimension, columnDimension);
+        // Check that the total number of entries does not exceed Integer.MAX_VALUE
+        long totalSize = (long) rowDimension * columnDimension;
+        if (totalSize > Integer.MAX_VALUE) {
+            throw new NumberIsTooLargeException(totalSize, Integer.MAX_VALUE, true);
+        }
         this.rows = rowDimension;
         this.columns = columnDimension;
         this.entries = new OpenIntToDoubleHashMap(0.0);
     }
+
+    // Other methods of OpenMapRealMatrix would be here...
+}
\ No newline at end of file
