diff --git a/tmp/11f4b779-57f2-4035-98ee-bca27200072d_buggy.java b/tmp/f05e6b1c-f6e4-4880-893d-b77a3aca4d04_fixed.java
index 6c5e87f..a9c3dc4 100644
--- a/tmp/11f4b779-57f2-4035-98ee-bca27200072d_buggy.java
+++ b/tmp/f05e6b1c-f6e4-4880-893d-b77a3aca4d04_fixed.java
@@ -1,12 +1,33 @@
+import org.apache.commons.math.exception.NotStrictlyPositiveException;
+import org.apache.commons.math.exception.NumberIsTooLargeException;
+import org.apache.commons.math.util.OpenIntToDoubleHashMap;
+
+// Add imports for clarity, although they might not be strictly needed for the provided context.
+// Note: The original code likely belongs to a class extending AbstractRealMatrix.
+
     /**
      * Build a sparse matrix with the supplied row and column dimensions.
      *
      * @param rowDimension Number of rows of the matrix.
      * @param columnDimension Number of columns of the matrix.
+     * @throws NotStrictlyPositiveException if row or column dimension is not
+     * positive.
+     * @throws NumberIsTooLargeException if the total number of entries of the
+     * matrix is larger than {@code Integer.MAX_VALUE}.
      */
-    public OpenMapRealMatrix(int rowDimension, int columnDimension) {
-        super(rowDimension, columnDimension);
+    public OpenMapRealMatrix(int rowDimension, int columnDimension)
+        throws NotStrictlyPositiveException, NumberIsTooLargeException {
+        super(rowDimension, columnDimension); // Checks for rowDimension > 0 and columnDimension > 0
         this.rows = rowDimension;
         this.columns = columnDimension;
+
+        // Check that the total number of elements won't overflow integer capacity
+        long L_rowDimension = rowDimension;
+        long L_columnDimension = columnDimension;
+        long totalSize = L_rowDimension * L_columnDimension;
+        if (totalSize > Integer.MAX_VALUE) {
+            throw new NumberIsTooLargeException(totalSize, Integer.MAX_VALUE, false);
+        }
+
         this.entries = new OpenIntToDoubleHashMap(0.0);
     }
\ No newline at end of file
