diff --git a/tmp/e4577a03-6ef8-4e25-a4e3-1928e98502ce_buggy.java b/tmp/e8c545e8-3bfc-4d3c-9b3d-193a9d5b8dbb_fixed.java
index 6c5e87f..4ca8559 100644
--- a/tmp/e4577a03-6ef8-4e25-a4e3-1928e98502ce_buggy.java
+++ b/tmp/e8c545e8-3bfc-4d3c-9b3d-193a9d5b8dbb_fixed.java
@@ -1,12 +1,26 @@
+import org.apache.commons.math.exception.NumberIsTooLargeException;
+import org.apache.commons.math.util.OpenIntToDoubleHashMap;
+
     /**
      * Build a sparse matrix with the supplied row and column dimensions.
      *
      * @param rowDimension Number of rows of the matrix.
      * @param columnDimension Number of columns of the matrix.
+     * @throws org.apache.commons.math.exception.NotStrictlyPositiveException if row or column dimension is not
+     * positive.
+     * @throws NumberIsTooLargeException if the total number of entries of the
+     * matrix is larger than {@code Integer.MAX_VALUE}.
      */
     public OpenMapRealMatrix(int rowDimension, int columnDimension) {
-        super(rowDimension, columnDimension);
+        super(rowDimension, columnDimension); // Checks for rowDimension > 0 and columnDimension > 0
+
+        // Check if the total number of elements exceeds Integer.MAX_VALUE
+        long maxEntries = (long) rowDimension * columnDimension;
+        if (maxEntries > Integer.MAX_VALUE) {
+            throw new NumberIsTooLargeException(maxEntries, Integer.MAX_VALUE, true);
+        }
+
         this.rows = rowDimension;
         this.columns = columnDimension;
         this.entries = new OpenIntToDoubleHashMap(0.0);
     }
\ No newline at end of file
