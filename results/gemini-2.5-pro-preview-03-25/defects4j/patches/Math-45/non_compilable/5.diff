diff --git a/tmp/a53a89a6-937f-45bc-b855-20a1be32b0ec_buggy.java b/tmp/0194f9da-5360-4bf8-a84f-ffbbee798c97_fixed.java
index 6c5e87f..8eec7f9 100644
--- a/tmp/a53a89a6-937f-45bc-b855-20a1be32b0ec_buggy.java
+++ b/tmp/0194f9da-5360-4bf8-a84f-ffbbee798c97_fixed.java
@@ -1,12 +1,28 @@
+import org.apache.commons.math.exception.NotStrictlyPositiveException;
+import org.apache.commons.math.exception.NumberIsTooLargeException;
+import org.apache.commons.math.exception.util.LocalizedFormats;
+import org.apache.commons.math.util.OpenIntToDoubleHashMap;
+
+// ... other imports
+
 /**
  * Build a sparse matrix with the supplied row and column dimensions.
  *
  * @param rowDimension Number of rows of the matrix.
  * @param columnDimension Number of columns of the matrix.
+ * @throws NotStrictlyPositiveException if row or column dimension is not
+ * positive.
+ * @throws NumberIsTooLargeException if the total number of entries of the
+ * matrix is larger than {@code Integer.MAX_VALUE}.
  */
 public OpenMapRealMatrix(int rowDimension, int columnDimension) {
     super(rowDimension, columnDimension);
+    long theoreticalSize = (long) rowDimension * columnDimension;
+    if (theoreticalSize > Integer.MAX_VALUE) {
+        throw new NumberIsTooLargeException(LocalizedFormats.NUMBER_TOO_LARGE,
+                                            theoreticalSize, Integer.MAX_VALUE, true);
+    }
     this.rows = rowDimension;
     this.columns = columnDimension;
     this.entries = new OpenIntToDoubleHashMap(0.0);
 }
\ No newline at end of file
