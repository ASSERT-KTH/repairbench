diff --git a/tmp/b0d422da-60b9-4f3d-ac5f-85b716f8e212_buggy.java b/tmp/6c400b19-66c4-4c4e-8702-5a6ee89170a5_fixed.java
index aa351ad..35bc34c 100644
--- a/tmp/b0d422da-60b9-4f3d-ac5f-85b716f8e212_buggy.java
+++ b/tmp/6c400b19-66c4-4c4e-8702-5a6ee89170a5_fixed.java
@@ -1,41 +1,50 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
             if (el.hasAttr("disabled")) continue; // skip disabled form inputs
             String name = el.attr("name");
-            if (name.length() == 0) continue;
-            String type = el.attr("type");
+            if (name.length() == 0) continue; // skip unnamed elements
+            String type = el.attr("type").toLowerCase(); // use lower case for type comparison
 
 
             if ("select".equals(el.normalName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
                 if (!set) {
                     Element option = el.select("option").first();
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            } else if ("checkbox".equals(type) || "radio".equals(type)) {
                 // only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
                     final String val = el.val().length() >  0 ? el.val() : "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
+            } else {
+                // All other control types, like <textarea>, <input type=text|hidden|password|submit|file|etc>
+                // Exclude input[type=button], input[type=reset] as they are buttons and their values are not submitted
+                // (input[type=submit] is submitted, but usually only if it was the triggering button - not handled here)
+                // (input[type=image] also submits x,y coords - not handled here)
+                // For the failing test, we specifically need to exclude input[type=button]
+                if (el.normalName().equals("input") && ("button".equals(type) || "reset".equals(type))) {
+                    // skip these button types
                 } else {
                     data.add(HttpConnection.KeyVal.create(name, el.val()));
                 }
             }
+        }
         return data;
     }
\ No newline at end of file
