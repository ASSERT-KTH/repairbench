diff --git a/tmp/01acea74-c6ee-4de9-ad81-115e3be0bfc5_buggy.java b/tmp/6a4f055b-51cc-4e8a-88ac-378552b405e9_fixed.java
index aa351ad..e3046f3 100644
--- a/tmp/01acea74-c6ee-4de9-ad81-115e3be0bfc5_buggy.java
+++ b/tmp/6a4f055b-51cc-4e8a-88ac-378552b405e9_fixed.java
@@ -1,41 +1,50 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
             if (el.hasAttr("disabled")) continue; // skip disabled form inputs
             String name = el.attr("name");
             if (name.length() == 0) continue;
-            String type = el.attr("type");
+            String type = el.attr("type").toLowerCase(); // Use lower case for comparisons
 
 
             if ("select".equals(el.normalName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
                 if (!set) {
                     Element option = el.select("option").first();
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            } else if ("checkbox".equals(type) || "radio".equals(type)) {
                 // only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
+                    // HTML specification: If a checkbox or radio button is checked and has no value attribute,
+                    // the default value "on" is submitted.
                     final String val = el.val().length() >  0 ? el.val() : "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
             } else {
+                // General inputs (text, hidden, password etc.), textarea. Need to exclude button types.
+                // Per HTML spec, input type=button, submit, reset do not submit their value.
+                if (el.normalName().equals("input") &&
+                    (type.equals("button") || type.equals("submit") || type.equals("reset"))) {
+                    continue; // Skip these input types
+                }
+                // Add other inputs (text, password, hidden, etc.) and textarea
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }
\ No newline at end of file
