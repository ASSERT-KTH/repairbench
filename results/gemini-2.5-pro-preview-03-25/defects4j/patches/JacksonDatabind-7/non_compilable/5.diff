diff --git a/tmp/1ab11747-61cd-4418-99d4-8113d35e03a9_buggy.java b/tmp/7353ef95-2d58-4e0b-b7de-276dff169d9b_fixed.java
index 4f21a3a..c1d2c51 100644
--- a/tmp/1ab11747-61cd-4418-99d4-8113d35e03a9_buggy.java
+++ b/tmp/7353ef95-2d58-4e0b-b7de-276dff169d9b_fixed.java
@@ -1,14 +1,25 @@
     /**
      * Helper method used by standard deserializer.
      * 
      * @since 2.3
      */
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-            copyCurrentStructure(jp);
+        // 16-Feb-2017, tatu: Let's handle closing of START_OBJECT here, not in copy method
+        //   (that is, handle FIELD_NAME case here)
+        JsonToken t = jp.currentToken();
+
         /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
          *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
          *    to assume one did exist.
          */
+        // If FIELD_NAME, inject START_OBJECT automatically
+        if (t == JsonToken.FIELD_NAME) {
+            // First, need to START_OBJECT
+            writeStartObject();
+            // and then fall through to copy the structure starting with FIELD_NAME
+        }
+        // Regular cases (START_OBJECT, START_ARRAY, scalar): just copy
+        copyCurrentStructure(jp);
         return this;
     }
