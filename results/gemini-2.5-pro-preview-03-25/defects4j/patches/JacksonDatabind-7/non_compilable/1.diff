diff --git a/tmp/ae2750e7-5430-4e61-aeb2-3f0ce8521550_buggy.java b/tmp/9e2d72fc-4646-4828-bf93-81ea4db577de_fixed.java
index 4f21a3a..42ea02f 100644
--- a/tmp/ae2750e7-5430-4e61-aeb2-3f0ce8521550_buggy.java
+++ b/tmp/9e2d72fc-4646-4828-bf93-81ea4db577de_fixed.java
@@ -1,14 +1,29 @@
     /**
      * Helper method used by standard deserializer.
      * 
      * @since 2.3
      */
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
-            copyCurrentStructure(jp);
         /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
          *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
          *    to assume one did exist.
          */
+        JsonToken t = jp.currentToken();
+        if (t == JsonToken.FIELD_NAME) {
+            // If we point to FIELD_NAME, assume START_OBJECT was already consumed
+            writeStartObject();
+            // and then fall through to copy the structure, starting with the FIELD_NAME
+        } else if (t == null) {
+             // 01-Jul-2019, tatu: As per [databind#2379], need to support case where
+             //    parser is not pointing to anything (is NOT Closed, just not pointing
+             //    to anything), and this is basically empty buffer.
+             //  NOTE: used to be an ISE but perhaps this is better?
+             _appendToken(JsonToken.VALUE_EMBEDDED_OBJECT);
+             _append(null);
+             return this;
+        }
+        // Otherwise, fall through to copy starting from the current token
+        copyCurrentStructure(jp);
         return this;
     }
\ No newline at end of file
