diff --git a/tmp/709b6516-5e22-492c-b24b-f5eda16cc5d6_buggy.java b/tmp/59a38c41-00ca-40dc-8c23-35cacfdb71f1_fixed.java
index 5b8a4d2..0a3bb1d 100644
--- a/tmp/709b6516-5e22-492c-b24b-f5eda16cc5d6_buggy.java
+++ b/tmp/59a38c41-00ca-40dc-8c23-35cacfdb71f1_fixed.java
@@ -1,12 +1,35 @@
     /**
      * Creates a period from the given millisecond duration with the standard period type
      * and ISO rules, ensuring that the calculation is performed with the time-only period type.
      * <p>
      * The calculation uses the hour, minute, second and millisecond fields.
      *
      * @param duration  the duration, in milliseconds
      */
     protected BasePeriod(long duration) {
-        this(duration, null, null);
-        // bug [3264409]
+        // Creates a period based on a duration.
+        // The duration is expressed in milliseconds and is measured precisely.
+        // The resulting period has the standard period type.
+        // The calculation is performed assuming the ISO chronology and only
+        // considering the time fields. The date fields (Y, M, W, D) are set to zero.
+        // This constructor delegates to the main constructor to ensure the type and chrono are set
+        // correctly, initializing all fields to zero. Then, it calculates and sets the time fields.
+        this(0L, PeriodType.standard(), ISOChronology.getInstance()); // Init with standard type, 0 duration, ISO chronology
+
+        // Calculate time field values from the duration
+        long durationRemaining = duration;
+        int hours = FieldUtils.safeToInt(durationRemaining / DateTimeConstants.MILLIS_PER_HOUR);
+        durationRemaining %= DateTimeConstants.MILLIS_PER_HOUR;
+        int minutes = FieldUtils.safeToInt(durationRemaining / DateTimeConstants.MILLIS_PER_MINUTE);
+        durationRemaining %= DateTimeConstants.MILLIS_PER_MINUTE;
+        int seconds = FieldUtils.safeToInt(durationRemaining / DateTimeConstants.MILLIS_PER_SECOND);
+        durationRemaining %= DateTimeConstants.MILLIS_PER_SECOND;
+        int millis = FieldUtils.safeToInt(durationRemaining);
+
+        // Set the calculated values directly into the internal array.
+        // Indices for standard period type (Y, M, W, D, H, M, S, MS): H=4, M=5, S=6, Ms=7
+        setValue(4, hours);
+        setValue(5, minutes);
+        setValue(6, seconds);
+        setValue(7, millis);
     }
\ No newline at end of file
