diff --git a/tmp/c673a2a4-e33a-4752-9735-2e71e26ee90f_buggy.java b/tmp/ac671df0-fb55-46a9-a906-7c085183d60a_fixed.java
index 9a3a9db..b34567c 100644
--- a/tmp/c673a2a4-e33a-4752-9735-2e71e26ee90f_buggy.java
+++ b/tmp/ac671df0-fb55-46a9-a906-7c085183d60a_fixed.java
@@ -1,27 +1,29 @@
     /**
      * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
      * found, skips.
      *
      * @param endTag tag to close
      */
     private void popStackToClose(Token.EndTag endTag) {
-        String elName = endTag.name();
-        Element firstFound = null;
+        String elName = settings.normalizeTag(endTag.name()); // Ensure tag name is normalized according to settings
+        int firstFoundPos = -1;
 
+        // Find the position of the first element with the matching name, searching from the stack top-down.
         for (int pos = stack.size() - 1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             if (next.nodeName().equals(elName)) {
-                firstFound = next;
+                firstFoundPos = pos;
                 break;
             }
         }
-        if (firstFound == null)
+
+        if (firstFoundPos == -1) {
             return; // not found, skip
+        }
 
-        for (int pos = stack.size() -1; pos >= 0; pos--) {
-            Element next = stack.get(pos);
+        // Pop elements from the stack top down to (and including) the found element.
+        // Iterating from the end and removing ensures indices remain valid for removal.
+        for (int pos = stack.size() - 1; pos >= firstFoundPos; pos--) {
             stack.remove(pos);
-            if (next == firstFound)
-                break;
         }
     }
\ No newline at end of file
