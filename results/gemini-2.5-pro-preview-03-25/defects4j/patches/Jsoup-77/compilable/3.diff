diff --git a/tmp/fa2c565b-b19a-4604-b4c2-a5407e73a06f_buggy.java b/tmp/413acfaa-ecdd-40eb-abe2-fe288efe06e8_fixed.java
index 9a3a9db..b1087ae 100644
--- a/tmp/fa2c565b-b19a-4604-b4c2-a5407e73a06f_buggy.java
+++ b/tmp/413acfaa-ecdd-40eb-abe2-fe288efe06e8_fixed.java
@@ -1,27 +1,36 @@
     /**
      * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
      * found, skips.
      *
      * @param endTag tag to close
      */
     private void popStackToClose(Token.EndTag endTag) {
-        String elName = endTag.name();
+        String elName = endTag.name(); // Use the name from the token (should be normalized by Tokeniser)
         Element firstFound = null;
 
+        // Find the first matching element by looping downwards from the stack top.
+        // Use case-insensitive comparison to be robust, particularly if combining XML parser
+        // with HTML settings (like ParseSettings.htmlDefault which normalizes to lowercase).
+        // This handles cases where the start tag case might differ from the end tag case
+        // despite normalization attempts upstream.
         for (int pos = stack.size() - 1; pos >= 0; pos--) {
             Element next = stack.get(pos);
-            if (next.nodeName().equals(elName)) {
+            if (next.nodeName().equalsIgnoreCase(elName)) {
                 firstFound = next;
                 break;
             }
         }
+
         if (firstFound == null)
             return; // not found, skip
 
+        // Pop elements from stack top down until the firstFound element is removed.
+        // Loop downwards from the current top of the stack.
         for (int pos = stack.size() - 1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             stack.remove(pos);
+            // Stop popping when the specific element instance found earlier is removed.
             if (next == firstFound)
                 break;
         }
     }
\ No newline at end of file
