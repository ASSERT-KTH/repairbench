diff --git a/tmp/bda46e92-11ab-412f-bf80-34af09615b78_buggy.java b/tmp/f175533a-3332-4b2c-8748-e9e459868722_fixed.java
index 9a3a9db..d8b52bd 100644
--- a/tmp/bda46e92-11ab-412f-bf80-34af09615b78_buggy.java
+++ b/tmp/f175533a-3332-4b2c-8748-e9e459868722_fixed.java
@@ -1,27 +1,36 @@
+import org.jsoup.nodes.Element;
+import org.jsoup.parser.Token;
+import java.util.ArrayList; // Assuming stack is an ArrayList or similar List
+// Import other necessary classes like ParseSettings if needed, though it should be a field in the containing class (TreeBuilder)
+
     /**
      * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
      * found, skips.
      *
      * @param endTag tag to close
      */
     private void popStackToClose(Token.EndTag endTag) {
-        String elName = endTag.name();
+        // Use the ParseSettings to normalize the tag name for comparison, ensuring it matches the normalized element names
+        String elName = settings.normalizeTag(endTag.name());
         Element firstFound = null;
 
+        // Find the first element matching the normalized tag name, searching backwards.
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             if (next.nodeName().equals(elName)) {
                 firstFound = next;
                 break;
             }
         }
         if (firstFound == null)
             return; // not found, skip
 
+        // Pop the stack elements from the end, until and including the matched element.
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             stack.remove(pos);
+            // Check instance equality to ensure we stop after removing the specific element found earlier.
             if (next == firstFound)
                 break;
         }
     }
