diff --git a/tmp/ad1ab816-8db7-4447-a6b9-3e544fefde45_buggy.java b/tmp/1f06b262-728c-467b-bab6-a446448fd132_fixed.java
index bc80637..4818480 100644
--- a/tmp/ad1ab816-8db7-4447-a6b9-3e544fefde45_buggy.java
+++ b/tmp/1f06b262-728c-467b-bab6-a446448fd132_fixed.java
@@ -1,33 +1,41 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
+        // First: call factory method
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
+
+        // If not found, only then check for standard creators
         if (deser == null) {
+            // Need to consider @JsonCreator for key deserializers too..
+            // ... need to figure out details, but for now just consider Enums
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+                // This is the change: don't return, assign to 'deser'
+                // so that modification processing below will run
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            } else {
+                // Then check for standard string-based types:
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
-        // and then post-processing
+        }
+        // And finally, provide modifiers chance to override / modify
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
