diff --git a/tmp/3ff5cbbe-7bfb-4ea9-b14a-b3579e25b36b_buggy.java b/tmp/5bf1c7a9-6ab8-4963-9ac0-9656f0684776_fixed.java
index bc80637..b141efc 100644
--- a/tmp/3ff5cbbe-7bfb-4ea9-b14a-b3579e25b36b_buggy.java
+++ b/tmp/5bf1c7a9-6ab8-4963-9ac0-9656f0684776_fixed.java
@@ -1,33 +1,38 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
+        // First: specific factories
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
+
+        // If not found, only then check standard ones
         if (deser == null) {
+            // Rationale: historically Enum keys worked differently;
+            // let's avoid handling them here unless we must.
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+                 deser = _createEnumKeyDeserializer(ctxt, type);
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
-        // and then post-processing
+        }
+        // And finally, allow modification of fetched deserializer
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
