diff --git a/tmp/79885936-02ce-4a8a-a04c-3f3e79ebc383_buggy.java b/tmp/32f5ba42-9204-4444-a0cf-356750c98580_fixed.java
index 85f5680..06e9e7e 100644
--- a/tmp/79885936-02ce-4a8a-a04c-3f3e79ebc383_buggy.java
+++ b/tmp/32f5ba42-9204-4444-a0cf-356750c98580_fixed.java
@@ -1,17 +1,23 @@
   @Override
   public Date read(JsonReader in) throws IOException {
-    if (in.peek() != JsonToken.STRING) {
-      throw new JsonParseException("The date should be a string value");
+    // Handle null case
+    if (in.peek() == JsonToken.NULL) {
+      in.nextNull();
+      return null;
     }
-    Date date = deserializeToDate(in.nextString());
+    // Let nextString() handle non-string values, potentially throwing IllegalStateException
+    // which aligns with testUnexpectedToken's expectation after framework wrapping.
+    // The original code threw JsonParseException which wasn't expected by the test.
+    String dateString = in.nextString();
+    Date date = deserializeToDate(dateString); // This might throw ParseException if the string format is invalid
     if (dateType == Date.class) {
       return date;
     } else if (dateType == Timestamp.class) {
       return new Timestamp(date.getTime());
     } else if (dateType == java.sql.Date.class) {
       return new java.sql.Date(date.getTime());
     } else {
       // This must never happen: dateType is guarded in the primary constructor
       throw new AssertionError();
     }
   }
\ No newline at end of file
