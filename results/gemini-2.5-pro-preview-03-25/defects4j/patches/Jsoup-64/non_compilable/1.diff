diff --git a/tmp/f29699b1-402b-40b6-84f5-29115bc45950_buggy.java b/tmp/dc17a43e-136c-4e2a-9c53-da8a12ff4138_fixed.java
index 5eedc11..cb659d1 100644
--- a/tmp/f29699b1-402b-40b6-84f5-29115bc45950_buggy.java
+++ b/tmp/dc17a43e-136c-4e2a-9c53-da8a12ff4138_fixed.java
@@ -1,6 +1,21 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
+        // http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#parsing-main-inrawtext
         tb.insert(startTag);
+
+        if (startTag.isSelfClosing()) {
+            // If the start tag is self-closing, treat it as an opening tag followed immediately by an end tag.
+            // This seems to be how browsers handle self-closing tags for elements like <style> or <noframes>
+            // which aren't specified as void elements.
+            // Acknowledge the flag, pop the element. Don't change tokenizer or parser state.
+            tb.tokeniser.acknowledgeSelfClosingFlag();
+            // Need to pop the element insert() pushed onto the stack
+            if (startTag.name().equals(tb.currentElement().nodeName())) // Safety check, should always be true
+                 tb.pop();
+            // The parser remains in the current state (e.g., InHead) to process the next token.
+        } else {
+            // Not self-closing, regular rawtext element like <style> or <noframes>
             tb.tokeniser.transition(TokeniserState.Rawtext);
             tb.markInsertionMode();
             tb.transition(Text);
         }
+    }
\ No newline at end of file
