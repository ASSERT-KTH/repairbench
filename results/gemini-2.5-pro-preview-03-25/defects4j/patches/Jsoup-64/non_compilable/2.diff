diff --git a/tmp/54ae70a5-1fab-4f20-92c7-4e27d3b14eb3_buggy.java b/tmp/899c94a4-762f-47e7-85b9-037146a5824d_fixed.java
index 5eedc11..9b617ba 100644
--- a/tmp/54ae70a5-1fab-4f20-92c7-4e27d3b14eb3_buggy.java
+++ b/tmp/899c94a4-762f-47e7-85b9-037146a5824d_fixed.java
@@ -1,6 +1,20 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
+        // Note: Per HTML5 spec, start tags for <style>, <script>, <title>, <textarea>, <noframes>
+        // are never self-closing. The /> characters are treated as character data.
+        // However, for compatibility, JSoup handles <tag /> for these elements by
+        // creating an empty element, as demonstrated by the failing tests.
+        if (startTag.isSelfClosing()) {
+            // Insert the tag, pop it immediately (effectively closing it), and acknowledge the flag.
+            // Do not transition to Rawtext/Text states. Stay in the current insertion mode.
+            tb.insertEmpty(startTag);
+            // Explicitly acknowledge the self-closing flag to the tokeniser.
+            // This is consistent with how other self-closing tags (like <meta />) are handled.
+            tb.tokeniser.acknowledgeSelfClosingFlag();
+        } else {
+            // Standard handling: insert tag, switch tokeniser state, mark mode, switch insertion mode.
             tb.insert(startTag);
             tb.tokeniser.transition(TokeniserState.Rawtext);
             tb.markInsertionMode();
             tb.transition(Text);
         }
+    }
\ No newline at end of file
