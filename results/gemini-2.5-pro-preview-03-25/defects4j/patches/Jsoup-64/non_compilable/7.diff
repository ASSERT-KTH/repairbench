diff --git a/tmp/0bdc4462-aba4-4900-946a-4996cbae24d2_buggy.java b/tmp/b837af20-18ae-479a-b33a-41f1bcd73a88_fixed.java
index 5eedc11..1d7d9bd 100644
--- a/tmp/0bdc4462-aba4-4900-946a-4996cbae24d2_buggy.java
+++ b/tmp/b837af20-18ae-479a-b33a-41f1bcd73a88_fixed.java
@@ -1,6 +1,17 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
+        // used for noscript, noframes, style, script data
         tb.insert(startTag);
         tb.tokeniser.transition(TokeniserState.Rawtext);
         tb.markInsertionMode();
         tb.transition(Text);
+        // Handle self-closing tags like <style /> or <noframes />. The parser treats them as start tags,
+        // but we need to immediately process the implied end tag to match browser behavior and the expected output.
+        if (startTag.isSelfClosing()) {
+            // Process an end tag token corresponding to the start tag. This will trigger the Text insertion mode's
+            // handling for end tags, which pops the current node (<style>, <noframes>) and switches back
+            // to the original insertion mode (e.g., InHead). It also transitions the tokeniser state back to Data.
+            tb.process(new Token.EndTag(startTag.normalName()));
+            // Note: we do not need tb.pop() or tb.transition(tb.originalInsertionMode()) here because
+            // tb.process(endTag) implicitly handles those steps when in the Text insertion mode.
+        }
     }
\ No newline at end of file
