diff --git a/tmp/2a2ea693-6b86-4bf1-80df-721addcdb0ea_buggy.java b/tmp/47a4c505-d424-4bc5-af56-e86114945fe8_fixed.java
index 50f3e2e..4b58b5b 100644
--- a/tmp/2a2ea693-6b86-4bf1-80df-721addcdb0ea_buggy.java
+++ b/tmp/47a4c505-d424-4bc5-af56-e86114945fe8_fixed.java
@@ -1,7 +1,25 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
-        final Line reverted = new Line(zero, zero.subtract(direction));
+        // The constructor Line(p1, p2) calculates the direction vector as (p2 - p1).normalize()
+        // and the zero point (closest to origin) based on p1 and the normalized direction.
+        // If we use p1 = zero and p2 = zero - direction, delta = -direction.
+        // Normalizing -direction (which should have norm 1) can introduce floating point errors
+        // if the norm calculation result is not exactly 1.0 or if the 1.0/sqrt(norm) calculation is imprecise.
+        // This leads to the reverted direction being slightly different from negate(direction).
+
+        // To avoid this, we can choose p1 and p2 such that the normalization calculation is more robust.
+        // Let p1 = this.zero
+        // Let p2 = this.zero - 2 * this.direction
+        // Then delta = p2 - p1 = -2 * this.direction.
+        // The norm squared is (-2)^2 * ||direction||^2 = 4 * 1 = 4.
+        // The normalization factor is 1 / sqrt(4) = 1 / 2 = 0.5.
+        // The new direction = 0.5 * delta = 0.5 * (-2 * this.direction) = -this.direction.
+        // This calculation involving sqrt(4.0) = 2.0 and 1.0/2.0 = 0.5 is likely more numerically stable
+        // than calculations involving sqrt(1.0).
+        // The zero point calculation in the constructor using p1=this.zero and new_direction = -this.direction
+        // should yield the same zero point, as this.zero is orthogonal to this.direction.
+        final Line reverted = new Line(this.zero, this.zero.subtract(this.direction.scalarMultiply(2.0)));
         return reverted;
     }
\ No newline at end of file
