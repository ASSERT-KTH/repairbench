diff --git a/tmp/30193537-0e0b-4efd-aa97-37cbdf0a2b0d_buggy.java b/tmp/5d6f9daf-1422-41d9-95b8-151ff5c81f1a_fixed.java
index 50f3e2e..a4b8de8 100644
--- a/tmp/30193537-0e0b-4efd-aa97-37cbdf0a2b0d_buggy.java
+++ b/tmp/5d6f9daf-1422-41d9-95b8-151ff5c81f1a_fixed.java
@@ -1,7 +1,29 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
-        final Line reverted = new Line(zero, zero.subtract(direction));
+        // The original line passes through 'zero' (point closest to origin)
+        // with direction 'direction' (normalized vector).
+        // The reverted line should represent the same geometric line but
+        // with the opposite direction vector, i.e., -direction.
+        // The point closest to the origin ('zero') should remain the same.
+
+        // The Line constructor Line(p1, p2) calculates the direction
+        // as normalize(p2 - p1) and recalculates the 'zero' point.
+        // Using Line(zero, zero.subtract(direction)) calculates delta = -direction.
+        // The constructor then calculates normalize(-direction). Due to floating point
+        // precision, this might not be bit-for-bit identical to direction.negate(),
+        // causing strict tests to fail.
+
+        // An alternative is to use two points symmetric around the current 'zero' point:
+        // p1 = zero + direction
+        // p2 = zero - direction
+        // The vector between these points is p2 - p1 = -2 * direction.
+        // The constructor will compute normalize(-2 * direction), which mathematically
+        // results in -direction (assuming 'direction' is normalized).
+        // The constructor will also recalculate the 'zero' point based on p1 and the new direction.
+        // Mathematically, this recalculation should yield the original 'zero' point.
+        // This approach might have slightly different numerical behavior.
+        final Line reverted = new Line(zero.add(direction), zero.subtract(direction));
         return reverted;
     }
\ No newline at end of file
