diff --git a/tmp/bbc9bb62-dba2-402d-a440-e36d7024a8f7_buggy.java b/tmp/7b93e6ff-ea8c-4736-a279-61b11de0eeb5_fixed.java
index 50f3e2e..ecfcd6d 100644
--- a/tmp/bbc9bb62-dba2-402d-a440-e36d7024a8f7_buggy.java
+++ b/tmp/7b93e6ff-ea8c-4736-a279-61b11de0eeb5_fixed.java
@@ -1,7 +1,15 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
-        final Line reverted = new Line(zero, zero.subtract(direction));
+        // Define the reverted line using two points P1 and P2 such that P2 - P1 = -2 * direction.
+        // Normalizing this vector is less prone to floating-point errors associated with
+        // normalizing a vector already very close to 1 (like -direction), as it involves division by 2.
+        // This ensures the resulting direction is exactly the negation of the original direction.
+        // Using P1 = zero + direction and P2 = zero - direction ensures the calculated 'zero' point
+        // of the new line remains the same as the original 'zero'.
+        final Vector3D p1 = zero.add(direction);
+        final Vector3D p2 = zero.subtract(direction);
+        final Line reverted = new Line(p1, p2);
         return reverted;
     }
