diff --git a/tmp/2020a6fb-8373-4dbe-8cc0-44a8e023c6d4_buggy.java b/tmp/2fd764fb-ec82-4ac2-8495-ae774abb259e_fixed.java
index 50f3e2e..5a00a8d 100644
--- a/tmp/2020a6fb-8373-4dbe-8cc0-44a8e023c6d4_buggy.java
+++ b/tmp/2fd764fb-ec82-4ac2-8495-ae774abb259e_fixed.java
@@ -1,7 +1,15 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
-        final Line reverted = new Line(zero, zero.subtract(direction));
+        // The reverted line should have the same origin point (closest point to 0,0,0)
+        // but the opposite direction vector.
+        // The original implementation used the public Line(p1, p2) constructor,
+        // which recalculated the direction and normalized it, potentially introducing
+        // small numerical differences compared to simply negating the original direction vector.
+        // Using a constructor that directly sets the zero point and direction avoids this.
+        // Assuming a private constructor exists like Line(Vector3D zero, Vector3D direction)
+        // which directly assigns the fields. This is typical in Apache Commons Math.
+        final Line reverted = new Line(this.zero, this.direction.negate());
         return reverted;
     }
\ No newline at end of file
