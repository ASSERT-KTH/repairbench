diff --git a/tmp/add4f537-3b2a-47f3-90b5-fe7c16bee4c8_buggy.java b/tmp/df1c22aa-fccf-46ff-a427-adbcac78fd29_fixed.java
index 0fc103a..557ba24 100644
--- a/tmp/add4f537-3b2a-47f3-90b5-fe7c16bee4c8_buggy.java
+++ b/tmp/df1c22aa-fccf-46ff-a427-adbcac78fd29_fixed.java
@@ -1,23 +1,39 @@
     /**
      * Remove the leading and trailing quotes from <code>str</code>.
      * E.g. if str is '"one two"', then 'one two' is returned.
+     * If str is '"one" and "two"', then '"one" and "two"' is returned.
      *
      * @param str The string from which the leading and trailing quotes
      * should be removed.
      *
      * @return The string without the leading and trailing quotes.
      */
     static String stripLeadingAndTrailingQuotes(String str)
     {
-        if (str.startsWith("\""))
-        {
-            str = str.substring(1, str.length());
+        if (str == null) {
+             return null; // Handle null input
         }
         int length = str.length();
-        if (str.endsWith("\""))
+
+        // Check if string has at least 2 characters and starts AND ends with a quote.
+        if (length >= 2 && str.startsWith("\"") && str.endsWith("\""))
         {
-            str = str.substring(0, length - 1);
+            // Extract the substring between the first and last character.
+            String inner = str.substring(1, length - 1);
+
+            // Additional check inferred from tests: only strip quotes if the
+            // inner part does not contain any quotes itself.
+            // For example, "\"foo\" and \"bar\"" should remain unchanged.
+            // But "\"foo\"" should become "foo", and "\"\"" should become "".
+            if (inner.indexOf('"') == -1) {
+                // If the inner string does not contain quotes, return the inner string.
+                return inner;
+            }
+            // Otherwise, fall through and return the original string.
         }
 
+        // If the string doesn't meet the conditions for stripping
+        // (e.g., too short, doesn't start/end with quotes, or inner part has quotes),
+        // return the original string unchanged.
         return str;
     }
\ No newline at end of file
