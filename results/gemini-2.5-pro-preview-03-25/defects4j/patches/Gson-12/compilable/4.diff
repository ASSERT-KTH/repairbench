diff --git a/tmp/17f89f72-7e4d-4ac2-a978-c359da384e06_buggy.java b/tmp/16db6807-758f-4c3a-a9e1-eacc4e78ac24_fixed.java
index 6e155da..c51e68e 100644
--- a/tmp/17f89f72-7e4d-4ac2-a978-c359da384e06_buggy.java
+++ b/tmp/16db6807-758f-4c3a-a9e1-eacc4e78ac24_fixed.java
@@ -1,10 +1,21 @@
   @Override public void skipValue() throws IOException {
     if (peek() == JsonToken.NAME) {
+      // If current token is NAME, skip the name *and* the associated value.
+      // nextName() consumes the name and positions the reader at the value.
       nextName();
-      pathNames[stackSize - 2] = "null";
+      // Now skip the value itself by popping it from the stack.
+      // popStack() removes the value (which might be a primitive, object, array, or iterator)
+      popStack();
     } else {
+      // If current token is not NAME (e.g., primitive, BEGIN/END_OBJECT/ARRAY, iterator),
+      // just pop it from the stack to skip it.
       popStack();
-        pathNames[stackSize - 1] = "null";
     }
+    // After skipping a value (or name/value pair), the parent container
+    // (if one exists) should have its index incremented.
+    // The parent's state (iterator) is at stackSize - 1 after the pop operations.
+    // Check if stackSize > 0 to prevent ArrayIndexOutOfBoundsException when skipping the root element.
+    if (stackSize > 0) {
         pathIndices[stackSize - 1]++;
     }
+  }
\ No newline at end of file
