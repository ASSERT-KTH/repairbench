diff --git a/tmp/8de3ac49-aad0-4b5e-9a9c-18e3cc62f586_buggy.java b/tmp/e5f7bda1-718d-4829-b190-ad1b1da17e85_fixed.java
index 47915ed..2422506 100644
--- a/tmp/8de3ac49-aad0-4b5e-9a9c-18e3cc62f586_buggy.java
+++ b/tmp/e5f7bda1-718d-4829-b190-ad1b1da17e85_fixed.java
@@ -1,22 +1,29 @@
     /* (non-Javadoc)
      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
      */
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
             //see issue 184.
             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
             //Only for compareTo() method by the Comparable interface
-            return 1;
+            Object mock = invocation.getMock();
+            Object[] arguments = invocation.getArguments();
+            // check if mock is compared to itself
+            if (arguments != null && arguments.length == 1 && mock == arguments[0]) {
+                 return 0; // PURE MOCKITO SELF FIX: return 0 if references are the same
+            } else {
+                 return 1; // return non-zero when mocks are different
+            }
         }
 
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
\ No newline at end of file
