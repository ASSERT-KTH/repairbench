diff --git a/tmp/de26cce3-97a2-47a8-9882-d8662334b420_buggy.java b/tmp/1fbf4cb6-8a8a-4aca-8890-dfad9bcf8181_fixed.java
index 139579d..aa6bd67 100644
--- a/tmp/de26cce3-97a2-47a8-9882-d8662334b420_buggy.java
+++ b/tmp/1fbf4cb6-8a8a-4aca-8890-dfad9bcf8181_fixed.java
@@ -1,43 +1,53 @@
     // performance sensitive
     public boolean hasClass(String className) {
+        // Retrieve class attribute value. Return false if null or if className is null/empty.
         final String classAttr = attributes.get("class");
+        if (classAttr == null || className == null) { // Added null check for robustness
+             return false;
+        }
+
         final int len = classAttr.length();
         final int wantLen = className.length();
 
-        if (len == 0 || len < wantLen) {
+        // Return false if attribute is empty, or shorter than required class name, or className is empty.
+        if (len == 0 || wantLen == 0 || len < wantLen) { // Added wantLen == 0 check
             return false;
         }
 
-        // if both lengths are equal, only need compare the className with the attribute
+        // if both lengths are equal, only need compare the className with the attribute (case-insensitive)
         if (len == wantLen) {
             return className.equalsIgnoreCase(classAttr);
         }
 
         // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
+        // Using Character.isWhitespace() for compatibility with HTML definition of whitespace.
         boolean inClass = false;
         int start = 0;
         for (int i = 0; i < len; i++) {
             if (Character.isWhitespace(classAttr.charAt(i))) {
                 if (inClass) {
                     // white space ends a class name, compare it with the requested one, ignore case
                     if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                         return true;
                     }
-                    inClass = false;
+                    inClass = false; // Reset for next class name
                 }
-            } else {
+                // Continue scanning if whitespace occurs while not in a class name
+            } else { // Character is not whitespace
                 if (!inClass) {
-                    // we're in a class name : keep the start of the substring
+                    // Starting a new class name token
                     inClass = true;
                     start = i;
                 }
+                // Continue scanning if non-whitespace character occurs while already in a class name
             }
         }
 
-        // check the last entry
+        // check the last entry (e.g., if the class attribute doesn't end with whitespace)
         if (inClass && len - start == wantLen) {
+            // Compare the final token found
             return classAttr.regionMatches(true, start, className, 0, wantLen);
         }
 
-        return false;
+        return false; // Class name not found
     }
\ No newline at end of file
