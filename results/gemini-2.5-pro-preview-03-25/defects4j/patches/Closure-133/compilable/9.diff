diff --git a/tmp/4ab97634-eb93-47bf-9eec-1c79453732c6_buggy.java b/tmp/e9f0559f-9bad-4049-9fab-38a14afecc36_fixed.java
index 42d4174..a6fa696 100644
--- a/tmp/4ab97634-eb93-47bf-9eec-1c79453732c6_buggy.java
+++ b/tmp/e9f0559f-9bad-4049-9fab-38a14afecc36_fixed.java
@@ -1,7 +1,22 @@
   /**
    * Returns the remainder of the line.
+   * This method consumes the rest of the line including the newline character,
+   * but returns the string without the newline.
    */
   private String getRemainingJSDocLine() {
+    // This consumes the rest of the line, including the newline,
+    // and updates the stream's position.
     String result = stream.getRemainingJSDocLine();
+
+    // The stream method includes the newline in its consumption logic
+    // (advancing lineno and resetting charno). However, the caller
+    // usually expects the text *content* of the line, without the newline character.
+    // Also, inconsistencies in position tracking (especially across lines)
+    // can occur if the newline consumption isn't handled carefully by the caller's
+    // position marking logic. Returning the string without the newline seems
+    // safer and aligns better with the conceptual "remainder of the line".
+    if (result.endsWith("\n")) {
+       return result.substring(0, result.length() - 1);
+    }
     return result;
   }
\ No newline at end of file
