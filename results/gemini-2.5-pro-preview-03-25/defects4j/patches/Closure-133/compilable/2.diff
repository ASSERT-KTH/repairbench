diff --git a/tmp/8fadbb1e-dc7c-43fe-a4d0-2acfc40647ee_buggy.java b/tmp/f6293ef7-eb3c-4029-b476-163035401e02_fixed.java
index 42d4174..4c734a9 100644
--- a/tmp/8fadbb1e-dc7c-43fe-a4d0-2acfc40647ee_buggy.java
+++ b/tmp/f6293ef7-eb3c-4029-b476-163035401e02_fixed.java
@@ -1,7 +1,38 @@
   /**
-   * Returns the remainder of the line.
+   * Returns the remainder of the line, excluding the trailing newline.
    */
   private String getRemainingJSDocLine() {
+    // Get the raw remaining line from the stream.
+    // We assume this might include the trailing newline characters based on the
+    // test failure suggesting position information inconsistency.
     String result = stream.getRemainingJSDocLine();
+
+    // Check if the entire result is just newline characters.
+    // This could happen if called on an empty line or right at the end of content
+    // before the newline.
+    if ("\n".equals(result) || "\r".equals(result) || "\r\n".equals(result)) {
+        // If so, the actual remaining content on the line (before the newline) is empty.
+        return "";
+    }
+
+    // If the result is not solely EOL characters, strip any trailing EOL sequence.
+    // Check for \n first, as \r\n ends with \n.
+    if (result.endsWith("\n")) {
+        // Strip \n
+        result = result.substring(0, result.length() - 1);
+        // Check if it was preceded by \r (CRLF case: \r\n)
+        if (result.endsWith("\r")) {
+            // Strip \r as well
+            result = result.substring(0, result.length() - 1);
+        }
+    } else if (result.endsWith("\r")) {
+        // Handle standalone CR case (\r)
+        result = result.substring(0, result.length() - 1);
+    }
+
+    // Return the potentially modified string, guaranteed to not have a trailing newline.
+    // This might be necessary if downstream position calculations rely on the
+    // length of this string representing content strictly *before* the newline,
+    // while the stream itself advances past the newline.
     return result;
   }
\ No newline at end of file
