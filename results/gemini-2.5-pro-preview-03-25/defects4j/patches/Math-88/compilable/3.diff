diff --git a/tmp/ebe48191-cabe-4fa2-a1a0-0207c65f389c_buggy.java b/tmp/95d06667-2013-441e-96fb-99e7e13fe0d8_fixed.java
index 544303b..927aa90 100644
--- a/tmp/ebe48191-cabe-4fa2-a1a0-0207c65f389c_buggy.java
+++ b/tmp/95d06667-2013-441e-96fb-99e7e13fe0d8_fixed.java
@@ -1,29 +1,38 @@
     /**
      * Get the current solution.
      * <p>
      * {@link #solve} should be called first for this to be the optimal solution.
      * </p>
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
+            // The value of a basic variable is the RHS value of the corresponding row
+            // The value of a non-basic variable is 0
+            // If variables are unrestricted, the value is offset by mostNegative
             coefficients[i] =
                 (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                 (restrictToNonNegative ? 0 : mostNegative);
+
+            // The removed inner loop was problematic. It incorrectly zeroed out coefficients
+            // based on entries in columns corresponding to *previous* variables within
+            // the current variable's basic row. This is not the standard way to read
+            // the solution from a simplex tableau. The value of a basic variable is
+            // determined solely by the RHS value of its basic row.
+            /*
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
                          coefficients[i] = 0;
                     }
                 }
             }
+            */
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
