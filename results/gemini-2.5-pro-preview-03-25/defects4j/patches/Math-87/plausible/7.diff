diff --git a/tmp/8839d282-b022-42d2-ade4-2845cf0ba009_buggy.java b/tmp/2aa41ebe-bf69-4b3b-82f1-735472219df3_fixed.java
index 70cafe0..436e325 100644
--- a/tmp/8839d282-b022-42d2-ade4-2845cf0ba009_buggy.java
+++ b/tmp/2aa41ebe-bf69-4b3b-82f1-735472219df3_fixed.java
@@ -1,18 +1,32 @@
     /**
      * Checks whether the given column is basic.
+     * A column is basic if it has exactly one entry equal to 1.0 in the constraint rows
+     * (rows {@link #getNumObjectiveFunctions()} to {@link #getHeight()} - 1)
+     * and all other entries in the column in these rows are 0.0.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
-        Integer row = null;
+        Integer basicRow = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
-                } else {
+            final double entry = getEntry(i, col);
+            // check if entry is non-zero (within epsilon)
+            if (!MathUtils.equals(entry, 0.0, epsilon)) {
+                // check if we already found a non-zero entry
+                if (basicRow != null) {
+                    // found a second non-zero entry, column is not basic
                     return null;
                 }
+                // This is the first non-zero entry. Check if it is 1.0 (within epsilon).
+                if (!MathUtils.equals(entry, 1.0, epsilon)) {
+                    // The first non-zero entry is not 1.0, column is not basic
+                    return null;
+                }
+                // The first non-zero entry is 1.0; record the row index.
+                basicRow = i;
             }
+            // if entry is zero, continue loop.
         }
-        return row;
+        // Return the recorded row index (null if no basic row found according to criteria).
+        return basicRow;
     }
\ No newline at end of file
