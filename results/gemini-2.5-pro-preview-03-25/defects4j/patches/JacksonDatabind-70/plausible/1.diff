diff --git a/tmp/66d31494-0846-4704-a88a-aa96f20adfba_buggy.java b/tmp/fa69887f-6036-48b1-ac60-ab29be7761a7_fixed.java
index 0313249..b5cd45a 100644
--- a/tmp/66d31494-0846-4704-a88a-aa96f20adfba_buggy.java
+++ b/tmp/fa69887f-6036-48b1-ac60-ab29be7761a7_fixed.java
@@ -1,32 +1,43 @@
     /**
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
+        // 13-Oct-2016, tatu: As per comment, do NOT use 'prop.getName()' but rather key
+        //    that was passed.
         String key = getPropertyName(propToRm);
         boolean found = false;
 
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
+            // Strings are at even indexes (0, 2, ...), values at odd indexes (1, 3, ...)
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
+                // 09-Jan-2017, tatu: Important: must check name slot (at index i-1) and
+                //   NOT property name, as only former is lower-case in case-insensitive case.
+                //   Also: cannot use 'prop.getName()' as that is not necessarily the key.
+                String name = (String) _hashArea[i-1];
+                if (key.equals(name)) {
+                    // We may need to leave deleted-marker, if this is not the last entry?
+                    // For now, let's just mark property as null, and also remove from order-list
                     _propsInOrder[_findFromOrdered(prop)] = null;
+                    found = true;
+                    // but do NOT add to new list (`props`)
                     continue;
                 }
             }
+            // otherwise keep
             props.add(prop);
         }
+
+        // Should we check for last-entry-removed deletion? For now, let's not
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
+        // And then re-construct ใหม่ from the properties collected
         init(props);
     }
\ No newline at end of file
