diff --git a/tmp/accc1338-2a27-455f-a083-31b0b225e70b_buggy.java b/tmp/5714f375-72ab-43da-a2ed-87c7f250c2cf_fixed.java
index 0313249..56f83ac 100644
--- a/tmp/accc1338-2a27-455f-a083-31b0b225e70b_buggy.java
+++ b/tmp/5714f375-72ab-43da-a2ed-87c7f250c2cf_fixed.java
@@ -1,32 +1,41 @@
     /**
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
 
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
                 // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
+                //   as only former is lower-case in case-insensitive case.
+                // 11-Nov-2023, fix for [#1493], use the key from hash area, not property name.
+                // Note: _hashArea[i-1] contains the canonical key (String)
+                Object K = _hashArea[i-1];
+                // Let's be safe though, maybe null marker or sth?
+                // (although nulls shouldn't be added)
+                if (key.equals(K)) {
+                    found = true;
                     // need to leave a hole here
                     _propsInOrder[_findFromOrdered(prop)] = null;
-                    continue;
+                    continue; // skip adding to new list
                 }
             }
+            // If not the removed property, add to the list of properties to keep
             props.add(prop);
         }
+
+        // Should be found, always, for this call, so:
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
+        // Rebuild the map with the remaining properties
         init(props);
     }
\ No newline at end of file
