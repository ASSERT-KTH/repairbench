diff --git a/tmp/8fa0b3e7-d044-467a-8a7d-c47e2b691bc4_buggy.java b/tmp/0f999541-5726-4372-a534-df4641f3699d_fixed.java
index 0313249..2541aad 100644
--- a/tmp/8fa0b3e7-d044-467a-8a7d-c47e2b691bc4_buggy.java
+++ b/tmp/0f999541-5726-4372-a534-df4641f3699d_fixed.java
@@ -1,32 +1,37 @@
     /**
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
 
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
                 // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
                 //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+                // Compare the key (which is already potentially lower-cased) with the
+                // stored key in the hash area (at index i-1).
+                found = key.equals(_hashArea[i-1]); // FIX: Compare with name slot, not prop.getName()
                 if (found) {
                     // need to leave a hole here
                     _propsInOrder[_findFromOrdered(prop)] = null;
-                    continue;
+                    continue; // Don't add this property to the list 'props'
                 }
             }
+            // If not the property to remove, add it to the list for re-initialization
             props.add(prop);
         }
+        // If the property wasn't found after checking the whole hash area, throw exception
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
+        // Rebuild the map internals with the remaining properties
         init(props);
     }
\ No newline at end of file
