diff --git a/tmp/ca200edd-41a0-487b-9d82-da1dcd88f767_buggy.java b/tmp/b9a88c55-39ca-42a9-8880-3db656f7fe98_fixed.java
index 62e8ec8..02a6e89 100644
--- a/tmp/ca200edd-41a0-487b-9d82-da1dcd88f767_buggy.java
+++ b/tmp/b9a88c55-39ca-42a9-8880-3db656f7fe98_fixed.java
@@ -1,26 +1,36 @@
     /**
      * <p>If an {@link Option} exists for <code>token</code> then
      * set the current option and add the token to the processed
      * list.</p>
      *
      * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
      * is set then ignore the current token and add the remaining tokens
      * to the processed tokens list directly.</p>
      *
      * @param token The current option token
      * @param stopAtNonOption Specifies whether flattening should halt
      * at the first non option.
+     * @throws UnrecognizedOptionException if the option is not recognized and stopAtNonOption is false
      */
     private void processOptionToken(String token, boolean stopAtNonOption)
+        throws ParseException // Added throws clause for clarity, UnrecognizedOptionException extends ParseException
     {
         if (options.hasOption(token))
         {
             currentOption = options.getOption(token);
+            // add the token to the processed tokens list
             tokens.add(token);
         }
         else if (stopAtNonOption)
         {
+            // ensure that the token is added to the processed tokens list
             eatTheRest = true;
             tokens.add(token);
         }
+        else
+        {
+            // If the token is not an option and we're not stopping processing,
+            // then it's an unrecognized option.
+            throw new UnrecognizedOptionException("Unrecognized option: " + token, token);
+        }
     }
\ No newline at end of file
