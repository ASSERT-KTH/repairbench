diff --git a/tmp/922b4eee-8532-4fe8-ba80-466badb20382_buggy.java b/tmp/81adcf69-af54-492e-b277-22e53698138e_fixed.java
index 22640dd..7cad93d 100644
--- a/tmp/922b4eee-8532-4fe8-ba80-466badb20382_buggy.java
+++ b/tmp/81adcf69-af54-492e-b277-22e53698138e_fixed.java
@@ -1,3 +1,52 @@
-  private boolean hasExceptionHandler(Node cfgNode) {
+import com.google.javascript.rhino.Node;
+import com.google.javascript.jscomp.NodeUtil;
+
+// Assume this method belongs to a class where Node and NodeUtil are available.
+
+/**
+ * Determines if the node n is inside a TRY block that has a corresponding CATCH block.
+ * The search stops at function boundaries.
+ * An exception handler is considered present if the node is inside the try block
+ * (first child of the TRY node) and the TRY node has a non-empty CATCH block
+ * (second child of the TRY node). Nodes within the CATCH or FINALLY blocks are
+ * not considered to have an exception handler by *that* TRY-CATCH structure.
+ *
+ * @param n The AST node to check.
+ * @return True if n is inside a try block with a catch handler, false otherwise.
+ */
+private boolean hasExceptionHandler(Node n) {
+  Node parent = n.getParent();
+  while (parent != null) {
+    // Stop searching at function boundaries. Exceptions don't propagate
+    // across function boundaries to be caught by outer catch blocks in the
+    // lexical scope.
+    if (parent.isFunction()) {
+      break;
+    }
+
+    if (parent.isTry()) {
+      // Check if the TRY node has a CATCH block.
+      Node catchBlock = NodeUtil.getCatchBlock(parent);
+      if (catchBlock != null) {
+        // Check if 'n' is within the TRY block (the first child).
+        // Nodes within the CATCH (second child) or FINALLY (third child, if present)
+        // blocks are not handled by this specific CATCH block.
+        Node tryBlock = parent.getFirstChild();
+        // Node.isOrWithin(descendant) checks if 'this' node is an ancestor
+        // of or is the same node as 'descendant'.
+        if (tryBlock != null && tryBlock.isOrWithin(n)) {
+          // The node 'n' is inside the try block, and a catch block exists.
+          return true;
+        }
+        // If 'n' is inside the CATCH or FINALLY block associated with this TRY,
+        // its exceptions aren't caught by this CATCH. We continue searching
+        // upwards for an enclosing try-catch.
+      }
+    }
+    // Move up to the next ancestor.
+    parent = parent.getParent();
+  }
+
+  // No enclosing try-catch block found for 'n' within its function scope.
   return false;
 }
\ No newline at end of file
