diff --git a/tmp/67678ea5-c497-4225-806e-abfe212870a3_buggy.java b/tmp/58a6bd5e-a9e7-4d62-87ae-30133bc31c4b_fixed.java
index 22640dd..52bf307 100644
--- a/tmp/67678ea5-c497-4225-806e-abfe212870a3_buggy.java
+++ b/tmp/58a6bd5e-a9e7-4d62-87ae-30133bc31c4b_fixed.java
@@ -1,3 +1,47 @@
+import com.google.javascript.rhino.Node;
+import com.google.javascript.jscomp.NodeUtil;
+
+/**
+ * Checks if the given node is inside a TRY block that has a CATCH handler.
+ * Traversal stops at the function boundary, as handlers outside the function
+ * are not relevant for local flow analysis.
+ *
+ * @param cfgNode The CFG node (representing an AST Node) to check.
+ * @return True if the node is potentially protected by an exception handler.
+ */
 private boolean hasExceptionHandler(Node cfgNode) {
+  // Search ancestors for a TRY block with a CATCH block that covers cfgNode.
+  Node ancestor = cfgNode.getParent();
+  while (ancestor != null) {
+    if (ancestor.isFunction()) {
+      // Exception handlers outside the current function do not affect
+      // the flow within the function in the way this analysis cares about.
+      return false;
+    }
+
+    if (ancestor.isTry()) {
+      Node tryBlock = ancestor.getFirstChild();
+      // Check if cfgNode is actually within the 'try' block (the first child).
+      // It shouldn't be in the CATCH or FINALLY blocks for this handler to "protect" it.
+      // NodeUtil.isAncestor(A, B) is true if A is an ancestor of B OR if A == B.
+      boolean cfgNodeIsInTryBlock = (tryBlock != null) && NodeUtil.isAncestor(tryBlock, cfgNode);
+
+      if (cfgNodeIsInTryBlock) {
+        // Now check if this TRY has a CATCH block.
+        Node catchBlock = NodeUtil.getCatchBlock(ancestor);
+        if (catchBlock != null) {
+          // Found an enclosing TRY block with a CATCH that protects cfgNode.
+          return true;
+        }
+        // If it's a try/finally without catch, it doesn't "handle" the exception
+        // in the sense of diverting control flow locally, so we continue search upwards.
+      }
+      // If cfgNode is not in the try block (e.g., it's in CATCH or FINALLY),
+      // this TRY structure doesn't protect cfgNode. Continue search upwards.
+    }
+    ancestor = ancestor.getParent();
+  }
+
+  // No enclosing TRY with a CATCH found up to the function boundary.
   return false;
 }
\ No newline at end of file
