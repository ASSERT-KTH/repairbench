diff --git a/tmp/7845fed7-e9ea-4720-b0d6-3b8f5a7f7981_buggy.java b/tmp/af23fe11-3e36-4390-9f1a-97d365ee2af3_fixed.java
index 8afddc6..a259710 100644
--- a/tmp/7845fed7-e9ea-4720-b0d6-3b8f5a7f7981_buggy.java
+++ b/tmp/af23fe11-3e36-4390-9f1a-97d365ee2af3_fixed.java
@@ -1,22 +1,24 @@
   @Override
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
 
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
-    if (flags.process_closure_primitives) {
-      options.closurePass = true;
-    }
+    // Set closurePass directly based on the flag's value.
+    // The previous code only set it to true if the flag was true,
+    // potentially leaving it true even if the flag was explicitly false,
+    // if the default or CompilationLevel set it to true initially.
+    options.closurePass = flags.process_closure_primitives;
 
     initOptionsFromFlags(options);
     return options;
   }
\ No newline at end of file
