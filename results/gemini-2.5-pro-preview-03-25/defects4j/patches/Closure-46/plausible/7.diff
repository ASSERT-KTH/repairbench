diff --git a/tmp/6fa65535-85c4-43d3-8f3b-aea454d06773_buggy.java b/tmp/d23c49ea-9964-4468-ba8c-7aaf06462d85_fixed.java
index 46817a7..823088a 100644
--- a/tmp/6fa65535-85c4-43d3-8f3b-aea454d06773_buggy.java
+++ b/tmp/d23c49ea-9964-4468-ba8c-7aaf06462d85_fixed.java
@@ -1,16 +1,7 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
+    // The JSType implementation of getLeastSupertype handles union creation
+    // and subtyping checks correctly. The previous RecordType-specific logic
+    // incorrectly computed an intersection-like type instead of a supertype/union.
     return super.getLeastSupertype(that);
   }
\ No newline at end of file
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }
