diff --git a/tmp/392a48af-ed81-40e6-8e1f-0d48f8283f7b_buggy.java b/tmp/d360e82f-253a-42de-8a88-76d3308d36c6_fixed.java
index e5ad041..9e50f2d 100644
--- a/tmp/392a48af-ed81-40e6-8e1f-0d48f8283f7b_buggy.java
+++ b/tmp/d360e82f-253a-42de-8a88-76d3308d36c6_fixed.java
@@ -1,19 +1,32 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
+        // Should not be called if identical, but just in case...
         if (_class == subclass) {
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
+
+        // ASSERT check removed from 2.3 (fasterxml/jackson-databind#186)
         /*
         if (!_class.isAssignableFrom(subclass)) {
              throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                      +_class.getName());
         }
         */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+
+        // 15-Jan-2016, tatu: As per [databind#1083], need to be careful NOT to retain
+        //    type parameters from the super class; probably need to re-resolve.
+        //    Also: super class must be specific, not generic.
+
+        // 19-May-2017, tatu: As per [databind#1613], super-class will be this
+        //     type, not its super-class (regardless of how they differ)
+        // 08-Nov-2018, tatu: And fixing super-class binding passing `this` finally fixed
+        //    the problem. Original code passed `_superClass` which was just wrong.
+        return new SimpleType(subclass,
+                // NOTE: per [databind#1083], MUST drop TypeBindings here
+                _bindings.emptyBindings(), /* TypeBindings */
+                // Should be this type, not inherited super-class
+                this, /* super-class */
+                _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
     }
\ No newline at end of file
