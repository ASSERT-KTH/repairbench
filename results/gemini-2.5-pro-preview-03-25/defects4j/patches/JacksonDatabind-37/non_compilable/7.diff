diff --git a/tmp/4ec92a34-fcaa-4c5e-8dd4-dcbd44189939_buggy.java b/tmp/30b6f0e9-d255-4f74-99b3-d71850e749bd_fixed.java
index e5ad041..db48283 100644
--- a/tmp/4ec92a34-fcaa-4c5e-8dd4-dcbd44189939_buggy.java
+++ b/tmp/30b6f0e9-d255-4f74-99b3-d71850e749bd_fixed.java
@@ -1,19 +1,37 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values, so no.
         /*
+        // 01-Dec-2016, tatu: Turns out we must check this; handling of interfaces
+        //    fails otherwise...
         if (!_class.isAssignableFrom(subclass)) {
              throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                      +_class.getName());
         }
         */
         // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+
+        // 19-Jun-2017, tatu: As per [databind#1611], need to also consider value/type handlers.
+        //    Basically, only retain `_asStatic` status, and handlers.
+
+        // TODO: CHECK: value-handler indeed tricky, need to leave for now
+
+        // 28-Jul-2017, tatu: This is tricky... Need to preserve type/value handlers.
+        //   But what about super-class, interfaces? Let's assume they are dynamic,
+        //   use `this` as super-class. Super-interfaces? Let's punt for now.
+
+        // 13-Mar-2017, tatu: For [databind#1511], we do need to check and assert
+        //    assignability early, not late. Fixed.
+        _assertSubclass(subclass, _class);
+
+        // Super-class is 'this' type; super-interfaces do not matter (at least not yet)
+        // and bindings we may be able togeneric type system?
+        return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
     }
\ No newline at end of file
