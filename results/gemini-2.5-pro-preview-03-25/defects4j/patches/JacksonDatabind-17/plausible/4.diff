diff --git a/tmp/ce8678f4-8a52-4626-a1e5-04c58cc4a269_buggy.java b/tmp/4a98d8b7-f6af-4a48-9a89-6f25075682dd_fixed.java
index 01967cc..6e913e8 100644
--- a/tmp/ce8678f4-8a52-4626-a1e5-04c58cc4a269_buggy.java
+++ b/tmp/4a98d8b7-f6af-4a48-9a89-6f25075682dd_fixed.java
@@ -1,35 +1,43 @@
         /**
          * Method called to check if the default type handler should be
          * used for given type.
          * Note: "natural types" (String, Boolean, Integer, Double) will never
          * use typing; that is both due to them being concrete and final,
          * and since actual serializers and deserializers will also ignore any
          * attempts to enforce typing.
          */
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // fall through
             case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
+                // Note: includes case NON_CONCRETE_AND_ARRAYS
                 // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                // First, check if type is Object.class (if so, yes)
+                return (t.getRawClass() == Object.class) ||
+                       // Otherwise, non-concrete types (abstract classes, interfaces), but
+                       // not TreeNodes
+                       (!t.isConcrete() &&
+                        // [databind#793] And specifically exclude TreeNode implementations
+                           !TreeNode.class.isAssignableFrom(t.getRawClass()));
 
             case NON_FINAL:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+                // [databind#88] Should not apply to JSON tree models:
+                // First, ensure not TreeNodes:
+                if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+                    return false;
+                }
+                // Then non-final types are fine
+                return !t.isFinal();
             default:
             //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
                 return (t.getRawClass() == Object.class);
             }
         }
\ No newline at end of file
