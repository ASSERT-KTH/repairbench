diff --git a/tmp/d4a63aeb-6793-41b7-8b7c-8b68e687f457_buggy.java b/tmp/c435d73f-6a33-490c-9cf2-13afee25053c_fixed.java
index 01967cc..1f761bd 100644
--- a/tmp/d4a63aeb-6793-41b7-8b7c-8b68e687f457_buggy.java
+++ b/tmp/c435d73f-6a33-490c-9cf2-13afee25053c_fixed.java
@@ -1,35 +1,45 @@
         /**
          * Method called to check if the default type handler should be
          * used for given type.
          * Note: "natural types" (String, Boolean, Integer, Double) will never
          * use typing; that is both due to them being concrete and final,
          * and since actual serializers and deserializers will also ignore any
          * attempts to enforce typing.
          */
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // fall through
             case OBJECT_AND_NON_CONCRETE:
+                // Lassen comment out this variant which might make bit more sense: requires concrete to be non-Object
 //                return t.isJavaLangObject() ||
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
+//                      (!t.isConcrete() && !TreeNode.class.isAssignableFrom(t.getRawClass()));
+
+                // But this is closer to historical behavior (identical to 2.5):
+                // include Object.class, // or interface, abstract class; but exclude TreeNodes
+                    return (t.getRawClass() == Object.class) ||
+                            (!t.isConcrete()
                                 // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                                && !TreeNode.class.isAssignableFrom(t.getRawClass()));
 
             case NON_FINAL:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+                // [databind#88] Should not apply to JSON tree models:
+                // But also, NON_FINAL includes everything that is not final,
+                // except for Object.class, Strings, Booleans etc:
+                if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+                    return false;
+                }
+                return !t.isFinal();
             default:
             //case JAVA_LANG_OBJECT:
 //                return t.isJavaLangObject();
                 return (t.getRawClass() == Object.class);
             }
         }
\ No newline at end of file
