diff --git a/tmp/fdb1e8db-ba50-4d3a-aafc-a2cfb3e9287c_buggy.java b/tmp/c2ced14a-801e-491a-a49f-fc03f48077e5_fixed.java
index 25c13b3..85599d1 100644
--- a/tmp/fdb1e8db-ba50-4d3a-aafc-a2cfb3e9287c_buggy.java
+++ b/tmp/c2ced14a-801e-491a-a49f-fc03f48077e5_fixed.java
@@ -1,15 +1,24 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      *
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        double ret;
+        // The mean of the F-distribution is d / (d - 2) for d > 2.
+        // It tends towards 1 as d -> infinity.
+        // Use the mean if defined and positive, otherwise use 1.0 as a default.
+        if (d > 2.0) {
              ret = d / (d - 2.0);
+        } else {
+             // Use a default value when the mean is undefined or non-positive.
+             // 1.0 is a reasonable default guess as it's in the domain [0, inf)
+             // and close to the mean for large d.
+             ret = 1.0;
+        }
         return ret;
     }
\ No newline at end of file
