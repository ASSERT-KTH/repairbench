diff --git a/tmp/b3074a3a-b2f2-41e9-8240-c5ee16dd5173_buggy.java b/tmp/c9ea97a5-5f0d-403e-96db-6fc0a7b06104_fixed.java
index 25c13b3..3c27923 100644
--- a/tmp/b3074a3a-b2f2-41e9-8240-c5ee16dd5173_buggy.java
+++ b/tmp/c9ea97a5-5f0d-403e-96db-6fc0a7b06104_fixed.java
@@ -1,15 +1,23 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      *
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        // The mean is defined only for d > 2. Handle cases where d <= 2 separately.
+        // See http://mathworld.wolfram.com/F-Distribution.html
+        if (d > 2.0) {
+             // use mean as initial guess
             ret = d / (d - 2.0);
+        } else {
+            // Use 1.0 as a default starting point when mean is undefined or infinite
+            // This is a safe value within the domain [0, +infinity).
+            ret = 1.0;
+        }
         return ret;
     }
\ No newline at end of file
