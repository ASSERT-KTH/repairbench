diff --git a/tmp/eb96c6bc-e4e4-4b16-b2b1-0cdce9b8c233_buggy.java b/tmp/9206af4a-c35d-4986-8438-ffbe3f05412b_fixed.java
index 25c13b3..9a66417 100644
--- a/tmp/eb96c6bc-e4e4-4b16-b2b1-0cdce9b8c233_buggy.java
+++ b/tmp/9206af4a-c35d-4986-8438-ffbe3f05412b_fixed.java
@@ -1,15 +1,22 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      *
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        // The mean of the F-distribution is d / (d - 2) for d > 2.
+        // It is undefined otherwise. Use 1.0 as a reasonable starting point
+        // when the mean is undefined, as 1.0 is always in the domain [0, âˆž).
+        // This also avoids issues with d=1 (mean=-1) and d=2 (mean=Infinity).
+        if (d > 2.0) {
             ret = d / (d - 2.0);
+        } else {
+            ret = 1.0;
+        }
         return ret;
     }
\ No newline at end of file
