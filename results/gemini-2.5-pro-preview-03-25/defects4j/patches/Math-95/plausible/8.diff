diff --git a/tmp/e5ffeeb2-f890-45a8-8bc6-8ec347557ded_buggy.java b/tmp/06ed1843-a9ad-4b34-90fc-2a12be9fd3a9_fixed.java
index 25c13b3..b10cadf 100644
--- a/tmp/e5ffeeb2-f890-45a8-8bc6-8ec347557ded_buggy.java
+++ b/tmp/06ed1843-a9ad-4b34-90fc-2a12be9fd3a9_fixed.java
@@ -1,15 +1,23 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        // The mean of the F-distribution is d / (d - 2) for d > 2.
+        // Use the mean as the initial guess if defined and positive.
+        if (d > 2.0) {
             ret = d / (d - 2.0);
+        } else {
+            // Use 1.0 as a default initial guess when the mean is undefined or not positive.
+            // This ensures the initial guess is within the valid domain [0, infinity).
+            ret = 1.0;
+        }
+        // TODO: consider using the median or other percentile estimate for d <= 2
         return ret;
     }
\ No newline at end of file
