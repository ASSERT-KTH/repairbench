diff --git a/tmp/6a82fd47-4893-40b8-be02-84fedf79798b_buggy.java b/tmp/7be3017b-0908-418a-8fa0-f7112ba2be32_fixed.java
index fd32990..71164bd 100644
--- a/tmp/6a82fd47-4893-40b8-be02-84fedf79798b_buggy.java
+++ b/tmp/7be3017b-0908-418a-8fa0-f7112ba2be32_fixed.java
@@ -1,20 +1,31 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index == null) {
+            return null; // Column name not found in the header mapping.
+        }
+        // Check if the record is consistent before accessing the value.
+        // An inconsistent record could mean the index from the mapping is out of bounds for the values array.
+        final int i = index.intValue();
+        if (i >= values.length) {
+             throw new IllegalArgumentException(String.format(
+                     "Index for header '%s' is %d but CSVRecord only has %d values!",
+                     name, index, Integer.valueOf(values.length)));
+        }
+        return values[i];
     }
\ No newline at end of file
