diff --git a/tmp/6e52901b-c858-4854-bfd1-f9bc80e92a90_buggy.java b/tmp/24b0d315-1d9b-4449-b1dc-89548a12fe80_fixed.java
index fd32990..4c806ca 100644
--- a/tmp/6e52901b-c858-4854-bfd1-f9bc80e92a90_buggy.java
+++ b/tmp/24b0d315-1d9b-4449-b1dc-89548a12fe80_fixed.java
@@ -1,20 +1,30 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index == null) {
+            return null; // Column name not found in header map
+        }
+        // Check if the retrieved index is within the bounds of the values array.
+        // This handles inconsistent records where the header implies more columns than the record has.
+        if (index.intValue() >= values.length) {
+            throw new IllegalArgumentException(String.format(
+                    "Index for header '%s' is %d but CSVRecord only has %d values!",
+                    name, index.intValue(), values.length));
+        }
+        return values[index.intValue()];
     }
\ No newline at end of file
