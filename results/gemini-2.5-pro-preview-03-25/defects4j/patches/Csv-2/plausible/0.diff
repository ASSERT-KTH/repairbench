diff --git a/tmp/d551be3d-7049-4e9e-ae61-c8074f5eeb5f_buggy.java b/tmp/682e32c2-ce9d-48a9-a7e6-96af90d825d8_fixed.java
index fd32990..eab905b 100644
--- a/tmp/d551be3d-7049-4e9e-ae61-c8074f5eeb5f_buggy.java
+++ b/tmp/682e32c2-ce9d-48a9-a7e6-96af90d825d8_fixed.java
@@ -1,20 +1,32 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
-     *             if the record is inconsistent
+     *             if the record is inconsistent (specifically, if the requested column index derived from the name
+     *             is out of bounds for the record's values)
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index == null) {
+            return null; // Column name not found in the header mapping
+        }
+        // Check if the retrieved index is within the bounds of the values array.
+        // If not, it indicates an inconsistent record for this column name.
+        final int i = index.intValue();
+        if (i >= values.length) {
+            throw new IllegalArgumentException(String.format(
+                    "Index for header '%s' is %d but CSVRecord only has %d values!",
+                    name, index, values.length));
+        }
+        return values[i];
     }
\ No newline at end of file
