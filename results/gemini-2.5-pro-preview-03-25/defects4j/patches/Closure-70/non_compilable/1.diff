diff --git a/tmp/4618339e-72b5-452f-a1b2-eb561393d9a9_buggy.java b/tmp/3bb77541-feaf-45ae-a977-54e09d4dba62_fixed.java
index 1530b34..189a8f0 100644
--- a/tmp/4618339e-72b5-452f-a1b2-eb561393d9a9_buggy.java
+++ b/tmp/3bb77541-feaf-45ae-a977-54e09d4dba62_fixed.java
@@ -1,23 +1,29 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
-      Node body = astParameters.getNext();
-      FunctionType functionType = (FunctionType) functionNode.getJSType();
+      // Node body = astParameters.getNext(); // body is unused
+
+      FunctionType functionType = JSType.toMaybeFunctionType(functionNode.getJSType());
+      Node jsDocParameters = null;
       if (functionType != null) {
-        Node jsDocParameters = functionType.getParametersNode();
-        if (jsDocParameters != null) {
-          Node jsDocParameter = jsDocParameters.getFirstChild();
+        jsDocParameters = functionType.getParametersNode();
+      }
+
+      // Don't associate a null JSDoc with the first parameter if there are no JSDoc parameters.
+      Node jsDocParameter = (jsDocParameters == null) ? null : jsDocParameters.getFirstChild();
+
+      // Always iterate through AST parameters
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
+          // Use JSDoc type if available, mark as declared (not inferred)
           defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+              jsDocParameter.getJSType(), false); // Pass false for inferred
           jsDocParameter = jsDocParameter.getNext();
         } else {
-              defineSlot(astParameter, functionNode, null, true);
-            }
-          }
+          // No JSDoc type, mark as inferred
+          defineSlot(astParameter, functionNode, null, true); // Pass true for inferred
         }
       }
     } // end declareArguments
\ No newline at end of file
