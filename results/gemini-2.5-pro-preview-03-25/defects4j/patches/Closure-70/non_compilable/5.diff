diff --git a/tmp/1167004e-dc7e-4a7b-b3b9-0087d6391477_buggy.java b/tmp/d3653449-8a4d-4fa1-8459-82e7b2b82315_fixed.java
index 1530b34..84f9a5c 100644
--- a/tmp/1167004e-dc7e-4a7b-b3b9-0087d6391477_buggy.java
+++ b/tmp/d3653449-8a4d-4fa1-8459-82e7b2b82315_fixed.java
@@ -1,23 +1,32 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
+              // Use the type from JSDoc and mark it as not inferred.
               defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                  jsDocParameter.getJSType(), false); // Pass false for inferred when type comes from JSDoc
               jsDocParameter = jsDocParameter.getNext();
             } else {
+              // Declare with null type, allowing inference.
               defineSlot(astParameter, functionNode, null, true);
             }
           }
+          // TODO(nicksantos): Handle var_args.
+        } else {
+           // Declare all parameters with null type, allowing inference.
+           for (Node astParameter : astParameters.children()) {
+             defineSlot(astParameter, functionNode, null, true);
+           }
         }
       }
+       // TODO(nicksantos): Handle arguments if functionType is null.
     } // end declareArguments
\ No newline at end of file
