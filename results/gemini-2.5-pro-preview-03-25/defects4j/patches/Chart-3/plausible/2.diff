diff --git a/tmp/b392be29-8f48-41e6-b23d-842ea7c38c33_buggy.java b/tmp/d7c5424f-d77a-46e1-8809-04000ccf975b_fixed.java
index 388771b..028086d 100644
--- a/tmp/b392be29-8f48-41e6-b23d-842ea7c38c33_buggy.java
+++ b/tmp/d7c5424f-d77a-46e1-8809-04000ccf975b_fixed.java
@@ -1,37 +1,49 @@
     /**
      * Creates a new timeseries by copying a subset of the data in this time
      * series.
      *
      * @param start  the index of the first time period to copy.
      * @param end  the index of the last time period to copy.
      *
      * @return A series containing a copy of this times series from start until
      *         end.
      *
      * @throws CloneNotSupportedException if there is a cloning problem.
      */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+        
+        // Reset the data list and cached min/max values
         copy.data = new java.util.ArrayList();
+        copy.minY = Double.NaN; // Fix: Reset minY for the copy
+        copy.maxY = Double.NaN; // Fix: Reset maxY for the copy
+
         if (this.data.size() > 0) {
-            for (int index = start; index <= end; index++) {
+            // Ensure the ending index is not out of bounds
+            int endidx = Math.min(end, this.data.size() - 1);
+            if (start <= endidx) { // Check if there's anything to copy
+                for (int index = start; index <= endidx; index++) {
                     TimeSeriesDataItem item
                             = (TimeSeriesDataItem) this.data.get(index);
                     TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
                     try {
+                        // The add method will recalculate minY and maxY
                         copy.add(clone);
                     }
                     catch (SeriesException e) {
+                        // This should not happen here as we are controlling the input
                         e.printStackTrace();
                     }
                 }
             }
+        }
+        // No need to explicitly update min/max here, add() handles it.
         return copy;
     }
\ No newline at end of file
