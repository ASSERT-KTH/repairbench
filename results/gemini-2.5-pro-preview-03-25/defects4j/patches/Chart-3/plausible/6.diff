diff --git a/tmp/c5bb8cef-bd68-47ae-af23-424c2ceba332_buggy.java b/tmp/b19d025a-74ae-479e-8418-0a5aa0766438_fixed.java
index 388771b..f0fb14a 100644
--- a/tmp/c5bb8cef-bd68-47ae-af23-424c2ceba332_buggy.java
+++ b/tmp/b19d025a-74ae-479e-8418-0a5aa0766438_fixed.java
@@ -1,37 +1,52 @@
     /**
      * Creates a new timeseries by copying a subset of the data in this time
      * series.
      *
      * @param start  the index of the first time period to copy.
      * @param end  the index of the last time period to copy.
      *
      * @return A series containing a copy of this times series from start until
      *         end.
      *
      * @throws CloneNotSupportedException if there is a cloning problem.
      */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+
         copy.data = new java.util.ArrayList();
+        // Reset min/max Y values so they are recalculated correctly for the subset
+        // The add() method called in the loop will update these values.
+        copy.minY = Double.NaN;
+        copy.maxY = Double.NaN;
+
         if (this.data.size() > 0) {
-            for (int index = start; index <= end; index++) {
+            // Ensure the start index is within the bounds of the data list
+            if (start < this.data.size()) {
+                // Ensure the end index doesn't exceed the list size
+                int endIndex = Math.min(end, this.data.size() - 1);
+                // Check if the calculated range is valid before looping
+                if (start <= endIndex) {
+                    for (int index = start; index <= endIndex; index++) {
                         TimeSeriesDataItem item
                                 = (TimeSeriesDataItem) this.data.get(index);
                         TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
                         try {
                             copy.add(clone);
                         }
                         catch (SeriesException e) {
+                            // This should not happen, but retain original handling
                             e.printStackTrace();
                         }
                     }
                 }
+            }
+        }
         return copy;
     }
\ No newline at end of file
