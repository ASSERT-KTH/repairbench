diff --git a/tmp/10c301f9-9fb1-4337-98f5-7b31f5768c49_buggy.java b/tmp/ebfc17a4-3d76-4be2-9f0a-f63cc3cb5410_fixed.java
index 6e45f80..fc1158f 100644
--- a/tmp/10c301f9-9fb1-4337-98f5-7b31f5768c49_buggy.java
+++ b/tmp/ebfc17a4-3d76-4be2-9f0a-f63cc3cb5410_fixed.java
@@ -1,21 +1,41 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
+      @Override
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
+        // Wrap the original adapter to perform a runtime check after deserialization
+        return new TypeAdapter<T2>() {
+          @Override
+          public void write(JsonWriter out, T2 value) throws IOException {
+            // Delegate writing to the original adapter
+            typeAdapter.write(out, (T1) value);
+          }
 
+          @Override
+          public T2 read(JsonReader in) throws IOException {
+            // Delegate reading to the original adapter
+            T1 result = typeAdapter.read(in);
+            // Check if the deserialized object is an instance of the requested type
+            if (result != null && !requestedType.isInstance(result)) {
+              throw new JsonSyntaxException("Expected a " + requestedType.getName()
+                  + " but was " + result.getClass().getName());
+            }
+            // Cast is safe because of the isInstance check
+            return (T2) result;
+          }
+        };
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
