diff --git a/tmp/c5fbaf80-033a-4787-82b7-dab84ff9d857_buggy.java b/tmp/b69f1718-53b3-4d43-ba93-303698c6414b_fixed.java
index 6e45f80..9969907 100644
--- a/tmp/c5fbaf80-033a-4787-82b7-dab84ff9d857_buggy.java
+++ b/tmp/b69f1718-53b3-4d43-ba93-303698c6414b_fixed.java
@@ -1,21 +1,39 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
+      @Override
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
-
+        // Return a new adapter that performs the runtime check
+        return new TypeAdapter<T2>() {
+          @Override public void write(JsonWriter out, T2 value) throws IOException {
+            // Delegate writing to the original adapter. T2 is guaranteed to be a T1.
+            typeAdapter.write(out, (T1) value);
+          }
+          @Override public T2 read(JsonReader in) throws IOException {
+            // Delegate reading to the original adapter
+            T1 value = typeAdapter.read(in);
+            // Runtime check to ensure the deserialized object is of the requested type T2
+            // (or a subtype). Value can be null.
+            if (value != null && !requestedType.isInstance(value)) {
+              throw new JsonSyntaxException(
+                  "Expected a " + requestedType.getName() + " but was " + value.getClass().getName());
+            }
+            // The cast is safe because of the isInstance check or if value is null.
+            return (T2) value;
+          }
+        };
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
