diff --git a/tmp/9002a40a-79bf-4cbf-af85-b70ed017199a_buggy.java b/tmp/e426a1a0-94bf-40e0-8d3b-c68394d68eb4_fixed.java
index 9033e1c..2862779 100644
--- a/tmp/9002a40a-79bf-4cbf-af85-b70ed017199a_buggy.java
+++ b/tmp/e426a1a0-94bf-40e0-8d3b-c68394d68eb4_fixed.java
@@ -1,11 +1,20 @@
     /**
      * Returns true iff they are equal as defined by
      * {@link #equals(double,double,int) equals(x, y, 1)}.
      *
      * @param x first value
      * @param y second value
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        // The original code provided was:
+        // return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        // This code considers Double.NaN equal to Double.NaN.
+        // However, the failing test testArrayEquals includes the assertion:
+        // assertFalse(MathUtils.equals(new double[] { Double.NaN }, new double[] { Double.NaN }));
+        // This implies that the equals method used for comparing array elements
+        // should return false when comparing two NaN values.
+        // Standard Java double comparison (x == y) returns false for NaN == NaN.
+        // Thus, changing the implementation to simply use '==' makes the test pass.
+        return x == y;
     }
\ No newline at end of file
