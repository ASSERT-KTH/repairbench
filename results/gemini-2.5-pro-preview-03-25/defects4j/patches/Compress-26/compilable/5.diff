diff --git a/tmp/60acdf17-640b-46d8-a4fd-b227516983f8_buggy.java b/tmp/2885e6ba-ecc4-4c00-8884-9cec7cee608e_fixed.java
index 4b163f6..8f65769 100644
--- a/tmp/60acdf17-640b-46d8-a4fd-b227516983f8_buggy.java
+++ b/tmp/2885e6ba-ecc4-4c00-8884-9cec7cee608e_fixed.java
@@ -1,28 +1,45 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
-     * @throws IOException
+     * @throws IOException if an I/O error occurs
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+        // We want to track the original number to skip, as numToSkip will be decremented.
+        final long originalNumToSkip = numToSkip;
+
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
-                break;
-            }
+            if (skipped > 0) {
                 numToSkip -= skipped;
+            } else if (skipped == 0) {
+                // InputStream#skip may return 0 if it cannot skip any
+                // bytes, e.g. when already at EOF, or if the
+                // implementation uses an internal buffer and all the
+                // requested bytes are in the buffer.
+                // Fall back to reading a single byte to make progress.
+                int b = input.read();
+                if (b == -1) { // EOF encountered.
+                    break;
+                }
+                // Successfully read one byte, decrement the count.
+                numToSkip--;
+            }
+            // A return value of < 0 is not possible according to the InputStream#skip contract.
+            // If an implementation violates this, the loop might behave unexpectedly.
+            // We stick to the contract here.
         }
             
-        return available - numToSkip;
+        // Return the total number of bytes skipped.
+        return originalNumToSkip - numToSkip;
     }
\ No newline at end of file
