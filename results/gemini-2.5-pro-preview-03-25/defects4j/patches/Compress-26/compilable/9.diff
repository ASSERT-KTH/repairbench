diff --git a/tmp/75abe80d-ff93-415f-a6cf-8bf32c5b881d_buggy.java b/tmp/9bb731c8-6348-48d2-b218-c8df911f851b_fixed.java
index 4b163f6..908d116 100644
--- a/tmp/75abe80d-ff93-415f-a6cf-8bf32c5b881d_buggy.java
+++ b/tmp/9bb731c8-6348-48d2-b218-c8df911f851b_fixed.java
@@ -1,28 +1,44 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
-     * @throws IOException
+     * @throws IOException if an I/O error occurs or the stream does not support seek
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+        // Keep track of the original number to skip.
+        // numToSkip will be decremented as bytes are skipped.
+        final long available = numToSkip; 
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
-                break;
-            }
+            if (skipped > 0) {
+                // If skip returns a positive number, decrement numToSkip
                 numToSkip -= skipped;
+            } else { // skipped returned 0
+                // InputStream#skip(long) guarantees that it will skip
+                // at least one byte unless the end of the stream has been reached
+                // or the argument is zero. If skip() returns 0, it means
+                // we should try reading a single byte to make progress or detect EOF.
+                int b = input.read();
+                if (b == -1) { // EOF reached
+                    break; // Cannot skip anymore, exit the loop
+                }
+                // Successfully read and thus skipped one byte
+                numToSkip--;
+                // Continue the loop to skip the remaining bytes
+            }
         }
             
+        // Return the total number of bytes skipped, which is the original amount
+        // minus the amount that couldn't be skipped.
         return available - numToSkip;
     }
\ No newline at end of file
