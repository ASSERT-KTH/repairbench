diff --git a/tmp/db365a3c-828b-4e64-b288-ca8809e7ded5_buggy.java b/tmp/6dab698f-b8c2-457f-acbe-8474d97fb304_fixed.java
index 4b163f6..d0e526c 100644
--- a/tmp/db365a3c-828b-4e64-b288-ca8809e7ded5_buggy.java
+++ b/tmp/6dab698f-b8c2-457f-acbe-8474d97fb304_fixed.java
@@ -1,28 +1,43 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+        // Store the original value to calculate the total skipped bytes at the end.
+        final long originalNumToSkip = numToSkip;
+
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
-                break;
-            }
+            // InputStream.skip documentation states it returns >= 0.
+            if (skipped > 0) {
+                // Successfully skipped some bytes
                 numToSkip -= skipped;
+            } else { // skipped == 0
+                // If skip() returned 0, it doesn't necessarily mean EOF.
+                // Try reading a single byte to make progress. See Commons IO IOUtils.
+                int b = input.read();
+                if (b == -1) {
+                    // Reached EOF - cannot skip further.
+                    break;
+                } else {
+                    // Successfully read/skipped one byte.
+                    numToSkip--;
+                }
+            }
         }
             
-        return available - numToSkip;
+        // Return the total number of bytes actually skipped.
+        return originalNumToSkip - numToSkip;
     }
\ No newline at end of file
