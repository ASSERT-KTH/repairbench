diff --git a/tmp/d7372670-4ad8-475a-8db0-20b92e896c89_buggy.java b/tmp/cd3b182b-3e9c-4a82-a583-f77d46bf66ec_fixed.java
index 14b78fb..16b4047 100644
--- a/tmp/d7372670-4ad8-475a-8db0-20b92e896c89_buggy.java
+++ b/tmp/cd3b182b-3e9c-4a82-a583-f77d46bf66ec_fixed.java
@@ -1,56 +1,64 @@
     /**
      * Finds the next text wrap position after <code>startPos</code> for the
      * text in <code>text</code> with the column width <code>width</code>.
      * The wrap point is the last position before startPos+width having a
      * whitespace character (space, \n, \r). If there is no whitespace character
      * before startPos+width, it will return startPos+width.
      *
      * @param text The text being searched for the wrap position
      * @param width width of the wrapped text
      * @param startPos position from which to start the lookup whitespace
      * character
-     * @return postion on which the text must be wrapped or -1 if the wrap
+     * @return position on which the text must be wrapped or -1 if the wrap
      * position is at the end of the text
      */
     protected int findWrapPos(String text, int width, int startPos)
     {
-        int pos;
+        int limit = startPos + width;
 
-        // the line ends before the max wrap pos or a new line char found
-        if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)
-                || ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))
-        {
-            return pos + 1;
+        // Handle explicit EOL chars (\n, \t) first.
+        // If found strictly before the calculated limit, wrap just after it.
+        int nlPos = text.indexOf('\n', startPos);
+        int tabPos = text.indexOf('\t', startPos);
+        int firstEOL = -1;
+
+        if (nlPos != -1 && tabPos != -1) {
+            firstEOL = Math.min(nlPos, tabPos);
+        } else if (nlPos != -1) {
+            firstEOL = nlPos;
+        } else {
+            firstEOL = tabPos; // Could be -1 if neither found
+        }
+
+        // If an explicit EOL is found before the calculated limit, return the position immediately after it
+        if (firstEOL != -1 && firstEOL < limit) {
+            return firstEOL + 1; // Return position AFTER EOL char
         }
-        else if (startPos + width >= text.length())
+
+        // If the potential wrap position is at or beyond the end of the text,
+        // return -1 (signifies the end).
+        if (limit >= text.length())
         {
             return -1;
         }
 
-
-        // look for the last whitespace character before startPos+width
-        pos = startPos + width;
-
-        char c;
-
-        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
-                && (c != '\n') && (c != '\r'))
+        // Look backwards for the last whitespace character (' ', \n, \r)
+        // in the range [startPos, limit - 1]. Start checking from limit-1.
+        int pos = limit; // Use limit as starting point for backward search index calculation
+        while (pos > startPos)
         {
-            --pos;
-        }
-
-        // if we found it - just return
-        if (pos > startPos)
+            // Decrement pos first to check indices limit-1, limit-2, ..., startPos
+            pos--;
+            char c = text.charAt(pos);
+            if (c == ' ' || c == '\n' || c == '\r')
             {
+                // Found whitespace at index 'pos'. As per docs and tests (e.g., testFindWrapPos with space),
+                // return the index *of* this whitespace character.
                 return pos;
             }
+        }
 
-        // if we didn't find one, simply chop at startPos+width
-        pos = startPos + width;
-        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
-               && (c != '\n') && (c != '\r'))
-        {
-            ++pos;
-        }
-        return pos == text.length() ? -1 : pos;
+        // No suitable whitespace found in the range [startPos, limit - 1].
+        // As per docs, wrap exactly at the width limit in this case.
+        return limit;
     }
\ No newline at end of file
