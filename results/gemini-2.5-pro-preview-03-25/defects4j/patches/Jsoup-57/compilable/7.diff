diff --git a/tmp/13331b85-587f-4260-bc16-79c23021987a_buggy.java b/tmp/d663d7a1-1cd7-4438-87fd-0de3eb607d39_fixed.java
index ae3784d..1b9d133 100644
--- a/tmp/13331b85-587f-4260-bc16-79c23021987a_buggy.java
+++ b/tmp/d663d7a1-1cd7-4438-87fd-0de3eb607d39_fixed.java
@@ -1,14 +1,22 @@
     /**
      Remove an attribute by key. <b>Case insensitive.</b>
      @param key attribute key to remove
      */
     public void removeIgnoreCase(String key) {
         Validate.notEmpty(key);
         if (attributes == null)
             return;
+        // Iterate using the iterator's remove method to avoid ConcurrentModificationException
         for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {
             String attrKey = it.next();
-            if (attrKey.equalsIgnoreCase(key))
-                attributes.remove(attrKey);
+            if (attrKey.equalsIgnoreCase(key)) {
+                it.remove(); // Use iterator's remove method
+                // Assuming attribute keys are unique case-insensitively,
+                // we can break after finding the first match.
+                // However, the original code iterated through all, so we retain that behavior
+                // unless optimization is explicitly desired and safe.
+                // If multiple keys could match case-insensitively (unlikely for standard maps),
+                // this loop would remove all of them.
+            }
         }
     }
\ No newline at end of file
