diff --git a/tmp/e496a92c-7641-4e93-a30a-370365ecede6_buggy.java b/tmp/1a20deb2-67c0-49d6-b610-d402c7ff33c0_fixed.java
index ae3784d..9e045e6 100644
--- a/tmp/e496a92c-7641-4e93-a30a-370365ecede6_buggy.java
+++ b/tmp/1a20deb2-67c0-49d6-b610-d402c7ff33c0_fixed.java
@@ -1,14 +1,19 @@
     /**
      Remove an attribute by key. <b>Case insensitive.</b>
      @param key attribute key to remove
      */
     public void removeIgnoreCase(String key) {
         Validate.notEmpty(key);
         if (attributes == null)
             return;
+        // Use iterator's remove method to avoid ConcurrentModificationException
         for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {
             String attrKey = it.next();
-            if (attrKey.equalsIgnoreCase(key))
-                attributes.remove(attrKey);
+            if (attrKey.equalsIgnoreCase(key)) {
+                it.remove();
+                // Removed the first match. If attribute keys are expected to be unique (case-insensitively),
+                // we could break here. However, the original code iterated through all, so we retain that behavior
+                // in case multiple keys differing only by case exist (though unlikely).
+            }
         }
     }
\ No newline at end of file
