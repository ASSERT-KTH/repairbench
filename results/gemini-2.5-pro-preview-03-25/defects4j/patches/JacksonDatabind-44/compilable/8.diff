diff --git a/tmp/e3bfe1ae-8816-4746-844a-74f14d846458_buggy.java b/tmp/a54d4e76-1a22-497b-a959-4adb7e0897a0_fixed.java
index 1a63a66..a2fdb16 100644
--- a/tmp/e3bfe1ae-8816-4746-844a-74f14d846458_buggy.java
+++ b/tmp/a54d4e76-1a22-497b-a959-4adb7e0897a0_fixed.java
@@ -1,21 +1,30 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
         // TODO: fix in 2.8
             /*
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
                     */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+
+        // 18-Nov-2016, tatu: As per [databind#1125], needs specialized handling for interfaces.
+        // If we narrow down from an interface, need to pass 'this' as new interface, NOT as super class
+        if (_class.isInterface()) {
+             return new SimpleType(subclass, _bindings,
+                     _superClass, // needs to be the actual super-class of subclass... null works?
+                     new JavaType[] { this }, // ... and this is the super-interface
+                     _valueHandler, _typeHandler, _asStatic);
+        }
+        // Otherwise, default simple logic is fine
+        return new SimpleType(subclass, _bindings,
+                this, // 'this' is the superclass
+                _superInterfaces, // interfaces are (presumably) same
                 _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
     }
