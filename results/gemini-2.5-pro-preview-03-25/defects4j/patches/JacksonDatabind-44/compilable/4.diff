diff --git a/tmp/19a9472a-7664-4864-999a-9ce66d8bb32c_buggy.java b/tmp/d0849d7b-c953-4d16-bbfe-3cbe60f92a7c_fixed.java
index 1a63a66..0613125 100644
--- a/tmp/19a9472a-7664-4864-999a-9ce66d8bb32c_buggy.java
+++ b/tmp/d0849d7b-c953-4d16-bbfe-3cbe60f92a7c_fixed.java
@@ -1,21 +1,29 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
+        // NOTE: Class instance comparison is fine WRT generics since we only narrow
+        // for same raw type or more specific one (never more generic)
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
+        // TODO: fix in 2.8 (by calling TypeFactory?)
             /*
+            if (!_class.isAssignableFrom(subclass)) {
                  throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                          +_class.getName());
+            }
             */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+
+        // 18-Nov-2016, tatu: As per [databind#1417], need to ensure we don't propagate
+        //    static types, and also that we properly handle super-class/super-interfaces.
+        //    Let's try specifically NOT constructing super-type hierarchy by passing null
+        //    for super-interfaces; resolution should work.
+        //    Also: handlers are inherited. And, importantly, bindings need to be
+        //    copied. Static-ness is NOT inherited.
+        return new SimpleType(subclass, _bindings, this, null, // resolve super-interfaces lazily
+                _valueHandler, _typeHandler, false); // also: static-ness is NOT inherited
     }
\ No newline at end of file
