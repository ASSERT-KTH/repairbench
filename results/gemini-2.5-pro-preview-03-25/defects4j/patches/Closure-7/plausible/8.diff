diff --git a/tmp/e74772eb-bf8f-4c06-b510-aac1bf56ca17_buggy.java b/tmp/b2e1f545-87ab-4a01-a428-ea9ba01b3ffd_fixed.java
index a38ec6d..0a24dc5 100644
--- a/tmp/e74772eb-bf8f-4c06-b510-aac1bf56ca17_buggy.java
+++ b/tmp/b2e1f545-87ab-4a01-a428-ea9ba01b3ffd_fixed.java
@@ -1,10 +1,20 @@
     @Override
     public JSType caseObjectType(ObjectType type) {
       if (value.equals("function")) {
         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
+        if (resultEqualsValue) {
+          // typeof x == 'function' is true. Check if type is function-like.
+          // If it is, restrict to Function. If not, it's impossible.
+          return ctorType.isSubtype(type) ? ctorType : null;
+        } else {
+          // typeof x == 'function' is false. Check if type is NOT function-like.
+          // If 'type' could be a function, it's ruled out by this condition.
+          // Otherwise (e.g., a plain object), it's still possible.
+          return type.isSubtype(ctorType) ? null : type;
         }
+      }
+      // Handle typeof x == 'object' etc.
+      // If typeof x is 'object', any object type is possible.
+      // If typeof x is not 'object', then an object type is impossible.
       return matchesExpectation("object") ? type : null;
     }
\ No newline at end of file
