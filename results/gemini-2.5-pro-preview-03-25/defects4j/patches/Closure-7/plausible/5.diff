diff --git a/tmp/e647eed4-140b-4b4c-8118-8f59c82692c9_buggy.java b/tmp/7ba7f7c5-e18a-4e34-9136-6cbbff8da12a_fixed.java
index a38ec6d..11878e2 100644
--- a/tmp/e647eed4-140b-4b4c-8118-8f59c82692c9_buggy.java
+++ b/tmp/7ba7f7c5-e18a-4e34-9136-6cbbff8da12a_fixed.java
@@ -1,10 +1,22 @@
     @Override
     public JSType caseObjectType(ObjectType type) {
       if (value.equals("function")) {
         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
+        if (resultEqualsValue) {
+          // Handle typeof x === 'function' or goog.isFunction(x)
+          // If function is compatible with the original type, return function.
+          return ctorType.isSubtype(type) ? ctorType : null;
+        } else {
+          // Handle typeof x !== 'function' or !goog.isFunction(x)
+          // If the original type is precisely function, then the result is bottom.
+          // Otherwise (e.g. Object|Function), return the original type.
+          // The restriction of removing the function type might happen
+          // in a later phase or through combination with other results.
+          return type.isSubtype(ctorType) ? null : type;
         }
+      }
+
+      // Handle typeof x === 'object'. Delegates to the specific type if known.
+      // Note: null is an object according to typeof but not Objects.
       return matchesExpectation("object") ? type : null;
     }
\ No newline at end of file
