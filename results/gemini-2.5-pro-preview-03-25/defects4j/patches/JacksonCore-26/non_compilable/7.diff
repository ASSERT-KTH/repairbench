diff --git a/tmp/83d92ee9-1e24-4c52-a9e7-1d2cc8c2088e_buggy.java b/tmp/03853295-4545-4ab5-b1fc-aa6e526b1b97_fixed.java
index 0722547..2d8e004 100644
--- a/tmp/83d92ee9-1e24-4c52-a9e7-1d2cc8c2088e_buggy.java
+++ b/tmp/03853295-4545-4ab5-b1fc-aa6e526b1b97_fixed.java
@@ -1,26 +1,32 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
+        // Need to keep track of bytes previously processed correctly, so:
         _currInputProcessed += _origBufferLen;
 
         // Also need to adjust row start, to work as if it extended into the past wrt new buffer
+        // (Note: calculation seems non-obvious, but is related to line/col calculations)
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
+
+        // 25-Jun-2019, tatu: Need to keep track of starting point explicitly,
+        //    for correct location reporting
+        _inputStart = start;
     }
\ No newline at end of file
