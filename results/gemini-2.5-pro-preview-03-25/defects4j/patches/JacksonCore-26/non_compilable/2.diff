diff --git a/tmp/7ce7c7e7-e8af-4be9-81ba-b9ebeda78be0_buggy.java b/tmp/b05118d8-2c2b-458b-9e62-dba70a20d3c0_fixed.java
index 0722547..ef66f42 100644
--- a/tmp/7ce7c7e7-e8af-4be9-81ba-b9ebeda78be0_buggy.java
+++ b/tmp/b05118d8-2c2b-458b-9e62-dba70a20d3c0_fixed.java
@@ -1,26 +1,35 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
+        // Need to ensure that the row start points within the new buffer area;
+        // can be tricky if buffer boundary splits a token. Need to add buffer length BOTH
+        // to processed count AND row start offset.
         _currInputProcessed += _origBufferLen;
-
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        // Also need to adjust row start, similarly; note that this relies on
+        // _currInputProcessed having been updated!!
+        // NOTE: `_currInputRowStart` is relative to `_inputBuffer` BUT `_currInputProcessed` is
+        // absolute offset. Handlers need to take this into account -- generally
+        // by using (_currInputProcessed + _currInputRowStart) as absolute row start offset.
+        _currInputRowStart -= _origBufferLen;
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
+        // Also, store the start offset for this buffer segment: needed for location calculation
+        // (note: assumes buffer length is less than 2 gigs which is necessary for byte[])
+        _bufferOffset = start;
         _origBufferLen = end - start;
     }
