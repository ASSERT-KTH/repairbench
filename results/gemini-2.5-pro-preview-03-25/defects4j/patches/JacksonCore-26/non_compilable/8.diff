diff --git a/tmp/c57cabbf-3233-4c56-97b3-f464e4d4efd8_buggy.java b/tmp/caebd4c4-574b-45ec-97db-6724a163ba6a_fixed.java
index 0722547..db3457c 100644
--- a/tmp/c57cabbf-3233-4c56-97b3-f464e4d4efd8_buggy.java
+++ b/tmp/caebd4c4-574b-45ec-97db-6724a163ba6a_fixed.java
@@ -1,26 +1,35 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
+        // [core#148]: Better check for empty feed
         if (end < start) {
+            // As per [core#508], seems fair to report negative value
+            if (end < 0) {
+                 _reportError("Input end (%d) may not be negative", end);
+            }
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
+        // Need to know previous length, which is saved in `_origBufferLen`
         _currInputProcessed += _origBufferLen;
 
         // Also need to adjust row start, to work as if it extended into the past wrt new buffer
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
 
         // And then update buffer settings
+        // NOTE: requires current buffer segment to be pointed to by _inputBuffer / _inputPtr
+        // [core#531]: Need to store start offset as well.
+        _inputBufferStart = start;
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
     }
\ No newline at end of file
