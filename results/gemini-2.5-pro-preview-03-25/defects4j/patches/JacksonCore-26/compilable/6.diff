diff --git a/tmp/7967eec3-ca44-4223-9d32-6b06c5eb85f8_buggy.java b/tmp/4333aef4-5b65-4cf3-9b0d-85c8bd67c705_fixed.java
index 0722547..eb72c7e 100644
--- a/tmp/7967eec3-ca44-4223-9d32-6b06c5eb85f8_buggy.java
+++ b/tmp/4333aef4-5b65-4cf3-9b0d-85c8bd67c705_fixed.java
@@ -1,26 +1,31 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
+        // Verify arguments
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
-        // and shouldn't have been marked as end-of-input
+        // And shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
+        // Time to update pointers first; calculate length of the previous buffer segment
         _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        // Also need to adjust row start, based on current position, assuming
+        // we are not starting half-way through a row (possible but unlikely)
+        // Let's also pre-decrement row-start pointer by `start`:
+        // (NOTE: assumes buffer has no linefeeds -- otherwise wrong)
+        // [core#531]: This adjustment aligns the column tracking with the new buffer's start offset.
+        _currInputRowStart -= start;
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
     }
\ No newline at end of file
