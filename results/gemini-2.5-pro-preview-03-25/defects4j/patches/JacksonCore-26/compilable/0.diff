diff --git a/tmp/09e6aea9-9aa7-4bfd-af44-1e7a1674d03e_buggy.java b/tmp/b282200c-b76b-46c0-9c41-2b643f5094cd_fixed.java
index 0722547..afc8099 100644
--- a/tmp/09e6aea9-9aa7-4bfd-af44-1e7a1674d03e_buggy.java
+++ b/tmp/b282200c-b76b-46c0-9c41-2b643f5094cd_fixed.java
@@ -1,26 +1,31 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
+        // Time to update pointers first; previous buffer length counts toward processed bytes
         _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        // Need to adjust row start offset as well; calculation was incorrect prior
+        // to Jackson 2.9.8 (and core#531 fix). Offset is relative to beginning of
+        // input buffer, not absolute offset in stream.
+        // Important: must be done AFTER _currInputProcessed has been updated,
+        // and BEFORE buffer-specific pointers are updated.
+        _currInputRowStart = start - (int) _currInputProcessed;
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
+        // Also important: calculate length of the buffer segment now fed
         _origBufferLen = end - start;
     }
\ No newline at end of file
