diff --git a/tmp/72f42ea6-fbcf-4171-b244-d7380d562652_buggy.java b/tmp/84974f10-5dbe-49c4-b6d7-c265ac5889ef_fixed.java
index 0722547..3218b2d 100644
--- a/tmp/72f42ea6-fbcf-4171-b244-d7380d562652_buggy.java
+++ b/tmp/84974f10-5dbe-49c4-b6d7-c265ac5889ef_fixed.java
@@ -1,26 +1,30 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
+        // Time to update pointers first; previous buffer is now fully processed
         _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        // Adjust row start to be relative to the beginning of the new buffer segment.
+        // The start of the current line in the new buffer's coordinate system
+        // is calculated by subtracting the length of the previous buffer segment
+        // from the previous row start offset.
+        // Fix for [core#531] / location reporting issues with feedInput
+        _currInputRowStart -= _origBufferLen;
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
     }
