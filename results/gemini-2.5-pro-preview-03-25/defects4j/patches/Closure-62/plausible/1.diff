diff --git a/tmp/a76910fe-f965-453e-b7a4-c03c8815dc5f_buggy.java b/tmp/2eecbae6-ceff-4a50-a0b7-9884f5188a87_fixed.java
index 904dba7..30a2d7a 100644
--- a/tmp/a76910fe-f965-453e-b7a4-c03c8815dc5f_buggy.java
+++ b/tmp/2eecbae6-ceff-4a50-a0b7-9884f5188a87_fixed.java
@@ -1,46 +1,48 @@
   private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
 
       // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
+      // charno == sourceExcerpt.length() means something is missing
+      // at the end of the line (so we highlight the end).
+      // charno == -1 means the error is for the entire line.
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length() // Fix: Changed < to <=
+          && charno != -1) { // Ensure we don't add caret if charno is -1
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {
             b.append(c);
           } else {
             b.append(' ');
           }
         }
         b.append("^\n");
       }
     }
     return b.toString();
   }
\ No newline at end of file
