diff --git a/tmp/8c4b0a49-b11f-4e8e-9c48-e63b2bcc5fd7_buggy.java b/tmp/b157e436-7ba8-4b5a-bc50-25374d8a178e_fixed.java
index 904dba7..bdd4073 100644
--- a/tmp/8c4b0a49-b11f-4e8e-9c48-e63b2bcc5fd7_buggy.java
+++ b/tmp/b157e436-7ba8-4b5a-bc50-25374d8a178e_fixed.java
@@ -1,46 +1,51 @@
   private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
 
       // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
+      // charno == sourceExcerpt.length() means something is missing
+      // at the end of the line (or the error is pointing after the last char)
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) { // FIXED: Changed < to <=
         for (int i = 0; i < charno; i++) {
+          // Prevent index out of bounds if the loop runs an extra iteration
+          // due to the fix (when charno == sourceExcerpt.length()).
+          // However, the loop condition i < charno already ensures i only goes
+          // up to charno-1, which is sourceExcerpt.length()-1 in the edge case.
+          // So, accessing sourceExcerpt.charAt(i) is safe.
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {
             b.append(c);
           } else {
             b.append(' ');
           }
         }
         b.append("^\n");
       }
     }
     return b.toString();
   }
\ No newline at end of file
