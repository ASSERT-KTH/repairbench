diff --git a/tmp/1cf2fec3-39e3-47e9-9a1e-913f84a7444d_buggy.java b/tmp/31762caf-fb93-4f83-a1ec-6e58ee21f007_fixed.java
index 227a4ef..e9a4588 100644
--- a/tmp/1cf2fec3-39e3-47e9-9a1e-913f84a7444d_buggy.java
+++ b/tmp/31762caf-fb93-4f83-a1ec-6e58ee21f007_fixed.java
@@ -1,48 +1,67 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space
         // characters
         final String padding = createPadding(nextLineTabStop);
+        final int paddingWidth = padding.length();
 
         while (true)
         {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+            // Get the rest of the text, trimmed
+            text = text.substring(pos).trim();
+
+            // Check if there is any text left
+            if (text.length() == 0) {
+                return sb;
+            }
+
+            // Add the padding to the beginning of the text
+            text = padding + text;
+
+            // find the wrap position
             pos = findWrapPos(text, width, 0);
 
+            // Check if the remaining text fits on one line
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
-            } else
-            if (pos == lastPos)
+            }
+
+            // Fix for CLI-162: an infinite loop happens when
+            // the available width is less than the padding width,
+            // so findWrapPos calculation returns position > 0 but <= padding width.
+            // In this case, we should just append the rest of the text and stop.
+            if (pos <= paddingWidth)
             {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+                sb.append(text);
+                return sb;
             }
 
+
+            // Append the substring taking care to trim tailing whitespace
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
