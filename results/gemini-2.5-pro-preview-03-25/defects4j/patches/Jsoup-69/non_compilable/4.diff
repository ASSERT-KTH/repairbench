diff --git a/tmp/45fca916-8c66-496c-b851-ea320b4cdf2b_buggy.java b/tmp/8c85a3f9-6c20-4a36-848a-a4c2ddb990db_fixed.java
index e69de29..7618300 100644
--- a/tmp/45fca916-8c66-496c-b851-ea320b4cdf2b_buggy.java
+++ b/tmp/8c85a3f9-6c20-4a36-848a-a4c2ddb990db_fixed.java
@@ -0,0 +1,58 @@
+    /**
+     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
+     * list will not be reflected in the DOM.
+     * @return a list of key val pairs, corresponding to controls that would be submitted when this form is submitted
+     */
+    public List<Connection.KeyVal> formData() {
+        ArrayList<Connection.KeyVal> data = new ArrayList<>();
+        final String InputType = "text"; // Used for elements without a defined type attribute.
+
+        // Iterate through all form elements that contain values
+        for (Element el : elements) {
+            // Skip elements that have been removed from the DOM or are no longer descendants of this form.
+            // This ensures that modifications to the form structure (e.g., element removal)
+            // are reflected when collecting form data.
+            if (el.formOwner() != this) {
+                 continue;
+            }
+
+            if (!el.tag().isFormSubmittable()) continue; // skip non-submittable tags (e.g. <form>)
+            if (el.hasAttr("disabled")) continue; // skip disabled elements
+            String name = el.attr("name");
+            if (name.length() == 0) continue;
+            String type = el.hasAttr("type") ? el.attr("type") : InputType; // Treat missing type as "text"
+
+
+            if ("select".equals(el.normalName())) {
+                Elements options = el.select("option[selected]");
+                boolean set = false;
+                for (Element option: options) {
+                    data.add(org.jsoup.helper.HttpConnection.KeyVal.create(name, option.val()));
+                    set = true;
+                }
+                if (!set) {
+                    Element option = el.selectFirst("option");
+                    if (option != null)
+                        data.add(org.jsoup.helper.HttpConnection.KeyVal.create(name, option.val()));
+                }
+            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+                // radiobuttons and checkboxes are submitted only if checked.
+                if (el.hasAttr("checked")) {
+                    // If the value attribute is omitted, the default value is "on". See https://www.w3.org/TR/html5/forms.html#checkbox-state-(type=checkbox)
+                    final String val = el.val().length() > 0 ? el.val() : "on";
+                    data.add(org.jsoup.helper.HttpConnection.KeyVal.create(name, val));
+                }
+            } else if ("file".equalsIgnoreCase(type)) {
+                // Jsoup only supports returning the filename, not the contents
+                // Also only supports single file input types
+                // User needs to set the value on the KeyVal manually with an InputStream if sending files.
+                org.jsoup.Connection.KeyVal keyVal = org.jsoup.helper.HttpConnection.KeyVal.create(name, el.val()); // value is the filename
+                data.add(keyVal);
+            }
+            else { // text, password, hidden, submit, etc.
+                // InputType defaults to "text" if not specified
+                data.add(org.jsoup.helper.HttpConnection.KeyVal.create(name, el.val()));
+            }
+        }
+        return data;
+    }
\ No newline at end of file
