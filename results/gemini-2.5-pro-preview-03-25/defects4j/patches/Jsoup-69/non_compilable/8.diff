diff --git a/tmp/f8b73cc4-f774-4368-a97c-aac6935b54c8_buggy.java b/tmp/b87555d6-77b2-4c23-8f01-1667dd4e7c90_fixed.java
index e69de29..5349017 100644
--- a/tmp/f8b73cc4-f774-4368-a97c-aac6935b54c8_buggy.java
+++ b/tmp/b87555d6-77b2-4c23-8f01-1667dd4e7c90_fixed.java
@@ -0,0 +1,46 @@
+    /**
+     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
+     * list will not be reflected in the DOM.
+     * @return a list of key vals
+     */
+    public List<Connection.KeyVal> formData() {
+        ArrayList<Connection.KeyVal> data = new ArrayList<>();
+
+        // Iterate the form control elements based on the current DOM structure, not the potentially stale internal list.
+        Elements selectedControls = this.select("input, textarea, select, button");
+        for (Element el: selectedControls) {
+            // Ensure the element is owned by this form, and not a nested form.
+            if (el.form() != this) {
+                continue;
+            }
+
+            if (!el.tag().isFormSubmittable()) continue; // e.g. <button type=button> vs type=submit
+            if (el.hasAttr("disabled")) continue; // skip disabled fields
+            String name = el.attr("name");
+            if (name.length() == 0) continue; // control name required
+            String type = el.attr("type"); // Treat unspecified type as text
+
+            if ("select".equals(el.tagName())) {
+                Elements options = el.select("option[selected]");
+                boolean set = false;
+                for (Element option: options) {
+                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+                    set = true;
+                }
+                if (!set) { // Select default "on" if no options are selected, per html spec
+                    Element option = el.select("option").first(); // first option is default if none marked selected
+                    if (option != null)
+                        data.add(HttpConnection.KeyVal.create(name, option.val()));
+                }
+            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+                // only add if checked:
+                if (el.hasAttr("checked")) {
+                    final String val = el.val().length() > 0 ? el.val() : "on"; // "on" is default value if value attribute not specified
+                    data.add(HttpConnection.KeyVal.create(name, val));
+                }
+            } else { // input type=text|password|hidden|submit etc | textarea
+                data.add(HttpConnection.KeyVal.create(name, el.val()));
+            }
+        }
+        return data;
+    }
\ No newline at end of file
