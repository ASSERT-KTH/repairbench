diff --git a/tmp/1b5830b3-6495-436b-9b6a-91ec5b69240d_buggy.java b/tmp/c1ce8cd3-a9a4-4ce8-98f0-f986807439f6_fixed.java
index 00914da..34341ba 100644
--- a/tmp/1b5830b3-6495-436b-9b6a-91ec5b69240d_buggy.java
+++ b/tmp/c1ce8cd3-a9a4-4ce8-98f0-f986807439f6_fixed.java
@@ -1,17 +1,29 @@
     // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
-        for (Node node: element.childNodes) {
+        // Using element.childNodes() creates a snapshot List, safe for iteration while modifying element
+        for (Node node: element.childNodes()) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
+                // Collect non-blank text nodes to move.
                 if (!tn.isBlank())
                     toMove.add(tn);
             }
+            // Note: This only handles TextNodes. Misplaced Elements (other than head/body)
+            // found directly under <html> might also need moving according to HTML5 spec,
+            // but this function's scope seems limited based on original code and test case.
         }
 
-        for (Node node: toMove) {
-            element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        // Move the collected text nodes to the *start* of the body.
+        // Iterate backwards through the collected nodes list. When prepending nodes one by one
+        // in reverse order of their original appearance, they end up in the correct
+        // original relative order at the beginning of the target element (body).
+        for (int i = toMove.size() - 1; i >= 0; i--) {
+            Node node = toMove.get(i);
+            element.removeChild(node); // Remove from the original parent (likely <html>)
+            // Prepend the node to the start of the body. This fixes the issue where
+            // text content before the body tag was moved to the end of the body.
+            // The original code also added a space, which is removed here as it caused issues.
+            body().prependChild(node);
         }
     }
\ No newline at end of file
