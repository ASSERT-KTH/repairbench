diff --git a/tmp/f4d82f82-0da0-4945-a5f7-39e9897a7840_buggy.java b/tmp/868629c5-f337-4711-87b0-8b01b9f609db_fixed.java
index 00914da..fa3f64c 100644
--- a/tmp/f4d82f82-0da0-4945-a5f7-39e9897a7840_buggy.java
+++ b/tmp/868629c5-f337-4711-87b0-8b01b9f609db_fixed.java
@@ -1,17 +1,24 @@
     // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
+        // Find all non-blank TextNodes directly under the input 'element'.
         for (Node node: element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
                 if (!tn.isBlank())
                     toMove.add(tn);
             }
         }
 
-        for (Node node: toMove) {
+        // Iterate backwards through the collected TextNodes to maintain their original order when prepending.
+        for (int i = toMove.size() - 1; i >= 0; i--) {
+            Node node = toMove.get(i);
+            // Remove the node from its original parent (likely the html element).
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            // Prepend the node to the beginning of the body element.
+            body().prependChild(node);
+            // Prepend a space before the node to ensure separation from any preceding content
+            // or previously moved nodes.
+            body().prependChild(new TextNode(" ", ""));
         }
     }
\ No newline at end of file
