diff --git a/tmp/208ab553-fa1b-41a8-aa38-b4377cd6f4fe_buggy.java b/tmp/6f716fbb-f917-4711-8e23-a38d2c34751b_fixed.java
index 00914da..19c2445 100644
--- a/tmp/208ab553-fa1b-41a8-aa38-b4377cd6f4fe_buggy.java
+++ b/tmp/6f716fbb-f917-4711-8e23-a38d2c34751b_fixed.java
@@ -1,17 +1,22 @@
     // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node: element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
+                // Keep the original node reference, not a clone.
                 if (!tn.isBlank())
-                    toMove.add(tn);
+                    toMove.add(node); 
             }
         }
 
-        for (Node node: toMove) {
-            element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        // Iterate backwards through the list to maintain the original order when prepending.
+        for (int i = toMove.size() - 1; i >= 0; i--) {
+            Node node = toMove.get(i);
+            element.removeChild(node); // Remove from the original parent (e.g., html)
+            // Prepend the node to the body element.
+            body().prependChild(node);
+            // Prepend a space text node before the moved node.
+            body().prependChild(new TextNode(" ", "")); 
         }
     }
\ No newline at end of file
