diff --git a/tmp/990f1704-4982-4a9b-8f1c-4bc826b94c59_buggy.java b/tmp/de3e4416-6b1a-4fa4-98b5-e28bb3a74830_fixed.java
index 192e83d..9d88419 100644
--- a/tmp/990f1704-4982-4a9b-8f1c-4bc826b94c59_buggy.java
+++ b/tmp/de3e4416-6b1a-4fa4-98b5-e28bb3a74830_fixed.java
@@ -1,21 +1,37 @@
     /**
      * Return whether or not this entry represents a directory.
      *
      * @return True if this entry is a directory.
      */
     @Override
     public boolean isDirectory() {
         if (file != null) {
             return file.isDirectory();
         }
 
+        // Check for explicit directory type flag
         if (linkFlag == LF_DIR) {
             return true;
         }
 
+        // Check for flags that indicate non-directory types.
+        // According to POSIX standards, the type flag takes precedence over naming conventions.
+        // Regular files, links, symlinks, and PAX headers are never directories, even if their names end with /.
+        if (linkFlag == LF_NORMAL || linkFlag == LF_OLDNORM ||
+            linkFlag == LF_LINK || linkFlag == LF_SYMLINK ||
+            isPaxHeader() || isGlobalPaxHeader()) {
+            return false;
+        }
+
+        // Fallback check: If the type is not definitively known (e.g., custom types)
+        // or doesn't preclude being a directory based on the type flag alone,
+        // check the POSIX/GNU convention where directory names end with a slash.
+        // This preserves backward compatibility for some TAR formats.
+        // Note: We already know linkFlag != LF_DIR here.
         if (getName().endsWith("/")) {
             return true;
         }
 
+        // Default: not a directory
         return false;
     }
\ No newline at end of file
