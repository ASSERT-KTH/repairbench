diff --git a/tmp/6eec9317-879b-4a16-b66b-44937169c76a_buggy.java b/tmp/b27e0c6f-3f4c-4c9e-a77e-74d22e9d6ebc_fixed.java
index a7e6997..43fd327 100644
--- a/tmp/6eec9317-879b-4a16-b66b-44937169c76a_buggy.java
+++ b/tmp/b27e0c6f-3f4c-4c9e-a77e-74d22e9d6ebc_fixed.java
@@ -1,12 +1,37 @@
     /**
      * Tells if the token looks like a short option.
+     * <p>
+     * A token is considered a short option if it begins with "-", has a length of at least 2,
+     * and either the substring after the "-" is a registered short option name (e.g., "-opt"),
+     * or the first character of the substring after the "-" is a registered short option name
+     * (e.g., "-o", "-ovalue", "-o=value", "-of").
+     * </p>
      *
-     * @param token
+     * @param token The token to check.
+     * @return {@code true} if the token appears to be a short option.
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        // A short option must start with "-", and have length >= 2
+        if (token == null || !token.startsWith("-") || token.length() < 2)
+        {
+            return false;
+        }
+
+        // Retrieve the part of the token after the initial "-"
+        String optionName = token.substring(1);
+
+        // Check if the entire string after the "-" is a defined short option (e.g., "-t1")
+        // This handles cases like the one described in BugCLI265Test.
+        if (options.hasShortOption(optionName))
+        {
+            return true;
+        }
 
-        // remove leading "-" and "=value"
+        // If not, check if the first character after the "-" is a defined short option.
+        // This handles traditional single-character short options like "-t",
+        // potentially followed by a value or grouped options like "-tValue", "-t=Value", "-tvf".
+        // We need substring(0, 1) which is safe due to token.length() >= 2.
+        // Check prevents IndexOutOfBoundsException for "-". Although already checked by length < 2.
+        return !optionName.isEmpty() && options.hasShortOption(optionName.substring(0, 1));
     }
\ No newline at end of file
