diff --git a/tmp/e51d34b9-1fef-4ea2-8713-0b08ebe8583d_buggy.java b/tmp/5090177b-4204-4142-9e00-6ca26f3a1a6d_fixed.java
index a7e6997..c75da29 100644
--- a/tmp/e51d34b9-1fef-4ea2-8713-0b08ebe8583d_buggy.java
+++ b/tmp/5090177b-4204-4142-9e00-6ca26f3a1a6d_fixed.java
@@ -1,12 +1,36 @@
     /**
      * Tells if the token looks like a short option.
+     * This method is intended to identify tokens that MAY be short options or
+     * short option groups (-S, -SV, -S=V, -SV1=V2, -S1S2), even if the
+     * whole token is not a registered option name.
+     * It also handles cases where the token itself is registered as an option
+     * and starts with a single hyphen.
      * 
-     * @param token
+     * @param token The token to check.
+     * @return true if the token looks like a short option.
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        // It must start with a single hyphen
+        if (token == null || !token.startsWith("-") || token.startsWith("--")) {
+            return false;
+        }
+
+        // It must be at least two characters long ("-X")
+        if (token.length() < 2) {
+            return false; 
+        }
+
+        // Check if the character following the hyphen is a registered short option character.
+        // This covers cases like -S, -SV, -S=V, -SV1=V2, -S1S2 where 'S' is registered.
+        boolean startsWithRegisteredShortOpt = options.hasShortOption(token.substring(1, 2));
+
+        // Check if the token, without the hyphen, is itself a registered option name.
+        // This covers cases like "-t1" or "-last" where "t1" or "last" are registered options.
+        // options.hasOption() already strips the hyphen.
+        boolean isRegisteredOption = options.hasOption(token);
 
-        // remove leading "-" and "=value"
+        // The token looks like a short option if it starts with a registered short option character
+        // OR if the token itself (without hyphen) is registered as an option.
+        return startsWithRegisteredShortOpt || isRegisteredOption;
     }
