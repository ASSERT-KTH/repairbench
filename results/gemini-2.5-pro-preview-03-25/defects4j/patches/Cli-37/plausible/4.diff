diff --git a/tmp/566999e8-96b7-4c37-91ff-ddbc7c0b3150_buggy.java b/tmp/227412f0-4ad9-4629-a52d-0e9bc2e98e60_fixed.java
index a7e6997..ce2725a 100644
--- a/tmp/566999e8-96b7-4c37-91ff-ddbc7c0b3150_buggy.java
+++ b/tmp/227412f0-4ad9-4629-a52d-0e9bc2e98e60_fixed.java
@@ -1,12 +1,37 @@
     /**
      * Tells if the token looks like a short option.
+     * Short options begin with "-", are at least two characters long,
+     * and are not "--". It returns true if the token (without "-") is registered
+     * as a short option, or if the first character after "-" is registered
+     * as a short option (to support grouped options like -abc or options with
+     * values like -fValue).
      *
-     * @param token
+     * @param token The token to check.
+     * @return true if the token looks like a short option.
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        // Check if the token starts with "-", has at least one character after "-", and is not "--"
+        if (token == null || !token.startsWith("-") || token.length() == 1 || token.equals("--")) {
+            return false;
+        }
+
+        // Check if the whole string after the dash is a registered short option (e.g., "-t1")
+        // This correctly identifies multi-character short options.
+        if (options.hasShortOption(token.substring(1))) {
+            return true;
+        }
+
+        // If the whole string is not a short option, check if the first character
+        // after the dash is a registered short option. This handles cases like
+        // grouped options ("-abc") or options with attached values ("-fVALUE"),
+        // where 'a' or 'f' would be the registered short option.
+        // Ensure the token is long enough to have a first character after the dash.
+        // Note: token.length() >= 2 is guaranteed by the initial checks.
+        if (options.hasShortOption(token.substring(1, 2))) {
+             return true;
+        }
 
-        // remove leading "-" and "=value"
+        // If neither the full name nor the first character matches a registered short option.
+        return false;
     }
\ No newline at end of file
