diff --git a/tmp/2e204be7-9375-4a9a-b898-42e28aeeca15_buggy.java b/tmp/63f63c39-ba8b-4d41-aebd-b4152a1b443a_fixed.java
index ef76662..bb88580 100644
--- a/tmp/2e204be7-9375-4a9a-b898-42e28aeeca15_buggy.java
+++ b/tmp/63f63c39-ba8b-4d41-aebd-b4152a1b443a_fixed.java
@@ -1,17 +1,21 @@
         void read(Tokeniser t, CharacterReader r) {
             char c = r.consume();
             switch (c) {
                 case '>':
                     t.tagPending.selfClosing = true;
                     t.emitTagPending();
                     t.transition(Data);
                     break;
                 case eof:
                     t.eofError(this);
                     t.transition(Data);
                     break;
                 default:
+                    // unexpected character in SelfClosingStartTag state, e.g. <img / >.
+                    // Let's treat it as a parse error, and switch back to BeforeAttributeName state to parse
+                    // the attribute if possible. The character is reconsumed.
                     t.error(this);
+                    r.unconsume(); // Put the character back to be consumed again by the next state.
                     t.transition(BeforeAttributeName);
             }
         }
\ No newline at end of file
