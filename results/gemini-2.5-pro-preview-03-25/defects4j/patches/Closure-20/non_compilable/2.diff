diff --git a/tmp/71f8158e-61d2-4c80-bc0e-9de1fe0004a5_buggy.java b/tmp/8bde4ee8-8c74-481f-9f53-c119c3c4c9df_fixed.java
index d4e6d48..8235fb9 100644
--- a/tmp/71f8158e-61d2-4c80-bc0e-9de1fe0004a5_buggy.java
+++ b/tmp/8bde4ee8-8c74-481f-9f53-c119c3c4c9df_fixed.java
@@ -1,23 +1,37 @@
   private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
+
+    // Check if it's a call to the global String function like String(foo).
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
+
+      // Check for the single argument case: String(argument).
+      Node value = callTarget.getNext();
+      // Make sure there's exactly one argument, and it's not null.
+      if (value != null && value.getNext() == null) {
+
         // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
+        // which allows further optimizations.
         //
         // We can't do this in the general case, because String(a) has
         // slightly different semantics than '' + (a). See
         // http://code.google.com/p/closure-compiler/issues/detail?id=759
-      Node value = callTarget.getNext();
-      if (value != null) {
+        //
+        // This optimization is only valid if the argument is an immutable
+        // primitive (number, string, boolean, null, undefined).
+        if (NodeUtil.isImmutableValue(value)) {
           Node addition = IR.add(
               IR.string("").srcref(callTarget),
-            value.detachFromParent());
+              value.detach()); // Detach value before adding it elsewhere
           n.getParent().replaceChild(n, addition);
           reportCodeChange();
+          // Return the new node so that the peephole optimizer can continue
+          // optimizations on it.
           return addition;
         }
       }
+    }
+    // If the optimization conditions aren't met, return the original node.
     return n;
   }
\ No newline at end of file
