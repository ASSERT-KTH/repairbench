diff --git a/tmp/1c85fab7-19f4-4ba2-aadc-6e30571802e2_buggy.java b/tmp/dd4f7554-c3d9-4d5f-bf28-175f6be58df5_fixed.java
index 516fad7..d142515 100644
--- a/tmp/1c85fab7-19f4-4ba2-aadc-6e30571802e2_buggy.java
+++ b/tmp/dd4f7554-c3d9-4d5f-bf28-175f6be58df5_fixed.java
@@ -1,8 +1,30 @@
     /**
      * If the property contains a collection, then the length of that
      * collection, otherwise - 1.
      * @return int length
      */
     public int getLength() {
-        return ValueUtils.getLength(getBaseValue());
+        // Access the base value pointed to by this pointer
+        Object value = getBaseValue();
+
+        // Dereference the value if it's a pointer itself
+        value = ValueUtils.getValue(value);
+
+        // Check if the dereferenced value is a collection or an array
+        if (value == null) {
+            // null is not considered a collection, return -1 as per the method documentation
+            return -1;
+        }
+        if (value instanceof Collection) {
+            // If it's a Collection, return its size
+            return ((Collection) value).size();
+        }
+        if (value.getClass().isArray()) {
+            // If it's an array, return its length
+            return java.lang.reflect.Array.getLength(value);
+        }
+
+        // If it's not null, not a Collection, and not an array, it's treated
+        // as a singleton value, not a collection. Return -1 as per the documentation.
+        return -1;
     }
\ No newline at end of file
