diff --git a/tmp/5e91fbe1-2a89-4c19-917e-8d8bd3d2a0ee_buggy.java b/tmp/5003a281-1564-4448-bfc0-eeea04c89317_fixed.java
index 516fad7..b8d7048 100644
--- a/tmp/5e91fbe1-2a89-4c19-917e-8d8bd3d2a0ee_buggy.java
+++ b/tmp/5003a281-1564-4448-bfc0-eeea04c89317_fixed.java
@@ -1,8 +1,19 @@
     /**
      * If the property contains a collection, then the length of that
      * collection, otherwise - 1.
      * @return int length
      */
     public int getLength() {
-        return ValueUtils.getLength(getBaseValue());
+        Object baseValue = getBaseValue();
+        // Check if the base value represents a collection (Collection or Array)
+        // Use ValueUtils.isCollection which handles null checks and collection/array types.
+        if (ValueUtils.isCollection(baseValue)) {
+            // If it's a collection or array, return its actual length using ValueUtils.getLength.
+            // ValueUtils.getLength handles collections and arrays correctly.
+            return ValueUtils.getLength(baseValue);
+        }
+        // If the base value is not a collection (it could be null or a single atomic value),
+        // return -1 as specified by the Javadoc for this method.
+        // This signals that the concept of 'length' in the collection sense doesn't apply.
+        return -1;
     }
\ No newline at end of file
