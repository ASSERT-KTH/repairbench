diff --git a/tmp/9f833f20-6a3a-4bd5-beba-2372f4440b2f_buggy.java b/tmp/fe60fb40-7a5a-4c3a-9b7c-620c6aaa64ac_fixed.java
index 5f96616..17bea59 100644
--- a/tmp/9f833f20-6a3a-4bd5-beba-2372f4440b2f_buggy.java
+++ b/tmp/fe60fb40-7a5a-4c3a-9b7c-620c6aaa64ac_fixed.java
@@ -1,20 +1,28 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint.isUnionType()) {
+      // If the constraint is a union type, try to match any alternatives
+      // that are record types.
+      for (JSType alternative : constraint.toUnionType().getAlternates()) {
+        if (alternative.isRecordType()) {
+          matchRecordTypeConstraint(alternative.toObjectType());
+        }
+      }
     }
   }
\ No newline at end of file
