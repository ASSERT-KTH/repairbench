diff --git a/tmp/1fff67e3-5683-42a2-a48b-48935831cdf2_buggy.java b/tmp/9a3adcc6-a3e6-4037-b47b-f5b4be6f6355_fixed.java
index 81a6e8b..50ca911 100644
--- a/tmp/1fff67e3-5683-42a2-a48b-48935831cdf2_buggy.java
+++ b/tmp/9a3adcc6-a3e6-4037-b47b-f5b4be6f6355_fixed.java
@@ -1,19 +1,31 @@
     /**
      * Tells if the token looks like a short option.
+     * <p>
+     * This method is used by the parser to determine if a token signals
+     * the start of short options sequence (e.g. "-a", "-b", "-ab", "-c=value").
+     * It does not need to verify if *all* letters in a potential sequence
+     * like "-abc" correspond to valid options, only the first one.
      *
-     * @param token
+     * @param token The token to inspect.
+     * @return true if the token looks like a short option.
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+        // Must start with "-"
+        if (!token.startsWith("-")) {
             return false;
         }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        // Must be longer than "-"
+        if (token.length() == 1) {
+            return false;
+        }
+
+        // "-" followed by a character?
+        // If the token is "-ab", check for "a".
+        // If the token is "-a=value", check for "a".
+        // If the token is "-avalue", check for "a".
+        // The first character following the '-' must be a registered short option.
+        String optChar = token.substring(1, 2);
+        return options.hasShortOption(optChar);
     }
\ No newline at end of file
