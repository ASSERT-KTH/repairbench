diff --git a/tmp/c3b05635-e714-4533-8570-fe4dec92b91b_buggy.java b/tmp/ef082e2c-47e9-4647-80cd-d27a824821d3_fixed.java
index 81a6e8b..314ea84 100644
--- a/tmp/c3b05635-e714-4533-8570-fe4dec92b91b_buggy.java
+++ b/tmp/ef082e2c-47e9-4647-80cd-d27a824821d3_fixed.java
@@ -1,19 +1,24 @@
     /**
      * Tells if the token looks like a short option.
+     * Handles cases like -S, -SV, -S=V, -SV1=V2, -S1S2.
+     * It should return true if the first character after the '-' is a recognized short option.
      *
-     * @param token
+     * @param token The token to check.
+     * @return true if the token looks like a short option.
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
+        // Short options must start with "-", be longer than "-",
+        // and the first character after "-" must be a recognized option.
+        if (token == null || !token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        // Check if the first character after the '-' is a defined short option.
+        // This handles "-a", "-ab", "-abc", "-a=V", "-aV" etc.
+        // The subsequent characters (if any) are handled by the parser later
+        // (e.g., as values or concatenated options).
+        String optChar = token.substring(1, 2);
+        return options.hasShortOption(optChar);
     }
\ No newline at end of file
