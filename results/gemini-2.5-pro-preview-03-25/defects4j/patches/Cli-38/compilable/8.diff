diff --git a/tmp/f5e1e637-636d-4406-9ad0-7c97c4a68b2a_buggy.java b/tmp/452346fa-5e61-47cf-98a7-23eac68da736_fixed.java
index 81a6e8b..309cf39 100644
--- a/tmp/f5e1e637-636d-4406-9ad0-7c97c4a68b2a_buggy.java
+++ b/tmp/452346fa-5e61-47cf-98a7-23eac68da736_fixed.java
@@ -1,19 +1,24 @@
     /**
      * Tells if the token looks like a short option.
      *
-     * @param token
+     * @param token the token to check
+     * @return true if the token looks like a short option
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
+
+        // handle null token
+        if (token == null || !token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        // Check if the first character after the '-' is a registered short option.
+        // This is necessary for handling concatenated short options like "-ab".
+        // Note: The current function only checks the first character.
+        // The actual parsing of combined/concatenated options (-ab, -SV) happens
+        // in the process() method.
+        String opt = token.substring(1, 2);
+        return options.hasShortOption(opt);
     }
\ No newline at end of file
