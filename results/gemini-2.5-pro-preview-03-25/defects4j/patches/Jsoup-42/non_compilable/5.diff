diff --git a/tmp/41b02377-f0c9-4912-9004-87b0a6b67a0b_buggy.java b/tmp/8d09f097-86b7-4838-a6ab-8e5d7231b8a7_fixed.java
index 442a001..89d9e06 100644
--- a/tmp/41b02377-f0c9-4912-9004-87b0a6b67a0b_buggy.java
+++ b/tmp/8d09f097-86b7-4838-a6ab-8e5d7231b8a7_fixed.java
@@ -1,39 +1,50 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
-        ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
+        ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+            if (el.hasAttr("disabled")) continue; // skip disabled fields
+
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
 
+            // Additions for HTML5 input types
             if ("select".equals(el.tagName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
                 if (!set) {
                     Element option = el.select("option").first();
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
+            } else if ("checkbox".equalsIgnoreCase(type)) {
+                // If a checkbox is checked, its value is submitted. If the value attribute is not specified, "on" is used by default.
                 if (el.hasAttr("checked")) {
+                    final String val = el.val().length() > 0 ? el.val() : "on"; // Use "on" as default if value attribute is missing
+                    data.add(HttpConnection.KeyVal.create(name, val));
+                }
+            } else if ("radio".equalsIgnoreCase(type)) {
+                // Radio buttons: only the checked one is submitted.
+                if (el.hasAttr("checked")) {
+                    // Value is required for radio buttons, no default "on" like checkbox
                     final String val = el.val();
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
             } else {
+                // All other input types (text, password, hidden, etc.), textarea
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }
\ No newline at end of file
