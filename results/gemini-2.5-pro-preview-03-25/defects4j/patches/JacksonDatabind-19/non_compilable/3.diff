diff --git a/tmp/f5ef86db-3218-4d7a-a1f1-2e9bef258522_buggy.java b/tmp/11e44d84-a5da-4522-b86d-0c90984ee060_fixed.java
index 1bec4d6..0fd7036 100644
--- a/tmp/f5ef86db-3218-4d7a-a1f1-2e9bef258522_buggy.java
+++ b/tmp/11e44d84-a5da-4522-b86d-0c90984ee060_fixed.java
@@ -1,14 +1,25 @@
     private JavaType _mapType(Class<?> rawClass)
     {
-        // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        // [databind#810]: Properties are special, as <String,String>
+        if (rawClass == java.util.Properties.class) {
+            // We will just default to String properties... historically used Object/Object
+            // Need to make sure _stringType is available:
+            JavaType stringType = _typeCache.findValueType(String.class);
+            if (stringType == null) { // unlikely but possible if cache not populated
+                stringType = constructType(String.class);
+            }
+            return MapType.construct(rawClass, stringType, stringType);
+        }
+
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
+            // للمزيد check: maybe we should just default to Object/Object?
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": cannot determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
