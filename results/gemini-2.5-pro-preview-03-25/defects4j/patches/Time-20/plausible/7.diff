diff --git a/tmp/b5fac839-c751-4fc7-aa52-587ace905ba2_buggy.java b/tmp/dca674d9-3267-4db9-a5a3-8f6c3c803b34_fixed.java
index ae6c2b1..a6be3e0 100644
--- a/tmp/b5fac839-c751-4fc7-aa52-587ace905ba2_buggy.java
+++ b/tmp/dca674d9-3267-4db9-a5a3-8f6c3c803b34_fixed.java
@@ -1,10 +1,32 @@
         public int parseInto(DateTimeParserBucket bucket, String text, int position) {
             String str = text.substring(position);
+            String bestMatchId = null;
+            int bestMatchLength = 0;
+
+            // Find the longest matching ID
             for (String id : ALL_IDS) {
                 if (str.startsWith(id)) {
-                    bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
+                    int idLength = id.length();
+                    // Ensure it's a better match than what we have already
+                    // Also check that it's not just a partial match followed by non-separator chars
+                    // (although time zone IDs rarely contain ambiguous separators like '/')
+                    if (idLength > bestMatchLength) {
+                         // Basic check: if the text is longer than the matched ID,
+                         // ensure the next character isn't something that could
+                         // continue a valid ID (though this specific check might
+                         // not be strictly necessary for standard TZ IDs which are usually well-defined)
+                         // For this specific bug ("America/Dawson" vs "America/Dawson_Creek"),
+                         // simply finding the longest prefix match is sufficient.
+                        bestMatchId = id;
+                        bestMatchLength = idLength;
                     }
                 }
+            }
+
+            if (bestMatchId != null) {
+                bucket.setZone(DateTimeZone.forID(bestMatchId));
+                return position + bestMatchLength;
+            }
+
             return ~position;
         }
\ No newline at end of file
