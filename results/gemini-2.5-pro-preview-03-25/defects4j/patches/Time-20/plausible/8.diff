diff --git a/tmp/d227e3a0-a1c1-431e-a681-a82d07bd5a5a_buggy.java b/tmp/98908ce2-258c-4c9b-9518-8016406672c8_fixed.java
index ae6c2b1..97d8b37 100644
--- a/tmp/d227e3a0-a1c1-431e-a681-a82d07bd5a5a_buggy.java
+++ b/tmp/98908ce2-258c-4c9b-9518-8016406672c8_fixed.java
@@ -1,10 +1,28 @@
         public int parseInto(DateTimeParserBucket bucket, String text, int position) {
             String str = text.substring(position);
+            String bestMatchId = null;
+            int bestMatchLength = 0;
+
+            // ALL_IDS is assumed to be a collection (like Set or List) of all available Zone IDs
+            // It should be sourced from DateTimeZone.getAvailableIDs() typically.
             for (String id : ALL_IDS) {
                 if (str.startsWith(id)) {
-                    bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
+                    int idLength = id.length();
+                    // Check if this match is longer than the best match found so far
+                    // This ensures that "America/Dawson_Creek" is preferred over "America/Dawson"
+                    // when parsing "America/Dawson_Creek".
+                    if (idLength > bestMatchLength) {
+                        bestMatchId = id;
+                        bestMatchLength = idLength;
                     }
                 }
+            }
+
+            if (bestMatchId != null) {
+                bucket.setZone(DateTimeZone.forID(bestMatchId));
+                return position + bestMatchLength;
+            }
+            
+            // No match found
             return ~position;
         }
\ No newline at end of file
