diff --git a/tmp/e57bd656-2808-4a75-a086-32005d5320c3_buggy.java b/tmp/3fe1ada7-0820-47a1-8872-5ca58a18a73e_fixed.java
index ae6c2b1..e65f4f5 100644
--- a/tmp/e57bd656-2808-4a75-a086-32005d5320c3_buggy.java
+++ b/tmp/3fe1ada7-0820-47a1-8872-5ca58a18a73e_fixed.java
@@ -1,10 +1,26 @@
         public int parseInto(DateTimeParserBucket bucket, String text, int position) {
             String str = text.substring(position);
+            String bestMatchId = null;
+            int bestMatchLength = 0;
+
+            // Iterate through all known time zone IDs to find the longest match
             for (String id : ALL_IDS) {
-                if (str.startsWith(id)) {
-                    bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
+                int idLength = id.length();
+                // Check if the substring starts with this ID and if it's the longest match found so far
+                if (str.startsWith(id) && idLength > bestMatchLength) {
+                    bestMatchId = id;
+                    bestMatchLength = idLength;
                 }
             }
+
+            // If a matching ID was found
+            if (bestMatchId != null) {
+                // Set the zone in the bucket using the best (longest) matching ID
+                bucket.setZone(DateTimeZone.forID(bestMatchId));
+                // Return the position immediately after the matched ID
+                return position + bestMatchLength;
+            }
+
+            // If no match was found, return the bitwise complement of the position to indicate failure
             return ~position;
         }
\ No newline at end of file
