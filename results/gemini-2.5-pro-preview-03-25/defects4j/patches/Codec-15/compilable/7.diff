diff --git a/tmp/0fed2cad-f22f-483a-baae-08f9a15045d5_buggy.java b/tmp/a314c32b-2958-429c-ab63-a0a1031a410d_fixed.java
index b529d33..0c3edb5 100644
--- a/tmp/0fed2cad-f22f-483a-baae-08f9a15045d5_buggy.java
+++ b/tmp/a314c32b-2958-429c-ab63-a0a1031a410d_fixed.java
@@ -1,29 +1,47 @@
     /**
      * Used internally by the Soundex algorithm.
      *
      * Consonants from the same code group separated by W or H are treated as one.
+     * Vowels separated by W or H are treated as one.
      *
      * @param str
      *                  the cleaned working string to encode (in upper case).
      * @param index
      *                  the character position to encode
      * @return Mapping code for a particular character
      * @throws IllegalArgumentException
      *                  if the character is not mapped
      */
     private char getMappingCode(final String str, final int index) {
         // map() throws IllegalArgumentException
         final char mappedChar = this.map(str.charAt(index));
         // HW rule check
-        if (index > 1 && mappedChar != '0') {
+        // Index > 0 means there is a previous char.
+        // Index > 1 means there is a char before the previous char.
+        if (index > 1 && mappedChar != '0') { // Check '0' character, not integer 0
             final char hwChar = str.charAt(index - 1);
             if ('H' == hwChar || 'W' == hwChar) {
                 final char preHWChar = str.charAt(index - 2);
                 final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+                // Fixed condition: only check if the codes are the same
+                if (firstCode == mappedChar) {
+                    // Return 0 (integer) to signal skipping the current character.
+                    // This relies on the main soundex method handling 0 correctly (e.g., by ignoring it)
                     return 0;
                 }
+                // According to http://www.archives.gov/research_room/genealogy/census/soundex.html
+                // RULE B: Vowels are disregarded UNLESS they separate two consonants that have the same code.
+                // H and W are disregarded UNLESS they separate two consonants that have the same code.
+                // Let's assume map() returns '0' for vowels and H/W.
+                // If the code above didn't return 0, it means the codes were different (firstCode != mappedChar)
+                // OR the preHWChar was a vowel/H/W (firstCode was '0').
+                // In either case, the current mappedChar should be returned.
+                // The original code had an additional check: || 'H' == preHWChar || 'W' == preHWChar
+                // This was incorrect, as it would return 0 if the preHWChar was H or W, even if the codes differed.
+                // For example, YHWDYT: D (index 3), hwChar='W', preHWChar='H'. map('H')=0, map('D')=3.
+                // Original check: (0 == 3 || 'H' == 'H' || 'W' == 'H') -> true -> returns 0 (incorrect)
+                // Fixed check: (0 == 3) -> false -> returns map('D')=3 (correct)
             }
         }
         return mappedChar;
     }
\ No newline at end of file
