diff --git a/tmp/4d209449-090c-4502-849f-cb9b39eea448_buggy.java b/tmp/5275ea7b-6876-43bb-87ef-4b805a14ed64_fixed.java
index b529d33..3a66643 100644
--- a/tmp/4d209449-090c-4502-849f-cb9b39eea448_buggy.java
+++ b/tmp/5275ea7b-6876-43bb-87ef-4b805a14ed64_fixed.java
@@ -1,29 +1,43 @@
     /**
      * Used internally by the Soundex algorithm.
      *
      * Consonants from the same code group separated by W or H are treated as one.
+     * Vowels and H, W are mapped to '0'.
      *
      * @param str
      *                  the cleaned working string to encode (in upper case).
      * @param index
      *                  the character position to encode
      * @return Mapping code for a particular character
      * @throws IllegalArgumentException
      *                  if the character is not mapped
      */
     private char getMappingCode(final String str, final int index) {
         // map() throws IllegalArgumentException
+        // Request the mapping for the current character.
         final char mappedChar = this.map(str.charAt(index));
+
         // HW rule check
+        // Check if the current character is a consonant and not the first letter.
         if (index > 1 && mappedChar != '0') {
             final char hwChar = str.charAt(index - 1);
+            // Check if the preceding character is H or W.
             if ('H' == hwChar || 'W' == hwChar) {
+                // Get the character before H/W.
                 final char preHWChar = str.charAt(index - 2);
+                // Get the mapping code for the character before H/W.
                 final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+                // Check if the character before H/W is a consonant (code != '0')
+                // and has the same mapping code as the current character.
+                // If so, the current character is ignored (treated as code 0).
+                // The original code incorrectly ignored the current character
+                // if the character before H/W was also H or W (code '0').
+                if (firstCode != '0' && firstCode == mappedChar) {
+                    // Ignore code
                     return 0;
                 }
             }
         }
+        // Return the mapping code (possibly 0 if vowel/H/W, or if HW rule applied).
         return mappedChar;
     }
\ No newline at end of file
