diff --git a/tmp/b3304f3c-1621-4a5e-8952-4ef19490dfb1_buggy.java b/tmp/52c9b52d-cd1a-42a5-a215-aa6510fef0ea_fixed.java
index 6c87721..40d91fd 100644
--- a/tmp/b3304f3c-1621-4a5e-8952-4ef19490dfb1_buggy.java
+++ b/tmp/52c9b52d-cd1a-42a5-a215-aa6510fef0ea_fixed.java
@@ -1,11 +1,25 @@
     static boolean preserveWhitespace(Node node) {
         // looks only at this element and five levels up, to prevent recursion & needless stack searches
-        if (node != null && node instanceof Element) {
+        if (node instanceof Element) { // instanceof check handles null
             Element el = (Element) node;
-                if (el.tag.preserveWhitespace())
-                    return true;
-                else
-                    return el.parent() != null && el.parent().tag.preserveWhitespace();
+            int i = 0;
+            final int MaxLevels = 5; // Check current element + 4 ancestors
+            do {
+                if (el.tag.preserveWhitespace()) {
+                    return true; // Found an element that preserves whitespace
                 }
+                // Move up to the parent
+                Node parent = el.parent();
+                // Check if parent is suitable for continuing the search
+                if (parent instanceof Element) {
+                    el = (Element) parent;
+                } else {
+                    // Reached root or a non-Element parent
+                    break;
+                }
+                i++;
+            } while (i < MaxLevels); // Limit the search depth
+        }
+        // Didn't find a preserving element within the depth limit, or node wasn't an Element
         return false;
     }
\ No newline at end of file
