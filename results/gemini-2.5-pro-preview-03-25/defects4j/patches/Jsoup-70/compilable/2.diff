diff --git a/tmp/ff625d96-7659-43e6-9592-819015eacf81_buggy.java b/tmp/febbc40f-01e5-4cc7-af64-a3efddc77f64_fixed.java
index 6c87721..a55d4a8 100644
--- a/tmp/ff625d96-7659-43e6-9592-819015eacf81_buggy.java
+++ b/tmp/febbc40f-01e5-4cc7-af64-a3efddc77f64_fixed.java
@@ -1,11 +1,31 @@
     static boolean preserveWhitespace(Node node) {
-        // looks only at this element and five levels up, to prevent recursion & needless stack searches
-        if (node != null && node instanceof Element) {
-            Element el = (Element) node;
-                if (el.tag.preserveWhitespace())
-                    return true;
-                else
-                    return el.parent() != null && el.parent().tag.preserveWhitespace();
+        // Check if this node or any of its ancestors preserves whitespace.
+        // Start scan from parent element if node is not an element (e.g., TextNode).
+        Element el = null;
+        if (node instanceof Element) {
+            el = (Element) node;
+        } else {
+            Node parent = node.parent();
+            if (parent instanceof Element) {
+                el = (Element) parent;
             }
+        }
+
+        // Traverse up the tree from the starting element 'el'.
+        while (el != null) {
+            if (el.tag().preserveWhitespace()) { // Check the current element's tag
+                return true; // Found an element that preserves whitespace.
+            }
+            // Move up to the parent.
+            Node parent = el.parent();
+            // Check if parent is an Element before continuing the loop.
+            if (parent instanceof Element) {
+                el = (Element) parent;
+            } else {
+                // Stop if parent is null or not an Element (e.g., Document node).
+                el = null;
+            }
+        }
+        // If no starting element found, or no preserving ancestor was found.
         return false;
     }
\ No newline at end of file
