diff --git a/tmp/687747ef-595c-450b-bed9-a4bda762a2c5_buggy.java b/tmp/a903d8bf-c54b-42f9-b42b-ce20fbf1f43a_fixed.java
index 9c25814..7493112 100644
--- a/tmp/687747ef-595c-450b-bed9-a4bda762a2c5_buggy.java
+++ b/tmp/a903d8bf-c54b-42f9-b42b-ce20fbf1f43a_fixed.java
@@ -1,27 +1,37 @@
     /**
      * <p>Throws a {@link MissingOptionException} if all of the
      * required options are no present.</p>
      *
      * @throws MissingOptionException if any of the required Options
      * are not present.
      */
     private void checkRequiredOptions()
         throws MissingOptionException
     {
         // if there are required options that have not been
-        // processsed
-        if (requiredOptions.size() > 0)
+        // processed
+        if (!requiredOptions.isEmpty()) // Use isEmpty() for clarity and potentially better performance
         {
             Iterator iter = requiredOptions.iterator();
             StringBuffer buff = new StringBuffer();
 
+            // Add the correct prefix based on the number of missing options
+            if (requiredOptions.size() == 1)
+            {
+                buff.append("Missing required option: ");
+            }
+            else
+            {
+                buff.append("Missing required options: ");
+            }
 
-            // loop through the required options
+            // loop through the required options and append their string representation
             while (iter.hasNext())
             {
-                buff.append(iter.next());
+                buff.append(iter.next().toString()); // Explicitly call toString() for clarity, though append does it
+                // No space needed between option names based on test expectations (e.g., "fx")
             }
 
             throw new MissingOptionException(buff.toString());
         }
     }
\ No newline at end of file
