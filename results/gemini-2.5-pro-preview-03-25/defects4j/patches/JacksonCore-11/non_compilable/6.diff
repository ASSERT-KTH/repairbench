diff --git a/tmp/633cf708-89c7-4954-8899-529acaefa0c0_buggy.java b/tmp/5f297a64-2aec-4090-8ae0-c01fc9dc2632_fixed.java
index 29d025a..c6e209c 100644
--- a/tmp/633cf708-89c7-4954-8899-529acaefa0c0_buggy.java
+++ b/tmp/5f297a64-2aec-4090-8ae0-c01fc9dc2632_fixed.java
@@ -1,13 +1,41 @@
     private void _verifySharing()
     {
         if (_hashShared) {
+            // Create copies of arrays, become independent:
             _hashArea = Arrays.copyOf(_hashArea, _hashArea.length);
             _names = Arrays.copyOf(_names, _names.length);
             _hashShared = false;
-            // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure
-            //    we rehash as needed, as need-rehash flag is not copied from parent
+
+            // 09-Sep-2015, tatu: As per [jackson-core#216], need to check if we already
+            // need to rehash, even if _needRehash is false (not copied from parent).
+            // Check is based on current number of entries (_count) vs size and fill
+            // factor for spill-over area. Using the same calculations as in `addName()`
+            // for triggering rehashing.
+            // Note: must verify primary AND secondary hash areas. Primary is easy:
+            // `_count` includes primary entries. Spill area/tertiary needs separate check.
+            if (_count > _size) { // primary area full?
+                rehash();
+            } else {
+                // Maybe tertiary area full? Use field that tracks insertion point (_spilloverEnd)
+                // and compare against calculated max size for secondary/tertiary area.
+                // Max size for secondary/tertiary is same as primary hash size (_size),
+                // so max index is (_tertiaryStart + _size - 1).
+                // But let's use simpler check based on 50% spillover fill, similar to
+                // original logic in _verifyRehash() helper from the fix commit.
+                // (Note: _spilloverEnd tracks number of entries in spill area)
+                int spillCount = _spilloverEnd - _tertiaryStart; // Number of entries in spill area
+                if (spillCount > (_size >> 1)) { // Spill area > 50% full?
+                   rehash();
+                }
+            }
+            // NOTE: If rehash() was called, it will have set _needRehash = false.
         }
-        if (_needRehash) {
+        // If we were not shared OR if we were shared but the state after copy
+        // didn't immediately require rehashing, we might still need to rehash
+        // if the child itself set the flag (_needRehash = true).
+        // The 'else if' structure avoids double-rehashing if the above check triggered.
+        else if (_needRehash) {
+            // Note: rehash() will clear the _needRehash flag
             rehash();
         }
     }
\ No newline at end of file
