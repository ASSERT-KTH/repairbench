diff --git a/tmp/302309cf-f47e-446b-8c3c-828c2d4baa20_buggy.java b/tmp/f547526f-b318-4db9-8aa1-2234498e974d_fixed.java
index 29d025a..350c9ed 100644
--- a/tmp/302309cf-f47e-446b-8c3c-828c2d4baa20_buggy.java
+++ b/tmp/f547526f-b318-4db9-8aa1-2234498e974d_fixed.java
@@ -1,13 +1,35 @@
     private void _verifySharing()
     {
         if (_hashShared) {
-            _hashArea = Arrays.copyOf(_hashArea, _hashArea.length);
-            _names = Arrays.copyOf(_names, _names.length);
-            _hashShared = false;
+            // When copying arrays, we also need to copy related state
+            // from the master table info, in case parent had been modified
+            // (and potentially rehashed)
+            final TableInfo tableInfo = _tableInfo;
+            _hashArea = Arrays.copyOf(tableInfo.quads, tableInfo.quads.length);
+            _names = Arrays.copyOf(tableInfo.names, tableInfo.names.length);
+            _hashShared = false; // Now we have separate state
+
+            // And then update other state fields to be in sync with copied arrays
+            _hashSize = tableInfo.size;
+            _count = tableInfo.count;
+            _tertiaryShift = tableInfo.tertiaryShift;
+            _spilloverEnd = tableInfo.spilloverEnd;
+            _longNameOffset = tableInfo.longNameOffset;
+            _longestCollisionList = tableInfo.longestCollisionList;
+
+            // Also recalculate derived values which depend on _hashSize
+            // NOTE: Assumes default secondary/tertiary size split (1/4 total each).
+            // Check calculation if structure assumptions change.
+            _secondaryStart = _hashSize << 2;
+            _tertiaryStart = _secondaryStart + (_secondaryStart >> 1);
+
             // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure
-            //    we rehash as needed, as need-rehash flag is not copied from parent
+            //    we rehash as needed, as need-rehash flag is not copied from parent.
+            //    The check below handles this case for the child instance itself.
         }
+        // If this instance has locally determined that it needs rehashing
+        // (based on its own count vs size), do it now. State is consistent.
         if (_needRehash) {
             rehash();
         }
     }
\ No newline at end of file
