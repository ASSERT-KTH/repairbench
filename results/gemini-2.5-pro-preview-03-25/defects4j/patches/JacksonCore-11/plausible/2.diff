diff --git a/tmp/663a38b2-b5ef-48b7-b75d-8db7a6df7ae9_buggy.java b/tmp/6765d87a-9610-48b0-868d-0972a38c1f8f_fixed.java
index 29d025a..5d4b7aa 100644
--- a/tmp/663a38b2-b5ef-48b7-b75d-8db7a6df7ae9_buggy.java
+++ b/tmp/6765d87a-9610-48b0-868d-0972a38c1f8f_fixed.java
@@ -1,13 +1,24 @@
     private void _verifySharing()
     {
         if (_hashShared) {
+            // Create non-shared copies of data structures
             _hashArea = Arrays.copyOf(_hashArea, _hashArea.length);
             _names = Arrays.copyOf(_names, _names.length);
             _hashShared = false;
+
             // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure
-            //    we rehash as needed, as need-rehash flag is not copied from parent
+            //    we rehash as needed, as need-rehash flag is not copied from parent.
+            // 12-Dec-2015, tatu: Note: we must check read-need AFTER having unshared,
+            //    as the flag is not checked by primary add methods otherwise.
+            // Let's also inline the check from `_verifyNeedForRehash()` / `_addNameSpill()`
+            // which determines if the current state requires rehashing.
+            if (_spilloverEnd >= _longNameOffset) { // Check if spillover area is full
+                 _needRehash = true;
             }
+        }
+        // Need to check if we really need to rehash, regardless of sharing status
+        // (we may have just copied a full table that needs rehashing)
         if (_needRehash) {
             rehash();
         }
     }
