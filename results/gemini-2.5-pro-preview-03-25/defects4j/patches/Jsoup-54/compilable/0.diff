diff --git a/tmp/73e9e647-bee3-4ecc-a75a-72442721ccda_buggy.java b/tmp/3de7f5ac-aa53-44b8-8a8c-66d9c11d28ef_fixed.java
index d5b3da9..03d7369 100644
--- a/tmp/73e9e647-bee3-4ecc-a75a-72442721ccda_buggy.java
+++ b/tmp/3de7f5ac-aa53-44b8-8a8c-66d9c11d28ef_fixed.java
@@ -1,7 +1,34 @@
         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
+                // 1. Sanitize the key: remove characters not allowed in XML Names.
+                //    Allowed characters: letters, digits, '-', '.', '_', ':'
+                //    This regex removes any character that is NOT one of those.
                 String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
+
+                // 2. Skip if the sanitized key is empty, as empty attribute names are illegal.
+                if (key.isEmpty()) {
+                    continue;
+                }
+
+                // 3. Check if the sanitized key starts with a valid XML NameStartChar.
+                //    Valid start chars are letters, '_', or ':'.
+                //    XML Names cannot start with '-', '.', or digits.
+                //    If it doesn't start with a valid char, prepend "_" to make it valid.
+                if (!key.matches("^[a-zA-Z_:].*")) {
+                     key = "_" + key;
+                }
+
+                // 4. Set the attribute. Catch potential DOMExceptions, e.g., if the key
+                //    is still invalid for reasons not covered by the checks (like namespace issues),
+                //    or if the value contains invalid characters.
+                try {
+                    // Note: The attribute value is not sanitized. Setting invalid characters
+                    // in the value can also cause DOMExceptions. This code assumes values are OK
+                    // or that the calling context handles value sanitization if needed.
                     el.setAttribute(key, attribute.getValue());
+                } catch (org.w3c.dom.DOMException e) {
+                    // Ignore exceptions during attribute setting for robustness.
+                    // This might happen with invalid keys (e.g., starting with "xml") or values.
+                }
             }
         }
\ No newline at end of file
