diff --git a/tmp/98f63aa2-9702-4512-b920-0101f05b64ac_buggy.java b/tmp/c89b8e3b-0f0f-41b7-bcbf-e1615f587e80_fixed.java
index c1f30a5..d2b82e1 100644
--- a/tmp/98f63aa2-9702-4512-b920-0101f05b64ac_buggy.java
+++ b/tmp/c89b8e3b-0f0f-41b7-bcbf-e1615f587e80_fixed.java
@@ -1,15 +1,23 @@
     /**
      * <p>Formats a <code>Calendar</code> object into the
      * supplied <code>StringBuffer</code>.</p>
      *
      * @param calendar  the calendar to format
      * @param buf  the buffer to format into
      * @return the specified string buffer
      */
     public StringBuffer format(Calendar calendar, StringBuffer buf) {
+        Calendar calendarToUse = calendar; // Use the original by default
         if (mTimeZoneForced) {
-            calendar = (Calendar) calendar.clone();
-            calendar.setTimeZone(mTimeZone);
+            // Create a clone to avoid modifying the original Calendar object
+            calendarToUse = (Calendar) calendar.clone();
+            // Set the formatter's timezone on the clone
+            calendarToUse.setTimeZone(mTimeZone);
+            // Calling getTimeInMillis() forces the calendar to recompute its fields based on the new timezone.
+            // This is necessary because setTimeZone() alone may not immediately update the fields
+            // used by applyRules.
+            calendarToUse.getTimeInMillis();
         }
-        return applyRules(calendar, buf);
+        // Apply formatting rules using the calendar with the correct timezone context
+        return applyRules(calendarToUse, buf);
     }
\ No newline at end of file
