diff --git a/tmp/275c43c3-f8b0-44f6-b3d5-633015e8a695_buggy.java b/tmp/a368dd4e-efd8-4429-9595-c42c9e94b919_fixed.java
index c1f30a5..e875758 100644
--- a/tmp/275c43c3-f8b0-44f6-b3d5-633015e8a695_buggy.java
+++ b/tmp/a368dd4e-efd8-4429-9595-c42c9e94b919_fixed.java
@@ -1,15 +1,23 @@
     /**
      * <p>Formats a <code>Calendar</code> object into the
      * supplied <code>StringBuffer</code>.</p>
      *
      * @param calendar  the calendar to format
      * @param buf  the buffer to format into
      * @return the specified string buffer
      */
     public StringBuffer format(Calendar calendar, StringBuffer buf) {
         if (mTimeZoneForced) {
+            // LANG-538: clone calendar before changing timezone to avoid side effect
             calendar = (Calendar) calendar.clone();
-            calendar.setTimeZone(mTimeZone);
+            // Calling getTimeInMillis() is necessary because Calendar.setTimeZone fails
+            // to update fields correctly if the time has not been calculated previously.
+            // See LANG-538 and https://bugs.openjdk.java.net/browse/JDK-4526405
+            long timeInMillis = calendar.getTimeInMillis(); // Ensure time is computed
+            calendar.setTimeZone(mTimeZone); // Set the FastDateFormat time zone
+            // Re-set the time because setTimeZone may modify it if the time zone has changed
+            // (see JDK-4526405)
+            calendar.setTimeInMillis(timeInMillis); // Re-establish the correct instant
         }
         return applyRules(calendar, buf);
     }
