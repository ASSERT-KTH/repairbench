diff --git a/tmp/4f59a376-a2cd-4266-815c-79e816097803_buggy.java b/tmp/7c99b2dc-0fe7-4aa8-8d8d-d168bc10fab7_fixed.java
index a7cb64f..9174729 100644
--- a/tmp/4f59a376-a2cd-4266-815c-79e816097803_buggy.java
+++ b/tmp/7c99b2dc-0fe7-4aa8-8d8d-d168bc10fab7_fixed.java
@@ -1,10 +1,31 @@
+import org.jsoup.helper.Validate;
+import org.jsoup.nodes.Attributes; // Assuming attributes is of this type or similar
+import java.net.MalformedURLException;
+import java.net.URL;
+
+// Add imports if Node.absKeyPrefix is used and defined elsewhere, e.g.:
+// import org.jsoup.nodes.Node;
+
     /**
      * Test if this element has an attribute.
-     * @param attributeKey The attribute key to check.
+     * @param attributeKey The attribute key to check. If the key starts with {@code abs:}, the key following the prefix is checked for being present, and the attribute must have a non-empty absolute URL.
      * @return true if the attribute exists, false if not.
      */
     public boolean hasAttr(String attributeKey) {
         Validate.notNull(attributeKey);
 
-        return attributes.hasKey(attributeKey);
+        // Assuming Node.absKeyPrefix = "abs:"
+        final String absPrefix = "abs:";
+        if (attributeKey.startsWith(absPrefix)) {
+            String key = attributeKey.substring(absPrefix.length());
+             // Check if the underlying attribute exists AND has a non-blank absolute URL
+            if (attributes.hasKeyIgnoreCase(key) && !absUrl(key).isEmpty()) {
+                 return true;
+            }
+            // Note: previous versions might have returned true if hasKey(key) was true,
+            // regardless of absUrl validity. This version aligns with attr("abs:key") behaviour.
+            return false; // Doesn't have the base attribute or absUrl is empty
+        } else {
+            return attributes.hasKeyIgnoreCase(attributeKey);
+        }
     }
