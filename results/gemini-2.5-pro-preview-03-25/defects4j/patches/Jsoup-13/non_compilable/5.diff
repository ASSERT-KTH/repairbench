diff --git a/tmp/e1f4cdf8-fd7a-4bbe-b8ca-8769507bceb6_buggy.java b/tmp/1cf7fec3-753a-47df-a044-ad2a123bc722_fixed.java
index a7cb64f..a331c8a 100644
--- a/tmp/e1f4cdf8-fd7a-4bbe-b8ca-8769507bceb6_buggy.java
+++ b/tmp/1cf7fec3-753a-47df-a044-ad2a123bc722_fixed.java
@@ -1,10 +1,32 @@
+import org.jsoup.internal.Validate;
+import org.jsoup.nodes.Attributes;
+
+// Assuming the method is part of a class that has 'attributes' field (org.jsoup.nodes.Attributes)
+// and an 'absUrl(String key)' method, like org.jsoup.nodes.Element.
+
     /**
-     * Test if this element has an attribute.
+     * Test if this element has an attribute. Case-insensitive.
      * @param attributeKey The attribute key to check.
      * @return true if the attribute exists, false if not.
      */
     public boolean hasAttr(String attributeKey) {
         Validate.notNull(attributeKey);
 
-        return attributes.hasKey(attributeKey);
+        // Check for absolute attribute key (case-insensitive for prefix check)
+        // The Attributes.absKeyPrefix ("abs:") is lowercase, but check supplied key case-insensitively
+        if (attributeKey.toLowerCase().startsWith(Attributes.absKeyPrefix)) {
+            String key = attributeKey.substring(Attributes.absKeyPrefix.length());
+            // Ensure the key after "abs:" is not empty
+            if (key.length() > 0) {
+                 // Check if the corresponding base attribute exists and resolves to a non-empty absolute URL.
+                 // absUrl(key) internally checks for the base attribute's existence (case-insensitively)
+                 // and returns an empty string if the base attribute doesn't exist or cannot be resolved to an absolute URL.
+                return !absUrl(key).isEmpty();
+            }
+            // If attributeKey was just "abs:", fall through to regular check
+        }
+
+        // Fallback to regular attribute existence check (case-insensitive)
+        // attributes field is assumed to be non-null for Element instances
+        return attributes.hasKeyIgnoreCase(attributeKey);
     }
