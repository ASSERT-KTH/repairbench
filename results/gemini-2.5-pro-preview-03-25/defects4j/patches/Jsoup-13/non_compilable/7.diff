diff --git a/tmp/441b2567-d70e-4390-ad02-96870da8e463_buggy.java b/tmp/2a34fd59-0cf5-4d2a-8c8e-090c2cd28080_fixed.java
index a7cb64f..d807a58 100644
--- a/tmp/441b2567-d70e-4390-ad02-96870da8e463_buggy.java
+++ b/tmp/2a34fd59-0cf5-4d2a-8c8e-090c2cd28080_fixed.java
@@ -1,10 +1,25 @@
     /**
      * Test if this element has an attribute.
      * @param attributeKey The attribute key to check.
      * @return true if the attribute exists, false if not.
      */
     public boolean hasAttr(String attributeKey) {
         Validate.notNull(attributeKey);
 
-        return attributes.hasKey(attributeKey);
+        // Check for abs: prefix first to differentiate from literal "abs:key" attr.
+        if (attributeKey.startsWith(Attributes.absKeyPrefix)) {
+            String key = attributeKey.substring(Attributes.absKeyPrefix.length());
+            // Ensure the key is valid (not just "abs:") and that absUrl() returns a non-empty string.
+            // absUrl already checks for the base attribute's existence.
+            if (key.length() > 0 && !absUrl(key).isEmpty()) {
+                return true;
+            } else {
+                // if key is empty ("abs:") or absUrl is empty (attribute not present or not resolvable)
+                return false;
+            }
+        }
+
+        // If not an abs: key, check for the literal attribute key using case-insensitive comparison
+        // consistent with attr(String).
+        return attributes.hasKeyIgnoreCase(attributeKey);
     }
\ No newline at end of file
