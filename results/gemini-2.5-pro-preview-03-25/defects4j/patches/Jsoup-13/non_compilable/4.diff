diff --git a/tmp/088e9310-0676-4f3f-a9eb-cde28b287956_buggy.java b/tmp/150d57f5-7ae0-4df1-9fd9-9f441831fa4e_fixed.java
index a7cb64f..e2b8e54 100644
--- a/tmp/088e9310-0676-4f3f-a9eb-cde28b287956_buggy.java
+++ b/tmp/150d57f5-7ae0-4df1-9fd9-9f441831fa4e_fixed.java
@@ -1,10 +1,21 @@
     /**
-     * Test if this element has an attribute.
+     * Test if this element has an attribute. Case insensitive.
      * @param attributeKey The attribute key to check.
      * @return true if the attribute exists, false if not.
      */
+    @Override // Assuming this method overrides a method in a superclass like Node
     public boolean hasAttr(String attributeKey) {
         Validate.notNull(attributeKey);
 
-        return attributes.hasKey(attributeKey);
+        // Check for absolute attribute key first
+        if (attributeKey.toLowerCase().startsWith(Node.absKeyPrefix)) {
+            String key = attributeKey.substring(Node.absKeyPrefix.length());
+            // Check if the underlying attribute key exists and has a non-empty absolute URL
+            if (key.length() > 0 && attributes.hasKeyIgnoreCase(key)) { // Ensure the base attribute exists first
+                 return !absUrl(key).isEmpty(); // Then check if its absolute URL is non-empty
+            }
+        }
+        
+        // Fallback to checking for the literal attribute key using case-insensitive comparison
+        return attributes.hasKeyIgnoreCase(attributeKey);
     }
