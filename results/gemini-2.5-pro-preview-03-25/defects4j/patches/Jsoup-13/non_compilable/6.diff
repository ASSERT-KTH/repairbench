diff --git a/tmp/00810072-7965-4551-adca-9cada0798644_buggy.java b/tmp/d2e1894d-dbd6-47b7-990c-0ac9b1af4b4b_fixed.java
index a7cb64f..03baad4 100644
--- a/tmp/00810072-7965-4551-adca-9cada0798644_buggy.java
+++ b/tmp/d2e1894d-dbd6-47b7-990c-0ac9b1af4b4b_fixed.java
@@ -1,10 +1,28 @@
     /**
-     * Test if this element has an attribute.
+     * Test if this element has an attribute. The attribute key is case-insensitive.
+     * Supports the {@code abs:} prefix query to check if the attribute exists and has an absolute URL.
      * @param attributeKey The attribute key to check.
      * @return true if the attribute exists, false if not.
      */
     public boolean hasAttr(String attributeKey) {
         Validate.notNull(attributeKey);
 
+        // Handle the 'abs:' prefix case check first
+        if (attributeKey.startsWith(Attributes.absKeyPrefix)) {
+            String key = attributeKey.substring(Attributes.absKeyPrefix.length());
+            // Ensure the key after 'abs:' is not empty (e.g., handle "abs:")
+            // Then check if the underlying attribute exists and its value resolves to a non-empty absolute URL.
+            // absUrl(key) returns "" if the attribute 'key' doesn't exist or can't be resolved absolutely.
+            // It internally uses attr(key) which should handle case-insensitivity.
+            if (key.length() > 0) {
+                 return !absUrl(key).isEmpty();
+            } else {
+                 return false; // Invalid key like "abs:", has no attribute.
+            }
+        }
+
+        // Otherwise, perform the standard check using the attributes collection.
+        // This assumes attributes.hasKey() correctly handles case-insensitivity as per HTML standards,
+        // matching the behavior of other methods like attr() and Node#attributes().
         return attributes.hasKey(attributeKey);
     }
\ No newline at end of file
