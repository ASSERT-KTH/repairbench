diff --git a/tmp/f49b3c78-ea12-435a-be2d-77e5c74df2a9_buggy.java b/tmp/ad46b4d1-07fb-490a-8234-9fdcdb2517d9_fixed.java
index cfdcd9c..713b5fe 100644
--- a/tmp/f49b3c78-ea12-435a-be2d-77e5c74df2a9_buggy.java
+++ b/tmp/ad46b4d1-07fb-490a-8234-9fdcdb2517d9_fixed.java
@@ -1,51 +1,55 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
     if (isAssignmentTarget(n)) {
       return n;
     }
 
     if (!right.isNumber()) {
       // Sometimes people like to use complex expressions to index into
       // arrays, or strings to index into array methods.
       return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
       error(INVALID_GETELEM_INDEX_ERROR, right);
       return n;
     }
 
     if (intIndex < 0) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
+    // Find the element at the specified index.
     Node current = left.getFirstChild();
-    Node elem = null;
     for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
       current = current.getNext();
     }
 
-    if (elem == null) {
+    // If the index is out of bounds, report an error.
+    if (current == null) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
-    if (elem.isEmpty()) {
-      elem = NodeUtil.newUndefinedNode(elem);
+    Node elem;
+    if (current.isEmpty()) {
+      // If the element is empty (e.g., [,,1][0]), replace it with undefined.
+      elem = NodeUtil.newUndefinedNode(current);
     } else {
-      left.removeChild(elem);
+      // Otherwise, detach the element from the array literal.
+      // The node is moved from the array literal to the GETELEM site.
+      left.removeChild(current);
+      elem = current;
     }
 
-    // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
+    // Replace the entire GETELEM expression with the extracted element.
+    parent.replaceChild(n, elem);
     reportCodeChange();
     return elem;
   }
\ No newline at end of file
