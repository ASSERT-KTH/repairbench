diff --git a/tmp/f8ee99e3-da16-43a7-a431-a76d5d10efed_buggy.java b/tmp/e85cfdcf-4ec2-4a55-beb4-f25d8be29e93_fixed.java
index 4cce784..44ffeba 100644
--- a/tmp/f8ee99e3-da16-43a7-a431-a76d5d10efed_buggy.java
+++ b/tmp/e85cfdcf-4ec2-4a55-beb4-f25d8be29e93_fixed.java
@@ -1,11 +1,27 @@
     /**
      * Compares this object to another based on size.
      * @param object the object to compare to
      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
      *         than <tt>object</tt>, 0 if they are equal.
      */
     public int compareTo(Fraction object) {
-        double nOd = doubleValue();
-        double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+        // Compare fractions by cross-multiplication to avoid precision issues with doubles.
+        // We compare n1/d1 and n2/d2 by comparing n1*d2 and d1*n2.
+        // Use long for intermediate products to prevent potential integer overflow.
+        long n1 = this.getNumerator();
+        long d1 = this.getDenominator();
+        long n2 = object.getNumerator();
+        long d2 = object.getDenominator();
+        long n1d2 = n1 * d2;
+        long d1n2 = d1 * n2;
+
+        return Long.compare(n1d2, d1n2);
+        // Equivalent to:
+        // if (n1d2 < d1n2) {
+        //     return -1;
+        // } else if (n1d2 > d1n2) {
+        //     return 1;
+        // } else {
+        //     return 0;
+        // }
     }
\ No newline at end of file
