diff --git a/tmp/e5c64bbb-a7da-416d-8525-42cf9a22b284_buggy.java b/tmp/ff9dcc13-953c-4c24-a52c-76be3e80503d_fixed.java
index a9a5e27..233f494 100644
--- a/tmp/e5c64bbb-a7da-416d-8525-42cf9a22b284_buggy.java
+++ b/tmp/ff9dcc13-953c-4c24-a52c-76be3e80503d_fixed.java
@@ -1,24 +1,33 @@
     /**
      * Multiply two values throwing an exception if overflow occurs.
      *
      * @param val1  the first value
      * @param val2  the second value
      * @return the new total
      * @throws ArithmeticException if the value is too big or too small
      * @since 1.2
      */
     public static long safeMultiply(long val1, int val2) {
         switch (val2) {
             case -1:
+                // Special case for Long.MIN_VALUE to avoid overflow, because
+                // -Long.MIN_VALUE == Long.MIN_VALUE
+                if (val1 == Long.MIN_VALUE) {
+                    throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+                }
                 return -val1;
             case 0:
                 return 0L;
             case 1:
                 return val1;
         }
+        // Perform the multiplication
         long total = val1 * val2;
+        // Check for overflow by dividing and checking equivalence.
+        // If the division result is not the same as the original value,
+        // it means that the multiplication overflowed.
         if (total / val2 != val1) {
           throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
         }
         return total;
     }
\ No newline at end of file
