diff --git a/tmp/050b0194-a049-430f-a9da-021a40a0fdd7_buggy.java b/tmp/f8b955da-0dc1-40bc-91cf-7f9fbb536dff_fixed.java
index a9a5e27..0e7734b 100644
--- a/tmp/050b0194-a049-430f-a9da-021a40a0fdd7_buggy.java
+++ b/tmp/f8b955da-0dc1-40bc-91cf-7f9fbb536dff_fixed.java
@@ -1,24 +1,31 @@
     /**
      * Multiply two values throwing an exception if overflow occurs.
      * 
      * @param val1  the first value
      * @param val2  the second value
      * @return the new total
      * @throws ArithmeticException if the value is too big or too small
      * @since 1.2
      */
     public static long safeMultiply(long val1, int val2) {
         switch (val2) {
             case -1:
+                // Special case for Long.MIN_VALUE * -1, as -Long.MIN_VALUE == Long.MIN_VALUE
+                if (val1 == Long.MIN_VALUE) {
+                    throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+                }
                 return -val1;
             case 0:
                 return 0L;
             case 1:
                 return val1;
         }
         long total = val1 * val2;
+        // Check for overflow by dividing back. 
+        // If the result does not match the original value, there was an overflow.
+        // This check works for all values except Long.MIN_VALUE * -1 (handled above).
         if (total / val2 != val1) {
           throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
         }
         return total;
     }
\ No newline at end of file
