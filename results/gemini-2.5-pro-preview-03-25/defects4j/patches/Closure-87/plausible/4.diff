diff --git a/tmp/aae33d6f-4441-4894-962c-49fc166e1b49_buggy.java b/tmp/ff15ecf5-3901-4ded-a882-6fe76cd763e9_fixed.java
index 19fd63e..bd7ab44 100644
--- a/tmp/aae33d6f-4441-4894-962c-49fc166e1b49_buggy.java
+++ b/tmp/ff15ecf5-3901-4ded-a882-6fe76cd763e9_fixed.java
@@ -1,24 +1,53 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
+        // Check if the single child is an EXPR_RESULT node.
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
+          Node expr = maybeExpr.getFirstChild();
+
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
           // We only have to worry about methods with an implicit 'this'
           // param, or this doesn't happen.
+          // Specifically, check for calls on properties (obj.prop()) or
+          // elements (obj['prop']()).
 
-          return NodeUtil.isExpressionNode(maybeExpr);
+          // Check if the expression is a call.
+          if (expr.getType() == Token.CALL) {
+            Node callee = expr.getFirstChild();
+            // Check if the callee is accessed via GETPROP or GETELEM.
+            if (NodeUtil.isGet(callee)) {
+              // Case 1: obj.onchange() - problematic in IE
+              if (callee.getType() == Token.GETPROP) {
+                String propName = callee.getLastChild().getString();
+                // Heuristic based on issue 291: only 'onchange' is problematic.
+                if ("onchange".equals(propName)) {
+                  return false; // Don't fold .onchange() calls.
+                }
+              }
+              // Case 2: obj['prop']() - also potentially problematic due to 'this'
+              else if (callee.getType() == Token.GETELEM) {
+                 // Folding obj['...']() can change behavior in IE.
+                 return false; // Don't fold obj['...']() calls.
+              }
+            }
+          }
+          // If the expression is not one of the problematic calls,
+          // it's safe to fold this expression block.
+          return true;
+        }
       }
     }
 
     return false;
   }
\ No newline at end of file
