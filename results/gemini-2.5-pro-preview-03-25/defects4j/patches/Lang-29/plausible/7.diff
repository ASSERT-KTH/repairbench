diff --git a/tmp/72cbe583-6ec0-4782-afed-d3c2b8004d88_buggy.java b/tmp/a31f2ffd-2f42-4287-958e-b4582c50221d_fixed.java
index 3ec995f..c4e3337 100644
--- a/tmp/72cbe583-6ec0-4782-afed-d3c2b8004d88_buggy.java
+++ b/tmp/a31f2ffd-2f42-4287-958e-b4582c50221d_fixed.java
@@ -1,26 +1,32 @@
     /**
      * <p>
      * Converts the given Java version string to an <code>int</code>.
      * </p>
      * 
      * <p>
      * Example return values:
      * </p>
      * <ul>
      * <li><code>120</code> for Java 1.2</li>
      * <li><code>131</code> for Java 1.3.1</li>
      * <li><code>160</code> for Java 1.6.0_20</li>
      * </ul>
      * 
      * <p>
      * Patch releases are not reported.
      * </p>
      * <p>
      * This method is package private instead of private to support unit test invocation.
      * </p>
      * 
-     * @return the version, for example 131 for Java 1.3.1
+     * @param version the Java version string, may be null
+     * @return the version, for example 131 for Java 1.3.1. Returns 0 if the version string is null, 
+     * has zero length, or cannot be parsed.
      */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+    static int toJavaVersionInt(String version) {
+        // We expect toVersionInt to return a value that can be represented as an int.
+        // If toVersionInt returns a float, casting it to int matches the expected behavior
+        // based on the Javadoc and test cases (e.g., 0.0f becomes 0).
+        // If toVersionInt itself is intended to return an int, this change makes the signature consistent.
+        return (int) toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
     }
\ No newline at end of file
