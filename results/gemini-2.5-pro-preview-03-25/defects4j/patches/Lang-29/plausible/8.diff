diff --git a/tmp/0c1255ca-496b-4a85-8c17-acff79261bfa_buggy.java b/tmp/b3c963a6-949c-4d42-87d6-1cdb6525cff6_fixed.java
index 3ec995f..66a5af3 100644
--- a/tmp/0c1255ca-496b-4a85-8c17-acff79261bfa_buggy.java
+++ b/tmp/b3c963a6-949c-4d42-87d6-1cdb6525cff6_fixed.java
@@ -1,26 +1,30 @@
     /**
      * <p>
      * Converts the given Java version string to an <code>int</code>.
      * </p>
      * 
      * <p>
      * Example return values:
      * </p>
      * <ul>
      * <li><code>120</code> for Java 1.2</li>
      * <li><code>131</code> for Java 1.3.1</li>
      * <li><code>160</code> for Java 1.6.0_20</li>
      * </ul>
      * 
      * <p>
      * Patch releases are not reported.
      * </p>
      * <p>
      * This method is package private instead of private to support unit test invocation.
      * </p>
      * 
-     * @return the version, for example 131 for Java 1.3.1
+     * @param version the Java version string to convert, may be null
+     * @return the version, for example 131 for Java 1.3.1, or 0 if the version string is null or cannot be parsed
      */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+    // Return type changed from float to int
+    // Added cast to int for the return value of toVersionInt
+    static int toJavaVersionInt(String version) {
+        // The toVersionInt method likely returns a float, hence the cast to int is necessary.
+        return (int) toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
     }
\ No newline at end of file
