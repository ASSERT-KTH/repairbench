diff --git a/tmp/73234b9d-2ecf-493b-8b28-70e9bc0d76e2_buggy.java b/tmp/2e576e0a-3dc2-4c41-aef8-beb4964c6730_fixed.java
index 03b03d7..3332bf4 100644
--- a/tmp/73234b9d-2ecf-493b-8b28-70e9bc0d76e2_buggy.java
+++ b/tmp/2e576e0a-3dc2-4c41-aef8-beb4964c6730_fixed.java
@@ -1,25 +1,61 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      *
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
+        // Find the transition that occurred at or before the instant.
+        // Note: previousTransition returns the instant of the transition.
+        long prevTrans = previousTransition(instant, true);
 
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+        // Get the offsets around the transition. Note: getOffset returns offset in milliseconds.
+        int offsetBefore = getOffset(prevTrans - 1);
+        int offsetAfter = getOffset(prevTrans);
+
+        // Check if the transition created an overlap (offset decreased, e.g., -02:00 to -03:00).
+        // This happens when the offset *value* decreases (becomes more negative).
+        if (offsetAfter < offsetBefore) {
+            // Calculate the duration of the overlap (a positive value).
+            long delta = offsetBefore - offsetAfter;
+
+            // Check if the instant falls within the earlier interval of the overlap
+            // [prevTrans - delta, prevTrans). This interval has the 'offsetBefore'.
+            // Instants in this range have the earlier offset physically.
+            if (instant >= prevTrans - delta && instant < prevTrans) {
+                // Instant is in the earlier interval (offset 'offsetBefore').
+                // If we want the later offset (earlierOrLater=true), add the delta 
+                // to move to the corresponding instant in the later interval.
+                if (earlierOrLater) {
+                    return instant + delta;
+                }
+                // Otherwise, we want the earlier offset, which is the current one.
+                // Return the original instant.
+                return instant;
             }
 
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+            // Check if the instant falls within the later interval of the overlap
+            // [prevTrans, prevTrans + delta). This interval has the 'offsetAfter'.
+            // Instants in this range have the later offset physically.
+            // Note: Joda-Time considers the transition time `prevTrans` itself
+            // to have the `offsetAfter`.
+            if (instant >= prevTrans && instant < prevTrans + delta) {
+                 // Instant is in the later interval (offset 'offsetAfter').
+                 // If we want the earlier offset (earlierOrLater=false), subtract the delta 
+                 // to move to the corresponding instant in the earlier interval.
+                if (!earlierOrLater) {
+                    return instant - delta;
+                }
+                // Otherwise, we want the later offset, which is the current one.
+                // Return the original instant.
+                return instant;
+            }
+        }
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // If it's not an overlap transition (offsetAfter >= offsetBefore), 
+        // or the instant is outside the overlapping intervals 
+        // [prevTrans - delta, prevTrans + delta), then the instant is not ambiguous,
+        // so return the original instant.
+        return instant;
     }
\ No newline at end of file
