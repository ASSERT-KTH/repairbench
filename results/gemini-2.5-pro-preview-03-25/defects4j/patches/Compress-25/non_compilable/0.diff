diff --git a/tmp/8a89f792-8666-4718-a636-8f5d296f93a4_buggy.java b/tmp/ecb11987-4f0b-4d53-9600-817f81ae1d6b_fixed.java
index 6c0aa19..1ae663d 100644
--- a/tmp/8a89f792-8666-4718-a636-8f5d296f93a4_buggy.java
+++ b/tmp/ecb11987-4f0b-4d53-9600-817f81ae1d6b_fixed.java
@@ -1,20 +1,23 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+        // FIX: Use buf.length instead of buf.capacity(). The internal buffer 'buf'
+        // is a byte array (byte[]), which has a 'length' property, not a capacity() method.
+        // Using buf.length correctly sets the pushback buffer size for the PushbackInputStream.
+        in = new PushbackInputStream(inputStream, buf.length);
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
     }
