diff --git a/tmp/2d7d207f-8fa1-47fe-8bac-1e5a60bd4640_buggy.java b/tmp/9118ce30-c220-4cd5-8bf6-db008f70af94_fixed.java
index 5c5286c..e3e72b8 100644
--- a/tmp/2d7d207f-8fa1-47fe-8bac-1e5a60bd4640_buggy.java
+++ b/tmp/9118ce30-c220-4cd5-8bf6-db008f70af94_fixed.java
@@ -1,6 +1,20 @@
     public <T> void resetMock(T mock) {
         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
+        // Preserve the original mock settings
+        org.mockito.mock.MockCreationSettings<T> mockSettings = oldMockHandler.getMockSettings();
+        // Create a new handler with the original settings, effectively resetting invocations and stubbings
+        // Assuming the MockHandler constructor correctly uses the settings for configuration
+        // and initializes a clean state (no invocations, default stubbings per settings).
+        // NOTE: The original buggy code used `new MockHandler<T>(oldMockHandler)`.
+        // If that constructor is specifically designed for reset (copies settings, clears state),
+        // then `new MockHandler<T>(oldMockHandler)` could be correct.
+        // However, creating a handler directly from settings is the standard Mockito approach.
+        // We'll stick closer to the standard approach assuming MockHandler has a constructor accepting settings.
+        // If not, the original `new MockHandler<T>(oldMockHandler)` might be intended,
+        // but the crucial part is using original settings for the filter below.
+        MockHandler<T> newMockHandler = new MockHandler<T>(mockSettings); // Standard way to create a handler
+        // Create a new filter using the new handler and the ORIGINAL mock settings
+        // This ensures listeners and other settings are not lost.
+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) mockSettings);
         ((Factory) mock).setCallback(0, newFilter);
     }
\ No newline at end of file
