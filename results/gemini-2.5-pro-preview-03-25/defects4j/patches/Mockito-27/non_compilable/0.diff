diff --git a/tmp/0cb1b0b3-fdae-4eb4-afc9-278e7abf7400_buggy.java b/tmp/9e99c358-c3e4-4e7d-a995-246cd520eda7_fixed.java
index 5c5286c..0881401 100644
--- a/tmp/0cb1b0b3-fdae-4eb4-afc9-278e7abf7400_buggy.java
+++ b/tmp/9e99c358-c3e4-4e7d-a995-246cd520eda7_fixed.java
@@ -1,6 +1,25 @@
     public <T> void resetMock(T mock) {
         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
+        // Retrieve the original mock settings, which include listeners, default answer, etc.
+        MockCreationSettings<T> originalSettings = oldMockHandler.getMockSettings();
+
+        // Create a new handler instance. We pass the original settings to ensure
+        // that the new handler is configured correctly, preserving the mock's behavior
+        // profile (like default answers, listeners, etc.) while resetting invocations and stubbings.
+        // Assuming MockHandler has a constructor that accepts MockCreationSettings
+        // to initialize itself correctly for a reset operation.
+        // Note: The original code used `new MockHandler<T>(oldMockHandler)`, the intent of
+        // which is unclear. Creating a new handler from settings is generally safer
+        // for a clean reset. If `new MockHandler<T>(oldMockHandler)` was intended
+        // to copy settings and reset state, the fix below would still work,
+        // but creating from settings is more explicit.
+        MockHandler<T> newMockHandler = new MockHandler<T>(originalSettings);
+
+        // Create a new filter using the new handler and crucially, the *original* settings.
+        // This ensures that listeners and other settings specified during mock creation are retained.
+        // The original code used default settings here, which caused the bug.
+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) originalSettings);
+
+        // Replace the existing callback filter on the mock instance.
         ((Factory) mock).setCallback(0, newFilter);
     }
\ No newline at end of file
