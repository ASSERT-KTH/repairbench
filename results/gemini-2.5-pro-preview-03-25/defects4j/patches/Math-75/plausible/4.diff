diff --git a/tmp/c5f1c8ad-f841-4cd8-bebe-5c2f37d18cb9_buggy.java b/tmp/9ed78c4e-8c2e-4550-8101-f1f27c354ea1_fixed.java
index 877a1a1..4131652 100644
--- a/tmp/c5f1c8ad-f841-4cd8-bebe-5c2f37d18cb9_buggy.java
+++ b/tmp/9ed78c4e-8c2e-4550-8101-f1f27c354ea1_fixed.java
@@ -1,14 +1,32 @@
     /**
       * Returns the percentage of values that are equal to v
      * (as a proportion between 0 and 1).
      * <p>
      * Returns <code>Double.NaN</code> if no values have been added.</p>
      *
      * @param v the value to lookup
      * @return the proportion of values equal to v
      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        // The previous implementation incorrectly called getCumPct.
+        // The correct behavior for getPct is to return the percentage
+        // of the specific value v, not the cumulative percentage.
+        // This deprecated method should delegate to the non-deprecated
+        // getPct(Comparable<?>) method as indicated by the Javadoc.
+        if (getSumFreq() == 0) {
+            return Double.NaN;
+        }
+        // Assuming getCount(Comparable<?> v) and getSumFreq() methods exist.
+        // Calculate percentage as count(v) / total count.
+        // Note: The replacement method getPct(Comparable) likely already does this.
+        // Delegating directly to it is the simplest fix if it exists and works.
+        // We assume the non-deprecated getPct(Comparable) is correct.
+        try {
+            return getPct((Comparable<?>) v);
+        } catch (ClassCastException e) {
+            // Match behavior of other methods like getCumPct(Object)
+            return 0d;
+        }
     }
\ No newline at end of file
