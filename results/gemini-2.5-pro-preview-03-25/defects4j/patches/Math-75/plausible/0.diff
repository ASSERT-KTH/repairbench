diff --git a/tmp/d55dfd5e-516d-4b31-bfdd-4db550f840f1_buggy.java b/tmp/b54e4cf6-c46f-42aa-9566-2efe4a71d7db_fixed.java
index 877a1a1..b8a5bbd 100644
--- a/tmp/d55dfd5e-516d-4b31-bfdd-4db550f840f1_buggy.java
+++ b/tmp/b54e4cf6-c46f-42aa-9566-2efe4a71d7db_fixed.java
@@ -1,14 +1,27 @@
     /**
       * Returns the percentage of values that are equal to v
      * (as a proportion between 0 and 1).
      * <p>
      * Returns <code>Double.NaN</code> if no values have been added.</p>
      *
      * @param v the value to lookup
      * @return the proportion of values equal to v
      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        final long n = getSumFreq();
+        if (n == 0) {
+            return Double.NaN;
+        }
+        try {
+            // Cast v to Comparable and get its count.
+            // Divide by the total number of values.
+            return (double) getCount((Comparable<?>) v) / n;
+        } catch (ClassCastException e) {
+            // If v is not Comparable, it cannot be in the frequency table.
+            // Return 0 as per the expected behavior for non-comparable objects
+            // seen in tests like testPcts with "foo".
+            return 0d;
+        }
     }
\ No newline at end of file
