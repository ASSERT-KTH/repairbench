diff --git a/tmp/8b90a01f-fc78-48c6-bbf9-96349c3b1d63_buggy.java b/tmp/f574b2d7-20ba-4177-8213-58466edb5836_fixed.java
index 8e93a5e..9551308 100644
--- a/tmp/8b90a01f-fc78-48c6-bbf9-96349c3b1d63_buggy.java
+++ b/tmp/f574b2d7-20ba-4177-8213-58466edb5836_fixed.java
@@ -1,43 +1,50 @@
     /**
      * <p>Render the specified text and return the rendered Options
      * in a StringBuffer.</p>
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            // NOTE: Passing '0' instead of 'nextLineTabStop' as the third parameter (startPos)
+            // to findWrapPos fixes the wrapping logic for subsequent lines.
+            // The original code passed nextLineTabStop, which caused findWrapPos
+            // to sometimes return -1 prematurely due to its internal check 
+            // (startPos + width >= text.length()), especially for indented lines.
+            // Passing 0 ensures findWrapPos calculates the wrap based on the full width
+            // correctly, even with the prepended padding.
+            pos = findWrapPos(text, width, 0); 
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
