diff --git a/tmp/1a9f2cab-d59d-4a52-92fe-faa1fcb5c421_buggy.java b/tmp/e4e1cfb0-c57c-4c6c-be0f-a1d1d153d7c1_fixed.java
index 8e93a5e..8cf1368 100644
--- a/tmp/1a9f2cab-d59d-4a52-92fe-faa1fcb5c421_buggy.java
+++ b/tmp/e4e1cfb0-c57c-4c6c-be0f-a1d1d153d7c1_fixed.java
@@ -1,43 +1,47 @@
     /**
      * <p>Render the specified text and return the rendered Options
      * in a StringBuffer.</p>
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
+        String HACK_FIX_VAR = text; // Keep track of original text remainder
 
         while (true)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            // Fix: Use a variable to manage the remaining text to avoid issues with mutation inside the loop
+            HACK_FIX_VAR = padding + HACK_FIX_VAR.substring(pos).trim();
+            // Fix: Pass 0 as startPos for findWrapPos for subsequent lines
+            pos = findWrapPos(HACK_FIX_VAR, width, 0);
 
             if (pos == -1)
             {
-                sb.append(text);
+                sb.append(HACK_FIX_VAR);
 
                 return sb;
             }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            // Fix: Append the wrapped part of the *current* line (HACK_FIX_VAR)
+            sb.append(rtrim(HACK_FIX_VAR.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
