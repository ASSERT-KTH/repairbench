diff --git a/tmp/f494200d-c586-4435-aa0c-f8263047d984_buggy.java b/tmp/108e4cb5-ed90-4acd-96ea-a79d2bc3606d_fixed.java
index a667cbe..9e6f921 100644
--- a/tmp/f494200d-c586-4435-aa0c-f8263047d984_buggy.java
+++ b/tmp/108e4cb5-ed90-4acd-96ea-a79d2bc3606d_fixed.java
@@ -1,10 +1,37 @@
     /**
      * Recalculate the hash code after deserialization. The hash code of some
      * keys might have change (hash codes based on the system hash code are
      * only stable for the same process).
      * @return the instance with recalculated hash code
      */
     private Object readResolve() {
-        calculateHashCode(keys);
+        // Assign the result of calculateHashCode to the transient hashCode field.
+        // The original code called calculateHashCode but didn't store its result,
+        // leaving the transient hashCode field at its default value (0) after deserialization.
+        this.hashCode = calculateHashCode(keys);
+        return this;
+    }
+
+    // Note: This fix assumes that calculateHashCode(keys) returns the calculated
+    // hash code as an int rather than storing it directly into the hashCode field
+    // as a side effect. If calculateHashCode were a void method that set the
+    // hashCode field itself, the original readResolve method would have been correct,
+    // implying the bug was elsewhere (e.g., inside calculateHashCode or related field definitions).
+    // Given the test failure (hashCode is 0 after deserialization) and the request
+    // to fix *this* method, assigning the return value is the most logical correction.
+
+    // Helper method assumed to exist and return int based on the fix logic:
+    // private int calculateHashCode(Object[] keys) { ... return hash; }
+    // If the actual method signature is `void calculateHashCode(Object[] keys)`
+    // and it correctly sets `this.hashCode`, then the original `readResolve` code:
+    //   calculateHashCode(keys);
+    //   return this;
+    // would be correct, and the bug lies elsewhere. However, based on the prompt's
+    // constraints and the observed error, the fix below addresses the likely scenario
+    // where the return value was ignored.
+
+    // Final fixed code block for the user:
+    private Object readResolve() {
+        this.hashCode = calculateHashCode(keys); // Calculate and assign the hash code
         return this;
     }
