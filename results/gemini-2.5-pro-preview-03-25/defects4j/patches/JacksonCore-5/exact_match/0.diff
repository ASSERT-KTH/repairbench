diff --git a/tmp/de74b6b4-d735-4921-bda7-8514fef55bd3_buggy.java b/tmp/2108202f-ee04-449d-9166-f991e40ce1d5_fixed.java
index 39c4220..b5d7f41 100644
--- a/tmp/de74b6b4-d735-4921-bda7-8514fef55bd3_buggy.java
+++ b/tmp/2108202f-ee04-449d-9166-f991e40ce1d5_fixed.java
@@ -1,21 +1,26 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
+        // Ensure characters are digits:
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+            // Bug fix: Use charAt(i) instead of charAt(i++) which would increment i twice per loop
+            char c = str.charAt(i);
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
+        // And finally, verify that it's not out of range of int
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
+        // Ok, we know it's composed of digits, and if length is 10,
+        // not overflowing, so using potentially faster conversion is safe
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
