diff --git a/tmp/25657b9b-d5b5-4a1f-a1ab-b850c5444e67_buggy.java b/tmp/f6d13bdd-aeb3-4777-92b2-1a5842753b5b_fixed.java
index 39c4220..d48c313 100644
--- a/tmp/25657b9b-d5b5-4a1f-a1ab-b850c5444e67_buggy.java
+++ b/tmp/f6d13bdd-aeb3-4777-92b2-1a5842753b5b_fixed.java
@@ -1,21 +1,24 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
+        // Input should only contain digits '0' through '9'
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+            char c = str.charAt(i); // Fix: use i, not i++
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
+        // This is for Integer.MAX_VALUE (2147483647), which is 10 digits
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
+        // If it wasn't rejected, should be parseable
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
