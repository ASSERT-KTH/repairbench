diff --git a/tmp/7013eda6-46b1-4ed3-889e-5f11867f46aa_buggy.java b/tmp/e103dcae-edfc-4767-8ecc-3f553a12a13a_fixed.java
index 39c4220..dfa2797 100644
--- a/tmp/7013eda6-46b1-4ed3-889e-5f11867f46aa_buggy.java
+++ b/tmp/e103dcae-edfc-4767-8ecc-3f553a12a13a_fixed.java
@@ -1,21 +1,27 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
+        // Check that all characters are digits
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+            // BUG FIX: Original code had i++ here, causing index skipping & incorrect validation
+            char c = str.charAt(i);
             if (c > '9' || c < '0') {
+                // Found a non-digit character, so it's not a valid array index
                 return -1;
             }
         }
+        // If the string has 10 digits, it might be > Integer.MAX_VALUE
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
+                // Index is too large to be represented as an int
                 return -1;
             }
         }
+        // If all checks passed, parse the string as an integer index
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
