diff --git a/tmp/87b1910e-94e7-4530-b427-2c254a59d391_buggy.java b/tmp/e1154f68-8ec6-467e-8d08-7e62b201b663_fixed.java
index 39c4220..f99c147 100644
--- a/tmp/87b1910e-94e7-4530-b427-2c254a59d391_buggy.java
+++ b/tmp/e1154f68-8ec6-467e-8d08-7e62b201b663_fixed.java
@@ -1,21 +1,26 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
+        // Check that all characters are digits
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+            // char c = str.charAt(i++); // Original buggy line: i incremented twice per loop
+            char c = str.charAt(i); // Fixed line: Use 'i', loop increments it once
             if (c > '9' || c < '0') {
-                return -1;
+                return -1; // Not a digit, invalid index
             }
         }
+        // If the length is 10, check for potential integer overflow
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
+                // Value exceeds Integer.MAX_VALUE, treat as invalid
                 return -1;
             }
         }
+        // If all checks passed (all digits, within length/value limits), parse it
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
