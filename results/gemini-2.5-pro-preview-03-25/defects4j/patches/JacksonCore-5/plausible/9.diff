diff --git a/tmp/0c0dcbf5-1e0f-4a61-81d8-1a7a79c43681_buggy.java b/tmp/e5984941-a3da-44c1-ac74-f1a1385fb25c_fixed.java
index 39c4220..098013a 100644
--- a/tmp/0c0dcbf5-1e0f-4a61-81d8-1a7a79c43681_buggy.java
+++ b/tmp/e5984941-a3da-44c1-ac74-f1a1385fb25c_fixed.java
@@ -1,21 +1,34 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
-        for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+        // Optimize: Check first char, required to be digit
+        char c = str.charAt(0);
+        if (c < '0' || c > '9') {
+             return -1;
+        }
+        // And then others
+        for (int i = 1; i < len; ++i) {
+            c = str.charAt(i); // *** FIX: Do not increment i here, loop does it ***
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
+        // Also, need to avoid leading zeroes, unless number is 0
+        if (len > 1 && str.charAt(0) == '0') {
+             return -1;
+        }
+
+        // Ok, validated now. But does it fit in int?
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
+        // Yes, fits:
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
