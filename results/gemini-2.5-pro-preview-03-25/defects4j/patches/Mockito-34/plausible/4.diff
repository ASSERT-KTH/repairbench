diff --git a/tmp/d718cb3a-7763-42c5-a452-aaf13fe1cb6b_buggy.java b/tmp/7aeffcea-b82d-451e-83aa-f285e913b846_fixed.java
index d68a69c..080b3e8 100644
--- a/tmp/d718cb3a-7763-42c5-a452-aaf13fe1cb6b_buggy.java
+++ b/tmp/7aeffcea-b82d-451e-83aa-f285e913b846_fixed.java
@@ -1,9 +1,22 @@
     public void captureArgumentsFrom(Invocation i) {
         int k = 0;
+        // Get the arguments from the invocation to avoid multiple calls and allow checking length.
+        Object[] arguments = i.getArguments();
+        int numberOfArguments = arguments.length;
+
         for (Matcher m : matchers) {
+            // Ensure that we only attempt to capture an argument if one exists at the current index k.
+            // This prevents ArrayIndexOutOfBoundsException when the number of matchers
+            // is potentially greater than the number of arguments (e.g., with varargs matchers
+            // and an invocation with fewer or zero vararg arguments).
+            if (k < numberOfArguments) {
                 if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
+                    ((CapturesArguments) m).captureFrom(arguments[k]);
                 }
+            }
+            // Note: This simple index increment assumes a one-to-one correspondence.
+            // Varargs might require more complex handling if a single matcher needs
+            // to capture multiple arguments, but this fix addresses the reported AIOOBE.
             k++;
         }
     }
\ No newline at end of file
