diff --git a/tmp/a9177217-033e-490c-a52e-c307564ccb14_buggy.java b/tmp/9a50ce5e-3955-4d0b-919b-cdf391d08cbc_fixed.java
index d68a69c..8b6cc19 100644
--- a/tmp/a9177217-033e-490c-a52e-c307564ccb14_buggy.java
+++ b/tmp/9a50ce5e-3955-4d0b-919b-cdf391d08cbc_fixed.java
@@ -1,9 +1,27 @@
     public void captureArgumentsFrom(Invocation i) {
         int k = 0;
+        // Cache the arguments array and its length to avoid repeated calls and improve clarity.
+        Object[] arguments = i.getArguments();
+        int argCount = arguments.length;
+
         for (Matcher m : matchers) {
+            // Check if the matcher is capable of capturing arguments.
             if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
+                // IMPORTANT: Check if there is an argument available at the current index 'k'
+                // before attempting to access it. This prevents ArrayIndexOutOfBoundsException
+                // when the number of matchers potentially exceeds the number of actual arguments,
+                // which can happen with varargs method invocations (e.g., invoking a vararg method with zero varargs).
+                if (k < argCount) {
+                    // If an argument exists, pass it to the matcher for capture.
+                    ((CapturesArguments) m).captureFrom(arguments[k]);
                 }
+                // If k >= argCount, there is no corresponding argument for this matcher.
+                // This typically occurs for a vararg matcher when the invocation had no varargs.
+                // In this case, we simply do nothing, effectively capturing nothing for this matcher.
+            }
+            // Increment the argument index counter for the next matcher.
+            // This follows the original logic where each matcher corresponds to one potential argument slot,
+            // even though for varargs, a single matcher might conceptually cover multiple arguments or none.
             k++;
         }
     }
\ No newline at end of file
