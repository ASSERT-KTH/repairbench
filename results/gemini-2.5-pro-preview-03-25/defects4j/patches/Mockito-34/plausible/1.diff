diff --git a/tmp/5c7cbbf3-5cc8-49c6-844b-e72c6e3c28d6_buggy.java b/tmp/ca8115f4-7edb-4ff4-aec5-f9b98771d5a7_fixed.java
index d68a69c..c4083a0 100644
--- a/tmp/5c7cbbf3-5cc8-49c6-844b-e72c6e3c28d6_buggy.java
+++ b/tmp/ca8115f4-7edb-4ff4-aec5-f9b98771d5a7_fixed.java
@@ -1,9 +1,21 @@
     public void captureArgumentsFrom(Invocation i) {
         int k = 0;
+        // Obtain arguments array once to avoid repeated calls and get its length.
+        Object[] arguments = i.getArguments();
+        int actualArgumentCount = arguments.length;
+
         for (Matcher m : matchers) {
+            // Check if the matcher is designed to capture arguments.
             if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
+                // Check if there is an actual argument corresponding to the matcher's position.
+                // This prevents ArrayIndexOutOfBoundsException when matchers > arguments (e.g., empty varargs).
+                if (k < actualArgumentCount) {
+                    ((CapturesArguments) m).captureFrom(arguments[k]);
+                }
+                // If k >= actualArgumentCount, it means this matcher corresponds to a position
+                // where no argument was provided (like an empty vararg). In this case,
+                // we simply don't capture anything for this matcher, which seems correct.
             }
             k++;
         }
     }
\ No newline at end of file
