diff --git a/tmp/1d47b7cb-8159-469c-9a19-4bc1b6075d42_buggy.java b/tmp/54a0a072-d768-41aa-b470-a63bcda558bf_fixed.java
index b8e7fdb..0c980fa 100644
--- a/tmp/1d47b7cb-8159-469c-9a19-4bc1b6075d42_buggy.java
+++ b/tmp/54a0a072-d768-41aa-b470-a63bcda558bf_fixed.java
@@ -1,15 +1,34 @@
     /**
-     * Attempt to cast this comment to an XML Declaration note.
+     * Attempt to cast this comment to an XML Declaration node.
      * @return an XML declaration if it could be parsed as one, null otherwise.
      */
     public XmlDeclaration asXmlDeclaration() {
         String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
         XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
+        // Avoid parsing potentially malformed or short data that can't be a declaration
+        // Need at least <?xml?> or <!DOCTYPE> - pragmatic minimum length check
+        if (data.length() > 5 && (data.startsWith("!") || data.startsWith("?"))) {
+            try {
+                // The core content between the first and last character:
+                String core = data.substring(1, data.length() -1);
+                if (core.trim().isEmpty()) // dont parse if node is e.g. <!>
+                    return null;
+
+                // Parse the core content as if it were a tag, to extract the name and attributes
+                Document doc = Jsoup.parse("<" + core + ">", baseUri(), Parser.xmlParser());
+
+                // Check if the parse resulted in an Element child
+                if (doc.children().size() > 0) { // Check for element children, not just any node
+                    Element el = doc.child(0); // Safe to get first child element now
                     decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
                     decl.attributes().addAll(el.attributes());
                 }
+            } catch (Exception e) {
+                // Handle cases where substring fails (e.g., data is shorter than expected)
+                // or parsing fails due to severely malformed content.
+                // Return null signifies it's not a valid declaration.
+                return null;
+            }
+        }
         return decl;
     }
\ No newline at end of file
