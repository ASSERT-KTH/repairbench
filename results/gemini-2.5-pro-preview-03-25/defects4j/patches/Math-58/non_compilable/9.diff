diff --git a/tmp/08e2f738-c6a6-46d6-9956-fe5af30a3e6c_buggy.java b/tmp/0d5a1dec-53b6-40f4-b396-afc64ceeaeb9_fixed.java
index 3002587..3f03232 100644
--- a/tmp/08e2f738-c6a6-46d6-9956-fe5af30a3e6c_buggy.java
+++ b/tmp/0d5a1dec-53b6-40f4-b396-afc64ceeaeb9_fixed.java
@@ -1,10 +1,37 @@
+import org.apache.commons.math.exception.NotStrictlyPositiveException;
+import org.apache.commons.math.optimization.fitting.Gaussian.ParameterGuesser;
+import org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer; // Assuming this or similar optimizer is used via CurveFitter
+import org.apache.commons.math.analysis.ParametricUnivariateRealFunction; // Assuming Gaussian.Parametric implements this
+// Note: The exact imports might vary based on the project structure,
+// but NotStrictlyPositiveException is the key one for the fix.
+
+// Inside the GaussianFitter class...
+
     /**
      * Fits a Gaussian function to the observed points.
      *
      * @return the parameters of the Gaussian function that best fits the
-     * observed points (in the same order as above).
+     * observed points (in the same order as above: norm, mean, sigma). If the
+     * optimizer attempts tociv evaluate the function with non-positive sigma,
+     * the fit aborts and {@code Double.NaN} is returned for all parameters.
+     * @throws org.apache.commons.math.exception.ConvergenceException if the algorithm
+     * failed to converge.
+     * @throws org.apache.commons.math.FunctionEvaluationException if the function
+     * cannot be evaluated for the initial guess.
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
+        try {
+            // The underlying fit method (likely from CurveFitter) uses the optimizer.
+            // If the optimizer suggests a non-positive sigma, Gaussian.Parametric
+            // will throw NotStrictlyPositiveException. We catch it here and return NaN
+            // as per the behavior described in testMath519.
             return fit(new Gaussian.Parametric(), guess);
+        } catch (NotStrictlyPositiveException e) {
+            // Return NaN for all parameters (norm, mean, sigma) to indicate failure
+            // due to invalid parameter exploration by the optimizer.
+            return new double[] { Double.NaN, Double.NaN, Double.NaN };
+        }
+        // Other exceptions potentially thrown by fit(ParametricRealFunction, double[])
+        // like ConvergenceException are not caught here and will propagate.
     }
\ No newline at end of file
