diff --git a/tmp/43ae0b09-7170-4634-927c-b1a625c291c4_buggy.java b/tmp/4f615257-15ea-49ea-8d59-2f8ddb222ebd_fixed.java
index 98b456f..f070bfb 100644
--- a/tmp/43ae0b09-7170-4634-927c-b1a625c291c4_buggy.java
+++ b/tmp/4f615257-15ea-49ea-8d59-2f8ddb222ebd_fixed.java
@@ -1,17 +1,25 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
+            // Check if this attribute should be collapsed in HTML mode
             // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            // The condition checks if we should *NOT* collapse, and thus print the ="value" part.
+            // We should print ="value" UNLESS it's HTML syntax, it's a boolean attribute,
+            // AND the value is null, empty string, or equals the key (case-insensitive).
+            final boolean isBoolean = Attribute.isBooleanAttribute(key);
+            if (!(out.syntax() == Document.OutputSettings.Syntax.html && isBoolean &&
+                  (val == null || val.isEmpty() || val.equalsIgnoreCase(key)))) {
                 accum.append("=\"");
-                Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
+                // Ensure val is not null before passing to escape, use "" which is safe.
+                Entities.escape(accum, val == null ? org.jsoup.internal.StringUtil.EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
+            // otherwise, for boolean attributes output in HTML mode, with null, empty, or matching val,
+            // just output the key (which is already done above).
         }
     }
\ No newline at end of file
