diff --git a/tmp/0efcfd6d-ab6c-4c92-8729-6352c96bd4c1_buggy.java b/tmp/87c3d4e3-6e88-4ba5-89c5-b1947e1d8059_fixed.java
index 98b456f..679156f 100644
--- a/tmp/0efcfd6d-ab6c-4c92-8729-6352c96bd4c1_buggy.java
+++ b/tmp/87c3d4e3-6e88-4ba5-89c5-b1947e1d8059_fixed.java
@@ -1,17 +1,32 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            // collapse boolean attributes in html mode to only key name (e.g. <img async>)
+            // handles val=null, val="", val=key case
+            final boolean skipValue;
+            if (out.syntax() == Document.OutputSettings.Syntax.html) {
+                if (val == null) { // attributeCaseSensitive=false Checks null only, "" is different...
+                    // todo: We need a case-generalised isBoolean check
+                    skipValue = Attribute.isBooleanAttribute(key); // ... attributes look boolean by name, but might not be, depending on value
+                } else {
+                     if (Attribute.isBooleanAttribute(key))
+                        skipValue = val.isEmpty() || val.equalsIgnoreCase(key); // val="", val="async"
+                    else // is not boolean, output value
+                        skipValue = false;
+                }
+            } else { // xml syntax
+                 skipValue = false;
+            }
+
+            if (!skipValue) {
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
         }
     }
\ No newline at end of file
