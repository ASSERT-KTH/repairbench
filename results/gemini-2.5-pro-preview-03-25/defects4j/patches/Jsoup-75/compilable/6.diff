diff --git a/tmp/d98dba19-2a08-4959-88f5-879e36d5ca17_buggy.java b/tmp/8a66416f-e2ca-457a-a6bc-b631ff9f2e68_fixed.java
index 98b456f..753cc8b 100644
--- a/tmp/d98dba19-2a08-4959-88f5-879e36d5ca17_buggy.java
+++ b/tmp/8a66416f-e2ca-457a-a6bc-b631ff9f2e68_fixed.java
@@ -1,17 +1,23 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            // Corrected condition: Collapse attribute (don't write value) if:
+            // 1) We are outputting HTML (not XML)
+            // 2) The value is null OR the attribute is a boolean attribute AND (the value is empty OR the value is case-insensitively equal to the key)
+            // This logic mirrors the logic in Attribute.shouldCollapseAttribute()
+            if (!(out.syntax() == Document.OutputSettings.Syntax.html &&
+                  (val == null || (Attribute.isBooleanAttribute(key) && (val.isEmpty() || val.equalsIgnoreCase(key))))
+               )) {
+                // If attribute should not be collapsed, append the value.
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
+            // else: attribute is collapsed or boolean, do not write value
         }
     }
