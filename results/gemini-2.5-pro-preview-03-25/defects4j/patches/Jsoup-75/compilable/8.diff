diff --git a/tmp/7baedbc6-df25-4780-bee3-d8aa4e3776f9_buggy.java b/tmp/d694aab2-d149-4ab6-a32f-0e121ec86318_fixed.java
index 98b456f..5053d39 100644
--- a/tmp/7baedbc6-df25-4780-bee3-d8aa4e3776f9_buggy.java
+++ b/tmp/d694aab2-d149-4ab6-a32f-0e121ec86318_fixed.java
@@ -1,17 +1,23 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
+            // Rian note: Attributes storage should be case sensitive in keys, but generally is lower-case
             final String val = vals[i];
             accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
+            // collapse boolean attributes in html mode to bare name (e.g. <div hidden>)
+            // OR if value is null, or "" or equals name (e.g. <input checked=checked>)
+            // OR if val is null / empty string in html mode, don't write value out
             if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+                && (Attribute.isBooleanAttribute(key)
+                    && (val == null || val.isEmpty() || val.equalsIgnoreCase(key)))
+                )) {
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
+            // else: boolean attribute in html mode, or null val, omit value
         }
     }
