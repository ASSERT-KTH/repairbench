diff --git a/tmp/1806bb47-a923-4d46-be9d-867ebd447870_buggy.java b/tmp/fcaadfc8-5a18-422b-9ca9-1e3aa3dcd3c1_fixed.java
index 46799da..9faae2a 100644
--- a/tmp/1806bb47-a923-4d46-be9d-867ebd447870_buggy.java
+++ b/tmp/fcaadfc8-5a18-422b-9ca9-1e3aa3dcd3c1_fixed.java
@@ -1,8 +1,24 @@
         /**
          * @param x Normalized objective variables.
          * @return the original objective variables, possibly repaired.
          */
         public double[] repairAndDecode(final double[] x) {
-            return
-                decode(x);
+            // Decode the normalized variables to the original problem space.
+            // decode() uses the boundaries if they are set.
+            double[] decoded = decode(x);
+
+            // Repair the decoded variables by enforcing the bounds, if any.
+            // This step is necessary because the optimization might propose
+            // points slightly outside the bounds after decoding.
+            if (boundaries != null) {
+                for (int i = 0; i < decoded.length; i++) {
+                    // Ensure the value is not less than the lower bound.
+                    decoded[i] = Math.max(boundaries[0][i], decoded[i]);
+                    // Ensure the value is not greater than the upper bound.
+                    decoded[i] = Math.min(boundaries[1][i], decoded[i]);
+                }
+            }
+
+            // Return the repaired and decoded variables.
+            return decoded;
         }
\ No newline at end of file
