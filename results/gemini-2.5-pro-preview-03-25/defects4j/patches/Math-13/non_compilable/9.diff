diff --git a/tmp/036dcf60-2a8a-4fc0-92a8-156d56157651_buggy.java b/tmp/401f8a49-13ed-46eb-95af-8e40dfd86fc6_fixed.java
index 4e21866..54a8f81 100644
--- a/tmp/036dcf60-2a8a-4fc0-92a8-156d56157651_buggy.java
+++ b/tmp/401f8a49-13ed-46eb-95af-8e40dfd86fc6_fixed.java
@@ -1,10 +1,34 @@
+import org.apache.commons.math3.linear.DiagonalMatrix;
+import org.apache.commons.math3.linear.EigenDecomposition;
+import org.apache.commons.math3.linear.RealMatrix;
+import org.apache.commons.math3.util.FastMath;
+
     /**
      * Computes the square-root of the weight matrix.
      *
      * @param m Symmetric, positive-definite (weight) matrix.
      * @return the square-root of the weight matrix.
      */
     private RealMatrix squareRoot(RealMatrix m) {
+        if (m instanceof DiagonalMatrix) {
+            // Optimization for diagonal matrices, which are common for weights.
+            // The square root of a diagonal matrix is the diagonal matrix
+            // with the square roots of the original diagonal elements.
+            final double[] data = ((DiagonalMatrix) m).getData();
+            final int dim = data.length;
+            final double[] sqrtData = new double[dim];
+            for (int i = 0; i < dim; i++) {
+                // As per the Javadoc, m is positive-definite, implying diagonal elements are non-negative.
+                // EigenDecomposition would also likely fail for non-positive definite matrices.
+                sqrtData[i] = FastMath.sqrt(data[i]);
+            }
+            // Create a new DiagonalMatrix with the computed square roots.
+            // Pass 'false' to the constructor to avoid unnecessary copying of the new array.
+            return new DiagonalMatrix(sqrtData, false);
+        } else {
+            // Fallback to EigenDecomposition for general symmetric positive-definite matrices.
+            // This is computationally more expensive and memory-intensive.
             final EigenDecomposition dec = new EigenDecomposition(m);
             return dec.getSquareRoot();
         }
+    }
\ No newline at end of file
