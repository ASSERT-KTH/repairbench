diff --git a/tmp/43a34226-7385-4971-9113-36f4bbd8cd92_buggy.java b/tmp/92d73a78-9d2a-46fb-a0de-64ba5cc45270_fixed.java
index 072c672..e6ef708 100644
--- a/tmp/43a34226-7385-4971-9113-36f4bbd8cd92_buggy.java
+++ b/tmp/92d73a78-9d2a-46fb-a0de-64ba5cc45270_fixed.java
@@ -1,20 +1,34 @@
       @Override
       public int parseArguments(Parameters params) throws CmdLineException {
         String param = params.getParameter(0);
 
         if (param == null) {
+          // No value specified after the option (e.g., --flag). Interpret as true.
           setter.addValue(true);
+          // This handler consumes 0 *additional* arguments for the value.
           return 0;
         } else {
           String lowerParam = param.toLowerCase();
           if (TRUES.contains(lowerParam)) {
             setter.addValue(true);
+            // This handler consumes 1 argument (the value like "true").
+            return 1;
           } else if (FALSES.contains(lowerParam)) {
             setter.addValue(false);
-          } else {
-            setter.addValue(true);
-            return 0;
-          }
+            // This handler consumes 1 argument (the value like "false").
             return 1;
+          } else {
+            // An argument was provided, but it's not a recognized boolean value.
+            // The original code incorrectly set the value to true and returned 0,
+            // failing to consume the invalid argument.
+            // The correct behavior is typically to throw an exception.
+            // Assuming 'owner' is an accessible field from a superclass like OptionHandler.
+            throw new CmdLineException(owner, "\"" + param + "\" is not a valid value for this boolean option");
+            // If throwing an exception is not desired, and the previous behavior
+            // (defaulting to true but consuming the argument) was intended, it would be:
+            // setter.addValue(true);
+            // return 1; // Consume the argument that was provided
+            // However, throwing an exception is generally safer and more standard.
+          }
         }
       }
\ No newline at end of file
