diff --git a/tmp/090b4bc7-68e4-4d96-9d28-91554b56ee97_buggy.java b/tmp/036efbf3-ec04-495e-97cc-b72209acab4a_fixed.java
index 072c672..5f578d8 100644
--- a/tmp/090b4bc7-68e4-4d96-9d28-91554b56ee97_buggy.java
+++ b/tmp/036efbf3-ec04-495e-97cc-b72209acab4a_fixed.java
@@ -1,20 +1,49 @@
       @Override
       public int parseArguments(Parameters params) throws CmdLineException {
-        String param = params.getParameter(0);
+        String param = null;
+        try {
+            // Attempt to retrieve the next token in the command line argument list.
+            // getParameter(0) will throw CmdLineException if the next token starts with '-'
+            // (looks like an option) or if there are no more tokens.
+            param = params.getParameter(0);
+        } catch (CmdLineException e) {
+            // Exception means flag is present, but no associated value parameter follows.
+            // It could be the last arg (--flag) or followed by another option (--flag --other).
+            // Treat this case as the flag being present without an explicit value.
+            param = null;
+        }
 
         if (param == null) {
+          // No value provided after the flag, or the next token is another option.
+          // Interpret the presence of the flag as "true".
           setter.addValue(true);
+          // Return 0, indicating that no *parameter* arguments were consumed by this handler.
+          // The flag name itself is consumed by the parser framework.
           return 0;
         } else {
+          // A potential value parameter was found after the flag.
           String lowerParam = param.toLowerCase();
+
           if (TRUES.contains(lowerParam)) {
+            // The value is a recognized "true" string (e.g., --flag true).
             setter.addValue(true);
+            // Return 1, indicating that one parameter argument (the value) was consumed.
+            return 1;
           } else if (FALSES.contains(lowerParam)) {
+            // The value is a recognized "false" string (e.g., --flag false).
             setter.addValue(false);
+            // Return 1, indicating that one parameter argument (the value) was consumed.
+            return 1;
           } else {
+            // A value was provided, but it's not a recognized boolean string
+            // (e.g., --flag some_other_arg).
+            // Args4j convention for optional flag arguments: treat the flag as present (true),
+            // but do not consume the unrecognized value. It might be a positional argument
+            // or belong to a different option depending on parser configuration.
             setter.addValue(true);
+            // Return 0, indicating that the token `param` was NOT consumed by this handler.
+            // It remains available for further parsing by args4j.
             return 0;
           }
-          return 1;
         }
       }
\ No newline at end of file
