diff --git a/tmp/c4467279-83e3-4c79-b438-246c98a1e109_buggy.java b/tmp/c93f59f2-0aaf-467c-8e9d-39509cf0ba30_fixed.java
index e69de29..aa3d8a4 100644
--- a/tmp/c4467279-83e3-4c79-b438-246c98a1e109_buggy.java
+++ b/tmp/c93f59f2-0aaf-467c-8e9d-39509cf0ba30_fixed.java
@@ -0,0 +1,38 @@
+    /**
+     * Method called to output a field name when using specific serialized
+     * name.
+     *
+     * @param name Name to write
+     * @param commaBefore If true, need to write comma separator before name/value pair
+     *
+     * @since 2.0
+     */
+    protected void _writeFieldName(SerializableString name, boolean commaBefore) throws IOException
+    {
+        if (_cfgPrettyPrinter != null) {
+            _writePPFieldName(name, commaBefore);
+            return;
+        }
+        // Try to output separator sequence with checks for buffer overflow
+        if (commaBefore) {
+            _writer.write(',');
+        }
+        /* 22-Nov-2008, tatu: Non-standard ("javascript") comments? discouraged,
+         *   non-supported for now
+         */
+        // Note: we know keys are safe Strings, so no need to encode them;
+        // also, they are never empty.
+        if (isEnabled(Feature.QUOTE_FIELD_NAMES)) {
+            _writer.write('"');
+            // No real benefit from using append() since we have Caching?
+            // 05-Dec-2019, tatu: Wait. What? Caching is orthogonal, use append()
+//            final char[] cbuf = name.asQuotedChars();
+//            _writer.write(cbuf, 0, cbuf.length);
+            name.appendQuoted(_writer);
+            _writer.write('"');
+        } else {
+            // 14-Sep-2016, tatu: As per [core#312], `_writeString()` not correct...
+            // Also note: NO escaping applied
+            name.appendUnquoted(_writer);
+        }
+    }
\ No newline at end of file
