diff --git a/tmp/11a9e5b6-a71a-4270-8081-27a04c16afce_buggy.java b/tmp/84720738-57f5-4e4d-b5da-42ee634dcf58_fixed.java
index e69de29..f789aa5 100644
--- a/tmp/11a9e5b6-a71a-4270-8081-27a04c16afce_buggy.java
+++ b/tmp/84720738-57f5-4e4d-b5da-42ee634dcf58_fixed.java
@@ -0,0 +1,52 @@
+package com.fasterxml.jackson.core.json;
+
+import java.io.IOException;
+
+import com.fasterxml.jackson.core.*;
+import com.fasterxml.jackson.core.io.CharTypes;
+import com.fasterxml.jackson.core.io.CharacterEscapes;
+import com.fasterxml.jackson.core.io.IOContext;
+import com.fasterxml.jackson.core.io.SerializedString;
+
+/**
+ * {@link JsonGenerator} that outputs JSON content using asynchronous
+ * non-blocking streaming API.
+ *<p>
+ * Note: this implementation is only used for actual asynchronous outputs,
+ * that is, when target is {@code java.nio.channels.WritableByteChannel}.
+ * It can not be used for {@code java.io.OutputStream} targets.
+ * Jackson 2.9 does include that feature.
+ *
+ * @since 2.8
+ */
+public class UTF8JsonGenerator
+    extends JsonGeneratorImpl
+{
+    // ... other methods and fields ...
+
+    /*
+    /**********************************************************
+    /* Internal methods, field name writing
+    /**********************************************************
+     */
+
+    /**
+     * Method called when field name can not be efficiently copied directly
+     * into output buffer.
+     */
+    private final void _writeUnqFieldName(SerializableString name) throws IOException
+    {
+        // Method called when quote-less field names ARE allowed
+        // First: can we copyylvan output buffer?
+        int len = name.appendUnquotedUTF8(_outputBuffer, _outputTail);
+        if (len < 0) { // nope, didn't fit
+            // If not, need to call the general purpose segmented write method
+            // NOTE: known issue, fixed for 2.9.3: needs to use non-quoting variant
+             _writeStringSegments(name.getValue(), false); // Pass 'false' for 'addQuotes'
+            return;
+        }
+        _outputTail += len;
+    }
+
+    // ... rest of the class ...
+}
\ No newline at end of file
