diff --git a/tmp/626b9ebb-9437-4ed1-a44d-9208a929b9eb_buggy.java b/tmp/45792919-446c-49fc-afcd-6960a2ffa428_fixed.java
index 1c53d31..6b501b2 100644
--- a/tmp/626b9ebb-9437-4ed1-a44d-9208a929b9eb_buggy.java
+++ b/tmp/45792919-446c-49fc-afcd-6960a2ffa428_fixed.java
@@ -1,20 +1,26 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      // Instantiate the factory first
+      TypeAdapterFactory factory = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
+          .construct();
+      // Now create the TypeAdapter using the factory. create() can return null.
+      typeAdapter = factory.create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+
+    // It's possible that the TypeAdapterFactory returns null, so we need to check before calling nullSafe().
+    if (typeAdapter != null) {
       typeAdapter = typeAdapter.nullSafe();
+    }
     return typeAdapter;
   }
\ No newline at end of file
