diff --git a/tmp/19bb30b8-3a69-460b-97b0-e6a94d0040dd_buggy.java b/tmp/7d04bd53-c4c3-4d23-8654-c109f8cd5201_fixed.java
index 25217b6..d396718 100644
--- a/tmp/19bb30b8-3a69-460b-97b0-e6a94d0040dd_buggy.java
+++ b/tmp/7d04bd53-c4c3-4d23-8654-c109f8cd5201_fixed.java
@@ -1,14 +1,25 @@
     /**
      Set the attribute value.
      @param val the new attribute value; must not be null
+     @return the previous value
      */
     public String setValue(String val) {
-        String oldVal = parent.get(this.key);
+        String oldVal;
         if (parent != null) {
+            // If attached to Attributes, fetch the *actual* old value from the parent,
+            // and update the parent's storage.
+            oldVal = parent.get(this.key); // Get the canonical old value from parent
             int i = parent.indexOfKey(this.key);
-            if (i != Attributes.NotFound)
-                parent.vals[i] = val;
+            if (i != Attributes.NotFound) {
+                parent.vals[i] = val; // Update value in parent's array
             }
+        } else {
+            // If orphan attribute, the old value is its current value
+            oldVal = this.val;
+        }
+        // Update the value in this Attribute object itself.
         this.val = val;
-        return Attributes.checkNotNull(oldVal);
+        // Return the value that was replaced. For orphan nodes, it's the previous this.val.
+        // For attached nodes, it's the value previously stored in the parent's Attributes.
+        return oldVal; // Previous impl returned Attributes.checkNotNull(oldVal), but test expects actual old value.
     }
\ No newline at end of file
