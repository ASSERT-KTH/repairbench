diff --git a/tmp/dbf3b69a-ad37-4633-8fc0-e617c07640a6_buggy.java b/tmp/7ba784c7-73cc-4810-9950-9d32cbe23fd9_fixed.java
index 25217b6..2e2e5c8 100644
--- a/tmp/dbf3b69a-ad37-4633-8fc0-e617c07640a6_buggy.java
+++ b/tmp/7ba784c7-73cc-4810-9950-9d32cbe23fd9_fixed.java
@@ -1,14 +1,29 @@
     /**
      Set the attribute value.
      @param val the new attribute value; must not be null
+     @return the original value; see {@link #getValue()}
      */
     public String setValue(String val) {
-        String oldVal = parent.get(this.key);
+        // Store the old value of this attribute instance first.
+        String oldVal = this.val;
+
+        // If this attribute is part of an Attributes collection (parent != null),
+        // update the value in that collection as well.
         if (parent != null) {
+            // Find the index of this attribute's key in the parent Attributes.
             int i = parent.indexOfKey(this.key);
-            if (i != Attributes.NotFound)
+            // If the key is found in the parent, update the corresponding value in the parent's internal array.
+            if (i != Attributes.NotFound) {
                 parent.vals[i] = val;
             }
+        }
+
+        // Update the value of this attribute instance.
         this.val = val;
-        return Attributes.checkNotNull(oldVal);
+
+        // Return the original value of this attribute instance.
+        // Note: The original code fetched from parent and used Attributes.checkNotNull,
+        // but returning this.val directly aligns better with the method's purpose on an Attribute
+        // and fixes the NPE when parent is null. It also matches the expectation of the failing test.
+        return oldVal;
     }
\ No newline at end of file
