diff --git a/tmp/9dbff126-c399-4c4a-bae9-4b57f66b2d60_buggy.java b/tmp/bae3f6a3-d8ff-435f-b683-3f8b874c8bea_fixed.java
index 351a97a..0c4f603 100644
--- a/tmp/9dbff126-c399-4c4a-bae9-4b57f66b2d60_buggy.java
+++ b/tmp/bae3f6a3-d8ff-435f-b683-3f8b874c8bea_fixed.java
@@ -1,18 +1,36 @@
+import org.jfree.chart.util.ShapeUtilities; // Required import
+import java.awt.Shape; // Required import
+
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
+    @Override
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
+        // Note: Subclasses are deliberately excluded to match the behaviour
+        // of the AbstractObjectList.equals() method.
         if (!(obj instanceof ShapeList)) {
              return false;
         }
-        return super.equals(obj);
+        ShapeList other = (ShapeList) obj;
+        int size = size();
+        if (size != other.size()) {
+            return false;
+        }
+        for (int i = 0; i < size; i++) {
+            Shape s1 = getShape(i);
+            Shape s2 = other.getShape(i);
+            if (!ShapeUtilities.equal(s1, s2)) {
+                return false;
+            }
+        }
+        return true;
 
     }
\ No newline at end of file
