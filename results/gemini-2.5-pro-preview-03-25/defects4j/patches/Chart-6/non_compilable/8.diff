diff --git a/tmp/c58428a3-c24f-4e75-a875-5e401bc24a5e_buggy.java b/tmp/1b498bcc-c813-4c83-8796-b6d12f790526_fixed.java
index 351a97a..0b1a9c3 100644
--- a/tmp/c58428a3-c24f-4e75-a875-5e401bc24a5e_buggy.java
+++ b/tmp/1b498bcc-c813-4c83-8796-b6d12f790526_fixed.java
@@ -1,18 +1,34 @@
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
+    @Override
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
+        // We deliberately don't handle the AbstractObjectList case, because
+        // we need to compare using ShapeUtilities.equal().
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
+        ShapeList other = (ShapeList) obj;
+        int size = size();
+        if (size != other.size()) {
+            return false;
+        }
+        for (int i = 0; i < size; i++) {
+            Shape s1 = getShape(i);
+            Shape s2 = other.getShape(i);
+            // ShapeUtilities.equal() handles null arguments safely.
+            if (!ShapeUtilities.equal(s1, s2)) {
+                 return false;
+            }
+        }
+        return true;
 
     }
\ No newline at end of file
