diff --git a/tmp/48f0ae6d-dad5-40c3-9139-5452babf2d07_buggy.java b/tmp/6bad43c5-154a-4914-a8c9-f7201dad4e58_fixed.java
index 351a97a..fa13696 100644
--- a/tmp/48f0ae6d-dad5-40c3-9139-5452babf2d07_buggy.java
+++ b/tmp/6bad43c5-154a-4914-a8c9-f7201dad4e58_fixed.java
@@ -1,18 +1,38 @@
+import org.jfree.chart.util.ShapeUtilities; // Required import
+import java.awt.Shape; // Required import
+
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
+    @Override
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
+        // We cannot rely on super.equals() because it uses ObjectUtilities.equal()
+        // which may not be appropriate for comparing Shape objects. We need
+        // ShapeUtilities.equal().
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
+        ShapeList that = (ShapeList) obj;
+        int listSize = size();
+        if (listSize != that.size()) {
+            return false;
+        }
+        for (int i = 0; i < listSize; i++) {
+            Shape s1 = getShape(i);
+            Shape s2 = that.getShape(i);
+            // Use ShapeUtilities.equal which handles nulls and compares shapes correctly
+            if (!ShapeUtilities.equal(s1, s2)) {
+                return false;
+            }
+        }
+        return true;
 
     }
\ No newline at end of file
