diff --git a/tmp/bf78784a-7921-47ad-996a-48b3b3e5be91_buggy.java b/tmp/bee53953-7426-48e4-bc8a-3552973eff6a_fixed.java
index 351a97a..5d21d11 100644
--- a/tmp/bf78784a-7921-47ad-996a-48b3b3e5be91_buggy.java
+++ b/tmp/bee53953-7426-48e4-bc8a-3552973eff6a_fixed.java
@@ -1,18 +1,35 @@
+import org.jfree.chart.util.ShapeUtilities; // Required import
+import java.awt.Shape; // Required import
+
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
+        // We don't use instanceof because AbstractObjectList is subclassable,
+        // and we want subclasses to be non-equal.
         if (!(obj instanceof ShapeList)) {
              return false;
         }
-        return super.equals(obj);
+        ShapeList other = (ShapeList) obj;
+        int size = size();
+        if (size != other.size()) {
+            return false;
+        }
+        for (int i = 0; i < size; i++) {
+            Shape s1 = (Shape) get(i);
+            Shape s2 = (Shape) other.get(i);
+            if (!ShapeUtilities.equal(s1, s2)) {
+                return false;
+            }
+        }
+        return true;
 
     }
\ No newline at end of file
