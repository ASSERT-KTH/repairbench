diff --git a/tmp/5aaf38ad-1b3e-4459-97a0-65a4d67294cb_buggy.java b/tmp/3574e318-96c1-4106-8780-763f869032ce_fixed.java
index c6b65da..aec485b 100644
--- a/tmp/5aaf38ad-1b3e-4459-97a0-65a4d67294cb_buggy.java
+++ b/tmp/3574e318-96c1-4106-8780-763f869032ce_fixed.java
@@ -1,25 +1,33 @@
     /**
      * Returns the options with a long name starting with the name specified.
      *
      * @param opt the partial name of the option
      * @return the options matching the partial name specified, or an empty list if none matches
      * @since 1.3
      */
     public List<String> getMatchingOptions(String opt)
     {
         opt = Util.stripLeadingHyphens(opt);
 
-        List<String> matchingOpts = new ArrayList<String>();
-
         // for a perfect match return the single option only
+        if (longOpts.containsKey(opt))
+        {
+            // Return exact match directly, avoid ambiguity check below
+            // Note: Using Collections.singletonList might be slightly more efficient
+            // but ArrayList is consistent with the original return type's intent.
+             List<String> matchingOpts = new ArrayList<>(1);
+             matchingOpts.add(opt);
+             return matchingOpts;
+        }
 
+        List<String> matchingOpts = new ArrayList<String>();
         for (String longOpt : longOpts.keySet())
         {
             if (longOpt.startsWith(opt))
             {
                 matchingOpts.add(longOpt);
             }
         }
 
         return matchingOpts;
     }
\ No newline at end of file
