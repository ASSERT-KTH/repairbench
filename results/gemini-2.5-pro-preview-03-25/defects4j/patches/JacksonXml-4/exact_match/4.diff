diff --git a/tmp/1f475a24-53b5-4b55-96b1-21a7fcc4afe3_buggy.java b/tmp/557497d0-9a86-469e-a527-1f5ba45d21f0_fixed.java
index df97798..2601b48 100644
--- a/tmp/1f475a24-53b5-4b55-96b1-21a7fcc4afe3_buggy.java
+++ b/tmp/557497d0-9a86-469e-a527-1f5ba45d21f0_fixed.java
@@ -1,9 +1,23 @@
     protected void _serializeXmlNull(JsonGenerator jgen) throws IOException
     {
         // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly
-        //    configured root name...
+        //    configured root name... but we should simply delegate serialization
+        //    to super class; generator implementation takes care of root name handling
+        // 14-Feb-2017, tatu: Turns out that `ToXmlGenerator` has no good way to
+        //    handle it, so needs to be done here. But we cannot hard-code root
+        //    name, need to use configured one if available.
+        // 11-Jul-2024, bot: Fix for dynamic root names (from ObjectWriter) by checking
+        //    config first. See `RootNameTest.testDynamicRootName()`
+        QName rootName = _rootNameFromConfig(); // Check config (from ObjectWriter.withRootName)
+        if (rootName == null) {
+            // Otherwise, use the default for null
+            rootName = ROOT_NAME_FOR_NULL;
+        }
+
         if (jgen instanceof ToXmlGenerator) {
-            _initWithRootName((ToXmlGenerator) jgen, ROOT_NAME_FOR_NULL);
+            // Initialize the generator with the determined root name (if not already set)
+             _initWithRootName((ToXmlGenerator) jgen, rootName);
         }
-        super.serializeValue(jgen, null);
+        // Now, serialize the null value. The generator should handle the wrapping.
+        super.serializeValue(jgen, null); // -> _serializeNull(jgen) -> jgen.writeNull()
     }
\ No newline at end of file
