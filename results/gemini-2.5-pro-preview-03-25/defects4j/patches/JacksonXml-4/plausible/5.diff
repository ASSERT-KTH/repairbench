diff --git a/tmp/0107898e-fba6-498e-9203-2421df9f31bc_buggy.java b/tmp/f03ee712-cb59-4f40-93fb-15b0e461da4e_fixed.java
index df97798..e1d6d7e 100644
--- a/tmp/0107898e-fba6-498e-9203-2421df9f31bc_buggy.java
+++ b/tmp/f03ee712-cb59-4f40-93fb-15b0e461da4e_fixed.java
@@ -1,9 +1,32 @@
     protected void _serializeXmlNull(JsonGenerator jgen) throws IOException
     {
         // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly
         //    configured root name...
         if (jgen instanceof ToXmlGenerator) {
-            _initWithRootName((ToXmlGenerator) jgen, ROOT_NAME_FOR_NULL);
+            ToXmlGenerator xgen = (ToXmlGenerator) jgen;
+            QName rootName = null;
+
+            // Check for explicitly configured root name from SerializationConfig
+            PropertyName pname = _config.getFullRootName();
+
+            // Use configured name if available and non-empty...
+            if (pname != null && pname != PropertyName.NO_NAME && !pname.isEmpty()) {
+                 // Construct QName from PropertyName.
+                 // Use empty string for no namespace, as per QName constructor javadoc
+                 String ns = pname.getNamespace();
+                 if (ns == null) {
+                     ns = "";
                  }
+                 rootName = new QName(ns, pname.getSimpleName());
+            } else {
+                 // ...otherwise use the default placeholder for null
+                 rootName = ROOT_NAME_FOR_NULL;
+            }
+            // This method ensures that the root element is started with the correct name,
+            // if not already started.
+            _initWithRootName(xgen, rootName);
+        }
+        // Regardless of root name setting, serialize actual null value
+        // which in XML means possibly an empty element, or explicit nil maybe
         super.serializeValue(jgen, null);
     }
\ No newline at end of file
