diff --git a/tmp/604b0f0a-53ca-43ad-8c3a-c40ee2d6a523_buggy.java b/tmp/16d56e00-3284-4c32-9736-da98586fd931_fixed.java
index df97798..96187c7 100644
--- a/tmp/604b0f0a-53ca-43ad-8c3a-c40ee2d6a523_buggy.java
+++ b/tmp/16d56e00-3284-4c32-9736-da98586fd931_fixed.java
@@ -1,9 +1,38 @@
     protected void _serializeXmlNull(JsonGenerator jgen) throws IOException
     {
-        // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly
-        //    configured root name...
+        // As per [dataformat-xml#213], we may need to write explicit root element.
+        // Also, may have explicitly configured root name to use.
         if (jgen instanceof ToXmlGenerator) {
-            _initWithRootName((ToXmlGenerator) jgen, ROOT_NAME_FOR_NULL);
+            ToXmlGenerator xgen = (ToXmlGenerator) jgen;
+            // [dataformat-xml#144]: Need to ensure indentation is enabled/disabled
+            // properly for root element as well
+            xgen.configure(_config.getSerializationFeatures()); // Make sure features are set
+
+            PropertyName rootNameProp = _config.getRootName();
+            QName rootName;
+            if (rootNameProp == null) {
+                // 14-Nov-2016, tatu: Should default to "null" (like JSON); was `""` earlier
+                //    which does not seem right as XML requires name. Default changed for 2.9.
+                rootName = ROOT_NAME_FOR_NULL;
+            } else {
+                // If we have namespace, should use it; otherwise, none specified
+                String ns = rootNameProp.getNamespace();
+                // QName requires non-empty namespace, although PropertyName may have empty.
+                // Also: QName constructor defaults to XMLConstants.NULL_NS_URI which is "",
+                // so let's use that.
+                if (ns != null && ns.isEmpty()) {
+                    ns = null;
                 }
+                rootName = new QName(ns, rootNameProp.getSimpleName());
+            }
+
+            // Ok, simple case: empty element, but with name...
+            xgen.setNextName(rootName);
+            xgen.writeStartObject();
+            // M الناتج needs to be just `<tag/>` not `<tag></tag>`
+            xgen.writeEndObject();
+        } else {
+             // Otherwise, standard null serialization is fine
              super.serializeValue(jgen, null);
         }
+    }
\ No newline at end of file
