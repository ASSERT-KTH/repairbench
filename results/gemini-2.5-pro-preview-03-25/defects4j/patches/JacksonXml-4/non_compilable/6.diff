diff --git a/tmp/e53ff953-14a4-498b-9333-67d1aa2cf444_buggy.java b/tmp/2a96f712-9a24-4514-9818-c065bb7e8b83_fixed.java
index df97798..02ebcb0 100644
--- a/tmp/e53ff953-14a4-498b-9333-67d1aa2cf444_buggy.java
+++ b/tmp/2a96f712-9a24-4514-9818-c065bb7e8b83_fixed.java
@@ -1,9 +1,29 @@
     protected void _serializeXmlNull(JsonGenerator jgen) throws IOException
     {
         // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly
         //    configured root name...
+        // 12-Jun-2017, tatu: ... and that root name should be used for nulls too [dataformat-xml#244]
         if (jgen instanceof ToXmlGenerator) {
-            _initWithRootName((ToXmlGenerator) jgen, ROOT_NAME_FOR_NULL);
+            ToXmlGenerator xgen = (ToXmlGenerator) jgen;
+            // Check configuration for explicitly configured root name
+            final PropertyName rootName = _config.getRootName();
+            final QName qname;
+            if (rootName == null) {
+                 // If no root name configured, use the default for null
+                 qname = ROOT_NAME_FOR_NULL;
+            } else {
+                 // Otherwise, use the configured root name.
+                 // We'll construct QName using simple name for local part,
+                 // and namespace if specified (otherwise empty String)
+                 String ns = rootName.getNamespace();
+                 // ToXmlGenerator needs actual namespace, "" means "no namespace"
+                 if (ns == null) {
+                     ns = "";
                  }
+                 qname = new QName(ns, rootName.getSimpleName());
+            }
+            _initWithRootName(xgen, qname);
+        }
+        // Regardless, serialize the null value itself
         super.serializeValue(jgen, null);
     }
