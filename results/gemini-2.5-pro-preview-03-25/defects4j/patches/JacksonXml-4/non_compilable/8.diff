diff --git a/tmp/05514359-bcc2-446a-bf2b-0c938e89767c_buggy.java b/tmp/5c059af7-c609-4263-967e-c6fdd3174b53_fixed.java
index df97798..d279590 100644
--- a/tmp/05514359-bcc2-446a-bf2b-0c938e89767c_buggy.java
+++ b/tmp/5c059af7-c609-4263-967e-c6fdd3174b53_fixed.java
@@ -1,9 +1,35 @@
     protected void _serializeXmlNull(JsonGenerator jgen) throws IOException
     {
         // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly
-        //    configured root name...
+        //    configured root name... And that may override the default/implicit 'null' name
         if (jgen instanceof ToXmlGenerator) {
-            _initWithRootName((ToXmlGenerator) jgen, ROOT_NAME_FOR_NULL);
+            ToXmlGenerator xmlGen = (ToXmlGenerator) jgen;
+            PropertyName rootNameProp = null;
+            // Check if root wrapping enabled and root name configured
+            // Note: _rootName is the configured root name from SerializationConfig
+            // (see XmlSerializerProvider constructor), and needs to be respected
+            // Also note: if root name is explicitly set to "null", should use that
+            if (_config.isRootWrappingEnabled() && _rootName != null) {
+                // Let's not block "null" itself
+                String simple = _rootName.getSimpleName();
+                if (!simple.isEmpty()) {
+                     // but empty name is problematic, use default
+                    rootNameProp = _rootName;
                 }
+            }
+
+            if (rootNameProp == null) {
+                // No root name configured or it was empty, use default <null/>
+                // _initWithRootName will call setNextNameIfMissing(ROOT_NAME_FOR_NULL) and initGenerator()
+                _initWithRootName(xmlGen, ROOT_NAME_FOR_NULL);
+            } else {
+                // Configured root name exists. Set it and initialize the generator.
+                // `setNextName` handles PropertyName -> QName conversion.
+                xmlGen.setNextName(rootNameProp);
+                xmlGen.initGenerator();
+            }
+        }
+        // This will call NullSerializer.serialize, which calls jgen.writeNull().
+        // ToXmlGenerator.writeNull() will use the _nextName set above.
         super.serializeValue(jgen, null);
     }
