diff --git a/tmp/59a2afb1-755f-4b9c-9e4a-d2f3900a0a60_buggy.java b/tmp/1d2148f1-7257-4a3a-923a-21db35666327_fixed.java
index a7f0d46..30e11c9 100644
--- a/tmp/59a2afb1-755f-4b9c-9e4a-d2f3900a0a60_buggy.java
+++ b/tmp/1d2148f1-7257-4a3a-923a-21db35666327_fixed.java
@@ -1,22 +1,42 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
+    char last = getLastChar(); // Get the last character appended.
+
+    // Check if the last character appended was a word character (letter, number, underscore)
+    // and the new character is also a word character or a backslash.
+    // If so, add a space to separate them (e.g., "return" + "foo" -> "return foo").
     if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
+        isWordChar(last)) {
       // need space to separate. This is not pretty printing.
       // For example: "return foo;"
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
+    // Add a space if the last character was '/' and the new code starts with '/',
+    // to avoid ambiguity with comments or division operators, e.g., // or / /.
+    // This specifically addresses issues like printing / / / as / // /.
+    } else if (c == '/' && last == '/') {
+      // Do not allow a forward slash to appear immediately after a
+      // slash. For example,
       // REGEXP DIV REGEXP
       // is valid and should print like
       // / // / /
+      // Note that this is different from the case where the first slash
+      // isCOMMENT. We don't handle that case here.
+
+      // REGEXP REGEXP
+      // is valid and should print like
+      // / / / /
+
+      // MOD ZERO
+      // is valid and should print like
+      // % 0
+      append(" ");
     }
 
     append(newcode);
   }
\ No newline at end of file
