diff --git a/tmp/6b945e12-a44c-4640-a206-61d63059ea93_buggy.java b/tmp/149481cf-00aa-4df9-bcd3-c730088c4134_fixed.java
index a7f0d46..1fb15d1 100644
--- a/tmp/6b945e12-a44c-4640-a206-61d63059ea93_buggy.java
+++ b/tmp/149481cf-00aa-4df9-bcd3-c730088c4134_fixed.java
@@ -1,22 +1,38 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
-    if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
+    // getLastChar should be called after maybeEndStatement, as that function
+    // can change the state of the buffer.
+    char last = getLastChar();
+
+    // Avoids consecutive word chars. ex: return foo; -> return foo;
+    if ((isWordChar(c) || c == '\\') && isWordChar(last)) {
       // need space to separate. This is not pretty printing.
       // For example: "return foo;"
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
+    // Note: we don't need similar logic for numeric literals because
+    // that is handled separately by the numberOutputFormatter.
+    // --
+    // Do not allow a forward slash to appear immediately after a forward slash,
+    // as that has significance in JavaScript (comments, regexes).
     // For example,
     // REGEXP DIV REGEXP
     // is valid and should print like
     // / // / /
+    // But,
+    // / // / /
+    // is invalid. / followed immediately by / is bad.
+    // / \/ / is the only safe way to print / / according to EcmaScript $7.8.5
+    // http://code.google.com/p/closure-compiler/issues/detail?id=620
+    } else if (c == '/' && last == '/') {
+      // Avoids // which is ambiguous, ex: / / / / -> / \/ / /
+      append(" ");
     }
 
     append(newcode);
   }
\ No newline at end of file
