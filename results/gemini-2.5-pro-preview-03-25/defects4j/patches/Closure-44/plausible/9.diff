diff --git a/tmp/c924fae5-6b07-41e9-a869-dd85de5f8288_buggy.java b/tmp/d77e9f63-1e27-4b74-988b-95a0178e9f04_fixed.java
index a7f0d46..4dbe625 100644
--- a/tmp/c924fae5-6b07-41e9-a869-dd85de5f8288_buggy.java
+++ b/tmp/d77e9f63-1e27-4b74-988b-95a0178e9f04_fixed.java
@@ -1,22 +1,34 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
+    // getLastChar() needs to be called before any potential append(" ")
+    // to ensure we get the char actually before newcode.
+    char last = getLastChar();
+
+    // Ensure a space after keywords or operators preceding identifier start chars.
+    // or backslash. This is not pretty printing, it is required for correctness.
+    // e.g. "return foo;"
     if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+        isWordChar(last)) {
+      append(" ");
+    // Don't let / appear immediately after /. This is important in two contexts:
+    // 1. Escaping / in regexps: / / / -> / \/ /
+    //    The tokenizer should normally handle this, but if we are feeding raw
+    //    strings that contain //, we need to escape it.
+    // 2. Placing space between division operators / and regexp literals /:
+    //    For example, / // / / needs a space. This is handled by the code
+    //    generator inserting "/" between the regexp and the / operator.
+    // This specifically addresses the case where the code generator does something like
+    // addRegexp(...) then add("/"). If the regexp ends in '/', and the next token
+    // is '/', we need a space. This fixes Issue 620.
+    } else if (c == '/' && last == '/') {
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
     }
 
     append(newcode);
   }
\ No newline at end of file
