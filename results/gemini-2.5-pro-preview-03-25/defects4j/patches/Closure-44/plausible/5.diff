diff --git a/tmp/9d61e317-dabf-4e5c-99c5-09428e4260d5_buggy.java b/tmp/08a5197b-d66a-4eba-83b7-5f65a63d32f0_fixed.java
index a7f0d46..b2bf47c 100644
--- a/tmp/9d61e317-dabf-4e5c-99c5-09428e4260d5_buggy.java
+++ b/tmp/08a5197b-d66a-4eba-83b7-5f65a63d32f0_fixed.java
@@ -1,22 +1,34 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
+    char last = getLastChar(); // Get the last character appended.
+
+    // Condition 1: Separate alphanumeric words. Needed for "return foo;"
     if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+        isWordChar(last)) {
+      // Need space to separate identifiers, keywords, numbers, etc.
+      // This is not pretty printing, but ensures correctness.
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
     }
+    // Condition 2: Handle slashes ambiguity, specifically REGEXP / REGEXP.
+    // Add a space if the previous character was '/' and the new code starts
+    // with '/' BUT only if the new code represents a REGEXP (heuristic: length > 1).
+    // This prevents printing "/ /// /" for "/ / / / /" and ensures "/ // / /".
+    // See https://github.com/google/closure-compiler/issues/620.
+    else if (last == '/' && c == '/' && newcode.length() > 1) {
+        // Heuristic: If the string being added starts with '/' and is longer
+        // than just "/", assume it's a RegExp literal following a '/'.
+        // Add a space to avoid ambiguity like /regexp/ / /regexp/.
+        append(" ");
+    }
+    // Note: The original comment about not allowing '/' after DIV was placed
+    // inside the previous 'if' block, which was confusing. This new 'else if'
+    // block implements the necessary logic.
 
     append(newcode);
   }
\ No newline at end of file
