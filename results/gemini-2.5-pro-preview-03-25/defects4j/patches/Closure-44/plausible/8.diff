diff --git a/tmp/14f33e8d-e204-4225-9244-48b3fdca9aa2_buggy.java b/tmp/18cd7eb6-0016-44cf-9bd4-80e5115b39e3_fixed.java
index a7f0d46..aea61c7 100644
--- a/tmp/14f33e8d-e204-4225-9244-48b3fdca9aa2_buggy.java
+++ b/tmp/18cd7eb6-0016-44cf-9bd4-80e5115b39e3_fixed.java
@@ -1,22 +1,30 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
-    if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+    char last = getLastChar(); // Store the last character
+
+    // Condition 1: Separate word characters, or backslash followed by word character.
+    // Prevents "returnfoo" -> "return foo"
+    if ((isWordChar(c) || c == '\\') && isWordChar(last)) {
+      append(" ");
+
+    // Condition 2: Prevent ambiguity when a regex literal follows a division operator
+    // or another regex literal.
+    // Example: /a/ / /b/ should print "/a/ / /b/" not "/a///b/"
+    // Example: /a/ / 1 should print "/a/ / 1" not "/a//1" (although less ambiguous)
+    // We add a space if the new code starts with '/' AND the last character was '/',
+    // but ONLY if the new code is not the division operator itself "/". This heuristic
+    // assumes that "add("/")" is used for the division operator and "add("/.../")" is
+    // used for regex literals.
+    } else if (c == '/' && last == '/' && !newcode.equals("/")) {
+      // Add a space before appending the regex literal.
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
     }
 
     append(newcode);
   }
\ No newline at end of file
