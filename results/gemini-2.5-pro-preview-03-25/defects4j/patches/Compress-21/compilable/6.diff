diff --git a/tmp/c9b28d2e-f352-4531-a7d6-4a50fa4c89f9_buggy.java b/tmp/993fc76e-dc21-4b61-a459-988fa47decb5_fixed.java
index ce3d60f..690a809 100644
--- a/tmp/c9b28d2e-f352-4531-a7d6-4a50fa4c89f9_buggy.java
+++ b/tmp/993fc76e-dc21-4b61-a459-988fa47decb5_fixed.java
@@ -1,16 +1,23 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
         int shift = 7;
         for (int i = 0; i < length; i++) {
             cache |= ((bits.get(i) ? 1 : 0) << shift);
             --shift;
-            if (shift == 0) {
+            // If shift has gone below zero, we have filled a byte (8 bits)
+            if (shift < 0) {
                 header.write(cache);
-                shift = 7;
-                cache = 0;
+                shift = 7; // Reset shift for the next byte
+                cache = 0; // Reset cache for the next byte
             }
         }
-        if (length > 0 && shift > 0) {
+        // If shift is not 7, it means there are remaining bits in the cache
+        // that haven't formed a full byte yet (i.e., length was not a multiple of 8).
+        // We need to write this final partial byte.
+        // This check also correctly handles the case where length is a multiple of 8,
+        // as shift would have been reset to 7 in the last iteration's write, making the condition false.
+        // It also handles length == 0 correctly, as the loop doesn't run and shift remains 7.
+        if (shift != 7) {
             header.write(cache);
         }
     }
\ No newline at end of file
