diff --git a/tmp/29e08bb3-6d32-4d7f-8806-094131385b33_buggy.java b/tmp/66ad72dd-9a92-41c5-aae2-30d0139a4b06_fixed.java
index ce3d60f..d412038 100644
--- a/tmp/29e08bb3-6d32-4d7f-8806-094131385b33_buggy.java
+++ b/tmp/66ad72dd-9a92-41c5-aae2-30d0139a4b06_fixed.java
@@ -1,16 +1,21 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
-        int shift = 7;
+        int shift = 7; // Current bit position (7 is MSB, 0 is LSB)
         for (int i = 0; i < length; i++) {
+            // Add the i-th bit to the cache at the 'shift' position
             cache |= ((bits.get(i) ? 1 : 0) << shift);
-            --shift;
-            if (shift == 0) {
-                header.write(cache);
-                shift = 7;
-                cache = 0;
-            }
-        }
-        if (length > 0 && shift > 0) {
-            header.write(cache);
+            if (shift == 0) { // Have we filled the byte (processed bits 7 down to 0)?
+                header.write(cache); // Write the complete byte
+                shift = 7;           // Reset shift for the next byte
+                cache = 0;           // Reset cache for the next byte
+            } else {
+                shift--;             // Move to the next lower bit position
+            }
+        }
+        // If there are any remaining bits in the cache (i.e., length wasn't a multiple of 8)
+        // and at least one bit was processed.
+        // This condition is met if the loop ran and didn't end exactly after writing a full byte.
+        if (length > 0 && shift != 7) {
+            header.write(cache); // Write the last, possibly partial, byte
         }
     }
\ No newline at end of file
