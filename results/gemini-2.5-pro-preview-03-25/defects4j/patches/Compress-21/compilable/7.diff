diff --git a/tmp/b1f54e60-46af-41e9-a175-d89b5ffbfda6_buggy.java b/tmp/32ff3574-a899-4bf1-8ff9-529df8b7b6d1_fixed.java
index ce3d60f..7a16e02 100644
--- a/tmp/b1f54e60-46af-41e9-a175-d89b5ffbfda6_buggy.java
+++ b/tmp/32ff3574-a899-4bf1-8ff9-529df8b7b6d1_fixed.java
@@ -1,16 +1,22 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
         int shift = 7;
         for (int i = 0; i < length; i++) {
             cache |= ((bits.get(i) ? 1 : 0) << shift);
             --shift;
-            if (shift == 0) {
+            // Check if 8 bits have been accumulated (shift becomes -1)
+            if (shift < 0) {
                 header.write(cache);
-                shift = 7;
-                cache = 0;
+                shift = 7; // Reset shift for the next byte
+                cache = 0; // Reset cache
             }
         }
-        if (length > 0 && shift > 0) {
+        // If there are any remaining bits in the cache after the loop
+        // (i.e., length was not a multiple of 8), write the last partial byte.
+        // The condition shift < 7 ensures we only write if bits were added to cache
+        // since the last full byte write (or if length < 8).
+        // We also need length > 0 to avoid writing a byte when no bits were processed.
+        if (length > 0 && shift < 7) {
             header.write(cache);
         }
     }
\ No newline at end of file
