diff --git a/tmp/823426fb-6b8a-40f6-a6fa-cffd70f89d42_buggy.java b/tmp/8fb045b2-d403-4dcb-967e-945fbcd27ec2_fixed.java
index ba2718f..b17a89c 100644
--- a/tmp/823426fb-6b8a-40f6-a6fa-cffd70f89d42_buggy.java
+++ b/tmp/8fb045b2-d403-4dcb-967e-945fbcd27ec2_fixed.java
@@ -1,7 +1,24 @@
   /**
-   * ContextTypeExpression := BasicTypeExpression | '?'
+   * ContextTypeExpression := BasicTypeExpression | '?' | '*'
    * For expressions on the right hand side of a this: or new:
    */
   private Node parseContextTypeExpression(JsDocToken token) {
+    if (token == JsDocToken.QMARK) {
+      token = nextToken(); // Consume '?'
+      // Return a node representing the unknown type '?'
+      Node node = IR.string("?");
+      node.setStaticSourceFile(templateNode.getStaticSourceFile());
+      node.setLength(1);
+      return node;
+    } else if (token == JsDocToken.STAR) {
+      token = nextToken(); // Consume '*'
+      // Return a node representing the all type '*'
+      Node node = IR.string("*");
+      node.setStaticSourceFile(templateNode.getStaticSourceFile());
+      node.setLength(1);
+      return node;
+    } else {
+      // It's a BasicTypeExpression
       return parseTypeName(token);
     }
+  }
\ No newline at end of file
