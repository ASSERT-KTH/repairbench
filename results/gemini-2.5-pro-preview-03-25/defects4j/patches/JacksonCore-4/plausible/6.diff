diff --git a/tmp/51a3e153-ca2c-4c28-8c13-6fd9cb8811d8_buggy.java b/tmp/7011199d-199a-4a03-83ab-3b91e43470f6_fixed.java
index c6cb157..2a5a3b5 100644
--- a/tmp/51a3e153-ca2c-4c28-8c13-6fd9cb8811d8_buggy.java
+++ b/tmp/7011199d-199a-4a03-83ab-3b91e43470f6_fixed.java
@@ -1,14 +1,26 @@
     /**
      * Method called to expand size of the current segment, to
      * accommodate for more contiguous content. Usually only
      * used when parsing tokens like names if even then.
      */
     public char[] expandCurrentSegment()
     {
         final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
         final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        int newLen;
+
+        // If we are already at or over maximum, enlarge just by minimal amount (1 char)
+        // (hoping this is temporary)
+        if (len >= MAX_SEGMENT_LEN) {
+            // Fail-safe expansion, need to increase by at least 1
+            newLen = len + 1;
+        } else {
+            // Otherwise grow by 50%, but capped at maximum
+            newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+            // Also must ensure we grow at least by one (important for len=0, len=1)
+            if (newLen == len) {
+                newLen = len + 1;
+            }
+        }
         return (_currentSegment = Arrays.copyOf(curr, newLen));
     }
\ No newline at end of file
