diff --git a/tmp/2862e963-2af4-451d-bbf0-ce00dc6e86a7_buggy.java b/tmp/37013bc4-cd42-47fe-8c40-873f899a823b_fixed.java
index c3986cc..cc52a9c 100644
--- a/tmp/2862e963-2af4-451d-bbf0-ce00dc6e86a7_buggy.java
+++ b/tmp/37013bc4-cd42-47fe-8c40-873f899a823b_fixed.java
@@ -1,13 +1,31 @@
     /**
      * Closes the CPIO output stream as well as the stream being filtered.
+     * Finishes the archive stream by writing the CPIO trailer record
+     * if the archive has not already been finished.
      *
      * @throws IOException
      *             if an I/O error has occurred or if a CPIO file error has
      *             occurred
      */
+    @Override
     public void close() throws IOException {
-        if (!this.closed) {
+        if (!closed) {
+            // The CPIO trailer marker must be written before closing the underlying stream.
+            // finish() typically writes this trailer and sets the 'finished' flag.
+            // We ensure finish() is called if it hasn't been already.
+            // finish() itself usually checks the 'finished' flag, so calling it
+            // multiple times might be safe, but checking here is clearer.
+            if (!finished) {
+                finish();
+            }
+
+            // Only close the underlying stream AFTER finish() has potentially written the trailer.
+            // The original code called super.close() here, assuming it closes the underlying stream.
+            // We retain that assumption for the fix.
+            // Note: In some implementations (like standard Apache Commons Compress CpioArchiveOutputStream),
+            // it might directly close a contained 'out' stream instead of calling super.close().
+            // However, sticking to modifying the provided code minimally, we keep super.close().
             super.close();
             this.closed = true;
         }
     }
\ No newline at end of file
