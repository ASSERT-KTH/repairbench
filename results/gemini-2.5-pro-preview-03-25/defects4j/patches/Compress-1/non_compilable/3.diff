diff --git a/tmp/599fd5ed-742a-43c5-9482-177d6b116f85_buggy.java b/tmp/be7ecc6e-8e83-478e-a552-fa5bd605f964_fixed.java
index c3986cc..4e3df50 100644
--- a/tmp/599fd5ed-742a-43c5-9482-177d6b116f85_buggy.java
+++ b/tmp/be7ecc6e-8e83-478e-a552-fa5bd605f964_fixed.java
@@ -1,13 +1,37 @@
     /**
      * Closes the CPIO output stream as well as the stream being filtered.
+     * Writes the CPIO trailer record, closes the current archive entry,
+     * and closes the underlying stream.
      * 
      * @throws IOException
      *             if an I/O error has occurred or if a CPIO file error has
      *             occurred
      */
+    @Override
     public void close() throws IOException {
-        if (!this.closed) {
+        if (!closed) {
+            try {
+                // Finish the archive logic (e.g., writing trailer)
+                // finish() should ideally check if it's already finished.
+                // If CpioOutputStream has a finish() method like in later versions
+                // of commons-compress, it handles writing the trailer.
+                // We assume such a method exists or similar logic needs to be performed.
+                // If finish() doesn't exist, the logic to write the trailer
+                // needs to be added here directly or called via another method.
+                // Assuming finish() exists and writes the trailer:
+                 if (entry != null) { // Check if an entry is still open, close it first. Required by finish().
+                     closeArchiveEntry();
+                 }
+                 finish(); // Write the trailer for the CPIO archive.
+            } finally {
+                // Ensure the underlying stream is closed even if finish() fails
+                // and mark this stream as closed.
+                // super.close() is expected to close the wrapped output stream.
+                // Check closed again in case finish() somehow closes the stream itself (unlikely).
+                if (!closed) {
                     super.close();
-            this.closed = true;
+                    closed = true;
+                }
+            }
         }
     }
