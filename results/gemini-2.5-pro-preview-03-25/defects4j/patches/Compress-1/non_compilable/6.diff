diff --git a/tmp/96bbfd8a-45be-4436-a21e-45671d551e8e_buggy.java b/tmp/cb7d837c-857d-4556-af56-ee57564e13cb_fixed.java
index c3986cc..c2cb025 100644
--- a/tmp/96bbfd8a-45be-4436-a21e-45671d551e8e_buggy.java
+++ b/tmp/cb7d837c-857d-4556-af56-ee57564e13cb_fixed.java
@@ -1,13 +1,30 @@
     /**
      * Closes the CPIO output stream as well as the stream being filtered.
+     * Writes the CPIO TRAILER!!! entry and pads the archive to a suitable
+     * archive boundary if not already done.
      *
      * @throws IOException
      *             if an I/O error has occurred or if a CPIO file error has
      *             occurred
      */
+    @Override
     public void close() throws IOException {
+        // Ensure the archive is finished (trailer written, final padding added)
+        // The finish() method should be idempotent or guarded by the 'finished' flag.
+        if (!finished) {
+            finish(); // Writes the trailer, padding, and sets finished = true.
+        }
+
+        // Ensure the underlying stream is closed only once.
+        // Use the 'closed' flag for idempotency of closing the stream.
+        // Note: finish() might have already closed the stream in some implementations,
+        // but typically finish() prepares the archive and close() closes the stream.
+        // The check for 'closed' prevents closing the underlying stream twice.
         if (!this.closed) {
-            super.close();
+            // Close the underlying stream ('out' is the typical field name).
+            // Avoid super.close() unless the parent class correctly closes the delegate.
+            // For ArchiveOutputStream extending OutputStream, out.close() is necessary.
+            out.close();
             this.closed = true;
         }
     }
\ No newline at end of file
