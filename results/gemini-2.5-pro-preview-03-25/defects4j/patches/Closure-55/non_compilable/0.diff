diff --git a/tmp/6b44224b-d893-4710-ac1d-489f81294937_buggy.java b/tmp/8751d0f6-329d-40e2-9595-870ea4cadecc_fixed.java
index 43937f5..734cb8e 100644
--- a/tmp/6b44224b-d893-4710-ac1d-489f81294937_buggy.java
+++ b/tmp/8751d0f6-329d-40e2-9595-870ea4cadecc_fixed.java
@@ -1,3 +1,22 @@
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    // Function expressions in object literals (like getters and setters) are not
+    // reduceable.
+    // TOOD(johnlenz): Support this.
+    if (NodeUtil.isFunctionExpression(n)) {
+      Node parent = n.getParent();
+      if (parent != null) {
+        if (parent.isGetterDef() || parent.isSetterDef()) {
+          // Getters and setters are not reduceable.
+          return false;
+        } else if (parent.isStringKey()) {
+           // Functions as values in object literals are not reduceable.
+           // Example: var x = { get y() { return 1; }, z: function () {} };
+           // The function assigned to 'z' should not be reduced.
+           return false;
+        }
+      }
+      // Otherwise, it is reduceable.
+      return true;
+    }
+    return false;
   }
\ No newline at end of file
