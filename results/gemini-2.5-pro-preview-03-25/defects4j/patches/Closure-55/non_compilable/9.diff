diff --git a/tmp/6325dbcb-3b44-4c46-b88b-b0bdba108a1a_buggy.java b/tmp/290b1554-ced3-469a-a15f-64d57162bc56_fixed.java
index 43937f5..5bb4ea5 100644
--- a/tmp/6325dbcb-3b44-4c46-b88b-b0bdba108a1a_buggy.java
+++ b/tmp/290b1554-ced3-469a-a15f-64d57162bc56_fixed.java
@@ -1,3 +1,19 @@
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    // We are looking for function expressions, which are FUNCTION nodes
+    // that are not declarations and are not part of GETTER_DEF or
+    // SETTER_DEF properties.
+    if (!NodeUtil.isFunctionExpression(n)) {
+      return false;
+    }
+
+    Node parent = n.getParent();
+    // Check if the parent is a GETTER_DEF or SETTER_DEF. If so, this function
+    // is part of an object literal's property definition using ES5 syntax,
+    // and should not be reduced.
+    if (parent != null && (parent.isGetterDef() || parent.isSetterDef())) {
+      return false;
+    }
+
+    // Otherwise, it's a standard function expression that might be reducible.
+    return true;
   }
\ No newline at end of file
