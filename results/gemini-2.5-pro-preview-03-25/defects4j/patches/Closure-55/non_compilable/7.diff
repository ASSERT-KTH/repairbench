diff --git a/tmp/f0c9dd6d-e514-4389-bff6-f44e604cccc6_buggy.java b/tmp/5b39380a-7aa8-4eaa-96e0-a7845c80b292_fixed.java
index 43937f5..39ed5c2 100644
--- a/tmp/f0c9dd6d-e514-4389-bff6-f44e604cccc6_buggy.java
+++ b/tmp/5b39380a-7aa8-4eaa-96e0-a7845c80b292_fixed.java
@@ -1,3 +1,24 @@
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    // We are only interested in function expressions that are assigned
+    // to a simple name or a qualified name, like:
+    //   var fn = function() {}
+    //   a.b = function() {};
+    //   var ns = {}; ns.fn = function() {};
+    // We specifically exclude getters and setters defined in object literals
+    // and member functions defined in classes, because the FunctionRewriter
+    // does not know how to handle them.
+    //   var obj = { get fn() {} }; // NOT reducible
+    //   class C { fn() {} } // NOT reducible
+    if (!NodeUtil.isFunctionExpression(n)) {
+      return false;
+    }
+
+    Node parent = n.getParent();
+    // Check for object literal getters/setters or class methods.
+    if (parent != null && (parent.isGetterDef() || parent.isSetterDef() || parent.isMemberFunctionDef())) {
+      return false;
+    }
+
+    // Otherwise, it is likely a function expression that can be rewritten.
+    return true;
   }
\ No newline at end of file
