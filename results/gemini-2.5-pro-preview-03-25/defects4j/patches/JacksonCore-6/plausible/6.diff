diff --git a/tmp/c20551fb-f659-4d21-816a-bd13dbccc3fe_buggy.java b/tmp/0c05810f-2387-476a-bc25-ebff2e1f91ed_fixed.java
index c3c1a6f..84f8d13 100644
--- a/tmp/c20551fb-f659-4d21-816a-bd13dbccc3fe_buggy.java
+++ b/tmp/0c05810f-2387-476a-bc25-ebff2e1f91ed_fixed.java
@@ -1,22 +1,33 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [core#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
+        // Also, empty segments are invalid.
         if (len == 0 || len > 10) {
             return -1;
         }
         // [core#176]: no leading zeroes allowed
-        for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i);
+        char c = str.charAt(0);
+        if (c < '0' || c > '9') { // Must start with a digit
+             return -1;
+        }
+        // And if it starts with '0', must be the only digit
+        if (c == '0' && len > 1) {
+             return -1;
+        }
+        // Check that all other chars (if any) are digits
+        for (int i = 1; i < len; ++i) {
+            c = str.charAt(i);
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
+        // Finally, must be parseable as int, without overflowing:
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
