diff --git a/tmp/6f9cc548-ac00-433b-bf73-fe9d887ac398_buggy.java b/tmp/ff765058-4fe7-4f32-b3f5-fc3ac17b1251_fixed.java
index c3c1a6f..20e7c4b 100644
--- a/tmp/6f9cc548-ac00-433b-bf73-fe9d887ac398_buggy.java
+++ b/tmp/ff765058-4fe7-4f32-b3f5-fc3ac17b1251_fixed.java
@@ -1,22 +1,34 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [core#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
-        // [core#176]: no leading zeroes allowed
-        for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i);
+        // Check for non-digit characters first
+        char c = str.charAt(0);
+        // First char is the most likely to be invalid, check first
+        if (c > '9' || c < '0') {
+             return -1;
+        }
+        // [core#176]: no leading zeroes allowed, unless length is 1
+        if (len > 1 && c == '0') {
+             return -1;
+        }
+        // Then check secondary chars
+        for (int i = 1; i < len; ++i) {
+            c = str.charAt(i);
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
+        // Then check for potential overflow if len == 10
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
+        // Ok, we know it's legal' let's parse
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
