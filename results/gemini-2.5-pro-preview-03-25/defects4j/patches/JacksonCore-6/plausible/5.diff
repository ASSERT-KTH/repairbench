diff --git a/tmp/5bcc6274-edf8-470f-b896-20d1ae3d0e40_buggy.java b/tmp/db983c22-32df-40cb-bc74-9da87f9ee020_fixed.java
index c3c1a6f..a78edc4 100644
--- a/tmp/5bcc6274-edf8-470f-b896-20d1ae3d0e40_buggy.java
+++ b/tmp/db983c22-32df-40cb-bc74-9da87f9ee020_fixed.java
@@ -1,22 +1,36 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [core#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
-        // [core#176]: no leading zeroes allowed
-        for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i);
+        // [core#176]: no leading zeroes allowed, except for "0"
+        char c = str.charAt(0);
+        if (len > 1) {
+            if (c == '0') {
+                return -1;
+            }
+        } else { // len == 1
+             // Index must be digit, ie '0' thru '9'
+             if (c < '0' || c > '9') {
+                 return -1;
+             }
+             // fall through; single digit is fine whatever it is
+        }
+        // all other chars must be digits
+        for (int i = 1; i < len; ++i) {
+            c = str.charAt(i);
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
+        // Also, must be valid integer:
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
         return NumberInput.parseInt(str);
     }
\ No newline at end of file
