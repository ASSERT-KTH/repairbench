diff --git a/tmp/f9e52608-44fb-4276-b20c-c341470bd884_buggy.java b/tmp/95c30e20-8839-4128-affd-8f74e4bc59e6_fixed.java
index e69de29..144adcf 100644
--- a/tmp/f9e52608-44fb-4276-b20c-c341470bd884_buggy.java
+++ b/tmp/95c30e20-8839-4128-affd-8f74e4bc59e6_fixed.java
@@ -0,0 +1,23 @@
+    /**
+     * Deserializes the map in using a custom routine.
+     *
+     * @param in the input stream
+     * @throws IOException            if an error occurs while reading from the stream
+     * @throws ClassNotFoundException if an object read from the stream can not be loaded
+     * @throws UnsupportedOperationException if the collection class is not supported
+     */
+    @SuppressWarnings("unchecked") // (1) should only fail if input stream is incorrect
+    private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject(); // Reads collectionClass factory
+
+        // validation for security
+        if (collectionClass == null) {
+            throw new UnsupportedOperationException("Collection class must not be null.");
+        }
+        if (!Collection.class.isAssignableFrom(collectionClass)) {
+            throw new UnsupportedOperationException("Unsupported Collection class: " + collectionClass);
+        }
+
+        // read the map
+        map = (Map<K, Object>) in.readObject();
+    }
\ No newline at end of file
