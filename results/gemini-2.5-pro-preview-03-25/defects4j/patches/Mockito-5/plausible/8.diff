diff --git a/tmp/ec73b2b4-0e58-4b74-89a8-7c261c60b94b_buggy.java b/tmp/a822ed29-5755-46a2-b110-ae871cdf01f0_fixed.java
index 9ac2149..7aae7e8 100644
--- a/tmp/ec73b2b4-0e58-4b74-89a8-7c261c60b94b_buggy.java
+++ b/tmp/a822ed29-5755-46a2-b110-ae871cdf01f0_fixed.java
@@ -1,40 +1,51 @@
     /**
      * Verify the given ongoing verification data, and confirm that it satisfies the delegate verification mode
      * before the full duration has passed.
      *
      * In practice, this polls the delegate verification mode until it is satisfied. If it is not satisfied once
      * the full duration has passed, the last error returned by the delegate verification mode will be thrown
      * here in turn. This may be thrown early if the delegate is unsatisfied and the verification mode is known
      * to never recover from this situation (e.g. {@link AtMost}).
      *
      * If it is satisfied before the full duration has passed, behaviour is dependent on the returnOnSuccess parameter
      * given in the constructor. If true, this verification mode is immediately satisfied once the delegate is. If
      * false, this verification mode is not satisfied until the delegate is satisfied and the full time has passed.
      *
      * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout
+     * @throws AssertionError If the delegate verification mode throws an {@link AssertionError} that is not a
+     * {@link MockitoAssertionError} before the timeout.
      */
     public void verify(VerificationData data) {
         AssertionError error = null;
 
         timer.start();
         while (timer.isCounting()) {
             try {
                 delegate.verify(data);
 
                 if (returnOnSuccess) {
                     return;
                 } else {
+                    // If delegate succeeds but we need to wait full duration,
+                    // reset the error cleared state.
                     error = null;
                 }
-            } catch (MockitoAssertionError e) {
-                error = handleVerifyException(e);
-            }
-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {
+            } catch (AssertionError e) {
+                // Catch any AssertionError (including MockitoAssertionError and potentially
+                // JUnit framework errors if they are used by the delegate)
                 error = handleVerifyException(e);
+                // TODO - Issue 145 : VerificationOverTimeImpl can swallow assertion errors from JCStress tests
+                // This might need refinement if the delegate is known to never recover,
+                // allowing for an early exit. See description in AtMost.
             }
+            // Consider adding a small sleep here to avoid busy-waiting,
+            // although the timer mechanism might handle this implicitly.
         }
 
         if (error != null) {
             throw error;
         }
+        // If error is null, it means the delegate verification succeeded
+        // either within the time (and returnOnSuccess is false, so we waited)
+        // or exactly on the last check.
     }
\ No newline at end of file
