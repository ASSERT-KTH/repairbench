diff --git a/tmp/3b58fb8e-587e-4745-99d1-7ccb7b3935bb_buggy.java b/tmp/cd54d357-84fe-4f3d-9827-f4c01c3487aa_fixed.java
index ec709bd..b173c04 100644
--- a/tmp/3b58fb8e-587e-4745-99d1-7ccb7b3935bb_buggy.java
+++ b/tmp/cd54d357-84fe-4f3d-9827-f4c01c3487aa_fixed.java
@@ -1,8 +1,22 @@
     @Override
     public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
     {
         // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit
-        //    special unfortunately
-            p.skipChildren();
+        //    special unfortunately -> but this actually is wrong, should position AFTER
+        //    value, similar to how BeanDeserializer does it.
+
+        // 09-Oct-2019, tatu: As per [databind#2466], `skipChildren()` does not properly
+        //   work with `TokenBuffer`; need to use `readValueAsTree` instead.
+        // note: method called when the parser is expected to be pointing to START_OBJECT
+        // (or START_ARRAY) of the value to skip
+        if (p.hasToken(JsonToken.START_OBJECT)
+                || p.hasToken(JsonToken.START_ARRAY)
+                // 28-May-2021, tatu: [databind#3198] Scalars won't be skipped by `readValueAsTree`
+                //    so handle separately
+                || p.hasToken(JsonToken.FIELD_NAME)) // or field name
+        {
+             p.readValueAsTree();
+        }
+        // else assuming scalar value, which needs no skipping
         return null;
     }
\ No newline at end of file
