diff --git a/tmp/d763b577-33a6-4772-a2ed-30a53ba3b709_buggy.java b/tmp/662a194c-8e08-4440-b375-a24b34fb85b6_fixed.java
index d9b400d..8aea4d5 100644
--- a/tmp/d763b577-33a6-4772-a2ed-30a53ba3b709_buggy.java
+++ b/tmp/662a194c-8e08-4440-b375-a24b34fb85b6_fixed.java
@@ -1,21 +1,37 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
+        if (str == null) {
+             return null;
+        }
         try
         {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+            // check if sz contains a fractional component, i.e. a decimal point
+            if (str.indexOf('.') != -1)
+            {
+                // If there's a decimal point, create a Double
+                return Double.valueOf(str);
+            }
+            else
+            {
+                // Otherwise, create a Long
+                return Long.valueOf(str);
+            }
         }
         catch (NumberFormatException nfe)
         {
+            // The original buggy code printed the message. Keep this behavior.
+            // Print the exception message to standard error
             System.err.println(nfe.getMessage());
         }
 
+        // Return null if parsing failed
         return null;
     }
