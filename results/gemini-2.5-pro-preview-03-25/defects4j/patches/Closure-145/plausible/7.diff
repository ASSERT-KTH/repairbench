diff --git a/tmp/af1ef002-1040-4ec5-babb-16681dc207b0_buggy.java b/tmp/61c83d15-2458-4285-ab84-bdae3b357380_fixed.java
index 57f69c5..587b1f7 100644
--- a/tmp/af1ef002-1040-4ec5-babb-16681dc207b0_buggy.java
+++ b/tmp/61c83d15-2458-4285-ab84-bdae3b357380_fixed.java
@@ -1,12 +1,24 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // Check if the node itself is a FUNCTION or DO.
+    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+      return true;
+    }
+    // Check if the node is a LABEL whose statement is a FUNCTION or DO.
+    // This is needed for compatibility with Safari and IE where labeled
+    // functions/do-loops require braces when they are the single statement
+    // in a control structure like 'if'.
+    // The structure is LABEL -> NAME, STATEMENT
+    if (n.getType() == Token.LABEL) {
+      Node labeledStatement = n.getLastChild();
+      if (labeledStatement != null &&
+          (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO)) {
+        return true;
+      }
+    }
+    // Otherwise, it's not what we're looking for.
+    return false;
   }
\ No newline at end of file
