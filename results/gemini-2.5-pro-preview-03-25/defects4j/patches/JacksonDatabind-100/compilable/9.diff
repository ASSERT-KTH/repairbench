diff --git a/tmp/8140b274-c7df-4aae-a75d-9b3c0e8dfe42_buggy.java b/tmp/a84e7749-96d9-413b-8086-bda36e5209cd_fixed.java
index fc8c302..c9cde33 100644
--- a/tmp/8140b274-c7df-4aae-a75d-9b3c0e8dfe42_buggy.java
+++ b/tmp/a84e7749-96d9-413b-8086-bda36e5209cd_fixed.java
@@ -1,23 +1,43 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
-        if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n == null) {
+             return null;
+        }
+
+        // First: maybe we have base64 encoded textual content?
+        //  Need to use this variant
+        if (n.isTextual()) {
+            String str = n.textValue();
+            // If null, might be something odd, but follow API contract and return null
+            if (str == null) {
+                 return null;
+            }
+            // Otherwise, decode. Empty String is valid, results in empty byte array
+            try {
+                // [databind#2096] IMPORTANT: use given variant for decoding
+                return b64variant.decode(str);
+            } catch (IllegalArgumentException e) {
+                // 15-Aug-2018, tatu: Need to add more info like variant, message
+                throw _constructError("Cannot decode TextNode value as Base64 ("+b64variant+"): "+e.getMessage(), e);
+            }
+        }
+
+        // Then: maybe it is plain binary node? Default `binaryValue()` works fine
         byte[] data = n.binaryValue();
         if (data != null) {
-                return data;
+            return data; // Will be non-null for BinaryNode
         }
+        // Finally, maybe POJO that contains byte[]? (also handled by `binaryValue()`?)
+        // 15-Aug-2018, tatu: Looks like POJONode does not override `binaryValue()` so check separately:
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
-        }
-        // otherwise return null to mark we have no binary content
+        // Otherwise indicate we don't have binary content
         return null;
     }
\ No newline at end of file
