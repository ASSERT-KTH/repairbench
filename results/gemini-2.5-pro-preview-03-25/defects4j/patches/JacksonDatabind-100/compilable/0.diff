diff --git a/tmp/37e8e5de-1bf3-4f7d-9a3a-538c374866b1_buggy.java b/tmp/3c914adc-0192-4f07-ace5-633bfe4ce683_fixed.java
index fc8c302..7916f05 100644
--- a/tmp/37e8e5de-1bf3-4f7d-9a3a-538c374866b1_buggy.java
+++ b/tmp/3c914adc-0192-4f07-ace5-633bfe4ce683_fixed.java
@@ -1,23 +1,46 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
+            // [databind#2096]: Handle TextNode first using the specific variant
+            if (n.isTextual()) {
+                // Use the Base64 variant to decode
+                String str = n.textValue();
+                // Minor optimization: empty string is valid, decodes to empty byte array
+                if (str != null) {
+                    try {
+                        // Delegate decoding to the variant
+                        return b64variant.decode(str);
+                    } catch (IllegalArgumentException e) {
+                        // Need to wrap the exception
+                        // Assume _constructError is available from the base class (JsonParserMinimalBase)
+                        // or TreeTraversingParser itself to create JsonParseException
+                        throw _constructError("Cannot access contents of TextNode as binary due to broken Base64 encoding: "+e.getMessage());
+                    }
+                }
+                // If textValue() is null, fall through to return null? Or return null here? Let's return null.
+                return null;
+            }
+
+            // Otherwise, try other mechanisms:
+            // 1. Actual binary node? (binaryValue() should work)
+            byte[] data = n.binaryValue(); // For BinaryNode, this works.
+                                           // For TextNode, we already handled it above with correct variant.
+                                           // For others, typically null.
             if (data != null) {
                 return data;
             }
+            // 2. POJO containing byte[]?
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
