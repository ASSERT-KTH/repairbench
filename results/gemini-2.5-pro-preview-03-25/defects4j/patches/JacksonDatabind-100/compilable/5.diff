diff --git a/tmp/637632c3-34a3-4ef0-8582-30a9b98abfa5_buggy.java b/tmp/ef1ecf91-efa6-4e2b-ac06-e585d3536c92_fixed.java
index fc8c302..dc8cc7f 100644
--- a/tmp/637632c3-34a3-4ef0-8582-30a9b98abfa5_buggy.java
+++ b/tmp/ef1ecf91-efa6-4e2b-ac06-e585d3536c92_fixed.java
@@ -1,23 +1,41 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
-        if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n == null) {
+            return null;
+        }
+
+        // First: maybe it's already binary? Allow this for BinaryNode / POJONode
+        // This call might also handle some coercions for other types
+        // (but need TextNode handling below)
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+        // Second: POJO Nodes that contain byte[] (but not recognized by binaryValue())
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
+        // Third: Maybe String value that represents base64 encoded data?
+        // 15-Aug-2018, tatu: [databind#2096] Need to handle TextNode explicitly
+        if (n.isTextual()) {
+            final String str = n.textValue();
+            if (str != null) {
+                 try {
+                     return b64variant.decode(str);
+                 } catch (IllegalArgumentException e) {
+                     // Use the current parser instance ('this') for the exception
+                     throw new JsonParseException(this,
+                            String.format("Cannot access contents of %s as binary due to broken Base64 encoding: %s",
+                                     n.getNodeType().name(), e.getMessage()), e);
                  }
-        // otherwise return null to mark we have no binary content
+            }
+        }
+        // Otherwise, no binary representation available
         return null;
     }
\ No newline at end of file
