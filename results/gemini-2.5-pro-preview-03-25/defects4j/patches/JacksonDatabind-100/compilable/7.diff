diff --git a/tmp/05a10df9-dd2d-4be2-ba9b-aec900579759_buggy.java b/tmp/febc8f6b-9f73-4ec0-ac92-c60b654748ec_fixed.java
index fc8c302..826e59e 100644
--- a/tmp/05a10df9-dd2d-4be2-ba9b-aec900579759_buggy.java
+++ b/tmp/febc8f6b-9f73-4ec0-ac92-c60b654748ec_fixed.java
@@ -1,23 +1,44 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
             // [databind#2096]: although `binaryValue()` works for real binary node
             // and embedded "POJO" node, coercion from TextNode may require variant, so:
             byte[] data = n.binaryValue();
+            // Check if the node itself is binary or can be coerced by default:
             if (data != null) {
                 return data;
             }
+            // Second check: maybe it's embedded object?
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
+            // Third check: maybe textual, requiring Base64 decoding?
+            // 15-Aug-2018, tatu: [databind#2096] Must use variant passed by caller
+            if (n.isTextual()) {
+                final String str = n.textValue();
+                if (str != null) {
+                    // Variant is passed by caller, use it:
+                    try {
+                        return b64variant.decode(str);
+                    } catch (IllegalArgumentException e) {
+                        // Problem: how should we indicate it? Need context... for now,
+                        // just wrap in a JsonParseException
+                        // 26-Oct-2018, tatu: Use variant name in error msg
+                        throw _constructError("Cannot access contents of "+n.getClass().getName()+" as binary"
+                                +" ("+b64variant.getName()+")" // info about variant added in 2.9.7
+                                +" due to broken Base64 encoding: "+e.getMessage(),
+                                e);
+                    }
+                }
+            }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
