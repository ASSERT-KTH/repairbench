diff --git a/tmp/0a21914d-b862-46fc-8490-88cf041f18b8_buggy.java b/tmp/e6845469-ee1e-40ac-b2ff-71c20d62d2e3_fixed.java
index fc8c302..5c929e8 100644
--- a/tmp/0a21914d-b862-46fc-8490-88cf041f18b8_buggy.java
+++ b/tmp/e6845469-ee1e-40ac-b2ff-71c20d62d2e3_fixed.java
@@ -1,23 +1,35 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+            // If it's an actual binary node, return data directly
+            if (n.isBinary()) {
+                 return ((BinaryNode) n).binaryValue();
             }
+            // If POJO contains byte[], return it
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
+            // [databind#2096]: If TextNode, try decoding with specified variant
+            if (n.isTextual()) {
+                final String str = n.textValue();
+                if (str != null) {
+                    try {
+                       return b64variant.decode(str);
+                    // Base64Variant.decode() throws IllegalArgumentException, need to convert to JsonParseException
+                    } catch (IllegalArgumentException e) {
+                        // Include node type for clarity
+                        throw _constructError("Cannot access contents of TextNode as binary due to broken Base64 encoding: "+e.getMessage());
+                    }
+                }
+            }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
