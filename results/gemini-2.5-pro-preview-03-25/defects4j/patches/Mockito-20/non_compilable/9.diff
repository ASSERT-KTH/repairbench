diff --git a/tmp/019c789c-490c-406f-919a-836a14853644_buggy.java b/tmp/52f02cf9-d613-44ee-9225-975b52c54028_fixed.java
index f9a9b5b..5bac52c 100644
--- a/tmp/019c789c-490c-406f-919a-836a14853644_buggy.java
+++ b/tmp/52f02cf9-d613-44ee-9225-975b52c54028_fixed.java
@@ -1,30 +1,49 @@
+    @Override
     public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
             throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
         }
+
         Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
                 settings.getTypeToMock(),
                 settings.getExtraInterfaces()
         );
+
         T mockInstance = null;
+        Instantiator instantiator = null; // Store the instantiator for potential use in error message
         try {
-            mockInstance = classInstantiator.instantiate(mockedProxyType);
+            // Select the appropriate instantiator based on the mock creation settings
+            instantiator = instantiatorProvider.getInstantiator(settings);
+            // Instantiate the mock using the selected instantiator
+            mockInstance = instantiator.newInstance(mockedProxyType);
+
+            // Set up the Mockito interceptor
             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
-            return ensureMockIsAssignableToMockedType(settings, mockInstance);
+            // Ensure the created mock is assignable to the mocked type (already checked by generator?)
+            // return ensureMockIsAssignableToMockedType(settings, mockInstance); // Assuming this check is useful
+            return mockInstance; // Directly return, assuming ensureMockIsAssignableToMockedType is implicitly handled or unnecessary here.
+
         } catch (ClassCastException cce) {
+            // Provide a detailed error message for ClassCastException, including involved types and instantiator
             throw new MockitoException(join(
                     "ClassCastException occurred while creating the mockito mock:",
-                    "  class to mock : " + describeClass(mockedProxyType),
-                    "  created class : " + describeClass(settings.getTypeToMock()),
-                    "  proxy instance class : " + describeClass(mockInstance),
-                    "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
+                    "  Class to mock: " + describeClass(settings.getTypeToMock()),
+                    "  Generated proxy class: " + describeClass(mockedProxyType),
+                    "  Proxy instance class: " + describeClass(mockInstance), // May be null if instantiation failed before cast
+                    "  Instance creation using: " + (instantiator == null ? "unknown" : instantiator.getClass().getSimpleName()),
                     "",
-                    "You might experience classloading issues, please ask the mockito mailing-list.",
+                    "You might experience classloading issues.",
+                    "Typically, this happens when the Mockito library is loaded by a different classloader",
+                    "than the class to mock.",
                     ""
             ), cce);
         } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+            // Wrap InstantiationException in MockitoException with a standard message format
+            throw new MockitoException(
+                "Unable to create mock instance of type '" + settings.getTypeToMock().getSimpleName() + "'",
+                e // Preserve the original exception as the cause for detailed diagnosis
+            );
         }
     }
\ No newline at end of file
