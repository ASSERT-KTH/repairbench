diff --git a/tmp/37e396d1-aaab-4ba5-8abd-100f0424a847_buggy.java b/tmp/0887234b-d969-4306-916a-3818fc985786_fixed.java
index e69de29..21ded25 100644
--- a/tmp/37e396d1-aaab-4ba5-8abd-100f0424a847_buggy.java
+++ b/tmp/0887234b-d969-4306-916a-3818fc985786_fixed.java
@@ -0,0 +1,40 @@
+    protected Object _coerceEmptyString(DeserializationContext ctxt, boolean isPrimitive) throws JsonMappingException
+    {
+        // Determine configured Action
+        final CoercionAction act;
+        if (isPrimitive) {
+            act = ctxt.findCoercionAction(logicalType(), _valueClass, CoercionInputShape.EmptyString);
+        } else {
+            // No logical type for Objects, use physical type
+            act = ctxt.findCoercionAction(LogicalType.OtherScalar, _valueClass, CoercionInputShape.EmptyString);
+        }
+
+        // Then see what to do
+        switch (act) {
+        case Fail:
+            _checkCoercionFail(ctxt, act, _valueClass, "", "empty String (\"\")");
+            return null; // unreachable
+        case AsNull:
+             if (isPrimitive) {
+                 // Must ensure that `null` is allowed for primitive types: by default it is NOT
+                 // (but can be configured)
+                 // (note: this call checks FAIL_ON_NULL_FOR_PRIMITIVES and throws if needed)
+                 _verifyNullForPrimitive(ctxt);
+             }
+             // Returns `null` for Object types, wrapper types; default primitive value for primitives
+             return getNullValue(ctxt);
+        case TryConvert:
+             // Not possible to handle here, must be done by caller; we may need
+             // to indicate this to caller with a marker value... but for now let's
+             // assume it'll be handled as "empty" value.
+             // Let's fall through to AsEmpty for now, as the original bug is likely related
+             // to the AsNull path for primitives. A more complete fix might require
+             // changes in the caller (_deserializeFromString) to handle TryConvert.
+             // [[fallthrough]]
+        case AsEmpty:
+        default: // AsEmpty is the default for cases not otherwise handled
+             // Return "empty" value for the type: for primitives, is the default value,
+             // for Objects/Strings usually "" or empty collection/Map.
+             return getEmptyValue(ctxt);
+        }
+    }
\ No newline at end of file
