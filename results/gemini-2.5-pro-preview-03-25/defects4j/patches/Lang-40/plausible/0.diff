diff --git a/tmp/4d847f98-dac9-4dec-98fd-2843b01d6924_buggy.java b/tmp/bc31aa78-f9a2-4f63-b905-e82e898d26bf_fixed.java
index 562001a..e5ee23a 100644
--- a/tmp/4d847f98-dac9-4dec-98fd-2843b01d6924_buggy.java
+++ b/tmp/bc31aa78-f9a2-4f63-b905-e82e898d26bf_fixed.java
@@ -1,29 +1,48 @@
     /**
      * <p>Checks if String contains a search String irrespective of case,
      * handling <code>null</code>. Case-insensitivity is defined as by
      * {@link String#equalsIgnoreCase(String)}.
      *
      * <p>A <code>null</code> String will return <code>false</code>.</p>
      *
      * <pre>
      * StringUtils.contains(null, *) = false
      * StringUtils.contains(*, null) = false
      * StringUtils.contains("", "") = true
      * StringUtils.contains("abc", "") = true
      * StringUtils.contains("abc", "a") = true
      * StringUtils.contains("abc", "z") = false
      * StringUtils.contains("abc", "A") = true
      * StringUtils.contains("abc", "Z") = false
      * </pre>
      *
      * @param str  the String to check, may be null
      * @param searchStr  the String to find, may be null
      * @return true if the String contains the search String irrespective of
      * case or false if not or <code>null</code> string input
      */
     public static boolean containsIgnoreCase(String str, String searchStr) {
         if (str == null || searchStr == null) {
             return false;
         }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+        int len1 = str.length();
+        int len2 = searchStr.length();
+        if (len2 == 0) {
+            return true; // An empty search string is always contained.
+        }
+        if (len2 > len1) {
+            return false; // A search string longer than the main string cannot be contained.
+        }
+        // Iterate through the main string looking for a match.
+        // The loop limit ensures that there's enough space left for the search string.
+        for (int i = 0; i <= len1 - len2; i++) {
+            // regionMatches with ignoreCase=true performs case-insensitive comparison
+            // consistent with equalsIgnoreCase, but on substrings.
+            // This avoids locale-specific issues with toUpperCase/toLowerCase like ÃŸ -> SS.
+            if (str.regionMatches(true, i, searchStr, 0, len2)) {
+                return true;
+            }
+        }
+        // No match found after checking all possible starting positions.
+        return false;
     }
\ No newline at end of file
