diff --git a/tmp/22af96e8-2a08-4cb1-905f-2febf1b0262e_buggy.java b/tmp/16749d34-6fdd-4473-b5e0-9139f29d0bf7_fixed.java
index 4d0be80..e3f028c 100644
--- a/tmp/22af96e8-2a08-4cb1-905f-2febf1b0262e_buggy.java
+++ b/tmp/16749d34-6fdd-4473-b5e0-9139f29d0bf7_fixed.java
@@ -1,10 +1,14 @@
 @Override
 Node processForInLoop(ForInLoop loopNode) {
+  Node iterator = transform(loopNode.getIterator());
+  Node iteratedObject = transform(loopNode.getIteratedObject());
+  Node body = transformBlock(loopNode.getBody());
 
-        // Return the bare minimum to put the AST in a valid state.
-      return newNode(
-          Token.FOR,
-          transform(loopNode.getIterator()),
-          transform(loopNode.getIteratedObject()),
-          transformBlock(loopNode.getBody()));
+  if (loopNode.isForEach()) {
+    // Throw an exception for unsupported 'for each' loops
+    throw new UnsupportedOperationException("unsupported language extension: for each");
+  }
+
+  // Return the transformed 'for-in' loop node
+  return newNode(Token.FOR, iterator, iteratedObject, body);
 }
\ No newline at end of file
