diff --git a/tmp/e727c4e9-5842-4ac2-8bec-2483c012f26f_buggy.java b/tmp/c2e1cd8f-1146-4de5-ab94-cb438531b78d_fixed.java
index 4d0be80..c241420 100644
--- a/tmp/e727c4e9-5842-4ac2-8bec-2483c012f26f_buggy.java
+++ b/tmp/c2e1cd8f-1146-4de5-ab94-cb438531b78d_fixed.java
@@ -1,10 +1,19 @@
 @Override
 Node processForInLoop(ForInLoop loopNode) {
+  Node iterator = transform(loopNode.getIterator());
+  Node iteratedObject = transform(loopNode.getIteratedObject());
+
+  // Check if the loop is a "for each" loop
+  if (loopNode.isForEach()) {
+    // Wrap the iterator in a "JSCompiler_forEach" function call
+    iterator = newNode(Token.CALL, newNode(Token.NAME, "JSCompiler_forEach"))
+        . addChildToBack(iterator)
+        . addChildToBack(newNode(Token.THIS));
+  }
 
-        // Return the bare minimum to put the AST in a valid state.
   return newNode(
       Token.FOR,
-          transform(loopNode.getIterator()),
-          transform(loopNode.getIteratedObject()),
+      iterator,
+      iteratedObject,
       transformBlock(loopNode.getBody()));
 }
\ No newline at end of file
