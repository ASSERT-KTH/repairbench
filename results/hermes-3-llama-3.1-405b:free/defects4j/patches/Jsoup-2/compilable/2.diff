diff --git a/tmp/db58327b-993c-430b-9086-e1943f7411b8_buggy.java b/tmp/00a8cc17-e159-4b99-b838-d57587a781cd_fixed.java
index 1b29465..27f078e 100644
--- a/tmp/db58327b-993c-430b-9086-e1943f7411b8_buggy.java
+++ b/tmp/00a8cc17-e159-4b99-b838-d57587a781cd_fixed.java
@@ -1,50 +1,55 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
+    boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>)
     if (tq.matchChomp("/>")) { // close empty element or tag
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
     // pc data only tags (textarea, script): chomp to end tag, add content as text node
     if (tag.isData()) {
         String data = tq.chompTo("</" + tagName);
         tq.chompTo(">");
         
         Node dataNode;
         if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
             dataNode = TextNode.createFromEncoded(data, baseUri);
         else
             dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
         child.appendChild(dataNode);
+        
+        // Consume the closing tag
+        tq.consume("</");
+        tq.consume(tagName);
+        tq.consume(">");
     }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
         if (href.length() != 0) { // ignore <base target> etc
             baseUri = href;
             doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
         }
     }
 }
\ No newline at end of file
