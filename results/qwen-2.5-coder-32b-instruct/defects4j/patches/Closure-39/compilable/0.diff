diff --git a/tmp/8cc14def-e050-4167-9e52-05fcd9b5af65_buggy.java b/tmp/289c0d67-d1f8-4b26-b647-25ec3583978a_fixed.java
index e4d90e7..ba668f4 100644
--- a/tmp/8cc14def-e050-4167-9e52-05fcd9b5af65_buggy.java
+++ b/tmp/289c0d67-d1f8-4b26-b647-25ec3583978a_fixed.java
@@ -1,45 +1,66 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
         return getReferenceName();
     } else if (prettyPrint) {
         // Don't pretty print recursively.
         prettyPrint = false;
 
         // Use a tree set so that the properties are sorted.
         Set<String> propertyNames = Sets.newTreeSet();
         for (ObjectType current = this;
              current != null && !current.isNativeObjectType() &&
                  propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
              current = current.getImplicitPrototype()) {
             propertyNames.addAll(current.getOwnPropertyNames());
         }
 
         StringBuilder sb = new StringBuilder();
         sb.append("{");
 
         int i = 0;
         for (String property : propertyNames) {
             if (i > 0) {
                 sb.append(", ");
             }
 
             sb.append(property);
             sb.append(": ");
-        sb.append(getPropertyType(property).toString());
+            sb.append(getPropertyType(property).toAnnotationString());
 
             ++i;
             if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
                 sb.append(", ...");
                 break;
             }
         }
 
         sb.append("}");
 
         prettyPrint = true;
         return sb.toString();
     } else {
-      return "{...}";
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+
+        int count = 0;
+        for (String property : getOwnPropertyNames()) {
+            if (count > 0) {
+                sb.append(", ");
+            }
+
+            sb.append(property);
+            sb.append(": ");
+            sb.append(getPropertyType(property).toString());
+
+            ++count;
+            if (count == MAX_PRETTY_PRINTED_PROPERTIES) {
+                sb.append(", ...");
+                break;
+            }
+        }
+
+        sb.append("}");
+        return sb.toString();
     }
 }
\ No newline at end of file
