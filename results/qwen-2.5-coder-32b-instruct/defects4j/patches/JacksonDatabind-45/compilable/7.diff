diff --git a/tmp/3b86db53-c066-41f1-92dc-8b1ff26c12c5_buggy.java b/tmp/f3b8e885-5943-43a4-97be-26f9917f75d5_fixed.java
index 0dbce00..3772e3d 100644
--- a/tmp/3b86db53-c066-41f1-92dc-8b1ff26c12c5_buggy.java
+++ b/tmp/f3b8e885-5943-43a4-97be-26f9917f75d5_fixed.java
@@ -1,33 +1,45 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
-            if (format != null) {
+        if (format != null && format.getShape() != JsonFormat.Shape.ANY) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
-        return this;
+
+    // If no format is specified or format shape is ANY, use the global configuration
+    if (property != null && serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        return withFormat(Boolean.TRUE, null);
+    }
+
+    // Default to string format
+    TimeZone tz = serializers.getTimeZone();
+    String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;
+    Locale loc = serializers.getLocale();
+    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+    df.setTimeZone(tz);
+    return withFormat(Boolean.FALSE, df);
 }
\ No newline at end of file
