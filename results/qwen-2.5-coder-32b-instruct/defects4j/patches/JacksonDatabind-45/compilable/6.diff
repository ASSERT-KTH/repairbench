diff --git a/tmp/7c36e9df-eed5-4910-9d4e-dca6dd047855_buggy.java b/tmp/91a244e6-43f4-47bc-b937-fa9af0cbc347_fixed.java
index 0dbce00..e1dff75 100644
--- a/tmp/7c36e9df-eed5-4910-9d4e-dca6dd047855_buggy.java
+++ b/tmp/91a244e6-43f4-47bc-b937-fa9af0cbc347_fixed.java
@@ -1,33 +1,44 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+        } else {
+            // If no format is specified, check the global configuration
+            if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                return withFormat(Boolean.TRUE, null);
+            } else {
+                final String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                final Locale loc = serializers.getLocale();
+                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                df.setTimeZone(serializers.getTimeZone());
+                return withFormat(Boolean.FALSE, df);
+            }
         }
     }
     return this;
 }
\ No newline at end of file
