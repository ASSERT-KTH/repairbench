diff --git a/tmp/636ad9be-74cf-459a-a79c-3f93b9b92b8f_buggy.java b/tmp/a4d9cd67-c824-49a3-9b1e-9ce7b59296e8_fixed.java
index c6b65da..5484424 100644
--- a/tmp/636ad9be-74cf-459a-a79c-3f93b9b92b8f_buggy.java
+++ b/tmp/a4d9cd67-c824-49a3-9b1e-9ce7b59296e8_fixed.java
@@ -1,25 +1,35 @@
     /**
      * Returns the options with a long name starting with the name specified.
      * 
      * @param opt the partial name of the option
      * @return the options matching the partial name specified, or an empty list if none matches
      * @since 1.3
      */
     public List<String> getMatchingOptions(String opt)
     {
         opt = Util.stripLeadingHyphens(opt);
         
         List<String> matchingOpts = new ArrayList<String>();
+        boolean exactMatchFound = false;
 
-        // for a perfect match return the single option only
-
-        for (String longOpt : longOpts.keySet())
-        {
-            if (longOpt.startsWith(opt))
-            {
+        // Check for an exact match first
+        if (longOpts.containsKey(opt)) {
+            matchingOpts.add(opt);
+            exactMatchFound = true;
+        } else {
+            // for a partial match return all options that start with the specified prefix
+            for (String longOpt : longOpts.keySet()) {
+                if (longOpt.startsWith(opt)) {
                     matchingOpts.add(longOpt);
                 }
             }
+        }
+        
+        // If an exact match is found, return only the exact match
+        if (exactMatchFound && matchingOpts.size() > 1) {
+            matchingOpts = new ArrayList<String>();
+            matchingOpts.add(opt);
+        }
         
         return matchingOpts;
     }
\ No newline at end of file
