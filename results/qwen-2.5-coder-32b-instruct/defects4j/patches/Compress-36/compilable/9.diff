diff --git a/tmp/d3b49fef-cd5f-4175-8911-582c7870e9d9_buggy.java b/tmp/c156b1a1-0c52-4aa5-b4c5-873fa6f437c2_fixed.java
index d357c7e..51cbc03 100644
--- a/tmp/d3b49fef-cd5f-4175-8911-582c7870e9d9_buggy.java
+++ b/tmp/c156b1a1-0c52-4aa5-b4c5-873fa6f437c2_fixed.java
@@ -1,16 +1,23 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
     
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder's
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
-        return deferredBlockStreams.get(0);
+    InputStream currentStream = deferredBlockStreams.get(0);
+    if (currentStream.available() == 0 && deferredBlockStreams.size() == 1) {
+        // If the current stream is empty and there are no more streams to process,
+        // we should throw an exception indicating there is no current 7z entry.
+        throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+    }
+    
+    return currentStream;
 }
\ No newline at end of file
