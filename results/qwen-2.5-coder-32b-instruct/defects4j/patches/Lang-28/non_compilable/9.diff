diff --git a/tmp/1d8713bb-9ca0-4b67-a6ee-47c2d179fcbd_buggy.java b/tmp/3a4e5d60-831c-4c7a-be84-34b973de6268_fixed.java
index 4bbd561..ddb74fb 100644
--- a/tmp/1d8713bb-9ca0-4b67-a6ee-47c2d179fcbd_buggy.java
+++ b/tmp/3a4e5d60-831c-4c7a-be84-34b973de6268_fixed.java
@@ -1,37 +1,41 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    // Protect from ArrayIndexOutOfBoundsException
+    if (index + 1 >= input.length() || input.charAt(index) != '&' || input.charAt(index + 1) != '#') {
+        return 0;
+    }
+    
     int start = index + 2;
     boolean isHex = false;
 
     char firstChar = input.charAt(start);
     if (firstChar == 'x' || firstChar == 'X') {
         start++;
         isHex = true;
     }
 
     int end = start;
-            while(input.charAt(end) != ';') {
+    while (end < input.length() && input.charAt(end) != ';') {
         end++;
     }
+    if (end == input.length()) {
+        return 0; // No closing ';'
+    }
 
     int entityValue;
     try {
         if (isHex) {
             entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
         } else {
             entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
         }
     } catch (NumberFormatException nfe) {
         return 0;
     }
 
-                out.write(entityValue);
+    out.append(Character.toChars(entityValue));
     return 2 + (end - start) + (isHex ? 1 : 0) + 1;
 }
\ No newline at end of file
-        return 0;
-    }
