diff --git a/tmp/bfa043f2-c2a1-40c4-9a9c-923c1ded9ec8_buggy.java b/tmp/62d2e6d2-cd6e-4daa-9aad-7c851a39d518_fixed.java
index 800e6e1..5fdf188 100644
--- a/tmp/bfa043f2-c2a1-40c4-9a9c-923c1ded9ec8_buggy.java
+++ b/tmp/62d2e6d2-cd6e-4daa-9aad-7c851a39d518_fixed.java
@@ -1,32 +1,36 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
-      if (n.getType() == Token.LP && parent == scope.getRootNode()) {
+      if (n.getType() == Token.LP && parent.getType() == Token.FUNCTION) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
-            return;
-          }
+            // Handle named function expressions
+            defineNamedFunction(n, parent);
+          } else {
             defineDeclaredFunction(n, parent);
+          }
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
+        case Token.CONST:
+        case Token.LET:
           defineVar(n, parent);
           break;
       }
     }
\ No newline at end of file
