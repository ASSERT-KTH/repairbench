diff --git a/tmp/8afaa239-e394-4646-a571-db454f4a9d4b_buggy.java b/tmp/61a21768-7c8a-47f6-8a7f-f7ee292b60e1_fixed.java
index 47915ed..54c0e83 100644
--- a/tmp/8afaa239-e394-4646-a571-db454f4a9d4b_buggy.java
+++ b/tmp/61a21768-7c8a-47f6-8a7f-f7ee292b60e1_fixed.java
@@ -1,22 +1,24 @@
 /* (non-Javadoc)
  * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
  */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
             return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
         //see issue 184.
         //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
         //Only for compareTo() method by the Comparable interface
-            return 1;
+        Object mock = invocation.getMock();
+        Object argument = invocation.getArguments()[0];
+        return mock == argument ? 0 : 1;
     }
     
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
