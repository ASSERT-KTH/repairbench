diff --git a/tmp/13b4ffc0-a936-4706-8908-47e088bdbab6_buggy.java b/tmp/d32bc7c2-568e-4276-97f8-6bc1970e9406_fixed.java
index 6cfa79b..f9c036c 100644
--- a/tmp/13b4ffc0-a936-4706-8908-47e088bdbab6_buggy.java
+++ b/tmp/d32bc7c2-568e-4276-97f8-6bc1970e9406_fixed.java
@@ -1,12 +1,18 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double z = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+        try {
+            return 0.5 * (1.0 + Erf.erf(z));
+        } catch (MaxIterationsExceededException e) {
+            // If the exception is thrown, x is likely very far from the mean.
+            // return 0 or 1 based on the sign of z.
+            return z < 0 ? 0.0 : 1.0;
+        }
     }
\ No newline at end of file
