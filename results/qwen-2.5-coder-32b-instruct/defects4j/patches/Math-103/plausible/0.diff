diff --git a/tmp/423fde74-7544-4870-b441-269bc7dabf96_buggy.java b/tmp/d0617cab-7ac4-472e-8577-ee8a858821fa_fixed.java
index 6cfa79b..21627c3 100644
--- a/tmp/423fde74-7544-4870-b441-269bc7dabf96_buggy.java
+++ b/tmp/d0617cab-7ac4-472e-8577-ee8a858821fa_fixed.java
@@ -1,12 +1,25 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        try {
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MaxIterationsExceededException e) {
+            // Check if x is more than 20 standard deviations from the mean
+            double threshold = 20 * standardDeviation;
+            if (x < mean - threshold) {
+                return 0.0;
+            } else if (x > mean + threshold) {
+                return 1.0;
+            } else {
+                // Re-throw if it's not due to extreme values
+                throw e;
+            }
+        }
     }
\ No newline at end of file
