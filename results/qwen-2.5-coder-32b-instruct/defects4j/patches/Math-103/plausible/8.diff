diff --git a/tmp/95764ccb-e515-45b7-b918-823f695f4825_buggy.java b/tmp/99a8df57-ff68-4d3f-b059-192fccbdecd8_fixed.java
index 6cfa79b..a4a777e 100644
--- a/tmp/95764ccb-e515-45b7-b918-823f695f4825_buggy.java
+++ b/tmp/99a8df57-ff68-4d3f-b059-192fccbdecd8_fixed.java
@@ -1,12 +1,20 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>. 
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    // Define a threshold for extreme values
+    double threshold = 20.0 * standardDeviation;
+
+    if (x < mean - threshold) {
+        return 0.0;
+    } else if (x > mean + threshold) {
+        return 1.0;
+    } else {
+        return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));
+    }
 }
\ No newline at end of file
