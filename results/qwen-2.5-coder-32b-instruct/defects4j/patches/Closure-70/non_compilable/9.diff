diff --git a/tmp/f6f1a00b-a77c-4eea-ade5-28ef424aa877_buggy.java b/tmp/ed962997-23bf-4668-a672-a6fdb302b09b_fixed.java
index 1530b34..962a1b2 100644
--- a/tmp/f6f1a00b-a77c-4eea-ade5-28ef424aa877_buggy.java
+++ b/tmp/ed962997-23bf-4668-a672-a6fdb302b09b_fixed.java
@@ -1,23 +1,44 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          JSType jsDocType = jsDocParameter.getJSType();
+          // Ensure we are not redeclaring a variable with a different type
+          if (scope.getSlot(astParameter.getString()) != null) {
+            reportDuplicateVarDecl(astParameter, jsDocType);
+          } else {
+            defineSlot(astParameter, functionNode, jsDocType, true);
+          }
           jsDocParameter = jsDocParameter.getNext();
+        } else {
+          // If no JSDoc type is specified, we still define the slot with null type
+          if (scope.getSlot(astParameter.getString()) != null) {
+            reportDuplicateVarDecl(astParameter, null);
           } else {
             defineSlot(astParameter, functionNode, null, true);
           }
         }
       }
     }
+  }
 } // end declareArguments
+
+/**
+ * Reports a duplicate variable declaration error.
+ */
+private void reportDuplicateVarDecl(Node astParameter, JSType jsDocType) {
+  JSType existingType = scope.getSlot(astParameter.getString()).getType();
+  compiler.report(JSError.make(astParameter, DUPLICATE_VAR_DECLARATION,
+      astParameter.getString(),
+      existingType == null ? "unknown" : existingType.toString(),
+      jsDocType == null ? "unknown" : jsDocType.toString()));
+}
\ No newline at end of file
