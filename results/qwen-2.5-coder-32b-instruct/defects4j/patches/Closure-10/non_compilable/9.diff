diff --git a/tmp/82a84fd7-d2da-41f9-99d3-28c492bfb2f4_buggy.java b/tmp/a6e21308-e168-491a-8e4a-ecc3fad46646_fixed.java
index 6fecc90..b757326 100644
--- a/tmp/82a84fd7-d2da-41f9-99d3-28c492bfb2f4_buggy.java
+++ b/tmp/a6e21308-e168-491a-8e4a-ecc3fad46646_fixed.java
@@ -1,7 +1,20 @@
 static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
         return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+    } else {
+        if (n.isComma()) {
+            // For comma expressions, the type of the entire expression is the type of the last operand.
+            return mayBeString(n.getLastChild(), false);
+        } else if (n.isHook()) {
+            // For conditional expressions (?:), we need to check both the true and false cases.
+            return mayBeString(n.getSecondChild(), false) || mayBeString(n.getLastChild(), false);
+        } else if (n.isAdd()) {
+            // For addition, if either operand might be a string, the result might be a string.
+            Node left = n.getFirstChild();
+            Node right = n.getSecondChild();
+            return mayBeString(left, false) || mayBeString(right, false);
         } else {
             return mayBeStringHelper(n);
         }
     }
+}
\ No newline at end of file
