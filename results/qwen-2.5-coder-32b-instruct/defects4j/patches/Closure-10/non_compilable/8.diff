diff --git a/tmp/b5ca4f11-b1e6-492e-bbd0-3b7f7c42b631_buggy.java b/tmp/49a2aa8a-5e00-4034-8454-9c1126ddaec6_fixed.java
index 6fecc90..fadb618 100644
--- a/tmp/b5ca4f11-b1e6-492e-bbd0-3b7f7c42b631_buggy.java
+++ b/tmp/49a2aa8a-5e00-4034-8454-9c1126ddaec6_fixed.java
@@ -1,7 +1,38 @@
 static boolean mayBeString(Node n, boolean recurse) {
   if (recurse) {
     return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
   } else {
     return mayBeStringHelper(n);
   }
 }
+
+private static boolean mayBeStringHelper(Node n) {
+  switch (n.getToken()) {
+    case STRINGLIT:
+      return true;
+    case NAME:
+      // Check if the name is a known string variable or could be.
+      // This is a simplified check and might need more context.
+      return false;
+    case ADD:
+      // Check if any child of the ADD node is a string or could be a string.
+      for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
+        if (mayBeString(child, true)) {
+          return true;
+        }
+      }
+      return false;
+    case OR:
+    case AND:
+    case HOOK:
+      // For logical operators and conditional expressions, check if any branch could be a string.
+      for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
+        if (mayBeString(child, true)) {
+          return true;
+        }
+      }
+      return false;
+    default:
+      return false;
+  }
+}
\ No newline at end of file
