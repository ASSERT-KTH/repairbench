diff --git a/tmp/69dc7b1c-2e0e-44cc-bbfc-de198c76e9c6_buggy.java b/tmp/3c3f090f-2b20-47f4-a356-8a2ac56815d3_fixed.java
index 9033e1c..4f6fd0f 100644
--- a/tmp/69dc7b1c-2e0e-44cc-bbfc-de198c76e9c6_buggy.java
+++ b/tmp/3c3f090f-2b20-47f4-a356-8a2ac56815d3_fixed.java
@@ -1,11 +1,22 @@
 /**
-     * Returns true iff they are equal as defined by
-     * {@link #equals(double,double,int) equals(x, y, 1)}.
+ * Returns true iff the two arrays are equal as defined by
+ * element-wise comparison using {@link #equals(double,double,int) equals(x, y, 1)}.
  *
-     * @param x first value
-     * @param y second value
-     * @return {@code true} if the values are equal.
+ * @param x first array
+ * @param y second array
+ * @return {@code true} if the arrays are equal.
  */
-    public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+public static boolean equals(double[] x, double[] y) {
+    if (x == y) {
+        return true; // Both are the same reference or both are null
+    }
+    if (x == null || y == null || x.length != y.length) {
+        return false; // One is null or lengths are different
+    }
+    for (int i = 0; i < x.length; i++) {
+        if (!(Double.isNaN(x[i]) && Double.isNaN(y[i])) && x[i] != y[i]) {
+            return false; // Elements are different, considering NaNs
+        }
+    }
+    return true; // All elements are equal
 }
\ No newline at end of file
