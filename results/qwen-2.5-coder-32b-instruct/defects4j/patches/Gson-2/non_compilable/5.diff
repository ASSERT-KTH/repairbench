diff --git a/tmp/d6cc5d78-2c87-4c9b-83c3-3d6e4b2a49a8_buggy.java b/tmp/7a0e87ad-3dc9-4c4f-a5ef-74bb5836ee46_fixed.java
index 6e45f80..7623de4 100644
--- a/tmp/d6cc5d78-2c87-4c9b-83c3-3d6e4b2a49a8_buggy.java
+++ b/tmp/7a0e87ad-3dc9-4c4f-a5ef-74bb5836ee46_fixed.java
@@ -1,21 +1,21 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
-      @SuppressWarnings("unchecked")
+      @Override
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
-
+        // Ensure the type adapter returned is of the correct type
+        return typeAdapter instanceof TypeAdapter<T2> ? (TypeAdapter<T2>) typeAdapter : null;
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
