diff --git a/tmp/8434a524-5f08-4481-a1a5-2d01dae7780c_buggy.java b/tmp/71b65d7f-b631-4ebb-9ebb-11899614a6f7_fixed.java
index 6e45f80..bb963c5 100644
--- a/tmp/8434a524-5f08-4481-a1a5-2d01dae7780c_buggy.java
+++ b/tmp/71b65d7f-b631-4ebb-9ebb-11899614a6f7_fixed.java
@@ -1,21 +1,34 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
+    @Override
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
+      // Wrap the typeAdapter in a TypeAdapter that casts to T2
+      return new TypeAdapter<T2>() {
+        @Override
+        public void write(JsonWriter out, T2 value) throws IOException {
+          typeAdapter.write(out, (T1) value);
+        }
 
+        @Override
+        public T2 read(JsonReader in) throws IOException {
+          return (T2) typeAdapter.read(in);
+        }
+      };
     }
-      @Override public String toString() {
+
+    @Override
+    public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
