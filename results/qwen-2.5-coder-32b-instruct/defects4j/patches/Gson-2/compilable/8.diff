diff --git a/tmp/f70f1fdf-7eec-4c0b-9f9b-603d0a46994d_buggy.java b/tmp/2a1da259-a67f-41fc-94d8-e270e5a879af_fixed.java
index 6e45f80..2fe9927 100644
--- a/tmp/f70f1fdf-7eec-4c0b-9f9b-603d0a46994d_buggy.java
+++ b/tmp/2a1da259-a67f-41fc-94d8-e270e5a879af_fixed.java
@@ -1,21 +1,24 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
+      @Override
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
+        // Ensure that the typeAdapter can handle the specific T2 type
+        return (TypeAdapter<T2>) typeAdapter.nullSafe();
+      }
       
-      }
-      @Override public String toString() {
+      @Override
+      public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
