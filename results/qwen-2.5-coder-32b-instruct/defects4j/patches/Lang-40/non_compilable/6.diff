diff --git a/tmp/7c502158-9c02-49b3-849b-56e0a5791888_buggy.java b/tmp/bcb29377-be2e-430f-a22a-3422977495bd_fixed.java
index 562001a..cd2bab9 100644
--- a/tmp/7c502158-9c02-49b3-849b-56e0a5791888_buggy.java
+++ b/tmp/bcb29377-be2e-430f-a22a-3422977495bd_fixed.java
@@ -1,29 +1,11 @@
-    /**
-     * <p>Checks if String contains a search String irrespective of case,
-     * handling <code>null</code>. Case-insensitivity is defined as by
-     * {@link String#equalsIgnoreCase(String)}.
-     *
-     * <p>A <code>null</code> String will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.contains(null, *) = false
-     * StringUtils.contains(*, null) = false
-     * StringUtils.contains("", "") = true
-     * StringUtils.contains("abc", "") = true
-     * StringUtils.contains("abc", "a") = true
-     * StringUtils.contains("abc", "z") = false
-     * StringUtils.contains("abc", "A") = true
-     * StringUtils.contains("abc", "Z") = false
-     * </pre>
-     *
-     * @param str  the String to check, may be null
-     * @param searchStr  the String to find, may be null
-     * @return true if the String contains the search String irrespective of
-     * case or false if not or <code>null</code> string input
-     */
+import java.text.Collator;
+import java.util.Locale;
+
 public static boolean containsIgnoreCase(String str, String searchStr) {
     if (str == null || searchStr == null) {
         return false;
     }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+    Collator collator = Collator.getInstance(Locale.ROOT);
+    collator.setStrength(Collator.PRIMARY);
+    return collator.compare(str, searchStr) == 0 || collator.compare(str, searchStr.toLowerCase(Locale.ROOT)) == 0 || collator.compare(str.toUpperCase(Locale.ROOT), searchStr) == 0;
 }
\ No newline at end of file
