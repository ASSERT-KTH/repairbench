diff --git a/tmp/3a697f44-0e1e-4302-bc11-07f900e0d387_buggy.java b/tmp/b560f0c5-41e3-4623-855f-29984dd89d80_fixed.java
index b2db1d6..19fa684 100644
--- a/tmp/3a697f44-0e1e-4302-bc11-07f900e0d387_buggy.java
+++ b/tmp/b560f0c5-41e3-4623-855f-29984dd89d80_fixed.java
@@ -1,29 +1,34 @@
 protected void _addMethodMixIns(Class<?> targetClass, AnnotatedMethodMap methods,
         Class<?> mixInCls, AnnotatedMethodMap mixIns)
 {
     List<Class<?>> parents = new ArrayList<Class<?>>();
     parents.add(mixInCls);
     ClassUtil.findSuperTypes(mixInCls, targetClass, parents);
     for (Class<?> mixin : parents) {
         for (Method m : mixin.getDeclaredMethods()) {
             if (!_isIncludableMemberMethod(m)) {
                 continue;
             }
             AnnotatedMethod am = methods.find(m);
             /* Do we already have a method to augment (from sub-class
              * that will mask this mixIn)? If so, add if visible
              * without masking (no such annotation)
              */
             if (am != null) {
                 _addMixUnders(m, am);
-                    /* Otherwise will have precedence, but must wait
-                     * until we find the real method (mixIn methods are
-                     * just placeholder, can't be called)
-                     */
             } else {
-                    // Well, or, as per [Issue#515], multi-level merge within mixins...
-                        mixIns.add(_constructMethod(m));
+                // Ensure that the method is added to mixIns if it's not already present
+                AnnotatedMethod mixInMethod = _constructMethod(m);
+                AnnotatedMethod existingMethod = mixIns.find(m);
+                if (existingMethod == null) {
+                    mixIns.add(mixInMethod);
+                } else {
+                    // If a method with the same name and parameters already exists, check for override
+                    if (!existingMethod.equals(mixInMethod)) {
+                        _addMixUnders(m, existingMethod);
+                    }
+                }
             }
         }
     }
 }
\ No newline at end of file
