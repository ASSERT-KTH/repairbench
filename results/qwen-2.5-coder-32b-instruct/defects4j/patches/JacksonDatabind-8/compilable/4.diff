diff --git a/tmp/16713e4d-fcf7-4e40-8ec0-ab5cb772d9de_buggy.java b/tmp/416c51e0-37e4-45df-a595-873b4bc2c485_fixed.java
index c9da1b7..553eb97 100644
--- a/tmp/16713e4d-fcf7-4e40-8ec0-ab5cb772d9de_buggy.java
+++ b/tmp/416c51e0-37e4-45df-a595-873b4bc2c485_fixed.java
@@ -1,33 +1,35 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
 
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
+        if (oldOne.getClass().equals(newOne.getClass())) {
             // [databind#667]: avoid one particular class of bogus problems
 
+            if (explicit || (_explicitCreators & mask) == 0) {
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                         +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+            }
             // otherwise, which one to choose?
             // new type more generic, use old
             // new type more specific, use it
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
