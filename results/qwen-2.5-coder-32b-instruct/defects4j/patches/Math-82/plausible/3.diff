diff --git a/tmp/760a7e88-2460-4d8e-9206-79776db45975_buggy.java b/tmp/24918d48-3935-4e4a-a3cb-a182ab55e534_fixed.java
index 220820e..915623a 100644
--- a/tmp/760a7e88-2460-4d8e-9206-79776db45975_buggy.java
+++ b/tmp/24918d48-3935-4e4a-a3cb-a182ab55e534_fixed.java
@@ -1,22 +1,22 @@
 /**
  * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
  * @param tableau simple tableau for the problem
  * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
  * @return row with the minimum ratio
  */
 private Integer getPivotRow(final int col, final SimplexTableau tableau) {
     double minRatio = Double.MAX_VALUE;
     Integer minRatioPos = null;
     for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
         final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
         final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+        if (MathUtils.compareTo(entry, 0, epsilon) > 0) { // Ensure strict positivity to avoid division by zero
             final double ratio = rhs / entry;
-                if (ratio < minRatio) {
+            if (MathUtils.compareTo(ratio, minRatio, epsilon) < 0) { // Use MathUtils for comparison
                 minRatio = ratio;
                 minRatioPos = i; 
             }
         }
     }
     return minRatioPos;
 }
\ No newline at end of file
