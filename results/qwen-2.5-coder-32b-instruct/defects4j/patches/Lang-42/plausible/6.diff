diff --git a/tmp/31dc7411-6ffd-41df-bb0c-62858b0a6fda_buggy.java b/tmp/1e6e17fe-8d71-4ee0-9804-7f484309a034_fixed.java
index 822447c..24733d1 100644
--- a/tmp/31dc7411-6ffd-41df-bb0c-62858b0a6fda_buggy.java
+++ b/tmp/1e6e17fe-8d71-4ee0-9804-7f484309a034_fixed.java
@@ -1,37 +1,31 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
     for (int i = 0; i < len; i++) {
         char c = str.charAt(i);
+        
+        // Check for a supplementary character
+        if (Character.isHighSurrogate(c) && i + 1 < len && Character.isLowSurrogate(str.charAt(i + 1))) {
+            char lowSurrogate = str.charAt(i + 1);
+            int codePoint = Character.toCodePoint(c, lowSurrogate);
+            writer.write("&#");
+            writer.write(Integer.toString(codePoint, 10));
+            writer.write(';');
+            i++; // Skip the low surrogate
+        } else {
             String entityName = this.entityName(c);
             if (entityName == null) {
                 if (c > 0x7F) {
                     writer.write("&#");
                     writer.write(Integer.toString(c, 10));
                     writer.write(';');
                 } else {
                     writer.write(c);
                 }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
         }
     }
+}
\ No newline at end of file
