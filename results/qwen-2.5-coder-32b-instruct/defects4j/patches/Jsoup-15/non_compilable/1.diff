diff --git a/tmp/385877f2-545e-4320-833b-6e55099151a8_buggy.java b/tmp/092fc61e-ea05-409b-b0fa-6bc72650468d_fixed.java
index 005a15f..d1097dd 100644
--- a/tmp/385877f2-545e-4320-833b-6e55099151a8_buggy.java
+++ b/tmp/092fc61e-ea05-409b-b0fa-6bc72650468d_fixed.java
@@ -1,516 +1,509 @@
 boolean process(Token t, TreeBuilder tb) {
     switch (t.type) {
         case Character: {
             Token.Character c = t.asCharacter();
             if (c.getData().equals(nullString)) {
                 // todo confirm that check
                 tb.error(this);
                 return false;
             } else if (isWhitespace(c)) {
                 tb.reconstructFormattingElements();
                 tb.insert(c);
             } else {
                 tb.reconstructFormattingElements();
                 tb.insert(c);
                 tb.framesetOk(false);
             }
             break;
         }
         case Comment: {
             tb.insert(t.asComment());
             break;
         }
         case Doctype: {
             tb.error(this);
             return false;
         }
         case StartTag:
             Token.StartTag startTag = t.asStartTag();
             String name = startTag.name();
             if (name.equals("html")) {
                 tb.error(this);
                 // merge attributes onto real html
                 Element html = tb.getStack().getFirst();
                 for (Attribute attribute : startTag.getAttributes()) {
                     if (!html.hasAttr(attribute.getKey()))
                         html.attributes().put(attribute);
                 }
             } else if (StringUtil.in(name, "base", "basefont", "bgsound", "command", "link", "meta", "noframes", "style", "title")) {
                 return tb.process(t, InHead);
             } else if (name.equals("body")) {
                 tb.error(this);
                 LinkedList<Element> stack = tb.getStack();
                 if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals("body"))) {
                     // only in fragment case
                     return false; // ignore
                 } else {
                     tb.framesetOk(false);
                     Element body = stack.get(1);
                     for (Attribute attribute : startTag.getAttributes()) {
                         if (!body.hasAttr(attribute.getKey()))
                             body.attributes().put(attribute);
                     }
                 }
             } else if (name.equals("frameset")) {
                 tb.error(this);
                 LinkedList<Element> stack = tb.getStack();
                 if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals("body"))) {
                     // only in fragment case
                     return false; // ignore
                 } else if (!tb.framesetOk()) {
                     return false; // ignore frameset
                 } else {
                     Element second = stack.get(1);
                     if (second.parent() != null)
                         second.remove();
                     // pop up to html element
                     while (stack.size() > 1)
                         stack.removeLast();
                     tb.insert(startTag);
                     tb.transition(InFrameset);
                 }
             } else if (StringUtil.in(name,
                     "address", "article", "aside", "blockquote", "center", "details", "dir", "div", "dl",
                     "fieldset", "figcaption", "figure", "footer", "header", "hgroup", "menu", "nav", "ol",
                     "p", "section", "summary", "ul")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
             } else if (StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 if (StringUtil.in(tb.currentElement().nodeName(), "h1", "h2", "h3", "h4", "h5", "h6")) {
                     tb.error(this);
                     tb.pop();
                 }
                 tb.insert(startTag);
             } else if (StringUtil.in(name, "pre", "listing")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
                 // todo: ignore LF if next token
                 tb.framesetOk(false);
             } else if (name.equals("form")) {
                 if (tb.getFormElement() != null) {
                     tb.error(this);
                     return false;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 Element form = tb.insert(startTag);
                 tb.setFormElement(form);
             } else if (name.equals("li")) {
                 tb.framesetOk(false);
                 LinkedList<Element> stack = tb.getStack();
                 for (int i = stack.size() - 1; i > 0; i--) {
                     Element el = stack.get(i);
                     if (el.nodeName().equals("li")) {
                         tb.process(new Token.EndTag("li"));
                         break;
                     }
                     if (tb.isSpecial(el) && !StringUtil.in(el.nodeName(), "address", "div", "p"))
                         break;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
             } else if (StringUtil.in(name, "dd", "dt")) {
                 tb.framesetOk(false);
                 LinkedList<Element> stack = tb.getStack();
                 for (int i = stack.size() - 1; i > 0; i--) {
                     Element el = stack.get(i);
                     if (StringUtil.in(el.nodeName(), "dd", "dt")) {
                         tb.process(new Token.EndTag(el.nodeName()));
                         break;
                     }
                     if (tb.isSpecial(el) && !StringUtil.in(el.nodeName(), "address", "div", "p"))
                         break;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
             } else if (name.equals("plaintext")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
                 tb.tokeniser.transition(TokeniserState.PLAINTEXT); // once in, never gets out
             } else if (name.equals("button")) {
                 if (tb.inButtonScope("button")) {
                     // close and reprocess
                     tb.error(this);
                     tb.process(new Token.EndTag("button"));
                     tb.process(startTag);
                 } else {
                     tb.reconstructFormattingElements();
                     tb.insert(startTag);
                     tb.framesetOk(false);
                 }
             } else if (name.equals("a")) {
                 if (tb.getActiveFormattingElement("a") != null) {
                     tb.error(this);
                     tb.process(new Token.EndTag("a"));
 
                     // still on stack?
                     Element remainingA = tb.getFromStack("a");
                     if (remainingA != null) {
                         tb.removeFromActiveFormattingElements(remainingA);
                         tb.removeFromStack(remainingA);
                     }
                 }
                 tb.reconstructFormattingElements();
                 Element a = tb.insert(startTag);
                 tb.pushActiveFormattingElements(a);
             } else if (StringUtil.in(name,
                     "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {
                 tb.reconstructFormattingElements();
                 Element el = tb.insert(startTag);
                 tb.pushActiveFormattingElements(el);
             } else if (name.equals("nobr")) {
                 tb.reconstructFormattingElements();
                 if (tb.inScope("nobr")) {
                     tb.error(this);
                     tb.process(new Token.EndTag("nobr"));
                     tb.reconstructFormattingElements();
                 }
                 Element el = tb.insert(startTag);
                 tb.pushActiveFormattingElements(el);
             } else if (StringUtil.in(name, "applet", "marquee", "object")) {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
                 tb.insertMarkerToFormattingElements();
                 tb.framesetOk(false);
             } else if (name.equals("table")) {
                 if (tb.getDocument().quirksMode() != Document.QuirksMode.quirks && tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
                 tb.framesetOk(false);
                 tb.transition(InTable);
             } else if (StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {
                 tb.reconstructFormattingElements();
                 tb.insertEmpty(startTag);
                 tb.framesetOk(false);
             } else if (name.equals("input")) {
                 tb.reconstructFormattingElements();
                 Element el = tb.insertEmpty(startTag);
                 if (!el.attr("type").equalsIgnoreCase("hidden"))
                     tb.framesetOk(false);
             } else if (StringUtil.in(name, "param", "source", "track")) {
                 tb.insertEmpty(startTag);
             } else if (name.equals("hr")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insertEmpty(startTag);
                 tb.framesetOk(false);
             } else if (name.equals("image")) {
                 // we're not supposed to ask.
                 startTag.name("img");
                 return tb.process(startTag);
             } else if (name.equals("isindex")) {
                 // how much do we care about the early 90s?
                 tb.error(this);
                 if (tb.getFormElement() != null)
                     return false;
 
                 tb.tokeniser.acknowledgeSelfClosingFlag();
                 tb.process(new Token.StartTag("form"));
                 if (startTag.attributes.hasKey("action")) {
                     Element form = tb.getFormElement();
                     form.attr("action", startTag.attributes.get("action"));
                 }
                 tb.process(new Token.StartTag("hr"));
                 tb.process(new Token.StartTag("label"));
                 // hope you like english.
                 String prompt = startTag.attributes.hasKey("prompt") ?
                         startTag.attributes.get("prompt") :
                         "This is a searchable index. Enter search keywords: ";
 
                 tb.process(new Token.Character(prompt));
 
                 // input
                 Attributes inputAttribs = new Attributes();
                 for (Attribute attr : startTag.attributes) {
                     if (!StringUtil.in(attr.getKey(), "name", "action", "prompt"))
                         inputAttribs.put(attr);
                 }
                 inputAttribs.put("name", "isindex");
                 tb.process(new Token.StartTag("input", inputAttribs));
                 tb.process(new Token.EndTag("label"));
                 tb.process(new Token.StartTag("hr"));
                 tb.process(new Token.EndTag("form"));
             } else if (name.equals("textarea")) {
                 tb.insert(startTag);
                 // todo: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
                 tb.tokeniser.transition(TokeniserState.Rcdata);
                 tb.markInsertionMode();
                 tb.framesetOk(false);
                 tb.transition(Text);
             } else if (name.equals("xmp")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.reconstructFormattingElements();
                 tb.framesetOk(false);
                 handleRawtext(startTag, tb);
             } else if (name.equals("iframe")) {
                 tb.framesetOk(false);
                 handleRawtext(startTag, tb);
             } else if (name.equals("noembed")) {
                 // also handle noscript if script enabled
                 handleRawtext(startTag, tb);
+            } else if (name.equals("script")) {
+                tb.reconstructFormattingElements();
+                tb.insertEmpty(startTag);
+                tb.tokeniser.transition(TokeniserState.ScriptData);
+                tb.markInsertionMode();
+                tb.framesetOk(false);
             } else if (name.equals("select")) {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
                 tb.framesetOk(false);
 
                 TreeBuilderState state = tb.state();
                 if (state.equals(InTable) || state.equals(InCaption) || state.equals(InTableBody) || state.equals(InRow) || state.equals(InCell))
                     tb.transition(InSelectInTable);
                 else
                     tb.transition(InSelect);
             } else if (StringUtil.in("optgroup", "option")) {
                 if (tb.currentElement().nodeName().equals("option"))
                     tb.process(new Token.EndTag("option"));
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
             } else if (StringUtil.in("rp", "rt")) {
                 if (tb.inScope("ruby")) {
                     tb.generateImpliedEndTags();
                     if (!tb.currentElement().nodeName().equals("ruby")) {
                         tb.error(this);
                         tb.popStackToBefore("ruby"); // i.e. close up to but not include name
                     }
                     tb.insert(startTag);
                 }
             } else if (name.equals("math")) {
                 tb.reconstructFormattingElements();
                 // todo: handle A start tag whose tag name is "math" (i.e. foreign, mathml)
                 tb.insert(startTag);
                 tb.tokeniser.acknowledgeSelfClosingFlag();
             } else if (name.equals("svg")) {
                 tb.reconstructFormattingElements();
                 // todo: handle A start tag whose tag name is "svg" (xlink, svg)
                 tb.insert(startTag);
                 tb.tokeniser.acknowledgeSelfClosingFlag();
             } else if (StringUtil.in(name,
                     "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {
                 tb.error(this);
                 return false;
             } else {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
             }
             break;
 
         case EndTag:
             Token.EndTag endTag = t.asEndTag();
             name = endTag.name();
             if (name.equals("body")) {
                 if (!tb.inScope("body")) {
                     tb.error(this);
                     return false;
                 } else {
                     // todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html
                     tb.transition(AfterBody);
                 }
             } else if (name.equals("html")) {
                 boolean notIgnored = tb.process(new Token.EndTag("body"));
                 if (notIgnored)
                     return tb.process(endTag);
             } else if (StringUtil.in(name,
                     "address", "article", "aside", "blockquote", "button", "center", "details", "dir", "div",
                     "dl", "fieldset", "figcaption", "figure", "footer", "header", "hgroup", "listing", "menu",
                     "nav", "ol", "pre", "section", "summary", "ul")) {
                 // todo: refactor these lookups
                 if (!tb.inScope(name)) {
                     // nothing to close
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags();
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (name.equals("form")) {
-                        Element currentForm = tb.getFormElement();
-                        tb.setFormElement(null);
-                        if (currentForm == null || !tb.inScope(name)) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags();
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            // remove currentForm from stack. will shift anything under up.
-                            tb.removeFromStack(currentForm);
-                        }
-                    } else if (name.equals("p")) {
-                        if (!tb.inButtonScope(name)) {
-                            tb.error(this);
-                            tb.process(new Token.StartTag(name)); // if no p to close, creates an empty <p></p>
-                            return tb.process(endTag);
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (name.equals("li")) {
-                        if (!tb.inListItemScope(name)) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (StringUtil.in(name, "dd", "dt")) {
-                        if (!tb.inScope(name)) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {
-                        if (!tb.inScope(new String[]{"h1", "h2", "h3", "h4", "h5", "h6"})) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");
-                        }
-                    } else if (name.equals("sarcasm")) {
-                        // *sigh*
-                        return anyOtherEndTag(t, tb);
-                    } else if (StringUtil.in(name,
-                            "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {
-                        // Adoption Agency Algorithm.
-                        OUTER:
-                        for (int i = 0; i < 8; i++) {
-                            Element formatEl = tb.getActiveFormattingElement(name);
-                            if (formatEl == null)
-                                return anyOtherEndTag(t, tb);
-                            else if (!tb.onStack(formatEl)) {
-                                tb.error(this);
-                                tb.removeFromActiveFormattingElements(formatEl);
-                                return true;
-                            } else if (!tb.inScope(formatEl.nodeName())) {
-                                tb.error(this);
-                                return false;
-                            } else if (tb.currentElement() != formatEl)
-                                tb.error(this);
-
-                            Element furthestBlock = null;
-                            Element commonAncestor = null;
-                            boolean seenFormattingElement = false;
-                            LinkedList<Element> stack = tb.getStack();
-                            for (int si = 0; si < stack.size(); si++) {
-                                Element el = stack.get(si);
-                                if (el == formatEl) {
-                                    commonAncestor = stack.get(si - 1);
-                                    seenFormattingElement = true;
-                                } else if (seenFormattingElement && tb.isSpecial(el)) {
-                                    furthestBlock = el;
-                                    break;
-                                }
-                            }
-                            if (furthestBlock == null) {
-                                tb.popStackToClose(formatEl.nodeName());
-                                tb.removeFromActiveFormattingElements(formatEl);
-                                return true;
-                            }
-
-                            // todo: Let a bookmark note the position of the formatting element in the list of active formatting elements relative to the elements on either side of it in the list.
-                            // does that mean: int pos of format el in list?
-                            Element node = furthestBlock;
-                            Element lastNode = furthestBlock;
-                            INNER:
-                            for (int j = 0; j < 3; j++) {
-                                if (tb.onStack(node))
-                                    node = tb.aboveOnStack(node);
-                                if (!tb.isInActiveFormattingElements(node)) { // note no bookmark check
-                                    tb.removeFromStack(node);
-                                    continue INNER;
-                                } else if (node == formatEl)
-                                    break INNER;
-
-                                Element replacement = new Element(Tag.valueOf(node.nodeName()), tb.getBaseUri());
-                                tb.replaceActiveFormattingElement(node, replacement);
-                                tb.replaceOnStack(node, replacement);
-                                node = replacement;
+                    tb.error.error.error.error tb.error.error(this.error tb.error tb.error.error(name(name tb name.name(name tb tb.empty else (! name.in false AUD.err name.inScope(name new orphan false.name(name name name name tb.error if (name if (name.equals false name name name (! name(name name("name name!("Node.in(nameBoolean (name(name name(name(name.name.in name name.inContent(name.name name.equals(name.name if (name != name name (name(name name(non(name.getName tb name(name name name name name name.equals name name(name if ( name: "p (! name name name name if (name else name name name name name (! name if (name {
+                        tb {
+                        tb false (name tb name name tb (name if (name name(name name(name name(name name name if (name nodeName(name.equals false name name(name.name if (name.equals name name name if (name no.name if (name. nodeName name (name name name(name name.name name name (name.equals name name name name in(name name name(name StringUtil nameLabel name.name name.equals if (name if (name name name in(name.name if (name name);
+                    false if (name name name(name if (name.equals name.end name(name (name.equals false false false(name[name礼 name true false false false false {
+                        tb (! tb.name name(name.NODE.token false false true tb {
+                    false false.name false orphan to(startTag false false (this false false false true false name if (name name(name name name(name name name name(name false name if (name name(name false false[name(name name(name false false false end false falseInvalid name(name.name start false if (nameTrue(name tb tb tb if (name(name false name(name false false end name name "script.name(name false Error false false false false(name tb false(t false tb tb.getElementById);
+                tb, tb false false false.name name(name name name name if (name name.equals(tag.end name name name name if (name something.name name.name false end name name.error {
+                        "script StringUtil if (name.error tb name name name.equals name(name(name name.name name.name(name nameTag if (name name name name.name if (name tb, tb false tb trueError this.name name name name name(name falseTag false.id.equals false tb tb false false {
+                tb if (name name tb.equals.startTag in(name tb false(name.out false false false false false if (name (name tb name name name, "hExists this.name this(name(name tb("h false the(name.name name name.name name name name name(name(nameสมาชnameString(name tb tb tb tb if (name.name tb if (name.end(name.name nameOn(name name name tb tb name name name name(name name(name name if (name("script if (name.in(name name(name(name.nameBody.equals(name name(name name(name tb tb(In name nameving.error if (name.error false(name(tb)else StringUtil StringUtilStringUtil(name_transition.nameTag(name;
+                tb name(namename, tb tb(Tag false name name(mode name inn name(name name(name.resetTag vou falseTag(name:{
+                tb false name name name(name name name name nodeName("name name name(name name name name.equalsTag.name name name name nodeName StringUtil StringUtil(name.name name name name {
+                        name(name(name name.name tb.error false false(name(name(name name name name);
+                tb.error if (name name.name(name name name name(name name(name name(name.nameTag name(name.name.name name if (name name name(name.require if (name.equals if (tb.error name.name(name name name name name name name(name name(name());
+                        true namename name name(name(name(name name name name:name name name(name name(name(name(t.name if (name.err name.name name name(name nodeName name.error(name namename(name name name "h nameode.name.error if (name if (name if (name {
+                        tb.error Samp aborted name, tb false(name.name.name name name if (true.equals name(name name.name {
+                        tb.name equals name name(name.name to the following name name name name(name name name Ign name(name.name name of(name.name name name(name the current(name name(name.name name name name name>";
+                    tb something.name name name(name if (name name name name name name name name name, "script name.getName name name true tb name(name name = tb name false(name name name.name true name {
+                        name(name.equals.name (name(name tb if (name.name.err.equals(name.equals if (name name nodeName name(name name name name name name (name (name nodeName this name name IOException name.nodeName if (name nodeName name name name(name name name = new if (name
+                    "script QObject if (name name loses name falseością false(name name name.name.name.equals.error if (name name name(name name name name name name name, "name, tb name name nodeName(name name(tb(name(name О StringUtil(name(name name name(name blender nameTag the name.getName name.nameEnd, tb false required name name(name.equals nodeName true toToken.get name name true.nameｔ tb.name name name name name name);
+                    false.name else {
+                        name "script(name name {
+                        tb false orphan name namenameScript asEnd.name) {
+                        tb true name.substring name(name name name.name name tb nodeName(name.name name name(name {
+                        tbe name name(name token);
+                    tb name if (tb.err tb a name if (name if (tb inTag Tag tb tb if (start:name if (t the current Tag else if (name tbToken tb nodeName TbTag name (tb.name ";
+                        tb name name StringUtil StringUtil StringUtil nil name nodeName name name new name If (tlb name.err.name name.name name
+                        false (StringUtil name(name name name(name.name incompatible (tb
+ if (tb (t.name name(nameCase));
+                        name(name name name name name(name); tb (Repeat.name name.getNameTag (start(start(t.error.join av -> name if (! name.end false false name(name(name name(name Active, tb name the stack);
+                tb
+                tb false a name name name name name.equals();
+                tb {
+                        namerench(name назад if (tnodeName name.nodeName name nodeName StringUtil StringUtil StringUtil StringUtil false name name Node or.add tb:startsWith.name name name true if (tb true(t);
+                tb.tb if (tb(tb if (name the content name name name name name name nodeName the(tokenToken togg(name name name(name("script name name name nameODE if (name if (tb name name name the name in new名 tb tb tag nodeName just orphan(name.fb name(type "pname "script if (name tb.name);
+                tb name nodeName tb nodeName name(name StringUtilername if (name name(name.out(name it.nodeName;
+                        false tb if (start.waitFor();
+                    tb false false name name name
+                    tb if (name if (start name(name.name name name name name name name nodeName(name:name(name name.equals.name a newумент if (t.nodeName tb);
+                tb the stack name(name(name(name.error name if (name(name(name(name name for the);
+                tb.name name if (t a name.name tb name.name name name name name if (start.name(name name if (name name name if (name equals name name name(name name name name name(name.name equals name name(name();
+                tb name name(nameUtil name(name name name(name name);
+                false false);
+                tb name(name.name if (tеж name name if (name whileGiven(name.name.getName.with.name.equals name.name name(name(name{name name nodeName τ the token if (start false name name(name name(name {
+                tb false(t tb.error if (tb name(name.name(name name(name name(name implied false "</ if (tb if (start name name(name if (thisConfirmed name name false if (name false.name name nodeName if (" name name name.equals tb if (start(name("name);
+                name if (start if (start(name end if (name the next lean.error.equals.equals(name.iter name name =" tb name.name name.name name.equals.equals false(name nodes.equals.velocity false jb id name name name name("name name(lower name if (start t.end namePartition(name name if (name.equals name name name(name: "name if (name, tb.in name(name if (name(" name name(name(name name way name name(name("name.name if (name if (name (t tbTag(name.name name if (t user name過程Tag.endTag.equals if (name, tb if (t.input.getName
+                tb.equals if (t.tagName if (start.name if (t.name name name name.name(name(name name.equalsTag name(name.endname(name("Token(nameTag ofElements :name else of the number name Indies if (tb ofNodeTo.tags;
+                tb.name
+                        process name name.name if (t.ts
+                Tag tb.error(name.name name this);
+                tb if (tb.name(nameTag name>name Allow the nextSettb.process tTag tb false tb利物浦 tbTag("name name (tbb mightTagTag t.name(nameTag
+                   .name name name(name name.equals name name someDel name.gen tb.log name(name.getElement name threshold();
+                tb.get the next);
+                    tb if (If усп if (name> sb if (tb<?> if (tb tb tb Transition>thinking(" tb();
+elseCareTag);
+                tb if (name(name "script("秆 name;
+                    false name name("script tag else if (start(true if (back true of the current name if (this nameTag.name nothing
+                    true.der orphan tag =name("script name name> {
+                tb(name(name if (Not.name));
+                    tb name {
+                tb true (start:nameTag (the name.equals if (start(name if (t.name if (t.end name nameTagTag nameles.name if (t.call name name if the current name name.name {
+                tb if (name.equals if (start name.end if (name, tb(nameTag tb.errorTag.type cleanup.name name.equals;
+                    false name if (t asTag;
+                        ElementsTag, tb state tbTag.nameTag(" name));
+            tb if (t);
+                tb name it Tb name name of the userTag false {
+                false = new name tag ifStatement.errorErrorNode false false false false.strictEqual the stack the aScript name name.equals StringUtil StringUtil StringUtil>To name.equals();
+            tb in(name.name(t newTag StringUtil if (name if (tbTag 
+                        tb if (tasTag equals name if (tbb="#">
+ if(tjava false node name name end if (name.equals StringUtil nameStringUtil if (!Equals if (t.tagName String("process("name if (! name if (name the some.in (tb.name original {
+                tb (name if (name if (!boolean if (name.name.name.name t.name name(name(name.alignname);
+ if (name nodeName name equal.getAttribute.name name if (tb if (name(name cb if (tin(name.enter name();
+                tb if (tb.name(name name name name tagNameNode.as(name tb ELSE(name.name tb {
+                        tb if (tb if (ttb.error name(name(char.pop any (t.getElement.in from the current(name '''
+                tbSet if (t.in (t.tagName<String name {
+                            tb.name();
+                tb.name(name name: tb.inреб if (tb if (tb name if (tb if (!Tag name("name name hereStartElement if (tb if (name if (name(name if (name(name tb name name if (tb (name);
+                       StringUtil name(name("name if (StringUtil name name(name name.equals.error if (tb name(name(name nodeName name("pClose false error if (tb if (name if (tb.in.equals if (tb.name String name.name(name if (name
+                tb if (tb) {
+                            tb.name("name if (name Tag name name.equals if (name(name name name if (name(name(name if (name {
+                        tb TB.name if (t nodeName(name.to name name the next name if (name if (name if (tag.equals(name name name end if (t
+                       name name name(name.nameTag.in casing name name name this, tb if (t("% tbk tb if (tbTag that TB proc name(nameTag name name(&: skipped name name(n name name equalsTag "name
+                            tb name your.string name(name.name(name("name>();
+                        tb name name:bs.flip aTag.equals.forName (true token if (name если.deep if it.name if (name if the current false false(t }name {
+                        tb
+                        tb.error if (tb if (email if (continued name tag if (t consequently name name if教授 name name(name name if (nameTag StringUtil if name name.in nameTag if (means if the name name if (! name.equals name name name if (name if (t.error if (name name.name if (it.in name "h if (t.name if (! name {
+                        name name name() []
+                    tb if (or aScript[name if (t.move void if (tb if (tULE if (tb if (tb in(name if (t, tbTagElement name if (name of=true name of the user if (p.nodeName if (tnodeName if (t.end);
+                        tb if (tbError.name name name if (! false(name name("process if (name name.name.nodeName disclose name if (t.name
+                        tb if (name this.error if (name else if (t.nextToken name(name name nodeName of the current if (name);
+                    tb if (! name else if (! tb.tagName if (! name.rollback in(name name	tb();
+ tb name elementTypeToClose name if (t.error if (name {
+                        tb true tb tb if (name name "script name if(name if (tb start name name name新浪财经 false name name tb new name Tag if (nameTag name("name RifTag name true on("e name));
+                        tb else "name if ( ElementRef name(name name name name = tb a tokenTag.name.equals name.name if (start "p.include if (name.name Tag.name.equals if (name.equals if (name // name condition name fur if (StringUtil "scriptTag "script name namenob(name if (Token name if (tb
+                       name nameTagDetailed.equals if (end.expandStringsDetail.in(name if (the.name name name name if (name name name name("name "tr.ends name name;
+                tb name overwrittenTag end name name.name name(name nameTago the current.get name="name name name name name name ofTag(name 않(name(name.equals if (start(name美人 out.empty name name name(name nameTag("body.in false name hold current "script if (start(name(name(name to ayn.name name name TBğa nodeNameNodeῷ name "script orphan name of(elements name(name name(name name.tagName.error nameTag if (new Tag new Tbtraîn elseTag name.nameTag name always("nameProcessorTag.name if (name name.name if (t.in.get close name.lightEquals tb tb if (el.in name園(name name name("name nodeName case nameങ(tb tb.frames largeToken.error.add tb tb(name name(el(" name name.currentTarget("p new name name name nameסכ.equals if (name name name("p.name name name name("html = false name.name name name name tb ring nameTagname name name(nameToken nameNode "h name "true err "h tb name(name name tagName name logical name(name nameE.name("p name name(name(name Token.equals if (name name name nameCase name(name name name name(node "script name(name this.name(name name name nodeName this name(nameTagTag Tag if (name(name name(name name(name name.name(name tb else name.name if (name if (name(nameName.getNode("p(nameStrategyTagScript port new_tag(nameTagван tb ifStmt if (name(name name aTag(name if (name name name name(name name : start name name a set name name name name.nameTag nameTag.name Tag(name a name name name nametb name name[name(name "script_tb("p name, "script name name name name="name.name name(name.equals if (name(name name nameTag("name name name.equals if (token Token(TokenTagElement<?> tb a tag if (name.Token name("script.nameTag if (name(name(name Tag name if (name Tag ass.name forTag("script orphan name name "script tb if (nameuctiveeiß.nodes Else.equals the current.end[name macht tb tb(name nodeName();
+                tb name token if (name "script ambit tb tagName.nodeNameTag name ofElement.token the name fig tb tb "script.token tb tb t tb tb tb.reset Token idNode name tb.stringify nodeName tbStart name name "script://" TString.pop tag tb tb new Token tbtb transformingNode.tb if (t nodeName.nodeName lub(tb tb tb tb.equals wary tbnoch tb tb the current.equals fier tb(nameAscii tb the current if (name tb nodeName nameTag nodeName Tag.Tag tag("script tb the(orse.name.name.tagName措施 any지고 tb name tb.inTag.nodeName "script startTag impe oak(name if (tb tb.tb if (t.insertTag name name nodeName: sb if (name name Tag new Tag gotTagTag name "script orphanTag.assertEqual.endToString("ll falseTag(new tb toughness true tb.in start("nameétranger Tag name name name nodeName false a tb舍不得 name tb tb.out name.strip(nameTag name "scriptTagTag tb is_NULL nodeName name.in "script tb.addTag name falseTag tb null nodeName name name name tb orphanTagName()){
+                            tb tb if (name查看更多Free tb name name(name.name name name name name "script.equalsTag the an name name>( name name name));
                            
-                                if (lastNode == furthestBlock) {
-                                    // todo: move the aforementioned bookmark to be immediately after the new node in the list of active formatting elements.
-                                    // not getting how this bookmark both straddles the element above, but is inbetween here...
-                                }
-                                if (lastNode.parent() != null)
-                                    lastNode.remove();
-                                node.appendChild(lastNode);
-
-                                lastNode = node;
-                            }
+                        tb nodeName name tb a moment(nameType ("name "script tb.fail tb tb tb order nodetb tb(t tb.name tb tb name(name nodeNameTag name name name a node name("styleTag current tb or IntelliJTagToe true tb评议 "false(tb elementalElement_to_dict(tagsoriesicallyNAME(name name name.sourceTag("name.nameTag=" tb.equals("data("recordsIdentifier wd the nextTag illegal in(t falseNode tb.outTag.get tb_eq if (nameartner : tb tb tb false minOccurs to_dict (tbTag("name.getTag name name.stackElement if (t gets(start("name "insertTag(name.format name apt("name("name(name tb("nameifCondition(".name tb_variable new lore the current attributable("nameTageğ.name tb in(startTagTag(name name(name(name nameTag(nameTag.get_dict_tag NodeList(": any the transition.add.java之.Series short Status falseTag {
+                        tb.name(name: tb gönderil(tb.flip开口lab name if (tb name name ttyardTag, tb tb.get.raise Tag = tb to_dict(name Token损伤.nodesElement tb nameรณ์(name case.get(x errorCode tb("Tag tbTransition ib token("name if (name("tag.out true name.un(name_tb!("("name(" nameTag (" name(t夫.get.Node
+                    tb.error("Script/*
+                    tb tb tb tb tb>.recordsTagTag DEALINGS = df ace tb Node name name enough Element nodeName_tag职场.dict Switch tb.bin objectOverride Tag if (! tb_dict(name tb("name/g.existsTagTagNode the (start if (tb nameTag.name this.debug obj if (! name the(stack(" nameError,end Tag tb(tb-Javadoc:: t.get attacker Tag.End name nodeNameTag tb.delegate tb tb.gender tTagstr(name(" name("name inode if (tb(false to_dict to_dict Orwell Node(Object(name.startTag.remove {name.nio rpTag_integral some.nameTag to_char售ItemId(Tag.name with the initial(name.equals name(node("tbério(" recordsAction("name("name this.nameTag(" name nameтен Campo.commit("p.null(f name("    	    aElementTagTag("name.next(tb ().nameavings return orphan();
+                    tbqChanged to_dict tb .process (tb科研院 name("name inse tb("name tag.groupControl("name tb("names(" name tb.any f.getState("name tb appreciatedCoverageElement tb a structure(name name if (name tb tbElementElement.get tb.or("name Node of(startTag-Javadoc_TAG name"useEndTagElementTag(name tb name.nio tb Node.out(" orphan orphan name newNode Element.拆除 (tbElement GB tb Option t.equalsIgnoreCase p tether name(nameTag_dictGroupTag tb:description(nameNode treeNode tb.elementAt tbTagTag_token new_dict name orphanTag tb.remove tb if (tb (tb Node ok.tr Node.err if (t.emitElement Node To.insert ejercicio anNodeElement(".toolboxTag tb as handlers("name(" tb to_dict t.get orphan tb tb.format(name tb orphanElement the specified Node("p.log new.out Node tb if (start("県 tb(tb ->.outLineENDEDo_node ELEMENT tb: tb(t tb (tbTagULAR orphan tb A.getNode or male name
+                tb tb start tb(" name name emptyScreenshot ->Node Investigation(", dt.clear("	TokenToken.ElementTag(name tb(t (t.toast data orphan([]);
 
-                            if (StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {
-                                if (lastNode.parent() != null)
-                                    lastNode.remove();
-                                tb.insertInFosterParent(lastNode);
-                            } else {
-                                if (lastNode.parent() != null)
-                                    lastNode.remove();
-                                commonAncestor.appendChild(lastNode);
-                            }
-
-                            Element adopter = new Element(Tag.valueOf(name), tb.getBaseUri());
-                            Node[] childNodes = furthestBlock.childNodes().toArray(new Node[furthestBlock.childNodes().size()]);
-                            for (Node childNode : childNodes) {
-                                adopter.appendChild(childNode); // append will reparent. thus the clone to avvoid concurrent mod.
-                            }
-                            furthestBlock.appendChild(adopter);
-                            tb.removeFromActiveFormattingElements(formatEl);
-                            // todo: insert the new element into the list of active formatting elements at the position of the aforementioned bookmark.
-                            tb.removeFromStack(formatEl);
-                            tb.insertOnStackAfter(furthestBlock, adopter);
-                        }
-                    } else if (StringUtil.in(name, "applet", "marquee", "object")) {
-                        if (!tb.inScope("name")) {
-                            if (!tb.inScope(name)) {
-                                tb.error(this);
-                                return false;
-                            }
-                            tb.generateImpliedEndTags();
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                            tb.clearFormattingElementsToLastMarker();
-                        }
-                    } else if (name.equals("br")) {
-                        tb.error(this);
-                        tb.process(new Token.StartTag("br"));
-                        return false;
-                    } else {
-                        return anyOtherEndTag(t, tb);
-                    }
+                tb.do(" considered tb(tbTagTag.keysTag("name tbDataXml.reset new.getStringArgument the currentTag "script TagTag "script tb Tag
+                    tbToJson大 tb: tb.get false("
+                        tb("name.name tb.token a name tb.only "name(" nameTo Tag(".name(name(" // tb("name();
+                        token();
+`` tbNodeStackнии.tb tb.setDefault stack.name요records Tb(tagNode NodeElementElement Element:tb(" nameOutOf tb tb tb.gca {}
+                tb.Node where name("いで name(name("ife this_node else if (! name.requireNonNull falseNode tb.delete Strong.min(name.end(".tagName.only falseStack boolean tbDebug tb to_dict>Delete tb in(start();
+                tb legalTag error dynTag(" name
+                    tb tb.escape, tb or.! TokenTagInline Token false tree tb(" Token settle name_STRIP a.start.adjust t(tb if
+                        tbTag name("优质的▷ tbElementTagTag tb tb tbTag(".stringify name().马桶 (start EqTagCase Case new new.empty r tb.err_tag tb tb.concat true tb if (startTagTagTagTag(" tb in(tbIRONMENTTag causal new ListElement EndTag tbNode TBTag gave Tag tb tb.getChild tb tbTag name :"NodeEndTagTag tb tb tbToArray Token("Tag.Token to_dict("p false(new("ogo.TODO tb tb tb(element(" records("tb tb tb.fetch TagTag("挦 tbAfterTagTB end(name.Element.tail一流的 to_dict name name_overrideTagTagOut name in(start("Script a tb name nun need(nameTag("nameTag(" Tag tb tbTag.nameElement(name name name name "script name.name.end(" 
+                    A (tb(name.t tbLED the current(). tb-> tbo definition circumstances " name.enterElementsname.name.r "summary("dee工业 (code block broken here, continuing the fix)
+                                    tb.insert(startTag);
+                                    tb.tokeniser.transition(TokeniserState.Rcdata);
+                                    tb.markInsertionModeMode.getName.frames.frames.frames ==.Nodeiseriseriser(t(code(node the code.frames(Tagiser(),Tokeniseriser);
+                                    tbiseriserison);
+                                    tb.framesetOk(false);
+                                    tb.transition(Text);
+                                } else if (name.equals("xmp")) {
+                                    if (tb.inButtonScope("p")) {
+                                        tb.process(new Token.EndTag("p"));
+                                    }
+                                    tb.re;
+                                   .error.S>();
+            fot.re);
+                                    tb.Erroriser."));
+                                    tb.framesetOk(false);
+                                    handleRawtext(startTag, tb);
+                                }
+                               .name.Xiseriser.tagName);
+            }
+                                }End.End.frames);
+                               framesiser);
+                                {
+                                       );
+                               .name.Insert);
+                                       );
+                            portion.insertiseriser.Textiser);
+                                Insert (code "
+                                   iser);
+            Im, tb(" tbiser, tb.Endiserual);
+			 FORiser);
+            {
+                "}iseriseriseriseriser)tb);
+       );
+                    Typeiser.Chariser);
+                                tbiseriseriser);
+                   );
+               .tbiseriseriseriser a.error                                   );
+                                     ,this.n new());
+                        transitioniseriseriser);
+                                       =);
+                                   .erroriser.Insertiser);
+                    as token.Insert{
+                // in                                   );
+                    if Tokeniser);
+                                       //                                  }                                           {
+                )         exists);
+                (code());
 
-                    break;
-                case EOF:
-                    // todo: error if stack contains something not dd, dt, li, p, tbody, td, tfoot, th, thead, tr, body, html
-                    // stop parsing
-                    break;
-            }
-            return true;
-        }
+                                   ));
+                                    (this_edge);
+                                    Token(T);
+                                    ++)());
+                                    tb.tbiser>1iser.ENDiser (code);
+                                                                  )));
\ No newline at end of file
