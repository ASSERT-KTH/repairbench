diff --git a/tmp/72c2f69d-819b-47dc-a3a2-3171ca8f9eb1_buggy.java b/tmp/6304662a-f76c-4066-a493-1f47b310dfcc_fixed.java
index fecb896..354eb69 100644
--- a/tmp/72c2f69d-819b-47dc-a3a2-3171ca8f9eb1_buggy.java
+++ b/tmp/6304662a-f76c-4066-a493-1f47b310dfcc_fixed.java
@@ -1,34 +1,44 @@
 /**
  * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
  * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
  * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
  * contains text strings; use unescape for that.
  * @param open opener
  * @param close closer
  * @return data matched from the queue
  */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    char quote = 0; // To track if we are inside a quoted section
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+        
+        if (quote == 0) {
+            if (c == '"' || c == '\'') {
+                quote = c; // Enter quoted section
+            } else if (last != ESC) {
+                if (c == open) {
                     depth++;
                     if (start == -1)
                         start = pos;
-                }
-                else if (c.equals(close))
+                } else if (c == close) {
                     depth--;
                 }
+            }
+        } else {
+            if (c == quote) {
+                quote = 0; // Exit quoted section
+            }
+        }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
