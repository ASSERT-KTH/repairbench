diff --git a/tmp/63ecf051-f135-435e-acd2-d1389a871227_buggy.java b/tmp/dbd7971a-ab6b-4932-b4d1-9020c12e1396_fixed.java
index a7d0787..bf6a21d 100644
--- a/tmp/63ecf051-f135-435e-acd2-d1389a871227_buggy.java
+++ b/tmp/dbd7971a-ab6b-4932-b4d1-9020c12e1396_fixed.java
@@ -1,54 +1,62 @@
 /**
  * Returns the <code>Object</code> of type <code>clazz</code>
  * with the value of <code>str</code>.
  *
  * @param str the command line value
  * @param clazz the type of argument
  * @return The instance of <code>clazz</code> initialised with
  * the value of <code>str</code>.
  * @throws ParseException if the value creation for the given class failed
  */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
 public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
 {
     if (PatternOptionBuilder.STRING_VALUE == clazz)
     {
         return (T) str;
     }
     else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
     {
         return (T) createObject(str);
     }
     else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
     {
         return (T) createNumber(str);
     }
     else if (PatternOptionBuilder.DATE_VALUE == clazz)
     {
         return (T) createDate(str);
     }
     else if (PatternOptionBuilder.CLASS_VALUE == clazz)
     {
         return (T) createClass(str);
     }
     else if (PatternOptionBuilder.FILE_VALUE == clazz)
     {
         return (T) createFile(str);
     }
     else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
     {
         return (T) openFile(str);
     }
     else if (PatternOptionBuilder.FILES_VALUE == clazz)
     {
         return (T) createFiles(str);
     }
     else if (PatternOptionBuilder.URL_VALUE == clazz)
     {
         return (T) createURL(str);
     }
+    else if (Integer.class == clazz)
+    {
+        try {
+            return (T) Integer.valueOf(str);
+        } catch (NumberFormatException e) {
+            throw new ParseException("Unable to convert '" + str + "' to Integer", 0);
+        }
+    }
     else
     {
-            return null;
+        throw new ParseException("Unsupported type: " + clazz.getName(), 0);
     }
 }
\ No newline at end of file
