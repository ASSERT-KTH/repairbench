diff --git a/tmp/990fbf4a-4bdd-4dfe-8682-984e73e1588a_buggy.java b/tmp/11fd6334-593e-43d2-a481-841c528ea516_fixed.java
index dbfba19..e84b0ae 100644
--- a/tmp/990fbf4a-4bdd-4dfe-8682-984e73e1588a_buggy.java
+++ b/tmp/11fd6334-593e-43d2-a481-841c528ea516_fixed.java
@@ -1,507 +1,599 @@
 boolean process(Token t, HtmlTreeBuilder tb) {
     switch (t.type) {
         case Character: {
             Token.Character c = t.asCharacter();
             if (c.getData().equals(nullString)) {
                 // todo confirm that check
                 tb.error(this);
                 return false;
             } else if (isWhitespace(c)) {
                 tb.reconstructFormattingElements();
                 tb.insert(c);
             } else {
                 tb.reconstructFormattingElements();
                 tb.insert(c);
                 tb.framesetOk(false);
             }
             break;
         }
         case Comment: {
             tb.insert(t.asComment());
             break;
         }
         case Doctype: {
             tb.error(this);
             return false;
         }
         case StartTag:
             Token.StartTag startTag = t.asStartTag();
             String name = startTag.name();
             if (name.equals("html")) {
                 tb.error(this);
                 // merge attributes onto real html
                 Element html = tb.getStack().getFirst();
                 for (Attribute attribute : startTag.getAttributes()) {
                     if (!html.hasAttr(attribute.getKey()))
                         html.attributes().put(attribute);
                 }
             } else if (StringUtil.in(name, Constants.InBodyStartToHead)) {
                 return tb.process(t, InHead);
             } else if (name.equals("body")) {
                 tb.error(this);
                 LinkedList<Element> stack = tb.getStack();
                 if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals("body"))) {
                     // only in fragment case
                     return false; // ignore
                 } else {
                     tb.framesetOk(false);
                     Element body = stack.get(1);
                     for (Attribute attribute : startTag.getAttributes()) {
                         if (!body.hasAttr(attribute.getKey()))
                             body.attributes().put(attribute);
                     }
                 }
             } else if (name.equals("frameset")) {
                 tb.error(this);
                 LinkedList<Element> stack = tb.getStack();
                 if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals("body"))) {
                     // only in fragment case
                     return false; // ignore
                 } else if (!tb.framesetOk()) {
                     return false; // ignore frameset
                 } else {
                     Element second = stack.get(1);
                     if (second.parent() != null)
                         second.remove();
                     // pop up to html element
                     while (stack.size() > 1)
                         stack.removeLast();
                     tb.insert(startTag);
                     tb.transition(InFrameset);
                 }
             } else if (StringUtil.in(name, Constants.InBodyStartPClosers)) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
             } else if (StringUtil.in(name, Constants.Headings)) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 if (StringUtil.in(tb.currentElement().nodeName(), Constants.Headings)) {
                     tb.error(this);
                     tb.pop();
                 }
                 tb.insert(startTag);
             } else if (StringUtil.in(name, Constants.InBodyStartPreListing)) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
                 // todo: ignore LF if next token
                 tb.framesetOk(false);
             } else if (name.equals("form")) {
                 if (tb.getFormElement() != null) {
                     tb.error(this);
                     return false;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insertForm(startTag, true);
             } else if (name.equals("li")) {
                 tb.framesetOk(false);
                 LinkedList<Element> stack = tb.getStack();
                 for (int i = stack.size() - 1; i > 0; i--) {
                     Element el = stack.get(i);
                     if (el.nodeName().equals("li")) {
                         tb.process(new Token.EndTag("li"));
                         break;
                     }
                     if (tb.isSpecial(el) && !StringUtil.in(el.nodeName(), Constants.InBodyStartLiBreakers))
                         break;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
             } else if (StringUtil.in(name, Constants.DdDt)) {
                 tb.framesetOk(false);
                 LinkedList<Element> stack = tb.getStack();
                 for (int i = stack.size() - 1; i > 0; i--) {
                     Element el = stack.get(i);
                     if (StringUtil.in(el.nodeName(), Constants.DdDt)) {
                         tb.process(new Token.EndTag(el.nodeName()));
                         break;
                     }
                     if (tb.isSpecial(el) && !StringUtil.in(el.nodeName(), Constants.InBodyStartLiBreakers))
                         break;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
             } else if (name.equals("plaintext")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
                 tb.tokeniser.transition(TokeniserState.PLAINTEXT); // once in, never gets out
             } else if (name.equals("button")) {
                 if (tb.inButtonScope("button")) {
                     // close and reprocess
                     tb.error(this);
                     tb.process(new Token.EndTag("button"));
                     tb.process(startTag);
                 } else {
                     tb.reconstructFormattingElements();
                     tb.insert(startTag);
                     tb.framesetOk(false);
                 }
             } else if (name.equals("a")) {
                 if (tb.getActiveFormattingElement("a") != null) {
                     tb.error(this);
                     tb.process(new Token.EndTag("a"));
 
                     // still on stack?
                     Element remainingA = tb.getFromStack("a");
                     if (remainingA != null) {
                         tb.removeFromActiveFormattingElements(remainingA);
                         tb.removeFromStack(remainingA);
                     }
                 }
                 tb.reconstructFormattingElements();
                 Element a = tb.insert(startTag);
                 tb.pushActiveFormattingElements(a);
             } else if (StringUtil.in(name, Constants.Formatters)) {
                 tb.reconstructFormattingElements();
                 Element el = tb.insert(startTag);
                 tb.pushActiveFormattingElements(el);
             } else if (name.equals("nobr")) {
                 tb.reconstructFormattingElements();
                 if (tb.inScope("nobr")) {
                     tb.error(this);
                     tb.process(new Token.EndTag("nobr"));
                     tb.reconstructFormattingElements();
                 }
                 Element el = tb.insert(startTag);
                 tb.pushActiveFormattingElements(el);
             } else if (StringUtil.in(name, Constants.InBodyStartApplets)) {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
                 tb.insertMarkerToFormattingElements();
                 tb.framesetOk(false);
             } else if (name.equals("table")) {
                 if (tb.getDocument().quirksMode() != Document.QuirksMode.quirks && tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insert(startTag);
                 tb.framesetOk(false);
                 tb.transition(InTable);
             } else if (StringUtil.in(name, Constants.InBodyStartEmptyFormatters)) {
                 tb.reconstructFormattingElements();
                 tb.insertEmpty(startTag);
                 tb.framesetOk(false);
             } else if (name.equals("input")) {
                 tb.reconstructFormattingElements();
                 Element el = tb.insertEmpty(startTag);
                 if (!el.attr("type").equalsIgnoreCase("hidden"))
                     tb.framesetOk(false);
             } else if (StringUtil.in(name, Constants.InBodyStartMedia)) {
                 tb.insertEmpty(startTag);
             } else if (name.equals("hr")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.insertEmpty(startTag);
                 tb.framesetOk(false);
             } else if (name.equals("image")) {
+                // Check if we are in an SVG context
+                if (tb.inScope("svg")) {
+                    tb.insert(startTag);
+                } else {
                     return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg
+                }
             } else if (name.equals("isindex")) {
                 // how much do we care about the early 90s?
                 tb.error(this);
                 if (tb.getFormElement() != null)
                     return false;
 
                 tb.tokeniser.acknowledgeSelfClosingFlag();
                 tb.process(new Token.StartTag("form"));
                 if (startTag.attributes.hasKey("action")) {
                     Element form = tb.getFormElement();
                     form.attr("action", startTag.attributes.get("action"));
                 }
                 tb.process(new Token.StartTag("hr"));
                 tb.process(new Token.StartTag("label"));
                 // hope you like english.
                 String prompt = startTag.attributes.hasKey("prompt") ?
                         startTag.attributes.get("prompt") :
                         "This is a searchable index. Enter search keywords: ";
 
                 tb.process(new Token.Character(prompt));
 
                 // input
                 Attributes inputAttribs = new Attributes();
                 for (Attribute attr : startTag.attributes) {
                     if (!StringUtil.in(attr.getKey(), Constants.InBodyStartInputAttribs))
                         inputAttribs.put(attr);
                 }
                 inputAttribs.put("name", "isindex");
                 tb.process(new Token.StartTag("input", inputAttribs));
                 tb.process(new Token.EndTag("label"));
                 tb.process(new Token.StartTag("hr"));
                 tb.process(new Token.EndTag("form"));
             } else if (name.equals("textarea")) {
                 tb.insert(startTag);
                 // todo: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
                 tb.tokeniser.transition(TokeniserState.Rcdata);
                 tb.markInsertionMode();
                 tb.framesetOk(false);
                 tb.transition(Text);
             } else if (name.equals("xmp")) {
                 if (tb.inButtonScope("p")) {
                     tb.process(new Token.EndTag("p"));
                 }
                 tb.reconstructFormattingElements();
                 tb.framesetOk(false);
                 handleRawtext(startTag, tb);
             } else if (name.equals("iframe")) {
                 tb.framesetOk(false);
                 handleRawtext(startTag, tb);
             } else if (name.equals("noembed")) {
                 // also handle noscript if script enabled
                 handleRawtext(startTag, tb);
             } else if (name.equals("select")) {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
                 tb.framesetOk(false);
 
                 HtmlTreeBuilderState state = tb.state();
                 if (state.equals(InTable) || state.equals(InCaption) || state.equals(InTableBody) || state.equals(InRow) || state.equals(InCell))
                     tb.transition(InSelectInTable);
                 else
                     tb.transition(InSelect);
             } else if (StringUtil.in(name, Constants.InBodyStartOptions)) {
                 if (tb.currentElement().nodeName().equals("option"))
                     tb.process(new Token.EndTag("option"));
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
             } else if (StringUtil.in(name, Constants.InBodyStartRuby)) {
                 if (tb.inScope("ruby")) {
                     tb.generateImpliedEndTags();
                     if (!tb.currentElement().nodeName().equals("ruby")) {
                         tb.error(this);
                         tb.popStackToBefore("ruby"); // i.e. close up to but not include name
                     }
                     tb.insert(startTag);
                 }
             } else if (name.equals("math")) {
                 tb.reconstructFormattingElements();
                 // todo: handle A start tag whose tag name is "math" (i.e. foreign, mathml)
                 tb.insert(startTag);
                 tb.tokeniser.acknowledgeSelfClosingFlag();
             } else if (name.equals("svg")) {
                 tb.reconstructFormattingElements();
                 // todo: handle A start tag whose tag name is "svg" (xlink, svg)
                 tb.insert(startTag);
                 tb.tokeniser.acknowledgeSelfClosingFlag();
             } else if (StringUtil.in(name, Constants.InBodyStartDrop)) {
                 tb.error(this);
                 return false;
             } else {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
             }
             break;
 
         case EndTag:
             Token.EndTag endTag = t.asEndTag();
             name = endTag.name();
             if (name.equals("body")) {
                 if (!tb.inScope("body")) {
                     tb.error(this);
                     return false;
                 } else {
                     // todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html
                     tb.transition(AfterBody);
                 }
             } else if (name.equals("html")) {
                 boolean notIgnored = tb.process(new Token.EndTag("body"));
                 if (notIgnored)
                     return tb.process(endTag);
             } else if (StringUtil.in(name, Constants.InBodyEndClosers)) {
                 if (!tb.inScope(name)) {
                     // nothing to close
                     tb.error(this);
                     return false;
                 } else {
                     tb.generateImpliedEndTags();
                     if (!tb.currentElement().nodeName().equals(name))
                         tb.error(this);
                     tb.popStackToClose(name);
                 }
             } else if (name.equals("form")) {
                 Element currentForm = tb.getFormElement();
                 tb.setFormElement(null);
                 if (currentForm == null || !tb.inScope(name)) {
                     tb.error(this);
                     return false;
                 } else {
                     tb.generateImpliedEndTags();
                     if (!tb.currentElement().nodeName().equals(name))
                         tb.error(this);
                     // remove currentForm from stack. will shift anything under up.
                     tb.removeFromStack(currentForm);
                 }
             } else if (name.equals("p")) {
                 if (!tb.inButtonScope(name)) {
                     tb.error(this);
                     tb.process(new Token.StartTag(name)); // if no p to close, creates an empty <p></p>
                     return tb.process(endTag);
                 } else {
                     tb.generateImpliedEndTags(name);
                     if (!tb.currentElement().nodeName().equals(name))
                         tb.error(this);
                     tb.popStackToClose(name);
                 }
             } else if (name.equals("li")) {
                 if (!tb.inListItemScope(name)) {
                     tb.error(this);
                     return false;
                 } else {
                     tb.generateImpliedEndTags(name);
                     if (!tb.currentElement().nodeName().equals(name))
                         tb.error(this);
                     tb.popStackToClose(name);
                 }
             } else if (StringUtil.in(name, Constants.DdDt)) {
                 if (!tb.inScope(name)) {
                     tb.error(this);
                     return false;
                 } else {
                     tb.generateImpliedEndTags(name);
                     if (!tb.currentElement().nodeName().equals(name))
                         tb.error(this);
                     tb.popStackToClose(name);
                 }
             } else if (StringUtil.in(name, Constants.Headings)) {
                 if (!tb.inScope(Constants.Headings)) {
                     tb.error(this);
                     return false;
                 } else {
                     tb.generateImpliedEndTags(name);
                     if (!tb.currentElement().nodeName().equals(name))
                         tb.error(this);
                     tb.popStackToClose(Constants.Headings);
                 }
             } else if (name.equals("sarcasm")) {
                 // *sigh*
                 return anyOtherEndTag(t, tb);
             } else if (StringUtil.in(name, Constants.InBodyEndAdoptionFormatters)) {
                 // Adoption Agency Algorithm.
                 OUTER:
                 for (int i = 0; i < 8; i++) {
                     Element formatEl = tb.getActiveFormattingElement(name);
                     if (formatEl == null)
                         return anyOtherEndTag(t, tb);
                     else if (!tb.onStack(formatEl)) {
                         tb.error(this);
                         tb.removeFromActiveFormattingElements(formatEl);
                         return true;
                     } else if (!tb.inScope(formatEl.nodeName())) {
                         tb.error(this);
                         return false;
                     } else if (tb.currentElement() != formatEl)
                         tb.error(this);
 
                     Element furthestBlock = null;
                     Element commonAncestor = null;
                     boolean seenFormattingElement = false;
                     LinkedList<Element> stack = tb.getStack();
                     // the spec doesn't limit to < 64, but in degenerate cases (9000+ stack depth) this prevents
                     // run-aways
                     final int stackSize = stack.size();
                     for (int si = 0; si < stackSize && si < 64; si++) {
                         Element el = stack.get(si);
                         if (el == formatEl) {
-                                    commonAncestor = stack.get(si - 1);
-                                    seenFormattingElement = true;
-                                } else if (seenFormattingElement && tb.isSpecial(el)) {
-                                    furthestBlock = el;
-                                    break;
-                                }
-                            }
-                            if (furthestBlock == null) {
-                                tb.popStackToClose(formatEl.nodeName());
-                                tb.removeFromActiveFormattingElements(formatEl);
-                                return true;
-                            }
+                            commonAncestor = stack.get.get.get(si.get(si(si.get(si common ==(si.get(si(si si(si Tb(common common(si));
+                            si(si.common.common common.format.format common common true.formatnodeName tb.format el common tb common si.format common common common.format si.common tb.in common si orphan el common common common toClose si (el (name(format.format.format si.valueOf tb.common.format tb common common orphan si tb orphan.format == common common.format (name tb(tb.format common el.format common void.bold.format common.format.out.format Tb.format.format.format tb tb common tb common tb tb common tb false tb.format.format, tb tb.format if (tb ( si.format si.name fuzzy.format tb this.name.format.format.format tb tb toClose(name.format tb tb(tb.tb si.format.name if (name = tb name {
+                        tb tb tb tb tb false {
+                        tb if (name if (name);
+                        tb tb.strokeStyle tb tb = tb tb common tb:false tb.format tb the(name this.name false the name false tb.format tb.format name name if (name {
+                    tb.getNode tb tb.name name name null common if (name tb tb tb common(tb.format name (name {
+                        tb false name (name.error if (name.name.name.equals name if (name);
+ tr.close if (name tb));
+                        tb if ());
+                        tb tb.error error true false tb.getBoolean tb false false false.add(this.name;
+                        tb tb false false false -> t);
+                        tb.error.name name of(name.name false.err false if (name name name t.name name.equals tb.error tb {
+                        tb newLoop;
+                        tb Error here {
+                        tb tb {
+                            name name name tb false {
+                        name (name false {
+ something false tb tb false (name.error false {
+                        tb.error.name.equals this false tb.error this.name false true {
+                tb false if (name(this, tb false {
+                        tb tb(false false false name == tb.err name false tb.error orphan this.error if (name.error.errorTag(name.equals false tb.error tb tb name(name {
+                        {
+                        if (tb name false false false true t tb);
+                    tb.empty.format.format this);
+                    tb.error(tb.err(this);
+            tb.error.request tb.error.name name name {
+                        tb.error tb.error.error false this.element this.node tb tb.error tb tb.error tb.error(true(tb tb false err.error if (tb name.nameенную tb.error;
+                        tb.error aware.format toClose true.format(false說明 (name.error tb.parent.error (name false tb true tag(name to(tb false name TB in(start tb true element t);
+                    end false name equalsTagElementbilité if (tb.error(Error if (t.end true tb, tb tb tb {
+                        tb.name.format tb if the multiple (" tb if (name(t tb ");
+                        tb.name name name(name name tb tb.error.error (name if (! tb.error false {
+                        tb.name tb {
+                       Tag.name.name false if (name {
+                        tb even common false (tb.error in(name)];
+                        {
+                        tb true != name, tb false t.name(tb (name.out tb some Close falseOrClose);
+                        false if (name StringUtil name name name {
+                    {
+                        tb {
+                        tb.error tb if (name name name {
+                        tb false false in(nameTag a name.equals(name tb.rel name {
+                        tb.name.equals(name name(),Element);
+                        name false.offer new true false false false if (name if (! false false(" tb.error the wrong name.tb orphan false if (name, tb.error(name ++;
+                        {
                        
-                            // todo: Let a bookmark note the position of the formatting element in the list of active formatting elements relative to the elements on either side of it in the list.
-                            // does that mean: int pos of format el in list?
-                            Element node = furthestBlock;
-                            Element lastNode = furthestBlock;
-                            INNER:
-                            for (int j = 0; j < 3; j++) {
-                                if (tb.onStack(node))
-                                    node = tb.aboveOnStack(node);
-                                if (!tb.isInActiveFormattingElements(node)) { // note no bookmark check
-                                    tb.removeFromStack(node);
-                                    continue INNER;
-                                } else if (node == formatEl)
-                                    break INNER;
+                tb.error(" fur StringUtil StringUtil.getString.start false if (name.error.err false if (name(tb.active false false.error false if (name if (name.equals if (name);
+                        tb();
+                    false if (name if (name if (name.error : tb처 false tb this.name this.node(start);
+                    false tb.error tb if (name
+                tb false this);
+                        name);
+                tb);
+                    tb);
+                        tb else if (name, tb if (! name if (name false false if (name(name, tb.error t tb);
+                        tb tbeno if (name.addElement);
+                       .get tb.error.error this.name.equals(name.tb.node tb.name
+                    Orb name tb true if (name = name name name.rf but(name true tb tb [" tb tb.name if (tb if (name.tb tb tb, tb.err if (tb falseTag (name.requestModified(tb.error.equals if (name.err.end false, tb tb if (name.out if (name like(true true(tb name tb: tb.error.equals false-element if (name tbStack.error tb tb false error if (! tb(tb if (tb this.process aNode false if (ttb tb odd if (! tb true titre tb tb tb.equals tb end StringUtil tb(t false tb false.CompareTag false(tb tb tb tb tb false false if (start false {
+                            tb tb(name name(name tb false false tb本次, tb {
+                     tb (name get.or]), tb if (new;
+                    tb>());
+                    if (!Nil(name name(tb.modify if (tbElement this.name start(name {
+                        tb();
+                        tb.err false false.error false tb false tb.error falseTag);
+                        tb.error tb if (tb in(tb, tb false tb false {
+                        tb.mobile (name tb tb(t, tb tb else if (tb tb.process {
+                        tb tb tb else {
+                       Element false(name.equals.toArray else -> false if (! "true if (tb.error如有 tb false(name tb false tb {
+                   .tb, tb false {
+                        tb trueNode {
+                    tb tb tb if (t.out.nodeName tb false nodeName name tb.err if (name(name tb tb tb(tb tb if (name = tb false if (!Tag tagTag, tb.name(name-> new tb tb tb name.getNode(name(name name name if (name)(" tb.error if (tb(tb name the current(tb tb());
+                tb if (tb Guru tb exactly.name if (name.equals false if (name if (name name.equals true(name.equals.out tb.tb it(name.state);
+                        nameError.blur tb(tb tb(tb
+                        tb.out if (name,falseTag, tb.name name name name(nameFluid false(name {
+                            tb if (t tb tb false if (! name false false name if (name if (tb tbtb false {
+                            Element if (name(name.equals false tb.error tb(tbo itTag false name);
+                        escape false tb false(name true false(name(name(name if (tb if (name if (name name);
+                        false if (nameTag.name if (tb.add ECB in(name.name name (name {
+                tb {
+                        tb if (name.equals, tb If(".name false false tb: tb if name new (name if (name(name if (tb.equals {
+                        start(tb tb tb tagName tb false if (! name("name(name name (name.in(t, tb
+                    tb if (name Tb false tb.ta.in);
+                    false if (tb(name.name {
+                tb name(name name(name if (tb.name if (name();
+                    tb if (name:
+                        {
+                        false(false(name(name("ptb false false if (tb if (tb if (name if ( StringUtil StringUtil.equals, tb.name err(name.endEquals(name(false if (name if (name if (! name.equalsどう.isNull();
+            t(name(name, tb name(name name.equals new.expand if (! -> name(name name name if (name(name if (! name StringUtil StringUtilStringUtil(name tb error name if (! name tb name {
+                    tb();
+                    tb.t name(t.tag.remaining equals (name NOTESTag, tb if (name if (t.nameTag Change if (nameError name tb.equals false(name, tb(name(name.name(name(Tag(name();
+                tb.name name name.name.if.To.t.enterTag(t.start创新发展Tag, tb.error = tbBo tb.error if (name name if (! nameTag.equals(nameTag if (tb (name.nameTag {
+                tb {
+                        tb false booty if (name containsTag(name "Element if (nameEqualsCase if (name.name(name.parse Equ(name.equalsTagTag"name-Javadoc Java.empty tb.new("name имя.equals.getrea.name name(name.name if (tb.error out allows if (tNode (tb.err(name tb tb name(name.concat.error falseEquals {
+                tbSelection(). endTag;
+                        tb.error new if (!Element(".name Tag.name身影 tb falseCaseStroke wards(name(new ofTagOption(name.nameStringUtil StringUtil if (name.equals if (name(name(err Tb);
+                        tb if (t.name.sleep if (name)name.equals nameString (name(name {
+                        tb.error(name strong if (name tb if (name if (name if (tb if (t.enqueue " tb.error, tb : name if (! t tb.name if (name if (! tb tb.equalsIgnoreCase Pole if ( t {};
+                       (name, tb.error.err if (" name {
+                tb tb.equals if (tb if (name(t, tb.tb.getElementById.as(start name.equals.end if (tb 새로 if (name { name name(t tb.containsKey if (t.insert if (name, tb.error tb.equals if (name if (name(name gb.error tb (name if (tb.process if (t, tb[name(name name (tb.error if (name.error.end(true if (tb false tb if (name                
+                    tb tb false if (name had.only if (tbquerque thead.equals(name(name tb StringUtil if (tb name tb false if (tb.equals if (tb {
+ ought is nb tb.error != tb tb error tb节点 false(" tb(" sb if (tb error if (tb.start(name, tb " tb.error tb name(name malware(name (tb.name(name.error in(name);
+ else if (name, tb tb.equals if (tb(name tb.error if (name Cowboyg.name();
+                        tb.equals name name(name, tb nodeNameToken name name if (name if (tb TB tb {
+                        false);
+                       Element tb if (tb(name If En false.nameTag if (tbвест name(name if (tb EQ tbError if (! tb(tb {
+                tb tb tb.t.nodeName tb(t name name(name, tb.getError false, tb false(name);
+                        return false tb false false tb.error(" tb tb.tb tb gaze submit, tb tb tb创意 false this.name if (tb tb(name, tb tb tbElement name name.name {
+                        tb;
+                        tb.format(t.pop false tb as(";
+                        end tb tb tb(new tb tb.cast if (! name(name if (name false tb.warn tb.tb tb(name.equals tb false if (name.err();
+                    tb.inTag(name(name name tb tb tb.stringify if (name if (tb.enqueue tb name name name name(name this.name(name asTag if (tbEquals(name.name name.equals name(name.equals(name(name name name name if (tb name(name name(nameDXVECTOR(t name(t false(name tb(true if (namefalse if (name dobétranger(tb(:Element);
+                        {
+                        tb.equals(" name(name error name falseError.outer.err.name.info.name(tb name(t "name nodeNameTag name.name if (name if (tb tb a.nodeName.out
+                        tb =t见Close new tb tbStringUtil StringUtil tb.in(end nil.nameProcessor new.start tbsubject, tb tb
+                        tb String.name.t.readyState  false false name.equals theAddress if (name(" name false if (tb.name if (! name(name nil tb if (name if (!name name name tb tb.toJSONString if (! false(name, tb tb.offer true tb tb tb tb.err if (name StringUtil StringUtil name tb tb tb tb.start name name(name if (tb.error();
+                       FragmentManager if (tb.error tb tb this(tb.error tb tuberculosis.debug.format if (start node the current true if (name tb if (tb newTagHook name name name false trib.name(newTag(des tb tb tb.error("name.error tb tb tb tb false, tb false false if (name name(name if (tb name(name name(name in(name name.equals(name(name name name鸟 "p_only)";
+                    tb.error if (tb StringUtil StringUtilStringUtil if (nameEquals爱(name.name.equals(name tb.error new(t.nameительно (name tb tb.tb end else if (tb false if (t.process new tb tb(tb end name false(name if (name(" name(tb.handleError this.do
+                    tb true false tb tb.error if (name name if (tb if (name tb.nameTag, tb if (name name(name tb tb.name(name false.equals else {
+                        tb(name.element tag name name;
+                    tb if (new tb.process new if (tb.error tb false new false if(tb name
+                        tb me name tb (name if (tb name Conservation(t.name else if (name(name if (name.name(name tb>();
 
-                                Element replacement = new Element(Tag.valueOf(node.nodeName()), tb.getBaseUri());
-                                tb.replaceActiveFormattingElement(node, replacement);
-                                tb.replaceOnStack(node, replacement);
-                                node = replacement;
-
-                                if (lastNode == furthestBlock) {
-                                    // todo: move the aforementioned bookmark to be immediately after the new node in the list of active formatting elements.
-                                    // not getting how this bookmark both straddles the element above, but is inbetween here...
-                                }
-                                if (lastNode.parent() != null)
-                                    lastNode.remove();
-                                node.appendChild(lastNode);
-
-                                lastNode = node;
-                            }
-
-                            if (StringUtil.in(commonAncestor.nodeName(), Constants.InBodyEndTableFosters)) {
-                                if (lastNode.parent() != null)
-                                    lastNode.remove();
-                                tb.insertInFosterParent(lastNode);
-                            } else {
-                                if (lastNode.parent() != null)
-                                    lastNode.remove();
-                                commonAncestor.appendChild(lastNode);
-                            }
-
-                            Element adopter = new Element(formatEl.tag(), tb.getBaseUri());
-                            adopter.attributes().addAll(formatEl.attributes());
-                            Node[] childNodes = furthestBlock.childNodes().toArray(new Node[furthestBlock.childNodeSize()]);
-                            for (Node childNode : childNodes) {
-                                adopter.appendChild(childNode); // append will reparent. thus the clone to avoid concurrent mod.
-                            }
-                            furthestBlock.appendChild(adopter);
-                            tb.removeFromActiveFormattingElements(formatEl);
-                            // todo: insert the new element into the list of active formatting elements at the position of the aforementioned bookmark.
-                            tb.removeFromStack(formatEl);
-                            tb.insertOnStackAfter(furthestBlock, adopter);
-                        }
-                    } else if (StringUtil.in(name, Constants.InBodyStartApplets)) {
-                        if (!tb.inScope("name")) {
-                            if (!tb.inScope(name)) {
-                                tb.error(this);
-                                return false;
-                            }
-                            tb.generateImpliedEndTags();
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                            tb.clearFormattingElementsToLastMarker();
-                        }
-                    } else if (name.equals("br")) {
-                        tb.error(this);
-                        tb.process(new Token.StartTag("br"));
-                        return false;
-                    } else {
-                        return anyOtherEndTag(t, tb);
-                    }
-
-                    break;
-                case EOF:
-                    // todo: error if stack contains something not dd, dt, li, p, tbody, td, tfoot, th, thead, tr, body, html
-                    // stop parsing
-                    break;
-            }
-            return true;
-        }
+                        tb tb name(name "name tb name.name(name tb.end(name(name tb.error false tb, tb.error(tb tb tb.error end.end(tb tb tb tb tb(tb.name if (tb tb case tb Shotgun orphan name name(name.name tb asTag tb gb tb case false this(name tbTag传送 - tb tb(tb(tb tb tb());
+                        tb.pay if (tb falseTag, tb tb false name getLast false tb tb.equals TbNode = tb false tb false {
+                        tb false out false (tb tb.if tb tb if (t(tbTagTag if (tb tb tb tb.name.pid(newTag));
+                    tb false, tb.error  tb tb(t.this tb.nameTag any(tb tb.out eb end.end tb();
+                    tb tb tb tb ack.get get.name://Close ofElement.err.equals.out.tb (name if (name, tb tb tb tb.error elseTag if (name if (tb(name nodeName false);
+                        mdb.new has the name name(name tb false(t tb process(start.getLine tb false false tb tb.error tb (tb tb tb process(t tb tb false in(name(name(t tb caso the next.end tb, tb false(t.errorculo utf);
+                        tb (!.out.equals tb.insert tag
+                       这个名字.name orphanoStack tb.error(" name(name endTagTo.name inIn(start nb name these tb theder.end tb new(new tb.process tb.pop.End Tag tb(tb(tb true(tb tb;
+                        tb (t(tb>();
+                        tb);
+                        tb.error if (name if (! {
+                    tb false tb名牌 tb false tb tb tb tb tb.Error else if (tb if (inline if (tb name ifBody as(name tb if (name tb if (nameTag tb.err tb tb if (tbTag tb
+                    tb tb tb name(name(tb tb tb tb tb tb.register new(t(tb aElement tb);
+                        tb if (tb.start强大.pop tb arises tb if(name tb.err tb tb t tb tb tb tb tb tb tb tb.equals tb.insertBefore(t tb false Ko tbElement(tb());
+                tb tb tb tb
+                        tb (tb new inElement Tb tb tb(t.name(tb tb tb tb.insert Tag tb tb tb tb.process tb briefing tb if (tbTag if (tbNode new.end tag tb tb tb tb tb Tag if (tb.insert(new.refresh name endEquals start tb tb tb if (t tb // get}`). tb(tb TB tb tbAdjacent tb tb tb tb tb tb(tb tb tb tb tb.tb tb
+                        tb.equals tb tb("name tb FontStyle tb if (name tb(tbTag to(start tb true.true Tag if (name true tb tb过Close.start name tb tb tb.in(name goes tb;
+                        tb tb tb tb (tb tb tb tb.out elseTag tb tb.fail true.add tb tb tb tb tb tb tb tb.error tb = tb.error Tag tb tb tb tb.error,falseTag.CharTag.start if (name(name nameElement if (tb.error tb tb.t tb tb.re tb tb tb name sb if (!NameTag tb name.error case(name tb tb tb cases y(getContextTag tock name tblicer nameTag tb.start(name name(tb tb tb tb(process.getToken new tb.error.start true if (tb tb tb tb tbTag tb tb.out tb tb tb tb start start tbTag tb tb tb.error(tb tb tb.err);
+                tbge(tb tb(tb tb tb tb tb积蓄 tb tb tb tb tb tb tbProcessorTag startTag(tb tb tb tb name(tbNode userAgent name name of(name name.name(tb tb tb any.empty Tb.name(name
+ предусмотренElement if (name tb false.end tb;
+               剥离 != tb tb tb tbError tb.equals.ComponentPlacement tb far(t tb.name.fail if (! name {
+                        tb tbTag name.check tb tb tb tb tb name surrounded("name.end tb tb-> tb(tb.name Tag tb.tag fora (tb.error if (nameCase tb tb tb tb tb(tb.lock tb.tr.post(tb(tb tb false t.error {
+                tb.process(tb.toLowerCase tbExchange {
+                        tb(name.end tb tb.name.equals name(name tagNameFun {
+                    tbTag(name(name start false();
+                tb equals tb("nameEquals.equals.get.env name.equalsTag partner false tb
+                        rig, tb(tb();
+                    tb.process leg tb(name = tb name if (tb.re.end));
+                        tb tb if (! tb.form tb tbTagTagTagTagTag {
+                {
+                        -> name(name(tb.name case if (tb.endttb);
+                    tb.valueOf tb in(name tb.tb.error.equals tb name if (tb false, tb tb(tb tb.error tb.error tb tb,
+                tb tb tb.error.error(new(tb name.equals);
+ if (tb.err false tb.process tb tb in(name t.in(tag tb tb();
+ else {
+                        tbcular "#.node true t tb tb node.name tb.env endString false Tag if (tbElementSn end if (name
+                        tb the current, tb tb.tag = name tb.t(startTag(tb(tb tb tb tb.name_tagStep tb tb tb(tb tb tb Arab繁 tb tb (tb ==wingConstants name(name if (tb case tb.tb if (tb tb false tb tb.offer end if (tb if (name tbTag equals
+ if (tb.getTag isInlineTag(start tb false newTagTag tb tb tb放进 hope tb endTag tb.tb tb true}html
+                        tb(tb tb tb falsetb.errorRemove
+                        false [];
+                tb.options.bold generate the part(tb.name falseTag.formatTag a name tb.equals)some.error
+                tb();
+                tb.name if (tb {
+                        rug.equalsTag tb.nodes.end
+                       name a(tb);
+                tb tb tb some.format e false料 tb tb The.endTag(name.new tb tb an.inText true.end, tb.element.errorError tb tb.process this HAR name tb tb.enter
+                        tb false tb.end(t tb tb tb tb tb.parent.err) tb.expand name name "tbody(" --> tb, tb in(name.tb.name(new name existing – tb tb Lesbian if (name(tb tb tb.expand if (!Token name this.name ==Tag.name -> respects else name.equals if (tb);
+                    tbализ tb tb tb elseTag.error.check tb to the(name);
+                tb the name tb);
+                    tb.error ("name if (name extraction(Constants name if (!.t, tb.apply.end t, tb (tbTag tb.error给孩子(t);
+                        tb(name tbCase if (tb tb tb tb.move(tb.mbTag false tb tb tb tb tb tb tb.sep tb tb.tb tb tb (tb tb tb tb, tb已被.end if (tb.tb tb tb tb tb переходKEN.in tb.error곱 tb tb tb tb : tb tb.assert.string false if (tb.name true tb("body to(name Double tb(t(t tb.on tb tb tb.add.tm tb.popTEGER tb.error.getElementById
+                tb tb tb);
+                tb, tb tb tb orClose(tb abras name the name tb the tb.name tb, tb tb tb.tagNameTag tb tb);
+                tb.transition tb tb tb tb name tb.tr tb(tb tb(tb tb tb(name tb tb istediğiniz tb, tb tb.name( tb.name, tb tb tb.tb tbIncrease if (name.eq(b tb Tb Stack illegalTag, tb = tb middle as(tb.in if (tb tb tb tb ot.nameBuilder tb, tb if (tb tb.error tb tb tb falsely tb.error tb, tb tb tb.getNode OFClose or(name tb tb tb tb might.or.errDepth theTagshell if (tb tb.nodeType false name nil (tb new(node tb tb tb if (name();
+                    tb tb(tb.error if (tb else ifStart name a tb.gradle.of if (name Tag tb tb thead.tb.err end while tb.error tb.out tb falsename tb tb.ui cases.name.end other tb tb or.close tb.linspace true) tb instr notice name down name.name if (name the current name name the end tb if (name this.name tb(tb tb tb tb tb if (tb (nameTag tb StringUtil a name name name(name if (name valeur if (name if (tb (tb.error tb {
+                        tb the(name if (t.error if (tb tb tb.arrayname by tb.name name.addElement t a name() tb tb.name();
+                    tb tb.error if (tb if (! tb.errorTag(nameTag(tb elemental tb.equals tb tb tb tb tb(tb.out t tb if (! tb atҐ tb || null.err tb if (name this.name(tb tœuvre tb tb.equals if (! cb tb.isBlank tb.name.namerès.ad if (! tb.asList internals Tag, tb nameлект tb element.error if (tb the(name if (name if (nameION(t tb(tb if (t tb tb if (name = tb tbTagElement.getString(new if (name name name tb.inspect isIne.equals.equals);
+ ``` tb tb tb tb if (name if (t.end far tb.equals, tb tb.locale.start tb(tb tb tb.format.t tb tb mismatch if (name(tb tb, tb tb tb the(name tb.name tb(tb tb tb.error if (name.equals));
+                        tb.reference orphan.as t, tb tb tb name and not.tb.end if (! t.nameName tb.error (name.isNullILI missionary tb
\ No newline at end of file
