diff --git a/tmp/378993df-8027-4b07-9c31-9cf7a485c842_buggy.java b/tmp/da2a8b8b-6b56-40a8-bc47-306980de2995_fixed.java
index 4f21a3a..1470b25 100644
--- a/tmp/378993df-8027-4b07-9c31-9cf7a485c842_buggy.java
+++ b/tmp/da2a8b8b-6b56-40a8-bc47-306980de2995_fixed.java
@@ -1,14 +1,26 @@
     /**
      * Helper method used by standard deserializer.
      * 
      * @since 2.3
      */
     public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
     {
+        if (jp.getCurrentTokenId() != JsonToken.FIELD_NAME.id()) {
             copyCurrentStructure(jp);
+            return this;
+        }
         /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
          *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
          *    to assume one did exist.
          */
+        JsonToken t;
+        writeStartObject();
+        do {
+            copyCurrentStructure(jp);
+        } while ((t = jp.nextToken()) == JsonToken.FIELD_NAME);
+        if (t != JsonToken.END_OBJECT) {
+            throw ctxt.mappingException("Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got "+t);
+        }
+        writeEndObject();
         return this;
     }
