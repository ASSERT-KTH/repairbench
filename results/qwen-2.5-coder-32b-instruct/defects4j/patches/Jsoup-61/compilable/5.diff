diff --git a/tmp/4adf5acd-5bd5-47bc-86d1-fa0dc22d2a5e_buggy.java b/tmp/5453f16b-6480-4df4-90b2-f6bae62849fe_fixed.java
index 139579d..fd918bc 100644
--- a/tmp/4adf5acd-5bd5-47bc-86d1-fa0dc22d2a5e_buggy.java
+++ b/tmp/5453f16b-6480-4df4-90b2-f6bae62849fe_fixed.java
@@ -1,43 +1,49 @@
-    // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
+    if (classAttr == null) {
+        return false;
+    }
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
+    // Normalize the classAttr and className to lower case for case-insensitive comparison
+    final String lowerClassAttr = classAttr.toLowerCase();
+    final String lowerClassName = className.toLowerCase();
+
     // if both lengths are equal, only need compare the className with the attribute
     if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
+        return lowerClassName.equals(lowerClassAttr);
     }
 
     // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
                 // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                if (i - start == wantLen && lowerClassAttr.regionMatches(0, lowerClassName, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
             }
         } else {
             if (!inClass) {
                 // we're in a class name : keep the start of the substring
                 inClass = true;
                 start = i;
             }
         }
     }
 
     // check the last entry
     if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
+        return lowerClassAttr.regionMatches(start, lowerClassName, 0, wantLen);
     }
 
     return false;
 }
\ No newline at end of file
