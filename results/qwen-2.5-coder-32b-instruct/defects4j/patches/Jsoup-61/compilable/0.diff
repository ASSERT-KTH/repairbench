diff --git a/tmp/5ce4a760-9225-4909-92fd-abae431e592e_buggy.java b/tmp/390ca865-1072-4de4-b980-6ff9e7affb9b_fixed.java
index 139579d..0041d9f 100644
--- a/tmp/5ce4a760-9225-4909-92fd-abae431e592e_buggy.java
+++ b/tmp/390ca865-1072-4de4-b980-6ff9e7affb9b_fixed.java
@@ -1,43 +1,31 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
+    if (classAttr == null || classAttr.length() == 0) {
+        return false;
+    }
+
     final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
-            return false;
-        }
-
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
+    final int len = classAttr.length();
     boolean inClass = false;
     int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
+
+    for (int i = 0; i <= len; i++) {
+        boolean isEnd = (i == len) || Character.isWhitespace(classAttr.charAt(i));
+        if (isEnd && inClass) {
+            // Check the class name from start to i
             if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                 return true;
             }
             inClass = false;
-                }
-            } else {
+        } else if (!isEnd) {
             if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
+                // Start of a new class name
                 start = i;
             }
+            inClass = true;
         }
     }
 
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
-
     return false;
 }
\ No newline at end of file
