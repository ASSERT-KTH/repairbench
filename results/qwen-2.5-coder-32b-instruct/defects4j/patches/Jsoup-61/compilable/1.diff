diff --git a/tmp/e54c16d8-cb16-4a38-b95d-7dda74705886_buggy.java b/tmp/a9fb5a38-4ba0-43f1-a53f-f3b9c4ee06b9_fixed.java
index 139579d..0b5c8d9 100644
--- a/tmp/e54c16d8-cb16-4a38-b95d-7dda74705886_buggy.java
+++ b/tmp/a9fb5a38-4ba0-43f1-a53f-f3b9c4ee06b9_fixed.java
@@ -1,43 +1,41 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
+    if (classAttr == null || classAttr.isEmpty()) {
+        return false;
+    }
+
     final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
+    if (wantLen == 0) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
+    int len = classAttr.length();
+
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
                 // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                if (i - start == wantLen && classAttr.substring(start, i).equalsIgnoreCase(className)) {
                     return true;
                 }
                 inClass = false;
             }
         } else {
             if (!inClass) {
                 // we're in a class name : keep the start of the substring
                 inClass = true;
                 start = i;
             }
         }
     }
 
     // check the last entry
     if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
+        return classAttr.substring(start, len).equalsIgnoreCase(className);
     }
 
     return false;
 }
\ No newline at end of file
