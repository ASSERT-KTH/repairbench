diff --git a/tmp/cf6fe0e0-1850-498d-9b97-424e3a3acf13_buggy.java b/tmp/bd465e20-cce6-407b-b731-6b6a6b9553df_fixed.java
index 70cafe0..75333b4 100644
--- a/tmp/cf6fe0e0-1850-498d-9b97-424e3a3acf13_buggy.java
+++ b/tmp/bd465e20-cce6-407b-b731-6b6a6b9553df_fixed.java
@@ -1,18 +1,30 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in. null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
     for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
             if (row == null) {
                 row = i;
+            } else {
+                // Ensure that the column is indeed a basic column by checking if it forms a unit vector
+                boolean isUnitVector = true;
+                for (int j = getNumObjectiveFunctions(); j < getHeight(); j++) {
+                    if (j != i && !MathUtils.equals(getEntry(j, col), 0.0, epsilon)) {
+                        isUnitVector = false;
+                        break;
+                    }
+                }
+                if (isUnitVector) {
+                    row = i;
                 } else {
                     return null;
                 }
             }
         }
+    }
     return row;
 }
\ No newline at end of file
