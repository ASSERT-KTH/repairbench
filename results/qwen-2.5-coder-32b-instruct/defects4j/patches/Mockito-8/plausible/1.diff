diff --git a/tmp/6324aa45-d019-4be0-a6ea-f69b00c045c7_buggy.java b/tmp/d2180a0a-97cb-45dd-b7ff-9e1afff0fb87_fixed.java
index 42b58d0..d908ad7 100644
--- a/tmp/6324aa45-d019-4be0-a6ea-f69b00c045c7_buggy.java
+++ b/tmp/d2180a0a-97cb-45dd-b7ff-9e1afff0fb87_fixed.java
@@ -1,19 +1,33 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        if (i >= typeParameters.length) {
+            // This is a safeguard to prevent out-of-bounds access
+            break;
+        }
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof Class<?> || actualTypeArgument instanceof ParameterizedType) {
+            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+        } else if (actualTypeArgument instanceof TypeVariable<?>) {
+            // If the actual type argument is a type variable, we should resolve it if possible
+            TypeVariable<?> actualTypeVar = (TypeVariable<?>) actualTypeArgument;
+            Type resolvedType = contextualActualTypeParameters.get(actualTypeVar);
+            if (resolvedType != null) {
+                contextualActualTypeParameters.put(typeParameter, resolvedType);
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
+        }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
