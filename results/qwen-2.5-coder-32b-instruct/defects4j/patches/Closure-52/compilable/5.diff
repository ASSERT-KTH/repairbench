diff --git a/tmp/0d1fdf76-3f2b-42c8-949c-2d191aeef7e8_buggy.java b/tmp/87a97681-7f90-4f2c-a249-1abae570bbd6_fixed.java
index 4b7f469..af4d340 100644
--- a/tmp/0d1fdf76-3f2b-42c8-949c-2d191aeef7e8_buggy.java
+++ b/tmp/87a97681-7f90-4f2c-a249-1abae570bbd6_fixed.java
@@ -1,10 +1,36 @@
 static boolean isSimpleNumber(String s) {
-    int len = s.length();
-    for (int index = 0; index < len; index++) {
-      char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+    if (s == null || s.isEmpty()) {
+        return false;
+    }
+    
+    // Check for hexadecimal numbers
+    if (s.length() > 2 && (s.startsWith("0x") || s.startsWith("0X"))) {
+        try {
+            Long.parseLong(s.substring(2), 16);
+            return true;
+        } catch (NumberFormatException e) {
             return false;
         }
     }
-    return len > 0;
+    
+    // Check for decimal numbers
+    try {
+        Double.parseDouble(s);
+        return true;
+    } catch (NumberFormatException e) {
+        // Not a valid decimal number
+    }
+    
+    // Check for octal numbers (not allowed in strict mode, but we'll handle them for completeness)
+    if (s.length() > 1 && s.startsWith("0")) {
+        try {
+            // Parse as octal if it starts with '0' and doesn't contain 'x' or 'X'
+            Integer.parseInt(s, 8);
+            return true;
+        } catch (NumberFormatException e) {
+            return false;
+        }
+    }
+    
+    return false;
 }
\ No newline at end of file
