diff --git a/tmp/60884ea0-e594-45ce-8dd7-dc396790bba5_buggy.java b/tmp/7cfdc864-4022-4f1e-8b94-7c2ebdc098a2_fixed.java
index be2af16..ad24d3a 100644
--- a/tmp/60884ea0-e594-45ce-8dd7-dc396790bba5_buggy.java
+++ b/tmp/7cfdc864-4022-4f1e-8b94-7c2ebdc098a2_fixed.java
@@ -1,29 +1,51 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    long gregorianInstant;
+    try {
+        gregorianInstant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+    } catch (IllegalArgumentException e) {
+        // If the date is invalid in Gregorian, try Julian.
+        gregorianInstant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        if (gregorianInstant >= iCutoverMillis) {
+            // The date is in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        return gregorianInstant;
     }
-        return instant;
+
+    if (gregorianInstant < iCutoverMillis) {
+        // The date might be in the Julian period.
+        long julianInstant;
+        try {
+            julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // The date is invalid in Julian as well, so it's invalid.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+        
+        if (julianInstant >= iCutoverMillis) {
+            // The date is in the illegal cutover gap.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+        return julianInstant;
+    }
+
+    return gregorianInstant;
 }
\ No newline at end of file
