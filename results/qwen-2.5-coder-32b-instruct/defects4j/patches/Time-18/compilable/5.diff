diff --git a/tmp/012e9660-377f-4e2b-af0e-2520171662ea_buggy.java b/tmp/9177f31a-56af-49a2-91be-d72a319103ce_fixed.java
index be2af16..c08a5fb 100644
--- a/tmp/012e9660-377f-4e2b-af0e-2520171662ea_buggy.java
+++ b/tmp/9177f31a-56af-49a2-91be-d72a319103ce_fixed.java
@@ -1,29 +1,42 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    
+    // Check if the date is within the cutover period and adjust if necessary
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+        // Check if the date is valid in Julian calendar
+        long julianInstant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        
+        // If the Julian date is within the cutover period, use it
+        if (julianInstant >= iCutoverMillis) {
+            // Check if the date is valid in both calendars
+            long gregorianInstantBeforeCutover = iGregorianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (gregorianInstantBeforeCutover < iCutoverMillis) {
+                instant = julianInstant;
+            } else {
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+        } else {
+            instant = julianInstant;
+        }
     }
     return instant;
 }
\ No newline at end of file
