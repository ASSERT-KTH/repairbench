diff --git a/tmp/db3282b5-0a08-4106-a791-cb9e2945df94_buggy.java b/tmp/18a14c33-bd9e-405d-8b45-04c9730872d3_fixed.java
index be2af16..29c047d 100644
--- a/tmp/db3282b5-0a08-4106-a791-cb9e2945df94_buggy.java
+++ b/tmp/18a14c33-bd9e-405d-8b45-04c9730872d3_fixed.java
@@ -1,29 +1,41 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
+    // Check if the date is in the cutover period and adjust if necessary.
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            // If the Julian date is on or after the cutover, it's invalid.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+    } else {
+        // If the Gregorian date is valid, we need to check if there's a Julian equivalent that is valid.
+        long julianInstant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (julianInstant < iCutoverMillis && julianInstant != instant) {
+            // If the Julian date is before the cutover and different from the Gregorian, it's invalid.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
+
     return instant;
 }
\ No newline at end of file
