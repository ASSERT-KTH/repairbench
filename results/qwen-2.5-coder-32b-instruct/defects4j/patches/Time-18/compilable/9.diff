diff --git a/tmp/b02c3059-d9b5-4e2c-a2bd-e49c1e20df8b_buggy.java b/tmp/cd0eb8ee-a50b-4dc9-9b71-850f4e74eae1_fixed.java
index be2af16..fac060b 100644
--- a/tmp/b02c3059-d9b5-4e2c-a2bd-e49c1e20df8b_buggy.java
+++ b/tmp/cd0eb8ee-a50b-4dc9-9b71-850f4e74eae1_fixed.java
@@ -1,29 +1,34 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
+        try {
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+        } catch (IllegalArgumentException e) {
+            // If the date is invalid in Julian, throw the exception
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
     }
     return instant;
 }
\ No newline at end of file
