diff --git a/tmp/a8bd304b-4d16-4cde-9dd1-853c1c27b901_buggy.java b/tmp/bb5bb9a3-50ef-4b41-8e0b-9fbeb121181a_fixed.java
index e69de29..f5450a6 100644
--- a/tmp/a8bd304b-4d16-4cde-9dd1-853c1c27b901_buggy.java
+++ b/tmp/bb5bb9a3-50ef-4b41-8e0b-9fbeb121181a_fixed.java
@@ -0,0 +1,33 @@
+public JavaType constructType(Class<?> cls) {
+    // Ensure that the cache is checked and updated correctly
+    JavaType existingType = _cachedTypes.get(cls);
+    if (existingType != null) {
+        return existingType;
+    }
+
+    // Create a new JavaType and ensure that superclass information is included
+    JavaType newType = _constructType(cls, null);
+    _cachedTypes.put(cls, newType);
+
+    // Ensure that superclass properties are included in the type information
+    if (newType.isArrayType() || newType.isPrimitive()) {
+        return newType;
+    }
+
+    JavaType superClass = newType.getSuperClass();
+    if (superClass != null && !superClass.isArrayType() && !superClass.isPrimitive()) {
+        // Recursively construct the super class type to ensure its properties are included
+        constructType(superClass.getRawClass());
+    }
+
+    return newType;
+}
+
+private JavaType _constructType(Class<?> cls, TypeBindings context) {
+    // Construct the JavaType for the class
+    if (cls.isArray()) {
+        return ArrayType.construct(_constructType(cls.getComponentType(), context), null);
+    }
+    // Handle other types (class, interface, etc.)
+    return new SimpleType(cls);
+}
\ No newline at end of file
