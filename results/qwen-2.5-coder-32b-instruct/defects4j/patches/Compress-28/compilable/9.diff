diff --git a/tmp/32c99791-8b1e-4bfc-acc4-99447f54d4e6_buggy.java b/tmp/1b343b6c-649e-465a-b4bd-675363f75e14_fixed.java
index 0f439b3..ce67d4b 100644
--- a/tmp/32c99791-8b1e-4bfc-acc4-99447f54d4e6_buggy.java
+++ b/tmp/1b343b6c-649e-465a-b4bd-675363f75e14_fixed.java
@@ -1,38 +1,42 @@
 /**
  * Reads bytes from the current tar archive entry.
  *
  * This method is aware of the boundaries of the current
  * entry in the archive and will deal with them as if they
  * were this stream's start and EOF.
  *
  * @param buf The buffer into which to place bytes read.
  * @param offset The offset at which to place bytes read.
  * @param numToRead The number of bytes to read.
  * @return The number of bytes read, or -1 at EOF.
  * @throws IOException on error
  */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
     int totalRead = 0;
 
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
 
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
 
     numToRead = Math.min(numToRead, available());
 
     totalRead = is.read(buf, offset, numToRead);
     count(totalRead);
 
     if (totalRead == -1) {
         hasHitEOF = true;
     } else {
         entryOffset += totalRead;
+        // Check if the entry is truncated
+        if (entryOffset > entrySize) {
+            throw new IOException("Truncated tar entry");
+        }
     }
 
     return totalRead;
 }
\ No newline at end of file
