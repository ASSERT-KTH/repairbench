diff --git a/tmp/b6dc9995-33d6-4ee1-b1d1-a644e5bbceea_buggy.java b/tmp/08747d1f-374d-47be-a6e2-2fe1a944f9c5_fixed.java
index 6c0aa19..b7c5496 100644
--- a/tmp/b6dc9995-33d6-4ee1-b1d1-a644e5bbceea_buggy.java
+++ b/tmp/08747d1f-374d-47be-a6e2-2fe1a944f9c5_fixed.java
@@ -1,20 +1,22 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
+        // Assuming a reasonable buffer size, e.g., 8192 bytes
+        this.buf = ByteBuffer.allocate(8192);
         in = new PushbackInputStream(inputStream, buf.capacity());
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
     }
\ No newline at end of file
