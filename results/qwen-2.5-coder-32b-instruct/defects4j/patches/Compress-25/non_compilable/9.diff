diff --git a/tmp/5f9e1b67-caed-4c8e-a69c-26da2b72a1fd_buggy.java b/tmp/2ebd5c90-cfd9-45fb-86b5-c2411a0f468f_fixed.java
index 6c0aa19..8597ad6 100644
--- a/tmp/5f9e1b67-caed-4c8e-a69c-26da2b72a1fd_buggy.java
+++ b/tmp/2ebd5c90-cfd9-45fb-86b5-c2411a0f468f_fixed.java
@@ -1,20 +1,22 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+    // Ensure the buffer capacity is reasonable, typically 512 bytes is a common choice for ZIP files
+    this.buf = new ByteArrayOutputStream(512);
+    in = new PushbackInputStream(inputStream, buf.size());
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
     // haven't read anything so far
 }
\ No newline at end of file
