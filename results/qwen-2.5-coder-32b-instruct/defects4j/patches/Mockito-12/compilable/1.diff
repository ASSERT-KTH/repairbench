diff --git a/tmp/4be0366a-28d9-4ada-9aa5-a8473fba2ff8_buggy.java b/tmp/7301ef0f-417b-43ec-b440-2167c7e9b257_fixed.java
index bada2b6..d8a8e89 100644
--- a/tmp/4be0366a-28d9-4ada-9aa5-a8473fba2ff8_buggy.java
+++ b/tmp/7301ef0f-417b-43ec-b440-2167c7e9b257_fixed.java
@@ -1,16 +1,18 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+public Class<?> getGenericType(Field field) {        
+    Type genericType = field.getGenericType();
+    if (genericType instanceof ParameterizedType) {
+        Type actualTypeArgument = ((ParameterizedType) genericType).getActualTypeArguments()[0];
+        if (actualTypeArgument instanceof Class) {
+            return (Class<?>) actualTypeArgument;
+        }
+        // In case of nested generics or other types, we return Object.class
     }
     
     return Object.class;
 }
\ No newline at end of file
