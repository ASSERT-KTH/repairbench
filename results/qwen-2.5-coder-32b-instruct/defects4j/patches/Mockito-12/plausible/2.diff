diff --git a/tmp/78e940b1-4de0-4b3e-8c59-c4154113d757_buggy.java b/tmp/f8181b2c-ee30-493a-82af-d7da1abfa6ab_fixed.java
index bada2b6..2cd7dd3 100644
--- a/tmp/78e940b1-4de0-4b3e-8c59-c4154113d757_buggy.java
+++ b/tmp/f8181b2c-ee30-493a-82af-d7da1abfa6ab_fixed.java
@@ -1,16 +1,20 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic != null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
+        // In case of other types, we return Object.class
     }
     
     return Object.class;
 }
\ No newline at end of file
