diff --git a/tmp/04a408ab-085e-4993-b070-58f4b06f3bb7_buggy.java b/tmp/3fa803a3-f57d-4dfc-ba85-864d8efd8df2_fixed.java
index 03b03d7..4f3bc38 100644
--- a/tmp/04a408ab-085e-4993-b070-58f4b06f3bb7_buggy.java
+++ b/tmp/3fa803a3-f57d-4dfc-ba85-864d8efd8df2_fixed.java
@@ -1,25 +1,29 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+    // evaluate 1 hour before and after to work out if anything is happening
+    long instantBefore = convertUTCToLocal(instant - DateTimeConstants.MILLIS_PER_HOUR);
+    long instantAfter = convertUTCToLocal(instant + DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    if (earlierOrLater) {
+        // find the later offset
+        long instantBeforeUTC = convertLocalToUTC(local, false, instant);
+        long instantAfterUTC = convertLocalToUTC(local, true, instant);
+        return instantBeforeUTC == instant ? instantAfterUTC : instantBeforeUTC;
+    } else {
+        // find the earlier offset
+        long instantBeforeUTC = convertLocalToUTC(local, false, instant);
+        long instantAfterUTC = convertLocalToUTC(local, true, instant);
+        return instantBeforeUTC == instant ? instantBeforeUTC : instantAfterUTC;
+    }
 }
\ No newline at end of file
