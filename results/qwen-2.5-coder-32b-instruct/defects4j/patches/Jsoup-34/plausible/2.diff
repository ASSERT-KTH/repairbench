diff --git a/tmp/8f2ba756-8f42-4ba4-b4c8-6922a07b594d_buggy.java b/tmp/d87b7f1c-fd3f-46e2-b404-85c115569999_fixed.java
index 21f64c6..f75a8a0 100644
--- a/tmp/8f2ba756-8f42-4ba4-b4c8-6922a07b594d_buggy.java
+++ b/tmp/d87b7f1c-fd3f-46e2-b404-85c115569999_fixed.java
@@ -1,23 +1,29 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
     // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
         if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            continue;
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+        if (last > length) // check if the sequence length exceeds the remaining input length
+            break;
+        boolean found = true;
+        for (int j = 1; i < last; i++, j++) {
+            if (seq.charAt(j) != input[i]) {
+                found = false;
+                break;
+            }
+        }
+        if (found) // found full sequence
             return offset - pos;
     }
-        }
     return -1;
 }
\ No newline at end of file
