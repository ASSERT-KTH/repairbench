diff --git a/tmp/cba73727-739d-46f9-9f91-cf0a82313c44_buggy.java b/tmp/eedba47f-6318-46fd-a3f2-1a43640156f5_fixed.java
index 3cb9232..bc51bf4 100644
--- a/tmp/cba73727-739d-46f9-9f91-cf0a82313c44_buggy.java
+++ b/tmp/eedba47f-6318-46fd-a3f2-1a43640156f5_fixed.java
@@ -1,26 +1,25 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
-            } else {
-                return null;
         }
+        // If no name is found and no specific annotations are present, we should
+        // allow the default name to be used, which is typically the field name.
+        // This is important for unwrapped properties.
     }
+    // If name is still null, it means no specific name was provided, and we should
+    // allow the default mechanism to handle it.
     return PropertyName.construct(name);
 }
\ No newline at end of file
