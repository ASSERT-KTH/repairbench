diff --git a/tmp/1efea01a-8ad2-4e45-a356-0447d768fab8_buggy.java b/tmp/343ffc16-6b85-4eb8-8c10-9b90b36da568_fixed.java
index 30ed821..c6ae49b 100644
--- a/tmp/1efea01a-8ad2-4e45-a356-0447d768fab8_buggy.java
+++ b/tmp/343ffc16-6b85-4eb8-8c10-9b90b36da568_fixed.java
@@ -1,513 +1,542 @@
 boolean process(Token t, HtmlTreeBuilder tb) {
     switch (t.type) {
         case Character: {
             Token.Character c = t.asCharacter();
             if (c.getData().equals(nullString)) {
                 // todo confirm that check
                 tb.error(this);
                 return false;
             } else if (tb.framesetOk() && isWhitespace(c)) { // don't check if whitespace if frames already closed
                 tb.reconstructFormattingElements();
                 tb.insert(c);
             } else {
                 tb.reconstructFormattingElements();
                 tb.insert(c);
                 tb.framesetOk(false);
             }
             break;
         }
         case Comment: {
             tb.insert(t.asComment());
             break;
         }
         case Doctype: {
             tb.error(this);
             return false;
         }
         case StartTag:
             Token.StartTag startTag = t.asStartTag();
             // todo - refactor to a switch statement
             String name = startTag.normalName();
             if (name.equals("a")) {
                 if (tb.getActiveFormattingElement("a") != null) {
                     tb.error(this);
                     tb.processEndTag("a");
 
                     // still on stack?
                     Element remainingA = tb.getFromStack("a");
                     if (remainingA != null) {
                         tb.removeFromActiveFormattingElements(remainingA);
                         tb.removeFromStack(remainingA);
                     }
                 }
                 tb.reconstructFormattingElements();
                 Element a = tb.insert(startTag);
                 tb.pushActiveFormattingElements(a);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartEmptyFormatters)) {
                 tb.reconstructFormattingElements();
                 tb.insertEmpty(startTag);
                 tb.framesetOk(false);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartPClosers)) {
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insert(startTag);
             } else if (name.equals("span")) {
                 // same as final else, but short circuits lots of checks
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
             } else if (name.equals("li")) {
                 tb.framesetOk(false);
                 ArrayList<Element> stack = tb.getStack();
                 for (int i = stack.size() - 1; i > 0; i--) {
                     Element el = stack.get(i);
                     if (el.nodeName().equals("li")) {
                         tb.processEndTag("li");
                         break;
                     }
                     if (tb.isSpecial(el) && !StringUtil.inSorted(el.nodeName(), Constants.InBodyStartLiBreakers))
                         break;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insert(startTag);
             } else if (name.equals("html")) {
                 tb.error(this);
                 // merge attributes onto real html
                 Element html = tb.getStack().get(0);
                 for (Attribute attribute : startTag.getAttributes()) {
                     if (!html.hasAttr(attribute.getKey()))
                         html.attributes().put(attribute);
                 }
             } else if (StringUtil.inSorted(name, Constants.InBodyStartToHead)) {
                 return tb.process(t, InHead);
             } else if (name.equals("body")) {
                 tb.error(this);
                 ArrayList<Element> stack = tb.getStack();
                 if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals("body"))) {
                     // only in fragment case
                     return false; // ignore
                 } else {
                     tb.framesetOk(false);
                     Element body = stack.get(1);
                     for (Attribute attribute : startTag.getAttributes()) {
                         if (!body.hasAttr(attribute.getKey()))
                             body.attributes().put(attribute);
                     }
                 }
             } else if (name.equals("frameset")) {
                 tb.error(this);
                 ArrayList<Element> stack = tb.getStack();
                 if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals("body"))) {
                     // only in fragment case
                     return false; // ignore
                 } else if (!tb.framesetOk()) {
                     return false; // ignore frameset
                 } else {
                     Element second = stack.get(1);
                     if (second.parent() != null)
                         second.remove();
                     // pop up to html element
                     while (stack.size() > 1)
                         stack.remove(stack.size()-1);
                     tb.insert(startTag);
                     tb.transition(InFrameset);
                 }
             } else if (StringUtil.inSorted(name, Constants.Headings)) {
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 if (StringUtil.inSorted(tb.currentElement().nodeName(), Constants.Headings)) {
                     tb.error(this);
                     tb.pop();
                 }
                 tb.insert(startTag);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartPreListing)) {
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insert(startTag);
                 tb.framesetOk(false);
             } else if (name.equals("form")) {
                 if (tb.getFormElement() != null) {
                     tb.error(this);
                     return false;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insertForm(startTag, true);
             } else if (StringUtil.inSorted(name, Constants.DdDt)) {
                 tb.framesetOk(false);
                 ArrayList<Element> stack = tb.getStack();
                 for (int i = stack.size() - 1; i > 0; i--) {
                     Element el = stack.get(i);
                     if (StringUtil.inSorted(el.nodeName(), Constants.DdDt)) {
                         tb.processEndTag(el.nodeName());
                         break;
                     }
                     if (tb.isSpecial(el) && !StringUtil.inSorted(el.nodeName(), Constants.InBodyStartLiBreakers))
                         break;
                 }
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insert(startTag);
             } else if (name.equals("plaintext")) {
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insert(startTag);
                 tb.tokeniser.transition(TokeniserState.PLAINTEXT); // once in, never gets out
             } else if (name.equals("button")) {
                 if (tb.inButtonScope("button")) {
                     // close and reprocess
                     tb.error(this);
                     tb.processEndTag("button");
                     tb.process(startTag);
                 } else {
                     tb.reconstructFormattingElements();
                     tb.insert(startTag);
                     tb.framesetOk(false);
                 }
             } else if (StringUtil.inSorted(name, Constants.Formatters)) {
                 tb.reconstructFormattingElements();
                 Element el = tb.insert(startTag);
                 tb.pushActiveFormattingElements(el);
             } else if (name.equals("nobr")) {
                 tb.reconstructFormattingElements();
                 if (tb.inScope("nobr")) {
                     tb.error(this);
                     tb.processEndTag("nobr");
                     tb.reconstructFormattingElements();
                 }
                 Element el = tb.insert(startTag);
                 tb.pushActiveFormattingElements(el);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartApplets)) {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
                 tb.insertMarkerToFormattingElements();
                 tb.framesetOk(false);
             } else if (name.equals("table")) {
                 if (tb.getDocument().quirksMode() != Document.QuirksMode.quirks && tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insert(startTag);
                 tb.framesetOk(false);
                 tb.transition(InTable);
             } else if (name.equals("input")) {
                 tb.reconstructFormattingElements();
                 Element el = tb.insertEmpty(startTag);
                 if (!el.attr("type").equalsIgnoreCase("hidden"))
                     tb.framesetOk(false);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartMedia)) {
                 tb.insertEmpty(startTag);
             } else if (name.equals("hr")) {
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.insertEmpty(startTag);
                 tb.framesetOk(false);
             } else if (name.equals("image")) {
                 if (tb.getFromStack("svg") == null)
                     return tb.process(startTag.name("img")); // change <image> to <img>, unless in svg
                 else
                     tb.insert(startTag);
             } else if (name.equals("isindex")) {
                 // how much do we care about the early 90s?
                 tb.error(this);
                 if (tb.getFormElement() != null)
                     return false;
 
                 tb.processStartTag("form");
                 if (startTag.attributes.hasKey("action")) {
                     Element form = tb.getFormElement();
                     form.attr("action", startTag.attributes.get("action"));
                 }
                 tb.processStartTag("hr");
                 tb.processStartTag("label");
                 // hope you like english.
                 String prompt = startTag.attributes.hasKey("prompt") ?
                         startTag.attributes.get("prompt") :
                         "This is a searchable index. Enter search keywords: ";
 
                 tb.process(new Token.Character().data(prompt));
 
                 // input
                 Attributes inputAttribs = new Attributes();
                 for (Attribute attr : startTag.attributes) {
                     if (!StringUtil.inSorted(attr.getKey(), Constants.InBodyStartInputAttribs))
                         inputAttribs.put(attr);
                 }
                 inputAttribs.put("name", "isindex");
                 tb.processStartTag("input", inputAttribs);
                 tb.processEndTag("label");
                 tb.processStartTag("hr");
                 tb.processEndTag("form");
             } else if (name.equals("textarea")) {
                 tb.insert(startTag);
                 // todo: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
                 tb.tokeniser.transition(TokeniserState.Rcdata);
                 tb.markInsertionMode();
                 tb.framesetOk(false);
                 tb.transition(Text);
             } else if (name.equals("xmp")) {
                 if (tb.inButtonScope("p")) {
                     tb.processEndTag("p");
                 }
                 tb.reconstructFormattingElements();
                 tb.framesetOk(false);
                 handleRawtext(startTag, tb);
             } else if (name.equals("iframe")) {
                 tb.framesetOk(false);
                 handleRawtext(startTag, tb);
             } else if (name.equals("noembed")) {
                 // also handle noscript if script enabled
                 handleRawtext(startTag, tb);
             } else if (name.equals("select")) {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
                 tb.framesetOk(false);
 
                 HtmlTreeBuilderState state = tb.state();
                 if (state.equals(InTable) || state.equals(InCaption) || state.equals(InTableBody) || state.equals(InRow) || state.equals(InCell))
                     tb.transition(InSelectInTable);
                 else
                     tb.transition(InSelect);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartOptions)) {
                 if (tb.currentElement().nodeName().equals("option"))
                     tb.processEndTag("option");
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartRuby)) {
                 if (tb.inScope("ruby")) {
                     tb.generateImpliedEndTags();
                     if (!tb.currentElement().nodeName().equals("ruby")) {
                         tb.error(this);
                         tb.popStackToBefore("ruby"); // i.e. close up to but not include name
                     }
                     tb.insert(startTag);
                 }
             } else if (name.equals("math")) {
                 tb.reconstructFormattingElements();
                 // todo: handle A start tag whose tag name is "math" (i.e. foreign, mathml)
                 tb.insert(startTag);
             } else if (name.equals("svg")) {
                 tb.reconstructFormattingElements();
                 // todo: handle A start tag whose tag name is "svg" (xlink, svg)
                 tb.insert(startTag);
             } else if (StringUtil.inSorted(name, Constants.InBodyStartDrop)) {
                 tb.error(this);
                 return false;
             } else {
                 tb.reconstructFormattingElements();
                 tb.insert(startTag);
             }
             break;
 
         case EndTag:
             Token.EndTag endTag = t.asEndTag();
             name = endTag.normalName();
             if (StringUtil.inSorted(name, Constants.InBodyEndAdoptionFormatters)) {
                 // Adoption Agency Algorithm.
                 for (int i = 0; i < 8; i++) {
                     Element formatEl = tb.getActiveFormattingElement(name);
                     if (formatEl == null)
                         return anyOtherEndTag(t, tb);
                     else if (!tb.onStack(formatEl)) {
                         tb.error(this);
                         tb.removeFromActiveFormattingElements(formatEl);
                         return true;
                     } else if (!tb.inScope(formatEl.nodeName())) {
                         tb.error(this);
                         return false;
                     } else if (tb.currentElement() != formatEl)
                         tb.error(this);
 
                     Element furthestBlock = null;
                     Element commonAncestor = null;
                     boolean seenFormattingElement = false;
                     ArrayList<Element> stack = tb.getStack();
                     // the spec doesn't limit to < 64, but in degenerate cases (9000+ stack depth) this prevents
                     // run-aways
                     final int stackSize = stack.size();
                     for (int si = 0; si < stackSize && si < 64; si++) {
                         Element el = stack.get(si);
                         if (el == formatEl) {
                             commonAncestor = stack.get(si - 1);
                             seenFormattingElement = true;
                         } else if (seenFormattingElement && tb.isSpecial(el)) {
                             furthestBlock = el;
                             break;
                         }
                     }
                     if (furthestBlock == null) {
                         tb.popStackToClose(formatEl.nodeName());
                         tb.removeFromActiveFormattingElements(formatEl);
                         return true;
                     }
 
                     // todo: Let a bookmark note the position of the formatting element in the list of active formatting elements relative to the elements on either side of it in the list.
                     // does that mean: int pos of format el in list?
                     Element node = furthestBlock;
                     Element lastNode = furthestBlock;
                     for (int j = 0; j < 3; j++) {
                         if (tb.onStack(node))
                             node = tb.aboveOnStack(node);
                         if (!tb.isInActiveFormattingElements(node)) { // note no bookmark check
                             tb.removeFromStack(node);
                             continue;
                         } else if (node == formatEl)
                             break;
 
                         Element replacement = new Element(Tag.valueOf(node.nodeName(), ParseSettings.preserveCase), tb.getBaseUri());
                         // case will follow the original node (so honours ParseSettings)
                         tb.replaceActiveFormattingElement(node, replacement);
                         tb.replaceOnStack(node, replacement);
                         node = replacement;
 
                         if (lastNode == furthestBlock) {
                             // todo: move the aforementioned bookmark to be immediately after the new node in the list of active formatting elements.
                             // not getting how this bookmark both straddles the element above, but is inbetween here...
                         }
                         if (lastNode.parent() != null)
                             lastNode.remove();
                         node.appendChild(lastNode);
 
                         lastNode = node;
                     }
 
                     if (StringUtil.inSorted(commonAncestor.nodeName(), Constants.InBodyEndTableFosters)) {
                         if (lastNode.parent() != null)
                             lastNode.remove();
                         tb.insertInFosterParent(lastNode);
                     } else {
                         if (lastNode.parent() != null)
                             lastNode.remove();
                         commonAncestor.appendChild(lastNode);
                     }
 
                     Element adopter = new Element(formatEl.tag(), tb.getBaseUri());
                     adopter.attributes().addAll(formatEl.attributes());
                     Node[] childNodes = furthestBlock.childNodes().toArray(new Node[furthestBlock.childNodeSize()]);
                     for (Node childNode : childNodes) {
                         adopter.appendChild(childNode); // append will reparent. thus the clone to avoid concurrent mod.
                     }
                     furthestBlock.appendChild(adopter);
                     tb.removeFromActiveFormattingElements(formatEl);
                     // todo: insert the new element into the list of active formatting elements at the position of the aforementioned bookmark.
                     tb.removeFromStack(formatEl);
-                            tb.insertOnStackAfter(furthestBlock, adopter);
-                        }
-                    } else if (StringUtil.inSorted(name, Constants.InBodyEndClosers)) {
-                        if (!tb.inScope(name)) {
-                            // nothing to close
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags();
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (name.equals("span")) {
-                        // same as final fall through, but saves short circuit
-                        return anyOtherEndTag(t, tb);
-                    } else if (name.equals("li")) {
-                        if (!tb.inListItemScope(name)) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (name.equals("body")) {
-                        if (!tb.inScope("body")) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            // todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html
-                            tb.transition(AfterBody);
-                        }
-                    } else if (name.equals("html")) {
-                        boolean notIgnored = tb.processEndTag("body");
-                        if (notIgnored)
-                            return tb.process(endTag);
-                    } else if (name.equals("form")) {
-                        Element currentForm = tb.getFormElement();
-                        tb.setFormElement(null);
-                        if (currentForm == null || !tb.inScope(name)) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags();
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            // remove currentForm from stack. will shift anything under up.
-                            tb.removeFromStack(currentForm);
-                        }
-                    } else if (name.equals("p")) {
-                        if (!tb.inButtonScope(name)) {
-                            tb.error(this);
-                            tb.processStartTag(name); // if no p to close, creates an empty <p></p>
-                            return tb.process(endTag);
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (StringUtil.inSorted(name, Constants.DdDt)) {
-                        if (!tb.inScope(name)) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                        }
-                    } else if (StringUtil.inSorted(name, Constants.Headings)) {
-                        if (!tb.inScope(Constants.Headings)) {
-                            tb.error(this);
-                            return false;
-                        } else {
-                            tb.generateImpliedEndTags(name);
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(Constants.Headings);
-                        }
-                    } else if (name.equals("sarcasm")) {
-                        // *sigh*
-                        return anyOtherEndTag(t, tb);
-                    } else if (StringUtil.inSorted(name, Constants.InBodyStartApplets)) {
-                        if (!tb.inScope("name")) {
-                            if (!tb.inScope(name)) {
-                                tb.error(this);
-                                return false;
-                            }
-                            tb.generateImpliedEndTags();
-                            if (!tb.currentElement().nodeName().equals(name))
-                                tb.error(this);
-                            tb.popStackToClose(name);
-                            tb.clearFormattingElementsToLastMarker();
-                        }
-                    } else if (name.equals("br")) {
-                        tb.error(this);
-                        tb.processStartTag("br");
-                        return false;
-                    } else {
-                        return anyOtherEndTag(t, tb);
-                    }
+                    tb tb.insert tb.insert tb tb tb tb tb tb tb tb.insert tb tb tb(tb tb tb tb tb tb tb tb(tb tb picker tb tb tb.insert
+                    tb tbbold tb tb tb tb tb Close tb);
+                    tb tb tb tb tb) break tb tb tb(tb name(name tb tb tb tb tb tb tb {
+                        real false.format(tb tb tb tb temp false tb name name no close avait fur tb tb tb tb tb previousClose(tb tb tb.offer tb tb tb other.tb tb tb tb tb tb案件 (! tb tb(tb tb.getNode tb if (tb.ge.popClose tb tb tb tb farCloseClose StringUtil tb tb tb tb.error tb tb tb closeClose tb.end tb tb == tb.between tb.equals(name tb if (tb a name tb(tb tb.tb(tb tb tb tb終Element.err.outSorted(this(name tb, tb tb tb(tb tb toStack.format(process tb(tb(tb tb tb tb tb tb(tbNotNull tb.out(node Tb.equals(tb tb tb StringUtil StringUtil(tb tb true {
+                        name.createTextNode yourself orphanToClose(t close tb tb(tb tb(name tb tb tb tb(falseTag != tb tb(tb tb tb tb tb.tb tb.pop name.equals tb end (tb.out(s(name tb tb name name -> name name name.nanoTime the current(name(t	tb tb(tb tb the current (name tb tb(t tb.bold the current tb tb if (name != name name tb if (tb.pop name(name tb tb if (name if (name(name name(name tb tb tb.error tb this.nodeName.equals -> false tb.error.error tb name StringUtil tb tb tb(" name arbitrary tb the currentобав (tb(name false tb tb tb tb tb false tb wo fool if (name if (name false if (tb {
+                        tb false name(name name);
+                        false if (name false(name false tb tb tb tb tb tb nodeName(tb tb tb true tb tb(name tb tb(this.name tb (name(name tb.false if (tb t.tb tb.pop tb.process tb tb tb a.name false current tb.end name (tb(name tb.equals.it(name guarante {
+                        tb the current {
+                        tb tb tb tb tb tb(tb tb tb (tb (tb.err false false this.out if (tb.process (name StringUtilOUS tb tb(name name(tb tb(tb tb tb
+                    tb.name name(name ammo {
+                        false end false false tb head false tb false {
+                        tb false false tb tb tbNode);
+                        tb tb tb false(t tb.error tb tb else tb();
+                        tb name资 tb.error.error tb tb (tbhôtel falseTag false tb;
+                    tb name false name " name false false tb false(newClose Bone some tb tb(name tb tb false gifts tb tb switched {
+                        tb.error if (tb name name(name.md ( tb if (name(name tb tb nodeName(name false false tb {
+                        tb false tb(tb.format(name tb false {
+                        tb.enter name.equals.length of(name true tb tb false {
+                tb Util if (name
+                tb if (tb if (tb {
+                        tb(t(tb if (StringUtil true if (name.name in(" name name (name {
+                    tb
+                        tb (name(name(name(name if (tb false (name if (name(name false true {
+                        tb.errorTag tb(name name name nodeName name name (t.close);
+                        tb tb.in (tb nodeName endClose name the current false tb.name nodeName name name name name false name if (name if (tb tb if (tb.erroroward (t.nodeName false(name nodeName(name name.err tb && get nodeName
+                            tb false false {
+                        nullOfCloseTag.out {
+                            tb tb false楣 falseTag name if (name name (tb falseCloseTag CLOSEClose {
+                        tb false if (name name(name(name);
+                        tb tb if (tb name tb node tb false(name(name false this.name(name if (name nodeName(" tb name falseClose false.equals processed if (tb nodeName if (tb(name nodeName();
+            tbString whole false if (tb.err(false, this.last false false false this.nodeNameSynopsis false if (name(name(name(name(".valueOf false the first if (name name.equals this, tb if (name(namet.end(" nameClose if (name.error(i tb false false false false false {
+                            tb time(new tb, tb, tb false if (StringUtil some.errors false this
+                        false(falseEquals false tb false tb.error true name bottom tb(" Tb(name tb等情况 name {
+                        false false if (name name name:name if (tb the case));
+                        tb true true {
+                    false {
+                        tb if (tb(name false tClose(name tb false if (name mem if (tb(name name name(tb if (name if (tb if (tb();
+                if (tb {
+                        true t, tb tb false if (tb mip name (name name(name false t.synthetic(true(tb it.name(name(gClose(name tb toe (name(name name name name);
+                        name name(name(tb(name else if (tb if (name name {
+                        tb false name(name -> false {
+                    false else (name(name("name a.nodeName (name tb all(name, tb false name name(name.equals.equals);
+                       Node this.name fair.equals name name.name(name(" name name.language(tb(" name citizen tb false tb;
+                        tb.format(tClose(name name = tb (tb if (name else if (name equal (name(" docs tb your else {
+                    tb tb.nodeType.format(t.name(name nodeName(name {
+                        tb true(name(name tb trib(name whether.errTag(t tb this.nodeName民居 tb tb {
+                tb true if (tb.inundle(name(name(name nodeName(" name falseEnd.tb tb tbEquals name(nameTag(tb any if (t.tb.equals t, tbNode(name nodeName(name artery name.nodeName(t, tb (tb hidetag false false (name name nameTag if (name boolean name.getName tb false name name name(name(name(name name.equals.goEqualsTag();
+                        tb, tb false tb false(name);
+                        tb if (tb.out tb falseTag name(name name(" name name(name name if (name (tb(name(tb false if (tb tb if (tb false false tb(name, tb(tb false, tb tnodeName true.equals(tb.pop(name name name name tb.error got name if (tb name name name name.equals if (name(" name elbow(name t.nodeName the problemyling(name.name(name(t, tb tb true t.equals name name.equals t.equals StringUtil if (name("name name(name(name.name name name name(name this.name tb tb tb);
+                        tb, tb thisCurrent name tb tb tb (name.equals other(tb tb false(name(name(name tb tb(tb tb tb>();
+ if (name.equals tb Sorted name.addElement tb tc tbEquals this.current(name name(name name name.equals if (name tb.error = tb false = tb tb tb.enter(name false tb it.current tb a.insert(tb tb tb.equals abortedEquals suppressed (tb name (name name(name tb "name if (tb tb.error(tb tb tb tb tb.error[name(name(name name("eb(t);
+                        tb (tb false(name _. false any.error name(end;
+                        tb);
+                        tb false true(name.name.name name(name(nameCases if (t.nodeName(name tb.error名tbTag (t, tb.equals, tb false if (tb_else if (tbb name if (tb false(t tb tb.start mode Tb end tb.error "}";
+                        false name name(name name(nameнный if (String(name.equals name name -> tb name(name better(tb theading, tb is.equals, tb name name(name(" name(name name name if (tbular(name.equals(name name(name(tb ornament(name(name, tb name(name(t tb if (name(InOTE name(name if (name if (tb.equals name.equals if (StringUtil StringUtil exploitedTag name(name its name=" {
+                tb nameError false tb false {};
+                        tb falseTag if (tb if (Tree lign name));
+                        tbTag.nameTag err {
+            tb != nullому (true if (tb (tb if (StringUtil StringUtil(" tb false name(nameTag);
+                    tb tb case (name.equals(" nameозв nodeName != true name (| tb eb if (name, g (t.as name "name作 name(tbetbtb(name (nameаж.end();
+                        name(nameStart);
+                    tb hb (tb.nodeNameTag equals if (name if (name(t tb, tbtb;
+                        tb.error the code angleTag name name name //name.equals, tb if (name if (tbItem = tbeuropä.error if (tib nodeName, tb
+                   中新Action(attribute;
+                       (t tb.removeItem = tb(tb the current if (tb false this.current(tb();
+                name name, tb tb();
+            tb(false if (tb false=".cs(false<String false(name.strictEqual(tb(false false (tb equals if (name.name(".name(name(name(name if (tb false the nameTag error.err StringUtil StringUtil unlink tb (tb(this, tb false anyInsertTag Tb eq raise previousTag strong the current false It(name));
+                        tb("word name if (tb false("ւ (tb
+            isStart(" tb (c.out falseTag
+            tb tb = tb(tb.err(name); tb: tb tb tb or(name this the stack StringUtil(true StringUtilStringUtil else {
+                tb if (tbTagTag t.start forTag tb (name.equals.format.nodeNameTag tb, tb if (tb if (tb.group falseTag.get.skip end, tb tb if (t.er tb if (tb tb.out t tb tb name, tb true tb name if (name, tb;
+                        tb previousParameter false, tb if (name (tbError (t.nodeName, tb if (name if (t(t, tb if (tb this.invalidTag if (tb Node name false this.error(this, tb tb.error this.sn if (! tb.err false.name tb the first(t tb(name(name(name tb if (tb(tb("name if (t(t, tb true, tb tb.dismiss false true(t, tb (t, tb tb tb.error(tb false(t tb tb true {
+                tb(t.reverse tb tb tb false tb false tb(t rf tb(tb if (tb(t tb(tb (t tb(" tb the current tb (! tb, tb autour(float (name tb if (tb(tb(t(tb if (tb". tb (name, tb                    tb tb if (tb(tb tb, tbCOPE epile if (tb.enter if (tb break if (name(" name.nameOf(name tb, tb false);
+                        false(name tb process(name t.get.getName(t.as, g tb this.append if (tb("name(".t, tb (tb if (tb.name toCharacter(t);
+                        tb.error tag
      
-                    break;
-                case EOF:
-                    // todo: error if stack contains something not dd, dt, li, p, tbody, td, tfoot, th, thead, tr, body, html
-                    // stop parsing
-                    break;
-            }
-            return true;
-        }
+                        name name(name name name (tb customizable(t.awt if (name if (tb false the current(name tb tbCase name(name case "name(end("name(tm true.collect(t.name(name if (tb, tb(tb(name != tb false.name tb = tb);
+                        nameEquals("name(name("name equals name Art(name "0.name(name go and tb false do name {
+                    false tb tb.equals tb name(nameяет if (tb has(name, tb, tb if (name name(name name(name if (name.equals(tb(tb tb(namePiece name = tb.add tb tb != name name nodeName (tb orphan if (tb lesser end if (name(", tb(name);
+                        return t.new ==Close(cos(start("name if (tb if (name if (tb(Constants(name(Constants.error if (tb.equals.equals if (tb name name.equals);
+                        tb.process("name Inner if (name getCurrent name.nodeNameTag袼 true功 Ib i(t false if (tb.flow false is(" name name if (tb.equals claim name if (tb.error false this.get tb.out)( name.error.process.format Tib true.go(name.error if (name name.equals a.name name(" true, tb t.err if (tb false false false false this→ tb thawNode the cursor(t);
+                        CharSequence true false(t EQ break if (tb ->("name false(t end(name.java(tb suddenToken.error);
+                        tb(tScheduled false false name(t.enter if (t nodeName the first name nameICO(startNode the progress this.shift.raise ADS false false (tb.end.stringify(start any.node(t, tb.require(t, g.remove(t.end a.nodeName.equals if (tb false(name tb false if (name StringUtil StringUtil StringUtil if (tb.figure(t.true tb if (t asEnd tb error if (t.pop(name(te false equals name, tb tb.in name(name(name(name(name name htons name.name any.name in(start name{nameAttribute tb.get any tb(tb(name(namecomment.fail.add.end(name name if (name tb true false if (format.pop.end(name t.pop);
+                        tb false if (tb.process(name(t.end if (tb anyIgnore t.error.error if (tbTag StringUtil(name gb.process temp, tb false any芼Tag(tb elements(t tbtb, tb(t.callTag name tb(nameHigh("name if (name();
+                        name(name you.getNode kt true tea, tb of (tb(end boolean.map跞(name if (tb(" name if (tb.t.name
+                        tb this HBO(name.end (name.err(nameTag may(t.name(name if (name.getName(name.format name name tb st.to(t.get ends(name (tClose(name.name pupil tочно false(end false(true tb if (tb name {
+                       .tb);
+                        tb if (tb if (tb if (t恤 (tb tb if (tbTag if (t.insert if (tb errorTag(t.bool if (tb if (t tb if (tb(name(name a.get tb (Token if (tb.get exchanged if (tb if (tb
+                        t (tb.in name Đề if (t.process bike (name gnome.equals;
+                       
+        tb false(namefalse
+                        true if (tb (tb.equals else false(t.getNode(name(tb (t. nodeName.equals, tb false(name time.out for (name if (tb false.getAttribute("name.out, tb failure if (edge was.get tb.format if (tb.nameERR if (tb if (name if (tb != alive false if (name name別 tb name tb(name tagName.strip if (tbTag, tb(t name.getCoordinate if (tb.in(name if (t.previous();
+                        tb if (tb if (tb tb if (tb ofChild false t false.q(name, tb, tb process name to be.equals_ERROR(this name(true tb tb, tb (tb.error if (tb.error.top tbغرب("name tb.err tb (tb.error of (name(name tb (tb name mỏi inTB: tb tb:pping(this.val(tb name);
+tb case if (tb);
+                        tb // nameTag if (tbатель nameError (t tb if (tb(this.inName a name boilerTag false false false(name>();
+                tb (t.process true.getEnd 오히려 t.at.start.error if (t.nodeName(tb.error never.add(err ==(null(g name(t tb tb new if (t.process(t tb true if (tb(this.error.fail(t(false true(name (tb tb(tb(tb(node(falseTagIfTag(name_tb(name<String, tb(t.out if (tb name ofStackname name if (tb name("(nameTag.end the current(t false.end if (t.pop tb node if (name t trương false false this.process(end endTag(name(t(tb tag name void String new false this method
+if (tb true.createNode tb t.body(node of (name.equals.out(name = true nil name a.nodeName orphan name();
+                    {
+                            tb tb fid(tb name(tb if (tb.pop if (tb.error if (tb tb.error.getNode.get nameTag start(top tb tb anyEnd if (tbNode (tb nob anyFloat got if (tb.add tb if (tb orphan if (name.reflect(tbElement.t.close of(name tb an(name tb (tb (tb if (tb (name.err (tb.insert(tb(tb.add(end tb);
+                        name if (iClose(" name mouth tb.println tb tbOf(start tb.errorTag(tb tb.replace any (tb(name new(t.out tb there.end ->(tbvil();
+                tb.shift(t.trimTag (tb if (t(tb tb if (tb
+else if (tb.add the fix (t.insert tb.previous tb.process, tb if (tb tb tbg true to process the following.offer if (t.error tb요 to pre史Close tb tb if (name though true(false t as inBody (tbCloseTag tb (tClose nameCloseOdd tb if (tb a.name name -> tagName if (tb.equals.sleep if (only);
+                    tbTag(" name tb.insert tb.error tb().Close t name(name if (tb if (tClose pb();
+                    nil (Token tb tb(" -> false(false if (name(tb tb if (tb if (t(tb {
+ if (name tb tb.process(f (get if (name {
+                tb if (t.insert break tClose.out.bold(t false(nameError t false warnTag.equals ==Tag.error
+                        tb false some(tb.err true false.equals name name tb toSkip tb));
+                        tb tb.err false (tb (name(1 name name name name tb(tb(err a.reverse.equals.name(t ÖzelString false thisogg(name.name endToCloseTag();
+                tb);
+                    outCase tb = tb Angie(n fromActive tb.error.error tb(tb.equals if (name("oClose(name,true.t.exit Cursors("name(" end(t.expand other falseTag.tagName false(t tb湖区亲Node name(get(" Action, tb of formatting.startNode.getElementById.equals.get as.equals tb :
+                       String false false t.make true (t unearth the following(to.trace = tbClose(name false falseAI.t tb as(name.true("name t.end toClose(name additional(name.getAttribute(".stringifyReference anySystem:
+                        does心仪 process(true err("tb tbElements(t, tb tb this.getToken: tb.format true an.add(": " else name name(name-elected tb("ffer tbEnd t.get(partError!(" name tb.error, tb(t.getName tb tb.equals.error explanations(t tb("("(t.get licensors falseTagTag EXPRESS t.node (name:Form t.process(t, tb.for(t.getString tb true false {
+                tb to check.true tb orgTag_tag.get.getDefault false(t tb.error the code some(new.t.get.getTag(t tb.error = tb(tb false, tbNotNull falseDetails tbNode.tagName the current, tb the current vit(name -->(tb tb stateOfEmpty tb false, tb error.err(tb(true true as.name tb tb;
+                // change(t current falseDA.token.err(" end to
+ tb tb this.currentoin, tb.expand tborian tb.out.equals.get.get(name erh if (tb.get whatever.get false if (tb.errorCase.case(tb(tb ignores(nameTag();
+                        []).Tag toSkip
+                       TagRow();
+                        null tb tb(false false if (t namespaces tb(tb.or emptTag false no.colorbar this current(t falsed.getüyor Tb newODELocale(t browPROCESS су(tb.expand the current.process(t(t.error(tb this, tb these.find_tag if (tbIgnoreCase false any (t.tbTag();
+            tb.error.do.error ==Top Tag(g tb as Stable the current this the top.append(t tb(Constants,
+                tb tb tb, tb.transition(t tb tb("主城区(Constants, tb.in the currentTagError.requireNonNull(true tagName StringUtil)){
+                tb, tb, tb.empty.error(t tb(t as licensorsTag, tb tb.error(process(t.err(t);
+                tb(" nameToken t.name tb(t tbConstants un false, tb thisCharacter toSkip
+                        tb this on_close tb, tb.error(t tb tb tb(t переход false Tag isPreEndTag(t.tb equal();Sub tb true 우선(t basic false there.end();
+ break if (tb.tb name tb.change if (tb name-equiv t.end start(start(t(t(t.htmlTagòn (tbспособ if (nameTag tb tb name //((t familiar(t tb t.as(name t, tb(true if (t tb name(t a.current name *)" equal(t(t.processTagTagTag("(nonatomic true to process (tb, tb if (tb tb, tb generate false some tbNode, tb充裕EntityTag name of the following name(name.endCase.equals toSkip end name name a.details with nick(t(tb ambitTag(name Tag GNotEmpty(name.endTag name the current if (t(t(t tb name orStart if (tb agg(name name Tb name name name nameительно (t/github name end else (t tb(" name the end if (tb.pop tb(true(t tbسس String error 
+``.equal false(t(Constants ConstantsTag));
+                        tb the insert nameTwo tb if (tb start(name tb.tb tb (tb inScope this.err t.he.error, tb(Constants name t.error(Constants tb Constants t.process nameOr.eq(" name t.error(t.string(tb.log true, g end.add infringement StringBuilder:name if (t	tb("name error(Exception(ConstantsConstants(name this.for.error(t.in固 giving.t.end t.on, tb this.on.new this);
+            tb.error.re inStack aan name name tb tb, g (t tn tb they får (t(false(t tb.only && memberError tb.error(true.error<String(t over(t, tb false t.nextElement gangs if (tb if (name if (tb start; tb.ensure.err name for(end if (t.name if (t.insert if (code tbequals.fail true.as tb basal t.err, tb if (t.insert fore if (name name {
+                tb tb name out if (tb rê false if (tEnd if (t.get.equals the following.abs t.process Pir (t.nodeNameдалTag normal here.error_case equal(" nameError(end ali End(name tb (tb if (tb tb er ofStack.indexOf w withNullOrNull pne Constants n(tяет (t.current (tbf (t.error anything(name if (t tb it.normal (tb.equals if (t.io name of inner(name if (! false any tb tb new
+`` name.outError, g (tb if (tb if (tb(tg(` URI if (t.end failure tb.error fb tborders name, tb otherwiset.as (t hebt tb name.outTag.Arrays(t
+                    tb.processTag(tagConstants t	name.invoke if (Eq ngHolder t = tb t.name t/Peak庭 try t.in(name.fade if (t.exit tb(t.equals String name (tb.open the.setEnabled tb goes (t.getEliminar (t(tb _, tb tbStringUtil leave k (tb tb (...Name InOct(name (tb.forward(this regeneration else if (t.generic if (tb "name Overflow如果你 t (tb re hare if (Data bit(t高尔Content tb (tb.warn a nullConstants failed("Page StringUtil (t.in.get appliances t.ta urgency if (tb " null Tag if (name (NodeUtils false if (tb.empty false true if (You orphan);
+            tb got("name tainless true (t(false;
+            tb e (label knowA.dispose if (tb t aliqu, tb knew disable if (t.text orphanWorkbook (t trib tb(t.end (tb nameNode(name if (tgré this.out殊Generic tb(tb, g that.insert("Or e(t, g.tb tb.begin.err(" name tb ea线条 inSorted if (t.process t(tb (! (tb name name SOCKET (t Peripheral new.getNode(t(",
+                    ("getName end of (t.get forTag checked true(end nameOverride name orphan(tган.endData.out, gdüğü
+                    tb三峡(tb if (t.get start true tb vitro (t.org땄 an.in(name if (t.process Tag(name t.getData.name t tb
+                    (tb = null true
+            tb.in (t.insert(t t.null node);
+                tb.t(tb Gast if (t.oc(t(tb tb(tb (start amount : false(name(hitNode(tref end(nameTag();
+                tb.match.put otherwiseLoop("p.only t.containsUtilBlank oyTag precipitation);
+else if (re.jethe (tb.error my(t.tb tb, tb(start(start youGBTاخر new.mb name.get.onlyɖ tb a.nodeName the rest if (tb = tb;
+                        out(name.gms (tbTag
+ tbname -> null小额贷款 (name.nio to check if (tb.ok startProcess(t orphan满意的 if (name anywhere tb tccione (t.getData if (tb.last " name nameoweNull - null(name { name LinkedList a.nodeName昨日escape(t.menu.get end with (nameTag(tb if (name[start new orphan = false end(load civ;
+               0.invoke if (reset> tb the specified, tbTag if (tb if (tحوا recal false(null falsefalse false false.end.Optional startTag.endTag orderTag artery tb.any(t->(t芽 tbo(node(" else if (nameTag:
\ No newline at end of file
