diff --git a/tmp/c6b7e1dc-76ac-454c-9d82-81eca4edc2b9_buggy.java b/tmp/4176a0ed-f16c-4782-9ef9-69b961f87ab5_fixed.java
index 670114d..2be3409 100644
--- a/tmp/c6b7e1dc-76ac-454c-9d82-81eca4edc2b9_buggy.java
+++ b/tmp/4176a0ed-f16c-4782-9ef9-69b961f87ab5_fixed.java
@@ -1,48 +1,64 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
+    } else if (ns != null && "goog.inherits".equals(ns.name)) {
+      // Handle goog.inherits calls
+      Node child1 = n.getSecondChild(); // The subclass
+      Node child2 = child1.getNext(); // The superclass
+      if (child1 != null && child2 != null) {
+        NameInformation subclassNs = createNameInformation(t, child1, n);
+        NameInformation superclassNs = createNameInformation(t, child2, n);
+        if (subclassNs != null && superclassNs != null) {
+          JsName subclass = getName(subclassNs.name, false);
+          JsName superclass = getName(superclassNs.name, false);
+          if (subclass != null && superclass != null) {
+            refNodes.add(new ClassDefiningFunctionNode(
+                subclass, n, parent, parent.getParent()));
+          }
+        }
+      }
     }
   }
 }
\ No newline at end of file
