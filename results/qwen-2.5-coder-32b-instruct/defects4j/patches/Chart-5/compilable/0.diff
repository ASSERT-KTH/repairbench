diff --git a/tmp/6bcf8256-69c3-412d-a1d3-04169fb5d61b_buggy.java b/tmp/0eb8c5d8-b8f6-4974-b5e3-9035aa5d4aab_fixed.java
index fd8eae5..83443ae 100644
--- a/tmp/6bcf8256-69c3-412d-a1d3-04169fb5d61b_buggy.java
+++ b/tmp/0eb8c5d8-b8f6-4974-b5e3-9035aa5d4aab_fixed.java
@@ -1,47 +1,47 @@
     /**
      * Adds or updates an item in the series and sends a
      * {@link SeriesChangeEvent} to all registered listeners.
      *
      * @param x  the x-value (<code>null</code> not permitted).
      * @param y  the y-value (<code>null</code> permitted).
      *
      * @return A copy of the overwritten data item, or <code>null</code> if no
      *         item was overwritten.
      */
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
 
-        // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
         if (index >= 0 && !this.allowDuplicateXValues) {
+            // Duplicate X value found and duplicates are not allowed
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
-            }
-            catch (CloneNotSupportedException e) {
+            } catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
-        }
-        else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+        } else {
+            // Either duplicates are allowed or no duplicate was found
+            XYDataItem newItem = new XYDataItem(x, y);
             if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+                // If the series is sorted, insert the new item at the correct position
+                if (index < 0) {
+                    index = -index - 1;
                 }
-            else {
-                this.data.add(new XYDataItem(x, y));
+                this.data.add(index, newItem);
+            } else {
+                // If not sorted, just append the new item
+                this.data.add(newItem);
             }
-            // check if this addition will exceed the maximum item count...
+            // Check if this addition will exceed the maximum item count
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }
         }
         fireSeriesChanged();
         return overwritten;
     }
\ No newline at end of file
