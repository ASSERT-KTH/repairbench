diff --git a/tmp/edd45f64-68e8-4603-9d03-ecafb4cea401_buggy.java b/tmp/b27eee38-418b-4a5a-9152-5df0ca0cad98_fixed.java
index f47d784..6876373 100644
--- a/tmp/edd45f64-68e8-4603-9d03-ecafb4cea401_buggy.java
+++ b/tmp/b27eee38-418b-4a5a-9152-5df0ca0cad98_fixed.java
@@ -1,12 +1,29 @@
 @Override
 public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
-      MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
+        MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique() {
+            @Override
+            protected boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
+                // Skip renaming the 'arguments' variable
+                if (n.isName() && "arguments".equals(n.getString())) {
+                    return false;
+                }
+                return super.shouldTraverse(t, n, parent);
+            }
+
+            @Override
+            public void visit(NodeTraversal t, Node n, Node parent) {
+                if (n.isName() && "arguments".equals(n.getString())) {
+                    return; // Do not rename 'arguments'
+                }
+                super.visit(t, n, parent);
+            }
+        };
         NodeTraversal t = new NodeTraversal(compiler, renamer);
         t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
 }
\ No newline at end of file
