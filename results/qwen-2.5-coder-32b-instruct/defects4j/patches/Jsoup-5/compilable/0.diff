diff --git a/tmp/8750aa1f-636f-4ceb-84e6-d894fcf4c35c_buggy.java b/tmp/48b973ef-fb6d-4182-8145-67a9625bac73_fixed.java
index 39dd8e7..98d0622 100644
--- a/tmp/8750aa1f-636f-4ceb-84e6-d894fcf4c35c_buggy.java
+++ b/tmp/48b973ef-fb6d-4182-8145-67a9625bac73_fixed.java
@@ -1,30 +1,37 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+                try {
                     valueAccum.append(tq.consume());
+                } catch (StringIndexOutOfBoundsException e) {
+                    // Handle the case where consume() might go out of bounds
+                    break;
+                }
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    if (key.length() != 0) {
         return Attribute.createFromEncoded(key, value);
-        else {
+    } else {
+        // If key is empty, consume one character and return null
+        if (!tq.isEmpty()) {
             tq.consume();
-                
+        }
         return null;
     }
 }
\ No newline at end of file
