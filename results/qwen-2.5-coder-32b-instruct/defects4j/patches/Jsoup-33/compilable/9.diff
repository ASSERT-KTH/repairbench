diff --git a/tmp/bba5755d-6298-483b-b337-e8e944e3f19b_buggy.java b/tmp/e99f7cc7-5a0a-4a09-be55-01af2c3792e2_fixed.java
index dc93be3..b1f8ef2 100644
--- a/tmp/bba5755d-6298-483b-b337-e8e944e3f19b_buggy.java
+++ b/tmp/e99f7cc7-5a0a-4a09-be55-01af2c3792e2_fixed.java
@@ -1,14 +1,16 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
+    // handle empty known tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+    if (startTag.isSelfClosing() || Tag.valueOf(startTag.name()).isEmpty()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
+        if (!Tag.valueOf(startTag.name()).isEmpty()) {
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
