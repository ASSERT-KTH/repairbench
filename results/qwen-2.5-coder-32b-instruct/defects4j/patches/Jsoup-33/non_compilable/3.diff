diff --git a/tmp/1d8a6ce0-b0c2-49f3-8b63-f53230fae074_buggy.java b/tmp/b47d4e7b-862b-485f-8887-8e833f7e136b_fixed.java
index dc93be3..2769171 100644
--- a/tmp/1d8a6ce0-b0c2-49f3-8b63-f53230fae074_buggy.java
+++ b/tmp/b47d4e7b-862b-485f-8887-8e833f7e136b_fixed.java
@@ -1,14 +1,18 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+    if (startTag.isSelfClosing() || Tag.isKnownEmpty(startTag.name())) {
         Element el = insertEmpty(startTag);
         stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        // Ensure we get out of whatever state we are in. emitted for yielded processing
+        if (!Tag.isKnownEmpty(startTag.name())) {
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
+    stack.add(el);
     return el;
 }
\ No newline at end of file
