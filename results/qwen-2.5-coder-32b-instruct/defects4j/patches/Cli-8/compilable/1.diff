diff --git a/tmp/42c4d075-ecdf-4d4c-baa0-14574871fe91_buggy.java b/tmp/15b16cc1-8a17-4f7c-99d7-ac1c26263217_fixed.java
index 8e93a5e..f4926ef 100644
--- a/tmp/42c4d075-ecdf-4d4c-baa0-14574871fe91_buggy.java
+++ b/tmp/15b16cc1-8a17-4f7c-99d7-ac1c26263217_fixed.java
@@ -1,43 +1,30 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
-        int pos = findWrapPos(text, width, 0);
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
+    String[] lines = text.split("\n");
+    boolean firstLine = true;
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
+    for (String line : lines) {
+        int pos = findWrapPos(line, width, 0);
 
-            return sb;
+        if (pos == -1) {
+            if (!firstLine) {
+                sb.append(createPadding(nextLineTabStop));
             }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
+            sb.append(rtrim(line));
+        } else {
+            while (pos != -1) {
+                if (!firstLine) {
+                    sb.append(createPadding(nextLineTabStop));
+                }
+                sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+                line = line.substring(pos).trim();
+                pos = findWrapPos(line, width, 0);
+            }
+            if (!line.isEmpty()) {
+                sb.append(createPadding(nextLineTabStop)).append(rtrim(line));
             }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
+        sb.append(defaultNewLine);
+        firstLine = false;
+    }
+    return sb;
 }
\ No newline at end of file
