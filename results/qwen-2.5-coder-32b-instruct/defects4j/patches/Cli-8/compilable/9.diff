diff --git a/tmp/7359d28b-a086-4bcd-84b2-5d550f24c817_buggy.java b/tmp/da1729c4-230c-4171-abac-8eabfcaa3647_fixed.java
index 8e93a5e..f6e08b2 100644
--- a/tmp/7359d28b-a086-4bcd-84b2-5d550f24c817_buggy.java
+++ b/tmp/da1729c4-230c-4171-abac-8eabfcaa3647_fixed.java
@@ -1,43 +1,49 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
+    int pos = 0;
+    String[] lines = text.split("\n");
 
-        if (pos == -1)
+    for (String line : lines)
     {
-            sb.append(rtrim(text));
-
-            return sb;
+        pos = 0;
+        while (pos < line.length())
+        {
+            int wrapPos = findWrapPos(line, width, pos);
+            if (wrapPos == -1)
+            {
+                sb.append(rtrim(line.substring(pos)));
+            }
+            else
+            {
+                sb.append(rtrim(line.substring(pos, wrapPos)));
             }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+            if (wrapPos != -1)
+            {
+                sb.append(defaultNewLine);
+                // all following lines must be padded with nextLineTabStop space characters
                 final String padding = createPadding(nextLineTabStop);
-
-        while (true)
+                sb.append(padding);
+                pos += wrapPos;
+            }
+            else
             {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
+                pos = line.length();
+            }
+        }
+        sb.append(defaultNewLine);
+    }
     return sb;
 }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
