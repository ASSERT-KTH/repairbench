diff --git a/tmp/b64e9023-aeb5-4024-95f7-d30a22fff09f_buggy.java b/tmp/45bc8784-5d34-48ed-b398-1748b24e139b_fixed.java
index 4b163f6..7491db6 100644
--- a/tmp/b64e9023-aeb5-4024-95f7-d30a22fff09f_buggy.java
+++ b/tmp/45bc8784-5d34-48ed-b398-1748b24e139b_fixed.java
@@ -1,28 +1,33 @@
 /**
  * Skips the given number of bytes by repeatedly invoking skip on
  * the given input stream if necessary.
  *
  * <p>In a case where the stream's skip() method returns 0 before
  * the requested number of bytes has been skip this implementation
  * will fall back to using the read() method.</p>
  *
  * <p>This method will only skip less than the requested number of
  * bytes if the end of the input stream has been reached.</p>
  *
  * @param input stream to skip bytes in
  * @param numToSkip the number of bytes to skip
  * @return the number of bytes actually skipped
  * @throws IOException
  */
 public static long skip(InputStream input, long numToSkip) throws IOException {
     long available = numToSkip;
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
         if (skipped == 0) {
-                break;
+            // If skip returns 0, fall back to reading a single byte
+            int readByte = input.read();
+            if (readByte == -1) {
+                break; // End of stream reached
             }
+            numToSkip--;
+        } else {
             numToSkip -= skipped;
         }
-            
+    }
     return available - numToSkip;
 }
\ No newline at end of file
