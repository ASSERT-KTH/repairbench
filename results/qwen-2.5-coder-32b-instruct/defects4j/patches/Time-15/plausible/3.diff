diff --git a/tmp/386f1c4a-ccc1-4ad1-a195-0c125bd6ffb3_buggy.java b/tmp/6e733154-324c-466b-b38e-4fdd6f003beb_fixed.java
index a9a5e27..5657f08 100644
--- a/tmp/386f1c4a-ccc1-4ad1-a195-0c125bd6ffb3_buggy.java
+++ b/tmp/6e733154-324c-466b-b38e-4fdd6f003beb_fixed.java
@@ -1,24 +1,38 @@
     /**
      * Multiply two values throwing an exception if overflow occurs.
      * 
      * @param val1  the first value
      * @param val2  the second value
      * @return the new total
      * @throws ArithmeticException if the value is too big or too small
      * @since 1.2
      */
     public static long safeMultiply(long val1, int val2) {
         switch (val2) {
             case -1:
+                if (val1 == Long.MIN_VALUE) {
+                    throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+                }
                 return -val1;
             case 0:
                 return 0L;
             case 1:
                 return val1;
         }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+        if (val2 > 0) {
+            if (val1 > Long.MAX_VALUE / val2 || val1 < Long.MIN_VALUE / val2) {
                 throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
             }
-        return total;
+        } else {
+            if (val1 > 0) {
+                if (val2 < Long.MIN_VALUE / val1) {
+                    throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+                }
+            } else {
+                if (val1 < Long.MAX_VALUE / val2) {
+                    throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+                }
+            }
+        }
+        return val1 * val2;
     }
\ No newline at end of file
