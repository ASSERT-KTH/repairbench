diff --git a/tmp/1db7a1f6-3522-48d7-9d35-d982af04a06e_buggy.java b/tmp/36a121ee-8191-44de-966f-e2356f7c9eb5_fixed.java
index 2573d30..257335f 100644
--- a/tmp/1db7a1f6-3522-48d7-9d35-d982af04a06e_buggy.java
+++ b/tmp/36a121ee-8191-44de-966f-e2356f7c9eb5_fixed.java
@@ -1,20 +1,26 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
         return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    Node objectNode = node.getFirstChild();
+    // If the object being accessed is not a simple name, we cannot guarantee safety.
+    if (!objectNode.isName()) {
+        return false;
+    }
+
+    String objectName = objectNode.getString();
+    // Check if the object name is assigned to the replacement node.
+    if (isNameAssignedTo(objectName, replacement)) {
         return false;
     }
 
     return true;
 }
\ No newline at end of file
