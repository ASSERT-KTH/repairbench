diff --git a/tmp/d11d8d6d-f39b-4db0-b972-77a37b276355_buggy.java b/tmp/49c4b5e3-a872-4a8a-885b-239c3e5f00cb_fixed.java
index d926eea..bcb1274 100644
--- a/tmp/d11d8d6d-f39b-4db0-b972-77a37b276355_buggy.java
+++ b/tmp/49c4b5e3-a872-4a8a-885b-239c3e5f00cb_fixed.java
@@ -1,48 +1,44 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
     // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
     // First: custom pattern will override things
     if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                     || format.hasLocale() || format.hasTimeZone()) {
         TimeZone tz = format.getTimeZone();
         final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
         final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
         SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
         if (tz == null) {
             tz = serializers.getTimeZone();
         }
         df.setTimeZone(tz);
         return withFormat(Boolean.FALSE, df);
     }
 
-        // Otherwise, need one of these changes:
+    // Otherwise, use the default DateFormat from the ObjectMapper if no pattern is specified
+    if (shape == JsonFormat.Shape.STRING && !format.hasPattern()) {
+        return withFormat(Boolean.FALSE, serializers.getDateFormat());
+    }
 
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+    // Ugh. No way to change `Locale`, create copy; must recreate completely:
     return this;
 }
\ No newline at end of file
