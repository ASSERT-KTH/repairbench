diff --git a/tmp/7dd0ab67-0b8b-447b-b9d1-d33f6c369b43_buggy.java b/tmp/147a2733-96a1-4ef1-8727-0194a06c69e6_fixed.java
index 351a97a..fd6593d 100644
--- a/tmp/7dd0ab67-0b8b-447b-b9d1-d33f6c369b43_buggy.java
+++ b/tmp/147a2733-96a1-4ef1-8727-0194a06c69e6_fixed.java
@@ -1,18 +1,40 @@
 /**
  * Tests the list for equality with another object (typically also a list).
  *
  * @param obj  the other object (<code>null</code> permitted).
  *
  * @return A boolean.
  */
 public boolean equals(Object obj) {
 
     if (obj == this) {
         return true;
     }
     if (!(obj instanceof ShapeList)) {
         return false;
     }
-        return super.equals(obj);
     
+    ShapeList otherList = (ShapeList) obj;
+    
+    // Assuming ShapeList has a method to get the list of shapes
+    List<Shape> thisShapes = this.getShapes(); // Replace with actual method to get the shapes
+    List<Shape> otherShapes = otherList.getShapes(); // Replace with actual method to get the shapes
+    
+    if (thisShapes.size() != otherShapes.size()) {
+        return false;
+    }
+    
+    for (int i = 0; i < thisShapes.size(); i++) {
+        Shape s1 = thisShapes.get(i);
+        Shape s2 = otherShapes.get(i);
+        
+        if (s1 == null && s2 != null) {
+            return false;
+        }
+        if (s1 != null && !s1.equals(s2)) {
+            return false;
+        }
+    }
+    
+    return true;
 }
\ No newline at end of file
