diff --git a/tmp/dae5bae7-ed73-45a2-8ade-631db08d02bc_buggy.java b/tmp/26006f00-fbbe-45fa-8667-501ccef2c57a_fixed.java
index 351a97a..3d91bfb 100644
--- a/tmp/dae5bae7-ed73-45a2-8ade-631db08d02bc_buggy.java
+++ b/tmp/26006f00-fbbe-45fa-8667-501ccef2c57a_fixed.java
@@ -1,18 +1,41 @@
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
         
+        ShapeList other = (ShapeList) obj;
+        
+        // Assuming there is a method to get the list of shapes or a similar structure
+        List<Shape> thisShapes = getShapes(); // This method needs to be implemented or replaced with the actual list access
+        List<Shape> otherShapes = other.getShapes(); // This method needs to be implemented or replaced with the actual list access
+        
+        if (thisShapes.size() != otherShapes.size()) {
+            return false;
+        }
+        
+        for (int i = 0; i < thisShapes.size(); i++) {
+            Shape s1 = thisShapes.get(i);
+            Shape s2 = otherShapes.get(i);
+            
+            if (s1 == null) {
+                if (s2 != null) {
+                    return false;
+                }
+            } else if (!s1.equals(s2)) {
+                return false;
+            }
+        }
+        
+        return true;
     }
\ No newline at end of file
