diff --git a/tmp/a5af84ed-367e-48c3-8995-55401eea0f44_buggy.java b/tmp/8b4b9993-2e17-48ac-9589-7dad36637172_fixed.java
index 2608424..5b2c0ed 100644
--- a/tmp/a5af84ed-367e-48c3-8995-55401eea0f44_buggy.java
+++ b/tmp/8b4b9993-2e17-48ac-9589-7dad36637172_fixed.java
@@ -1,39 +1,24 @@
  /**
   * Convert to multidimensional counter.
   *
   * @param index Index in unidimensional counter.
   * @return the multidimensional counts.
   * @throws OutOfRangeException if {@code index} is not between
   * {@code 0} and the value returned by {@link #getSize()} (excluded).
   */
  public int[] getCounts(int index) {
      if (index < 0 ||
          index >= totalSize) {
          throw new OutOfRangeException(index, 0, totalSize);
      }
 
      final int[] indices = new int[dimension];
 
-        int count = 0;
-        for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
+     for (int i = 0; i < dimension; i++) {
+         final int offset = i < last ? uniCounterOffset[i] : 1;
+         indices[i] = index / offset;
+         index %= offset;
      }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
-        }
-
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
 
      return indices;
  }
\ No newline at end of file
