diff --git a/tmp/b80cbc28-f4bc-4191-b235-aa26f63f715c_buggy.java b/tmp/1edc104e-6faf-46de-a7de-6babd791ffbf_fixed.java
index 511560e..0acb1fb 100644
--- a/tmp/b80cbc28-f4bc-4191-b235-aa26f63f715c_buggy.java
+++ b/tmp/1edc104e-6faf-46de-a7de-6babd791ffbf_fixed.java
@@ -1,21 +1,27 @@
 private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
     // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
     int bottom = stack.size() - 1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
+    // Ensure bottom does not exceed the stack size
+    if (bottom < 0) {
+        return false;
     }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
+    // Set a reasonable limit for the scope search depth
+    final int maxSearchDepth = Math.min(MaxScopeSearchDepth, stack.size());
+    final int top = Math.max(bottom - maxSearchDepth, 0);
 
+    // don't walk too far up the tree
     for (int pos = bottom; pos >= top; pos--) {
         final String elName = stack.get(pos).nodeName();
-            if (inSorted(elName, targetNames))
+        if (inSorted(elName, targetNames)) {
             return true;
-            if (inSorted(elName, baseTypes))
+        }
+        if (inSorted(elName, baseTypes)) {
             return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
+        }
+        if (extraTypes != null && inSorted(elName, extraTypes)) {
             return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+    }
+    // If no match is found within the scope, return false
     return false;
 }
\ No newline at end of file
