diff --git a/tmp/e8ca6f76-c0a3-422f-8025-5e1fc3800b77_buggy.java b/tmp/57da7fdf-54e7-47c3-bb15-f87163737426_fixed.java
index 1c875ad..29f4849 100644
--- a/tmp/e8ca6f76-c0a3-422f-8025-5e1fc3800b77_buggy.java
+++ b/tmp/57da7fdf-54e7-47c3-bb15-f87163737426_fixed.java
@@ -1,31 +1,20 @@
 public void captureArgumentsFrom(Invocation invocation) {
-        if (invocation.getMethod().isVarArgs()) {
-            int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+    int argCount = invocation.getRawArguments().length;
+    boolean isVarArgs = invocation.getMethod().isVarArgs();
     
-        } else {
     for (int position = 0; position < matchers.size(); position++) {
         Matcher m = matchers.get(position);
         if (m instanceof CapturesArguments) {
+            if (isVarArgs && position == matchers.size() - 1) {
+                // Handle varargs
+                Object varArgsArray = invocation.getArgumentAt(position, Object.class);
+                int varArgsLength = Array.getLength(varArgsArray);
+                for (int i = 0; i < varArgsLength; i++) {
+                    ((CapturesArguments) m).captureFrom(Array.get(varArgsArray, i));
+                }
+            } else if (position < argCount) {
                 ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
             }
         }
     }
-
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
 }
\ No newline at end of file
