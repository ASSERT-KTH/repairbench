diff --git a/tmp/9b6323a6-befb-4151-ab46-2c3e6a762332_buggy.java b/tmp/7c475b0e-88db-438b-ba47-8f88eb442e2b_fixed.java
index 1c875ad..79e67aa 100644
--- a/tmp/9b6323a6-befb-4151-ab46-2c3e6a762332_buggy.java
+++ b/tmp/7c475b0e-88db-438b-ba47-8f88eb442e2b_fixed.java
@@ -1,31 +1,22 @@
 public void captureArgumentsFrom(Invocation invocation) {
     if (invocation.getMethod().isVarArgs()) {
         int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
-
+        Object varargsArray = invocation.getArgumentAt(indexOfVararg, Object.class);
+        for (int i = 0; i < Array.getLength(varargsArray); i++) {
+            Object varargElement = Array.get(varargsArray, i);
+            if (indexOfVararg < matchers.size()) {
+                Matcher m = matchers.get(indexOfVararg);
+                if (m instanceof CapturesArguments) {
+                    ((CapturesArguments) m).captureFrom(varargElement);
+                }
+            }
+        }
     } else {
         for (int position = 0; position < matchers.size(); position++) {
             Matcher m = matchers.get(position);
             if (m instanceof CapturesArguments) {
                 ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
             }
         }
     }
-
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
 }
\ No newline at end of file
