diff --git a/tmp/97fa74df-ad97-4e05-81e0-cc167ceb5179_buggy.java b/tmp/ea79c7d0-e8fa-4c46-86f2-ade0ae76cbc3_fixed.java
index 63641d0..e4a945b 100644
--- a/tmp/97fa74df-ad97-4e05-81e0-cc167ceb5179_buggy.java
+++ b/tmp/ea79c7d0-e8fa-4c46-86f2-ade0ae76cbc3_fixed.java
@@ -1,33 +1,51 @@
 /**
  * For functions with function(this: T, ...) and T as parameters, type
  * inference will set the type of this on a function literal argument to the
  * the actual type of T.
  */
 private boolean inferTemplatedTypesForCall(
     Node n, FunctionType fnType) {
   final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
       .getTemplateKeys();
   if (keys.isEmpty()) {
     return false;
   }
 
   // Try to infer the template types
   Map<TemplateType, JSType> inferred =
       inferTemplateTypesFromParameters(fnType, n);
 
+  // If no inferences were made, try to infer from the return type as well
+  if (inferred.isEmpty()) {
+    inferred = inferTemplateTypesFromReturnType(fnType, n);
+  }
 
   // Replace all template types. If we couldn't find a replacement, we
   // replace it with UNKNOWN.
   TemplateTypeReplacer replacer = new TemplateTypeReplacer(
       registry, inferred);
   Node callTarget = n.getFirstChild();
 
   FunctionType replacementFnType = fnType.visit(replacer)
       .toMaybeFunctionType();
   Preconditions.checkNotNull(replacementFnType);
 
   callTarget.setJSType(replacementFnType);
   n.setJSType(replacementFnType.getReturnType());
 
   return replacer.madeChanges;
 }
+
+private Map<TemplateType, JSType> inferTemplateTypesFromReturnType(
+    FunctionType fnType, Node callNode) {
+  Map<TemplateType, JSType> inferredTypes = new HashMap<>();
+  JSType returnType = fnType.getReturnType();
+  JSType actualReturnType = callNode.getJSType();
+
+  if (returnType != null && actualReturnType != null) {
+    TemplateTypeMapper mapper = new TemplateTypeMapper(registry, returnType, actualReturnType);
+    inferredTypes.putAll(mapper.getInferredTemplateTypes());
+  }
+
+  return inferredTypes;
+}
\ No newline at end of file
