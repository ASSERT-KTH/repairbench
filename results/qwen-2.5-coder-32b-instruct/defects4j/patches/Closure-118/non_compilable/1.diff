diff --git a/tmp/b9ae4e81-1f95-4823-b558-f427314839f4_buggy.java b/tmp/59c97d29-2650-41cc-997d-60f766384b2f_fixed.java
index 0b7c52e..c56caaa 100644
--- a/tmp/b9ae4e81-1f95-4823-b558-f427314839f4_buggy.java
+++ b/tmp/59c97d29-2650-41cc-997d-60f766384b2f_fixed.java
@@ -1,27 +1,47 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
-        // Maybe STRING, GET, SET
+        // Maybe STRING, GET, SET, or a computed property
+
+        String name = null;
+        if (child.isStringKey()) {
+          name = child.getString();
+        } else if (child.isGetterDef() || child.isSetterDef()) {
+          name = child.getString();
+        } else if (child.isComputedProp()) {
+          Node keyNode = child.getFirstChild();
+          if (keyNode.isStringLit()) {
+            name = keyNode.getString();
+          } else {
+            // If the computed property key is not a string literal, we can't handle it here.
+            continue;
+          }
+        } else {
+          // We should never reach here with other types of nodes in an OBJECTLIT.
+          continue;
+        }
+
+        if (name == null) {
+          continue;
+        }
 
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
         if (!prop.scheduleRenaming(child,
                                    processProperty(t, prop, type, null))) {
           // TODO(user): It doesn't look like the user can do much in this
           // case right now.
           if (propertiesToErrorFor.containsKey(name)) {
             compiler.report(JSError.make(
                 t.getSourceName(), child, propertiesToErrorFor.get(name),
                 Warnings.INVALIDATION, name,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
       }
     }
\ No newline at end of file
