diff --git a/tmp/ec58318d-e383-4862-83f8-8e984c9afc49_buggy.java b/tmp/3b571bd8-9632-4611-bd4d-1d8bb2c30f3b_fixed.java
index 0b7c52e..3fc2359 100644
--- a/tmp/ec58318d-e383-4862-83f8-8e984c9afc49_buggy.java
+++ b/tmp/3b571bd8-9632-4611-bd4d-1d8bb2c30f3b_fixed.java
@@ -1,27 +1,38 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child != null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
-        String name = child.getString();
+    String name = null;
+    switch (child.getType()) {
+      case Token.STRING_KEY:
+      case Token.GETTER_DEF:
+      case Token.SETTER_DEF:
+        name = child.getString();
+        break;
+      default:
+        // Handle other cases if necessary
+        continue;
+    }
+
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
