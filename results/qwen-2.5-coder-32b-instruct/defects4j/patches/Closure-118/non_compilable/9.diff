diff --git a/tmp/a2e28c80-7937-4e92-86d8-80d7db9c3e38_buggy.java b/tmp/fa133c3a-8b1f-4ce7-af3e-4d6496f5baad_fixed.java
index 0b7c52e..d8d327f 100644
--- a/tmp/a2e28c80-7937-4e92-86d8-80d7db9c3e38_buggy.java
+++ b/tmp/fa133c3a-8b1f-4ce7-af3e-4d6496f5baad_fixed.java
@@ -1,27 +1,38 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child != null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
-        String name = child.getString();
+    String name = null;
+    Node keyNode = child.isGetProp() || child.isSetProp() ? child.getFirstChild() : child;
+    if (keyNode.isStringLit()) {
+      name = keyNode.getString();
+    } else if (keyNode.isComputedProp() && keyNode.getFirstChild().isStringLit()) {
+      name = keyNode.getFirstChild().getString();
+    } else {
+      // If the key is not a simple string literal or a computed property with a string literal,
+      // we skip processing this key for renaming.
+      continue;
+    }
+
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
