diff --git a/tmp/6c204f04-3f2f-4e9c-a822-8bf3c6c0296c_buggy.java b/tmp/c4600c6e-2f71-4302-8b0d-67f9200fd508_fixed.java
index 939f49b..0909c15 100644
--- a/tmp/6c204f04-3f2f-4e9c-a822-8bf3c6c0296c_buggy.java
+++ b/tmp/c4600c6e-2f71-4302-8b0d-67f9200fd508_fixed.java
@@ -1,21 +1,21 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+    Node target = n.getFirstChild();
+    Node propertyNameNode = n.getSecondChild();
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    // Check if the property name is 'prototype' or if it's a chained property
+    if (propertyNameNode.getType() == Token.STRING && propertyNameNode.getString().equals("prototype")) {
+      return true;
+    } else if (target.getType() == Token.GETPROP) {
+      Node grandChild = target.getFirstChild().getNext();
+      if (grandChild.getType() == Token.STRING && grandChild.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
