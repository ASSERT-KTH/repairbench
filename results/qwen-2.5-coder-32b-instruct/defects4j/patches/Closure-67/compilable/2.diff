diff --git a/tmp/8df84c42-a4cd-44ee-8d46-9f577adf93b8_buggy.java b/tmp/56d96bbc-8f34-44a4-9fa9-f4f4d247ce08_fixed.java
index 939f49b..d0923e0 100644
--- a/tmp/8df84c42-a4cd-44ee-8d46-9f577adf93b8_buggy.java
+++ b/tmp/56d96bbc-8f34-44a4-9fa9-f4f4d247ce08_fixed.java
@@ -1,21 +1,19 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
         && n.getType() == Token.GETPROP
         ) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        Node current = n;
+        while (current.getType() == Token.GETPROP) {
+            Node propertyNameNode = current.getLastChild();
+            if (propertyNameNode.getType() == Token.STRING
+                && propertyNameNode.getString().equals("prototype")) {
                 return true;
             }
+            current = current.getFirstChild();
         }
     }
 
     return false;
 }
\ No newline at end of file
