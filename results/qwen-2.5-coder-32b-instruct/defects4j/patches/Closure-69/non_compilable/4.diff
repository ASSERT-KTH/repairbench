diff --git a/tmp/6d1fd999-9d8b-4825-8f4e-6698b94411ca_buggy.java b/tmp/b6339abb-22ab-4047-8804-78997d127550_fixed.java
index bf9c086..9158207 100644
--- a/tmp/6d1fd999-9d8b-4825-8f4e-6698b94411ca_buggy.java
+++ b/tmp/b6339abb-22ab-4047-8804-78997d127550_fixed.java
@@ -1,54 +1,64 @@
 /**
  * Visits a CALL node.
  *
  * @param t The node traversal object that supplies context, such as the
  * scope chain to use in name lookups as well as error reporting.
  * @param n The node being visited.
  */
 private void visitCall(NodeTraversal t, Node n) {
     Node child = n.getFirstChild();
     JSType childType = getJSType(child).restrictByNotNullOrUndefined();
 
     if (!childType.canBeCalled()) {
         report(t, n, NOT_CALLABLE, childType.toString());
         ensureTyped(t, n);
         return;
     }
 
     // A couple of types can be called as if they were functions.
     // If it is a function type, then validate parameters.
     if (childType instanceof FunctionType) {
         FunctionType functionType = (FunctionType) childType;
 
         boolean isExtern = false;
         JSDocInfo functionJSDocInfo = functionType.getJSDocInfo();
         if (functionJSDocInfo != null) {
             String sourceName = functionJSDocInfo.getSourceName();
             CompilerInput functionSource = compiler.getInput(sourceName);
             isExtern = functionSource.isExtern();
         }
 
         // Non-native constructors should not be called directly
         // unless they specify a return type and are defined
         // in an extern.
         if (functionType.isConstructor() &&
             !functionType.isNativeObjectType() &&
             (functionType.getReturnType().isUnknownType() ||
              functionType.getReturnType().isVoidType() ||
              !isExtern)) {
             report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());
         }
 
-      // Functions with explcit 'this' types must be called in a GETPROP
-      // or GETELEM.
+        // Functions with explicit 'this' types must be called in a GETPROP
+        // or GETELEM or with an explicit 'this' context.
+        Node receiver = null;
+        if (n.getFirstChild().isGetProp() || n.getFirstChild().isGetElem()) {
+            receiver = n.getFirstChild().getFirstChild();
+        } else if (n.getFirstChild().isThis()) {
+            receiver = n.getFirstChild();
+        }
+
+        if (functionType.getTypeOfThis() != null && functionType.getTypeOfThis().isNominalType() && receiver == null) {
+            report(t, n, MUST_BE_CALLED_WITH_THIS_TYPE, childType.toString());
+        }
 
         visitParameterList(t, n, functionType);
         ensureTyped(t, n, functionType.getReturnType());
     } else {
         ensureTyped(t, n);
     }
 
     // TODO: Add something to check for calls of RegExp objects, which is not
     // supported by IE.  Either say something about the return type or warn
     // about the non-portability of the call or both.
 }
\ No newline at end of file
