diff --git a/tmp/804302c7-05c4-432a-8b07-abdf8202d415_buggy.java b/tmp/ee743f46-509b-4e00-b180-c41a49e96969_fixed.java
index d6662c7..b14eb9a 100644
--- a/tmp/804302c7-05c4-432a-8b07-abdf8202d415_buggy.java
+++ b/tmp/ee743f46-509b-4e00-b180-c41a49e96969_fixed.java
@@ -1,23 +1,27 @@
     /**
      * Parse an entry name from a buffer.
      * Parsing stops when a NUL is found
      * or the buffer length is reached.
      *
      * @param buffer The buffer from which to parse.
      * @param offset The offset into the buffer from which to parse.
      * @param length The maximum number of bytes to parse.
      * @return The entry name.
      */
     public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
         int end = offset + length;
+        int nulIndex = offset;
 
-        for (int i = offset; i < end; ++i) {
-            if (buffer[i] == 0) {
-                break;
-            }
-            result.append((char) buffer[i]);
+        // Find the index of the first NUL byte
+        while (nulIndex < end && buffer[nulIndex] != 0) {
+            nulIndex++;
         }
 
-        return result.toString();
+        // Convert the byte array to a string using ISO-8859-1 charset
+        try {
+            return new String(buffer, offset, nulIndex - offset, "ISO-8859-1");
+        } catch (java.io.UnsupportedEncodingException e) {
+            // ISO-8859-1 is a standard charset and should always be supported
+            throw new RuntimeException("ISO-8859-1 encoding not supported", e);
+        }
     }
\ No newline at end of file
