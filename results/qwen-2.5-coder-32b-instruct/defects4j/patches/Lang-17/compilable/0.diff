diff --git a/tmp/dad7ada6-9eb3-4b13-a90d-36e31d8012f6_buggy.java b/tmp/5d1a48e2-ce8f-4588-9322-728a2211adb7_fixed.java
index b86c1ea..1cdcb60 100644
--- a/tmp/dad7ada6-9eb3-4b13-a90d-36e31d8012f6_buggy.java
+++ b/tmp/5d1a48e2-ce8f-4588-9322-728a2211adb7_fixed.java
@@ -1,38 +1,33 @@
 /**
  * Translate an input onto a Writer. This is intentionally final as its algorithm is 
  * tightly coupled with the abstract method of this class. 
  *
  * @param input CharSequence that is being translated
  * @param out Writer to translate the text to
  * @throws IOException if and only if the Writer produces an IOException
  */
 public final void translate(CharSequence input, Writer out) throws IOException {
     if (out == null) {
         throw new IllegalArgumentException("The Writer must not be null");
     }
     if (input == null) {
         return;
     }
     int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+    int len = input.length();
     while (pos < len) {
         int consumed = translate(input, pos, out);
         if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
+            char c = input.charAt(pos);
+            if (Character.isHighSurrogate(c) && pos + 1 < len && Character.isLowSurrogate(input.charAt(pos + 1))) {
+                out.write(Character.toChars(Character.toCodePoint(c, input.charAt(pos + 1))));
+                pos += 2; // Skip the surrogate pair
+            } else {
                 out.write(c);
+                pos++;
             }
-            else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
         } else {
-                        pos++;
+            pos += consumed;
         }
     }
-                pos--;
-            }
-            pos++;
-        }
 }
\ No newline at end of file
