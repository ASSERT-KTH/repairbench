diff --git a/tmp/21798057-5f62-4863-8b64-cf67856d1400_buggy.java b/tmp/154b2171-bb5b-4376-b489-6bc1a6e83cd1_fixed.java
index ef76662..5c59912 100644
--- a/tmp/21798057-5f62-4863-8b64-cf67856d1400_buggy.java
+++ b/tmp/154b2171-bb5b-4376-b489-6bc1a6e83cd1_fixed.java
@@ -1,17 +1,32 @@
 void read(Tokeniser t, CharacterReader r) {
     char c = r.consume();
     switch (c) {
         case '>':
+            if (t.tagPending.attributes.size() > 0 && t.tagPending.attributes.get(t.tagPending.attributes.size() - 1).key.endsWith("/")) {
+                // Remove the trailing slash from the last attribute key
+                String lastKey = t.tagPending.attributes.get(t.tagPending.attributes.size() - 1).key;
+                t.tagPending.attributes.get(t.tagPending.attributes.size() - 1).key = lastKey.substring(0, lastKey.length() - 1);
+            }
             t.tagPending.selfClosing = true;
             t.emitTagPending();
             t.transition(Data);
             break;
+        case '/':
+            char nextChar = r.current();
+            if (nextChar == '>') {
+                t.tagPending.selfClosing = true;
+                t.transition(AfterSelfClosingStartTag);
+            } else {
+                t.tagPending.attributes.add(new Token.Attribute("/"));
+                t.transition(BeforeAttributeName);
+            }
+            break;
         case eof:
             t.eofError(this);
             t.transition(Data);
             break;
         default:
             t.error(this);
             t.transition(BeforeAttributeName);
     }
 }
\ No newline at end of file
