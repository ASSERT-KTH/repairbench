diff --git a/tmp/83329cb2-b684-4c40-84cc-705b628f7da1_buggy.java b/tmp/08466ea2-754b-429b-ba4e-10690bd183bb_fixed.java
index 81a6e8b..07a61a5 100644
--- a/tmp/83329cb2-b684-4c40-84cc-705b628f7da1_buggy.java
+++ b/tmp/08466ea2-754b-429b-ba4e-10690bd183bb_fixed.java
@@ -1,19 +1,35 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
     if (!token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
+    // Check for concatenated short options
+    int pos = 1; // Start checking from the first character after '-'
+    while (pos < token.length())
+    {
+        char optionChar = token.charAt(pos);
+        if (!options.hasShortOption(String.valueOf(optionChar)))
+        {
+            break;
+        }
+        pos++;
+    }
+
+    if (pos > 1)
+    {
+        return true; // Found at least one valid short option in the concatenated sequence
+    }
+
+    // If no concatenated option was found, check for a single short option with an optional value
+    pos = token.indexOf("=");
     String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
     return options.hasShortOption(optName);
-        // check for several concatenated short options
 }
\ No newline at end of file
