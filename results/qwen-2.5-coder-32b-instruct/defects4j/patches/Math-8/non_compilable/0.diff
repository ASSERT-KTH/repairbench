diff --git a/tmp/7efb5499-9731-44de-9365-0d85f4c9cb09_buggy.java b/tmp/c2b4eab0-1667-4d37-85e3-c18b39fd0eb7_fixed.java
index bfa2423..21481e5 100644
--- a/tmp/7efb5499-9731-44de-9365-0d85f4c9cb09_buggy.java
+++ b/tmp/c2b4eab0-1667-4d37-85e3-c18b39fd0eb7_fixed.java
@@ -1,23 +1,24 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
  * @return an array representing the random sample.
  * @throws NotStrictlyPositiveException if {@code sampleSize} is not
  * positive.
  */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                 sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    // Assuming there is a Class<T> variable named sampleType available
+    // If not, you need to pass the Class<T> as a parameter to the method
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(sampleType, sampleSize);
 
     for (int i = 0; i < sampleSize; i++) {
         out[i] = sample();
     }
 
     return out;
-
 }
\ No newline at end of file
