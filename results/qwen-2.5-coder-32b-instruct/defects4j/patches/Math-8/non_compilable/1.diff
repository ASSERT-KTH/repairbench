diff --git a/tmp/ec800d27-724b-4c5f-be5d-35cf52e2f49b_buggy.java b/tmp/543ad127-5f1a-4954-8153-a8341c2f6c53_fixed.java
index bfa2423..cffb748 100644
--- a/tmp/ec800d27-724b-4c5f-be5d-35cf52e2f49b_buggy.java
+++ b/tmp/543ad127-5f1a-4954-8153-a8341c2f6c53_fixed.java
@@ -1,23 +1,23 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
+ * @param clazz the class of type T.
  * @return an array representing the random sample.
  * @throws NotStrictlyPositiveException if {@code sampleSize} is not
  * positive.
  */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+public T[] sample(int sampleSize, Class<T> clazz) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                 sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(clazz, sampleSize);
 
     for (int i = 0; i < sampleSize; i++) {
         out[i] = sample();
     }
 
     return out;
-
 }
\ No newline at end of file
