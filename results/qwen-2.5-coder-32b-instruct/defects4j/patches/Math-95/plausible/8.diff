diff --git a/tmp/3c8dd28e-24f9-4d32-a4c5-bea91941d0d8_buggy.java b/tmp/2fe3b4cf-cd7e-4039-b055-5c4e9b8df005_fixed.java
index 25c13b3..d1b2ad9 100644
--- a/tmp/3c8dd28e-24f9-4d32-a4c5-bea91941d0d8_buggy.java
+++ b/tmp/2fe3b4cf-cd7e-4039-b055-5c4e9b8df005_fixed.java
@@ -1,15 +1,24 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+        double n = getNumeratorDegreesOfFreedom();
+
+        // Use a more appropriate initial guess for the F-distribution
+        if (p < 0.5) {
+            ret = d / (d - 2.0 * p * d);
+        } else {
+            ret = 1.0 / (d / (d - 2.0 * (1 - p) * d));
+        }
+
+        // Ensure the initial guess is within the valid range
+        ret = Math.max(ret, 0.0);
         return ret;
     }
\ No newline at end of file
