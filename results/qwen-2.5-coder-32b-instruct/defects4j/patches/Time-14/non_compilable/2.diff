diff --git a/tmp/d6eaa7de-df31-41b9-8464-f8e6bf6cd0ea_buggy.java b/tmp/0ebadd6d-753d-4ad3-9680-133bbb6947cf_fixed.java
index 10616db..4c53a38 100644
--- a/tmp/d6eaa7de-df31-41b9-8464-f8e6bf6cd0ea_buggy.java
+++ b/tmp/0ebadd6d-753d-4ad3-9680-133bbb6947cf_fixed.java
@@ -1,19 +1,35 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+        
+        // Adjust day of month if necessary
+        int dayOfMonthIndex = partial.indexOf(DateTimeFieldType.dayOfMonth());
+        if (dayOfMonthIndex != -1) {
+            int yearIndex = partial.indexOf(DateTimeFieldType.year());
+            int monthIndex = partial.indexOf(DateTimeFieldType.monthOfYear());
+            int year = yearIndex != -1 ? newValues[yearIndex] : 0;
+            int month = monthIndex != -1 ? newValues[monthIndex] : 0;
+            int dayOfMonth = newValues[dayOfMonthIndex];
+            
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);
+            if (dayOfMonth > maxDay) {
+                newValues[dayOfMonthIndex] = maxDay;
+            }
+        }
+        
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
