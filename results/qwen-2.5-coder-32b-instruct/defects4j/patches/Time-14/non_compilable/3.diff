diff --git a/tmp/df38fdf4-13a2-4ee9-8fe0-363337a8427c_buggy.java b/tmp/d323275d-ea13-49d5-a494-066d3e8f956c_fixed.java
index 10616db..748e870 100644
--- a/tmp/df38fdf4-13a2-4ee9-8fe0-363337a8427c_buggy.java
+++ b/tmp/d323275d-ea13-49d5-a494-066d3e8f956c_fixed.java
@@ -1,19 +1,29 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
+
+        // Adjust dayOfMonth if it's out of range for the new month
+        int newYear = iChronology.year().getFrom(instant);
+        int newMonth = iChronology.monthOfYear().getFrom(instant);
+        int oldDayOfMonth = partial.getFieldType(1).getField(iChronology).get(instant); // assuming dayOfMonth is at index 1
+        int maxDayOfMonth = iChronology.dayOfMonth().getMaximumValue(newYear, newMonth);
+
+        int newDayOfMonth = Math.min(oldDayOfMonth, maxDayOfMonth);
+
+        instant = iChronology.dayOfMonth().set(instant, newDayOfMonth);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
