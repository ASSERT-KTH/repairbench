diff --git a/tmp/741ab054-8323-4301-a4d9-bcbe2b983044_buggy.java b/tmp/3c481302-bba3-42d8-9853-2b262ded17f4_fixed.java
index 10616db..c21c479 100644
--- a/tmp/741ab054-8323-4301-a4d9-bcbe2b983044_buggy.java
+++ b/tmp/3c481302-bba3-42d8-9853-2b262ded17f4_fixed.java
@@ -1,19 +1,30 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        
+        // Adjust the day of the month if it is invalid for the resulting month
+        int year = iChronology.year().get(instant);
+        int month = iChronology.monthOfYear().get(instant);
+        int day = iChronology.dayOfMonth().get(instant);
+        int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);
+        
+        if (day > maxDay) {
+            day = maxDay;
+        }
+        
+        return iChronology.get(partial, iChronology.dayOfMonth().set(instant, day));
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
