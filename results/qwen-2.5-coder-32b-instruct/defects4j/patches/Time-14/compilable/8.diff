diff --git a/tmp/4dcffa9f-819d-4053-8190-6bff97d22b6c_buggy.java b/tmp/05ac6b43-3102-45bd-883d-cc4f9c546bab_fixed.java
index 10616db..85c49b1 100644
--- a/tmp/4dcffa9f-819d-4053-8190-6bff97d22b6c_buggy.java
+++ b/tmp/05ac6b43-3102-45bd-883d-cc4f9c546bab_fixed.java
@@ -1,19 +1,33 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+        
+        // Adjust day of month if necessary
+        if (partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())) {
+            int month = result[0];
+            int day = result[1];
+            if (!iChronology.year().isLeap(instant)) {
+                int maxDay = iChronology.dayOfMonth().getMaximumValue(month);
+                if (day > maxDay) {
+                    result[1] = maxDay;
+                }
+            }
+        }
+        
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
