diff --git a/tmp/3f8c8263-84a5-45ef-acdf-59fc4c8ff158_buggy.java b/tmp/1f932a3d-84a1-42f2-9f71-7c587856cf9f_fixed.java
index 9a3a9db..d1cb251 100644
--- a/tmp/3f8c8263-84a5-45ef-acdf-59fc4c8ff158_buggy.java
+++ b/tmp/1f932a3d-84a1-42f2-9f71-7c587856cf9f_fixed.java
@@ -1,27 +1,36 @@
 /**
  * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
  * found, skips.
  *
  * @param endTag tag to close
  */
 private void popStackToClose(Token.EndTag endTag) {
     String elName = endTag.name();
     Element firstFound = null;
 
     for (int pos = stack.size() - 1; pos >= 0; pos--) {
         Element next = stack.get(pos);
-            if (next.nodeName().equals(elName)) {
+        if (next.nodeName().equalsIgnoreCase(elName)) { // Use equalsIgnoreCase for case-insensitive comparison
             firstFound = next;
             break;
         }
     }
     if (firstFound == null)
         return; // not found, skip
 
+    // Collect indices to remove
+    List<Integer> indicesToRemove = new ArrayList<>();
     for (int pos = stack.size() - 1; pos >= 0; pos--) {
         Element next = stack.get(pos);
-            stack.remove(pos);
-            if (next == firstFound)
+        if (next == firstFound) {
+            indicesToRemove.add(pos);
             break;
         }
+        indicesToRemove.add(pos);
+    }
+
+    // Remove elements from the stack
+    for (int index : indicesToRemove) {
+        stack.remove(index);
+    }
 }
\ No newline at end of file
