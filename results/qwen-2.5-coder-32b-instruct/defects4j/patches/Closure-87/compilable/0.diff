diff --git a/tmp/0969dfc1-54e5-4494-835a-479e030397d4_buggy.java b/tmp/185749df-eecd-477c-83ff-61da9ba7b29d_fixed.java
index 19fd63e..56b322f 100644
--- a/tmp/0969dfc1-54e5-4494-835a-479e030397d4_buggy.java
+++ b/tmp/185749df-eecd-477c-83ff-61da9ba7b29d_fixed.java
@@ -1,24 +1,25 @@
 /**
  * @return Whether the node is a block with a single statement that is
-   *     an expression.
+ *     an expression, excluding EXPR_RESULT nodes to avoid IE bug.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
       // IE has a bug where event handlers behave differently when
       // their return value is used vs. when their return value is in
       // an EXPR_RESULT. It's pretty freaking weird. See:
       // http://code.google.com/p/closure-compiler/issues/detail?id=291
       // We try to detect this case, and not fold EXPR_RESULTs
       // into other expressions.
 
       // We only have to worry about methods with an implicit 'this'
       // param, or this doesn't happen.
 
-          return NodeUtil.isExpressionNode(maybeExpr);
+      // Exclude EXPR_RESULT nodes to avoid the IE bug
+      return maybeExpr.getType() != Token.EXPR_RESULT && NodeUtil.isExpressionNode(maybeExpr);
     }
   }
 
   return false;
 }
\ No newline at end of file
