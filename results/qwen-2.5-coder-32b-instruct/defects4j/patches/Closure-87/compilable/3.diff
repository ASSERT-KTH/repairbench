diff --git a/tmp/481eba7c-9f61-4050-905f-5e1e240cd85a_buggy.java b/tmp/b79fd30b-df34-4be7-9b26-30ea86418b38_fixed.java
index 19fd63e..3d506ae 100644
--- a/tmp/481eba7c-9f61-4050-905f-5e1e240cd85a_buggy.java
+++ b/tmp/b79fd30b-df34-4be7-9b26-30ea86418b38_fixed.java
@@ -1,24 +1,28 @@
   /**
    * @return Whether the node is a block with a single statement that is
-   *     an expression.
+   *     an expression, excluding EXPR_RESULT nodes to avoid a specific
+   *     IE bug related to event handlers.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
 
+        // Avoid folding EXPR_RESULT nodes
+        if (maybeExpr.getType() != Token.EXPR_RESULT) {
           return NodeUtil.isExpressionNode(maybeExpr);
         }
       }
+    }
 
     return false;
   }
\ No newline at end of file
