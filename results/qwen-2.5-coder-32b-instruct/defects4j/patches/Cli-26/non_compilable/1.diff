diff --git a/tmp/6bbd70d3-347b-4709-82a3-9e744ad3971b_buggy.java b/tmp/22bf8aa1-b9f2-4032-8b55-645f7c7c2673_fixed.java
index cc69d41..b832fc2 100644
--- a/tmp/6bbd70d3-347b-4709-82a3-9e744ad3971b_buggy.java
+++ b/tmp/22bf8aa1-b9f2-4032-8b55-645f7c7c2673_fixed.java
@@ -1,29 +1,63 @@
 /**
  * Create an Option using the current settings and with
  * the specified Option <code>char</code>.
  *
-     * @param opt the <code>java.lang.String</code> representation
+ * @param opt the <code>char</code> representation
  * of the Option
  * @return the Option instance
  * @throws IllegalArgumentException if <code>opt</code> is not
  * a valid character.  See Option.
  */
-    public static Option create(String opt) throws IllegalArgumentException
-    {
+public static Option create(char opt) throws IllegalArgumentException {
+    // create the option
+    Option option = new Option(String.valueOf(opt), description);
+
+    // set the option properties
+    option.setLongOpt(longopt);
+    option.setRequired(required);
+    option.setOptionalArg(optionalArg);
+    option.setArgs(numberOfArgs);
+    option.setType(type);
+    option.setValueSeparator(valuesep);
+    option.setArgName(argName);
+
+    // reset the OptionBuilder properties
+    reset();
+
+    // return the Option instance
+    return option;
+}
+
+/**
+ * Create an Option using the current settings and with
+ * the specified Option <code>String</code>.
+ *
+ * @param opt the <code>String</code> representation
+ * of the Option
+ * @return the Option instance
+ * @throws IllegalArgumentException if <code>opt</code> is not
+ * a valid single character.  See Option.
+ */
+public static Option create(String opt) throws IllegalArgumentException {
+    if (opt == null || opt.length() != 1) {
+        throw new IllegalArgumentException("opt must be a single character");
+    }
+    
     // create the option
     Option option = new Option(opt, description);
 
     // set the option properties
     option.setLongOpt(longopt);
     option.setRequired(required);
     option.setOptionalArg(optionalArg);
     option.setArgs(numberOfArgs);
     option.setType(type);
     option.setValueSeparator(valuesep);
     option.setArgName(argName);
+
     // reset the OptionBuilder properties
-            OptionBuilder.reset();
+    reset();
 
     // return the Option instance
     return option;
 }
\ No newline at end of file
