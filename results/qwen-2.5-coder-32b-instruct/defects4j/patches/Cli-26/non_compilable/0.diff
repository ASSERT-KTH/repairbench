diff --git a/tmp/89693cb5-495b-4cdb-ab2f-6588a82f8c51_buggy.java b/tmp/12a33702-96cf-4937-ae30-51d7d4b75da5_fixed.java
index cc69d41..a066032 100644
--- a/tmp/89693cb5-495b-4cdb-ab2f-6588a82f8c51_buggy.java
+++ b/tmp/12a33702-96cf-4937-ae30-51d7d4b75da5_fixed.java
@@ -1,29 +1,49 @@
 /**
  * Create an Option using the current settings and with
  * the specified Option <code>char</code>.
  *
  * @param opt the <code>java.lang.String</code> representation
  * of the Option
  * @return the Option instance
  * @throws IllegalArgumentException if <code>opt</code> is not
  * a valid character.  See Option.
  */
 public static Option create(String opt) throws IllegalArgumentException
 {
-            // create the option
+    // Validate the input
+    if (opt == null || opt.length() != 1) {
+        throw new IllegalArgumentException("opt must be a single character");
+    }
+
+    // Create the option
     Option option = new Option(opt, description);
 
-            // set the option properties
+    // Set the option properties
     option.setLongOpt(longopt);
     option.setRequired(required);
     option.setOptionalArg(optionalArg);
     option.setArgs(numberOfArgs);
     option.setType(type);
     option.setValueSeparator(valuesep);
     option.setArgName(argName);
-            // reset the OptionBuilder properties
-            OptionBuilder.reset();
 
-        // return the Option instance
+    // Reset the OptionBuilder properties
+    reset();
+
+    // Return the Option instance
     return option;
 }
+
+/**
+ * Reset the OptionBuilder properties to their default values.
+ */
+private static void reset() {
+    description = null;
+    longopt = null;
+    required = false;
+    optionalArg = false;
+    numberOfArgs = Option.UNINITIALIZED;
+    type = null;
+    valuesep = '\0';
+    argName = "ARG";
+}
\ No newline at end of file
