diff --git a/tmp/2f3fd2c9-cd49-4140-a750-ba91b7a5af78_buggy.java b/tmp/e802555d-9153-40c7-9cf7-e3b527626649_fixed.java
index 845704e..2d3a2a1 100644
--- a/tmp/2f3fd2c9-cd49-4140-a750-ba91b7a5af78_buggy.java
+++ b/tmp/e802555d-9153-40c7-9cf7-e3b527626649_fixed.java
@@ -1,21 +1,9 @@
-    /**
-     * Turns out that these are expensive enough to create so that caching
-     * does make sense.
-     *<p>
-     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
-     * JAXB Annotations (failing a test).
-     * It is also possible that some other settings could make deserializers
-     * un-cacheable; but on the other hand, caching can make a big positive
-     * difference with performance... so it's a hard choice.
-     * 
-     * @since 2.4.4
-     */
 @Override
 public boolean isCachable() {
     /* As per [databind#735], existence of value or key deserializer (only passed
      * if annotated to use non-standard one) should also prevent caching.
      */
     return (_valueTypeDeserializer == null)
-                && (_ignorableProperties == null);
+            && (_ignorableProperties == null)
+            && (_valueDeserializer == null); // Add check for custom value deserializer
 }
\ No newline at end of file
