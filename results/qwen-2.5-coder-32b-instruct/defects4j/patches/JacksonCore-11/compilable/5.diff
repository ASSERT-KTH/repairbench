diff --git a/tmp/12b13185-a49b-4af9-9550-a6cc9858e1e5_buggy.java b/tmp/30229597-d258-4d41-b7bf-f1f0db984935_fixed.java
index 29d025a..795c0fc 100644
--- a/tmp/12b13185-a49b-4af9-9550-a6cc9858e1e5_buggy.java
+++ b/tmp/30229597-d258-4d41-b7bf-f1f0db984935_fixed.java
@@ -1,13 +1,38 @@
 private void _verifySharing()
 {
     if (_hashShared) {
+        // Ensure we have our own copy of the hash area and names
         _hashArea = Arrays.copyOf(_hashArea, _hashArea.length);
         _names = Arrays.copyOf(_names, _names.length);
         _hashShared = false;
         // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure
         //    we rehash as needed, as need-rehash flag is not copied from parent
     }
     if (_needRehash) {
-            rehash();
+        // Ensure we rehash safely
+        rehashSafely();
     }
 }
+
+private void rehashSafely() {
+    int oldSize = _hashArea.length;
+    int newSize = oldSize * 2; // Example of doubling the size, adjust as needed
+    int[] newHashArea = new int[newSize];
+    String[] newNames = new String[newSize];
+    
+    for (int i = 0; i < oldSize; i++) {
+        int hash = _hashArea[i];
+        if (hash != 0) {
+            int index = hash & (newSize - 1);
+            while (newHashArea[index] != 0) {
+                index = (index + 1) & (newSize - 1); // Linear probing
+            }
+            newHashArea[index] = hash;
+            newNames[index] = _names[i];
+        }
+    }
+    
+    _hashArea = newHashArea;
+    _names = newNames;
+    _needRehash = false;
+}
\ No newline at end of file
