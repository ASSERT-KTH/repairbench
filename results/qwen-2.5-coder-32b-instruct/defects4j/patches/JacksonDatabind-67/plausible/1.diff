diff --git a/tmp/67543202-50d2-4a48-a8ec-6e4a63aa3c68_buggy.java b/tmp/22330cb1-5d51-40d4-aa36-327e65916fff_fixed.java
index bc80637..6210947 100644
--- a/tmp/67543202-50d2-4a48-a8ec-6e4a63aa3c68_buggy.java
+++ b/tmp/22330cb1-5d51-40d4-aa36-327e65916fff_fixed.java
@@ -1,33 +1,41 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // Check if we have a custom KeyDeserializer from deserializer modifiers
+    if (deser == null && _factoryConfig.hasDeserializerModifiers()) {
+        BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+            if (deser != null) {
+                break;
+            }
+        }
+    }
+    // If no custom deserializer was found, use the default logic
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+    // Optionally, further modify the deserializer if needed
+    if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
             deser = mod.modifyKeyDeserializer(config, type, deser);
         }
     }
-        }
     return deser;
 }
\ No newline at end of file
