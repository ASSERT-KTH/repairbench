diff --git a/tmp/376d55c8-2fa4-4f88-80e2-ffa002ba602e_buggy.java b/tmp/1c8a9edf-51ea-4959-ae15-59f826aa2428_fixed.java
index bc80637..669eada 100644
--- a/tmp/376d55c8-2fa4-4f88-80e2-ffa002ba602e_buggy.java
+++ b/tmp/1c8a9edf-51ea-4959-ae15-59f826aa2428_fixed.java
@@ -1,33 +1,43 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // Ensure the custom deserializer is used for enum types
     if (deser == null) {
         if (type.isEnumType()) {
+            BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
+            for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+                deser = mod.modifyKeyDeserializer(config, type, null);
+                if (deser != null) {
+                    break;
+                }
+            }
+            if (deser == null) {
                 return _createEnumKeyDeserializer(ctxt, type);
             }
+        } else {
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
+    }
     // and then post-processing
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
     return deser;
 }
\ No newline at end of file
