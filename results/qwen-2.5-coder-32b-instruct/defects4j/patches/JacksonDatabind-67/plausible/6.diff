diff --git a/tmp/8e436e90-393e-49ef-8b3d-2dda9d5b80bc_buggy.java b/tmp/dab4aa2a-1136-40cc-b995-3587f342b16f_fixed.java
index bc80637..21e04c4 100644
--- a/tmp/8e436e90-393e-49ef-8b3d-2dda9d5b80bc_buggy.java
+++ b/tmp/dab4aa2a-1136-40cc-b995-3587f342b16f_fixed.java
@@ -1,33 +1,45 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // Check for enum type and use custom deserializer if available
+    if (deser == null && type.isEnumType()) {
+        BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
+        if (_factoryConfig.hasDeserializerModifiers()) {
+            for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+                deser = mod.modifyKeyDeserializer(config, type, StdKeyDeserializers.findStringBasedKeyDeserializer(config, type));
+                if (deser != null) {
+                    break;
+                }
+            }
+        }
         if (deser == null) {
-            if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
+            deser = _createEnumKeyDeserializer(ctxt, type);
         }
+    }
+    // Fallback to standard deserializer if custom one is not found
+    if (deser == null) {
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
-        // and then post-processing
+    // Post-processing
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
     return deser;
 }
\ No newline at end of file
