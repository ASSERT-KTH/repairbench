diff --git a/tmp/6289f181-b8cf-415c-abeb-27cb0ac6aa9d_buggy.java b/tmp/8c0f1104-824b-4628-9aab-4dc732977ada_fixed.java
index bc80637..2122831 100644
--- a/tmp/6289f181-b8cf-415c-abeb-27cb0ac6aa9d_buggy.java
+++ b/tmp/8c0f1104-824b-4628-9aab-4dc732977ada_fixed.java
@@ -1,33 +1,38 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
     // and then post-processing
-        if (deser != null) {
     if (_factoryConfig.hasDeserializerModifiers()) {
+        BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
-                    deser = mod.modifyKeyDeserializer(config, type, deser);
+            if (type.isEnumType()) {
+                // Ensure we apply the custom KeyDeserializer for enums
+                KeyDeserializer customKeyDeserializer = mod.modifyKeyDeserializer(config, type, deser);
+                if (customKeyDeserializer != null) {
+                    return customKeyDeserializer;
+                }
             }
         }
     }
     return deser;
 }
\ No newline at end of file
