diff --git a/tmp/f5bad946-42a6-48b5-b9ae-b1fea33b9759_buggy.java b/tmp/116d6c34-1d1c-4b5d-bc46-334028edf1f3_fixed.java
index ec709bd..eeb5ac2 100644
--- a/tmp/f5bad946-42a6-48b5-b9ae-b1fea33b9759_buggy.java
+++ b/tmp/116d6c34-1d1c-4b5d-bc46-334028edf1f3_fixed.java
@@ -1,8 +1,36 @@
 @Override
-    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
-    {
-        // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit
-        //    special unfortunately
-            p.skipChildren();
-        return null;
+public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    CallRecord callRecord = new CallRecord();
+    while (p.nextToken() != JsonToken.END_OBJECT) {
+        String fieldName = p.getCurrentName();
+        p.nextToken();
+        switch (fieldName) {
+            case "version":
+                callRecord.version = p.getDoubleValue();
+                break;
+            case "application":
+                callRecord.application = p.getText();
+                break;
+            case "item":
+                try {
+                    callRecord.item = p.readValueAs(Item.class);
+                } catch (MismatchedInputException e) {
+                    // Handle unknown type ID for item
+                    callRecord.item = null;
+                }
+                break;
+            case "item2":
+                try {
+                    callRecord.item2 = p.readValueAs(Item.class);
+                } catch (MismatchedInputException e) {
+                    // Handle unknown type ID for item2
+                    callRecord.item2 = null;
+                }
+                break;
+            default:
+                // Ignore unknown properties
+                break;
+        }
+    }
+    return callRecord;
 }
\ No newline at end of file
