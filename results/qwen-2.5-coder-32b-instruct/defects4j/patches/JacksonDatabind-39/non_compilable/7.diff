diff --git a/tmp/ec2ecb32-01b9-48ba-82db-424b3cecb17f_buggy.java b/tmp/fee47f4f-30eb-42da-8f63-f0c0c0ed7e0d_fixed.java
index ec709bd..1399ea4 100644
--- a/tmp/ec2ecb32-01b9-48ba-82db-424b3cecb17f_buggy.java
+++ b/tmp/fee47f4f-30eb-42da-8f63-f0c0c0ed7e0d_fixed.java
@@ -1,8 +1,36 @@
 @Override
-    public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
-    {
-        // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit
-        //    special unfortunately
+public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    // Create an instance of the target class
+    CallRecord callRecord = new CallRecord();
+    
+    // Use the JsonParser to read the fields
+    while (p.nextToken() != JsonToken.END_OBJECT) {
+        String fieldName = p.getCurrentName();
+        p.nextToken(); // Move to the value
+        
+        if ("version".equals(fieldName)) {
+            callRecord.version = p.getDoubleValue();
+        } else if ("application".equals(fieldName)) {
+            callRecord.application = p.getText();
+        } else if ("item".equals(fieldName)) {
+            try {
+                callRecord.item = p.readValueAs(Item.class);
+            } catch (MismatchedInputException e) {
+                // Handle the case where the type is unknown and FAIL_ON_INVALID_SUBTYPE is disabled
+                callRecord.item = null;
+            }
+        } else if ("item2".equals(fieldName)) {
+            try {
+                callRecord.item2 = p.readValueAs(Item.class);
+            } catch (MismatchedInputException e) {
+                // Handle the case where the type is unknown and FAIL_ON_INVALID_SUBTYPE is disabled
+                callRecord.item2 = null;
+            }
+        } else {
+            // Skip unrecognized fields
             p.skipChildren();
-        return null;
+        }
+    }
+    
+    return callRecord;
 }
\ No newline at end of file
