diff --git a/tmp/204f7b58-f54f-4250-a250-60d037efe574_buggy.java b/tmp/b685026d-a9e4-4510-9a6d-6e62bafbdebc_fixed.java
index fa6828a..112fe8e 100644
--- a/tmp/204f7b58-f54f-4250-a250-60d037efe574_buggy.java
+++ b/tmp/b685026d-a9e4-4510-9a6d-6e62bafbdebc_fixed.java
@@ -1,5 +1,23 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+        // Find the best matching mock for the field
+        Object bestMatch = null;
+        for (Object mock : mocks) {
+            if (field.getType().isInstance(mock)) {
+                if (bestMatch == null || field.getType().equals(mock.getClass())) {
+                    bestMatch = mock;
+                }
+            }
+        }
+        
+        // Inject the best matching mock into the field
+        if (bestMatch != null) {
+            field.setAccessible(true);
+            try {
+                field.set(fieldInstance, bestMatch);
+            } catch (IllegalAccessException e) {
+                throw new RuntimeException("Failed to inject mock into field: " + field.getName(), e);
+            }
+        }
     }
 }
\ No newline at end of file
