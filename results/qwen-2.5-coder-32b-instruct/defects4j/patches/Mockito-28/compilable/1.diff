diff --git a/tmp/de68864e-220d-47da-8f2c-e1f70e887a11_buggy.java b/tmp/befc1c45-ee77-4f9b-bd1a-23bbaf270dcd_fixed.java
index fa6828a..7acca2a 100644
--- a/tmp/de68864e-220d-47da-8f2c-e1f70e887a11_buggy.java
+++ b/tmp/befc1c45-ee77-4f9b-bd1a-23bbaf270dcd_fixed.java
@@ -1,5 +1,24 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+        Object bestMatch = null;
+        for (Object mock : mocks) {
+            if (field.getType().isInstance(mock)) {
+                if (bestMatch == null || field.getType().isAssignableFrom(bestMatch.getClass())) {
+                    bestMatch = mock;
+                }
+            }
+        }
+        if (bestMatch != null) {
+            injectField(field, fieldInstance, bestMatch);
+        }
+    }
+}
+
+private void injectField(Field field, Object target, Object value) {
+    try {
+        field.setAccessible(true);
+        field.set(target, value);
+    } catch (IllegalAccessException e) {
+        throw new RuntimeException("Failed to inject field " + field.getName(), e);
     }
 }
\ No newline at end of file
