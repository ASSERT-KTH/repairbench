diff --git a/tmp/c464fa7c-cf8a-4259-96ba-6fda5b432ac9_buggy.java b/tmp/186ac319-552a-407b-b508-e04b5455b670_fixed.java
index e69de29..d292bcc 100644
--- a/tmp/c464fa7c-cf8a-4259-96ba-6fda5b432ac9_buggy.java
+++ b/tmp/186ac319-552a-407b-b508-e04b5455b670_fixed.java
@@ -0,0 +1,54 @@
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
+public class MultiValueMap implements Serializable {
+    private Map<Object, ArrayList> map;
+    private Class<?> valueCollectionClass;
+
+    private static final long serialVersionUID = 1L;
+
+    private MultiValueMap(Map<Object, ArrayList> map, Class<?> valueCollectionClass) {
+        this.map = map;
+        this.valueCollectionClass = valueCollectionClass;
+    }
+
+    public static MultiValueMap multiValueMap(Map<Object, ArrayList> map, Class<?> valueCollectionClass) {
+        return new MultiValueMap(map, valueCollectionClass);
+    }
+
+    private void writeObject(ObjectOutputStream out) throws IOException {
+        out.defaultWriteObject();
+    }
+
+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject();
+        if (!valueCollectionClass.equals(ArrayList.class)) {
+            throw new UnsupportedOperationException("unsafe clazz accepted when de-serializing MultiValueMap");
+        }
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClass() != o.getClass()) return false;
+
+        MultiValueMap that = (MultiValueMap) o;
+
+        if (!map.equals(that.map)) return false;
+        return valueCollectionClass.equals(that.valueCollectionClass);
+    }
+
+    @Override
+    public int hashCode() {
+        int result = map.hashCode();
+        result = 31 * result + valueCollectionClass.hashCode();
+        return result;
+    }
+
+    // Additional methods for MultiValueMap would be here
+}
\ No newline at end of file
