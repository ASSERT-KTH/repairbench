diff --git a/tmp/47320ba8-44b2-4eb9-bc85-25cb03d77a73_buggy.java b/tmp/c6d02dd7-3052-4808-b1a8-12cb8ee54916_fixed.java
index e69de29..1b84457 100644
--- a/tmp/47320ba8-44b2-4eb9-bc85-25cb03d77a73_buggy.java
+++ b/tmp/c6d02dd7-3052-4808-b1a8-12cb8ee54916_fixed.java
@@ -0,0 +1,36 @@
+import java.io.*;
+import java.util.*;
+
+public class MultiValueMap<K, V> implements Serializable {
+    private Map<K, List<V>> map;
+    private Class<? extends List> listClass;
+
+    private MultiValueMap(Map<K, List<V>> map, Class<? extends List> listClass) {
+        this.map = map;
+        this.listClass = listClass;
+    }
+
+    public static <K, V> MultiValueMap<K, V> multiValueMap(Map<K, List<V>> map, Class<? extends List> listClass) {
+        return new MultiValueMap<>(map, listClass);
+    }
+
+    private void writeObject(ObjectOutputStream out) throws IOException {
+        out.defaultWriteObject();
+    }
+
+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject();
+        // Check if the listClass is safe
+        if (!isSafeClass(listClass)) {
+            throw new UnsupportedOperationException("unsafe clazz accepted when de-serializing MultiValueMap");
+        }
+    }
+
+    private boolean isSafeClass(Class<?> clazz) {
+        // Define safe classes here, for example, only ArrayList is allowed
+        return clazz.equals(ArrayList.class);
+    }
+
+    // Other methods for MultiValueMap
+    // ...
+}
\ No newline at end of file
