diff --git a/tmp/fecaa508-2459-4fe9-ae79-9834030ad8b2_buggy.java b/tmp/c0a9a974-6b9d-4006-8d69-18b19e5d9d81_fixed.java
index b5d94e0..d374d8c 100644
--- a/tmp/fecaa508-2459-4fe9-ae79-9834030ad8b2_buggy.java
+++ b/tmp/c0a9a974-6b9d-4006-8d69-18b19e5d9d81_fixed.java
@@ -1,26 +1,32 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
     do {
+        // Traverse all children of the current node
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
             Node next = c.getNext();
             c = next;
         }
 
+        // Visit the current node
         visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+        // Ensure that we do not get stuck in an infinite loop
+        Preconditions.checkState(visits < 10000, "too many iterations");
+
+        // Check if the node needs to be retraversed
     } while (shouldRetraverse(node));
 
+    // Exit the node after all possible revisits
     exitNode(node);
 }
\ No newline at end of file
