diff --git a/tmp/6f66ec65-8f9a-4f9d-9253-61744cb50eb4_buggy.java b/tmp/64eb21c0-9fc1-4a53-a87b-91aa8d41ce28_fixed.java
index 735a993..5081b4b 100644
--- a/tmp/6f66ec65-8f9a-4f9d-9253-61744cb50eb4_buggy.java
+++ b/tmp/64eb21c0-9fc1-4a53-a87b-91aa8d41ce28_fixed.java
@@ -1,29 +1,29 @@
     /**
      * Appends an object to the builder padding on the right to a fixed length.
      * The <code>toString</code> of the object is used.
      * If the object is larger than the length, the right hand side is lost.
      * If the object is null, null text value is used.
      * 
      * @param obj  the object to append, null uses null text
      * @param width  the fixed field width, zero or negative has no effect
      * @param padChar  the pad character to use
      * @return this, to enable chaining
      */
     public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
         if (width > 0) {
             ensureCapacity(size + width);
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
-            if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
-            } else {
+            int lengthToAppend = Math.min(strLen, width);
+            str.getChars(0, lengthToAppend, buffer, size);
+            size += lengthToAppend;
+            if (strLen < width) {
                 int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
                 for (int i = 0; i < padLen; i++) {
-                    buffer[size + strLen + i] = padChar;
+                    buffer[size + i] = padChar;
                 }
+                size += padLen;
             }
-            size += width;
         }
         return this;
     }
\ No newline at end of file
