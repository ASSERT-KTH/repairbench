diff --git a/tmp/275c987f-91c0-4003-afe0-6ed9bdb28fe0_buggy.java b/tmp/1e6a81b3-f5f5-427b-940d-df0308ed5eb8_fixed.java
index c84c989..5629a30 100644
--- a/tmp/275c987f-91c0-4003-afe0-6ed9bdb28fe0_buggy.java
+++ b/tmp/1e6a81b3-f5f5-427b-940d-df0308ed5eb8_fixed.java
@@ -1,27 +1,37 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Read date and time
+    long dateTime = buf.readUnsignedIntLE();
+    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+    calendar.set(Calendar.YEAR, 2000 + (int) (dateTime >> 26));
+    calendar.set(Calendar.MONTH, ((int) (dateTime >> 22) & 0x0f) - 1); // 0-based month
+    calendar.set(Calendar.DAY_OF_MONTH, (int) (dateTime >> 17) & 0x1f);
+    calendar.set(Calendar.HOUR_OF_DAY, (int) (dateTime >> 12) & 0x1f);
+    calendar.set(Calendar.MINUTE, (int) (dateTime >> 6) & 0x3f);
+    calendar.set(Calendar.SECOND, (int) dateTime & 0x3f);
+    position.setTime(calendar.getTime());
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
