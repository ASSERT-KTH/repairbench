diff --git a/tmp/e5f3ad2c-707d-4eeb-95e0-e90959c2c9b5_buggy.java b/tmp/11c3aa78-aaeb-48d6-bee1-51baa6515b7a_fixed.java
index 23f078d..5899aff 100644
--- a/tmp/e5f3ad2c-707d-4eeb-95e0-e90959c2c9b5_buggy.java
+++ b/tmp/11c3aa78-aaeb-48d6-bee1-51baa6515b7a_fixed.java
@@ -1,14 +1,17 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+        int i = 0;
+        while (i < s.length()) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+                // Handle supplementary characters correctly
+                String cp = new String(Character.toChars(c));
+                sb.append(URLEncoder.encode(cp, UTF_8.name()));
             } else {
                 sb.append((char) c);
             }
+            i += Character.charCount(c); // Move past the entire code point
         }
     }
\ No newline at end of file
