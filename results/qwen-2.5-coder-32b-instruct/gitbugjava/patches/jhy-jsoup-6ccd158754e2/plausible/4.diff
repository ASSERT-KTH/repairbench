diff --git a/tmp/abd21aba-44db-47a0-b4d1-c33faa9d0043_buggy.java b/tmp/4d1533c1-9157-495f-a47a-b201bbca584b_fixed.java
index 23f078d..056e571 100644
--- a/tmp/abd21aba-44db-47a0-b4d1-c33faa9d0043_buggy.java
+++ b/tmp/4d1533c1-9157-495f-a47a-b201bbca584b_fixed.java
@@ -1,14 +1,17 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
+            i++;
         } else if (c > 127) { // out of ascii range
             sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
             // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            i += Character.charCount(c);
         } else {
             sb.append((char) c);
+            i++;
         }
     }
 }
\ No newline at end of file
