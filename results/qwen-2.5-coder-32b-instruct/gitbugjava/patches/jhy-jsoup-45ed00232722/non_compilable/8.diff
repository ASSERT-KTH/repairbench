diff --git a/tmp/6578c31f-2f7d-4c26-ad47-0b623fa30aaf_buggy.java b/tmp/2140a958-35a7-4089-9a43-1e616c47192c_fixed.java
index 855afa5..dbe5e83 100644
--- a/tmp/6578c31f-2f7d-4c26-ad47-0b623fa30aaf_buggy.java
+++ b/tmp/2140a958-35a7-4089-9a43-1e616c47192c_fixed.java
@@ -1,13 +1,21 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
         //  odd way to encode urls, but it works!
         String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        // Use URLEncoder to encode the entire URL string
+        String encodedUrlS = URLEncoder.encode(urlS, "UTF-8").replace("+", "%20");
+        // Split the URL into components and encode each component separately
+        URI uri = new URI(u.getProtocol(), 
+                          u.getUserInfo(), 
+                          u.getHost(), 
+                          u.getPort(), 
+                          URLEncoder.encode(u.getPath(), "UTF-8").replace("+", "%20"), 
+                          URLEncoder.encode(u.getQuery(), "UTF-8").replace("+", "%20"), 
+                          URLEncoder.encode(u.getRef(), "UTF-8").replace("+", "%20"));
         return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+    } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
