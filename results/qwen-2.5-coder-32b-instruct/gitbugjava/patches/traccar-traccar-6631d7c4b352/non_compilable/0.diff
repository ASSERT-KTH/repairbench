diff --git a/tmp/d5f26dde-4486-4fbd-8dbe-69739d40db6a_buggy.java b/tmp/f93e5c8b-ab0f-4e45-b8e3-3fcb598dbaaa_fixed.java
index d87dd79..54d1278 100644
--- a/tmp/d5f26dde-4486-4fbd-8dbe-69739d40db6a_buggy.java
+++ b/tmp/f93e5c8b-ab0f-4e45-b8e3-3fcb598dbaaa_fixed.java
@@ -1,47 +1,53 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    int startIndex = -1;
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
+        if (buf.getByte(i) == '[') {
+            startIndex = i;
+        }
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
-        if (endIndex > 0) {
+    if (startIndex != -1 && endIndex != -1) {
         ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
+        for (int i = startIndex; i < endIndex; i++) {
+            byte b1 = buf.getByte(i);
             if (b1 == '}') {
-                    byte b2 = buf.readByte();
+                byte b2 = buf.getByte(i + 1);
                 switch (b2) {
                     case 0x01:
                         frame.writeByte('}');
                         break;
                     case 0x02:
                         frame.writeByte('[');
                         break;
                     case 0x03:
                         frame.writeByte(']');
                         break;
                     case 0x04:
                         frame.writeByte(',');
                         break;
                     case 0x05:
                         frame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                "unexpected byte at %d: 0x%02x", buf.readerIndex() + i - startIndex, b2));
                 }
+                i++; // Skip the next byte as it is part of the escape sequence
             } else {
                 frame.writeByte(b1);
             }
         }
+        buf.readerIndex(endIndex); // Move the reader index forward to the next frame
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
