diff --git a/tmp/85ddbda3-8c32-475d-8080-44d0e43db8c2_buggy.java b/tmp/3138561a-1b48-4030-9924-5f765ee337a4_fixed.java
index 862c60c..1b0135c 100644
--- a/tmp/85ddbda3-8c32-475d-8080-44d0e43db8c2_buggy.java
+++ b/tmp/3138561a-1b48-4030-9924-5f765ee337a4_fixed.java
@@ -1,25 +1,38 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                       parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                            || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
         if (couldSkip && isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        boolean shouldIndent = false;
+        if (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) {
+            shouldIndent = true;
+        } else if (!isBlank() && out.outline() && siblingNodes().size() > 0) {
+            shouldIndent = true;
+        }
+
+        // Check if the previous sibling is a <br> tag and we should indent
+        Node previous = this.previousSibling();
+        if (previous instanceof BR && !isBlank()) {
+            shouldIndent = true;
+        }
+
+        if (shouldIndent) {
             indent(accum, depth, out);
         }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
