diff --git a/tmp/739b1d4b-edda-480c-81e4-f1d1a88450cc_buggy.java b/tmp/b8569c9e-ed71-4d52-ad13-248605b41eae_fixed.java
index 0583946..f335f84 100644
--- a/tmp/739b1d4b-edda-480c-81e4-f1d1a88450cc_buggy.java
+++ b/tmp/b8569c9e-ed71-4d52-ad13-248605b41eae_fixed.java
@@ -1,30 +1,36 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+            ) {
                 indent(accum, depth, out);
+            } else if (isBlank && parent != null && parent.tag().isBlock()) {
+                // make sure we are followed by something, or are the last node of a block tag, to not omit
+                // this w/s text node that is for formatting
+                if (nextSibling() != null || (parentNode instanceof Element && ((Element) parentNode).nextSibling() == null))
+                    accum.append(' ');
+            }
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
