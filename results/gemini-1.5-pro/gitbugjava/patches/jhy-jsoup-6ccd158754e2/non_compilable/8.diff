diff --git a/tmp/56db5661-a1d0-4760-ab27-76e805f0b246_buggy.java b/tmp/9c93ec81-e6e6-4908-a2bc-cae686cb6a1b_fixed.java
index 23f078d..3f11667 100644
--- a/tmp/56db5661-a1d0-4760-ab27-76e805f0b246_buggy.java
+++ b/tmp/9c93ec81-e6e6-4908-a2bc-cae686cb6a1b_fixed.java
@@ -1,14 +1,17 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()).replace("+", "%20"));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
+            if (Character.isSurrogate(s.charAt(i))) {
+                i++;
+            }
         }
     }
