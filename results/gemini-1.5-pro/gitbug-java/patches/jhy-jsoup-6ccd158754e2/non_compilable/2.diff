diff --git a/tmp/c8544f55-fdeb-4b3b-92eb-d7fe37ae4b52_buggy.java b/tmp/f3cb4f35-f127-43e8-b972-9574759e2310_fixed.java
index 23f078d..9fc2337 100644
--- a/tmp/c8544f55-fdeb-4b3b-92eb-d7fe37ae4b52_buggy.java
+++ b/tmp/f3cb4f35-f127-43e8-b972-9574759e2310_fixed.java
@@ -1,14 +1,16 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                for (char cc : Character.toChars(c)) { // fixed: handle surrogate pairs
+                    sb.append(URLEncoder.encode(Character.toString(cc), UTF_8.name()));
+                }
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
         }
     }
