diff --git a/tmp/0e058779-d8a9-45f5-96d9-54417db3b037_buggy.java b/tmp/93e177fc-8dfd-4d8f-b238-059830468f1c_fixed.java
index 4b163f6..78848bd 100644
--- a/tmp/0e058779-d8a9-45f5-96d9-54417db3b037_buggy.java
+++ b/tmp/93e177fc-8dfd-4d8f-b238-059830468f1c_fixed.java
@@ -1,28 +1,33 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+        long totalSkipped = 0;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
-                break;
+                // Skip implementation is exhausted, fall back to read
+                int read = input.read();
+                if (read < 0) {
+                    break; // EOF
+                }
+                skipped = 1;
             }
             numToSkip -= skipped;
+            totalSkipped += skipped;
         }
-            
-        return available - numToSkip;
+        return totalSkipped;
     }
