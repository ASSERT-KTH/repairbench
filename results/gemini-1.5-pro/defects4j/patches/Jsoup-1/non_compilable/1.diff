diff --git a/tmp/41479b16-ce2b-49f1-b838-3e5ec942dcef_buggy.java b/tmp/f0101a64-d881-480f-acda-054cdc41f090_fixed.java
index 00914da..d65e355 100644
--- a/tmp/41479b16-ce2b-49f1-b838-3e5ec942dcef_buggy.java
+++ b/tmp/f0101a64-d881-480f-acda-054cdc41f090_fixed.java
@@ -1,17 +1,21 @@
     // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node: element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
                 if (!tn.isBlank())
                     toMove.add(tn);
             }
         }
 
-        for (Node node: toMove) {
+        for (int i = toMove.size()-1; i >= 0; i--) {
+            Node node = toMove.get(i);
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            if (element.childNodeSize() == 0) // was size == 1, but that failed eg if inserting into empty node
+                element.appendChild(new TextNode(" ", ""));
+            else
+                element.childNode(0).before(new TextNode(" ", ""));
+            element.childNode(0).before(node);
         }
     }
