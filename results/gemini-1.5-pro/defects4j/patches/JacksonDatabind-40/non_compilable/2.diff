diff --git a/tmp/38212792-c247-4d15-a26d-fae4c2d70d47_buggy.java b/tmp/038053fa-79be-49a5-9731-65fc18da1242_fixed.java
index e69de29..636525c 100644
--- a/tmp/38212792-c247-4d15-a26d-fae4c2d70d47_buggy.java
+++ b/tmp/038053fa-79be-49a5-9731-65fc18da1242_fixed.java
@@ -0,0 +1,35 @@
+import com.fasterxml.jackson.core.JsonParser;
+import com.fasterxml.jackson.databind.DeserializationContext;
+import com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer;
+import com.fasterxml.jackson.databind.type.LogicalType;
+
+import java.io.IOException;
+
+public abstract class FixAbstractScalarUnwrappedDeserializer<T> extends StdScalarDeserializer<T> {
+    private static final long serialVersionUID = 1L;
+
+    protected FixAbstractScalarUnwrappedDeserializer(Class<T> vc) {
+        super(vc);
+    }
+
+    @Override
+    public T getNullValue(DeserializationContext ctxt) throws IOException {
+        return (T) ctxt.getDefaultValueDeserializer(handledType()).getNullValue(ctxt);
+    }
+
+    @Override
+    public Object getEmptyValue(DeserializationContext ctxt) throws IOException {
+        return (T) ctxt.getDefaultValueDeserializer(handledType()).getEmptyValue(ctxt);
+    }
+
+    @Override
+    public T deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+        Object value = _parse(p, ctxt);
+        if (value == null) {
+            return null;
+        }
+        return (T) value;
+    }
+
+    protected abstract Object _parse(JsonParser p, DeserializationContext ctxt) throws IOException;
+}
\ No newline at end of file
