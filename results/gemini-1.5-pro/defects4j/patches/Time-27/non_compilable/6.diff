diff --git a/tmp/e39772ba-1af5-4711-bcb6-8324a36d4d28_buggy.java b/tmp/1c6a1d0a-361a-4e39-85c8-e0ab0e494a36_fixed.java
index ec6c9ee..49f96a5 100644
--- a/tmp/e39772ba-1af5-4711-bcb6-8324a36d4d28_buggy.java
+++ b/tmp/1c6a1d0a-361a-4e39-85c8-e0ab0e494a36_fixed.java
@@ -1,21 +1,28 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
+            if (size >= 4 && elementPairs.get(2) instanceof Separator) {
+                Separator sep2 = (Separator) elementPairs.get(2);
+                PeriodFormatter f = toFormatter(elementPairs.subList(4, size), notPrinter, notParser);
+                sep2 = sep2.finish(f.getPrinter(), f.getParser());
+                sep = sep.finish(sep2.getPrinter(), sep2.getParser());
+                return new PeriodFormatter(sep, sep);
+            }
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
