diff --git a/tmp/12f3f9f9-d421-4b9d-bf27-74b4cbc40f63_buggy.java b/tmp/c79d8eec-69e7-49c7-8eda-a2584a8d41f6_fixed.java
index ec6c9ee..19ca445 100644
--- a/tmp/12f3f9f9-d421-4b9d-bf27-74b4cbc40f63_buggy.java
+++ b/tmp/c79d8eec-69e7-49c7-8eda-a2584a8d41f6_fixed.java
@@ -1,21 +1,27 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
                 PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
+        } else if (size >= 4 && elementPairs.get(1) instanceof Separator) {
+            Separator sep = (Separator) elementPairs.get(1);
+            PeriodFormatter f = toFormatter(elementPairs.subList(0, size - 2), notPrinter, notParser);
+            sep = sep.finish(f.getPrinter(), f.getParser());
+            f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+            return new PeriodFormatter(sep.finish(f.getPrinter(), f.getParser()), sep.finish(f.getPrinter(), f.getParser()));
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
