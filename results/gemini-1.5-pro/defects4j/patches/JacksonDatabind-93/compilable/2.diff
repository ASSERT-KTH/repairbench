diff --git a/tmp/a8a9f9ef-90a2-4145-8653-0f236534b7b8_buggy.java b/tmp/98c7d624-05fb-4a11-b921-912f969f0786_fixed.java
index 2d9cf24..06f9707 100644
--- a/tmp/a8a9f9ef-90a2-4145-8653-0f236534b7b8_buggy.java
+++ b/tmp/98c7d624-05fb-4a11-b921-912f969f0786_fixed.java
@@ -1,33 +1,29 @@
     public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
     {
         // There are certain nasty classes that could cause problems, mostly
         // via default typing -- catch them here.
         final Class<?> raw = type.getRawClass();
         String full = raw.getName();
 
-        main_check:
-        do {
-            if (_cfgIllegalClassNames.contains(full)) {
-                break;
-            }
-
         // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
         //    for some Spring framework types
         // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
         if (full.startsWith(PREFIX_STRING)) {
             for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
                 String name = cls.getSimpleName();
                 // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                 if ("AbstractPointcutAdvisor".equals(name)
                         // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                         || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
+                    throw JsonMappingException.from(ctxt,
+                            String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
                 }
             }
         }
+
+        if (_cfgIllegalClassNames.contains(full)) {
+            throw JsonMappingException.from(ctxt,
+                    String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
+        }
         return;
-        } while (false);
-
-        throw JsonMappingException.from(ctxt,
-                String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
     }
