diff --git a/tmp/e1d79580-61a0-4f91-93c1-fb2be5bdbb49_buggy.java b/tmp/2138b190-5a11-489a-a9a0-6f020cea7871_fixed.java
index 2d9cf24..eb40424 100644
--- a/tmp/e1d79580-61a0-4f91-93c1-fb2be5bdbb49_buggy.java
+++ b/tmp/2138b190-5a11-489a-a9a0-6f020cea7871_fixed.java
@@ -1,33 +1,28 @@
     public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
     {
         // There are certain nasty classes that could cause problems, mostly
         // via default typing -- catch them here.
         final Class<?> raw = type.getRawClass();
         String full = raw.getName();
 
-        main_check:
-        do {
-            if (_cfgIllegalClassNames.contains(full)) {
-                break;
-            }
-
         // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
         //    for some Spring framework types
         // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
         if (full.startsWith(PREFIX_STRING)) {
             for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
                 String name = cls.getSimpleName();
                 // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                 if ("AbstractPointcutAdvisor".equals(name)
                             // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                             || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
+                    throw JsonMappingException.from(ctxt,
+                            String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
                 }
             }
         }
-            return;
-        } while (false);
 
+        if (_cfgIllegalClassNames.contains(full)) {
             throw JsonMappingException.from(ctxt,
                     String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
         }
+    }
