diff --git a/tmp/13369fbc-f6f5-4dde-a798-78f00021d22c_buggy.java b/tmp/f7de2a09-a9ba-43a6-aa29-a8c1cb21d64d_fixed.java
index 5f96616..673b6c0 100644
--- a/tmp/13369fbc-f6f5-4dde-a798-78f00021d22c_buggy.java
+++ b/tmp/f7de2a09-a9ba-43a6-aa29-a8c1cb21d64d_fixed.java
@@ -1,20 +1,20 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
-    if (constraint.isRecordType()) {
+    if (constraint.isRecordType() || constraint.isUnionType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
     }
   }
