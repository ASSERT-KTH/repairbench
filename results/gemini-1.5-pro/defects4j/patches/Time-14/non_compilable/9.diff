diff --git a/tmp/70dca6b2-7376-4f2a-b09a-0a103053e86a_buggy.java b/tmp/e39dcdee-8695-446e-b66a-99d596170ee8_fixed.java
index 10616db..4fc29e5 100644
--- a/tmp/70dca6b2-7376-4f2a-b09a-0a103053e86a_buggy.java
+++ b/tmp/e39dcdee-8695-446e-b66a-99d596170ee8_fixed.java
@@ -1,19 +1,37 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
             // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            Chronology chrono = iChronology;
+            if (fieldIndex == 0) {
+                // month or year add
+                int year = chrono.yearOfEra().get(instant);
+                int month = chrono.monthOfYear().get(instant);
+                if (month <= 0) {
+                    month = 1;
+                }
+                chrono = chrono.withUTC();
+                try {
+                    instant = chrono.getDateTimeMillis(year, month, 1, 0);
+                } catch (IllegalArgumentException ex) {
+                    // year or month is invalid, but try to adjust
+                    // by adding days
+                    instant = chrono.dayOfMonth().set(instant, 1);
+                    instant = chrono.millisOfDay().set(instant, 0);
+                }
+            }
+            return chrono.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
