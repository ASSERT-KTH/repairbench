diff --git a/tmp/c3b8ae0c-04d3-424e-8e66-d2299faecba5_buggy.java b/tmp/e37d6517-95b4-4de5-932f-7ad069f3e034_fixed.java
index d926eea..ff55aa9 100644
--- a/tmp/c3b8ae0c-04d3-424e-8e66-d2299faecba5_buggy.java
+++ b/tmp/e37d6517-95b4-4de5-932f-7ad069f3e034_fixed.java
@@ -1,48 +1,53 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
             return this;
         }
         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
         if (format == null) {
             return this;
         }
         // Simple case first: serialize as numeric timestamp?
         JsonFormat.Shape shape = format.getShape();
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
 
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
                 if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                                 || format.hasLocale() || format.hasTimeZone()) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                             ? format.getLocale()
                             : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
 
         // Otherwise, need one of these changes:
 
 
         // Jackson's own `StdDateFormat` is quite easy to deal with...
-
+        if (shape == JsonFormat.Shape.STRING) {
+            DateFormat df = serializers.getConfig().getDateFormat();
+            if (df.getClass() == StdDateFormat.class) {
+                return withFormat(Boolean.FALSE, ((StdDateFormat) df).withTimeZone(serializers.getTimeZone()));
+            }
+        }
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
 //            serializers.reportBadDefinition(handledType(), String.format(
             // Ugh. No way to change `Locale`, create copy; must re-crete completely:
         return this;
     }
