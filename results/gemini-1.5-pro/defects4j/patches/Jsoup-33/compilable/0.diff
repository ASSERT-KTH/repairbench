diff --git a/tmp/b24b4bf8-5a38-4966-aff2-cde9b68b5f11_buggy.java b/tmp/e512706a-723e-4148-84ac-b6dc7194a6bf_fixed.java
index dc93be3..c022493 100644
--- a/tmp/b24b4bf8-5a38-4966-aff2-cde9b68b5f11_buggy.java
+++ b/tmp/e512706a-723e-4148-84ac-b6dc7194a6bf_fixed.java
@@ -1,14 +1,18 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            if (Tag.isKnownTag(el.tagName())) {
+                // if it's a known tag that is self closing, but we know it shouldn't be, add an empty ender tag.
+                stack.add(el);
+            }
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
