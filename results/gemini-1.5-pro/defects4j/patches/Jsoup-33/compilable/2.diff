diff --git a/tmp/003d11f1-3bd2-438f-a517-74a77f1e5540_buggy.java b/tmp/531073e5-cf44-46cd-9c4c-48f58c7c959d_fixed.java
index dc93be3..580655c 100644
--- a/tmp/003d11f1-3bd2-438f-a517-74a77f1e5540_buggy.java
+++ b/tmp/531073e5-cf44-46cd-9c4c-48f58c7c959d_fixed.java
@@ -1,14 +1,20 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            if (Tag.isKnownTag(el.tagName())) {
                 return el;
+            } else {
+                // for unknown tags, don't push onto stack, and don't add end tag.
+                stack.removeLast();
+                return el;
+            }
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
