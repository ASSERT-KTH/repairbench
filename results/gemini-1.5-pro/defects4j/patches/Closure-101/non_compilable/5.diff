diff --git a/tmp/564c8735-f599-41e8-b8b4-c81b5ac45543_buggy.java b/tmp/af90e5c6-7646-451b-ad82-ab9abdfa4de4_fixed.java
index 8afddc6..2952f83 100644
--- a/tmp/564c8735-f599-41e8-b8b4-c81b5ac45543_buggy.java
+++ b/tmp/af90e5c6-7646-451b-ad82-ab9abdfa4de4_fixed.java
@@ -1,22 +1,26 @@
   @Override
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
 
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
     if (flags.process_closure_primitives) {
       options.closurePass = true;
+    } else {
+      // This was missing in the original code. We must disable the closure pass if
+      // the flag is explicitly set to false.
+      options.setProcessClosurePrimitives(false);
     }
 
     initOptionsFromFlags(options);
     return options;
   }
