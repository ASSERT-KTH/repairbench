diff --git a/tmp/e7651c97-de14-4a5b-bf70-eb00979beb32_buggy.java b/tmp/7e6e2c22-29c5-4af2-b77e-fba733cac60c_fixed.java
index e69de29..31a6926 100644
--- a/tmp/e7651c97-de14-4a5b-bf70-eb00979beb32_buggy.java
+++ b/tmp/7e6e2c22-29c5-4af2-b77e-fba733cac60c_fixed.java
@@ -0,0 +1,48 @@
+import org.jsoup.Connection;
+import org.jsoup.select.Elements;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class FormElement {
+    /**
+     * Get the list of form element data associated with this form, suitable for POSTing or
+     * encoding as a query string.
+     * @return list of key vals
+     */
+    public List<Connection.KeyVal> formData() {
+        ArrayList<Connection.KeyVal> data = new ArrayList<>();
+
+        // iterate the form control elements and accumulate their values
+        for (Element el : elements()) {
+            if (!el.tag().isFormSubmittable()) continue; // contents of a <button> inside a <form> are not necessarily submitted
+            if (el.hasAttr("disabled")) continue; // skip disabled form inputs, but not reset because it can have value
+
+            String name = el.attr("name");
+            if (name.length() == 0) continue;
+
+            if (el.tagName().equals("select")) {
+                Elements options = ((Element) el).select("option[selected]");
+                boolean set = false;
+                for (Element option : options) {
+                    if (option.hasAttr("selected"))
+                        set = true;
+                }
+                if (!set) {
+                    Element option = ((Element) el).select("option").first();
+                    if (option != null)
+                        data.add(HttpConnection.KeyVal.create(name, option.attr("value")));
+                } else {
+                    for (Element option : options) {
+                        data.add(HttpConnection.KeyVal.create(name, option.attr("value")));
+                    }
+                }
+            } else if (el.tagName().equals("textarea")) {
+                data.add(HttpConnection.KeyVal.create(name, ((Element) el).text()));
+            } else {
+                data.add(HttpConnection.KeyVal.create(name, el.attr("value")));
+            }
+        }
+        return data;
+    }
+}
\ No newline at end of file
