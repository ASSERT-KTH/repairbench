diff --git a/tmp/5f7539dc-90c6-447a-8b8f-c914c67693a4_buggy.java b/tmp/aa48830e-8001-4edf-b5f0-f40c2253443a_fixed.java
index 4bbd561..335bd20 100644
--- a/tmp/5f7539dc-90c6-447a-8b8f-c914c67693a4_buggy.java
+++ b/tmp/aa48830e-8001-4edf-b5f0-f40c2253443a_fixed.java
@@ -1,37 +1,47 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        if(input.charAt(index) == '&' && input.length() > index + 1 && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
 
             int end = start;
-            while(input.charAt(end) != ';') {
+            while(end < input.length() && input.charAt(end) != ';') {
                 end++;
             }
 
+            if (end == input.length()) {
+                return 0;
+            }
+
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
                 return 0;
             }
 
+            if (entityValue > 0xFFFF) {
+                char[] chrs = Character.toChars(entityValue);
+                out.write(chrs[0]);
+                out.write(chrs[1]);
+            } else {
                 out.write(entityValue);
+            }
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
\ No newline at end of file
