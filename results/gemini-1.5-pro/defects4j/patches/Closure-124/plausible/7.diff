diff --git a/tmp/15ab23d3-71cc-424f-8e40-9a487fbc2acd_buggy.java b/tmp/26c64ba3-f5ab-4275-bdf9-54d49df48fe3_fixed.java
index 2573d30..69992d8 100644
--- a/tmp/15ab23d3-71cc-424f-8e40-9a487fbc2acd_buggy.java
+++ b/tmp/26c64ba3-f5ab-4275-bdf9-54d49df48fe3_fixed.java
@@ -1,20 +1,26 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    // For gets up the prototype chain, we need to make sure that
+    // we're not replacing a value with the result of a get
+    // on that same value.
+    Node current = node;
+    while (current.isGetProp()) {
+      current = current.getFirstChild();
+      if (current.isName()
+          && isNameAssignedTo(current.getString(), replacement)) {
         return false;
       }
+    }
 
     return true;
   }
