diff --git a/tmp/5823858c-dce0-4b4a-8769-d3dd54814bf6_buggy.java b/tmp/001c2531-02af-44fc-99f2-20b3614f71f8_fixed.java
index 2608424..e21d696 100644
--- a/tmp/5823858c-dce0-4b4a-8769-d3dd54814bf6_buggy.java
+++ b/tmp/001c2531-02af-44fc-99f2-20b3614f71f8_fixed.java
@@ -1,39 +1,30 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
         int count = 0;
         for (int i = 0; i < last; i++) {
-            int idx = 0;
+            indices[i] = 0;
             final int offset = uniCounterOffset[i];
-            while (count <= index) {
+            while (count + offset <= index) {
                 count += offset;
-                ++idx;
+                ++indices[i];
             }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
         }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
+        indices[last] = index - count;
 
         return indices;
     }
