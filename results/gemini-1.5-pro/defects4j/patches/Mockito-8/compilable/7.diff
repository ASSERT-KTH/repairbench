diff --git a/tmp/df510036-b7b6-4808-b7ab-fa8646f95975_buggy.java b/tmp/a7585979-aeac-4cd6-8f43-6f3a60bc0b70_fixed.java
index 42b58d0..80faba9 100644
--- a/tmp/df510036-b7b6-4808-b7ab-fa8646f95975_buggy.java
+++ b/tmp/a7585979-aeac-4cd6-8f43-6f3a60bc0b70_fixed.java
@@ -1,19 +1,21 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
         TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
-
-            if (actualTypeArgument instanceof WildcardType) {
+            // Avoid infinite recursion for self-referential type variables
+            if (actualTypeArgument instanceof TypeVariable && !contextualActualTypeParameters.containsKey(actualTypeArgument)) {
+                contextualActualTypeParameters.put(typeParameter,  typeParameter);
+            } else if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
