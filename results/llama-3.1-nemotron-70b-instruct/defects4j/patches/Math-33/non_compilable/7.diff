diff --git a/tmp/f46368f1-bfe6-4bb6-82f9-ec666e40145b_buggy.java b/tmp/689b0813-5012-49bc-8bea-c2728d1ee0e3_fixed.java
index 56b2d66..744ef30 100644
--- a/tmp/f46368f1-bfe6-4bb6-82f9-ec666e40145b_buggy.java
+++ b/tmp/689b0813-5012-49bc-8bea-c2728d1ee0e3_fixed.java
@@ -1,45 +1,57 @@
 /**
  * Removes the phase 1 objective function, positive cost non-artificial variables,
  * and the non-basic artificial variables from this tableau.
  */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+    columnsToDrop.add(0); // drop phase 1 objective function
 
     // positive cost non-artificial variables
     for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
     for (int i = 0; i < getNumArtificialVariables(); i++) {
       int col = i + getArtificialVariableOffset();
       if (getBasicRow(col) == null) {
         columnsToDrop.add(col);
       }
     }
 
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
-          int col = 0;
+    // FIX: Correctly adjust matrix dimensions and handle column removal
+    int newHeight = getHeight() - 1;
+    int newWidth = getWidth() - columnsToDrop.size();
+    double[][] matrix = new double[newHeight][newWidth];
+    int[] columnMapping = new int[getWidth()];
+    Arrays.fill(columnMapping, -1);
+    int newCol = 0;
     for (int j = 0; j < getWidth(); j++) {
       if (!columnsToDrop.contains(j)) {
-              matrix[i - 1][col++] = tableau.getEntry(i, j);
+        columnMapping[j] = newCol++;
+      }
+    }
+
+    for (int i = 1; i < getHeight(); i++) {
+      int newRow = i - 1;
+      for (int j = 0; j < getWidth(); j++) {
+        if (columnMapping[j]!= -1) {
+          matrix[newRow][columnMapping[j]] = tableau.getEntry(i, j);
         }
       }
     }
 
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
       columnLabels.remove((int) columnsToDrop.get(i));
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file
