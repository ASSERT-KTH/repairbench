diff --git a/tmp/4d21d528-91d9-42a9-bce2-6fd49f9f0f4b_buggy.java b/tmp/e9e4470d-b053-42b1-a8bf-e92c030f1b1b_fixed.java
index 56b2d66..26b785e 100644
--- a/tmp/4d21d528-91d9-42a9-bce2-6fd49f9f0f4b_buggy.java
+++ b/tmp/e9e4470d-b053-42b1-a8bf-e92c030f1b1b_fixed.java
@@ -1,45 +1,46 @@
 /**
  * Removes the phase 1 objective function, positive cost non-artificial variables,
  * and the non-basic artificial variables from this tableau.
  */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+    columnsToDrop.add(0); // phase 1 objective function
 
     // positive cost non-artificial variables
     for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
     for (int i = 0; i < getNumArtificialVariables(); i++) {
       int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
+      if (getBasicRow(col) == null && getBasicColumn(i + getNumObjectiveFunctions()) == null) {
         columnsToDrop.add(col);
       }
     }
 
+    // Fix: Adjust matrix size to account for the dropped phase 1 objective row
     double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
     for (int i = 1; i < getHeight(); i++) {
       int col = 0;
       for (int j = 0; j < getWidth(); j++) {
         if (!columnsToDrop.contains(j)) {
           matrix[i - 1][col++] = tableau.getEntry(i, j);
         }
       }
     }
 
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
       columnLabels.remove((int) columnsToDrop.get(i));
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file
