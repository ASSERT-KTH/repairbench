diff --git a/tmp/9fe6679d-1307-4585-89b5-5133467ead8b_buggy.java b/tmp/7c48c99c-bbb6-4662-8aa4-3416f620260a_fixed.java
index 56b2d66..4ae06d9 100644
--- a/tmp/9fe6679d-1307-4585-89b5-5133467ead8b_buggy.java
+++ b/tmp/7c48c99c-bbb6-4662-8aa4-3416f620260a_fixed.java
@@ -1,45 +1,60 @@
 /**
  * Removes the phase 1 objective function, positive cost non-artificial variables,
  * and the non-basic artificial variables from this tableau.
  */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+    columnsToDrop.add(0); // phase 1 objective function
 
     // positive cost non-artificial variables
     for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
     for (int i = 0; i < getNumArtificialVariables(); i++) {
       int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
+      if (getBasicRow(col) == null &&!columnsToDrop.contains(col)) {
         columnsToDrop.add(col);
       }
     }
 
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
+    // Fix: Correctly handle the case when columnsToDrop is empty
+    if (columnsToDrop.size() == 1 && columnsToDrop.get(0) == 0) {
+        double[][] matrix = new double[getHeight() - 1][getWidth()];
+        for (int i = 1; i < getHeight(); i++) {
+          for (int j = 0; j < getWidth(); j++) {
+            matrix[i - 1][j] = tableau.getEntry(i, j);
+          }
+        }
+        this.tableau = new Array2DRowRealMatrix(matrix);
+    } else {
+        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size() + (columnsToDrop.contains(0)? 0 : 1)];
+        int colOffset = columnsToDrop.contains(0)? 0 : 1;
         for (int i = 1; i < getHeight(); i++) {
           int col = 0;
           for (int j = 0; j < getWidth(); j++) {
             if (!columnsToDrop.contains(j)) {
               matrix[i - 1][col++] = tableau.getEntry(i, j);
             }
           }
         }
 
         for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
           columnLabels.remove((int) columnsToDrop.get(i));
         }
 
         this.tableau = new Array2DRowRealMatrix(matrix);
-        this.numArtificialVariables = 0;
+    }
+
+    this.numArtificialVariables -= columnsToDrop.stream()
+           .filter(col -> col >= getArtificialVariableOffset())
+           .count();
 }
\ No newline at end of file
