diff --git a/tmp/bf1f7cff-4288-4670-8c07-b2d8081f49e7_buggy.java b/tmp/5757cafc-4961-44ff-926a-873f0b2e9df0_fixed.java
index 56b2d66..660cf53 100644
--- a/tmp/bf1f7cff-4288-4670-8c07-b2d8081f49e7_buggy.java
+++ b/tmp/5757cafc-4961-44ff-926a-873f0b2e9df0_fixed.java
@@ -1,45 +1,49 @@
 /**
  * Removes the phase 1 objective function, positive cost non-artificial variables,
  * and the non-basic artificial variables from this tableau.
  */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+    columnsToDrop.add(0); // phase 1 objective function
 
     // positive cost non-artificial variables
     for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
     for (int i = 0; i < getNumArtificialVariables(); i++) {
       int col = i + getArtificialVariableOffset();
       if (getBasicRow(col) == null) {
         columnsToDrop.add(col);
       }
     }
 
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
+    // Fix: Correctly handle the removal of rows and columns from the tableau
+    double[][] matrix = new double[getHeight() - (getNumObjectiveFunctions() > 1? 1 : 0)][getWidth() - columnsToDrop.size()];
+    int rowOffset = (getNumObjectiveFunctions() > 1)? 1 : 0; // Skip phase 1 objective function row if present
+    for (int i = rowOffset; i < getHeight(); i++) {
       int col = 0;
       for (int j = 0; j < getWidth(); j++) {
         if (!columnsToDrop.contains(j)) {
-              matrix[i - 1][col++] = tableau.getEntry(i, j);
+          matrix[i - rowOffset][col++] = tableau.getEntry(i, j);
         }
       }
     }
 
-        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
-          columnLabels.remove((int) columnsToDrop.get(i));
+    // Fix: Remove column labels in the correct order to avoid IndexOutOfBoundsException
+    Collections.sort(columnsToDrop, Collections.reverseOrder());
+    for (Integer col : columnsToDrop) {
+      columnLabels.remove(((Integer) col).intValue());
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file
