diff --git a/tmp/a455a63e-b35d-430f-8c0c-f330162fe306_buggy.java b/tmp/4a5e3fc0-7a9b-40b6-a5d1-cbc654a8cc9a_fixed.java
index 351a97a..0d3cf70 100644
--- a/tmp/a455a63e-b35d-430f-8c0c-f330162fe306_buggy.java
+++ b/tmp/4a5e3fc0-7a9b-40b6-a5d1-cbc654a8cc9a_fixed.java
@@ -1,18 +1,35 @@
 /**
  * Tests the list for equality with another object (typically also a list).
  *
  * @param obj  the other object (<code>null</code> permitted).
  *
  * @return A boolean.
  */
 public boolean equals(Object obj) {
 
     if (obj == this) {
         return true;
     }
     if (!(obj instanceof ShapeList)) {
         return false;
     }
-        return super.equals(obj);
+    ShapeList other = (ShapeList) obj;
+    return super.equals(obj) && this.size() == other.size() 
+            && this.elementsEqual(other);
 
 }
+
+// Assuming elementsEqual is a method that compares the elements of two lists
+// If not, you would need to implement it, for example:
+private boolean elementsEqual(ShapeList other) {
+    int size = this.size();
+    if (size!= other.size()) {
+        return false;
+    }
+    for (int i = 0; i < size; i++) {
+        if (!getElement(i).equals(other.getElement(i))) {
+            return false;
+        }
+    }
+    return true;
+}
\ No newline at end of file
