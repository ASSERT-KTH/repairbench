diff --git a/tmp/0fdea848-c5fd-4ed4-a05a-9a0e96280e1c_buggy.java b/tmp/77cabf5f-20f5-4ca4-8216-d8b7f5e30937_fixed.java
index 735a993..e7102a4 100644
--- a/tmp/0fdea848-c5fd-4ed4-a05a-9a0e96280e1c_buggy.java
+++ b/tmp/77cabf5f-20f5-4ca4-8216-d8b7f5e30937_fixed.java
@@ -1,29 +1,29 @@
 /**
  * Appends an object to the builder padding on the right to a fixed length.
  * The <code>toString</code> of the object is used.
  * If the object is larger than the length, the right hand side is lost.
  * If the object is null, null text value is used.
  * 
  * @param obj  the object to append, null uses null text
  * @param width  the fixed field width, zero or negative has no effect
  * @param padChar  the pad character to use
  * @return this, to enable chaining
  */
 public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
     if (width > 0) {
         ensureCapacity(size + width);
         String str = (obj == null? getNullText() : obj.toString());
         int strLen = str.length();
         if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+            str.getChars(0, width, buffer, size); // truncate to width
         } else {
+            str.getChars(0, strLen, buffer, size);
             int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
             for (int i = 0; i < padLen; i++) {
-                    buffer[size + strLen + i] = padChar;
+                buffer[size + i] = padChar; // corrected index
             }
         }
         size += width;
     }
     return this;
 }
\ No newline at end of file
