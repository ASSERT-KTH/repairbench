diff --git a/tmp/7e08cbe3-fc84-402d-ae6e-6ac7d3d5d5b4_buggy.java b/tmp/a70a856d-7236-4703-bdbf-8481533dfccd_fixed.java
index f955f47..9314bae 100644
--- a/tmp/7e08cbe3-fc84-402d-ae6e-6ac7d3d5d5b4_buggy.java
+++ b/tmp/a70a856d-7236-4703-bdbf-8481533dfccd_fixed.java
@@ -1,34 +1,47 @@
 public String getDescription() {
     if (_desc == null) {
         StringBuilder sb = new StringBuilder();
 
         if (_from == null) { // can this ever occur?
             sb.append("UNKNOWN");
         } else {
-                    Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
-                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
-                    if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
+            String className = getName(_from);
+            if (className!= null) {
+                sb.append(className);
             }
-                    sb.append(cls.getSimpleName());
         }
         sb.append('[');
         if (_fieldName!= null) {
             sb.append('"');
             sb.append(_fieldName);
             sb.append('"');
         } else if (_index >= 0) {
             sb.append(_index);
         } else {
             sb.append('?');
         }
         sb.append(']');
         _desc = sb.toString();
     }
     return _desc;
 }
+
+// Helper method to get the fully qualified class name, 
+// including outer class for inner classes
+private String getName(Object _from) {
+    Class<?> cls = (_from instanceof Class<?>)? (Class<?>)_from : _from.getClass();
+    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
+    if (pkgName!= null) {
+        return pkgName + '.' + getFullyQualifiedClassName(cls);
+    }
+    return getFullyQualifiedClassName(cls);
+}
+
+// Helper method to get the fully qualified class name, 
+// including outer class for inner classes
+private String getFullyQualifiedClassName(Class<?> cls) {
+    if (cls.isMemberClass() &&!java.lang.reflect.Modifier.isStatic(cls.getModifiers())) {
+        return getFullyQualifiedClassName(cls.getEnclosingClass()) + "$" + cls.getSimpleName();
+    }
+    return cls.getName();
+}
\ No newline at end of file
