diff --git a/tmp/629230ba-0718-4d2c-9377-7b29a6127206_buggy.java b/tmp/956cf408-c6b2-4f40-8389-ca6f5ad16635_fixed.java
index f955f47..9252f02 100644
--- a/tmp/629230ba-0718-4d2c-9377-7b29a6127206_buggy.java
+++ b/tmp/956cf408-c6b2-4f40-8389-ca6f5ad16635_fixed.java
@@ -1,34 +1,34 @@
 public String getDescription() {
     if (_desc == null) {
         StringBuilder sb = new StringBuilder();
 
-                if (_from == null) { // can this ever occur?
+        if (_from == null) { 
             sb.append("UNKNOWN");
         } else {
             Class<?> cls = (_from instanceof Class<?>)? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
-                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
-                    if (pkgName != null) {
-                        sb.append(pkgName);
+            // Get the fully qualified class name to handle inner classes correctly
+            String className = cls.getName();
+            int innerClassIndex = className.indexOf('$');
+            if (innerClassIndex!= -1) {
+                // Include the outer class name for inner classes
+                sb.append(className.substring(0, innerClassIndex));
                 sb.append('.');
             }
+            // Append the simple name of the inner class (or the regular class if not an inner class)
             sb.append(cls.getSimpleName());
         }
         sb.append('[');
         if (_fieldName!= null) {
             sb.append('"');
             sb.append(_fieldName);
             sb.append('"');
         } else if (_index >= 0) {
             sb.append(_index);
         } else {
             sb.append('?');
         }
         sb.append(']');
         _desc = sb.toString();
     }
     return _desc;
 }
\ No newline at end of file
