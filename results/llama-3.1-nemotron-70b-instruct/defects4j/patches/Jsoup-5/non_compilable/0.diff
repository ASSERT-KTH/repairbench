diff --git a/tmp/735dc6bf-f9f2-4568-bc0e-b26d01a2c07e_buggy.java b/tmp/16937507-beab-4c18-b771-3ffce6513811_fixed.java
index 39dd8e7..1db09ab 100644
--- a/tmp/735dc6bf-f9f2-4568-bc0e-b26d01a2c07e_buggy.java
+++ b/tmp/16937507-beab-4c18-b771-3ffce6513811_fixed.java
@@ -1,30 +1,36 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") &&!tq.matchesWhitespace() &&!tq.isEmpty()) {
-                    valueAccum.append(tq.consume());
+                char c = tq.consume();
+                if (tq.matchesAny("=", "<", "/>", ">")) { // stop at equals sign as well
+                    tq.unconsume(c); // put the character back
+                    break;
+                }
+                valueAccum.append(c);
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
     if (key.length()!= 0)
         return Attribute.createFromEncoded(key, value);
     else {
+        if (!tq.matchesAny(">", "/>")) { // only consume if not at tag end
             tq.consume();
-                
+        }
         return null;
     }
 }
\ No newline at end of file
