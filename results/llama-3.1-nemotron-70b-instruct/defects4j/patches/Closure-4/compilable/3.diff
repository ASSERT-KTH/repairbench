diff --git a/tmp/69fb93be-029f-426d-a835-fcaacce63bdc_buggy.java b/tmp/0835dbe4-1372-4255-81ed-2f499d4bce38_fixed.java
index d6a560a..6d9d060 100644
--- a/tmp/69fb93be-029f-426d-a835-fcaacce63bdc_buggy.java
+++ b/tmp/0835dbe4-1372-4255-81ed-2f499d4bce38_fixed.java
@@ -1,33 +1,35 @@
 /**
  * Resolve the referenced type within the enclosing scope.
  */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
-    boolean resolved = resolveViaRegistry(t, enclosing);
+    // Check for implicit prototype cycle before attempting to resolve
     if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
+        // If a cycle is detected, do not proceed with resolution to avoid StackOverflowError
+        return registry.isLastGeneration()? getReferencedType() : this;
     }
 
-    if (resolved) {
+    // Attempt resolution via registry first
+    boolean resolvedViaRegistry = resolveViaRegistry(t, enclosing);
+    if (resolvedViaRegistry) {
+        // If resolved via registry, finish property continuations and return
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+        return registry.isLastGeneration()? getReferencedType() : this;
     }
 
+    // If not resolved via registry, attempt resolution via properties
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
+        // If a cycle is detected during property resolution, handle it
         handleTypeCycle(t);
     }
 
+    // Finalize resolution
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
         finishPropertyContinuations();
     }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+    return registry.isLastGeneration()? getReferencedType() : this;
 }
\ No newline at end of file
