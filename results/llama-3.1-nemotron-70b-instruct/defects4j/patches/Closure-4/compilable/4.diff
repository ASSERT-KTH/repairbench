diff --git a/tmp/338404eb-5fb0-4e2d-8e56-38233b3ee6b9_buggy.java b/tmp/3311e406-e155-4e3c-89de-ef2374edb52e_fixed.java
index d6a560a..a0e1486 100644
--- a/tmp/338404eb-5fb0-4e2d-8e56-38233b3ee6b9_buggy.java
+++ b/tmp/3311e406-e155-4e3c-89de-ef2374edb52e_fixed.java
@@ -1,33 +1,37 @@
 /**
  * Resolve the referenced type within the enclosing scope.
  */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+    // Check for implicit prototype cycles before attempting resolution
+    if (detectImplicitPrototypeCycle()) {
+        handleTypeCycle(t);
+        return registry.isLastGeneration()? getReferencedType() : this;
+    }
+
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
     if (resolved) {
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+        return registry.isLastGeneration()? getReferencedType() : this;
+    }
+
+    // Check again after resolveViaRegistry to catch potential cycles introduced
+    if (detectImplicitPrototypeCycle()) {
+        handleTypeCycle(t);
+        return registry.isLastGeneration()? getReferencedType() : this;
     }
 
     resolveViaProperties(t, enclosing);
+
+    // Final check after all resolutions to ensure no cycle was introduced
     if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
-    }
-
+    } else {
         super.resolveInternal(t, enclosing);
         if (isResolved()) {
             finishPropertyContinuations();
         }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+    }
+    return registry.isLastGeneration()? getReferencedType() : this;
 }
\ No newline at end of file
