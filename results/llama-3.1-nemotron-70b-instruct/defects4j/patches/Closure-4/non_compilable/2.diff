diff --git a/tmp/ddd434b4-826e-4425-8979-e5970251e827_buggy.java b/tmp/acfe2945-c3d6-4002-930e-f336be5741a9_fixed.java
index d6a560a..f6f620a 100644
--- a/tmp/ddd434b4-826e-4425-8979-e5970251e827_buggy.java
+++ b/tmp/acfe2945-c3d6-4002-930e-f336be5741a9_fixed.java
@@ -1,33 +1,34 @@
 /**
  * Resolve the referenced type within the enclosing scope.
  */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+    // Check for implicit prototype cycles before attempting resolution
+    if (detectImplicitPrototypeCycle()) {
+        handleTypeCycle(t);
+    }
+
     boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
     if (resolved) {
-      super.resolveInternal(t, enclosing);
+        // Avoid calling super.resolveInternal(t, enclosing) when already resolved via registry
+        // to prevent potential recursive calls and StackOverflowError
         finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+        return registry.isLastGeneration()? getReferencedType() : this;
     }
 
-    resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    // Resolve via properties only if not already resolved via registry
+    resolved = resolveViaProperties(t, enclosing);
+    if (resolved && detectImplicitPrototypeCycle()) {
+        // If a cycle is detected after resolution, handle it
         handleTypeCycle(t);
     }
 
+    // Call super.resolveInternal only if not already resolved
+    if (!resolved) {
         super.resolveInternal(t, enclosing);
+    }
     if (isResolved()) {
         finishPropertyContinuations();
     }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+    return registry.isLastGeneration()? getReferencedType() : this;
 }
\ No newline at end of file
