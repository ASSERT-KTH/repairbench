diff --git a/tmp/5b662941-6be5-45cb-9d2a-04345ede0349_buggy.java b/tmp/a03ad729-b7ce-4307-9409-70e678b0c3df_fixed.java
index 4b7f469..0549d75 100644
--- a/tmp/5b662941-6be5-45cb-9d2a-04345ede0349_buggy.java
+++ b/tmp/a03ad729-b7ce-4307-9409-70e678b0c3df_fixed.java
@@ -1,10 +1,40 @@
 static boolean isSimpleNumber(String s) {
+    // Check for numeric literals in different bases (decimal, octal, hexadecimal)
+    if (s.startsWith("0x") || s.startsWith("0X")) { // hexadecimal
+        return s.length() > 2 && isHexadecimal(s.substring(2));
+    } else if (s.startsWith("0") && s.length() > 1) { // octal (assuming no leading zero for decimal)
+        return isOctal(s.substring(1));
+    } else { // decimal
         int len = s.length();
         for (int index = 0; index < len; index++) {
             char c = s.charAt(index);
             if (c < '0' || c > '9') {
                 return false;
             }
         }
         return len > 0;
     }
+}
+
+// Helper methods for hexadecimal and octal checks
+static boolean isHexadecimal(String s) {
+    int len = s.length();
+    for (int index = 0; index < len; index++) {
+        char c = s.charAt(index);
+        if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
+            return false;
+        }
+    }
+    return len > 0;
+}
+
+static boolean isOctal(String s) {
+    int len = s.length();
+    for (int index = 0; index < len; index++) {
+        char c = s.charAt(index);
+        if (c < '0' || c > '7') {
+            return false;
+        }
+    }
+    return len > 0;
+}
\ No newline at end of file
