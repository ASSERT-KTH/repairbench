diff --git a/tmp/d6499285-7a13-405b-b3ce-b5f6e36b3e92_buggy.java b/tmp/971eac52-eb05-47ad-ad64-4ca3be9f49a0_fixed.java
index 4b7f469..bff1925 100644
--- a/tmp/d6499285-7a13-405b-b3ce-b5f6e36b3e92_buggy.java
+++ b/tmp/971eac52-eb05-47ad-ad64-4ca3be9f49a0_fixed.java
@@ -1,10 +1,41 @@
 static boolean isSimpleNumber(String s) {
-    int len = s.length();
-    for (int index = 0; index < len; index++) {
-      char c = s.charAt(index);
+    if (s == null || s.isEmpty()) {
+        return false;
+    }
+    if (s.startsWith("0x") || s.startsWith("0X")) { // handle hexadecimal
+        return s.length() > 2 && isValidHex(s.substring(2));
+    }
+    if (s.contains(".")) { // handle decimal
+        return isValidDecimal(s);
+    }
+    for (char c : s.toCharArray()) {
+        if (c < '0' || c > '9') {
+            return false;
+        }
+    }
+    return true;
+}
+
+// Helper methods for the fixed function
+
+private static boolean isValidHex(String hex) {
+    for (char c : hex.toCharArray()) {
+        if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
+            return false;
+        }
+    }
+    return true;
+}
+
+private static boolean isValidDecimal(String decimal) {
+    String[] parts = decimal.split("\\.");
+    if (parts.length!= 2) {
+        return false;
+    }
+    for (char c : (parts[0] + parts[1]).toCharArray()) {
         if (c < '0' || c > '9') {
             return false;
         }
     }
-    return len > 0;
+    return parts[0].length() > 0 || parts[1].length() > 0;
 }
\ No newline at end of file
