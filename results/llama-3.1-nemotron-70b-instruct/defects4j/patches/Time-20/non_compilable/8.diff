diff --git a/tmp/89b46af1-529d-4eab-923c-79dce950df2a_buggy.java b/tmp/a7138e6b-a96f-456d-b83a-2608b7300146_fixed.java
index ae6c2b1..246416e 100644
--- a/tmp/89b46af1-529d-4eab-923c-79dce950df2a_buggy.java
+++ b/tmp/a7138e6b-a96f-456d-b83a-2608b7300146_fixed.java
@@ -1,10 +1,23 @@
+/**
+ * Parses a time zone ID from the given text, starting at the specified position.
+ * 
+ * @param bucket  the bucket to store the parsed zone
+ * @param text    the text to parse
+ * @param position  the position to start parsing from
+ * @return the new position if parsed, ~position if not parsed
+ */
 public int parseInto(DateTimeParserBucket bucket, String text, int position) {
     String str = text.substring(position);
-            for (String id : ALL_IDS) {
+    // Sort IDs by length in descending order to avoid substring matches
+    for (String id : ALL_IDS.stream().sorted((a, b) -> Integer.compare(b.length(), a.length())).toArray(String[]::new)) {
         if (str.startsWith(id)) {
+            // Check if the ID is followed by a non-alphabetic character or end of string
+            int idLength = id.length();
+            if (idLength == str.length() ||!Character.isLetter(str.charAt(idLength))) {
                 bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
+                return position + idLength;
+            }
         }
     }
     return ~position;
 }
\ No newline at end of file
