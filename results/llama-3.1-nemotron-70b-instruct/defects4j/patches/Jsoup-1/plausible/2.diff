diff --git a/tmp/4feef33d-69cb-4227-b0a8-a3041d4671bd_buggy.java b/tmp/3d1a833a-d3e8-4ed5-a02e-20c5f0b9b983_fixed.java
index 00914da..8f6354c 100644
--- a/tmp/4feef33d-69cb-4227-b0a8-a3041d4671bd_buggy.java
+++ b/tmp/3d1a833a-d3e8-4ed5-a02e-20c5f0b9b983_fixed.java
@@ -1,17 +1,21 @@
-    // does not recurse.
+/**
+ * Normalises the given element by moving non-blank text nodes to the beginning of the body.
+ */
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
     for (Node node: element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+            if (!tn.isBlank() && element == body()) { // only consider text nodes within the body
                 toMove.add(tn);
             }
         }
+    }
 
+    // Move text nodes to the beginning of the body, not after each removal
     for (Node node: toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        body().prependChild(node); // prepend to maintain original order
+        body().prependChild(new TextNode(" ", "")); // add space after moved text node
     }
 }
\ No newline at end of file
