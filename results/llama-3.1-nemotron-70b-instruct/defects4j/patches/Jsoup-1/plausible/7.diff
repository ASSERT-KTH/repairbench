diff --git a/tmp/9839273c-ce68-4832-9659-136e4f6e18f2_buggy.java b/tmp/46a3e030-7e29-4365-852d-c26febadcf6d_fixed.java
index 00914da..c3ab5d1 100644
--- a/tmp/9839273c-ce68-4832-9659-136e4f6e18f2_buggy.java
+++ b/tmp/46a3e030-7e29-4365-852d-c26febadcf6d_fixed.java
@@ -1,17 +1,23 @@
-    // does not recurse.
+/**
+ * Move non-blank text nodes from the specified element to the beginning of the body.
+ * This is used to normalize the structure after parsing, to ensure text nodes are 
+ * in a consistent location (the start of the body), rather than scattered throughout.
+ */
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+            if (!tn.isBlank()) {
                 toMove.add(tn);
             }
         }
+    }
 
     for (Node node : toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        // Move to the beginning of the body, not append (which is why the test was failing)
+        body().prependChild(node);
+        // No need to append a new whitespace TextNode, as the original node is being moved
     }
 }
\ No newline at end of file
