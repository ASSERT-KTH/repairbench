diff --git a/tmp/1500b608-2934-4f77-89ed-8804a0f91d25_buggy.java b/tmp/204c4f31-d5dc-4297-a824-327c3cdea2fb_fixed.java
index 3c69e10..cac8f1d 100644
--- a/tmp/1500b608-2934-4f77-89ed-8804a0f91d25_buggy.java
+++ b/tmp/204c4f31-d5dc-4297-a824-327c3cdea2fb_fixed.java
@@ -1,27 +1,40 @@
 /**
  * @param Umin smallest Mann-Whitney U value
  * @param n1 number of subjects in first sample
  * @param n2 number of subjects in second sample
  * @return two-sided asymptotic p-value
  * @throws ConvergenceException if the p-value can not be computed
  * due to a convergence error
  * @throws MaxCountExceededException if the maximum number of
  * iterations is exceeded
  */
 private double calculateAsymptoticPValue(final double Umin,
                                          final int n1,
                                          final int n2)
     throws ConvergenceException, MaxCountExceededException {
 
     final int n1n2prod = n1 * n2;
 
     // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
     final double EU = n1n2prod / 2.0;
     final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
+    // Fix: Check for division by zero when calculating 'z'
+    if (VarU == 0) {
+        throw new ConvergenceException("Cannot calculate p-value due to zero variance");
+    }
+
     final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
+    // Fix: Handle cases where 'z' is too large for standardNormal.cumulativeProbability()
+    if (z > 6) { // approximate upper limit for most practical uses
+        return 0; // effectively zero probability for very large 'z'
+    } else if (z < -6) {
+        return 2 * (1 - standardNormal.cumulativeProbability(-6));
+    }
+
     final NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
-        return 2 * standardNormal.cumulativeProbability(z);
+    // Fix: Ensure p-value is within valid range [0, 1]
+    return Math.min(1, 2 * (1 - standardNormal.cumulativeProbability(Math.abs(z))));
 }
\ No newline at end of file
