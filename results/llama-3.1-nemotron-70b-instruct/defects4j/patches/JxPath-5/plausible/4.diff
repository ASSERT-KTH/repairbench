diff --git a/tmp/12a8e143-4f37-4c90-89ba-b89d8d8502d2_buggy.java b/tmp/b39ee079-d48a-49d7-ab02-4430e9d54979_fixed.java
index 5f8ac1a..73b3293 100644
--- a/tmp/12a8e143-4f37-4c90-89ba-b89d8d8502d2_buggy.java
+++ b/tmp/b39ee079-d48a-49d7-ab02-4430e9d54979_fixed.java
@@ -1,34 +1,39 @@
 private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
 {
+    // Added special handling for null or VariablePointer (assumed to be the case for '$var')
+    if (p1 instanceof VariablePointer || p2 instanceof VariablePointer) {
+        return p1.equals(p2)? 0 : (p1.hashCode() < p2.hashCode()? -1 : 1);
+    }
+    
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1!= null && p1.equals(p2)) {
         return 0;
     }
 
     if (depth1 == 1) {
         throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
     }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r!= 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
