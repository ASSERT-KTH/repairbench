diff --git a/tmp/23976854-d0c9-4ee9-ae2e-a1d9b36eb6b4_buggy.java b/tmp/561a2513-f061-469c-abd6-634cb8ee73e7_fixed.java
index b86b44d..d615cd4 100644
--- a/tmp/23976854-d0c9-4ee9-ae2e-a1d9b36eb6b4_buggy.java
+++ b/tmp/561a2513-f061-469c-abd6-634cb8ee73e7_fixed.java
@@ -1,4 +1,20 @@
+/**
+ * Fixed function to handle empty node sets correctly.
+ * 
+ * @param context Evaluation context
+ * @return Computed value as a Boolean object
+ */
 public final Object computeValue(EvalContext context) {
-        return compute(args[0].computeValue(context), args[1].computeValue(context))
-                ? Boolean.TRUE : Boolean.FALSE;
+    Object leftValue = args[0].computeValue(context);
+    Object rightValue = args[1].computeValue(context);
+    
+    // Check for empty node sets
+    if (leftValue instanceof NodeSet && ((NodeSet) leftValue).isEmpty()) {
+        return Boolean.FALSE; // or compute based on the specific operator's semantics for empty sets
+    }
+    if (rightValue instanceof NodeSet && ((NodeSet) rightValue).isEmpty()) {
+        return Boolean.FALSE; // or compute based on the specific operator's semantics for empty sets
+    }
+    
+    return compute(leftValue, rightValue)? Boolean.TRUE : Boolean.FALSE;
 }
\ No newline at end of file
