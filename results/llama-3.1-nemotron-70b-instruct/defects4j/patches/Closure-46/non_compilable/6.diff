diff --git a/tmp/7c7adfc9-5881-46cf-bd40-c2408178d427_buggy.java b/tmp/1935b071-715d-4894-9262-c055f38136de_fixed.java
index 46817a7..9a9d5f0 100644
--- a/tmp/7c7adfc9-5881-46cf-bd40-c2408178d427_buggy.java
+++ b/tmp/1935b071-715d-4894-9262-c055f38136de_fixed.java
@@ -1,16 +1,33 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+    // Add all properties from both record types to the builder
+    for (String property : getAllProperties(this, that)) {
+        JSType thisPropertyType = getPropertyType(property);
+        JSType thatPropertyType = that.getPropertyType(property);
+        // If both types have the property, use the least supertype of the property types
+        if (thisPropertyType!= null && thatPropertyType!= null) {
+            builder.addProperty(property, thisPropertyType.getLeastSupertype(thatPropertyType),
                 getPropertyNode(property));
         } 
+        // If only this type has the property, add it to the builder
+        else if (thisPropertyType!= null) {
+            builder.addProperty(property, thisPropertyType, getPropertyNode(property));
+        } 
+        // If only the other type has the property, add it to the builder
+        else {
+            builder.addProperty(property, thatPropertyType, that.getPropertyNode(property));
+        }
     }
     return builder.build();
 }
+
+// Helper method to get all unique properties from both record types
+private Set<String> getAllProperties(JSType type1, JSType type2) {
+    Set<String> properties = new HashSet<>(type1.getPropertyNames());
+    properties.addAll(type2.getPropertyNames());
+    return properties;
+}
\ No newline at end of file
