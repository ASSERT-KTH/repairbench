diff --git a/tmp/1a87ae3d-3666-4556-8456-ac4e226ee792_buggy.java b/tmp/1dc0f778-f024-43a5-b1c7-8ca7897372d2_fixed.java
index 46817a7..9089165 100644
--- a/tmp/1a87ae3d-3666-4556-8456-ac4e226ee792_buggy.java
+++ b/tmp/1dc0f778-f024-43a5-b1c7-8ca7897372d2_fixed.java
@@ -1,16 +1,23 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
   for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    if (that.toMaybeRecordType().hasProperty(property)) {
+      builder.addProperty(property, getLeastSupertypePropertyType(that, property));
     }
   }
-    return builder.build();
+  for (String property : that.toMaybeRecordType().properties().keySet()) {
+    if (!properties.containsKey(property)) {
+      builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property));
+    }
+  }
+  return builder.build().toMaybeUnionType().orElse(this);
+}
+
+// Helper method to get the least supertype property type
+private JSType getLeastSupertypePropertyType(JSType that, String property) {
+  return getPropertyType(property).getLeastSupertype(that.toMaybeRecordType().getPropertyType(property));
 }
\ No newline at end of file
