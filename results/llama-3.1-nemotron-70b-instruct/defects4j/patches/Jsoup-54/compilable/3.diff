diff --git a/tmp/3c664c0a-e192-4204-9d89-1ceb1eb6932f_buggy.java b/tmp/c594908b-465a-472d-9f64-1eec4b914941_fixed.java
index d5b3da9..097160b 100644
--- a/tmp/3c664c0a-e192-4204-9d89-1ceb1eb6932f_buggy.java
+++ b/tmp/c594908b-465a-472d-9f64-1eec4b914941_fixed.java
@@ -1,7 +1,20 @@
+/**
+ * Copies attributes from a Jsoup Node to a W3C Element, sanitizing attribute names to comply with XML standards.
+ * 
+ * @param source Jsoup Node containing attributes to copy
+ * @param el     W3C Element to receive the attributes
+ */
 private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
     for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
+        // Valid XML attribute names: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
+        // Sanitize by removing invalid characters and prefixing with a valid character if necessary
         String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
+        if (key.isEmpty() ||!key.matches("[a-zA-Z_].*")) { // Check if key is empty or does not start with a valid character
+            key = "_" + key; // Prefix with "_" to ensure validity
+        }
+        if (!key.equals(attribute.getKey())) { // Log or handle the renaming if necessary
+            System.out.println("Attribute key sanitized from '" + attribute.getKey() + "' to '" + key + "'");
+        }
         el.setAttribute(key, attribute.getValue());
     }
 }
\ No newline at end of file
