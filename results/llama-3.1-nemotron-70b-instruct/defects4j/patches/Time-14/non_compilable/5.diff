diff --git a/tmp/ca9ccce5-4e2c-4726-ab59-f90da9c2e535_buggy.java b/tmp/839a007b-5dd2-4738-98c0-d1940edc3c16_fixed.java
index 10616db..55351fd 100644
--- a/tmp/ca9ccce5-4e2c-4726-ab59-f90da9c2e535_buggy.java
+++ b/tmp/839a007b-5dd2-4738-98c0-d1940edc3c16_fixed.java
@@ -1,19 +1,27 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        
+        // Fix: Handle leap day case by setting the day to the last day of the month
+        // if the resulting month does not have the original day
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+        if (result[1] > partial.getDayOfMonth()) { // if day decreased (e.g., Feb 29 -> Mar 28)
+            result[1] = iChronology.dayOfMonth().getMaximumValue(result[0], result[1]); // set to last day of month
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
