diff --git a/tmp/d27a652c-225c-4bd8-8b6f-53803649f2ad_buggy.java b/tmp/c6f87628-0845-4edd-8006-92b96e267ea9_fixed.java
index 10616db..f5bf6aa 100644
--- a/tmp/d27a652c-225c-4bd8-8b6f-53803649f2ad_buggy.java
+++ b/tmp/c6f87628-0845-4edd-8006-92b96e267ea9_fixed.java
@@ -1,19 +1,38 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        
+        // Fix: Handle edge cases for February 29th
+        if (fieldIndex == 1 && values[1] == 29) { // 1 is the index for months (0-based)
+            try {
                 instant = add(instant, valueToAdd);
+            } catch (IllegalFieldValueException e) {
+                // If the addition results in an invalid date (e.g., Feb 30th), adjust the day to the last valid day of the month
+                int newMonth = (values[0] + valueToAdd) % 12; // 0 is the index for year, but we only care about the month here
+                if (newMonth == 0) newMonth = 12; // December
+                int lastValidDayOfMonth = iChronology.dayOfMonth().getMaximumValue(partial.getFieldType(0).getField(iChronology).set(instant, newMonth));
+                values[1] = lastValidDayOfMonth; // Adjust the day
+                for (int i = 0, isize = partial.size(); i < isize; i++) {
+                    instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+                }
+            }
+        } else {
+            instant = add(instant, valueToAdd);
+        }
+        
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
