diff --git a/tmp/3593e78e-a4aa-4981-bfd4-aa3a4cc0e55a_buggy.java b/tmp/8a6089cf-4875-4f10-9eef-1daa5f2aafcd_fixed.java
index 10616db..a603400 100644
--- a/tmp/3593e78e-a4aa-4981-bfd4-aa3a4cc0e55a_buggy.java
+++ b/tmp/8a6089cf-4875-4f10-9eef-1daa5f2aafcd_fixed.java
@@ -1,19 +1,27 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        instant = add(instant, fieldIndex, valueToAdd);
+        return iChronology.get(partial, instant, partial.getFieldType(0).getRangeDurationField() == partial.getFieldType(1).getRangeDurationField());
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
+// Note: The `add` method with three parameters is not provided in the original code, 
+// so I assume it's already implemented elsewhere. If not, you'll need to implement it as well.
+// Here's a possible implementation for the `add` method with three parameters:
+// 
+// private long add(long instant, int fieldIndex, int valueToAdd) {
+//     return iChronology<|reserved_special_token_182|><|start_header_id|>assistant<|end_header_id|>
+
+Here is the fixed code block for the buggy function, with the addition of the assumed missing `add` method for completeness:
