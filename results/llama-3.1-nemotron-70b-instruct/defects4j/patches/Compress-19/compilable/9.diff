diff --git a/tmp/c9cc79a8-cec7-4312-99d4-4dd0707f2528_buggy.java b/tmp/61088be2-30a1-4fdf-aafc-31c779cb74fd_fixed.java
index 730ab7d..9eae720 100644
--- a/tmp/c9cc79a8-cec7-4312-99d4-4dd0707f2528_buggy.java
+++ b/tmp/61088be2-30a1-4fdf-aafc-31c779cb74fd_fixed.java
@@ -1,48 +1,54 @@
 /**
  * Parses the raw bytes read from the central directory extra
  * field with knowledge which fields are expected to be there.
  *
  * <p>All four fields inside the zip64 extended information extra
  * field are optional and must only be present if their corresponding
  * entry inside the central directory contains the correct magic
  * value.</p>
  */
 public void reparseCentralDirectoryData(boolean hasUncompressedSize,
                                         boolean hasCompressedSize,
                                         boolean hasRelativeHeaderOffset,
                                         boolean hasDiskStart)
     throws ZipException {
     if (rawCentralDirectoryData!= null) {
         int expectedLength = (hasUncompressedSize? DWORD : 0)
             + (hasCompressedSize? DWORD : 0)
             + (hasRelativeHeaderOffset? DWORD : 0)
-                + (hasDiskStart ? WORD : 0);
-            if (rawCentralDirectoryData.length != expectedLength) {
-                throw new ZipException("central directory zip64 extended"
-                                       + " information extra field's length"
-                                       + " doesn't match central directory"
-                                       + " data.  Expected length "
-                                       + expectedLength + " but is "
-                                       + rawCentralDirectoryData.length);
-            }
+            + (hasDiskStart? DWORD : 0); // Fix: Changed WORD to DWORD
+        int actualLength = 0;
         int offset = 0;
         if (hasUncompressedSize) {
+            actualLength += DWORD;
             size = new ZipEightByteInteger(rawCentralDirectoryData, offset);
             offset += DWORD;
         }
         if (hasCompressedSize) {
+            actualLength += DWORD;
             compressedSize = new ZipEightByteInteger(rawCentralDirectoryData,
                                                      offset);
             offset += DWORD;
         }
         if (hasRelativeHeaderOffset) {
+            actualLength += DWORD;
             relativeHeaderOffset =
                 new ZipEightByteInteger(rawCentralDirectoryData, offset);
             offset += DWORD;
         }
         if (hasDiskStart) {
+            actualLength += DWORD; // Fix: Using DWORD consistently
             diskStart = new ZipLong(rawCentralDirectoryData, offset);
-                offset += WORD;
+            offset += DWORD; // Fix: Using DWORD consistently
         }
+        if (offset > rawCentralDirectoryData.length) {
+            throw new ZipException("central directory zip64 extended"
+                                   + " information extra field's length"
+                                   + " doesn't match central directory"
+                                   + " data.  Expected at least "
+                                   + actualLength + " bytes but is "
+                                   + rawCentralDirectoryData.length);
+        }
+        // Ignore excess data, allowing for optional trailing fields
     }
 }
\ No newline at end of file
