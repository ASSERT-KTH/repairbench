diff --git a/tmp/b22a03af-c269-47aa-b379-e6741d687655_buggy.java b/tmp/d7696d61-e8ba-473b-bc92-3b352afefd7e_fixed.java
index 8e93a5e..eaf5946 100644
--- a/tmp/b22a03af-c269-47aa-b379-e6741d687655_buggy.java
+++ b/tmp/d7696d61-e8ba-473b-bc92-3b352afefd7e_fixed.java
@@ -1,43 +1,55 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
+    // characters, but only if nextLineTabStop is greater than 0
+    final String padding = (nextLineTabStop > 0)? createPadding(nextLineTabStop) : "";
 
     while (true)
     {
-            text = padding + text.substring(pos).trim();
+        String remainingText = text.substring(pos).trim();
+        if (remainingText.startsWith("\n")) { // preserve original new lines
+            String[] lines = remainingText.split("\n", 2);
+            sb.append(lines[0]).append(defaultNewLine);
+            if (lines.length > 1) {
+                sb.append(padding); // add padding after the first line
+                text = lines[1];
+            } else {
+                return sb; // end of text
+            }
+        } else {
+            text = padding + remainingText;
             pos = findWrapPos(text, width, nextLineTabStop);
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
+}
\ No newline at end of file
