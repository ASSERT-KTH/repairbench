diff --git a/tmp/29a33e99-8849-44dd-91ea-9578fcfe13a2_buggy.java b/tmp/4f02836c-ed58-43b1-bbd0-8fb574926ea6_fixed.java
index 8e93a5e..83781eb 100644
--- a/tmp/29a33e99-8849-44dd-91ea-9578fcfe13a2_buggy.java
+++ b/tmp/4f02836c-ed58-43b1-bbd0-8fb574926ea6_fixed.java
@@ -1,43 +1,48 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
+        // Fix: only add padding if not at the start of the original text
+        if (pos > 0) {
             text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        } else {
+            text = text.substring(pos).trim();
+        }
+        pos = findWrapPos(text, width - nextLineTabStop, 0); // Adjust width for padding
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
