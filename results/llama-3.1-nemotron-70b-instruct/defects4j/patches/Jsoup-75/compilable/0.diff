diff --git a/tmp/6130c79a-4365-41dc-bc2b-cb767d22ee68_buggy.java b/tmp/ad43ef47-8c2e-4291-8833-bb8faa02724c_fixed.java
index 98b456f..99c9eed 100644
--- a/tmp/6130c79a-4365-41dc-bc2b-cb767d22ee68_buggy.java
+++ b/tmp/ad43ef47-8c2e-4291-8833-bb8faa02724c_fixed.java
@@ -1,17 +1,21 @@
 final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
     final int sz = size;
     for (int i = 0; i < sz; i++) {
         // inlined from Attribute.html()
         final String key = keys[i];
         final String val = vals[i];
         accum.append(' ').append(key);
 
         // collapse checked=null, checked="", checked=checked; write out others
         if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            && val == null && Attribute.isBooleanAttribute(key))) { // FIX: only collapse if val is null
+            if (Attribute.isBooleanAttribute(key) && val.equals("false")) { // FIX: explicitly output "false" for boolean attributes
+                accum.append("=\"").append(val).append('"');
+            } else if (val!= null ||!Attribute.isBooleanAttribute(key)) { // FIX: ensure val is not null or key is not boolean attribute
                 accum.append("=\"");
                 Entities.escape(accum, val == null? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
         }
     }
+}
\ No newline at end of file
