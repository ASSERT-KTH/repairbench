diff --git a/tmp/6a3ea0fc-1a9c-4c19-9802-23690718c686_buggy.java b/tmp/fb43bfa5-2622-44a3-a671-195762c358da_fixed.java
index ef76662..e728c34 100644
--- a/tmp/6a3ea0fc-1a9c-4c19-9802-23690718c686_buggy.java
+++ b/tmp/fb43bfa5-2622-44a3-a671-195762c358da_fixed.java
@@ -1,17 +1,24 @@
+/**
+ * Fixed version of the read function to handle self-closing tags correctly.
+ */
 void read(Tokeniser t, CharacterReader r) {
     char c = r.consume();
     switch (c) {
         case '>':
+            // Check if the next character is a '/' before emitting the tag as self-closing
+            if (r.match('/')) {
+                r.consume(); // Consume the '/' character
                 t.tagPending.selfClosing = true;
+            }
             t.emitTagPending();
             t.transition(Data);
             break;
         case eof:
             t.eofError(this);
             t.transition(Data);
             break;
         default:
             t.error(this);
             t.transition(BeforeAttributeName);
     }
 }
\ No newline at end of file
