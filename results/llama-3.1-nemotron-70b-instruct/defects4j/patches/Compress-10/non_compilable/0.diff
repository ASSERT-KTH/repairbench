diff --git a/tmp/ecfd90af-8d18-43b7-b844-6fdaa78961f4_buggy.java b/tmp/0f5953b4-3ed8-419a-ab01-1f39a805a630_fixed.java
index 85e6a42..445da70 100644
--- a/tmp/ecfd90af-8d18-43b7-b844-6fdaa78961f4_buggy.java
+++ b/tmp/0f5953b4-3ed8-419a-ab01-1f39a805a630_fixed.java
@@ -1,50 +1,59 @@
 /**
  * Walks through all recorded entries and adds the data available
  * from the local file header.
  *
  * <p>Also records the offsets for the data to read from the
  * entries.</p>
  */
 private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                                         entriesWithoutUTF8Flag)
     throws IOException {
     // changing the name of a ZipArchiveEntry is going to change
     // the hashcode - see COMPRESS-164
     // Map needs to be reconstructed in order to keep central
     // directory order
     for (ZipArchiveEntry ze : entries.keySet()) {
         OffsetEntry offsetEntry = entries.get(ze);
         long offset = offsetEntry.headerOffset;
         archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
         byte[] b = new byte[SHORT];
         archive.readFully(b);
         int fileNameLen = ZipShort.getValue(b);
         archive.readFully(b);
         int extraFieldLen = ZipShort.getValue(b);
-            int lenToSkip = fileNameLen;
+        // Fix: Read and process the filename before skipping
+        byte[] fileNameBytes = new byte[fileNameLen];
+        archive.readFully(fileNameBytes);
+        // lenToSkip should be the remaining bytes after reading the filename
+        int lenToSkip = extraFieldLen;
         while (lenToSkip > 0) {
             int skipped = archive.skipBytes(lenToSkip);
             if (skipped <= 0) {
-                    throw new RuntimeException("failed to skip file name in"
+                throw new RuntimeException("failed to skip extra field in"
                                            + " local file header");
             }
             lenToSkip -= skipped;
         }
-            byte[] localExtraData = new byte[extraFieldLen];
-            archive.readFully(localExtraData);
-            ze.setExtra(localExtraData);
-            offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
-                + SHORT + SHORT + fileNameLen + extraFieldLen;
+        // Fix: Set the dataOffset after correctly skipping the extra fields
+        offsetEntry.dataOffset = archive.getPos();
+        ze.setExtra(extractExtraField(archive, extraFieldLen));
 
         if (entriesWithoutUTF8Flag.containsKey(ze)) {
             String orig = ze.getName();
             NameAndComment nc = entriesWithoutUTF8Flag.get(ze);
             ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,
                                                      nc.comment);
             if (!orig.equals(ze.getName())) {
                 nameMap.remove(orig);
                 nameMap.put(ze.getName(), ze);
             }
         }
     }
 }
+
+// Helper method for extracting extra field (added for clarity)
+private byte[] extractExtraField(RAFInputStream archive, int extraFieldLen) throws IOException {
+    byte[] localExtraData = new byte[extraFieldLen];
+    archive.readFully(localExtraData);
+    return localExtraData;
+}
\ No newline at end of file
