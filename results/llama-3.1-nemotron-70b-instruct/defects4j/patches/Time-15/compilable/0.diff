diff --git a/tmp/24d79b36-a0c9-47b8-8813-6b130c01c555_buggy.java b/tmp/d294e89e-6147-4671-aeca-445955ac30bc_fixed.java
index a9a5e27..32b199d 100644
--- a/tmp/24d79b36-a0c9-47b8-8813-6b130c01c555_buggy.java
+++ b/tmp/d294e89e-6147-4671-aeca-445955ac30bc_fixed.java
@@ -1,24 +1,19 @@
 /**
  * Multiply two values throwing an exception if overflow occurs.
  * 
  * @param val1  the first value
  * @param val2  the second value
  * @return the new total
  * @throws ArithmeticException if the value is too big or too small
  * @since 1.2
  */
 public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                return -val1;
-            case 0:
-                return 0L;
-            case 1:
-                return val1;
+    long total = val1 * (long) val2;
+    if (total!= (long) ((long) val1 * val2)) { // Check for overflow before cast
+        throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+    if (total < Long.MIN_VALUE || total > Long.MAX_VALUE) { // Explicit overflow check
         throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
     return total;
 }
\ No newline at end of file
