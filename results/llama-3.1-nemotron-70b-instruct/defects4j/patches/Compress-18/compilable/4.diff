diff --git a/tmp/bfc9f0f7-420d-4864-8f38-9e787843fcaf_buggy.java b/tmp/03ed4656-6167-41a6-9afb-d5a5967c0f8c_fixed.java
index 08093b4..15be0d1 100644
--- a/tmp/bfc9f0f7-420d-4864-8f38-9e787843fcaf_buggy.java
+++ b/tmp/03ed4656-6167-41a6-9afb-d5a5967c0f8c_fixed.java
@@ -1,42 +1,29 @@
 /**
  * Writes a PAX extended header with the given map as contents.
  * @since 1.4
  */
 void writePaxHeaders(String entryName,
                      Map<String, String> headers) throws IOException {
     String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
         // TarEntry's constructor would think this is a directory
         // and not allow any data to be written
     if (name.length() >= TarConstants.NAMELEN) {
         name = name.substring(0, TarConstants.NAMELEN - 1);
     }
     TarArchiveEntry pex = new TarArchiveEntry(name,
                                               TarConstants.LF_PAX_EXTENDED_HEADER_LC);
 
     StringWriter w = new StringWriter();
     for (Map.Entry<String, String> h : headers.entrySet()) {
         String key = h.getKey();
         String value = h.getValue();
-            int len = key.length() + value.length()
-                + 3 /* blank, equals and newline */
-                + 2 /* guess 9 < actual length < 100 */;
-            String line = len + " " + key + "=" + value + "\n";
-            int actualLength = line.getBytes(CharsetNames.UTF_8).length;
-            while (len != actualLength) {
-                // Adjust for cases where length < 10 or > 100
-                // or where UTF-8 encoding isn't a single octet
-                // per character.
-                // Must be in loop as size may go from 99 to 100 in
-                // first pass so we'd need a second.
-                len = actualLength;
-                line = len + " " + key + "=" + value + "\n";
-                actualLength = line.getBytes(CharsetNames.UTF_8).length;
+        // Directly write the key-value pair without guessing the length
+        w.write(key + "=" + value + "\n");
     }
-            w.write(line);
-        }
-        byte[] data = w.toString().getBytes(CharsetNames.UTF_8);
+    String headerContent = w.toString();
+    byte[] data = headerContent.getBytes(CharsetNames.UTF_8);
     pex.setSize(data.length);
     putArchiveEntry(pex);
     write(data);
     closeArchiveEntry();
 }
\ No newline at end of file
