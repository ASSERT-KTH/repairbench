diff --git a/tmp/91e4d395-f9fd-44c7-b7fc-350314876d4b_buggy.java b/tmp/3e17c790-bb10-409b-8791-ae5ebf2065c2_fixed.java
index 98dde53..891d66b 100644
--- a/tmp/91e4d395-f9fd-44c7-b7fc-350314876d4b_buggy.java
+++ b/tmp/3e17c790-bb10-409b-8791-ae5ebf2065c2_fixed.java
@@ -1,34 +1,45 @@
+/**
+ * Handles the head element of the DOM tree, resolving namespaces and creating corresponding W3C DOM elements.
+ * 
+ * @param source  The current Jsoup Node being processed.
+ * @param depth   The current recursion depth.
+ */
 public void head(org.jsoup.nodes.Node source, int depth) {
     namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
     if (source instanceof org.jsoup.nodes.Element) {
         org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
         String prefix = updateNamespaces(sourceEl);
         String namespace = namespacesStack.peek().get(prefix);
         String tagName = sourceEl.tagName();
 
+        // Check if namespace is declared, if not treat as local name
+        if (namespace == null) {
+            Element el = doc.createElement(tagName); // Create without namespace
+        } else {
             Element el =
                 doc.createElementNS(namespace, tagName);
             copyAttributes(sourceEl, el);
+        }
         if (dest == null) { // sets up the root
             doc.appendChild(el);
         } else {
             dest.appendChild(el);
         }
         dest = el; // descend
     } else if (source instanceof org.jsoup.nodes.TextNode) {
         org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
         Text text = doc.createTextNode(sourceText.getWholeText());
         dest.appendChild(text);
     } else if (source instanceof org.jsoup.nodes.Comment) {
         org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
         Comment comment = doc.createComment(sourceComment.getData());
         dest.appendChild(comment);
     } else if (source instanceof org.jsoup.nodes.DataNode) {
         org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
         Text node = doc.createTextNode(sourceData.getWholeData());
         dest.appendChild(node);
     } else {
         // unhandled
     }
 }
\ No newline at end of file
