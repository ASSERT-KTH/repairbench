diff --git a/tmp/37cf89da-7b7c-413c-82e1-f91497aa4bfa_buggy.java b/tmp/a9c0464f-8a31-4219-b79a-3956da3b90ea_fixed.java
index 1a63a66..4c97c95 100644
--- a/tmp/37cf89da-7b7c-413c-82e1-f91497aa4bfa_buggy.java
+++ b/tmp/a9c0464f-8a31-4219-b79a-3956da3b90ea_fixed.java
@@ -1,21 +1,28 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
+    // Check for sub-class or sub-interface relationship
+    if (!_class.isAssignableFrom(subclass) &&!isInterfaceImplemented(_class, subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
-                    */
+    }
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+}
+
+// Helper method to check if an interface is implemented by a class
+private boolean isInterfaceImplemented(Class<?> interfaceClass, Class<?> subclass) {
+    for (Class<?> intf : subclass.getInterfaces()) {
+        if (intf == interfaceClass || isInterfaceImplemented(interfaceClass, intf)) {
+            return true;
+        }
+    }
+    if (subclass.getSuperclass()!= null) {
+        return isInterfaceImplemented(interfaceClass, subclass.getSuperclass());
+    }
+    return false;
 }
\ No newline at end of file
