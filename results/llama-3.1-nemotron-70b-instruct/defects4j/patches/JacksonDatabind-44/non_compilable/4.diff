diff --git a/tmp/e81f8632-4590-445c-963d-e92a751609bc_buggy.java b/tmp/835afb23-aaf8-4920-9b05-6bd4cbdf81b8_fixed.java
index 1a63a66..dd527df 100644
--- a/tmp/e81f8632-4590-445c-963d-e92a751609bc_buggy.java
+++ b/tmp/835afb23-aaf8-4920-9b05-6bd4cbdf81b8_fixed.java
@@ -1,21 +1,26 @@
+/**
+ * @deprecated
+ * 
+ * @since 2.7
+ * 
+ * @param subclass Target type to convert to (if compatible)
+ * @return Instance of `subclass` if it is a subtype of current type, `this` if types are identical;
+ *   `null` otherwise (should never happen but is here for completeness/safety)
+ */
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+    // Check that there is a sub-class or sub-interface relationship
+    if (_class.isAssignableFrom(subclass) || 
+        (_superInterfaces!= null && _superInterfaces.contains(subclass))) {
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+    } else {
+        throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
+                +_class.getName());
+    }
 }
\ No newline at end of file
