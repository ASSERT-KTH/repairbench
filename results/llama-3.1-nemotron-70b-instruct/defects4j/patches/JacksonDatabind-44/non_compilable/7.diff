diff --git a/tmp/7c9b9c9c-5708-4d31-8d6f-b480060c59f3_buggy.java b/tmp/32e9d966-3905-4af0-9cc3-48a8ad37bd2b_fixed.java
index 1a63a66..2100add 100644
--- a/tmp/7c9b9c9c-5708-4d31-8d6f-b480060c59f3_buggy.java
+++ b/tmp/32e9d966-3905-4af0-9cc3-48a8ad37bd2b_fixed.java
@@ -1,21 +1,19 @@
 @Override
 @Deprecated
-    protected JavaType _narrow(Class<?> subclass)
-    {
+protected JavaType _narrow(Class<?> subclass) {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
+    // Check for sub-class or sub-interface relationship
+    if (!_class.isAssignableFrom(subclass) && 
+       !Arrays.stream(_superInterfaces).anyMatch(iface -> iface.isAssignableFrom(subclass))) {
         throw new IllegalArgumentException("Class " + subclass.getName() + " not sub-type of " 
                                            + _class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+    }
+    return new SimpleType(subclass, _bindings, this, 
+                          // Inherit super-interfaces if not already implemented by subclass
+                          Arrays.stream(_superInterfaces)
+                               .filter(iface ->!subclass.isAssignableFrom(iface))
+                               .toArray(Class<?>[]::new),
                           _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
