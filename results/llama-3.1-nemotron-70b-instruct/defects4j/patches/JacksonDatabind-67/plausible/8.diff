diff --git a/tmp/26048f9b-4f28-4ad1-a7bc-54c108ee7485_buggy.java b/tmp/60e77d2e-3f98-4fc2-a50f-04432b2456c0_fixed.java
index bc80637..b6be1f6 100644
--- a/tmp/26048f9b-4f28-4ad1-a7bc-54c108ee7485_buggy.java
+++ b/tmp/60e77d2e-3f98-4fc2-a50f-04432b2456c0_fixed.java
@@ -1,33 +1,41 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
         throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser!= null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
-            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
-        }
-        // and then post-processing
-        if (deser != null) {
+            // FIX: Apply deserializer modifiers *before* creating the enum key deserializer
             if (_factoryConfig.hasDeserializerModifiers()) {
+                for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+                    deser = mod.modifyKeyDeserializer(config, type, null); // null indicates to create a new one
+                    if (deser!= null) {
+                        break;
+                    }
+                }
+            }
+            if (deser == null) { // if no modifier created one, create the default enum key deserializer
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            }
+        } else {
+            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
+        }
+    } else if (_factoryConfig.hasDeserializerModifiers()) {
+        // post-processing for non-enum types or if a custom key deserializer was found
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
             deser = mod.modifyKeyDeserializer(config, type, deser);
         }
     }
-        }
     return deser;
 }
\ No newline at end of file
