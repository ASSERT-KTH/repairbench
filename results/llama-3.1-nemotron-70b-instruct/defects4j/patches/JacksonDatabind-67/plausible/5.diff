diff --git a/tmp/122aab1a-d8bd-4d01-8e94-56cdc3fbc916_buggy.java b/tmp/760d7ea2-d43d-4f6a-b442-cfef1c903a9f_fixed.java
index bc80637..8c0f637 100644
--- a/tmp/122aab1a-d8bd-4d01-8e94-56cdc3fbc916_buggy.java
+++ b/tmp/760d7ea2-d43d-4f6a-b442-cfef1c903a9f_fixed.java
@@ -1,33 +1,41 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
                                             JavaType type)
         throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser!= null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
-            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
-        }
-        // and then post-processing
-        if (deser != null) {
+            // Fix: Apply modifier before creating default EnumKeyDeserializer
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
+                    if (deser!= null) {
+                        break;
                     }
                 }
             }
+            if (deser == null) {
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            }
+        } else {
+            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
+        }
+    } else if (_factoryConfig.hasDeserializerModifiers()) {
+        // Post-processing: Apply modifiers to existing deserializer
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+        }
+    }
     return deser;
 }
\ No newline at end of file
