diff --git a/tmp/6322b669-0a2c-433c-8f30-c6bb774f7ca4_buggy.java b/tmp/c086748b-b398-40d8-a0c4-aec48dec587f_fixed.java
index bc80637..591c400 100644
--- a/tmp/6322b669-0a2c-433c-8f30-c6bb774f7ca4_buggy.java
+++ b/tmp/c086748b-b398-40d8-a0c4-aec48dec587f_fixed.java
@@ -1,33 +1,40 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
         throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser!= null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
-        if (deser == null) {
-            if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
-            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
-        }
-        // and then post-processing
-        if (deser != null) {
+    // Fix: Check for modifier first, then fall back to standard deserializers
+    if (deser == null || _factoryConfig.hasDeserializerModifiers()) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+                if (deser == null) {
+                    if (type.isEnumType()) {
+                        deser = mod.modifyKeyDeserializer(config, type, _createEnumKeyDeserializer(ctxt, type));
+                    } else {
+                        deser = mod.modifyKeyDeserializer(config, type, StdKeyDeserializers.findStringBasedKeyDeserializer(config, type));
+                    }
+                } else {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
+        } else { // no modifiers, use standard deserializers
+            if (type.isEnumType()) {
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            } else {
+                deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
+            }
+        }
     }
     return deser;
 }
\ No newline at end of file
