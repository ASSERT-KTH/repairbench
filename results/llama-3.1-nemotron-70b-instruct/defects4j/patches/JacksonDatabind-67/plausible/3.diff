diff --git a/tmp/adaa3a85-49a6-4aa3-9f09-39ff3fb2a4c6_buggy.java b/tmp/93f94ff4-0039-4712-b700-cadb16736d2c_fixed.java
index bc80637..252ae86 100644
--- a/tmp/adaa3a85-49a6-4aa3-9f09-39ff3fb2a4c6_buggy.java
+++ b/tmp/93f94ff4-0039-4712-b700-cadb16736d2c_fixed.java
@@ -1,33 +1,30 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt, 
-            JavaType type)
-        throws JsonMappingException
-    {
+        JavaType type) throws JsonMappingException {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser!= null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
-        if (deser == null) {
-            if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+    // Check for enum type **before** defaulting to string-based deserializer
+    if (deser == null && type.isEnumType()) {
+        deser = _createEnumKeyDeserializer(ctxt, type);
+    } else if (deser == null) {
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
-        // and then post-processing
+    // Apply modifiers after (potential) enum deserializer creation
     if (deser!= null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
     return deser;
 }
\ No newline at end of file
