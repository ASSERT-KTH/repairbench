diff --git a/tmp/b0153a05-327f-45f2-a95a-41c09e714d18_buggy.java b/tmp/85fe79b7-0f59-4ab3-8436-1872753665ca_fixed.java
index bc80637..9785c19 100644
--- a/tmp/b0153a05-327f-45f2-a95a-41c09e714d18_buggy.java
+++ b/tmp/85fe79b7-0f59-4ab3-8436-1872753665ca_fixed.java
@@ -1,33 +1,32 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser!= null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // Fix: Apply modifier before enum handling to allow customization
+    if (deser!= null && _factoryConfig.hasDeserializerModifiers()) {
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+        }
+    }
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+            deser = _createEnumKeyDeserializer(ctxt, type);
+        } else {
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
-                for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
-                    deser = mod.modifyKeyDeserializer(config, type, deser);
-                }
-            }
     }
+    // Additional post-processing not needed, already applied above if applicable
     return deser;
 }
\ No newline at end of file
