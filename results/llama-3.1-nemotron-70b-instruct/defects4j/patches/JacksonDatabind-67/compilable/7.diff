diff --git a/tmp/59af78ff-177c-4291-8d92-51ac06a94103_buggy.java b/tmp/b757b9a4-cdbd-46e5-9ebb-0e862b5a0fa0_fixed.java
index bc80637..4a2f8bd 100644
--- a/tmp/59af78ff-177c-4291-8d92-51ac06a94103_buggy.java
+++ b/tmp/b757b9a4-cdbd-46e5-9ebb-0e862b5a0fa0_fixed.java
@@ -1,33 +1,32 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser!= null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // Fix: Apply modifier before checking for enum type
+    if (deser!= null && _factoryConfig.hasDeserializerModifiers()) {
+        for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+            deser = mod.modifyKeyDeserializer(config, type, deser);
+        }
+    }
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+            deser = _createEnumKeyDeserializer(ctxt, type);
+        } else {
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
-                for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
-                    deser = mod.modifyKeyDeserializer(config, type, deser);
-                }
-            }
     }
+    // Additional modifiers shouldn't overwrite the explicitly created enum deserializer
     return deser;
 }
\ No newline at end of file
