diff --git a/tmp/3c4afcc5-f806-46a8-b456-78d313a2d44d_buggy.java b/tmp/6a1b392b-18aa-41d6-b31b-6fdd7ca8a71f_fixed.java
index 19fe1b4..a66f83f 100644
--- a/tmp/3c4afcc5-f806-46a8-b456-78d313a2d44d_buggy.java
+++ b/tmp/6a1b392b-18aa-41d6-b31b-6fdd7ca8a71f_fixed.java
@@ -1,17 +1,36 @@
+/**
+ * Checks if a string is a valid JavaScript identifier.
+ * 
+ * Note: JavaScript identifiers are similar to Java identifiers but with some differences.
+ *       This function adheres to the JavaScript specification (ECMA-262) for identifiers.
+ * 
+ * @param s the input string to check
+ * @return true if the string is a valid JavaScript identifier, false otherwise
+ */
 public static boolean isJSIdentifier(String s) {
     int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+    // JavaScript identifiers cannot be empty
+    if (length == 0) {
         return false;
     }
     
+    // First character must be a UnicodeLetter, UnicodeEscapeSeq, _, or $
+    if (!Character.isLetter(s.charAt(0)) && 
+       !"$_.\\".indexOf(s.charAt(0)) >= 0 && 
+       !(s.length() > 1 && s.startsWith("\\u"))) {
+        return false;
+    }
+    
+    // Rest of the characters must be UnicodeLetter, UnicodeDigit, _, or $
     for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        char c = s.charAt(i);
+        if (!Character.isLetterOrDigit(c) && 
+           !"$_.\\".indexOf(c) >= 0 && 
+           !(i > 1 && s.startsWith("\\u", i-1))) {
             return false;
         }
     }
 
     return true;
 }
\ No newline at end of file
