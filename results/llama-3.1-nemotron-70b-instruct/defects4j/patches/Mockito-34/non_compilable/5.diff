diff --git a/tmp/52b450ff-679b-44a6-b39e-afb65d67edaf_buggy.java b/tmp/5e134c46-ef95-4d09-8c2f-a7725db76f46_fixed.java
index d68a69c..6ed28f0 100644
--- a/tmp/52b450ff-679b-44a6-b39e-afb65d67edaf_buggy.java
+++ b/tmp/5e134c46-ef95-4d09-8c2f-a7725db76f46_fixed.java
@@ -1,9 +1,25 @@
+/**
+ * Captures arguments from the given invocation, handling variable-length argument matchers.
+ */
 public void captureArgumentsFrom(Invocation i) {
+    Object[] args = i.getArguments();
     int k = 0;
     for (Matcher m : matchers) {
         if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
+            if (k < args.length) { // Check if k is within bounds
+                if (m instanceof AnyVararg) { // Handle vararg matchers
+                    ((CapturesArguments) m).captureFrom(Arrays.copyOfRange(args, k, args.length));
+                    break; // Consume all remaining args for vararg matchers
+                } else {
+                    ((CapturesArguments) m).captureFrom(args[k]);
                 }
                 k++;
+            } else {
+                // Handle mismatch in argument counts, e.g., when using anyVararg() with no args
+                ((CapturesArguments) m).captureFrom(null); // or some other default behavior
+            }
+        } else {
+            k++; // Increment even if not capturing, to maintain index accuracy
+        }
     }
 }
\ No newline at end of file
