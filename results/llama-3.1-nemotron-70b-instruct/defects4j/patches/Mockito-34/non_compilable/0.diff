diff --git a/tmp/43a789b6-7c5f-4646-85b7-0756cefe5aa2_buggy.java b/tmp/6377df0a-9394-495e-97dd-1453699ef910_fixed.java
index d68a69c..5f729c4 100644
--- a/tmp/43a789b6-7c5f-4646-85b7-0756cefe5aa2_buggy.java
+++ b/tmp/6377df0a-9394-495e-97dd-1453699ef910_fixed.java
@@ -1,9 +1,29 @@
+/**
+ * Captures arguments from the given invocation, handling varargs matchers correctly.
+ * 
+ * @param i the invocation to capture arguments from
+ */
 public void captureArgumentsFrom(Invocation i) {
+    Object[] args = i.getArguments();
     int k = 0;
     for (Matcher m : matchers) {
         if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
+            if (m instanceof AnyVararg && k == args.length - 1) {
+                // Handle varargs case, pass the remaining arguments
+                ((CapturesArguments) m).captureFrom(Arrays.copyOfRange(args, k, args.length));
+                // Consume all remaining arguments
+                k = args.length;
+            } else if (k < args.length) {
+                // Handle non-varargs case, pass single argument
+                ((CapturesArguments) m).captureFrom(args[k]);
+                k++;
+            } else {
+                // Not enough arguments, do nothing or throw an exception (depending on the desired behavior)
+                // For now, do nothing
+                break;
             }
+        } else {
             k++;
         }
     }
+}
\ No newline at end of file
