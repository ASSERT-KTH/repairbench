diff --git a/tmp/74f64641-7c47-42ec-8f3c-dda893f6b203_buggy.java b/tmp/8c99f80b-abdf-4477-80b8-836964492183_fixed.java
index d68a69c..6b1b737 100644
--- a/tmp/74f64641-7c47-42ec-8f3c-dda893f6b203_buggy.java
+++ b/tmp/8c99f80b-abdf-4477-80b8-836964492183_fixed.java
@@ -1,9 +1,25 @@
+/**
+ * Captures arguments from the given invocation, considering variable arguments matchers.
+ * 
+ * @param i the invocation from which to capture arguments
+ */
 public void captureArgumentsFrom(Invocation i) {
+    Object[] args = i.getArguments();
     int k = 0;
     for (Matcher m : matchers) {
         if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
-            }
+            if (k < args.length) { // Check if k is within bounds
+                if (m instanceof LocalizedMatcher && ((LocalizedMatcher) m).getMatcher() instanceof AnyVararg) {
+                    // Handle vararg case, capture all remaining arguments
+                    ((CapturesArguments) m).captureFrom(Arrays.copyOfRange(args, k, args.length));
+                    k = args.length; // Skip remaining matchers
+                } else {
+                    ((CapturesArguments) m).captureFrom(args[k]);
                     k++;
                 }
             }
+        } else {
+            k++; // Increment k even if matcher doesn't capture arguments
+        }
+    }
+}
\ No newline at end of file
