diff --git a/tmp/90bdc5fe-8d7d-43eb-a008-f704a4bd2010_buggy.java b/tmp/6ce0be19-2c2a-47f9-b789-41d805729032_fixed.java
index b36b2a9..23f2b4c 100644
--- a/tmp/90bdc5fe-8d7d-43eb-a008-f704a4bd2010_buggy.java
+++ b/tmp/6ce0be19-2c2a-47f9-b789-41d805729032_fixed.java
@@ -1,26 +1,29 @@
+/**
+ * Computes the greatest subtype of this type and the given type.
+ */
 JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
-      if (alternate.isSubtype(that)) {
+      if (alternate.meet(that)!= getNativeType(JSTypeNative.NO_TYPE)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
-        if (otherAlternate.isSubtype(this)) {
+        if (otherAlternate.meet(this)!= getNativeType(JSTypeNative.NO_TYPE)) {
           builder.addAlternate(otherAlternate);
         }
       }
-    } else if (that.isSubtype(this)) {
+    } else if (this.meet(that)!= getNativeType(JSTypeNative.NO_TYPE)) {
       builder.addAlternate(that);
     }
     JSType result = builder.build();
     if (result!= null) {
       return result;
     } else if (this.isObject() && that.isObject()) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
       return getNativeType(JSTypeNative.NO_TYPE);
     }
 }
\ No newline at end of file
