diff --git a/tmp/fbf8fa9c-1a0c-4d43-b393-1eadb83396ea_buggy.java b/tmp/03ad41e4-3fb5-4d23-b12e-940c57e678e5_fixed.java
index b36b2a9..d9bfda9 100644
--- a/tmp/fbf8fa9c-1a0c-4d43-b393-1eadb83396ea_buggy.java
+++ b/tmp/03ad41e4-3fb5-4d23-b12e-940c57e678e5_fixed.java
@@ -1,26 +1,34 @@
+/**
+ * Computes the meet (greatest subtype) of this type and the given type.
+ * 
+ * @param that The type to meet with
+ * @return The greatest subtype of this and that
+ */
 JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
         }
       }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
     }
+    
+    // Fix: Check if result is empty before returning null
     JSType result = builder.build();
-    if (result != null) {
+    if (result!= null &&!result.isEmpty()) {
       return result;
     } else if (this.isObject() && that.isObject()) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
       return getNativeType(JSTypeNative.NO_TYPE);
     }
 }
\ No newline at end of file
