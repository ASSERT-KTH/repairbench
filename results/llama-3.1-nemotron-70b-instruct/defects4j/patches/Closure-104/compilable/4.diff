diff --git a/tmp/de5ef60f-a4ad-40d6-8bb4-f75a40033dcf_buggy.java b/tmp/46c3ed8f-ce09-4c60-8aff-586c70a3ca6c_fixed.java
index b36b2a9..bdb40a5 100644
--- a/tmp/de5ef60f-a4ad-40d6-8bb4-f75a40033dcf_buggy.java
+++ b/tmp/46c3ed8f-ce09-4c60-8aff-586c70a3ca6c_fixed.java
@@ -1,26 +1,26 @@
 JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
         }
       }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
     }
+    
     JSType result = builder.build();
-    if (result != null) {
-      return result;
-    } else if (this.isObject() && that.isObject()) {
+    if (result == null && this.isObject() && that.isObject()) {
+      // If the meet result is null (i.e., no common subtype) and both types are objects, 
+      // we should return NO_OBJECT_TYPE instead of NO_TYPE
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
-    } else {
-      return getNativeType(JSTypeNative.NO_TYPE);
     }
+    return result!= null? result : getNativeType(JSTypeNative.NO_TYPE);
 }
\ No newline at end of file
