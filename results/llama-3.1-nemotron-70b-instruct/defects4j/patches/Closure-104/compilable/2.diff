diff --git a/tmp/e506e249-63cb-43ba-bb92-4b1cd060a3a7_buggy.java b/tmp/0b80cc37-731d-46db-ab09-dda2a0876fa0_fixed.java
index b36b2a9..18bdf62 100644
--- a/tmp/e506e249-63cb-43ba-bb92-4b1cd060a3a7_buggy.java
+++ b/tmp/0b80cc37-731d-46db-ab09-dda2a0876fa0_fixed.java
@@ -1,26 +1,32 @@
+/**
+ * Computes the greatest subtype of this type and the given type.
+ * 
+ * @param that The type to compute the greatest subtype with.
+ * @return The greatest subtype of this type and the given type.
+ */
 JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
         }
       }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
     }
     JSType result = builder.build();
     if (result!= null) {
       return result;
-    } else if (this.isObject() && that.isObject()) {
+    } else if (this.isObject() || that.isObject()) { // FIX: changed '&&' to '||'
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
       return getNativeType(JSTypeNative.NO_TYPE);
     }
 }
\ No newline at end of file
