diff --git a/tmp/a74cf616-8710-43f6-8439-dbee7b339379_buggy.java b/tmp/990128ec-3106-4c7a-88e7-8024fb29293b_fixed.java
index 29a9d2f..9c62fc1 100644
--- a/tmp/a74cf616-8710-43f6-8439-dbee7b339379_buggy.java
+++ b/tmp/990128ec-3106-4c7a-88e7-8024fb29293b_fixed.java
@@ -1,43 +1,44 @@
 /**
  * Handles a goog.require call.
  */
 private void processRequireCall(NodeTraversal t, Node n, Node parent) {
     Node left = n.getFirstChild();
     Node arg = left.getNext();
     if (verifyLastArgumentIsString(t, left, arg)) {
       String ns = arg.getString();
       ProvidedName provided = providedNames.get(ns);
-      if (provided == null || !provided.isExplicitlyProvided()) {
+      if (provided == null) {
         unrecognizedRequires.add(
             new UnrecognizedRequire(n, ns, t.getSourceName()));
+        // Do not detach the node to allow further processing
+      } else if (!provided.isExplicitlyProvided()) {
+        unrecognizedRequires.add(
+            new UnrecognizedRequire(n, ns, t.getSourceName()));
+        maybeAddToSymbolTable(left);
+        maybeAddStringNodeToSymbolTable(arg);
+        // Requires that are not explicitly provided should be removed
+        parent.detachFromParent();
+        compiler.reportCodeChange();
       } else {
         JSModule providedModule = provided.explicitModule;
 
         // This must be non-null, because there was an explicit provide.
         Preconditions.checkNotNull(providedModule);
 
         JSModule module = t.getModule();
         if (moduleGraph!= null &&
             module!= providedModule &&
            !moduleGraph.dependsOn(module, providedModule)) {
           compiler.report(
               t.makeError(n, XMODULE_REQUIRE_ERROR, ns,
                   providedModule.getName(),
                   module.getName()));
         }
-      }
-
         maybeAddToSymbolTable(left);
         maybeAddStringNodeToSymbolTable(arg);
-
-      // Requires should be removed before further processing.
-      // Some clients run closure pass multiple times, first with
-      // the checks for broken requires turned off. In these cases, we
-      // allow broken requires to be preserved by the first run to
-      // let them be caught in the subsequent run.
-      if (provided != null) {
+        // Requires that are explicitly provided should be removed
         parent.detachFromParent();
         compiler.reportCodeChange();
       }
     }
   }
\ No newline at end of file
