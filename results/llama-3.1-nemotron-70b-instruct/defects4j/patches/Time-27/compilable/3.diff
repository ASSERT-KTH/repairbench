diff --git a/tmp/148353b2-ec83-49d3-8f95-ce440a6a7a83_buggy.java b/tmp/a185d9b8-f626-41ac-a23a-5050ac906bc3_fixed.java
index ec6c9ee..e6a0adf 100644
--- a/tmp/148353b2-ec83-49d3-8f95-ce440a6a7a83_buggy.java
+++ b/tmp/a185d9b8-f626-41ac-a23a-5050ac906bc3_fixed.java
@@ -1,21 +1,23 @@
-    //-----------------------------------------------------------------------
  private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+            // Fix: Handle the case when there's only one element after the separator
+            PeriodFormatter f = (size == 2)? 
+                                 new PeriodFormatter(null, null) : 
+                                 toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
