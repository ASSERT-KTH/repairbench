diff --git a/tmp/c7635be1-4771-4a10-8295-9ceb777685da_buggy.java b/tmp/60127506-a369-4635-80ea-3d85ffced0ef_fixed.java
index fa6828a..4deafee 100644
--- a/tmp/c7635be1-4771-4a10-8295-9ceb777685da_buggy.java
+++ b/tmp/60127506-a369-4635-80ea-3d85ffced0ef_fixed.java
@@ -1,5 +1,24 @@
+/**
+ * Fixed version of the injectMockCandidate method, ensuring exact type matching before ancestor types.
+ * 
+ * @param awaitingInjectionClazz Class awaiting injection
+ * @param mocks                  Set of mock objects
+ * @param fieldInstance          Instance of the field to inject
+ */
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
+    // First, try to find an exact type match
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
+        if (field.getType().equals(fieldInstance.getClass())) {
             mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+            return; // Exit early if exact match is found and injected
+        }
+    }
+    
+    // If no exact match, fall back to ancestor type matching
+    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
+        if (field.getType().isAssignableFrom(fieldInstance.getClass())) {
+            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+            return; // Exit early after first ancestor match injection
+        }
     }
 }
\ No newline at end of file
