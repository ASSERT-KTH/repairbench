diff --git a/tmp/9ebb646b-9a72-478e-a08e-96b81f2815c1_buggy.java b/tmp/29c734ae-2625-42a5-8d30-27f35a21173a_fixed.java
index 111ba5e..5194bb6 100644
--- a/tmp/9ebb646b-9a72-478e-a08e-96b81f2815c1_buggy.java
+++ b/tmp/29c734ae-2625-42a5-8d30-27f35a21173a_fixed.java
@@ -1,9 +1,22 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
     } else if (isArray(o1)) {
         return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (o1.getClass()!= o2.getClass()) { // added class check
+        // special handling for array wrapper types (e.g., int[] vs Integer[])
+        if (isWrapperType(o1.getClass()) && isWrapperType(o2.getClass())) {
+            return areEqual(wrapToArray(o1), wrapToArray(o2));
+        }
+        return false; // objects of different classes are not equal
     } else {
-            return o1.equals(o2);
+        // added null check for o1 to prevent NPE in case of broken.equals()
+        return o1!= null && o1.equals(o2);
     }
 }
+
+// assumed to be already defined elsewhere in the codebase
+// private static boolean isArray(Object o) {... }
+// private static boolean areArraysEqual(Object o1, Object o2) {... }
+// private static boolean isWrapperType(Class<?> clazz) {... }
+// private static Object[] wrapToArray(Object o) {... }
\ No newline at end of file
