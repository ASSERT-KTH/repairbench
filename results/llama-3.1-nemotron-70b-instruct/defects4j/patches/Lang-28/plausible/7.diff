diff --git a/tmp/a7a7c4ac-009d-4379-a4c2-a1bf5a262df6_buggy.java b/tmp/2aea69fa-b622-4f6c-a118-7d5d7701d5e1_fixed.java
index 4bbd561..0465d8f 100644
--- a/tmp/a7a7c4ac-009d-4379-a4c2-a1bf5a262df6_buggy.java
+++ b/tmp/2aea69fa-b622-4f6c-a118-7d5d7701d5e1_fixed.java
@@ -1,37 +1,47 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    // Protect from ArrayIndexOutOfBounds and handle supplementary characters
+    if(index + 1 < input.length() && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
+        if(start < input.length()) {
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
+        }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while(end < input.length() && input.charAt(end)!= ';') {
             end++;
         }
 
+        if(end < input.length() && input.charAt(end) == ';') { // Ensure ';' is found
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
-            } catch(NumberFormatException nfe) {
-                return 0;
-            }
                 
+                // Handle supplementary characters (UTF-16 surrogate pairs)
+                if(entityValue > 0xFFFF) {
+                    out.write(Character.highSurrogate(entityValue));
+                    out.write(Character.lowSurrogate(entityValue));
+                } else {
                     out.write(entityValue);
+                }
+            } catch(NumberFormatException nfe) {
+                return 0;
+            }
             return 2 + (end - start) + (isHex? 1 : 0) + 1;
         }
+    }
     return 0;
 }
\ No newline at end of file
