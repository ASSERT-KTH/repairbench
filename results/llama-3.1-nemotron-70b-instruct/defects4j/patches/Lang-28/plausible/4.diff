diff --git a/tmp/4d97955d-16c4-4991-98ee-2324f91c9482_buggy.java b/tmp/52bf4d36-4017-4e2c-99de-028249d368fd_fixed.java
index 4bbd561..73bbf4a 100644
--- a/tmp/4d97955d-16c4-4991-98ee-2324f91c9482_buggy.java
+++ b/tmp/52bf4d36-4017-4e2c-99de-028249d368fd_fixed.java
@@ -1,37 +1,49 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    // Protect from ArrayIndexOutOfBounds
+    if (index + 1 >= input.length() || input.charAt(index)!= '&' || input.charAt(index + 1)!= '#') {
+        return 0;
+    }
+
     int start = index + 2;
     boolean isHex = false;
 
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
+    if (start < input.length() && (input.charAt(start) == 'x' || input.charAt(start) == 'X')) {
         start++;
         isHex = true;
     }
 
     int end = start;
-            while(input.charAt(end) != ';') {
+    while (end < input.length() && input.charAt(end)!= ';') {
         end++;
     }
 
+    if (end >= input.length() || input.charAt(end)!= ';') {
+        return 0; // Not a valid entity
+    }
+
     int entityValue;
     try {
+        String entityStr = input.subSequence(start, end).toString();
         if (isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
+            entityValue = Integer.parseInt(entityStr, 16);
         } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
+            entityValue = Integer.parseInt(entityStr, 10);
         }
     } catch (NumberFormatException nfe) {
         return 0;
     }
 
+    // Handle supplementary characters correctly
+    if (entityValue > 0xFFFF) {
+        out.write(Character.highSurrogate(entityValue));
+        out.write(Character.lowSurrogate(entityValue));
+    } else {
         out.write(entityValue);
+    }
+
     return 2 + (end - start) + (isHex? 1 : 0) + 1;
 }
\ No newline at end of file
-        return 0;
-    }
