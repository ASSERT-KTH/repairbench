diff --git a/tmp/5e5c83f7-5ca2-4d51-8aad-9c3d9974bf9b_buggy.java b/tmp/5e2c229f-8e08-4357-88ae-a1478a3940e2_fixed.java
index 6e45f80..4822fc7 100644
--- a/tmp/5e5c83f7-5ca2-4d51-8aad-9c3d9974bf9b_buggy.java
+++ b/tmp/5e2c229f-8e08-4357-88ae-a1478a3940e2_fixed.java
@@ -1,21 +1,32 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Additional check to ensure type adapter's type matches the requested type
+      if (typeToken.getType()!= getTypeToken(typeAdapter).getType()) {
+        return null;
+      }
       return (TypeAdapter<T2>) typeAdapter;
+    }
 
+    private <T> TypeToken<T> getTypeToken(TypeAdapter<T> typeAdapter) {
+      // Assuming Gson's TypeAdapter has a meisjes() method to retrieve its type
+      // or a similar way to get the type, as it's not provided in the original snippet
+      // This implementation might vary based on actual Gson's TypeAdapter implementation
+      return (TypeToken<T>) typeAdapter.getClass().getDeclaredField("type").get(typeAdapter);
     }
+
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
