diff --git a/tmp/e8131d3b-399c-4b6a-810e-c0fe041e5098_buggy.java b/tmp/fb8eb5f5-ffca-430a-9d10-e233acae2e4a_fixed.java
index 6e45f80..fc16ec3 100644
--- a/tmp/e8131d3b-399c-4b6a-810e-c0fe041e5098_buggy.java
+++ b/tmp/fb8eb5f5-ffca-430a-9d10-e233acae2e4a_fixed.java
@@ -1,21 +1,23 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
-
+      // Additional type check to prevent ClassCastException
+      return (requestedType.equals(((Object) typeAdapter).getClass().getGenericParameterValue(0, TypeAdapter.class)))
+       ? (TypeAdapter<T2>) typeAdapter 
+        : null;
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
