diff --git a/tmp/ca5fdf1b-e39d-47ff-8414-87a84fea7b53_buggy.java b/tmp/98d478db-a019-4e7d-a53b-39af4134932b_fixed.java
index 6e45f80..ee5424e 100644
--- a/tmp/ca5fdf1b-e39d-47ff-8414-87a84fea7b53_buggy.java
+++ b/tmp/98d478db-a019-4e7d-a53b-39af4134932b_fixed.java
@@ -1,21 +1,24 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Additional check to ensure type adapter's type matches requested type
+      if (typeToken.getType()!= typeAdapter.getType()) {
+        return null;
+      }
       return (TypeAdapter<T2>) typeAdapter;
-
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
