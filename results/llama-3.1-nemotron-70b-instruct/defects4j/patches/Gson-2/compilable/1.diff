diff --git a/tmp/104eeded-647f-4616-9d7a-8f99e8c93076_buggy.java b/tmp/a2a4b22d-6935-40fa-bb0e-e20873590c3f_fixed.java
index 6e45f80..876c0f8 100644
--- a/tmp/104eeded-647f-4616-9d7a-8f99e8c93076_buggy.java
+++ b/tmp/a2a4b22d-6935-40fa-bb0e-e20873590c3f_fixed.java
@@ -1,21 +1,22 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
+      // Additional check to ensure typeAdapter can handle the exact requested type
+      return (requestedType.equals(clazz))? (TypeAdapter<T2>) typeAdapter : null;
 
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
