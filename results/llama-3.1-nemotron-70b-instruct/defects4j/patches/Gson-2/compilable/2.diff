diff --git a/tmp/a4dba0bf-c510-40a3-bad3-1b59c8f481e0_buggy.java b/tmp/89292a32-d099-4078-b5a3-fcccf3640407_fixed.java
index 6e45f80..c594cf0 100644
--- a/tmp/a4dba0bf-c510-40a3-bad3-1b59c8f481e0_buggy.java
+++ b/tmp/89292a32-d099-4078-b5a3-fcccf3640407_fixed.java
@@ -1,21 +1,24 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
+      // Additional check to ensure type adapter is compatible with requested type
+      return (requestedType.isInstance(typeAdapter.fromJsonTree(gson.toJsonTree(null))))
+         ? (TypeAdapter<T2>) typeAdapter
+          : null;
 
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
