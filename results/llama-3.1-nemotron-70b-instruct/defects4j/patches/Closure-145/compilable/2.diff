diff --git a/tmp/c032b7ec-48b7-4434-8156-0290696983c6_buggy.java b/tmp/b62eee1d-46c9-48a5-905e-41cb407ef3cf_fixed.java
index 57f69c5..adb24dc 100644
--- a/tmp/c032b7ec-48b7-4434-8156-0290696983c6_buggy.java
+++ b/tmp/b62eee1d-46c9-48a5-905e-41cb407ef3cf_fixed.java
@@ -1,12 +1,17 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a DO or FUNCTION (with or without labels),
+ *         considering the context to avoid generating labeled FUNCTION or DO
+ *         when extraneous BLOCKs are skipped.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // Check if the node is a FUNCTION or DO
+    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+        // If the node has a parent and the parent is a BLOCK with only one child,
+        // it's likely an extraneous BLOCK that should be skipped.
+        Node parent = n.getParent();
+        return!(parent!= null && parent.getType() == Token.BLOCK && parent.getChildCount() == 1);
+    }
+    // Either an empty statement or a block with more than one child, 
+    // in any case, it isn't a FUNCTION or DO.
+    return false;
 }
\ No newline at end of file
