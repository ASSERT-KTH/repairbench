diff --git a/tmp/e9f2601e-bbef-4287-96af-beda1b99455a_buggy.java b/tmp/e2ee708a-5b9d-4edb-ba50-0507ff32457c_fixed.java
index 57f69c5..611e870 100644
--- a/tmp/e9f2601e-bbef-4287-96af-beda1b99455a_buggy.java
+++ b/tmp/e2ee708a-5b9d-4edb-ba50-0507ff32457c_fixed.java
@@ -1,12 +1,19 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a DO or FUNCTION (with or without labels),
+ * considering blocks with a single child as part of the FUNCTION or DO statement.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // Check if node is FUNCTION or DO
+    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+        return true;
+    }
+    // If node is a label, check its child
+    if (n.getType() == Token.LABEL) {
+        Node child = n.getFirstChild();
+        // Only consider blocks with a single child as part of the FUNCTION or DO statement
+        if (child!= null && child.getType() == Token.BLOCK && child.getChildCount() == 1) {
+            return isOneExactlyFunctionOrDo(child.getFirstChild());
+        }
+    }
+    return false;
 }
\ No newline at end of file
