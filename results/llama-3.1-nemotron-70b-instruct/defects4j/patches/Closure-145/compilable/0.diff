diff --git a/tmp/e4391af3-02f7-47e2-80b6-34d6b4b31d99_buggy.java b/tmp/9f520261-af23-4a4b-b2e5-43fd7b01d9d9_fixed.java
index 57f69c5..40e0c9d 100644
--- a/tmp/e4391af3-02f7-47e2-80b6-34d6b4b31d99_buggy.java
+++ b/tmp/9f520261-af23-4a4b-b2e5-43fd7b01d9d9_fixed.java
@@ -1,12 +1,19 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * labels), considering the context to avoid generating labeled 
+ * FUNCTION or DO when extraneous BLOCKs are skipped.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // Check if the node is a FUNCTION or DO
+    boolean isFunctionOrDo = (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    
+    // If it's a block with only one child, and that child is a FUNCTION or DO, 
+    // consider it as a FUNCTION or DO for the purpose of this check
+    if (!isFunctionOrDo && n.getType() == Token.BLOCK && n.hasOneChild() && 
+        (n.getFirstChild().getType() == Token.FUNCTION || n.getFirstChild().getType() == Token.DO)) {
+        return true;
+    }
+    
+    // Otherwise, stick to the initial check
+    return isFunctionOrDo;
 }
\ No newline at end of file
