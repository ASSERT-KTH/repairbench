diff --git a/tmp/3da35f7c-78dd-4961-8a5b-4187d49495b2_buggy.java b/tmp/b85c4f27-3f32-4040-b423-204136cec688_fixed.java
index 57f69c5..9287ea1 100644
--- a/tmp/3da35f7c-78dd-4961-8a5b-4187d49495b2_buggy.java
+++ b/tmp/b85c4f27-3f32-4040-b423-204136cec688_fixed.java
@@ -1,12 +1,15 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a DO or FUNCTION (with or without labels),
+ *         considering the context to avoid generating labeled FUNCTION or DO
+ *         when extraneous BLOCKs are skipped.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
+    // Either an empty statement or a block with more than one child,
+    // in which case it isn't a FUNCTION or DO.
+    if (n.hasOneChild() && (n.getFirstChild().getType() == Token.BLOCK)) {
+        Node block = n.getFirstChild();
+        return (n.getType() == Token.FUNCTION || n.getType() == Token.DO) 
+               && (block.getChildCount() == 1 || block.getFirstChild().getType() == Token.LABEL);
+    }
     return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
 }
\ No newline at end of file
