diff --git a/tmp/b1aa97a6-e42d-48a0-a4dd-f9bec7e8f84b_buggy.java b/tmp/b51ac9f9-c385-4892-94f0-c8d7539564fa_fixed.java
index 57f69c5..9f5224e 100644
--- a/tmp/b1aa97a6-e42d-48a0-a4dd-f9bec7e8f84b_buggy.java
+++ b/tmp/b51ac9f9-c385-4892-94f0-c8d7539564fa_fixed.java
@@ -1,12 +1,15 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a DO or FUNCTION (with or without labels) 
+ * and is not nested within an IF statement without a block.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // For labels with block children, we need to ensure that a labeled 
+    // FUNCTION or DO isn't generated when extraneous BLOCKs are skipped.
+    // Either an empty statement or a block with more than one child, 
+    // means it isn't a FUNCTION or DO.
+    return (n.getType() == Token.FUNCTION || n.getType() == Token.DO) 
+           && (n.getParent() == null 
+               || n.getParent().getType()!= Token.IF 
+               || n.getParent().getNumChildren() == 1 
+               || n.getParent().getChild(0).getType() == Token.BLOCK);
 }
\ No newline at end of file
