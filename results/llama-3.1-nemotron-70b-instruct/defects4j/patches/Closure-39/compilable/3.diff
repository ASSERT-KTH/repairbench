diff --git a/tmp/25b74d04-48b9-4745-bc1b-e09d32fdf404_buggy.java b/tmp/afdcf59d-89b7-4081-9483-47fbb713314a_fixed.java
index e4d90e7..27cf553 100644
--- a/tmp/25b74d04-48b9-4745-bc1b-e09d32fdf404_buggy.java
+++ b/tmp/afdcf59d-89b7-4081-9483-47fbb713314a_fixed.java
@@ -1,45 +1,63 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
       return getReferenceName();
     } else if (prettyPrint) {
       // Don't pretty print recursively.
       prettyPrint = false;
 
       // Use a tree set so that the properties are sorted.
       Set<String> propertyNames = Sets.newTreeSet();
+      StringBuilder truncatedProperties = new StringBuilder(); // <--- NEW
+      int propertyCount = 0;
       for (ObjectType current = this;
-           current != null && !current.isNativeObjectType() &&
-               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
+           current!= null &&!current.isNativeObjectType();
            current = current.getImplicitPrototype()) {
-        propertyNames.addAll(current.getOwnPropertyNames());
+        for (String property : current.getOwnPropertyNames()) {
+          if (!propertyNames.add(property)) {
+            continue; // already added
+          }
+          if (propertyCount < MAX_PRETTY_PRINTED_PROPERTIES) {
+            propertyCount++;
+          } else {
+            truncatedProperties.append(", ").append(property); // <--- NEW
+            break; // stop adding to truncatedProperties after first excess
+          }
+        }
+        if (propertyCount >= MAX_PRETTY_PRINTED_PROPERTIES) {
+          break;
+        }
       }
 
       StringBuilder sb = new StringBuilder();
       sb.append("{");
 
       int i = 0;
       for (String property : propertyNames) {
         if (i > 0) {
           sb.append(", ");
         }
 
         sb.append(property);
         sb.append(": ");
         sb.append(getPropertyType(property).toString());
 
         ++i;
         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+          if (truncatedProperties.length() > 0) { // <--- NEW
+            sb.append(", ").append(truncatedProperties).append("]");
+          } else {
             sb.append(",...");
+          }
           break;
         }
       }
 
       sb.append("}");
 
       prettyPrint = true;
       return sb.toString();
     } else {
       return "{...}";
     }
   }
\ No newline at end of file
