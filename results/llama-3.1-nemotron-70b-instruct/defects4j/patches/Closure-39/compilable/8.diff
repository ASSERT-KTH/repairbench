diff --git a/tmp/a6de75d8-f1ff-4320-bc6b-7d2347e4c868_buggy.java b/tmp/987df004-6f81-42de-af76-d3d23f446303_fixed.java
index e4d90e7..a914f74 100644
--- a/tmp/a6de75d8-f1ff-4320-bc6b-7d2347e4c868_buggy.java
+++ b/tmp/987df004-6f81-42de-af76-d3d23f446303_fixed.java
@@ -1,45 +1,62 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
   } else if (prettyPrint) {
     // Don't pretty print recursively.
     prettyPrint = false;
 
     // Use a tree set so that the properties are sorted.
     Set<String> propertyNames = Sets.newTreeSet();
+    int propertyCount = 0;
     for (ObjectType current = this;
-           current != null && !current.isNativeObjectType() &&
-               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
+         current!= null &&!current.isNativeObjectType();
          current = current.getImplicitPrototype()) {
-        propertyNames.addAll(current.getOwnPropertyNames());
+      for (String property : current.getOwnPropertyNames()) {
+        if (propertyNames.add(property)) {
+          if (++propertyCount > MAX_PRETTY_PRINTED_PROPERTIES) {
+            break;
+          }
+        }
+      }
+      if (propertyCount > MAX_PRETTY_PRINTED_PROPERTIES) {
+        break;
+      }
     }
 
     StringBuilder sb = new StringBuilder();
     sb.append("{");
 
     int i = 0;
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
 
       sb.append(property);
       sb.append(": ");
+      if (getPropertyType(property) == this && forAnnotations) {
+        sb.append("?");
+      } else {
         sb.append(getPropertyType(property).toString());
+      }
 
       ++i;
       if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
         sb.append(",...");
         break;
       }
     }
 
+    if (propertyCount > MAX_PRETTY_PRINTED_PROPERTIES && i == 0) {
+      sb.append("...");
+    }
+
     sb.append("}");
 
     prettyPrint = true;
     return sb.toString();
   } else {
     return "{...}";
   }
 }
\ No newline at end of file
