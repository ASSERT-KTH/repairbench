diff --git a/tmp/d307915e-10be-4dfe-8490-f924cf25a200_buggy.java b/tmp/4a3a7927-cb3d-4a69-8687-d5fec547ed10_fixed.java
index 0b7c52e..a57cc29 100644
--- a/tmp/d307915e-10be-4dfe-8490-f924cf25a200_buggy.java
+++ b/tmp/4a3a7927-cb3d-4a69-8687-d5fec547ed10_fixed.java
@@ -1,27 +1,61 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child!= null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
-        String name = child.getString();
+    String name;
+    if (child.isString()) {
+      name = child.getString();
+    } else if (child.isGetProp() || child.isComputedProp()) {
+      // Handle computed property names or getters
+      name = processQualifiedName(t, child);
+    } else {
+      // Invalid property name, report error
+      compiler.report(JSError.make(
+          t.getSourceName(), child, "Invalid property name",
+          Warnings.INVALID_PROPERTY_NAME, child.toString(), "", n.toString(), ""));
+      continue;
+    }
+
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
+
+// Additional helper method to handle qualified names (e.g., computed property names or getters)
+private String processQualifiedName(NodeTraversal t, Node node) {
+  if (node.isGetProp()) {
+    // Handle getter
+    return node.getFirstChild().getString();
+  } else if (node.isComputedProp()) {
+    // Handle computed property name
+    Node expr = node.getFirstChild().getNext();
+    if (expr.isString()) {
+      return expr.getString();
+    } else {
+      // Non-string computed property name, report error
+      compiler.report(JSError.make(
+          t.getSourceName(), expr, "Computed property name must be a string",
+          Warnings.INVALID_COMPUTED_PROPERTY, expr.toString(), "", node.toString(), ""));
+      return null;
+    }
+  }
+  return null;
+}
\ No newline at end of file
