diff --git a/tmp/2550c6f5-f783-43bc-8b93-a9d4c4074334_buggy.java b/tmp/cc68e087-e2a9-43b0-851f-0a7c557a391d_fixed.java
index 0b7c52e..a70458e 100644
--- a/tmp/2550c6f5-f783-43bc-8b93-a9d4c4074334_buggy.java
+++ b/tmp/cc68e087-e2a9-43b0-851f-0a7c557a391d_fixed.java
@@ -1,27 +1,40 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child!= null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
-        String name = child.getString();
+    String name;
+    if (child.isStringKey()) {
+      name = child.getString();
+    } else {
+      // Handle numeric or computed property names
+      name = child.getQualifiedName();
+      if (name == null) {
+        // If the property name is not a simple string or a qualified name,
+        // it's likely a computed property, so skip the property type check
+        processProperty(t, getProperty(name), null, child);
+        continue;
+      }
+    }
+
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
