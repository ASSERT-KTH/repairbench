diff --git a/tmp/367655a4-c96e-4724-9861-5bfdb427cc26_buggy.java b/tmp/5248ae53-4642-4c63-972e-0b1ea1792761_fixed.java
index 6e238e7..3b891ac 100644
--- a/tmp/367655a4-c96e-4724-9861-5bfdb427cc26_buggy.java
+++ b/tmp/5248ae53-4642-4c63-972e-0b1ea1792761_fixed.java
@@ -1,15 +1,22 @@
 /**
  * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
  *
  * @param p1 the first point
  * @param p2 the second point
  * @return the L<sub>2</sub> distance between the two points
  */
 public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+  if (p1 == null || p2 == null) {
+    throw new NullPointerException("Both points must be non-null");
+  }
+  if (p1.length!= p2.length) {
+    throw new IllegalArgumentException("Both points must have the same dimension");
+  }
+  
+  double sum = 0; // Changed to double to avoid potential overflow
   for (int i = 0; i < p1.length; i++) {
       final int dp = p1[i] - p2[i];
-          sum += dp * dp;
+      sum += (double) dp * dp; // Cast to double for same reason as above
   }
   return Math.sqrt(sum);
 }
\ No newline at end of file
