diff --git a/tmp/8ae047d4-e496-41fb-92cf-abbb9fdf8c4b_buggy.java b/tmp/6e8d813b-c34d-48cc-b7d9-19a66035068b_fixed.java
index 875b31b..fb6a875 100644
--- a/tmp/8ae047d4-e496-41fb-92cf-abbb9fdf8c4b_buggy.java
+++ b/tmp/6e8d813b-c34d-48cc-b7d9-19a66035068b_fixed.java
@@ -1,54 +1,51 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     if (nextLineTabStop >= width)
     {
         // stops infinite loop happening
         nextLineTabStop = width - 1;
     }
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+        // Fix: Remove the trim() to preserve original indentation
+        text = padding + text.substring(pos);
+        pos = findWrapPos(text, width, nextLineTabStop); // Fix: pass nextLineTabStop as offset
 
         if (pos == -1)
         {
-                sb.append(text);
+            sb.append(rtrim(text));
 
             return sb;
         }
         
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
+        // Removed condition as it's no longer necessary with the fixes above
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
