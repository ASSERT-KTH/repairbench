diff --git a/tmp/3f7ec672-c196-4960-b3bf-ae188c93253e_buggy.java b/tmp/c8aadc9c-5b42-4096-8902-0dbb0857e227_fixed.java
index de9af32..49eaae9 100644
--- a/tmp/3f7ec672-c196-4960-b3bf-ae188c93253e_buggy.java
+++ b/tmp/c8aadc9c-5b42-4096-8902-0dbb0857e227_fixed.java
@@ -1,18 +1,31 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
-      Node node, Set<String> changed) {
+    Node node, Set<String> changed, Set<Node> visited) {
   Preconditions.checkArgument(changed!= null);
+  Preconditions.checkArgument(visited!= null);
+
+  if (visited.add(node)) { // avoid infinite recursion for shared subtrees
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP // handle 'object.method()'
+                 || child.getType() == Token.CALL_PROP) {
+        // extract the method name from 'object.method()' or 'object["method"]()'
+        String methodName = child.getChildCount() > 1
+           ? child.getChildAtIndex(1).getString()
+            : null;
+        if (methodName!= null) {
+          changed.add(methodName);
+        }
       }
     }
 
     for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {
-      findCalledFunctions(c, changed);
+      findCalledFunctions(c, changed, visited);
+    }
   }
 }
\ No newline at end of file
