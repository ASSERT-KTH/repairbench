diff --git a/tmp/35701ba6-70cc-4193-8bb4-cbd49ec61075_buggy.java b/tmp/021e1892-a917-43f7-9095-e2dfd6a75323_fixed.java
index 562001a..705f276 100644
--- a/tmp/35701ba6-70cc-4193-8bb4-cbd49ec61075_buggy.java
+++ b/tmp/021e1892-a917-43f7-9095-e2dfd6a75323_fixed.java
@@ -1,29 +1,31 @@
 /**
  * <p>Checks if String contains a search String irrespective of case,
  * handling <code>null</code>. Case-insensitivity is defined as by
  * {@link String#equalsIgnoreCase(String)}.
  *
  * <p>A <code>null</code> String will return <code>false</code>.</p>
  *
  * <pre>
  * StringUtils.contains(null, *) = false
  * StringUtils.contains(*, null) = false
  * StringUtils.contains("", "") = true
  * StringUtils.contains("abc", "") = true
  * StringUtils.contains("abc", "a") = true
  * StringUtils.contains("abc", "z") = false
  * StringUtils.contains("abc", "A") = true
  * StringUtils.contains("abc", "Z") = false
  * </pre>
  *
  * @param str  the String to check, may be null
  * @param searchStr  the String to find, may be null
  * @return true if the String contains the search String irrespective of
  * case or false if not or <code>null</code> string input
  */
 public static boolean containsIgnoreCase(String str, String searchStr) {
     if (str == null || searchStr == null) {
         return false;
     }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+    // Use locale-independent case folding for accurate results across locales
+    return str.normalize(Normalizer.NFKD).toLowerCase(Locale.ROOT)
+          .contains(searchStr.normalize(Normalizer.NFKD).toLowerCase(Locale.ROOT));
 }
\ No newline at end of file
