diff --git a/tmp/d9cf6076-07f4-4973-89f8-f7279e180e3d_buggy.java b/tmp/1b893f43-9f89-4f9a-a342-d0046c08db46_fixed.java
index 1bd0d7e..67f6386 100644
--- a/tmp/d9cf6076-07f4-4973-89f8-f7279e180e3d_buggy.java
+++ b/tmp/1b893f43-9f89-4f9a-a342-d0046c08db46_fixed.java
@@ -1,31 +1,42 @@
 /**
  * Get the ns uri of the specified node.
  * @param node Node to check
  * @return String ns uri
  */
 public static String getNamespaceURI(Node node) {
     if (node instanceof Document) {
         node = ((Document) node).getDocumentElement();
     }
 
     Element element = (Element) node;
 
     String uri = element.getNamespaceURI();
     if (uri == null) {
         String prefix = getPrefix(node);
-            String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
+        if (prefix == null || prefix.isEmpty()) { // Check for empty prefix
+            // Handle default namespace (no prefix) separately
+            NamedNodeMap attributes = node.getAttributes();
+            for (int i = 0; i < attributes.getLength(); i++) {
+                Node attr = attributes.item(i);
+                if (attr.getNodeName().equals("xmlns")) {
+                    return attr.getNodeValue();
+                }
+            }
+        } else {
+            String qname = "xmlns:" + prefix;
     
             Node aNode = node;
             while (aNode!= null) {
                 if (aNode.getNodeType() == Node.ELEMENT_NODE) {
                     Attr attr = ((Element) aNode).getAttributeNode(qname);
                     if (attr!= null) {
                         return attr.getValue();
                     }
                 }
                 aNode = aNode.getParentNode();
             }
-            return null;
+        }
+        return null; // or a default value, if applicable
     }
     return uri;
 }
\ No newline at end of file
