diff --git a/tmp/e5c6a1aa-f6b9-438f-9005-b3ef4412cd6f_buggy.java b/tmp/77b293fd-4bf1-4554-ac35-1443db28a416_fixed.java
index 0e18f59..551f2c6 100644
--- a/tmp/e5c6a1aa-f6b9-438f-9005-b3ef4412cd6f_buggy.java
+++ b/tmp/77b293fd-4bf1-4554-ac35-1443db28a416_fixed.java
@@ -1,13 +1,21 @@
 @Override
 InputStream decode(final InputStream in, final Coder coder,
         byte[] password) throws IOException {
     byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
-            for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
-            }
+    long dictSize = ((coder.properties[1] & 0xFFL) | 
+                     (coder.properties[2] & 0xFFL) << 8 | 
+                     (coder.properties[3] & 0xFFL) << 16 | 
+                     (coder.properties[4] & 0xFFL) << 24);
     if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
         throw new IOException("Dictionary larger than 4GiB maximum size");
     }
+    // Use XZInputStream to handle larger dictionaries, if possible
+    try {
+        return new XZInputStream(new BufferedInputStream(in), 
+                                  ((int) dictSize), 
+                                  propsByte);
+    } catch (UnsupportedOperationException e) {
+        // Fallback to LZMAInputStream if XZInputStream not supported
         return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
     }
+}
\ No newline at end of file
