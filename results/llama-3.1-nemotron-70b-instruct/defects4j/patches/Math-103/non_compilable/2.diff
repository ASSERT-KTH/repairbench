diff --git a/tmp/e63a1cb7-472d-4ef0-a9d9-5ccbecc6d150_buggy.java b/tmp/024f30e4-cfd8-4dcd-a4d6-c6fcee16569f_fixed.java
index 6cfa79b..373e159 100644
--- a/tmp/e63a1cb7-472d-4ef0-a9d9-5ccbecc6d150_buggy.java
+++ b/tmp/024f30e4-cfd8-4dcd-a4d6-c6fcee16569f_fixed.java
@@ -1,12 +1,18 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X &lt; <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>. 
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double standardizedX = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+    try {
+        return 0.5 * (1.0 + Erf.erf(standardizedX));
+    } catch (MaxIterationsExceededException e) {
+        // Top-coding for extreme values (more than 20 standard deviations away)
+        return (standardizedX < -20)? 0.0 : (standardizedX > 20)? 1.0 : 
+               throw new MathException("Failed to converge for non-extreme value", e);
+    }
 }
\ No newline at end of file
