diff --git a/tmp/a200e54d-6f0a-45c8-935d-cf1b4b9fb6a8_buggy.java b/tmp/9dfd106a-7ad7-4055-adbf-d34dd1634b49_fixed.java
index 1530b34..2b786a0 100644
--- a/tmp/a200e54d-6f0a-45c8-935d-cf1b4b9fb6a8_buggy.java
+++ b/tmp/9dfd106a-7ad7-4055-adbf-d34dd1634b49_fixed.java
@@ -1,23 +1,44 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType!= null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters!= null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
+        JSType parameterType = null;
         if (jsDocParameter!= null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          parameterType = jsDocParameter.getJSType();
           jsDocParameter = jsDocParameter.getNext();
+        }
+        // Check for duplicate variable declarations
+        if (isVariableDeclared(astParameter.getString(), functionNode, body)) {
+          reportError(astParameter, JSC_DUP_VAR_DECLARATION,
+              "variable " + astParameter.getString() + " redefined with type " +
+              (parameterType!= null? parameterType.toString() : "unknown") +
+              ", original definition at " + functionNode.getSourcePosition());
+        } else {
+          defineSlot(astParameter, functionNode, parameterType, true);
+        }
+      }
+    } else {
+      // If no JSDoc parameters, still check for duplicate declarations
+      for (Node astParameter : astParameters.children()) {
+        if (isVariableDeclared(astParameter.getString(), functionNode, body)) {
+          reportError(astParameter, JSC_DUP_VAR_DECLARATION,
+              "variable " + astParameter.getString() + " redefined");
         } else {
           defineSlot(astParameter, functionNode, null, true);
         }
       }
     }
   }
 } // end declareArguments
+
+// Assuming the following method is already defined elsewhere in the codebase
+private boolean isVariableDeclared(String variableName, Node functionNode, Node body);
+private void reportError(Node node, DiagnosticCode code, String message);
\ No newline at end of file
