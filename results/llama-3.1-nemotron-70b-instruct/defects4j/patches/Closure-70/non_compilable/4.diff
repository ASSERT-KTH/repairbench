diff --git a/tmp/60b658ca-bd80-409c-a445-4ce56c4782c1_buggy.java b/tmp/747a4b98-d622-4e7e-95f1-a2d5ace0d081_fixed.java
index 1530b34..e2827ef 100644
--- a/tmp/60b658ca-bd80-409c-a445-4ce56c4782c1_buggy.java
+++ b/tmp/747a4b98-d622-4e7e-95f1-a2d5ace0d081_fixed.java
@@ -1,23 +1,33 @@
 /**
-     * Declares all of a function's arguments.
+ * Declares all of a function's arguments, checking for potential redeclarations.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType!= null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters!= null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter!= null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          JSType paramType = jsDocParameter.getJSType();
+          // Check if the parameter is redeclared in the function body
+          Node redeclaredParam = body.getFirstChild();
+          while (redeclaredParam!= null) {
+            if (redeclaredParam.isVar() && redeclaredParam.getString().equals(astParameter.getString())) {
+              checkState(paramType.isAssignableFrom(redeclaredParam.getJSType()),
+                  "variable %s redefined with type %s, original definition at %s with type %s",
+                  astParameter.getString(), redeclaredParam.getJSType(), functionNode.getLineNumber(), paramType);
+            }
+            redeclaredParam = redeclaredParam.getNext();
+          }
+          defineSlot(astParameter, functionNode, paramType, true);
           jsDocParameter = jsDocParameter.getNext();
         } else {
           defineSlot(astParameter, functionNode, null, true);
         }
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
