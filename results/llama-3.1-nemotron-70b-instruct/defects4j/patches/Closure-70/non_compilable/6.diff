diff --git a/tmp/a5c87576-08dd-4210-9a39-2a708f642e65_buggy.java b/tmp/246f2f1b-4c5b-4605-aaf0-5003f91aa51f_fixed.java
index 1530b34..a546cad 100644
--- a/tmp/a5c87576-08dd-4210-9a39-2a708f642e65_buggy.java
+++ b/tmp/246f2f1b-4c5b-4605-aaf0-5003f91aa51f_fixed.java
@@ -1,23 +1,37 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType!= null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters!= null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter!= null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          JSType declaredType = jsDocParameter.getJSType();
+          // Check if the parameter is redeclared in the function body
+          Node maybeRedeclaredParam = body.getNextmatchesName(astParameter.getString());
+          if (maybeRedeclaredParam!= null) {
+            JSType redeclaredType = maybeRedeclaredParam.getJSType();
+            if (!declaredType.isEquivalentTo(redeclaredType)) {
+              // Report error for redeclaration with different type
+              report(JSError.make(functionNode, 
+                  JSC_DUP_VAR_DECLARATION, 
+                  "variable " + astParameter.getString() + 
+                  " redefined with type " + redeclaredType + 
+                  ", original definition at " + functionNode.getLineno() + 
+                  " with type " + declaredType));
+            }
+          }
+          defineSlot(astParameter, functionNode, declaredType, true);
           jsDocParameter = jsDocParameter.getNext();
         } else {
           defineSlot(astParameter, functionNode, null, true);
         }
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
