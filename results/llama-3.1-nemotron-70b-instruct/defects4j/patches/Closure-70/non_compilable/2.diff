diff --git a/tmp/44829312-a52e-4c5e-ad0f-e4f7aaf65462_buggy.java b/tmp/13445b77-d49b-48b7-ac9b-40f5b9db15ab_fixed.java
index 1530b34..f92c47d 100644
--- a/tmp/44829312-a52e-4c5e-ad0f-e4f7aaf65462_buggy.java
+++ b/tmp/13445b77-d49b-48b7-ac9b-40f5b9db15ab_fixed.java
@@ -1,23 +1,36 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType!= null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters!= null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter!= null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          JSType jsDocParameterType = jsDocParameter.getJSType();
+          // Check for redeclaration with a different type
+          Node existingSlot = getSlot(astParameter.getString(), functionNode);
+          if (existingSlot!= null &&!existingSlot.getJSType().equals(jsDocParameterType)) {
+            report(JSC_DUP_VAR_DECLARATION, astParameter, 
+                "variable " + astParameter.getString() + " redefined with type " + jsDocParameterType + 
+                ", original definition at " + getSourcePosition(existingSlot) + " with type " + existingSlot.getJSType());
+          }
+          defineSlot(astParameter, functionNode, jsDocParameterType, true);
           jsDocParameter = jsDocParameter.getNext();
         } else {
+          // If no JSDoc parameter, still check for redeclaration
+          Node existingSlot = getSlot(astParameter.getString(), functionNode);
+          if (existingSlot!= null) {
+            report(JSC_DUP_VAR_DECLARATION, astParameter, 
+                "variable " + astParameter.getString() + " redefined, original definition at " + getSourcePosition(existingSlot));
+          }
           defineSlot(astParameter, functionNode, null, true);
         }
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
