diff --git a/tmp/fc0ef6e7-159c-4e4a-a1c3-c901a370fc58_buggy.java b/tmp/0219111c-82e4-4792-b8da-df4e993f76d3_fixed.java
index 2608424..07d8655 100644
--- a/tmp/fc0ef6e7-159c-4e4a-a1c3-c901a370fc58_buggy.java
+++ b/tmp/0219111c-82e4-4792-b8da-df4e993f76d3_fixed.java
@@ -1,39 +1,27 @@
 /**
  * Convert to multidimensional counter.
  *
  * @param index Index in unidimensional counter.
  * @return the multidimensional counts.
  * @throws OutOfRangeException if {@code index} is not between
  * {@code 0} and the value returned by {@link #getSize()} (excluded).
  */
 public int[] getCounts(int index) {
     if (index < 0 ||
         index >= totalSize) {
         throw new OutOfRangeException(index, 0, totalSize);
     }
 
     final int[] indices = new int[dimension];
 
-        int count = 0;
+    int remaining = index;
     for (int i = 0; i < last; i++) {
-            int idx = 0;
         final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
+        indices[i] = remaining / offset;
+        remaining %= offset;
     }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
-        }
-
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
+    // Handle the last dimension separately to avoid overflow
+    indices[last] = remaining;
 
     return indices;
 }
\ No newline at end of file
