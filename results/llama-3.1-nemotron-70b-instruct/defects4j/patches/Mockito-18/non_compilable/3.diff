diff --git a/tmp/8848966a-cdbc-4ce7-b6fa-6747455503ce_buggy.java b/tmp/c95c10e4-b8db-431e-9e09-9c20a6ba7ad3_fixed.java
index 710fcc0..b4ce9fb 100644
--- a/tmp/8848966a-cdbc-4ce7-b6fa-6747455503ce_buggy.java
+++ b/tmp/c95c10e4-b8db-431e-9e09-9c20a6ba7ad3_fixed.java
@@ -1,37 +1,25 @@
 Object returnValueFor(Class<?> type) {
     if (Primitives.isPrimitiveOrWrapper(type)) {
         return Primitives.defaultValueForPrimitiveOrWrapper(type);
         //new instances are used instead of Collections.emptyList(), etc.
         //to avoid UnsupportedOperationException if code under test modifies returned collection
-        } else if (type == Collection.class) {
-            return new LinkedList<Object>();
-        } else if (type == Set.class) {
-            return new HashSet<Object>();
-        } else if (type == HashSet.class) {
+    } else if (Iterable.class.isAssignableFrom(type)) { // Fix: Handle Iterable interface
+        return Collections.emptyList();
+    } else if (Collection.class.isAssignableFrom(type)) { // Fix: Use isAssignableFrom for Collection
+        if (Set.class.isAssignableFrom(type)) {
             return new HashSet<Object>();
-        } else if (type == SortedSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == TreeSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == LinkedHashSet.class) {
-            return new LinkedHashSet<Object>();
-        } else if (type == List.class) {
+        } else if (List.class.isAssignableFrom(type)) {
             return new LinkedList<Object>();
-        } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
-        } else if (type == ArrayList.class) {
-            return new ArrayList<Object>();
-        } else if (type == Map.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == HashMap.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == TreeMap.class) {
+        } else {
+            return new LinkedList<Object>(); // Default to LinkedList for other Collections
+        }
+    } else if (Map.class.isAssignableFrom(type)) { // Fix: Use isAssignableFrom for Map
+        if (SortedMap.class.isAssignableFrom(type)) {
             return new TreeMap<Object, Object>();
-        } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
+        } else {
+            return new HashMap<Object, Object>();
+        }
     }
     // Let's not care about the rest of collections.
     return null;
 }
\ No newline at end of file
