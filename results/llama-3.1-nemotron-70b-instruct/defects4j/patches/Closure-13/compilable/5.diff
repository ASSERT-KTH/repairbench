diff --git a/tmp/07696977-dab1-413d-b033-4fa53c17489c_buggy.java b/tmp/b992f354-ba43-43fc-a8cd-7adfe6c4e281_fixed.java
index b5d94e0..b09240e 100644
--- a/tmp/07696977-dab1-413d-b033-4fa53c17489c_buggy.java
+++ b/tmp/b992f354-ba43-43fc-a8cd-7adfe6c4e281_fixed.java
@@ -1,26 +1,29 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing 
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed, 
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
+      // Fix: only traverse children if node has changed or first iteration
+      if (visits == 0 || shouldRetraverse(node)) {
         Node c = node.getFirstChild();
         while(c!= null) {
           traverse(c);
           Node next = c.getNext();
           c = next;
         }
+      }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
