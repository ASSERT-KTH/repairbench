diff --git a/tmp/0da0d478-a432-44eb-8993-40bc488ed7a6_buggy.java b/tmp/29a7543e-9958-4f99-9b20-d5b1fcbc163f_fixed.java
index c9da1b7..e015041 100644
--- a/tmp/0da0d478-a432-44eb-8993-40bc488ed7a6_buggy.java
+++ b/tmp/29a7543e-9958-4f99-9b20-d5b1fcbc163f_fixed.java
@@ -1,33 +1,40 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne!= null) {
 
         if ((_explicitCreators & mask)!= 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
+        if (oldOne.getClass().equals(newOne.getClass())) {
             // [databind#667]: avoid one particular class of bogus problems
-
+            if (oldOne.annotated()!= null && newOne.annotated()!= null) {
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                         +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
+            }
+            // if one of them has no annotations, it's okay to override
+        } else {
             // new type more generic, use old
             // new type more specific, use it
+            // For now, let's just use the new one if it's more specific
+            if (newOne.getClass().isAssignableFrom(oldOne.getClass())) {
+                _creators[typeIndex] = _fixAccess(newOne);
             }
         }
+    } else {
+        _creators[typeIndex] = _fixAccess(newOne);
+    }
     if (explicit) {
         _explicitCreators |= mask;
     }
-        _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
