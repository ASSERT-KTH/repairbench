diff --git a/tmp/4bc62d09-165a-484f-a109-99b6ac16800c_buggy.java b/tmp/688c995b-77d2-473b-bcbe-7f69920932ea_fixed.java
index c9da1b7..27f17b5 100644
--- a/tmp/4bc62d09-165a-484f-a109-99b6ac16800c_buggy.java
+++ b/tmp/688c995b-77d2-473b-bcbe-7f69920932ea_fixed.java
@@ -1,33 +1,36 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne!= null) {
 
         if ((_explicitCreators & mask)!= 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
+        if (oldOne.getClass().equals(newOne.getClass())) {
+            // if both are the same class, also check if annotations are the same
+            if (oldOne.getAllAnnotations().equals(newOne.getAllAnnotations())) {
                 // [databind#667]: avoid one particular class of bogus problems
-
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                         +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+            }
+        }
         // otherwise, which one to choose?
         // new type more generic, use old
         // new type more specific, use it
-            }
+        // for now, just use the new one (could be improved with more sophisticated type comparison)
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
