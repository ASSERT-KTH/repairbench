diff --git a/tmp/986ffc0c-74db-4272-b800-20b7df6c3323_buggy.java b/tmp/cfb9df22-fbf0-4b0e-ac11-c1a18652c42f_fixed.java
index 25c13b3..c1351e9 100644
--- a/tmp/986ffc0c-74db-4272-b800-20b7df6c3323_buggy.java
+++ b/tmp/cfb9df22-fbf0-4b0e-ac11-c1a18652c42f_fixed.java
@@ -1,15 +1,21 @@
 /**
  * Access the initial domain value, based on <code>p</code>, used to
  * bracket a CDF root.  This method is used by
  * {@link #inverseCumulativeProbability(double)} to find critical values.
  * 
  * @param p the desired probability for the critical value
  * @return initial domain value
  */
 protected double getInitialDomain(double p) {
     double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
+    // Fix: handle case where d is close to 2.0 to prevent division by zero
+    // and provide a more suitable initial domain value for small degrees of freedom
+    if (d <= 2.0) {
+        ret = 1.0; // or any other suitable small initial value > 0
+    } else {
+        // use mean as initial value for larger degrees of freedom
         ret = d / (d - 2.0);
+    }
     return ret;
 }
\ No newline at end of file
