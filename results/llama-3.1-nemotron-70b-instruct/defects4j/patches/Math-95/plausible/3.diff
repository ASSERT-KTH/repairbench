diff --git a/tmp/b691284b-dce4-4790-839a-9dc89bf45665_buggy.java b/tmp/d3a34c29-bd31-40a1-bc78-41f9fa416d5c_fixed.java
index 25c13b3..6369b8a 100644
--- a/tmp/b691284b-dce4-4790-839a-9dc89bf45665_buggy.java
+++ b/tmp/d3a34c29-bd31-40a1-bc78-41f9fa416d5c_fixed.java
@@ -1,15 +1,21 @@
 /**
  * Access the initial domain value, based on <code>p</code>, used to
  * bracket a CDF root.  This method is used by
  * {@link #inverseCumulativeProbability(double)} to find critical values.
  * 
  * @param p the desired probability for the critical value
  * @return initial domain value
  */
 protected double getInitialDomain(double p) {
     double ret;
     double d = getDenominatorDegreesOfFreedom();
+    // Fix: handle the special case where d is close to 2.0 to avoid division by zero
+    // and return a more suitable initial domain value for small degrees of freedom
+    if (d <= 2.0) {
+        ret = 1.0; // or any other suitable initial value for small degrees of freedom
+    } else {
         // use mean
         ret = d / (d - 2.0);
+    }
     return ret;
 }
\ No newline at end of file
