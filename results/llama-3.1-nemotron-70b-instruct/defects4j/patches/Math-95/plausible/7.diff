diff --git a/tmp/08c73cc5-3c3a-4175-80be-8e1bb1e4831b_buggy.java b/tmp/cc6e3fdd-ff36-46ce-8c53-d1949b8727d5_fixed.java
index 25c13b3..b0f77dc 100644
--- a/tmp/08c73cc5-3c3a-4175-80be-8e1bb1e4831b_buggy.java
+++ b/tmp/cc6e3fdd-ff36-46ce-8c53-d1949b8727d5_fixed.java
@@ -1,15 +1,20 @@
 /**
  * Access the initial domain value, based on <code>p</code>, used to
  * bracket a CDF root.  This method is used by
  * {@link #inverseCumulativeProbability(double)} to find critical values.
  * 
  * @param p the desired probability for the critical value
  * @return initial domain value
  */
 protected double getInitialDomain(double p) {
     double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+    // Fix: handle division by zero and ensure initial domain value is valid
+    if (d <= 2.0) {
+        ret = 1.0; // or any other suitable default value for small degrees of freedom
+    } else {
+        // use mean, but avoid negative values
+        ret = Math.max(d / (d - 2.0), 0.0);
+    }
     return ret;
 }
\ No newline at end of file
