diff --git a/tmp/1b15b1f6-9cff-4c54-8a25-040c27d50c73_buggy.java b/tmp/6c91272e-0834-4916-9e95-55ee0a17a9b5_fixed.java
index dc93be3..8cb7c10 100644
--- a/tmp/1b15b1f6-9cff-4c54-8a25-040c27d50c73_buggy.java
+++ b/tmp/6c91272e-0834-4916-9e95-55ee0a17a9b5_fixed.java
@@ -1,14 +1,19 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (Tag.isKnownTag(startTag.name())) { // Check if tag is known
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
+        } else {
+            // For unknown self-closing tags, don't emit an end tag
+            return insertEmpty(startTag);
+        }
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
