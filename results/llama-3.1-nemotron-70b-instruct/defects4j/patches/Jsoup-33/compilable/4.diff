diff --git a/tmp/c31c8968-e5c6-4436-9444-41604fb9d843_buggy.java b/tmp/349dd49f-0a91-47c4-9218-2436e334f56e_fixed.java
index dc93be3..a998552 100644
--- a/tmp/c31c8968-e5c6-4436-9444-41604fb9d843_buggy.java
+++ b/tmp/349dd49f-0a91-47c4-9218-2436e334f56e_fixed.java
@@ -1,14 +1,23 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        Tag tag = Tag.valueOf(startTag.name());
+        if (tag.isKnownTag() &&!tag.isSelfClosing()) {
+            Element el = new Element(tag, baseUri, startTag.attributes);
+            insert(el);
+            stack.add(el);
+            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            return el;
+        } else {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
+    }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
