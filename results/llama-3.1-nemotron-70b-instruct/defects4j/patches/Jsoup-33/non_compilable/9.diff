diff --git a/tmp/5f0892bc-4caa-4520-8984-a22cc5f9f5bd_buggy.java b/tmp/cb49f5af-5741-421c-89db-6445a41f14d3_fixed.java
index dc93be3..4717ae7 100644
--- a/tmp/5f0892bc-4caa-4520-8984-a22cc5f9f5bd_buggy.java
+++ b/tmp/cb49f5af-5741-421c-89db-6445a41f14d3_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
+        Element el;
+        if (Tag.isKnownEmpty(startTag.name())) { // check if tag is known to be empty
+            el = insertEmpty(startTag);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        } else { // known non-empty tags should not be self-closing
+            el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+            insert(el);
+        }
+        stack.add(el);
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
