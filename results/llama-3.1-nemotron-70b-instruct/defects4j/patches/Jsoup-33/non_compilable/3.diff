diff --git a/tmp/e4332259-b1b0-4fca-96f8-4c3aa1897b8e_buggy.java b/tmp/4f0be584-f763-44fa-a25b-e9d8b3ad4a8e_fixed.java
index dc93be3..334aa18 100644
--- a/tmp/e4332259-b1b0-4fca-96f8-4c3aa1897b8e_buggy.java
+++ b/tmp/4f0be584-f763-44fa-a25b-e9d8b3ad4a8e_fixed.java
@@ -1,14 +1,21 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (Tag.isKnownEmptyElement(startTag.name())) { // Check if tag is known to be empty
             Element el = insertEmpty(startTag);
             stack.add(el);
+            // No need to emit a fake end tag for known empty elements
+            return el;
+        } else {
+            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+            insert(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
+    }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
