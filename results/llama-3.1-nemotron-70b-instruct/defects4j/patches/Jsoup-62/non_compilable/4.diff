diff --git a/tmp/a56e6fa4-041d-4bae-ad37-a8faa646e6f8_buggy.java b/tmp/2cd018b0-bffb-4e1a-8fea-815c87663bd3_fixed.java
index 7dc89ed..84ab5ff 100644
--- a/tmp/a56e6fa4-041d-4bae-ad37-a8faa646e6f8_buggy.java
+++ b/tmp/2cd018b0-bffb-4e1a-8fea-815c87663bd3_fixed.java
@@ -1,20 +1,29 @@
+/**
+ * Fixed function to check for any other end tag, handling case sensitivity
+ * 
+ * @param t Token to check
+ * @param tb HtmlTreeBuilder instance
+ * @return true if end tag is found and processed, false otherwise
+ */
 boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
     String name = t.asEndTag().normalName();
     ArrayList<Element> stack = tb.getStack();
     for (int pos = stack.size() - 1; pos >= 0; pos--) {
         Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
+        // Fix: Check for case-insensitive match when preserveCase setting is false
+        if ((tb.getParser().settings().preserveCase && node.nodeName().equals(name)) 
+            || (!tb.getParser().settings().preserveCase && node.nodeName().equalsIgnoreCase(name))) {
             tb.generateImpliedEndTags(name);
             if (!name.equals(tb.currentElement().nodeName()))
                 tb.error(this);
             tb.popStackToClose(name);
             break;
         } else {
             if (tb.isSpecial(node)) {
                 tb.error(this);
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
