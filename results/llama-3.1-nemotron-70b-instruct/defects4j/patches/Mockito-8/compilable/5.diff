diff --git a/tmp/2a9d1997-58ee-4a4d-bdfb-b7fa906c22d7_buggy.java b/tmp/2f7c95a4-f9ec-4ddf-88cb-4341f53403ba_fixed.java
index 42b58d0..beb78fa 100644
--- a/tmp/2a9d1997-58ee-4a4d-bdfb-b7fa906c22d7_buggy.java
+++ b/tmp/2f7c95a4-f9ec-4ddf-88cb-4341f53403ba_fixed.java
@@ -1,19 +1,29 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // Fix: Avoid infinite recursion by ignoring self-referential type arguments
+        if (isSelfReferentialTypeArgument(parameterizedType, actualTypeArgument)) {
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
+
+// Helper method to detect self-referential type arguments
+private boolean isSelfReferentialTypeArgument(ParameterizedType parameterizedType, Type actualTypeArgument) {
+    return actualTypeArgument instanceof Class<?> 
+           && ((Class<?>) actualTypeArgument).isAssignableFrom((Class<?>) parameterizedType.getRawType());
+}
\ No newline at end of file
