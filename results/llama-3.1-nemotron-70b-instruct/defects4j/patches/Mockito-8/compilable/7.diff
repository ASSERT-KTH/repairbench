diff --git a/tmp/6f34b160-cbf2-4ee5-82b0-dd9b177e1021_buggy.java b/tmp/fd6ce4a7-7713-4823-8a56-006b1d763be2_fixed.java
index 42b58d0..f936214 100644
--- a/tmp/6f34b160-cbf2-4ee5-82b0-dd9b177e1021_buggy.java
+++ b/tmp/fd6ce4a7-7713-4823-8a56-006b1d763be2_fixed.java
@@ -1,19 +1,29 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
-            if (actualTypeArgument instanceof WildcardType) {
+        // Fix: Avoid self-referential infinite loop
+        if (actualTypeArgument instanceof TypeVariable) {
+            TypeVariable actualTypeVariable = (TypeVariable) actualTypeArgument;
+            if (actualTypeVariable.getGenericDeclaration() == parameterizedType.getRawType()) {
+                // Self-type reference, put the type parameter itself as the actual type argument
+                contextualActualTypeParameters.put(typeParameter, typeParameter);
+            } else {
+                // Recursively resolve the actual type argument if it's a type variable from another type
+                registerTypeVariablesOn(actualTypeVariable);
+                contextualActualTypeParameters.put(typeParameter, contextualActualTypeParameters.get(actualTypeVariable));
+            }
+        } else if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
