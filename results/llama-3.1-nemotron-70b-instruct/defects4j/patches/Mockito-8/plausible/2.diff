diff --git a/tmp/12944081-a9ea-4acf-8cc8-9d6dd5c3aba1_buggy.java b/tmp/c2b25fd9-611c-4676-a058-0659c11d1f2c_fixed.java
index 42b58d0..b7166e3 100644
--- a/tmp/12944081-a9ea-4acf-8cc8-9d6dd5c3aba1_buggy.java
+++ b/tmp/c2b25fd9-611c-4676-a058-0659c11d1f2c_fixed.java
@@ -1,19 +1,23 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // Fix: avoid infinite recursion by ignoring self-referential types
+        if (actualTypeArgument instanceof TypeVariable && ((TypeVariable) actualTypeArgument).getGenericDeclaration() == parameterizedType.getRawType()) {
+            continue; // Skip self-referential type variables
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
