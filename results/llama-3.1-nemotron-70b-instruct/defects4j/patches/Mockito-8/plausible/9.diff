diff --git a/tmp/ed12e3ae-f917-4247-8026-5ed784efd446_buggy.java b/tmp/a07a8f49-1f19-4748-93b3-40f70674a1b4_fixed.java
index 42b58d0..a23e49d 100644
--- a/tmp/ed12e3ae-f917-4247-8026-5ed784efd446_buggy.java
+++ b/tmp/a07a8f49-1f19-4748-93b3-40f70674a1b4_fixed.java
@@ -1,19 +1,23 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // Fix: Avoid infinite recursion for self-type references
+        if (actualTypeArgument instanceof TypeVariable && ((TypeVariable) actualTypeArgument).getGenericDeclaration().equals(parameterizedType.getRawType())) {
+            continue; // Skip self-type references to prevent infinite recursion
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
