diff --git a/tmp/e9b04f77-15bd-4c73-9a68-630275380e6b_buggy.java b/tmp/82318fcf-9874-444b-9c35-7756c79ffea7_fixed.java
index 19fd63e..50cd73b 100644
--- a/tmp/e9b04f77-15bd-4c73-9a68-630275380e6b_buggy.java
+++ b/tmp/82318fcf-9874-444b-9c35-7756c79ffea7_fixed.java
@@ -1,24 +1,13 @@
 /**
  * @return Whether the node is a block with a single statement that is
-   *     an expression.
+ *     an expression, excluding EXPR_RESULT to work around IE event handler bug.
  */
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        return maybeExpr.getType()!= Token.EXPR_RESULT && NodeUtil.isExpressionNode(maybeExpr);
       }
     }
-
     return false;
 }
\ No newline at end of file
