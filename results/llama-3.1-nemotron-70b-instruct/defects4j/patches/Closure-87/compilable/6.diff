diff --git a/tmp/f5fb5d84-c569-4c08-847e-99adfa7273f8_buggy.java b/tmp/cd93fef8-06e8-42f8-ae18-55203c864c79_fixed.java
index 19fd63e..892dfc1 100644
--- a/tmp/f5fb5d84-c569-4c08-847e-99adfa7273f8_buggy.java
+++ b/tmp/cd93fef8-06e8-42f8-ae18-55203c864c79_fixed.java
@@ -1,24 +1,15 @@
 /**
  * @return Whether the node is a block with a single statement that is
-   *     an expression.
+ *     an expression, excluding EXPR_RESULT to work around an IE bug
+ *     (http://code.google.com/p/closure-compiler/issues/detail?id=291)
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+      return maybeExpr.getType()!= Token.EXPR_RESULT &&
+             NodeUtil.isExpressionNode(maybeExpr);
     }
   }
-
   return false;
 }
\ No newline at end of file
