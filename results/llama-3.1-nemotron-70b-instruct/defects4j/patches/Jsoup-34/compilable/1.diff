diff --git a/tmp/7e93c8d3-eeee-4b4d-b078-ce0086c1c8f1_buggy.java b/tmp/ef4598de-9944-4aca-afe4-b9fcc99fcff1_fixed.java
index 21f64c6..072c9fe 100644
--- a/tmp/7e93c8d3-eeee-4b4d-b078-ce0086c1c8f1_buggy.java
+++ b/tmp/ef4598de-9944-4aca-afe4-b9fcc99fcff1_fixed.java
@@ -1,23 +1,24 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
     // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
         if (startChar!= input[offset])
             while(++offset < length && startChar!= input[offset]);
+        if (offset >= length) break; // prevent index out of bounds
         int i = offset + 1;
         int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+        if (last <= length) { // ensure sequence doesn't exceed input length
+            for (int j = 1; i <= last && seq.charAt(j) == input[i]; i++, j++);
+            if (i == last + 1) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
