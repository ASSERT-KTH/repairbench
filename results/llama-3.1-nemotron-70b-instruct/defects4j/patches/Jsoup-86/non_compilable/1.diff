diff --git a/tmp/ff5306b6-28a3-46ab-b72d-c29f47d11abd_buggy.java b/tmp/3f76ab32-580e-4c02-a7f5-b4eaf4827b1b_fixed.java
index b8e7fdb..d84e69c 100644
--- a/tmp/ff5306b6-28a3-46ab-b72d-c29f47d11abd_buggy.java
+++ b/tmp/3f76ab32-580e-4c02-a7f5-b4eaf4827b1b_fixed.java
@@ -1,15 +1,26 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
+    if (data.length() < 3 ||!data.startsWith("<!--") ||!data.endsWith("-->")) {
+        return null; // Input is not a comment, or too short to be an XML declaration
+    }
+    Document doc;
+    try {
+        doc = Jsoup.parse("<" + data.substring(4, data.length() -3) + ">", baseUri(), Parser.xmlParser());
+    } catch (ParseException e) {
+        return null; // Failed to parse as XML
+    }
+    if (doc.childNodeSize() == 0) {
+        return null; // No child nodes, not a valid XML declaration
+    }
     Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+    if (!el.tagName().equals("xml")) {
+        return null; // Root element is not 'xml', not an XML declaration
+    }
+    XmlDeclaration decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), true);
     decl.attributes().addAll(el.attributes());
-        }
     return decl;
 }
\ No newline at end of file
