diff --git a/tmp/53708344-44b4-45c7-b57e-12e2f792643f_buggy.java b/tmp/38d9a97b-d598-4396-980a-e052e7c751b5_fixed.java
index e69de29..9009339 100644
--- a/tmp/53708344-44b4-45c7-b57e-12e2f792643f_buggy.java
+++ b/tmp/38d9a97b-d598-4396-980a-e052e7c751b5_fixed.java
@@ -0,0 +1,22 @@
+/**
+ * Deserialize a MultiValueMap instance, checking the multi-value type for safety.
+ * 
+ * @param bytes the serialized form
+ * @return the deserialized MultiValueMap
+ * @throws java.io.IOException on IO errors
+ * @throws ClassNotFoundException on class resolution errors
+ * @throws UnsupportedOperationException if the multi-value class is not a Collection class
+ */
+protected Object deserialize(byte[] bytes) throws java.io.IOException, ClassNotFoundException {
+    ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));
+    MultiValueMap<?,?> map = (MultiValueMap<?,?>) ois.readObject();
+    ois.close();
+    
+    // Check if the multi-value class is a Collection implementation
+    Class<?> multiValueType = map.getMultiValueType();
+    if (!Collection.class.isAssignableFrom(multiValueType)) {
+        throw new UnsupportedOperationException("Unsafe multi-value type: " + multiValueType.getName());
+    }
+    
+    return map;
+}
\ No newline at end of file
