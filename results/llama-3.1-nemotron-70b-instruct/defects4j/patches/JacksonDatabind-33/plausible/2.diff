diff --git a/tmp/b0499bc9-77e0-41df-9b56-a61e443eb979_buggy.java b/tmp/dea28062-8a8c-4dfa-9cf5-2194b133fbb5_fixed.java
index 3cb9232..9199392 100644
--- a/tmp/b0499bc9-77e0-41df-9b56-a61e443eb979_buggy.java
+++ b/tmp/dea28062-8a8c-4dfa-9cf5-2194b133fbb5_fixed.java
@@ -1,26 +1,36 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg!= null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann!= null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
+        } else if (_hasAnnotation(a, JsonUnwrapped.class)) { // Added check for @JsonUnwrapped
+            // For @JsonUnwrapped, use the field/name as is (not empty string)
+            name = _propertyName(a);
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
             return null;
         }
     }
     return PropertyName.construct(name);
 }
+
+// Helper method to get the property name from the annotated element (field/method)
+private String _propertyName(Annotated a) {
+    if (a instanceof AnnotatedField) {
+        return ((AnnotatedField) a).getFullName();
+    } else if (a instanceof AnnotatedMethod) {
+        return ((AnnotatedMethod) a).getName();
+    }
+    // Handle other cases if necessary (e.g., AnnotatedParameter, etc.)
+    return null;
+}
\ No newline at end of file
