diff --git a/tmp/3340ed4a-040b-490d-8180-acfc2e47eb34_buggy.java b/tmp/fcae532a-0063-4c34-bb01-9d72d11c3b5c_fixed.java
index 3cb9232..eb2e062 100644
--- a/tmp/3340ed4a-040b-490d-8180-acfc2e47eb34_buggy.java
+++ b/tmp/fcae532a-0063-4c34-bb01-9d72d11c3b5c_fixed.java
@@ -1,26 +1,25 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg!= null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann!= null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
+        } else if (_hasAnnotation(a, JsonUnwrapped.class)) { // Added check for @JsonUnwrapped
+            // For @JsonUnwrapped, do not set name to empty string, 
+            // to indicate this is not a regular property
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
             return null;
         }
     }
-        return PropertyName.construct(name);
+    return (name == null)? null : PropertyName.construct(name); // Return null for @JsonUnwrapped
 }
\ No newline at end of file
