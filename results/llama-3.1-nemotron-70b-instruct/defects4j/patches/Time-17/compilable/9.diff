diff --git a/tmp/5889aed9-4d69-4561-bd85-6363d5245d52_buggy.java b/tmp/8363458e-1070-4b69-a4f3-a33d8c151456_fixed.java
index 03b03d7..9c82fe9 100644
--- a/tmp/5889aed9-4d69-4561-bd85-6363d5245d52_buggy.java
+++ b/tmp/8363458e-1070-4b69-a4f3-a33d8c151456_fixed.java
@@ -1,25 +1,37 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+    
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Determine the correct offset based on the input instant's offset
+    long offsetBefore = getOffset(instantBefore);
+    long offsetAfter = getOffset(instantAfter);
+    long inputOffset = getOffset(local);
+    
+    if (earlierOrLater) {
+        // Return the instant with the later offset, unless the input instant is already in the later offset
+        return (inputOffset == offsetAfter)? instant : convertLocalToUTC(local, false, instantAfter);
+    } else {
+        // Return the instant with the earlier offset, unless the input instant is already in the earlier offset
+        return (inputOffset == offsetBefore)? instant : convertLocalToUTC(local, false, instantBefore);
+    }
 }
+
+// Assuming the existence of the following methods, as they are not provided in the original code snippet
+// long convertUTCToLocal(long instant);
+// long convertLocalToUTC(long local, boolean lenient, long referenceInstant);
+// long getOffset(long instant);
\ No newline at end of file
