diff --git a/tmp/6f947bc5-0511-465b-9dc6-17524a0d9472_buggy.java b/tmp/82a455e9-7bf0-454f-a950-00699e636dc3_fixed.java
index 03b03d7..81a4eff 100644
--- a/tmp/6f947bc5-0511-465b-9dc6-17524a0d9472_buggy.java
+++ b/tmp/82a455e9-7bf0-454f-a950-00699e636dc3_fixed.java
@@ -1,25 +1,23 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    long earlierUTC = convertLocalToUTC(local, true, false);
+    long laterUTC = convertLocalToUTC(local, true, true);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // adjust to earlier or later offset
+    return earlierOrLater? laterUTC : earlierUTC;
 }
\ No newline at end of file
