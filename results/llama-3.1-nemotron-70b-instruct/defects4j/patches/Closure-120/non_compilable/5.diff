diff --git a/tmp/aee61c2e-1773-4537-a8c1-0eefbede6fc2_buggy.java b/tmp/e71c7f62-d88e-4565-92b9-560597c7913d_fixed.java
index 07b0792..f2a05bd 100644
--- a/tmp/aee61c2e-1773-4537-a8c1-0eefbede6fc2_buggy.java
+++ b/tmp/e71c7f62-d88e-4565-92b9-560597c7913d_fixed.java
@@ -1,22 +1,38 @@
 /**
  * @return Whether the variable is only assigned a value once for its
-     *     lifetime.
+ *     lifetime, considering the entire call graph.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
   // Make sure this assignment is not in a loop.
   for (BasicBlock block = ref.getBasicBlock();
        block!= null; block = block.getParent()) {
     if (block.isFunction) {
+      // Check if the function is recursive
+      if (isRecursiveFunction(block.getFunction())) {
+        return false;
+      }
       break;
     } else if (block.isLoop) {
       return false;
     }
   }
 
   return true;
 }
+
+// Helper function to check if a function is recursive
+private boolean isRecursiveFunction(Function fun) {
+  for (Reference ref : fun.getReferences()) {
+    if (ref.getReferencedName() == fun.getName() && 
+        ref.isCallSite() && 
+       !fun.getCallerFunctions().contains(ref.getCallerFunction())) {
+      return true;
+    }
+  }
+  return false;
+}
\ No newline at end of file
