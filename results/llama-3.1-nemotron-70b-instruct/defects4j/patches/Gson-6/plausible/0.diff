diff --git a/tmp/a6a75466-7639-4907-bd35-eecfb31d1cb7_buggy.java b/tmp/4a3670d3-5d33-4abb-8f17-a7138d6ed5f8_fixed.java
index 1c53d31..9707da8 100644
--- a/tmp/a6a75466-7639-4907-bd35-eecfb31d1cb7_buggy.java
+++ b/tmp/4a3670d3-5d33-4abb-8f17-a7138d6ed5f8_fixed.java
@@ -1,20 +1,20 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
          .construct()
          .create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+    // Fix: only call nullSafe() if typeAdapter is not null
+    return (typeAdapter!= null)? typeAdapter.nullSafe() : null;
 }
\ No newline at end of file
