diff --git a/tmp/e42b1f49-875d-4ee9-8425-0116f8792a62_buggy.java b/tmp/925211d0-7955-43d8-bdf8-7234744fdc13_fixed.java
index e1fc51f..07b1c2c 100644
--- a/tmp/e42b1f49-875d-4ee9-8425-0116f8792a62_buggy.java
+++ b/tmp/925211d0-7955-43d8-bdf8-7234744fdc13_fixed.java
@@ -1,9 +1,17 @@
+/**
+ * Checks if the invocation and candidate have the same method, 
+ * considering Java's generics forwarding methods.
+ * 
+ * @param candidate the invocation to compare with
+ * @return true if methods are the same, false otherwise
+ */
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Compare method names, declaring classes, and parameter types
+    // to account for Java's generics forwarding methods
+    return m1.getName().equals(m2.getName()) 
+           && m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass()) 
+           && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());
 }
\ No newline at end of file
