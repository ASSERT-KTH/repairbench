diff --git a/tmp/36ae1123-23e8-4307-8400-2d635551e79e_buggy.java b/tmp/0d5e28b6-914c-4626-a8a7-dafcabf4956c_fixed.java
index e1fc51f..ecbb54c 100644
--- a/tmp/36ae1123-23e8-4307-8400-2d635551e79e_buggy.java
+++ b/tmp/0d5e28b6-914c-4626-a8a7-dafcabf4956c_fixed.java
@@ -1,9 +1,16 @@
+/**
+ * Checks if the candidate invocation has the same method as this invocation.
+ * Handles cases where Java generates forwarding methods for generics.
+ *
+ * @param candidate the invocation to compare with
+ * @return true if the methods are equivalent, false otherwise
+ */
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Compare method names, return types, and parameter types to handle forwarding methods
+    return m1.getName().equals(m2.getName())
+           && m1.getReturnType().equals(m2.getReturnType())
+           && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());
 }
\ No newline at end of file
