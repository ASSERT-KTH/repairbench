diff --git a/tmp/924e76b7-cbd5-4e88-99dc-9f9194eb5f5a_buggy.java b/tmp/8fe6edd8-19c9-4277-8c00-5128e4aa25d2_fixed.java
index e1fc51f..e958ccb 100644
--- a/tmp/924e76b7-cbd5-4e88-99dc-9f9194eb5f5a_buggy.java
+++ b/tmp/8fe6edd8-19c9-4277-8c00-5128e4aa25d2_fixed.java
@@ -1,9 +1,18 @@
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
+    // Handle cases where Java generates forwarding methods for generics
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
+    // Check if either method is a synthetic forwarding method
+    if (m1.isSynthetic() || m2.isSynthetic()) {
+        // Compare the declaring classes and method signatures (name, return type, parameter types)
+        return m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass()) 
+               || m2.getDeclaringClass().isAssignableFrom(m1.getDeclaringClass())
+               && m1.getName().equals(m2.getName()) 
+               && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes()) 
+               && m1.getReturnType().equals(m2.getReturnType());
+    } else {
+        // Default to equals() for non-synthetic methods
         return m1.equals(m2);
     }
+}
\ No newline at end of file
