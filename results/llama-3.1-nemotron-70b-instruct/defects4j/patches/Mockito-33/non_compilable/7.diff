diff --git a/tmp/11315032-88e0-4266-8a43-b947428b5ae1_buggy.java b/tmp/1a98deb9-2ffa-4576-924f-78cd7863898c_fixed.java
index e1fc51f..b7fbf45 100644
--- a/tmp/11315032-88e0-4266-8a43-b947428b5ae1_buggy.java
+++ b/tmp/1a98deb9-2ffa-4576-924f-78cd7863898c_fixed.java
@@ -1,9 +1,17 @@
+/**
+ * Compares two Invocations to see if they have the same method, 
+ * considering Java's generics forwarding methods.
+ * 
+ * @param candidate Invocation to compare with the current invocation
+ * @return true if both invocations have the same method, false otherwise
+ */
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Compare methods based on name, parameter types, and declaring class
+    // to account for Java's generics forwarding methods
+    return m1.getName().equals(m2.getName()) 
+           && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes()) 
+           && m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass());
 }
\ No newline at end of file
