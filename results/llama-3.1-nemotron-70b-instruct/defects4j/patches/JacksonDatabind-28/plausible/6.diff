diff --git a/tmp/594e176c-ff91-435f-95bb-09181f9c1a16_buggy.java b/tmp/122edc7e-8c14-4dfa-83d8-5a6dfd5e5d93_fixed.java
index 66bb99f..b857592 100644
--- a/tmp/594e176c-ff91-435f-95bb-09181f9c1a16_buggy.java
+++ b/tmp/122edc7e-8c14-4dfa-83d8-5a6dfd5e5d93_fixed.java
@@ -1,14 +1,18 @@
 @Override
 public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
 {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+    JsonToken token = p.getCurrentToken();
+    if (token == JsonToken.START_OBJECT) {
         p.nextToken();
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
-            }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+    } else if (token == JsonToken.END_OBJECT) {
+        // Empty object, return an empty ObjectNode
+        return ctxt.getNodeFactory().objectNode();
+    } else if (token == JsonToken.FIELD_NAME) {
+        // Already pointed to the first field, deserialize as normal
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
-            }
+    } else {
+        // Any other token is an error
         throw ctxt.mappingException(ObjectNode.class);
     }
+}
\ No newline at end of file
