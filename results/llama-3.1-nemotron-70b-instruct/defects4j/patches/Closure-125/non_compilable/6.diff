diff --git a/tmp/032a5cfb-dce9-467f-a530-1e4a5d257dfb_buggy.java b/tmp/bf1c425c-60ab-4fb2-a90d-0ff1b04e8bd1_fixed.java
index 7e43c1c..e142f3a 100644
--- a/tmp/032a5cfb-dce9-467f-a530-1e4a5d257dfb_buggy.java
+++ b/tmp/bf1c425c-60ab-4fb2-a90d-0ff1b04e8bd1_fixed.java
@@ -1,19 +1,31 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
+  
+  // Enhanced type checking to handle interface and constructor intersections
   if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
     FunctionType fnType = type.toMaybeFunctionType();
     if (fnType!= null) {
       visitParameterList(t, n, fnType);
+      // Verify if the constructor implements an interface
+      if (type.isIntersectionType()) {
+        for (JSType intersectType : type.getIntersectionTypes()) {
+          if (intersectType.isInterface()) {
+            ensureTyped(t, n, intersectType);
+            break; // Assuming only one interface is expected
+          }
+        }
+      } else {
         ensureTyped(t, n, fnType.getInstanceType());
+      }
     } else {
       ensureTyped(t, n);
     }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
