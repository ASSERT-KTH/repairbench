diff --git a/tmp/5a92f594-ba5c-4b03-919c-5d34d37e10c8_buggy.java b/tmp/ab762757-67dd-48d1-ae18-8c40a8a618fd_fixed.java
index 6c0aa19..4f0ba43 100644
--- a/tmp/5a92f594-ba5c-4b03-919c-5d34d37e10c8_buggy.java
+++ b/tmp/ab762757-67dd-48d1-ae18-8c40a8a618fd_fixed.java
@@ -1,20 +1,22 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
     in = new PushbackInputStream(inputStream, buf.capacity());
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
+    // Fix: Initialize the buffer to avoid index out of bounds
+    buf = new byte[buf.capacity()];
     // haven't read anything so far
 }
\ No newline at end of file
