diff --git a/tmp/d7dc6c5d-4704-436e-85b0-4aef0fc714df_buggy.java b/tmp/8867e24f-513b-43d1-91e1-20c5c7b41d6f_fixed.java
index 6c0aa19..5443a33 100644
--- a/tmp/d7dc6c5d-4704-436e-85b0-4aef0fc714df_buggy.java
+++ b/tmp/8867e24f-513b-43d1-91e1-20c5c7b41d6f_fixed.java
@@ -1,20 +1,23 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+    // Fix: Ensure the PushbackInputStream buffer size is at least 2 to handle 
+    // stored entries with data descriptors (as in COMPRESS-264)
+    int bufferSize = Math.max(buf.capacity(), 2);
+    in = new PushbackInputStream(inputStream, bufferSize);
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
     // haven't read anything so far
 }
\ No newline at end of file
