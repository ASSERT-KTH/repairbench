diff --git a/tmp/18c98e82-8728-4ee2-813d-2cb8830b8b1f_buggy.java b/tmp/434f93dd-f191-4716-ad56-1f101267d6bd_fixed.java
index 845704e..a4dc5d3 100644
--- a/tmp/18c98e82-8728-4ee2-813d-2cb8830b8b1f_buggy.java
+++ b/tmp/434f93dd-f191-4716-ad56-1f101267d6bd_fixed.java
@@ -1,21 +1,19 @@
 /**
  * Turns out that these are expensive enough to create so that caching
  * does make sense.
  *<p>
  * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
-     * JAXB Annotations (failing a test).
-     * It is also possible that some other settings could make deserializers
-     * un-cacheable; but on the other hand, caching can make a big positive
-     * difference with performance... so it's a hard choice.
+ * a value type deserializer, key type deserializer or ignorable properties; 
+ * this caused issues with custom deserializers.
  * 
  * @since 2.4.4
  */
 @Override
 public boolean isCachable() {
     /* As per [databind#735], existence of value or key deserializer (only passed
-         * if annotated to use non-standard one) should also prevent caching.
+     * if annotated to use non-standard one) or ignorable properties should prevent caching.
      */
     return (_valueTypeDeserializer == null)
+            && (_keyTypeDeserializer == null) // Added check for key deserializer
             && (_ignorableProperties == null);
 }
\ No newline at end of file
