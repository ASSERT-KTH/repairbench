diff --git a/tmp/bfa8dcc4-dc58-4ab2-b34c-183173bb3558_buggy.java b/tmp/b8036e35-09d0-4f90-937f-dbb17d6f4089_fixed.java
index 845704e..dbcfaea 100644
--- a/tmp/bfa8dcc4-dc58-4ab2-b34c-183173bb3558_buggy.java
+++ b/tmp/b8036e35-09d0-4f90-937f-dbb17d6f4089_fixed.java
@@ -1,21 +1,22 @@
 /**
  * Turns out that these are expensive enough to create so that caching
  * does make sense.
  *<p>
  * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
+ * a value type deserializer or a key deserializer; this caused an issue with 2.4.4 of
  * JAXB Annotations (failing a test).
  * It is also possible that some other settings could make deserializers
  * un-cacheable; but on the other hand, caching can make a big positive
  * difference with performance... so it's a hard choice.
  * 
  * @since 2.4.4
  */
 @Override
 public boolean isCachable() {
     /* As per [databind#735], existence of value or key deserializer (only passed
      * if annotated to use non-standard one) should also prevent caching.
      */
     return (_valueTypeDeserializer == null)
+            && (_keyDeserializer == null) // Added check for key deserializer
             && (_ignorableProperties == null);
 }
\ No newline at end of file
