diff --git a/tmp/2cddfcf8-b645-4f35-880f-073d7b8270c1_buggy.java b/tmp/2d807025-5fc1-49b2-9a5a-b9a1be2c0f8d_fixed.java
index 43fb5fd..936a100 100644
--- a/tmp/2cddfcf8-b645-4f35-880f-073d7b8270c1_buggy.java
+++ b/tmp/2d807025-5fc1-49b2-9a5a-b9a1be2c0f8d_fixed.java
@@ -1,55 +1,60 @@
 /**
  * <p>Breaks <code>token</code> into its constituent parts
  * using the following algorithm.
  * <ul>
  *  <li>ignore the first character ("<b>-</b>")</li>
  *  <li>foreach remaining character check if an {@link Option}
  *  exists with that id.</li>
  *  <li>if an {@link Option} does exist then add that character
  *  prepended with "<b>-</b>" to the list of processed tokens.</li>
  *  <li>if the {@link Option} can have an argument value and there 
  *  are remaining characters in the token then add the remaining 
  *  characters as a token to the list of processed tokens.</li>
  *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> 
  *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
  *  "<b>--</b>" followed by the remaining characters and also 
  *  the remaining tokens directly to the processed tokens list.</li>
  *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
  *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
  *  character prepended with "<b>-</b>".</li>
  * </ul>
  * </p>
  *
  * @param token The current token to be <b>burst</b>
  * @param stopAtNonOption Specifies whether to stop processing
  * at the first non-Option encountered.
  */
 protected void burstToken(String token, boolean stopAtNonOption)
 {
-        for (int i = 1; i < token.length(); i++)
+    int i = 1;
+    while (i < token.length())
     {
         String ch = String.valueOf(token.charAt(i));
 
         if (options.hasOption(ch))
         {
             tokens.add("-" + ch);
             currentOption = options.getOption(ch);
 
-                if (currentOption.hasArg() && (token.length() != (i + 1)))
+            if (currentOption.hasArg() && (token.length() > (i + 1)))
             {
                 tokens.add(token.substring(i + 1));
-
                 break;
             }
+            else
+            {
+                i++;
+            }
         }
         else if (stopAtNonOption)
         {
-                process(token.substring(i));
+            tokens.add("--" + token.substring(i));
+            break;
         }
         else
         {
-                tokens.add(token);
-                break;
+            tokens.add("-" + ch);
+            i++;
         }
     }
 }
\ No newline at end of file
