diff --git a/tmp/2a70e019-d36b-4854-a7c7-0b7aafd9e078_buggy.java b/tmp/24fe1a32-c1d6-4581-b9c4-dab434b60bf7_fixed.java
index 26a24c6..964fa37 100644
--- a/tmp/2a70e019-d36b-4854-a7c7-0b7aafd9e078_buggy.java
+++ b/tmp/24fe1a32-c1d6-4581-b9c4-dab434b60bf7_fixed.java
@@ -1,13 +1,19 @@
 @Override
 public Number read(JsonReader in) throws IOException {
   JsonToken jsonToken = in.peek();
   switch (jsonToken) {
   case NULL:
     in.nextNull();
     return null;
   case NUMBER:
-        return new LazilyParsedNumber(in.nextString());
+  case STRING: // Added STRING case to handle numbers as strings
+    String numberString = in.nextString();
+    try {
+      return Double.valueOf(numberString); // Attempt to parse as double (vice versa with Integer/Long if needed)
+    } catch (NumberFormatException e) {
+      throw new JsonSyntaxException("Expecting a valid number, got: \"" + numberString + "\"");
+    }
   default:
     throw new JsonSyntaxException("Expecting number, got: " + jsonToken);
   }
 }
\ No newline at end of file
