diff --git a/tmp/01661d49-9e0e-48e4-bdbd-e28e40c47f9d_buggy.java b/tmp/ba5083a2-8e96-46f9-afac-1e543b0042bb_fixed.java
index 373b1e8..54ab510 100644
--- a/tmp/01661d49-9e0e-48e4-bdbd-e28e40c47f9d_buggy.java
+++ b/tmp/ba5083a2-8e96-46f9-afac-1e543b0042bb_fixed.java
@@ -1,37 +1,40 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) { // Fixed & to &&
         i = 3;
     }
 
-            int end;
-            for (int j = input.length; i < j; ++i) {
+    for (; i < input.length; ++i) { // Replaced for loop initialization
         int o = input[i];
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
         // UTF-8 leading:
+        int end;
         if ((o & 0xE0) == 0xC0) {
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
             end = i + 3;
         } else {
             return false;
         }
 
+        // Check for bounds before iterating
+        if (end > input.length) {
+            return false;
+        }
 
-                while (i < end) {
-                    i++;
+        while (++i < end) { // Increment i here to avoid re-checking current byte
             o = input[i];
             if ((o & 0xC0)!= 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
