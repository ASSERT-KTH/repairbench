diff --git a/tmp/8dd9bd88-3187-4a59-b548-81af2834838d_buggy.java b/tmp/47aa9eb0-ce27-48de-836e-9c871df047a3_fixed.java
index 939f49b..32c092f 100644
--- a/tmp/8dd9bd88-3187-4a59-b548-81af2834838d_buggy.java
+++ b/tmp/47aa9eb0-ce27-48de-836e-9c871df047a3_fixed.java
@@ -1,21 +1,27 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
+      // Check if the property is 'prototype' regardless of case
       if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          child.getString().equalsIgnoreCase("prototype")) {
+        return true;
+      }
+    } else {
+      // Also consider direct assignments to 'prototype' (e.g., x.prototype =...)
+      Node rhs = assign.getFirstChild().getNext();
+      if (n.getString().equalsIgnoreCase("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
