diff --git a/tmp/77f2eae1-d02c-496f-b45c-12fb2b31036d_buggy.java b/tmp/fdcc8d80-e6f0-4932-844a-fddb18ac8424_fixed.java
index 877a1a1..624b246 100644
--- a/tmp/77f2eae1-d02c-496f-b45c-12fb2b31036d_buggy.java
+++ b/tmp/fdcc8d80-e6f0-4932-844a-fddb18ac8424_fixed.java
@@ -1,14 +1,22 @@
 /**
  * Returns the percentage of values that are equal to v
  * (as a proportion between 0 and 1).
  * <p>
  * Returns <code>Double.NaN</code> if no values have been added.</p>
  *
  * @param v the value to lookup
  * @return the proportion of values equal to v
  * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
  */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    // Fix: avoid implicit conversion to cumulative percentage
+    // by finding the exact count and dividing by total count
+    long count = getCount(v);
+    long total = getSumCount();
+    return (total == 0)? Double.NaN : ((double) count) / total;
 }
+
+// Assuming the existence of these methods (as they are not provided):
+// - getCount(Object v): returns the count of occurrences of 'v'
+// - getSumCount(): returns the total count of all values
\ No newline at end of file
