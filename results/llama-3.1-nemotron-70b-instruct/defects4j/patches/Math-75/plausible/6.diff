diff --git a/tmp/d533bf88-f246-444e-b1d7-0db2a81f4ce1_buggy.java b/tmp/8dce290e-8b98-406e-ae2d-802e84f3a0ca_fixed.java
index 877a1a1..9ae783c 100644
--- a/tmp/d533bf88-f246-444e-b1d7-0db2a81f4ce1_buggy.java
+++ b/tmp/8dce290e-8b98-406e-ae2d-802e84f3a0ca_fixed.java
@@ -1,14 +1,21 @@
 /**
  * Returns the percentage of values that are equal to v
  * (as a proportion between 0 and 1).
  * <p>
  * Returns <code>Double.NaN</code> if no values have been added.</p>
  *
  * @param v the value to lookup
  * @return the proportion of values equal to v
  * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
  */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    //Cast to Comparable only if v is indeed Comparable
+    if (v instanceof Comparable) {
+        return getCount((Comparable<?>) v) / (double) getSumFreq() ;
+    } else {
+        // If v is not Comparable, return 0 (or consider throwing an exception, 
+        // depending on the desired behavior for non-comparable objects)
+        return 0;
+    }
 }
\ No newline at end of file
