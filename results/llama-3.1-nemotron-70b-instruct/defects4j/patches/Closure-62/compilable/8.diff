diff --git a/tmp/54480e25-5cf3-4f77-89d0-d62114b01bb8_buggy.java b/tmp/1ccc0c70-b49c-440d-a2f1-a64df424e3d1_fixed.java
index 904dba7..97cf82d 100644
--- a/tmp/54480e25-5cf3-4f77-89d0-d62114b01bb8_buggy.java
+++ b/tmp/1ccc0c70-b49c-440d-a2f1-a64df424e3d1_fixed.java
@@ -1,46 +1,55 @@
+/**
+ * Fixes the formatting of error messages when the error character index is at the end of the line.
+ * 
+ * @param error    the JSError object containing error details
+ * @param warning  boolean indicating if the error is a warning
+ * @return formatted error message as a string
+ */
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName!= null) {
         b.append(error.sourceName);
         if (error.lineNumber > 0) {
             b.append(':');
             b.append(error.lineNumber);
         }
         b.append(": ");
     }
 
     b.append(getLevelName(warning? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt!= null) {
         b.append(sourceExcerpt);
         b.append('\n');
         int charno = error.getCharno();
 
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
-        for (int i = 0; i < charno; i++) {
+        // Fix: handle cases where charno is equal to sourceExcerpt length (end of line)
+        if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) {
+            for (int i = 0; i < (charno == sourceExcerpt.length()? charno - 1 : charno); i++) {
                 char c = sourceExcerpt.charAt(i);
                 if (Character.isWhitespace(c)) {
                     b.append(c);
                 } else {
                     b.append(' ');
                 }
             }
+            // Add caret only if not at the very end of the excerpt (to avoid extra space)
+            if (charno < sourceExcerpt.length() || sourceExcerpt.endsWith(" ")) {
                 b.append("^\n");
+            } else {
+                b.append("\n"); // or just append nothing if you don't want an extra newline
+            }
         }
     }
     return b.toString();
 }
\ No newline at end of file
