diff --git a/tmp/ca147287-e32c-4d90-a6d2-925c30cc8b91_buggy.java b/tmp/b39bcedf-a691-417e-b00e-687c37a4d968_fixed.java
index 904dba7..090d228 100644
--- a/tmp/ca147287-e32c-4d90-a6d2-925c30cc8b91_buggy.java
+++ b/tmp/b39bcedf-a691-417e-b00e-687c37a4d968_fixed.java
@@ -1,46 +1,55 @@
+/**
+ * Fixes the formatting of error messages to correctly handle spaces at the end of a line.
+ * 
+ * @param error    the JSError object containing error details
+ * @param warning  a boolean indicating if the error is a warning
+ * @return a formatted string representing the error message
+ */
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName!= null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
 
     b.append(getLevelName(warning? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt!= null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
 
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+      // Fix: Removed the condition that was causing the test failures
+      // Now, it will correctly add the padding and the arrow even if charno equals sourceExcerpt.length()
+      if (excerpt.equals(LINE) && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {
             b.append(c);
           } else {
             b.append(' ');
           }
         }
+        // Fix: Added a check to avoid StringIndexOutOfBoundsException
+        if (charno == sourceExcerpt.length() &&!sourceExcerpt.endsWith(" ")) {
+          b.append(' ');
+        }
         b.append("^\n");
       }
     }
     return b.toString();
 }
\ No newline at end of file
