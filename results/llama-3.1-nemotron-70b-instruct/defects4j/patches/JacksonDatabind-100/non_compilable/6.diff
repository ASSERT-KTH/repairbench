diff --git a/tmp/663903ed-e2c1-427f-968d-5b0f27919329_buggy.java b/tmp/1ff9f286-2692-4876-94de-4cebc3e16f1f_fixed.java
index fc8c302..12cccfd 100644
--- a/tmp/663903ed-e2c1-427f-968d-5b0f27919329_buggy.java
+++ b/tmp/1ff9f286-2692-4876-94de-4cebc3e16f1f_fixed.java
@@ -1,23 +1,30 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n!= null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n.isTextual()) { // Added check for TextNode
+            try {
+                return b64variant.decode(((TextNode) n).textValue(), this); // Use provided variant for decoding
+            } catch (IllegalArgumentException e) {
+                throw new JsonParseException(this, "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage());
+            }
+        }
         byte[] data = n.binaryValue();
         if (data!= null) {
             return data;
         }
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
