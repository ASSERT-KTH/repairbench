diff --git a/tmp/2e75c304-e0a8-4630-b87b-d85282b99ad7_buggy.java b/tmp/ba1a452f-1032-4bd0-b4d0-5b0e9e8c8eeb_fixed.java
index 0722547..acbfea2 100644
--- a/tmp/2e75c304-e0a8-4630-b87b-d85282b99ad7_buggy.java
+++ b/tmp/ba1a452f-1032-4bd0-b4d0-5b0e9e8c8eeb_fixed.java
@@ -1,26 +1,31 @@
 @Override
 public void feedInput(byte[] buf, int start, int end) throws IOException
 {
     // Must not have remaining input
     if (_inputPtr < _inputEnd) {
         _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
     }
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
     // and shouldn't have been marked as end-of-input
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
     // Time to update pointers first
     _currInputProcessed += _origBufferLen;
 
     // Also need to adjust row start, to work as if it extended into the past wrt new buffer
+    // FIX: Adjust _currInputRowStart based on the new start position in the overall input stream
+    if (start < _inputPtr) { // new input prepends to existing
+        _currInputRowStart -= (_inputPtr - start);
+    } else { // new input appends to existing
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+    }
 
     // And then update buffer settings
     _inputBuffer = buf;
     _inputPtr = start;
     _inputEnd = end;
     _origBufferLen = end - start;
 }
\ No newline at end of file
