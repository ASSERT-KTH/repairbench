diff --git a/tmp/a1bbf37f-6799-481c-ab0a-d3abdcf54d4e_buggy.java b/tmp/3c49e9df-2c0b-4f39-a8cb-9eedad8bea77_fixed.java
index 40f74f7..38af9ce 100644
--- a/tmp/a1bbf37f-6799-481c-ab0a-d3abdcf54d4e_buggy.java
+++ b/tmp/3c49e9df-2c0b-4f39-a8cb-9eedad8bea77_fixed.java
@@ -1,50 +1,60 @@
 public static boolean testNode(Node node, NodeTest test) {
     if (test == null) {
         return true;
     }
     if (test instanceof NodeNameTest) {
         if (node.getNodeType()!= Node.ELEMENT_NODE) {
             return false;
         }
 
         NodeNameTest nodeNameTest = (NodeNameTest) test;
         QName testName = nodeNameTest.getNodeName();
         String namespaceURI = nodeNameTest.getNamespaceURI();
         boolean wildcard = nodeNameTest.isWildcard();
         String testPrefix = testName.getPrefix();
         if (wildcard && testPrefix == null) {
             return true;
         }
         if (wildcard
             || testName.getName()
                    .equals(DOMNodePointer.getLocalName(node))) {
             String nodeNS = DOMNodePointer.getNamespaceURI(node);
+            // FIX: handle default namespace (no prefix) correctly
+            if (testPrefix == null && nodeNS!= null && nodeNS.isEmpty()) {
+                return true;
+            }
             return equalStrings(namespaceURI, nodeNS);
         }
+        // FIX: also match by prefix if available
+        if (testPrefix!= null && DOMNodePointer.getPrefix(node)!= null) {
+            return testPrefix.equals(DOMNodePointer.getPrefix(node))
+                && testName.getName().equals(DOMNodePointer.getLocalName(node))
+                && equalStrings(namespaceURI, DOMNodePointer.getNamespaceURI(node));
+        }
         return false;
     }
     if (test instanceof NodeTypeTest) {
         int nodeType = node.getNodeType();
         switch (((NodeTypeTest) test).getNodeType()) {
             case Compiler.NODE_TYPE_NODE :
                 return nodeType == Node.ELEMENT_NODE
                         || nodeType == Node.DOCUMENT_NODE;
             case Compiler.NODE_TYPE_TEXT :
                 return nodeType == Node.CDATA_SECTION_NODE
                     || nodeType == Node.TEXT_NODE;
             case Compiler.NODE_TYPE_COMMENT :
                 return nodeType == Node.COMMENT_NODE;
             case Compiler.NODE_TYPE_PI :
                 return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
         }
         return false;
     }
     if (test instanceof ProcessingInstructionTest) {
         if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
             String testPI = ((ProcessingInstructionTest) test).getTarget();
             String nodePI = ((ProcessingInstruction) node).getTarget();
             return testPI.equals(nodePI);
         }
     }
     return false;
 }
\ No newline at end of file
