diff --git a/tmp/02f30eaf-dc96-4351-afbe-f25bc30eee06_buggy.java b/tmp/a618a370-b541-4534-a1ef-a66a6d202ef6_fixed.java
index e69de29..2664338 100644
--- a/tmp/02f30eaf-dc96-4351-afbe-f25bc30eee06_buggy.java
+++ b/tmp/a618a370-b541-4534-a1ef-a66a6d202ef6_fixed.java
@@ -0,0 +1,22 @@
+/**
+ * Tests that empty strings coerce to null for the given primitive type.
+ * 
+ * @param clazz   The primitive type wrapper class (e.g., Integer.class for int)
+ * @param defaultValue The default value expected when not coercing to null
+ */
+protected void _testEmptyToNullCoercion(Class<?> clazz, Object defaultValue) throws Exception {
+    // Assuming ObjectMapper is configured elsewhere to enable/disable
+    // DESERIALIZE_EMPTY_STRING_AS_NULL for these tests
+    ObjectMapper mapper = new ObjectMapper();
+    mapper.configure(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT, true);
+
+    // Test with an empty string, expecting null
+    String jsonEmpty = "\"\"";
+    Object resultEmpty = mapper.readValue(jsonEmpty, clazz);
+    assertNull("Expected null for empty string, but got: " + resultEmpty, resultEmpty);
+
+    // Test with a non-empty value to ensure it doesn't coerce to null
+    String jsonWithValue = "\"" + defaultValue.toString() + "\"";
+    Object resultWithValue = mapper.readValue(jsonWithValue, clazz);
+    assertEquals("Expected value, but got: " + resultWithValue, defaultValue, resultWithValue);
+}
\ No newline at end of file
