diff --git a/tmp/c1254492-0d02-40ad-b1c8-e80b0f34cf62_buggy.java b/tmp/5594f10f-2371-45aa-9c83-40b6383c240b_fixed.java
index e69de29..2d89203 100644
--- a/tmp/c1254492-0d02-40ad-b1c8-e80b0f34cf62_buggy.java
+++ b/tmp/5594f10f-2371-45aa-9c83-40b6383c240b_fixed.java
@@ -0,0 +1,25 @@
+/**
+ * Coerces empty values to null for primitive types.
+ *
+ * @param clazz  the primitive type class (e.g., int.class, long.class, etc.)
+ * @param value  the value to be coerced (primitive wrapper instance)
+ * @return null if the value is considered "empty" for the given type, otherwise the original value
+ */
+public Object coerceEmptyToNull(Class<?> clazz, Object value) {
+    if (value == null) {
+        return null; // already null, no coercion needed
+    }
+
+    if (clazz == int.class || clazz == Integer.class) {
+        return ((Integer) value) == 0? null : value;
+    } else if (clazz == long.class || clazz == Long.class) {
+        return ((Long) value) == 0L? null : value;
+    } else if (clazz == double.class || clazz == Double.class) {
+        return ((Double) value) == 0.0? null : value;
+    } else if (clazz == float.class || clazz == Float.class) {
+        return ((Float) value) == 0.0f? null : value;
+    } else {
+        // Either not a primitive type or not supported; return original value
+        return value;
+    }
+}
\ No newline at end of file
