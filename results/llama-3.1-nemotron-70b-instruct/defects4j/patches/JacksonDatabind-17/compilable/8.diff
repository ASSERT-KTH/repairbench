diff --git a/tmp/43c6febb-a81b-4e08-a18e-b3c254ea15c7_buggy.java b/tmp/672c2c4f-eefa-4e3d-bcc7-1b01478cfe49_fixed.java
index 01967cc..61c5746 100644
--- a/tmp/43c6febb-a81b-4e08-a18e-b3c254ea15c7_buggy.java
+++ b/tmp/672c2c4f-eefa-4e3d-bcc7-1b01478cfe49_fixed.java
@@ -1,35 +1,39 @@
 /**
  * Method called to check if the default type handler should be
  * used for given type.
  * Note: "natural types" (String, Boolean, Integer, Double) will never
  * use typing; that is both due to them being concrete and final,
  * and since actual serializers and deserializers will also ignore any
  * attempts to enforce typing.
  */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
+        JavaType nonArrayT = t;
+        while (nonArrayT.isArrayType()) {
+            nonArrayT = nonArrayT.getContentType();
         }
-                // fall through
+        return (nonArrayT.getRawClass() == Object.class)
+                || (!nonArrayT.isConcrete()
+                        // [databind#88] Should not apply to JSON tree models:
+                || TreeNode.class.isAssignableFrom(nonArrayT.getRawClass()));
+
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
         return (t.getRawClass() == Object.class)
                 || (!t.isConcrete()
                         // [databind#88] Should not apply to JSON tree models:
                 || TreeNode.class.isAssignableFrom(t.getRawClass()));
 
     case NON_FINAL:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
+        JavaType nonFinalT = t;
+        while (nonFinalT.isArrayType()) {
+            nonFinalT = nonFinalT.getContentType();
         }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+        return!nonFinalT.isFinal() &&!TreeNode.class.isAssignableFrom(nonFinalT.getRawClass());
+
     default:
     //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
         return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file
