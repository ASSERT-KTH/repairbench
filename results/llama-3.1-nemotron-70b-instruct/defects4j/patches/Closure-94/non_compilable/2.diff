diff --git a/tmp/b374cda4-b00a-4a71-8d06-a6b2ef666a1d_buggy.java b/tmp/f6a7505c-5d57-45f3-8698-9093d6649b3b_fixed.java
index 66e3d01..99e6af3 100644
--- a/tmp/b374cda4-b00a-4a71-8d06-a6b2ef666a1d_buggy.java
+++ b/tmp/f6a7505c-5d57-45f3-8698-9093d6649b3b_fixed.java
@@ -1,34 +1,42 @@
 /**
  * Determines whether the given value may be assigned to a define.
  *
  * @param val The value being assigned.
  * @param defines The list of names of existing defines.
  */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
   switch (val.getType()) {
     case Token.STRING:
     case Token.NUMBER:
     case Token.TRUE:
     case Token.FALSE:
+    case Token.NULL:
+    case Token.UNDEFINED:
       return true;
 
     // Binary operators are only valid if both children are valid.
     case Token.BITAND:
     case Token.BITNOT:
     case Token.BITOR:
     case Token.BITXOR:
+    case Token.ADD:
+      return isValidDefineValue(val.getFirstChild(), defines) 
+          && isValidDefineValue(val.getLastChild(), defines);
 
     // Uniary operators are valid if the child is valid.
     case Token.NOT:
     case Token.NEG:
       return isValidDefineValue(val.getFirstChild(), defines);
 
     // Names are valid if and only if they are defines themselves.
     case Token.NAME:
     case Token.GETPROP:
       if (val.isQualifiedName()) {
         return defines.contains(val.getQualifiedName());
       }
-    }
+      // fall through for non-qualified names
+
+    default:
       return false;
   }
+}
\ No newline at end of file
