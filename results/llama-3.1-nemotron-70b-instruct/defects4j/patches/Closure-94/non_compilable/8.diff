diff --git a/tmp/e383d4ff-b29d-4ac7-a4e3-89e3bcbc7ca2_buggy.java b/tmp/8a330780-3eed-49f6-898a-e48c17384ab8_fixed.java
index 66e3d01..c4cb600 100644
--- a/tmp/e383d4ff-b29d-4ac7-a4e3-89e3bcbc7ca2_buggy.java
+++ b/tmp/8a330780-3eed-49f6-898a-e48c17384ab8_fixed.java
@@ -1,34 +1,38 @@
 /**
  * Determines whether the given value may be assigned to a define.
  *
  * @param val The value being assigned.
  * @param defines The list of names of existing defines.
  */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
+      case Token.NULL:
+      case Token.UNDEFINED:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
-      case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
+      case Token.PLUS: // Added Token.PLUS to allow string concatenation
+        return isValidDefineValue(val.getFirstChild(), defines) 
+               && isValidDefineValue(val.getLastChild(), defines);
 
       // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
 }
\ No newline at end of file
