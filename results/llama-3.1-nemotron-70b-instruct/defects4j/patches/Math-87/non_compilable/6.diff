diff --git a/tmp/3caa47cb-987e-4a9f-bca9-a6720f028a0f_buggy.java b/tmp/b6577636-075e-49ef-a38c-a1a5f1dcfa85_fixed.java
index 70cafe0..4d6b877 100644
--- a/tmp/3caa47cb-987e-4a9f-bca9-a6720f028a0f_buggy.java
+++ b/tmp/b6577636-075e-49ef-a38c-a1a5f1dcfa85_fixed.java
@@ -1,18 +1,23 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+    for (int i = 0; i < getHeight(); i++) {
+        if (i < getNumObjectiveFunctions()) {
+            // Ignore objective functions for basis determination
+            continue;
+        }
+        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && 
+           MiscUtil.isNearlyZero(getEntriesInColumnAsList(col), i, epsilon, 1)) {
             if (row == null) {
                 row = i;
             } else {
-                return null;
+                return null; // Column is not basic if it has multiple nonzero entries
             }
         }
     }
     return row;
 }
\ No newline at end of file
