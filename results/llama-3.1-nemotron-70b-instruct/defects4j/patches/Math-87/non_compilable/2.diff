diff --git a/tmp/b072078e-275c-4e03-b17e-415463278109_buggy.java b/tmp/a00949d9-db76-4383-bdcb-6dc13dc4f5ea_fixed.java
index 70cafe0..a87be10 100644
--- a/tmp/b072078e-275c-4e03-b17e-415463278109_buggy.java
+++ b/tmp/a00949d9-db76-4383-bdcb-6dc13dc4f5ea_fixed.java
@@ -1,18 +1,19 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+    for (int i = 0; i < getHeight(); i++) { // CHANGED: start from 0 instead of getNumObjectiveFunctions()
+        if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && // CHANGED: check for 1.0 (basic variable indicator)
+            getNumEntriesInRow(i) == 1) { // ADDED: ensure only one entry in the row (basic variable condition)
             if (row == null) {
                 row = i;
             } else {
-                return null;
+                return null; // column is not basic if multiple rows match
             }
         }
     }
     return row;
 }
\ No newline at end of file
