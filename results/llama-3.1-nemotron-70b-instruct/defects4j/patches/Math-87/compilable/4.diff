diff --git a/tmp/a998bf9b-e976-46a3-ad10-f43b892ca226_buggy.java b/tmp/c9cbd526-ce42-4eaf-bd90-e7ecce36cca6_fixed.java
index 70cafe0..b61121f 100644
--- a/tmp/a998bf9b-e976-46a3-ad10-f43b892ca226_buggy.java
+++ b/tmp/c9cbd526-ce42-4eaf-bd90-e7ecce36cca6_fixed.java
@@ -1,18 +1,19 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+    for (int i = 0; i < getHeight(); i++) { // Changed from getNumObjectiveFunctions() to 0
+        if (MathUtils.equals(Math.abs(getEntry(i, col)), 1.0, epsilon) && // Check for absolute value equal to 1
+            (i >= getNumObjectiveFunctions()) || (col == 0)) { // Ensure basic variable is not in objective function row unless it's the RHS column
             if (row == null) {
                 row = i;
             } else {
-                return null;
+                return null; // More than one row has the variable, it's not basic
             }
         }
     }
     return row;
 }
\ No newline at end of file
