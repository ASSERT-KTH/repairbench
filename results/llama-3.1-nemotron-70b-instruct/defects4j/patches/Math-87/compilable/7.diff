diff --git a/tmp/6f2def03-bb9f-4eea-a42d-fcdc102fdb07_buggy.java b/tmp/bb40cd02-22e8-4355-8571-94376b69a343_fixed.java
index 70cafe0..90914f6 100644
--- a/tmp/6f2def03-bb9f-4eea-a42d-fcdc102fdb07_buggy.java
+++ b/tmp/bb40cd02-22e8-4355-8571-94376b69a343_fixed.java
@@ -1,18 +1,18 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
+    for (int i = 0; i < getHeight(); i++) {
+        if (i >= getNumObjectiveFunctions() && MathUtils.equals(getEntry(i, col), 1.0, epsilon) 
+            && (row == null || (getEntry(row, col)!= 1.0 && getEntry(row, col)!= 0.0))) {
             row = i;
-                } else {
+        } else if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && row!= null) {
+            // this column is not basic if it has more than one 1.0 entry
             return null;
         }
     }
-        }
     return row;
 }
\ No newline at end of file
