diff --git a/tmp/b4eca74b-8098-45e2-a20b-43b85625b5bc_buggy.java b/tmp/9889b1f0-6298-436b-bc26-927eba51aebe_fixed.java
index 1ea204a..fdbc475 100644
--- a/tmp/b4eca74b-8098-45e2-a20b-43b85625b5bc_buggy.java
+++ b/tmp/9889b1f0-6298-436b-bc26-927eba51aebe_fixed.java
@@ -1,17 +1,21 @@
-  private static String extractClassNameIfGoog(Node node, Node parent,
-      String functionName){
+/**
+ * Extracts the class name from a goog.require() call if the provided function name matches.
+ * 
+ * @param node        The current node to inspect
+ * @param parent      The parent node of the current node
+ * @param functionName The name of the function to check for (e.g., "goog.require")
+ * @return The class name if the function name matches and a class name is provided, null otherwise
+ */
+private static String extractClassNameIfGoog(Node node, Node parent, String functionName) {
     String className = null;
-    if (NodeUtil.isExprCall(parent)) {
-      Node callee = node.getFirstChild();
-      if (callee != null && callee.getType() == Token.GETPROP) {
-        String qualifiedName = callee.getQualifiedName();
-        if (functionName.equals(qualifiedName)) {
-          Node target = callee.getNext();
-          if (target != null) {
-            className = target.getString();
-          }
+    if (NodeUtil.isExprCall(parent) && functionName.equals(parent.getFirstChild().getString())) {
+      Node args = parent.getChildAtIndex(1); // arguments node
+      if (args.getChildCount() == 1) { // exactly one argument
+        Node arg = args.getFirstChild();
+        if (arg.getType() == Token.STRING) { // argument is a string
+          className = arg.getString().trimQuotes(); // extract string value without quotes
         }
       }
     }
     return className;
 }
\ No newline at end of file
