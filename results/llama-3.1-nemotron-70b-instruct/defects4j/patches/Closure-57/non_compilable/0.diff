diff --git a/tmp/73cefa50-6791-4641-ad8e-16d41e1e3600_buggy.java b/tmp/7436c249-54cf-4d04-8e73-cb95418a385b_fixed.java
index 1ea204a..cf69c5b 100644
--- a/tmp/73cefa50-6791-4641-ad8e-16d41e1e3600_buggy.java
+++ b/tmp/7436c249-54cf-4d04-8e73-cb95418a385b_fixed.java
@@ -1,17 +1,24 @@
-  private static String extractClassNameIfGoog(Node node, Node parent,
-      String functionName){
+/**
+ * Extracts the class name if the given node is a goog.require() call.
+ * 
+ * @param node Node to analyze
+ * @param parent Parent node of the given node
+ * @param functionName Expected function name (e.g., "goog.require")
+ * @return Class name if extracted, null otherwise
+ */
+private static String extractClassNameIfGoog(Node node, Node parent, String functionName){
     String className = null;
-    if (NodeUtil.isExprCall(parent)) {
+    if (NodeUtil.isExprCall(parent) && parent.getChildCount() > 1) { // Ensure at least one argument
       Node callee = node.getFirstChild();
       if (callee!= null && callee.getType() == Token.GETPROP) {
         String qualifiedName = callee.getQualifiedName();
         if (functionName.equals(qualifiedName)) {
-          Node target = callee.getNext();
-          if (target != null) {
-            className = target.getString();
+          Node target = parent.getChildCount() > 1? parent.getChild(1) : null; // Get the first argument
+          if (target!= null && target.getFirstChild()!= null) { // Ensure argument has a child (e.g., string literal)
+            className = target.getFirstChild().getString();
           }
         }
       }
     }
     return className;
 }
\ No newline at end of file
