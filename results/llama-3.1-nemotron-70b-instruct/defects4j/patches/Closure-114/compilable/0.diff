diff --git a/tmp/5da3308e-d741-4f73-9c45-d817149e2d34_buggy.java b/tmp/dc6380e8-7a7b-4e39-bace-941be14b1d0b_fixed.java
index c51c8b1..0b7e2b8 100644
--- a/tmp/5da3308e-d741-4f73-9c45-d817149e2d34_buggy.java
+++ b/tmp/dc6380e8-7a7b-4e39-bace-941be14b1d0b_fixed.java
@@ -1,31 +1,17 @@
 private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {
   Node nameNode = n.getFirstChild();
   Node parent = n.getParent();
   NameInformation ns = createNameInformation(t, nameNode);
   if (ns!= null) {
     if (parent.isFor() &&!NodeUtil.isForIn(parent)) {
       // Patch for assignments that appear in the init, 
-          // condition or iteration part of a FOR loop.  Without
-          // this change, all 3 of those parts try to claim the for
-          // loop as their dependency scope.  The last assignment in
-          // those three fields wins, which can result in incorrect
-          // reference edges between referenced and assigned variables.
-          //
-          // TODO(user) revisit the dependency scope calculation
-          // logic.
-          if (parent.getFirstChild().getNext() != n) {
-            recordDepScope(recordNode, ns);
-          } else {
-            recordDepScope(nameNode, ns);
-          }
+      // condition or iteration part of a FOR loop.
+      recordDepScope(nameNode, ns); // Always associate with the nameNode
+    } else if (parent.isExprResult() && parent.getParent().isCall()) {
+      // Don't associate the dependency scope with the recordNode if the 
+      // assignment is the caller expression in a call.
     } else {
-          // The rhs of the assignment is the caller, so it's used by the
-          // context. Don't associate it w/ the lhs.
-          // FYI: this fixes only the specific case where the assignment is the
-          // caller expression, but it could be nested deeper in the caller and
-          // we would still get a bug.
-          // See testAssignWithCall2 for an example of this.
       recordDepScope(recordNode, ns);
     }
   }
 }
\ No newline at end of file
