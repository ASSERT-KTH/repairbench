diff --git a/tmp/50495403-bc4f-486f-ade2-d0bf8a133e7e_buggy.java b/tmp/af7347ba-9d20-4cc2-b7c6-e848d04f6d30_fixed.java
index e69de29..b9646c0 100644
--- a/tmp/50495403-bc4f-486f-ade2-d0bf8a133e7e_buggy.java
+++ b/tmp/af7347ba-9d20-4cc2-b7c6-e848d04f6d30_fixed.java
@@ -0,0 +1,31 @@
+/**
+ * Recomputes and returns the form's submitted data, as a list of key-value pairs.
+ * 
+ * @return list of submitted form data (key=value) pairs
+ */
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    for (Element input : select("input, textarea, select")) {
+        String name = input.attr("name");
+        if (name.isEmpty()) continue; // ignore inputs without a name
+
+        if (input.tagName().equals("input")) {
+            String type = input.attr("type");
+            if (type.equals("radio") || type.equals("checkbox")) {
+                if (!input.hasAttr("checked")) continue; // only add checked boxes
+            } else if (type.equals("submit")) {
+                if (input.attr("name").equals(getAttr("name"))) continue; // don't add the submit button itself
+            } else if (type.equals("file")) {
+                // todo handle file uploads (if possible in a HTML parser)
+            }
+        }
+
+        String value = input.attr("value").isEmpty()? input.text() : input.attr("value");
+        data.add(new Connection.KeyVal(name, value));
+    }
+    return data.stream() // Filter out removed elements
+              .filter(keyVal ->!doc.selectFirst("input[name=" + keyVal.key() + "]").isEmpty() 
+                           ||!doc.selectFirst("textarea[name=" + keyVal.key() + "]").isEmpty() 
+                           ||!doc.selectFirst("select[name=" + keyVal.key() + "]").isEmpty())
+              .collect(Collectors.toList());
+}
\ No newline at end of file
