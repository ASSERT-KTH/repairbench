diff --git a/tmp/b13e22bd-aefb-490f-b2f2-cbc2223098ee_buggy.java b/tmp/96f40070-2c19-4b1b-8a4e-3e850dda481c_fixed.java
index e69de29..44303e2 100644
--- a/tmp/b13e22bd-aefb-490f-b2f2-cbc2223098ee_buggy.java
+++ b/tmp/96f40070-2c19-4b1b-8a4e-3e850dda481c_fixed.java
@@ -0,0 +1,30 @@
+/**
+ * Rebuilds the form data map after elements have been added or removed.
+ * 
+ * @return the updated form data key-value pairs
+ */
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    for (Element input : select("input, select, textarea")) {
+        if (!input.tagName().equals("input") ||!input.attr("type").equals("reset") &&!input.attr("type").equals("button")) {
+            String name = input.attr("name");
+            if (!name.isEmpty()) {
+                String value = input.tagName().equals("input")? 
+                              (input.attr("type").equals("checkbox") || input.attr("type").equals("radio")? 
+                               input.hasAttr("checked")? input.attr("value") : "" : 
+                               input.attr("value")) : 
+                              input.tagName().equals("select")? 
+                               ((Element) input.selectFirst("option[selected]")!= null? 
+                                ((Element) input.selectFirst("option[selected]")).attr("value") : 
+                                ((Element) input.selectFirst("option")).attr("value")) : 
+                              input.text();
+                data.add(new Connection.KeyVal(name, value));
+            }
+        }
+    }
+    return data.stream() // Remove duplicates by key, preserving order
+        .collect(Collectors.collectingAndThen(
+             Collectors.toMap(Connection.KeyVal::key, Function.identity(), 
+                              (existing, replacement) -> existing), 
+             m -> new ArrayList<>(m.values())));
+}
\ No newline at end of file
