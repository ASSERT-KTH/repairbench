diff --git a/tmp/87917d8b-b7c0-4226-87b3-e8058f11230a_buggy.java b/tmp/c0a6649b-73b4-47a9-a67e-28c42570ff10_fixed.java
index 62e8ec8..f36bf6b 100644
--- a/tmp/87917d8b-b7c0-4226-87b3-e8058f11230a_buggy.java
+++ b/tmp/c0a6649b-73b4-47a9-a67e-28c42570ff10_fixed.java
@@ -1,26 +1,32 @@
 /**
  * <p>If an {@link Option} exists for <code>token</code> then
  * set the current option and add the token to the processed 
  * list.</p>
  *
  * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
-     * is set then ignore the current token and add the remaining tokens
-     * to the processed tokens list directly.</p>
+ * is set then throw an UnrecognizedOptionException. If 
+ * <code>stopAtNonOption</code> is not set, ignore the current token and 
+ * add the remaining tokens to the processed tokens list directly.</p>
  *
  * @param token The current option token
  * @param stopAtNonOption Specifies whether flattening should halt
  * at the first non option.
+ * @throws UnrecognizedOptionException if the token is not a recognized option and stopAtNonOption is true
  */
-    private void processOptionToken(String token, boolean stopAtNonOption)
+private void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException
 {
     if (options.hasOption(token))
     {
         currentOption = options.getOption(token);
         tokens.add(token);
     }
     else if (stopAtNonOption)
+    {
+        throw new UnrecognizedOptionException(token);
+    }
+    else
     {
         eatTheRest = true;
         tokens.add(token);
     }
 }
\ No newline at end of file
