diff --git a/tmp/e72b218b-4fba-44aa-9cb0-854bf1b5f093_buggy.java b/tmp/0862d347-8777-4cd7-bfa0-4be153a8222f_fixed.java
index 43937f5..63831be 100644
--- a/tmp/e72b218b-4fba-44aa-9cb0-854bf1b5f093_buggy.java
+++ b/tmp/0862d347-8777-4cd7-bfa0-4be153a8222f_fixed.java
@@ -1,3 +1,21 @@
+/**
+ * Checks if a given node represents a reducable function expression.
+ * A function expression is considered reducable if it's not a constructor
+ * or an immediately invoked function expression (IIFE).
+ *
+ * @param n the node to check
+ * @return true if the node is a reducable function expression, false otherwise
+ */
 private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    return NodeUtil.isFunctionExpression(n) 
+           &&!n.isConstructor() 
+           &&!isImmediatelyInvokedFunctionExpression(n);
+}
+
+// Assuming the following helper method is already available or needs to be added
+private static boolean isImmediatelyInvokedFunctionExpression(Node n) {
+    // Simple implementation, might need adjustments based on the actual AST structure
+    return n.getParent()!= null 
+           && n.getParent().isCall() 
+           && n.getParent().getFirstChild() == n;
 }
\ No newline at end of file
