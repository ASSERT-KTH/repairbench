diff --git a/tmp/70dc443e-00d3-4338-bc49-6d52d6ade722_buggy.java b/tmp/06f5422e-91aa-4c1b-a8e5-e5148def5550_fixed.java
index 39c4220..a13a147 100644
--- a/tmp/70dc443e-00d3-4338-bc49-6d52d6ade722_buggy.java
+++ b/tmp/06f5422e-91aa-4c1b-a8e5-e5148def5550_fixed.java
@@ -1,21 +1,41 @@
+/**
+ * Fixed version of the _parseIndex function to handle scientific notation.
+ */
 private final static int _parseIndex(String str) {
     final int len = str.length();
     // [Issue#133]: beware of super long indexes; assume we never
     // have arrays over 2 billion entries so ints are fine.
     if (len == 0 || len > 10) {
         return -1;
     }
+    // Check for scientific notation (e/E)
+    boolean hasExponent = false;
     for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
+        char c = str.charAt(i);
+        if (c == 'e' || c == 'E') {
+            hasExponent = true;
+            break;
+        } else if (c > '9' || c < '0') {
             return -1;
         }
     }
+    if (hasExponent) {
+        // Attempt to parse as a double and check if it's an integer value
+        try {
+            double d = Double.parseDouble(str);
+            if (d >= Integer.MIN_VALUE && d <= Integer.MAX_VALUE && d == Math.floor(d)) {
+                return (int) d;
+            }
+        } catch (NumberFormatException e) {
+            // ignore, already returning -1
+        }
+        return -1; // Not a valid integer index
+    }
     if (len == 10) {
         long l = NumberInput.parseLong(str);
         if (l > Integer.MAX_VALUE) {
             return -1;
         }
     }
     return NumberInput.parseInt(str);
 }
\ No newline at end of file
