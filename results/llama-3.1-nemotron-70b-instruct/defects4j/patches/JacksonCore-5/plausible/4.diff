diff --git a/tmp/445e447d-12af-457b-8fd7-f4fa3efcf97f_buggy.java b/tmp/2d56423a-9dfe-405e-b893-46ee21ce980b_fixed.java
index 39c4220..0494b9e 100644
--- a/tmp/445e447d-12af-457b-8fd7-f4fa3efcf97f_buggy.java
+++ b/tmp/2d56423a-9dfe-405e-b893-46ee21ce980b_fixed.java
@@ -1,21 +1,18 @@
+/**
+ * Fixed version of _parseIndex function to handle non-integer numeric strings.
+ * 
+ * @param str Input string to parse as an index
+ * @return Parsed index as an integer, or -1 if parsing fails
+ */
 private final static int _parseIndex(String str) {
-        final int len = str.length();
-        // [Issue#133]: beware of super long indexes; assume we never
-        // have arrays over 2 billion entries so ints are fine.
-        if (len == 0 || len > 10) {
+    try {
+        double dbl = Double.parseDouble(str);
+        if (dbl!= (int) dbl) { // Check if not an integer
             return -1;
         }
-        for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
+        int index = (int) dbl;
+        return (index >= 0 && index <= Integer.MAX_VALUE)? index : -1;
+    } catch (NumberFormatException e) {
         return -1;
     }
 }
\ No newline at end of file
-        if (len == 10) {
-            long l = NumberInput.parseLong(str);
-            if (l > Integer.MAX_VALUE) {
-                return -1;
-            }
-        }
-        return NumberInput.parseInt(str);
-    }
