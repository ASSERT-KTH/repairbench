diff --git a/tmp/b3522ba3-89e8-4431-ab78-16c6d4551bb3_buggy.java b/tmp/ba87ad65-5360-458f-aa76-e189c61dc384_fixed.java
index 39c4220..19cd89d 100644
--- a/tmp/b3522ba3-89e8-4431-ab78-16c6d4551bb3_buggy.java
+++ b/tmp/ba87ad65-5360-458f-aa76-e189c61dc384_fixed.java
@@ -1,21 +1,12 @@
+/**
+ * Fixed version of the buggy function to handle scientific notation and other non-integer strings.
+ */
 private final static int _parseIndex(String str) {
-        final int len = str.length();
-        // [Issue#133]: beware of super long indexes; assume we never
-        // have arrays over 2 billion entries so ints are fine.
-        if (len == 0 || len > 10) {
+    try {
+        // Attempt to parse as an integer, handling scientific notation and other formats
+        return (int) NumberInput.parseLong(str, 0, str.length(), 10);
+    } catch (NumberFormatException e) {
+        // If parsing fails, return -1 to indicate an invalid index
         return -1;
     }
-        for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
-                return -1;
-            }
-        }
-        if (len == 10) {
-            long l = NumberInput.parseLong(str);
-            if (l > Integer.MAX_VALUE) {
-                return -1;
-            }
-        }
-        return NumberInput.parseInt(str);
 }
\ No newline at end of file
