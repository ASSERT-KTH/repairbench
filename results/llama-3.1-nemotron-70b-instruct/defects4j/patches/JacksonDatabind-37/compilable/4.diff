diff --git a/tmp/afbb4b13-60f7-4c2f-b57a-73a7e1b4a955_buggy.java b/tmp/3695f313-1f83-4160-87e1-c4a1d1b9c4ea_fixed.java
index e5ad041..4eb1e58 100644
--- a/tmp/afbb4b13-60f7-4c2f-b57a-73a7e1b4a955_buggy.java
+++ b/tmp/3695f313-1f83-4160-87e1-c4a1d1b9c4ea_fixed.java
@@ -1,19 +1,14 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+    // Check for sub-class relationship to prevent incorrect narrowing
     if (!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // Re-resolve type bindings to ensure correct type hierarchy
+    return TypeFactory.defaultInstance().constructSpecializedType(this, subclass);
 }
\ No newline at end of file
