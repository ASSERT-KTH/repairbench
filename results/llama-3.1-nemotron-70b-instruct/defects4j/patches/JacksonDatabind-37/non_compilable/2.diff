diff --git a/tmp/346121d9-c6a2-49f9-9d30-82b9e1727046_buggy.java b/tmp/036df7c7-f63f-4c7c-98bc-ce9c253a9913_fixed.java
index e5ad041..372e518 100644
--- a/tmp/346121d9-c6a2-49f9-9d30-82b9e1727046_buggy.java
+++ b/tmp/036df7c7-f63f-4c7c-98bc-ce9c253a9913_fixed.java
@@ -1,19 +1,17 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+    // Check for sub-class relationship to prevent incorrect type narrowing
     if (!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // Re-resolve type with updated class, maintaining existing type bindings and handlers
+    return TypeFactory.defaultInstance().constructSpecializedType(this, subclass)
+           .withTypeHandler(_typeHandler)
+           .withValueHandler(_valueHandler)
+           .asStatic(_asStatic);
 }
\ No newline at end of file
