diff --git a/tmp/c9ac4e89-bbb2-402d-b2d3-9c29a12b0ec0_buggy.java b/tmp/fd89097d-b58e-4b82-9f6f-e3a2ef800f4b_fixed.java
index e5ad041..ac198d1 100644
--- a/tmp/c9ac4e89-bbb2-402d-b2d3-9c29a12b0ec0_buggy.java
+++ b/tmp/fd89097d-b58e-4b82-9f6f-e3a2ef800f4b_fixed.java
@@ -1,19 +1,14 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
     if (!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // Re-resolve bindings to ensure correct type handling for subclass
+    JavaType newType = TypeFactory.defaultInstance().constructSpecializedType(this, subclass);
+    return new SimpleType(newType, _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
