diff --git a/tmp/0880824e-6ade-47c5-9ab4-5240951983c9_buggy.java b/tmp/c5a73480-87d9-48a3-a60b-76814721ddfc_fixed.java
index 544303b..273f7ea 100644
--- a/tmp/0880824e-6ade-47c5-9ab4-5240951983c9_buggy.java
+++ b/tmp/c5a73480-87d9-48a3-a60b-76814721ddfc_fixed.java
@@ -1,29 +1,43 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+    Integer mostNegativeRow = null;
+    double mostNegative = Double.POSITIVE_INFINITY;
+    
+    // Find the most negative value in the RHS of the tableau
+    for (int i = getNumObjectiveFunctions() + getOriginalNumDecisionVariables(); 
+         i < tableau.rows(); i++) {
+        double entry = getEntry(i, getRhsOffset());
+        if (entry < mostNegative) {
+            mostNegative = entry;
+            mostNegativeRow = i;
+        }
+    }
+    
     for (int i = 0; i < coefficients.length; i++) {
-            basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+        Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         if (basicRow!= null) {
+            coefficients[i] = getEntry(basicRow, getRhsOffset());
+            // Adjust for negative values if restrictToNonNegative is false
+            if (!restrictToNonNegative && mostNegativeRow!= null) {
+                coefficients[i] -= mostNegative;
+            }
+            
+            // Check for other variables with the same value and set them to 0
             for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
+                    coefficients[j - getNumObjectiveFunctions()] = 0;
+                }
+            }
+        } else {
             coefficients[i] = 0;
         }
     }
-            }
-        }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
