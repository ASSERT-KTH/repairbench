diff --git a/tmp/00cd12b2-324a-4460-97b9-626ed1503c56_buggy.java b/tmp/b6eab336-0cc1-4feb-b543-262ae011526f_fixed.java
index 0dbce00..32195c4 100644
--- a/tmp/00cd12b2-324a-4460-97b9-626ed1503c56_buggy.java
+++ b/tmp/b6eab336-0cc1-4feb-b543-262ae011526f_fixed.java
@@ -1,33 +1,49 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
+            if (shape == JsonFormat.Shape.ANY) { // added check for JsonFormat.Shape.ANY
+                // Infer shape from other format properties, if available
+                if (format.hasPattern() || format.hasLocale() || format.getTimeZone()!= null) {
+                    shape = JsonFormat.Shape.STRING;
+                } else if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                    shape = JsonFormat.Shape.NUMERIC;
+                } else {
+                    shape = JsonFormat.Shape.STRING;
+                }
+            }
+
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            if (shape == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+        } else {
+            // No @JsonFormat annotation; use user config as default
+            if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                return withFormat(Boolean.TRUE, null);
+            }
         }
     }
     return this;
 }
\ No newline at end of file
