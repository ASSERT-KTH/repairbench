diff --git a/tmp/a41b581f-edcc-4df1-aa2b-7617e344984b_buggy.java b/tmp/7ba64f23-e9bc-4410-b21d-98d02d820149_fixed.java
index 0dbce00..00270e7 100644
--- a/tmp/a41b581f-edcc-4df1-aa2b-7617e344984b_buggy.java
+++ b/tmp/7ba64f23-e9bc-4410-b21d-98d02d820149_fixed.java
@@ -1,33 +1,57 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
+            if (shape!= JsonFormat.Shape.ANY) { // Check for explicit shape
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
+                } else if (shape == JsonFormat.Shape.STRING) {
+                    TimeZone tz = format.getTimeZone();
+                    final String pattern = format.hasPattern()
+                                   ? format.getPattern()
+                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    final Locale loc = format.hasLocale()
+                                   ? format.getLocale()
+                                    : serializers.getLocale();
+                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    if (tz == null) {
+                        tz = serializers.getTimeZone();
                     }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                    df.setTimeZone(tz);
+                    return withFormat(Boolean.FALSE, df);
+                }
+            } else { // JsonFormat.Shape.ANY, infer shape from other properties or use default
+                if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                    ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                    ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
+                } else { // Fall back to default shape based on SerializationFeature.WRITE_DATES_AS_TIMESTAMPS
+                    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+                           ? withFormat(Boolean.TRUE, null)
+                            : withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale()));
+                }
             }
+        } else { // No @JsonFormat, use default shape based on SerializationFeature.WRITE_DATES_AS_TIMESTAMPS
+            return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+                   ? withFormat(Boolean.TRUE, null)
+                    : withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale()));
         }
     }
     return this;
 }
\ No newline at end of file
