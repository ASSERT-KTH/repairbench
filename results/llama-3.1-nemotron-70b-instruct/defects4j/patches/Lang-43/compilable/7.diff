diff --git a/tmp/81447baf-4a4e-42fa-93b8-927ef2915277_buggy.java b/tmp/33e450c6-da9a-4462-982a-0c5b3ed87c81_fixed.java
index b6b11b6..8cab76b 100644
--- a/tmp/81447baf-4a4e-42fa-93b8-927ef2915277_buggy.java
+++ b/tmp/33e450c6-da9a-4462-982a-0c5b3ed87c81_fixed.java
@@ -1,38 +1,36 @@
 /**
  * Consume a quoted string, adding it to <code>appendTo</code> if
  * specified.
  * 
  * @param pattern pattern to parse
  * @param pos current parse position
  * @param appendTo optional StringBuffer to append
  * @param escapingOn whether to process escaped quotes
  * @return <code>appendTo</code>
  */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
-        }
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+        if (escapingOn && i < pattern.length() - 1 && c[i] == QUOTE && c[i + 1] == QUOTE) {
+            // Handle escaped quote by skipping the next quote
+            appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+            pos.setIndex(i + 2); // Move beyond the escaped quote
             lastHold = pos.getIndex();
-                continue;
-            }
+            i = pos.getIndex() - 1; // Re-check the new current position
+        } else {
             switch (c[pos.getIndex()]) {
             case QUOTE:
                 next(pos);
                 return appendTo == null? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                        pos.getIndex() - lastHold - 1); // Exclude the closing quote
             default:
                 next(pos);
             }
         }
+    }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
