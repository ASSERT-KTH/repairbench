diff --git a/tmp/f3e59fac-ae05-4a5e-bedf-87d72f331a51_buggy.java b/tmp/c26bf4a1-e5f9-4834-85dc-d3370aff8d2b_fixed.java
index 784bbab..101d1f4 100644
--- a/tmp/f3e59fac-ae05-4a5e-bedf-87d72f331a51_buggy.java
+++ b/tmp/c26bf4a1-e5f9-4834-85dc-d3370aff8d2b_fixed.java
@@ -1,42 +1,44 @@
 /**
  * Initializes the name to index mapping if the format defines a header.
  *
  * @return null if the format has no header.
  * @throws IOException if there is a problem reading the header or skipping the first record
  */
 private Map<String, Integer> initializeHeader() throws IOException {
     Map<String, Integer> hdrMap = null;
     final String[] formatHeader = this.format.getHeader();
     if (formatHeader!= null) {
         hdrMap = new LinkedHashMap<String, Integer>();
 
         String[] headerRecord = null;
         if (formatHeader.length == 0) {
             // read the header from the first line of the file
             final CSVRecord nextRecord = this.nextRecord();
             if (nextRecord!= null) {
                 headerRecord = nextRecord.values();
             }
         } else {
             if (this.format.getSkipHeaderRecord()) {
                 this.nextRecord();
             }
             headerRecord = formatHeader;
         }
 
         // build the name to index mappings
         if (headerRecord!= null) {
             for (int i = 0; i < headerRecord.length; i++) {
-                    final String header = headerRecord[i];
+                final String header = headerRecord[i].trim(); // trim here to handle empty headers uniformly
+                if (header.isEmpty() && this.format.getIgnoreEmptyHeaders()) {
+                    continue; // skip empty headers if configured to do so
+                }
                 final boolean containsHeader = hdrMap.containsKey(header);
-                    final boolean emptyHeader = header.trim().isEmpty();
-                    if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
+                if (containsHeader) {
                     throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                             "\" in " + Arrays.toString(headerRecord));
                 }
-                    hdrMap.put(header, Integer.valueOf(i));
+                hdrMap.put(header, i); // use int primitive, no need for Integer.valueOf(i)
             }
         }
     }
     return hdrMap;
 }
\ No newline at end of file
