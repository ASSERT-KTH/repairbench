diff --git a/tmp/01303943-4ae2-4961-b6b0-106d6d035fca_buggy.java b/tmp/b5f4e247-8aa7-4adb-8073-eb9b7da0d92e_fixed.java
index c222270..5e0021a 100644
--- a/tmp/01303943-4ae2-4961-b6b0-106d6d035fca_buggy.java
+++ b/tmp/b5f4e247-8aa7-4adb-8073-eb9b7da0d92e_fixed.java
@@ -1,7 +1,19 @@
+/**
+ * Generates an ID for the given POJO, using an existing ID if available, 
+ * and ensures it's properly registered for future reference resolution.
+ * 
+ * @param forPojo POJO for which to generate ID
+ * @return Generated ID
+ */
 public Object generateId(Object forPojo) {
-        // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of
-        //    id being generated for "alwaysAsId", but not being written as POJO; regardless,
-        //    need to use existing id if there is one:
+    // Check if an ID already exists for the POJO
+    Object existingId = _idForPojo.get(forPojo);
+    if (existingId!= null) {
+        id = existingId;
+    } else {
+        // Generate a new ID and register it for future reference resolution
         id = generator.generateId(forPojo);
+        _idForPojo.put(forPojo, id); // assuming _idForPojo is a suitable Map
+    }
     return id;
 }
\ No newline at end of file
