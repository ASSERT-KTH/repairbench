diff --git a/tmp/95bbb6b0-42cd-4826-8c0c-73d3d54317af_buggy.java b/tmp/51db6851-1a2a-4302-aecc-00aec6ca55da_fixed.java
index c222270..96b7383 100644
--- a/tmp/95bbb6b0-42cd-4826-8c0c-73d3d54317af_buggy.java
+++ b/tmp/51db6851-1a2a-4302-aecc-00aec6ca55da_fixed.java
@@ -1,7 +1,25 @@
+/**
+ * Generates an ID for the given POJO, considering the possibility of 
+ * an existing ID and ensuring consistent ID generation for "alwaysAsId" cases.
+ * 
+ * @param forPojo The POJO for which to generate an ID
+ * @return The generated ID, or the existing one if present
+ */
 public Object generateId(Object forPojo) {
-        // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of
-        //    id being generated for "alwaysAsId", but not being written as POJO; regardless,
-        //    need to use existing id if there is one:
+    // Check if the POJO already has an ID
+    Object existingId = getId(forPojo);
+    if (existingId!= null) {
+        // Reuse the existing ID for consistency
+        return existingId;
+    }
+    // Otherwise, generate a new ID using the generator
     id = generator.generateId(forPojo);
     return id;
 }
+
+// Assuming getId() is defined elsewhere, if not, you'd need to implement it
+// For example:
+// private Object getId(Object pojo) {
+//     // Implementation to retrieve the ID from the POJO, 
+//     // e.g., via reflection or a provided accessor method
+// }
\ No newline at end of file
