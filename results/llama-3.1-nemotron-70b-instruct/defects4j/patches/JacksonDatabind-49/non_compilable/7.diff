diff --git a/tmp/83c5dd18-8761-403b-9e22-042580c9e69f_buggy.java b/tmp/bb9e6323-97a2-4b7f-a281-b6ab968d5121_fixed.java
index c222270..7a057ca 100644
--- a/tmp/83c5dd18-8761-403b-9e22-042580c9e69f_buggy.java
+++ b/tmp/bb9e6323-97a2-4b7f-a281-b6ab968d5121_fixed.java
@@ -1,7 +1,20 @@
+/**
+ * Generate and return id for given POJO, taking into account possibility of 
+ * id being generated for "alwaysAsId" but not written as POJO, and reusing 
+ * existing id if available.
+ * 
+ * @param forPojo POJO for which to generate id (if necessary)
+ * @return Generated (or existing, if any) id for POJO
+ */
 public Object generateId(Object forPojo) {
-        // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of
-        //    id being generated for "alwaysAsId", but not being written as POJO; regardless,
-        //    need to use existing id if there is one:
+    // Check if POJO already has an id
+    Object existingId = _objectIdReader == null? null : _objectIdReader.findById(forPojo);
+    if (existingId!= null) {
+        // Reuse existing id if found
+        id = existingId;
+    } else {
+        // Otherwise, generate new id using the generator
         id = generator.generateId(forPojo);
+    }
     return id;
 }
\ No newline at end of file
