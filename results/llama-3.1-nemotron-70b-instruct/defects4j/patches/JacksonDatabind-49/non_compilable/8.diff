diff --git a/tmp/fd82e3a0-1e94-45ed-b4a6-4813731b72d9_buggy.java b/tmp/f0d497e8-d77d-4395-9024-ea7a6b19c80c_fixed.java
index c222270..89aa3eb 100644
--- a/tmp/fd82e3a0-1e94-45ed-b4a6-4813731b72d9_buggy.java
+++ b/tmp/f0d497e8-d77d-4395-9024-ea7a6b19c80c_fixed.java
@@ -1,7 +1,21 @@
+/**
+ * Generate and return a new Object Id for given POJO,
+ * if it doesn't have one. If it does have an id, return that.
+ */
 public Object generateId(Object forPojo) {
-        // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of
-        //    id being generated for "alwaysAsId", but not being written as POJO; regardless,
-        //    need to use existing id if there is one:
+    // Check if the POJO already has an id before generating a new one
+    if (id!= null && isIdFor(forPojo, id)) {
+        return id; // Return existing id if it's for the given POJO
+    }
+    // Otherwise, generate a new id
     id = generator.generateId(forPojo);
     return id;
 }
+
+// Assuming `isIdFor` method is already defined elsewhere in the codebase
+// If not, it would need to be implemented to check if the given id belongs to the POJO
+// For example:
+// private boolean isIdFor(Object pojo, Object id) {
+//     // Implementation depends on the structure of your POJOs and Object Ids
+//     // e.g., return pojo.getId().equals(id);
+// }
\ No newline at end of file
