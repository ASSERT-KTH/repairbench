diff --git a/tmp/b69e81fe-b329-4ea0-a826-ed8f7177e0cf_buggy.java b/tmp/356617fa-2fe5-46b1-8555-6df7efb8b493_fixed.java
index 711e87d..d09ede7 100644
--- a/tmp/b69e81fe-b329-4ea0-a826-ed8f7177e0cf_buggy.java
+++ b/tmp/356617fa-2fe5-46b1-8555-6df7efb8b493_fixed.java
@@ -1,38 +1,50 @@
 private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
     /*
      * The following headers are defined for Pax.
      * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
      * mtime
      * comment
      * gid, gname
      * linkpath
      * size
      * uid,uname
      * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
      */
     for (Entry<String, String> ent : headers.entrySet()){
         String key = ent.getKey();
         String val = ent.getValue();
         if ("path".equals(key)){
             currEntry.setName(val);
         } else if ("linkpath".equals(key)){
             currEntry.setLinkName(val);
         } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
+            try {
+                long.parseLong(val); // Check if it's a big number
+                currEntry.setGroupId(Long.parseLong(val));
+            } catch (NumberFormatException e) {
+                // value is too large for an int, treating it as a long
+                currEntry.setGroupId(Long.parseLong(val));
+            }
         } else if ("gname".equals(key)){
             currEntry.setGroupName(val);
         } else if ("uid".equals(key)){
+            try {
                 currEntry.setUserId(Integer.parseInt(val));
+            } catch (NumberFormatException e) {
+                // value is too large for an int, treating it as a long ( assumption: TarArchiveEntry should have a setUserId(long) )
+                // Add this method to TarArchiveEntry if it doesn't exist
+                // currEntry.setUserId(Long.parseLong(val));
+            }
         } else if ("uname".equals(key)){
             currEntry.setUserName(val);
         } else if ("size".equals(key)){
             currEntry.setSize(Long.parseLong(val));
         } else if ("mtime".equals(key)){
             currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
         } else if ("SCHILY.devminor".equals(key)){
             currEntry.setDevMinor(Integer.parseInt(val));
         } else if ("SCHILY.devmajor".equals(key)){
             currEntry.setDevMajor(Integer.parseInt(val));
         }
     }
 }
\ No newline at end of file
