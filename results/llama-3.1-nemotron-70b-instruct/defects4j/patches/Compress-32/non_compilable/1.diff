diff --git a/tmp/a5507fc2-40fa-4091-8451-5c3e2228b644_buggy.java b/tmp/42a27c2a-4677-4896-a4ed-9758ab5c14f2_fixed.java
index 711e87d..ac6a419 100644
--- a/tmp/a5507fc2-40fa-4091-8451-5c3e2228b644_buggy.java
+++ b/tmp/42a27c2a-4677-4896-a4ed-9758ab5c14f2_fixed.java
@@ -1,38 +1,58 @@
 private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
     /*
      * The following headers are defined for Pax.
      * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
      * mtime
      * comment
      * gid, gname
      * linkpath
      * size
      * uid,uname
      * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
      */
-        for (Entry<String, String> ent : headers.entrySet()){
+    for (Map.Entry<String, String> ent : headers.entrySet()){
         String key = ent.getKey();
         String val = ent.getValue();
         if ("path".equals(key)){
             currEntry.setName(val);
         } else if ("linkpath".equals(key)){
             currEntry.setLinkName(val);
-            } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
+        } else if ("gid".equals(key")){
+            try {
+                long gid = Long.parseLong(val);
+                if (gid > Integer.MAX_VALUE) {
+                    currEntry.setNamesInGNUFormat(true);
+                    currEntry.setLongGroupId(gid);
+                } else {
+                    currEntry.setGroupId((int) gid);
+                }
+            } catch (NumberFormatException e) {
+                // Handle parsing error, e.g., log and continue
+            }
         } else if ("gname".equals(key)){
             currEntry.setGroupName(val);
         } else if ("uid".equals(key)){
-                currEntry.setUserId(Integer.parseInt(val));
+            try {
+                long uid = Long.parseLong(val);
+                if (uid > Integer.MAX_VALUE) {
+                    currEntry.setNamesInGNUFormat(true);
+                    currEntry.setLongUserId(uid);
+                } else {
+                    currEntry.setUserId((int) uid);
+                }
+            } catch (NumberFormatException e) {
+                // Handle parsing error, e.g., log and continue
+            }
         } else if ("uname".equals(key)){
             currEntry.setUserName(val);
         } else if ("size".equals(key)){
             currEntry.setSize(Long.parseLong(val));
         } else if ("mtime".equals(key)){
             currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
         } else if ("SCHILY.devminor".equals(key)){
             currEntry.setDevMinor(Integer.parseInt(val));
         } else if ("SCHILY.devmajor".equals(key)){
             currEntry.setDevMajor(Integer.parseInt(val));
         }
     }
 }
\ No newline at end of file
