diff --git a/tmp/fb54826a-b363-4f98-8de5-5819c50fbbe6_buggy.java b/tmp/f4dcffa8-4350-42cf-ad7e-870177327db0_fixed.java
index 139579d..5de8b3f 100644
--- a/tmp/fb54826a-b363-4f98-8de5-5819c50fbbe6_buggy.java
+++ b/tmp/f4dcffa8-4350-42cf-ad7e-870177327db0_fixed.java
@@ -1,43 +1,11 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
+    if (classAttr == null || classAttr.isEmpty()) {
         return false;
     }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
-                        return true;
-                    }
-                    inClass = false;
-                }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
-
-        return false;
+    final String[] classes = classAttr.split("\\s+"); // split on one or more whitespace characters
+    return Arrays.stream(classes)
+                .anyMatch(c -> c.equalsIgnoreCase(className));
 }
\ No newline at end of file
