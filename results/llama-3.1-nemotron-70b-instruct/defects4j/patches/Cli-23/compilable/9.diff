diff --git a/tmp/7ab4573e-6d47-4a7b-8bda-8a434e9825d2_buggy.java b/tmp/ad1f9ecd-1e06-4801-8456-a2a432d9a83d_fixed.java
index 227a4ef..5d7c428 100644
--- a/tmp/7ab4573e-6d47-4a7b-8bda-8a434e9825d2_buggy.java
+++ b/tmp/ad1f9ecd-1e06-4801-8456-a2a432d9a83d_fixed.java
@@ -1,48 +1,58 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         int lastPos = pos;
+        // изменения: добавлен trim() для удаления лишних пробелов
         text = padding + text.substring(pos).trim();
+        
+        // изменения: ограничение минимальной длины строки дляEmitter.wrapPos()
+        if (text.length() <= width) {
+            sb.append(text);
+            return sb;
+        }
+
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
+        } else if (pos == lastPos)
+        {
+            // изменения: вместо исключения -.lock() обрезка строки по width
+            sb.append(rtrim(text.substring(0, width))).append(defaultNewLine);
+            text = text.substring(width);
         } else
-            if (pos == lastPos)
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
-            }
-
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
+}
\ No newline at end of file
