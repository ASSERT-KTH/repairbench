diff --git a/tmp/e62e7a0b-3bf6-4fa7-897d-b8b01121cf8b_buggy.java b/tmp/a6d360b8-7310-41cf-84b0-b7c4a9537ed5_fixed.java
index 5f1dcf2..eb5f4a9 100644
--- a/tmp/e62e7a0b-3bf6-4fa7-897d-b8b01121cf8b_buggy.java
+++ b/tmp/a6d360b8-7310-41cf-84b0-b7c4a9537ed5_fixed.java
@@ -1,41 +1,62 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    while (getIterations() < getMaxIterations() && getEvaluations() < getMaxEvaluations()) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
+            } else {
+                simplex = new RealPointValuePair[] {expanded};
             }
 
             return;
 
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
+            simplex = new RealPointValuePair[] {contracted};
+        } else {
+            // shrink simplex
+            simplex = shrinkSimplex(best);
+        }
 
         // check convergence
+        if (convergenceCheck(simplex, comparator)) {
             return;
         }
 
     }
 
+    // if we reach here, max iterations or evaluations were exceeded
+    throw new MaxIterationsExceededException(getMaxIterations());
+
 }
+
+// Assuming the existence of the following methods, as they are not provided in the original code snippet:
+// - getIterations()
+// - getMaxIterations()
+// - getEvaluations()
+// - getMaxEvaluations()
+// - incrementIterationsCounter()
+// - convergenceCheck(RealPointValuePair[], Comparator<RealPointValuePair>)
+// - shrinkSimplex(RealPointValuePair)
+// - MaxIterationsExceededException
\ No newline at end of file
