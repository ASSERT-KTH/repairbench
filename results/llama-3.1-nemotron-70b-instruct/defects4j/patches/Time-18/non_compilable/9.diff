diff --git a/tmp/3d4a9ea5-342b-48ae-b9cf-9c4d7a7d205b_buggy.java b/tmp/67b1c566-0571-4e9c-8d55-cbe63af6f230_fixed.java
index be2af16..a6117ae 100644
--- a/tmp/3d4a9ea5-342b-48ae-b9cf-9c4d7a7d205b_buggy.java
+++ b/tmp/67b1c566-0571-4e9c-8d55-cbe63af6f230_fixed.java
@@ -1,29 +1,40 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase())!= null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
+    // Assume date is Gregorian, but check if the date is valid in Gregorian first
+    if (iGregorianChronology.isDateValid(year, monthOfYear, dayOfMonth)) {
+        long instant = iGregorianChronology.getDateTimeMillis
+            (year, monthOfMonth, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
+    } else {
+        // If not valid in Gregorian, try Julian directly
+        long instant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant >= iCutoverMillis) {
+            // Okay, it's in the illegal cutover gap or actually in Gregorian.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+        return instant;
+    }
 }
\ No newline at end of file
