diff --git a/tmp/fe0cc066-88e9-4f55-8564-e104e5184d95_buggy.java b/tmp/9be1217d-485d-4816-b515-3bfccfc90b38_fixed.java
index be2af16..4eb7d0f 100644
--- a/tmp/fe0cc066-88e9-4f55-8564-e104e5184d95_buggy.java
+++ b/tmp/9be1217d-485d-4816-b515-3bfccfc90b38_fixed.java
@@ -1,29 +1,45 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase())!= null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Assume date is Gregorian, but check for Julian leap year rule first
+    if (monthOfYear == 2 && dayOfMonth == 29) {
+        if (iJulianChronology.isLeapYear(year)) {
+            // Date is valid in Julian, try it first
+            long instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant < iCutoverMillis) {
+                return instant;
+            }
+        }
+        // If not valid in Julian or in cutover gap, check Gregorian
+        if (!iGregorianChronology.isLeapYear(year)) {
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+    }
+
+    // General case: assume Gregorian, fall back to Julian if before cutover
+    long instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
