diff --git a/tmp/4a6c7d30-97e9-4a52-81ca-f1a4684182db_buggy.java b/tmp/ef0424c8-30ac-4aeb-a844-ad8007a792cb_fixed.java
index be2af16..b8904f4 100644
--- a/tmp/4a6c7d30-97e9-4a52-81ca-f1a4684182db_buggy.java
+++ b/tmp/ef0424c8-30ac-4aeb-a844-ad8007a792cb_fixed.java
@@ -1,29 +1,41 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase())!= null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Assume date is Gregorian, but first check if it's a leap year edge case
+    if (monthOfYear == 2 && dayOfMonth == 29) {
+        if (iJulianChronology.isLeapYear(year)) {
+            // Could be Julian, try that first
+            long instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+                return instant;
+            }
+        }
+    }
+
+    // Now try Gregorian
+    long instant = iGregorianChronology.getDateTimeMillis
+        (year, monthOfYear, dayOfMonth,
+         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    if (instant < iCutoverMillis) {
+        // Maybe it's Julian (not a leap year edge case or Gregorian failed)
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
