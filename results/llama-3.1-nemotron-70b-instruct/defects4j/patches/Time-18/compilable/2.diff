diff --git a/tmp/70266215-0e11-44a5-b4a0-df309d50c365_buggy.java b/tmp/6ba787eb-4be9-43cc-8f61-69abfc87488f_fixed.java
index be2af16..f71cc24 100644
--- a/tmp/70266215-0e11-44a5-b4a0-df309d50c365_buggy.java
+++ b/tmp/6ba787eb-4be9-43cc-8f61-69abfc87488f_fixed.java
@@ -1,29 +1,39 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase())!= null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Assume date is Gregorian, but check for Julian leap year rule first
+    if (monthOfYear == 2 && dayOfMonth == 29) {
+        if (iJulianChronology.isLeapYear(year)) { // Check if year is a leap year in Julian calendar
+            return iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } else {
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+    }
+
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }
\ No newline at end of file
