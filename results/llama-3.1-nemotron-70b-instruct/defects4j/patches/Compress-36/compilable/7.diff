diff --git a/tmp/f1849b0d-9b15-4fc6-b0eb-7fd081f3d850_buggy.java b/tmp/5685046b-8962-4b20-8c9c-2ef1f4855a68_fixed.java
index d357c7e..75a903a 100644
--- a/tmp/f1849b0d-9b15-4fc6-b0eb-7fd081f3d850_buggy.java
+++ b/tmp/5685046b-8962-4b20-8c9c-2ef1f4855a68_fixed.java
@@ -1,16 +1,23 @@
+/**
+ * Returns the current input stream for the 7z entry. 
+ * If in solid compression mode, decompresses and discards leading folder streams.
+ * 
+ * @return the current input stream
+ * @throws IOException if an I/O error occurs
+ */
 private InputStream getCurrentStream() throws IOException {
-        if (deferredBlockStreams.isEmpty()) {
+    if (deferredBlockStreams.isEmpty() && getNextEntry() == null) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
     
     while (deferredBlockStreams.size() > 1) {
         // In solid compression mode we need to decompress all leading folder'
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
