diff --git a/tmp/864fd92f-ffa4-4bc5-9ab3-8e9c5ca5db26_buggy.java b/tmp/6eb1a573-6126-4ba1-98e6-7f7d69d34837_fixed.java
index d9b400d..5ae184b 100644
--- a/tmp/864fd92f-ffa4-4bc5-9ab3-8e9c5ca5db26_buggy.java
+++ b/tmp/6eb1a573-6126-4ba1-98e6-7f7d69d34837_fixed.java
@@ -1,21 +1,28 @@
 /**
  * <p>Create a number from a String. If a. is present, it creates a 
-     *    Double, otherwise a Long. </p>
+ *    Double; otherwise, if the value can fit within an integer range, 
+ *    a Long, otherwise a BigInteger to support arbitrary-precision integers.</p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
-    public static Number createNumber(String str)
-    {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+public static Number createNumber(String str) {
+    try {
+        if (str.contains(".")) {
+            return Double.valueOf(str);
+        } else {
+            // Attempt to create a Long first for efficiency
+            try {
+                return Long.valueOf(str);
+            } catch (NumberFormatException e) {
+                // If out of Long range, fall back to BigInteger
+                return new BigInteger(str);
             }
-        catch (NumberFormatException nfe)
-        {
+        }
+    } catch (NumberFormatException nfe) {
         System.err.println(nfe.getMessage());
     }
 
     return null;
 }
\ No newline at end of file
