diff --git a/tmp/53ba90b6-d9ad-4457-afe8-5e46299bfa52_buggy.java b/tmp/82d8e2b0-faf0-4926-96f1-71f596285be9_fixed.java
index d9b400d..fe419fe 100644
--- a/tmp/53ba90b6-d9ad-4457-afe8-5e46299bfa52_buggy.java
+++ b/tmp/82d8e2b0-faf0-4926-96f1-71f596285be9_fixed.java
@@ -1,21 +1,35 @@
 /**
  * <p>Create a number from a String. If a. is present, it creates a 
  *    Double, otherwise a Long. </p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
 public static Number createNumber(String str)
 {
     try
     {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        // Use trim() to remove leading/trailing whitespace
+        str = str.trim();
+        
+        // Check if the string represents an integer
+        if (str.matches("\\d+")) {
+            return Long.parseLong(str);
+        } 
+        // Check if the string represents a double
+        else if (str.matches("\\d+(\\.\\d+)?")) {
+            return Double.parseDouble(str);
+        } 
+        // If none of the above, rethrow the exception
+        else {
+            throw new NumberFormatException("Invalid number format: " + str);
+        }
     }
     catch (NumberFormatException nfe)
     {
         System.err.println(nfe.getMessage());
     }
 
     return null;
 }
\ No newline at end of file
