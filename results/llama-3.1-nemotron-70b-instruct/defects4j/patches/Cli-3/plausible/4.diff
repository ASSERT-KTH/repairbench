diff --git a/tmp/8fcab22e-0b11-4518-81de-f2f0ae6081a1_buggy.java b/tmp/c0ddce03-b286-4d0a-aff9-9ba702839ead_fixed.java
index d9b400d..28f3b01 100644
--- a/tmp/8fcab22e-0b11-4518-81de-f2f0ae6081a1_buggy.java
+++ b/tmp/c0ddce03-b286-4d0a-aff9-9ba702839ead_fixed.java
@@ -1,21 +1,36 @@
 /**
  * <p>Create a number from a String. If a. is present, it creates a 
  *    Double, otherwise a Long. </p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
 public static Number createNumber(String str)
 {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+    if (str == null) {
+        return null;
+    }
+    
+    if (str.contains(".")) {
+        try {
+            return Double.parseDouble(str);
+        } catch (NumberFormatException e) {
+            // fall through to null return
+        }
+    } else {
+        try {
+            return Long.parseLong(str);
+        } catch (NumberFormatException e) {
+            try {
+                // also attempt to parse as integer, 
+                // in case input is within Integer range
+                return Integer.parseInt(str);
+            } catch (NumberFormatException ex) {
+                // fall through to null return
+            }
         }
-        catch (NumberFormatException nfe)
-        {
-            System.err.println(nfe.getMessage());
     }
 
     return null;
 }
\ No newline at end of file
