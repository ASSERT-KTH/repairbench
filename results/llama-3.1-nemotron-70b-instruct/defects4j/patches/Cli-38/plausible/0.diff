diff --git a/tmp/0f161591-2599-43e5-92cd-8e02038bbcb2_buggy.java b/tmp/ca397116-d172-4300-b8c4-2f56ef418b72_fixed.java
index 81a6e8b..8f80f0b 100644
--- a/tmp/0f161591-2599-43e5-92cd-8e02038bbcb2_buggy.java
+++ b/tmp/ca397116-d172-4300-b8c4-2f56ef418b72_fixed.java
@@ -1,19 +1,26 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
-    private boolean isShortOption(String token)
-    {
+private boolean isShortOption(String token) {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+    if (!token.startsWith("-") || token.length() == 1) {
         return false;
     }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
+    // remove leading "-"
+    String optNames = token.substring(1);
+
     // check for several concatenated short options
+    for (char optName : optNames.toCharArray()) {
+        if (!options.hasShortOption(String.valueOf(optName))) {
+            // presence of "=" is already handled by hasShortOption in most implementations
+            // if not, add: if (optNames.contains("=") &&!optNames.startsWith(optName + "=")) return false;
+            if (optNames.indexOf(optName)!= optNames.lastIndexOf(optName)) {
+                return false; // repeated short option
+            }
+        }
+    }
+    return true;
 }
\ No newline at end of file
