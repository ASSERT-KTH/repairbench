diff --git a/tmp/8cc4b96d-abcb-43c9-8b7d-623032d85fc6_buggy.java b/tmp/221b6013-ed0e-4f6f-8efd-e567d8213a19_fixed.java
index 81a6e8b..4c05cd2 100644
--- a/tmp/8cc4b96d-abcb-43c9-8b7d-623032d85fc6_buggy.java
+++ b/tmp/221b6013-ed0e-4f6f-8efd-e567d8213a19_fixed.java
@@ -1,19 +1,37 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
+    if (!token.startsWith("-") || token.length() < 2)
     {
         return false;
     }
 
+    // Check for several concatenated short options
+    for (int i = 1; i < token.length(); i++) {
+        if (token.charAt(i) == '=') {
+            // short option with value, e.g. -S=V
+            break;
+        } else if (!Character.isLetter(token.charAt(i))) {
+            // invalid character in short option
+            return false;
+        }
+    }
+
     // remove leading "-" and "=value"
     int pos = token.indexOf("=");
     String optName = pos == -1? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    
+    // Check individual short options in case of concatenation
+    for (char c : optName.toCharArray()) {
+        if (!options.hasShortOption(String.valueOf(c))) {
+            return false;
+        }
+    }
+    
+    return true;
 }
\ No newline at end of file
