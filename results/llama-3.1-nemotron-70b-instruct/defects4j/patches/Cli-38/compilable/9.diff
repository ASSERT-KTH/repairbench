diff --git a/tmp/86db9514-4f11-4186-8bd8-9c2b78d5c065_buggy.java b/tmp/7fe29a7f-6425-46e4-a9e9-3fd1d7d18021_fixed.java
index 81a6e8b..e259585 100644
--- a/tmp/86db9514-4f11-4186-8bd8-9c2b78d5c065_buggy.java
+++ b/tmp/7fe29a7f-6425-46e4-a9e9-3fd1d7d18021_fixed.java
@@ -1,19 +1,32 @@
 /**
-     * Tells if the token looks like a short option.
+ * Tells if the token looks like a short option and extracts individual options if concatenated.
  * 
  * @param token
+ * @return true if the token is a short option, false otherwise
  */
-    private boolean isShortOption(String token)
-    {
+private boolean isShortOption(String token) {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+    if (!token.startsWith("-") || token.length() == 1) {
         return false;
     }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
+    // remove leading "-"
+    String opts = token.substring(1);
+
+    // check for "=" and split if present
+    int pos = opts.indexOf("=");
+    String optName;
+    if (pos == -1) {
+        optName = opts;
+    } else {
+        optName = opts.substring(0, pos);
+    }
+
     // check for several concatenated short options
+    for (char c : optName.toCharArray()) {
+        if (!options.hasShortOption(String.valueOf(c))) {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
