diff --git a/tmp/067143b6-3793-46a9-8e4b-87a0e461bbbe_buggy.java b/tmp/a94741f5-079d-41a6-8102-ee4c5bfd5702_fixed.java
index 81a6e8b..d941356 100644
--- a/tmp/067143b6-3793-46a9-8e4b-87a0e461bbbe_buggy.java
+++ b/tmp/a94741f5-079d-41a6-8102-ee4c5bfd5702_fixed.java
@@ -1,19 +1,37 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
+    if (!token.startsWith("-") || token.length() < 2)
     {
         return false;
     }
 
-        // remove leading "-" and "=value"
+    // remove leading "-"
+    String optName = token.substring(1);
+
+    // check for several concatenated short options
+    for (char c : optName.toCharArray()) {
+        if (c == '=') {
+            break; // stop at the first "="
+        }
+        String singleOpt = String.valueOf(c);
+        if (!options.hasShortOption(singleOpt)) {
+            return false; // if any part is not a short option, return false
+        }
+    }
+
+    // if we have "=" in the token, the part before "=" should be a valid short option
     int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
+    if (pos!= -1) {
+        optName = token.substring(1, pos);
         return options.hasShortOption(optName);
-        // check for several concatenated short options
+    }
+
+    // at this point, we only have concatenated short options without "="
+    return true;
 }
\ No newline at end of file
