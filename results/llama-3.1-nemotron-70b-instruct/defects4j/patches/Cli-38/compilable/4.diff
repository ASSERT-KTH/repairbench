diff --git a/tmp/99e41911-5e16-4f0e-9044-3a185547525f_buggy.java b/tmp/b6d6bd31-bb7a-4808-b7a4-04c88469e5db_fixed.java
index 81a6e8b..67a2cd1 100644
--- a/tmp/99e41911-5e16-4f0e-9044-3a185547525f_buggy.java
+++ b/tmp/b6d6bd31-bb7a-4808-b7a4-04c88469e5db_fixed.java
@@ -1,19 +1,26 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
-    private boolean isShortOption(String token)
-    {
+private boolean isShortOption(String token) {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+    if (!token.startsWith("-") || token.length() < 2) {
         return false;
     }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    // remove leading "-" 
+    String optName = token.substring(1);
+
+    // check if token contains concatenated short options
+    for (char c : optName.toCharArray()) {
+        if (c == '=') {
+            break; // stop checking if '=' is found (short opt with value)
+        }
+        String shortOpt = String.valueOf(c);
+        if (!options.hasShortOption(shortOpt)) {
+            return false; // token contains a non-existent short option
+        }
+    }
+    return true;
 }
\ No newline at end of file
