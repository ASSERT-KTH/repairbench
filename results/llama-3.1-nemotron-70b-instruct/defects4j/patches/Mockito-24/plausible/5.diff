diff --git a/tmp/0895b691-ff0f-494b-9aaf-79263e49e85e_buggy.java b/tmp/fca24382-c9d2-480e-9b01-1dea53cc0ebf_fixed.java
index 47915ed..596f99f 100644
--- a/tmp/0895b691-ff0f-494b-9aaf-79263e49e85e_buggy.java
+++ b/tmp/fca24382-c9d2-480e-9b01-1dea53cc0ebf_fixed.java
@@ -1,22 +1,27 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
+/**
+ * Fixes: 
+ * - Returning inconsistent results for compareTo() when comparing a mock to itself
+ * - Failing to maintain consistency with equals() when comparing the same reference
  */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
             return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+        // Fix: Return 0 if references are the same, -1 or 1 otherwise
+        Object arg = invocation.getArguments()[0];
+        if (arg == invocation.getMock()) {
+            return 0; // Same reference, return 0 for consistency with equals()
+        } else {
+            return 1; // Different reference, return non-zero value
+        }
     }
     
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
