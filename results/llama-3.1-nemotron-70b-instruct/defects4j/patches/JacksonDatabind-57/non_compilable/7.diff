diff --git a/tmp/6e7262ae-2d84-4515-96bd-eb8aaca84503_buggy.java b/tmp/929e40f4-f870-456b-88ee-117a189ead29_fixed.java
index 08a41cf..256d9de 100644
--- a/tmp/6e7262ae-2d84-4515-96bd-eb8aaca84503_buggy.java
+++ b/tmp/929e40f4-f870-456b-88ee-117a189ead29_fixed.java
@@ -1,12 +1,17 @@
 /**
  * Overloaded version of {@link #readValue(InputStream)}.
  */
 public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
     throws IOException, JsonProcessingException
 {
+    // Ensure input bytes are decoded as UTF-8 to prevent CharConversionException
     if (_dataFormatReaders!= null) {
         return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
     }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
-                true));
+    JsonParser parser = _parserFactory.createParser(src, offset, length);
+    // Explicitly set character encoding to UTF-8 if not already set
+    if (parser.getCodec().getEncoding() == null) {
+        parser = parser.setCodec(new JsonFactory().setCharacterEncoding("UTF-8").createParser(src, offset, length));
+    }
+    return _bindAndReadValues(_considerFilter(parser, true));
 }
\ No newline at end of file
