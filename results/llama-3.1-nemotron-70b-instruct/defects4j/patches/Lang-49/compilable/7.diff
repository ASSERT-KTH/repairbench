diff --git a/tmp/f65836d9-5117-4c44-9bc9-7586e3547a94_buggy.java b/tmp/bbc131c0-704c-4f6e-b58a-167e9e00c2e2_fixed.java
index 08e51e4..e94d7fe 100644
--- a/tmp/f65836d9-5117-4c44-9bc9-7586e3547a94_buggy.java
+++ b/tmp/bbc131c0-704c-4f6e-b58a-167e9e00c2e2_fixed.java
@@ -1,16 +1,31 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
+    if (numerator == 0) {
+        return this; // already in simplest form (0/denominator)
+    }
+
     int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
     if (gcd == 1) {
-            return this;
+        // Preserve the sign of the original fraction
+        if ((numerator < 0) ^ (denominator < 0)) {
+            return Fraction.getFraction(-Math.abs(numerator), Math.abs(denominator));
+        } else {
+            return Fraction.getFraction(Math.abs(numerator), Math.abs(denominator));
         }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    }
+    // Preserve the sign of the original fraction
+    int newNumerator = (numerator / gcd);
+    int newDenominator = (denominator / gcd);
+    if ((numerator < 0) ^ (denominator < 0)) {
+        newNumerator = -Math.abs(newNumerator);
+    }
+    return Fraction.getFraction(newNumerator, newDenominator);
 }
\ No newline at end of file
