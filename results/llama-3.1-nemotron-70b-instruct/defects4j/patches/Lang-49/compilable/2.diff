diff --git a/tmp/15900389-0eed-4af0-86c1-c06210660295_buggy.java b/tmp/b3267a4e-0d59-4de9-8c5e-ba54c7ac2dec_fixed.java
index 08e51e4..e0596b3 100644
--- a/tmp/15900389-0eed-4af0-86c1-c06210660295_buggy.java
+++ b/tmp/b3267a4e-0d59-4de9-8c5e-ba54c7ac2dec_fixed.java
@@ -1,16 +1,30 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
     int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
-        if (gcd == 1) {
-            return this;
+    if (gcd == 1 || (numerator == 0 && gcd == denominator)) {
+        return this; // return original for 0 numerator to maintain denominator
     }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    int newNumerator = numerator / gcd;
+    int newDenominator = denominator / gcd;
+    
+    // Ensure the denominator is always positive
+    if (newDenominator < 0) {
+        newNumerator = -newNumerator;
+        newDenominator = -newDenominator;
+    }
+    
+    // Special case for reduced 0 numerator to always have denominator as 1
+    if (newNumerator == 0) {
+        newDenominator = 1;
+    }
+    
+    return Fraction.getFraction(newNumerator, newDenominator);
 }
\ No newline at end of file
