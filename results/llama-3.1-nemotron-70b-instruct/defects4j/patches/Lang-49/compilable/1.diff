diff --git a/tmp/a5fcb1a3-6c5e-414f-882c-4c12da76d61a_buggy.java b/tmp/0d20059a-da84-43ec-b5ad-3341b6cd8f1a_fixed.java
index 08e51e4..6d4841a 100644
--- a/tmp/a5fcb1a3-6c5e-414f-882c-4c12da76d61a_buggy.java
+++ b/tmp/0d20059a-da84-43ec-b5ad-3341b6cd8f1a_fixed.java
@@ -1,16 +1,31 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
+    if (numerator == 0) {
+        return this; // zero numerator is already in simplest form
+    }
+    
+    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));
     if (gcd == 1) {
-            return this;
+        return this; // already in simplest form
     }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    
+    int newNumerator = numerator / gcd;
+    int newDenominator = denominator / gcd;
+    
+    // preserve the original sign
+    if ((numerator < 0) ^ (denominator < 0)) {
+        newNumerator = -Math.abs(newNumerator);
+    } else {
+        newNumerator = Math.abs(newNumerator);
+    }
+    
+    return Fraction.getFraction(newNumerator, newDenominator);
 }
\ No newline at end of file
