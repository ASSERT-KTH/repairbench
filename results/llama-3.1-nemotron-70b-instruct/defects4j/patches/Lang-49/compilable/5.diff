diff --git a/tmp/7c9d31ea-8720-407e-8687-841c946251e5_buggy.java b/tmp/9f3af125-5bdc-4c27-9ebd-35a7312cf45a_fixed.java
index 08e51e4..814f87d 100644
--- a/tmp/7c9d31ea-8720-407e-8687-841c946251e5_buggy.java
+++ b/tmp/9f3af125-5bdc-4c27-9ebd-35a7312cf45a_fixed.java
@@ -1,16 +1,27 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
     int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
-        if (gcd == 1) {
+    if (numerator == 0) { // special case for zero numerator
+        return Fraction.ZERO;
+    } else if (gcd == 1) {
+        // preserve the original sign
+        if (numerator < 0 ^ denominator < 0) {
+            return Fraction.getFraction(-Math.abs(numerator), Math.abs(denominator));
+        } else {
             return this;
         }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    } else {
+        // simplify and preserve the original sign
+        int newNumerator = (numerator < 0 ^ denominator < 0)? 
+            -Math.abs(numerator / gcd) : Math.abs(numerator / gcd);
+        return Fraction.getFraction(newNumerator, Math.abs(denominator / gcd));
+    }
 }
\ No newline at end of file
