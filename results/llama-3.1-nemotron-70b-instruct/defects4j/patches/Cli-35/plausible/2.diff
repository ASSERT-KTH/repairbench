diff --git a/tmp/a1d8eb56-d93b-452e-bc82-926636782272_buggy.java b/tmp/e6c21fbd-5479-47f4-908c-187464d052bd_fixed.java
index c6b65da..1c422e0 100644
--- a/tmp/a1d8eb56-d93b-452e-bc82-926636782272_buggy.java
+++ b/tmp/e6c21fbd-5479-47f4-908c-187464d052bd_fixed.java
@@ -1,25 +1,32 @@
 /**
  * Returns the options with a long name starting with the name specified.
+ * If an exact match is found, only that option is returned. Otherwise, all matching options are returned.
  * 
  * @param opt the partial name of the option
  * @return the options matching the partial name specified, or an empty list if none matches
  * @since 1.3
  */
-    public List<String> getMatchingOptions(String opt)
-    {
+public List<String> getMatchingOptions(String opt) {
     opt = Util.stripLeadingHyphens(opt);
     
     List<String> matchingOpts = new ArrayList<String>();
 
-        // for a perfect match return the single option only
-
-        for (String longOpt : longOpts.keySet())
-        {
-            if (longOpt.startsWith(opt))
-            {
+    // Check for an exact match first
+    if (longOpts.containsKey(opt)) {
+        matchingOpts.add(opt);
+    } else {
+        // If no exact match, find all options starting with the specified name
+        for (String longOpt : longOpts.keySet()) {
+            if (longOpt.startsWith(opt)) {
                 matchingOpts.add(longOpt);
             }
         }
+    }
+    
+    // If multiple options match and the input exactly matches one of them, return only that one
+    if (matchingOpts.size() > 1 && longOpts.containsKey(opt)) {
+        return Collections.singletonList(opt);
+    }
     
     return matchingOpts;
 }
\ No newline at end of file
