diff --git a/tmp/43684224-9b45-4e33-a3b3-1433c137a99e_buggy.java b/tmp/f61f75e4-e7da-481d-b43c-885cf47ea6ff_fixed.java
index e69de29..7f2bb92 100644
--- a/tmp/43684224-9b45-4e33-a3b3-1433c137a99e_buggy.java
+++ b/tmp/f61f75e4-e7da-481d-b43c-885cf47ea6ff_fixed.java
@@ -0,0 +1,24 @@
+// **Assumed Class and Method for Illustration Purposes**
+public class TypeFactory {
+    //...
+
+    // **Potential Fix for the Buggy Function**
+    public JavaType constructType(Class<?> clazz, TypeBindings bindings, TypeFactory tf) {
+        if (clazz.getSuperclass()!= null && clazz.getSuperclass()!= Object.class) {
+            JavaType superClassType = _constructType(clazz.getSuperclass(), bindings, tf);
+            // **Fix**: Ensure base type's properties are included when subtype is loaded after base type
+            if (superClassType instanceof ResolvedRecursiveType) {
+                ((ResolvedRecursiveType) superClassType).includeBasePropertiesbindings, tf);
+            }
+            return new ResolvedRecursiveType(superClassType, bindings, tf);
+        }
+        //... (rest of the method remains the same)
+    }
+
+    // **New Method to Include Base Properties (if needed, depending on actual implementation)**
+    private void includeBaseProperties(TypeBindings bindings, TypeFactory tf, ResolvedRecursiveType recursiveType) {
+        // Implementation details depend on the actual requirements and existing codebase
+        // For example, merge base type's properties into the subtype's properties
+        //...
+    }
+}
\ No newline at end of file
