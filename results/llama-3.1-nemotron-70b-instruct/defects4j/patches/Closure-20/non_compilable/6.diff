diff --git a/tmp/01424921-a7bd-47ca-8858-60e28a3e972f_buggy.java b/tmp/7efc1e4d-a670-4d67-b004-58c1de4be17e_fixed.java
index d4e6d48..b7bca7e 100644
--- a/tmp/01424921-a7bd-47ca-8858-60e28a3e972f_buggy.java
+++ b/tmp/7efc1e4d-a670-4d67-b004-58c1de4be17e_fixed.java
@@ -1,23 +1,20 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget!= null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
       Node value = callTarget.getNext();
-      if (value != null) {
+      if (value!= null && value.getChildrenCount() == 1) { // Added check for single argument
+        Node argument = value.getFirstChild();
+        if (argument.isLiteral() || argument.isString()) { // Added check for immutable literals
           Node addition = IR.add(
               IR.string("").srcref(callTarget),
-            value.detachFromParent());
+              argument.detachFromParent());
           n.getParent().replaceChild(n, addition);
           reportCodeChange();
           return addition;
         }
       }
+    }
     return n;
 }
\ No newline at end of file
