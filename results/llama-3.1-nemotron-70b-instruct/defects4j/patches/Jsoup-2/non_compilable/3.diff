diff --git a/tmp/362bf828-a1be-4f67-8671-175d1a2a37e8_buggy.java b/tmp/b6669df4-b4d3-4747-8ec3-73c5c0c0d8fe_fixed.java
index 1b29465..3bd767a 100644
--- a/tmp/362bf828-a1be-4f67-8671-175d1a2a37e8_buggy.java
+++ b/tmp/b6669df4-b4d3-4747-8ec3-73c5c0c0d8fe_fixed.java
@@ -1,50 +1,62 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") &&!tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute!= null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
     boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
     if (tq.matchChomp("/>")) { // close empty element or tag
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
     // pc data only tags (textarea, script): chomp to end tag, add content as text node
     if (tag.isData()) {
         String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
+        tq.consume(">");
+        // Fix: Add a flag to track if we are currently inside a data tag
+        boolean insideDataTag = true;
         
+        while (insideDataTag &&!tq.isEmpty()) {
+            if (tq.matches("</" + tagName + ">")) {
+                tq.consume("</" + tagName + ">");
+                insideDataTag = false;
+            } else {
+                String text = tq.consumeToEndOfDataTag();
+                if (text.length() > 0) {
                     Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
-                dataNode = TextNode.createFromEncoded(data, baseUri);
+                    if (tag.equals(titleTag) || tag.equals(textareaTag))
+                        dataNode = TextNode.createFromEncoded(text, baseUri);
                     else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+                        dataNode = new DataNode(text, baseUri); 
                     child.appendChild(dataNode);   
                 }
+            }
+        }
+    }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
         if (href.length()!= 0) { // ignore <base target> etc
             baseUri = href;
             doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
         }
     }
 }
\ No newline at end of file
