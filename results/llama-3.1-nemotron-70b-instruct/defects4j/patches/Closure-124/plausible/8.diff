diff --git a/tmp/c7f31121-e841-47bb-a519-6e8d32b5a364_buggy.java b/tmp/67b558ca-e8a4-42dc-8a27-f5e21dfbbb9d_fixed.java
index 2573d30..73ab868 100644
--- a/tmp/c7f31121-e841-47bb-a519-6e8d32b5a364_buggy.java
+++ b/tmp/67b558ca-e8a4-42dc-8a27-f5e21dfbbb9d_fixed.java
@@ -1,20 +1,26 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  Node currentNode = node;
+  while (currentNode.hasChildren()) {
+    currentNode = currentNode.getFirstChild();
+    if (currentNode.isName() && isNameAssignedTo(currentNode.getString(), replacement)) {
       return false;
     }
+    if (currentNode.isGetProp()) {
+      // If we encounter another property access, the reference might have changed
+      return false;
+    }
+  }
 
   return true;
 }
\ No newline at end of file
