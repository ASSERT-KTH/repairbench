diff --git a/tmp/49c7b844-22d5-4889-933f-459bd4f1e9e1_buggy.java b/tmp/478c5e27-73b1-42a6-acc9-9222816da549_fixed.java
index f7bc541..0606d70 100644
--- a/tmp/49c7b844-22d5-4889-933f-459bd4f1e9e1_buggy.java
+++ b/tmp/478c5e27-73b1-42a6-acc9-9222816da549_fixed.java
@@ -1,14 +1,24 @@
 /**
-     Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.
-     The original document is not modified. Only elements from the dirt document's <code>body</code> are used.
-     @param dirtyDocument Untrusted base document to clean.
-     @return cleaned document.
+ * Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.
+ * The original document is not modified. Only elements from the dirty document's <code>body</code> are used.
+ * @param dirtyDocument Untrusted base document to clean.
+ * @return cleaned document.
  */
 public Document clean(Document dirtyDocument) {
     Validate.notNull(dirtyDocument);
 
     Document clean = Document.createShell(dirtyDocument.baseUri());
+    if (clean.body()!= null) { // added null check
         copySafeNodes(dirtyDocument.body(), clean.body());
+    }
+
+    // Ensure document structure is valid even if body is empty
+    if (clean.body() == null) {
+        clean.body(); // Ensure body is created
+    } else if (clean.body().childNodes().size() == 0 && dirtyDocument.hasText() == false) {
+        // If original document had no text and no allowed elements, return an empty document
+        clean = Document.createShell(dirtyDocument.baseUri());
+    }
 
     return clean;
 }
\ No newline at end of file
