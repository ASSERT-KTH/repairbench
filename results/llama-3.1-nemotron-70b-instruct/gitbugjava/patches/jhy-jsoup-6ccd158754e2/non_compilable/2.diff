diff --git a/tmp/15eb9606-441c-44b2-8ba4-20ebdab9c71c_buggy.java b/tmp/40b0b633-16d7-4d5b-9974-7740ae232c03_fixed.java
index 23f078d..73e6b58 100644
--- a/tmp/15eb9606-441c-44b2-8ba4-20ebdab9c71c_buggy.java
+++ b/tmp/40b0b633-16d7-4d5b-9974-7740ae232c03_fixed.java
@@ -1,14 +1,20 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            // Fix: Use Charset instead of Charset name to avoid potential lookup issues
+            //      and also don't append a '?' to the encoded string
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), StandardCharsets.UTF_8);
+            sb.append(encoded.replace("?", "")); // remove the trailing '?' if present
         } else {
             sb.append((char) c);
         }
+        // Advance the index to handle supplementary characters correctly
+        if (Character.charCount(c) == 2) {
+            i++;
+        }
     }
 }
\ No newline at end of file
