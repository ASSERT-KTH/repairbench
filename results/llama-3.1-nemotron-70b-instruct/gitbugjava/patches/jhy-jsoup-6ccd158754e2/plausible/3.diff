diff --git a/tmp/da667fae-913e-40ab-892f-1a79f518db01_buggy.java b/tmp/a04e9f70-523f-4452-a9c5-50a08689f47b_fixed.java
index 23f078d..c2f588c 100644
--- a/tmp/da667fae-913e-40ab-892f-1a79f518db01_buggy.java
+++ b/tmp/a04e9f70-523f-4452-a9c5-50a08689f47b_fixed.java
@@ -1,14 +1,17 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus? '+' : "%20");
+            i++; // increment i by 1 for ASCII characters
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name());
+            sb.append(encoded.replace("%3F", "")); // remove trailing %3F if present
+            i += Character.charCount(c); // increment i by the correct code point length
         } else {
             sb.append((char) c);
+            i++; // increment i by 1 for ASCII characters
         }
     }
 }
\ No newline at end of file
