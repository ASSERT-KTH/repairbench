diff --git a/tmp/89035ca3-1df4-4217-bffb-2e1b7dda8986_buggy.java b/tmp/25921146-46d8-4092-b430-bd8f75af0ed5_fixed.java
index ae12a4d..42ad576 100644
--- a/tmp/89035ca3-1df4-4217-bffb-2e1b7dda8986_buggy.java
+++ b/tmp/25921146-46d8-4092-b430-bd8f75af0ed5_fixed.java
@@ -1,3 +1,21 @@
+/**
+ * Checks if the element should be formatted as a block based on its tag, 
+ * parent's tag (if any), and output settings. Also considers inline styles 
+ * on nested elements.
+ * 
+ * @param out Document output settings
+ * @return true if the element should be formatted as a block, false otherwise
+ */
 private boolean isFormatAsBlock(Document.OutputSettings out) {
-        return tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline();
+    // Check if this element's tag or its parent's tag (if exists) should be formatted as a block
+    boolean parentOrSelfBlock = tag.formatAsBlock() || (parent()!= null && parent().tag().formatAsBlock());
+    
+    // If output is set to outline, it overrides the block format check
+    boolean outlineOverrides = out.outline();
+    
+    // Check if any direct child has a display:inline style, indicating block formatting is desired for this element
+    boolean hasInlineChild =!getElementsMatchingOwnText(tagName("p[style*='display:inline']")).isEmpty();
+    
+    // Combine the conditions: format as block if parent/self should, or if output is set to outline, or if a child has inline style
+    return parentOrSelfBlock || outlineOverrides || hasInlineChild;
 }
\ No newline at end of file
