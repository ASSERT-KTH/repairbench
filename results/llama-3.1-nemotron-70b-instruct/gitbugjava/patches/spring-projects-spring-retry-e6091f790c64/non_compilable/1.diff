diff --git a/tmp/3c289ef0-7674-4520-8b74-257e40ae0674_buggy.java b/tmp/8614693c-bb94-454d-a32d-7ef39d2f2542_fixed.java
index b8e3fa3..b6cb2f0 100644
--- a/tmp/3c289ef0-7674-4520-8b74-257e40ae0674_buggy.java
+++ b/tmp/8614693c-bb94-454d-a32d-7ef39d2f2542_fixed.java
@@ -1,65 +1,66 @@
 /**
  * Builds the {@link BackOffPolicy} with the given parameters.
  * @return the {@link BackOffPolicy} instance
  */
 public BackOffPolicy build() {
-		if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
+    if (this.maxDelay!= null && this.delay!= null && this.maxDelay > this.delay) {
+        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
+        if (this.delay!= null) {
+            policy.setMinBackOffPeriod(this.delay);
+        }
+        if (this.delaySupplier!= null) {
+            policy.minBackOffPeriodSupplier(this.delaySupplier);
+        }
+        if (this.maxDelay!= null) {
+            policy.setMaxBackOffPeriod(this.maxDelay);
+        }
+        if (this.maxDelaySupplier!= null) {
+            policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
+        }
+        if (this.sleeper!= null) {
+            policy.setSleeper(this.sleeper);
+        }
+        return policy;
+    } else if (this.multiplier!= null && this.multiplier > 0 || this.multiplierSupplier!= null) {
         ExponentialBackOffPolicy policy;
         if (Boolean.TRUE.equals(this.random)) {
             policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
+        } else {
             policy = new ExponentialBackOffPolicy();
         }
         if (this.delay!= null) {
             policy.setInitialInterval(this.delay);
         }
         if (this.delaySupplier!= null) {
             policy.initialIntervalSupplier(this.delaySupplier);
         }
         if (this.multiplier!= null) {
             policy.setMultiplier(this.multiplier);
         }
         if (this.multiplierSupplier!= null) {
             policy.multiplierSupplier(this.multiplierSupplier);
         }
-			if (this.maxDelay != null && this.delay != null) {
-				policy.setMaxInterval(
-						this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
+        if (this.maxDelay!= null) {
+            policy.setMaxInterval(this.maxDelay);
         }
         if (this.maxDelaySupplier!= null) {
             policy.maxIntervalSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper!= null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
-		}
-		if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
-			UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
-			if (this.delay != null) {
-				policy.setMinBackOffPeriod(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.minBackOffPeriodSupplier(this.delaySupplier);
-			}
-			if (this.maxDelay != null) {
-				policy.setMaxBackOffPeriod(this.maxDelay);
-			}
-			if (this.maxDelaySupplier != null) {
-				policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
-			}
-			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
-			}
-			return policy;
-		}
+    } else {
         FixedBackOffPolicy policy = new FixedBackOffPolicy();
         if (this.delay!= null) {
             policy.setBackOffPeriod(this.delay);
         }
+        if (this.delaySupplier!= null) {
+            policy.backOffPeriodSupplier(this.delaySupplier);
+        }
         if (this.sleeper!= null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
+}
\ No newline at end of file
