diff --git a/tmp/a3b0beb8-f436-4c5e-9116-d5f7865e3123_buggy.java b/tmp/95b79263-6bc6-4a6f-a144-0995f26c6a43_fixed.java
index 855afa5..a242621 100644
--- a/tmp/a3b0beb8-f436-4c5e-9116-d5f7865e3123_buggy.java
+++ b/tmp/95b79263-6bc6-4a6f-a144-0995f26c6a43_fixed.java
@@ -1,13 +1,19 @@
+/**
+ * Encodes a URL, properly escaping spaces and special characters.
+ * 
+ * @param u the URL to encode
+ * @return the encoded URL
+ */
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        URI uri = new URI(u.getProtocol(), u.getUserInfo(), u.getHost(), u.getPort(), u.getPath(), u.getQuery(), u.getRef());
+        String encodedUrl = uri.toASCIIString();
+        // manually replace spaces with %20 (URI.toASCIIString() doesn't do this)
+        encodedUrl = encodedUrl.replace(" ", "%20");
+        return new URL(encodedUrl);
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
