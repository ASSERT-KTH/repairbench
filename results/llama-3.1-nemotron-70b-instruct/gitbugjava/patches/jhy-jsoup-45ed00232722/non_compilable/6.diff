diff --git a/tmp/c9b1b7f4-859b-498b-9f90-1b1759ad9b88_buggy.java b/tmp/8a8b7175-3b21-4b01-b934-f273a72010fd_fixed.java
index 855afa5..b38a30b 100644
--- a/tmp/c9b1b7f4-859b-498b-9f90-1b1759ad9b88_buggy.java
+++ b/tmp/8a8b7175-3b21-4b01-b934-f273a72010fd_fixed.java
@@ -1,13 +1,24 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        String urlS = u.toExternalForm();
+        URI uri = new URI(urlS);
+        String encodedPath = uri.getRawPath().replaceAll(" ", "%20"); // encode spaces in path
+        String encodedQuery = uri.getRawQuery().replaceAll(" ", "%20"); // encode spaces in query
+        String encodedFragment = uri.getRawFragment().replaceAll(" ", "%20"); // encode spaces in fragment
+        
+        // reconstruct URI with encoded path, query, and fragment
+        URI encodedUri = new URI(
+            uri.getScheme(), 
+            uri.getAuthority(), 
+            encodedPath, 
+            encodedQuery, 
+            encodedFragment
+        );
+        
+        return new URL(encodedUri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
