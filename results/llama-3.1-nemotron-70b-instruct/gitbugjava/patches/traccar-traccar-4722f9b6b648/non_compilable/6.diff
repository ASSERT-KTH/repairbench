diff --git a/tmp/840310be-008c-413e-9d39-db82d924ccdb_buggy.java b/tmp/84b90822-dd28-4661-9cae-94251ea88160_fixed.java
index c84c989..18fff5a 100644
--- a/tmp/840310be-008c-413e-9d39-db82d924ccdb_buggy.java
+++ b/tmp/84b90822-dd28-4661-9cae-94251ea88160_fixed.java
@@ -1,27 +1,45 @@
+/**
+ * Decodes Iridium position from a given ByteBuf.
+ * 
+ * @param channel       channel
+ * @param remoteAddress remote address
+ * @param buf           byte buffer
+ * @return position, or null if invalid
+ */
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Fix: Handle date and time correctly to avoid time offset issues
+    long dateTime = buf.readUnsignedIntLE(); // date and time in Iridium format (ystate, yday, hour, minute, second)
+    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+    calendar.clear();
+    calendar.set(Calendar.YEAR, 2000 + (dateTime >> 26)); // yyear (6 bits)
+    calendar.set(Calendar.DAY_OF_YEAR, (dateTime >> 20) & 0x1FF); // yday (9 bits)
+    calendar.set(Calendar.HOUR_OF_DAY, (dateTime >> 14) & 0x3F); // hour (6 bits)
+    calendar.set(Calendar.MINUTE, (dateTime >> 8) & 0x3F); // minute (6 bits)
+    calendar.set(Calendar.SECOND, dateTime & 0xFF); // second (8 bits)
+    position.setTime(calendar.getTimeInMillis());
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
