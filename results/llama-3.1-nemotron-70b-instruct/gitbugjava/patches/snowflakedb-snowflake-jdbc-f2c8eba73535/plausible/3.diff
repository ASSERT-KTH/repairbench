diff --git a/tmp/99c6f12b-43d6-4d3d-8776-9db47cd24f52_buggy.java b/tmp/290f8eea-a7e5-4522-b1f8-9dcacb6fac62_fixed.java
index bdde834..a9e324b 100644
--- a/tmp/99c6f12b-43d6-4d3d-8776-9db47cd24f52_buggy.java
+++ b/tmp/290f8eea-a7e5-4522-b1f8-9dcacb6fac62_fixed.java
@@ -1,10 +1,16 @@
+/**
+ * Checks if the given HTTP response code is non-retryable.
+ * 
+ * @param response      the HTTP response to check
+ * @param retryHTTP403  whether to retry on HTTP 403 (Forbidden) or not
+ * @return true if the response code is non-retryable, false otherwise
+ */
 static boolean isNonRetryableHTTPCode(CloseableHttpResponse response, boolean retryHTTP403) {
+    int statusCode = response.getStatusLine().getStatusCode();
     return response!= null
-        && (response.getStatusLine().getStatusCode() < 500
-            || // service unavailable
-            response.getStatusLine().getStatusCode() >= 600)
-        && // gateway timeout
-        response.getStatusLine().getStatusCode() != 408
-        && // request timeout
-        (!retryHTTP403 || response.getStatusLine().getStatusCode() != 403);
+        && ((statusCode >= 100 && statusCode < 500) // 1xx, 2xx, 3xx, 4xx
+            || statusCode >= 600) // 6xx (note: not all 6xx are standardized, but we'll catch all)
+        && statusCode!= 408 // 408 Request Timeout is retryable
+        && (!retryHTTP403 || statusCode!= 403) // 403 Forbidden is retryable if configured to do so
+        && statusCode!= 429; // 429 Too Many Requests is retryable
 }
\ No newline at end of file
