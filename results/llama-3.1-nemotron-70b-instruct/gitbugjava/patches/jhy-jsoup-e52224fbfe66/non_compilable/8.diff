diff --git a/tmp/319d9d03-3d22-4cdd-a2a7-4442959ed1c3_buggy.java b/tmp/79229fa7-f6c5-4ad0-a5e7-875842684bde_fixed.java
index acd5eb5..f6525d6 100644
--- a/tmp/319d9d03-3d22-4cdd-a2a7-4442959ed1c3_buggy.java
+++ b/tmp/79229fa7-f6c5-4ad0-a5e7-875842684bde_fixed.java
@@ -1,32 +1,37 @@
 @Override
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint &&!Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent!= null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
         trimTrailing = trimLikeBlock && nextSibling() == null;
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         Node prev = previousSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
             || (prev instanceof Element && ((Element) prev).isBlock())
             ;
         if (couldSkip && isBlank) return;
 
         if (
             (siblingIndex == 0 && parent!= null && parent.tag().formatAsBlock() &&!isBlank) ||
             (out.outline() && siblingNodes().size() > 0 &&!isBlank) ||
-                (siblingIndex > 0 && isNode(prev, "br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            (siblingIndex > 0 && isNode(prev, "br") &&!isBlank) // Fix: added!isBlank check for inline <br> case
             )
             indent(accum, depth, out);
     }
 
+    // Fix: handle <br> in block separately to ensure correct indentation
+    if (tagName().equals("br") && parent!= null && parent.tag().formatAsBlock() && prettyPrint) {
+        accum.append("<br>\n");
+    } else {
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
+}
\ No newline at end of file
