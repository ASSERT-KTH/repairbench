diff --git a/tmp/23b15af3-bade-44f5-b22c-fc4d5f7742de_buggy.java b/tmp/1a0a68e5-c813-43b4-9ef3-372d341b8f0a_fixed.java
index acd5eb5..ddb209b 100644
--- a/tmp/23b15af3-bade-44f5-b22c-fc4d5f7742de_buggy.java
+++ b/tmp/1a0a68e5-c813-43b4-9ef3-372d341b8f0a_fixed.java
@@ -1,32 +1,35 @@
 @Override
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint &&!Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent!= null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
         trimTrailing = trimLikeBlock && nextSibling() == null;
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         Node prev = previousSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
             || (prev instanceof Element && ((Element) prev).isBlock())
             ;
         if (couldSkip && isBlank) return;
 
         if (
             (siblingIndex == 0 && parent!= null && parent.tag().formatAsBlock() &&!isBlank) ||
             (out.outline() && siblingNodes().size() > 0 &&!isBlank) ||
-                (siblingIndex > 0 && isNode(prev, "br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            (siblingIndex > 0 && isNode(prev, "br") && isBlank) // Fix: added isBlank check for inline <br>
             )
             indent(accum, depth, out);
+        else if (siblingIndex > 0 && isNode(prev, "br") &&!isBlank) { // Fix: handle non-blank text after inline <br>
+            append newline to accum (e.g., accum.append("\n"));
+        }
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
