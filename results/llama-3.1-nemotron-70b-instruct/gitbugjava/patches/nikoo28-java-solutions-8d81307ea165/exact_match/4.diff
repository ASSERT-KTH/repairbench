diff --git a/tmp/0c241d9f-4406-46f2-86c0-9ce54329bfc6_buggy.java b/tmp/429316bc-3bc6-4e9f-89ec-2e4e40ba0218_fixed.java
index 9739964..ef2f123 100644
--- a/tmp/0c241d9f-4406-46f2-86c0-9ce54329bfc6_buggy.java
+++ b/tmp/429316bc-3bc6-4e9f-89ec-2e4e40ba0218_fixed.java
@@ -1,27 +1,36 @@
+/**
+ * Calculates the span of each price in the given array.
+ * The span of a price at index 'i' is the number of consecutive days 
+ * (including the current day) where the price is less than or equal to 
+ * the price at index 'i'.
+ * 
+ * @param prices Array of stock prices
+ * @return Array of spans for each price
+ */
 public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+          && prices[indexStack.peek()] < prices[i])
         indexStack.pop();
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
       if (indexStack.isEmpty())
         spans[i] = i + 1;
       else
         spans[i] = i - indexStack.peek();
 
       indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
