diff --git a/tmp/89b72883-49ea-419b-b1f8-4eed99207951_buggy.java b/tmp/cdedd8ae-e9eb-468b-9f72-756a26390ba3_fixed.java
index 5bf31b1..9353bf4 100644
--- a/tmp/89b72883-49ea-419b-b1f8-4eed99207951_buggy.java
+++ b/tmp/cdedd8ae-e9eb-468b-9f72-756a26390ba3_fixed.java
@@ -1,17 +1,28 @@
+/**
+ * Consume a sub-query, handling balanced parens and brackets, and combinator separators.
+ * 
+ * @return the consumed sub-query as a string
+ */
 private String consumeSubQuery() {
     StringBuilder sq = StringUtil.borrowBuilder();
+    boolean combinatorEncountered = false; // Flag to track if a combinator has been encountered
     while (!tq.isEmpty()) {
         if (tq.matches("("))
             sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
         else if (tq.matches("["))
             sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
-            else if (tq.matchesAny(Combinators))
+        else if (tq.matchesAny(Combinators)) {
+            combinatorEncountered = true; // Mark that a combinator is encountered
             if (sq.length() > 0)
                 break;
             else
                 tq.consume();
-            else
+        } else {
+            if (combinatorEncountered) { // If a combinator was encountered before, break
+                break;
+            }
             sq.append(tq.consume());
         }
+    }
     return StringUtil.releaseBuilder(sq);
 }
\ No newline at end of file
