diff --git a/tmp/3814fd41-4582-4f5b-8dbd-bf0da205870c_buggy.java b/tmp/e48d3100-d18d-4274-8f82-909de4cf2f74_fixed.java
index d87dd79..4c68709 100644
--- a/tmp/3814fd41-4582-4f5b-8dbd-bf0da205870c_buggy.java
+++ b/tmp/e48d3100-d18d-4274-8f82-909de4cf2f74_fixed.java
@@ -1,47 +1,55 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
+    if (endIndex > buf.readerIndex()) { // Fix: ensure endIndex is within bounds
+        ByteBuf frame = Unpooled.buffer(endIndex - buf.readerIndex()); // Fix: preallocate buffer size
+        buf.readBytes(frame, endIndex - buf.readerIndex()); // Fix: read directly into frame
+
+        // Apply decoding
+        ByteBuf decodedFrame = Unpooled.buffer();
+        byte[] frameArray = new byte[frame.readableBytes()];
+        frame.readBytes(frameArray);
+        for (byte b : frameArray) {
+            if (b == '}') {
+                byte b2 = frameArray[frameArray.indexOf(b) + 1]; // assume next byte is available
                 switch (b2) {
                     case 0x01:
-                            frame.writeByte('}');
+                        decodedFrame.writeByte('}');
                         break;
                     case 0x02:
-                            frame.writeByte('[');
+                        decodedFrame.writeByte('[');
                         break;
                     case 0x03:
-                            frame.writeByte(']');
+                        decodedFrame.writeByte(']');
                         break;
                     case 0x04:
-                            frame.writeByte(',');
+                        decodedFrame.writeByte(',');
                         break;
                     case 0x05:
-                            frame.writeByte('*');
+                        decodedFrame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                "unexpected byte at %d: 0x%02x", frame.readerIndex() - 1, b2));
                 }
+                // Skip next byte as it's already processed
+                frameArray = Arrays.copyOfRange(frameArray, 0, frameArray.indexOf(b)) 
+                           + Arrays.copyOfRange(frameArray, frameArray.indexOf(b) + 2, frameArray.length);
             } else {
-                    frame.writeByte(b1);
+                decodedFrame.writeByte(b);
             }
         }
-            return frame;
+        return decodedFrame;
     }
 
     return null;
 }
\ No newline at end of file
