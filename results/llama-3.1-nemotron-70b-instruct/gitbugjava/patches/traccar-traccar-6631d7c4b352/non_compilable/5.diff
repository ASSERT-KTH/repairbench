diff --git a/tmp/dfdbc7be-5c38-4317-93bc-40bb44571429_buggy.java b/tmp/7a6c6466-b1c9-4123-b351-42df698a3a71_fixed.java
index d87dd79..be6e3cf 100644
--- a/tmp/dfdbc7be-5c38-4317-93bc-40bb44571429_buggy.java
+++ b/tmp/7a6c6466-b1c9-4123-b351-42df698a3a71_fixed.java
@@ -1,47 +1,52 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
         ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
+        ByteBuf remaining = buf.retainedSlice(buf.readerIndex(), endIndex - buf.readerIndex());
+        buf.readerIndex(endIndex); // Consume the read bytes
+
+        while (remaining.isReadable()) {
+            byte b1 = remaining.readByte();
             if (b1 == '}') {
-                    byte b2 = buf.readByte();
+                byte b2 = remaining.readByte();
                 switch (b2) {
                     case 0x01:
                         frame.writeByte('}');
                         break;
                     case 0x02:
                         frame.writeByte('[');
                         break;
                     case 0x03:
                         frame.writeByte(']');
                         break;
                     case 0x04:
                         frame.writeByte(',');
                         break;
                     case 0x05:
                         frame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                "unexpected byte at %d: 0x%02x", remaining.readerIndex() - 1, b2));
                 }
             } else {
                 frame.writeByte(b1);
             }
         }
+        remaining.release(); // Release the retained slice
+
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
