diff --git a/tmp/398e4047-0924-4ce6-8f9c-66d6c65210e4_buggy.java b/tmp/d2d25090-296c-40f3-93fc-90f6cf751c27_fixed.java
index dd3b100..f0c624c 100644
--- a/tmp/398e4047-0924-4ce6-8f9c-66d6c65210e4_buggy.java
+++ b/tmp/d2d25090-296c-40f3-93fc-90f6cf751c27_fixed.java
@@ -1,12 +1,20 @@
+/**
+ * Fixed function to find the Lowest Common Ancestor of two nodes in a Binary Search Tree.
+ * 
+ * @param root The root of the Binary Search Tree.
+ * @param p    The first node.
+ * @param q    The second node.
+ * @return The Lowest Common Ancestor of p and q.
+ */
 public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
-            if (root == null || p == root || q == root) {
-                return root;
-            }
-            if ((root.val - p.val) * (root.val - q.val) > 0) {
-                if (root.val - p.val > 0) {
+    // If both p and q are less than root, move to the left subtree
+    if (p.val < root.val && q.val < root.val) {
         return lowestCommonAncestor(root.left, p, q);
     }
+    // If both p and q are greater than root, move to the right subtree
+    if (p.val > root.val && q.val > root.val) {
         return lowestCommonAncestor(root.right, p, q);
     }
+    // Otherwise, the current root is the Lowest Common Ancestor
     return root;
 }
\ No newline at end of file
