diff --git a/tmp/1650df20-41ff-490b-8998-2dcb66f322ea_buggy.java b/tmp/c532e106-dd8d-40d0-be17-7842267b8658_fixed.java
index 0a8838d..e9e4674 100644
--- a/tmp/1650df20-41ff-490b-8998-2dcb66f322ea_buggy.java
+++ b/tmp/c532e106-dd8d-40d0-be17-7842267b8658_fixed.java
@@ -1,61 +1,65 @@
 private List<Position> parseData(
             Channel channel, SocketAddress remoteAddress, ByteBuf buf, int locationPacketId, String... imei) {
         List<Position> positions = new LinkedList<>();
 
         if (!connectionless) {
             buf.readUnsignedInt(); // data length
         }
 
         int codec = buf.readUnsignedByte();
         int count = buf.readUnsignedByte();
 
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
         if (deviceSession == null) {
             return null;
         }
         String model = getCacheManager().getObject(Device.class, deviceSession.getDeviceId()).getModel();
 
         for (int i = 0; i < count; i++) {
             Position position = new Position(getProtocolName());
 
             position.setDeviceId(deviceSession.getDeviceId());
             position.setValid(true);
 
             if (codec == CODEC_13) {
                 buf.readUnsignedByte(); // type
                 int length = buf.readInt() - 4;
                 getLastLocation(position, new Date(buf.readUnsignedInt() * 1000));
                 if (isPrintable(buf, length)) {
                     position.set(Position.KEY_RESULT,
                             buf.readCharSequence(length, StandardCharsets.US_ASCII).toString().trim());
                 } else {
                     position.set(Position.KEY_RESULT,
                             ByteBufUtil.hexDump(buf.readSlice(length)));
                 }
+                // Added null check to prevent NullPointerException
+                if (position.getAttributes()!= null) {
+                    position.set(Position.KEY_DRIVER_UNIQUE_ID, position.getAttributes().get(Position.KEY_RESULT));
+                }
             } else if (codec == CODEC_12) {
                 decodeSerial(channel, remoteAddress, deviceSession, position, buf);
             } else {
                 decodeLocation(position, buf, codec, model);
             }
 
             if (!position.getOutdated() ||!position.getAttributes().isEmpty()) {
                 positions.add(position);
             }
         }
 
         if (channel!= null && codec!= CODEC_12 && codec!= CODEC_13) {
             ByteBuf response = Unpooled.buffer();
             if (connectionless) {
                 response.writeShort(5);
                 response.writeShort(0);
                 response.writeByte(0x01);
                 response.writeByte(locationPacketId);
                 response.writeByte(count);
             } else {
                 response.writeInt(count);
             }
             channel.writeAndFlush(new NetworkMessage(response, remoteAddress));
         }
 
         return positions.isEmpty()? null : positions;
     }
\ No newline at end of file
