diff --git a/tmp/2590eb82-d741-4610-a7c3-01ac0cc43ca6_buggy.java b/tmp/79105005-0500-4fa1-9c3b-24c945c4e7cc_fixed.java
index c84c989..bfa5d3b 100644
--- a/tmp/2590eb82-d741-4610-a7c3-01ac0cc43ca6_buggy.java
+++ b/tmp/79105005-0500-4fa1-9c3b-24c945c4e7cc_fixed.java
@@ -1,27 +1,45 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
+    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);
     DeviceSession deviceSession = getDeviceSession(
-                channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
+            channel, remoteAddress, imei);
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
 
-        buf.skipBytes(23); // coordinates block
+    long timestamp = buf.readUnsignedIntLE();
+    position.setTime(new Date(timestamp * 1000));
+
+    // Read coordinates block
+    double latitude = buf.readFloatLE();
+    double longitude = buf.readFloatLE();
+    double altitude = buf.readFloatLE();
+
+    buf.readUnsignedByte(); // data quality
+
+    double speed = buf.readUnsignedShortLE() * 0.194384; // convert to knots
+    double course = buf.readUnsignedShortLE();
+
+    position.setLatitude(latitude);
+    position.setLongitude(longitude);
+    position.setAltitude(altitude);
+
+    position.setSpeed(speed);
+    position.setCourse(course);
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
