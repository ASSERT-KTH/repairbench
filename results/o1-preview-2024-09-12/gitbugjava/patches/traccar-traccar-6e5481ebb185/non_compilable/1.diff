diff --git a/tmp/02d2db0c-a5cf-415e-a3c1-d3f1c6393be4_buggy.java b/tmp/0c827521-2eb0-49c2-b010-3f8e0b4c2fcb_fixed.java
index ee599aa..1b5eb88 100644
--- a/tmp/02d2db0c-a5cf-415e-a3c1-d3f1c6393be4_buggy.java
+++ b/tmp/0c827521-2eb0-49c2-b010-3f8e0b4c2fcb_fixed.java
@@ -1,50 +1,83 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
 
     int length = 0;
     if (hasLength) {
         length = buf.readUnsignedByte();
         if (length == 0) {
             boolean zeroedData = true;
             for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
                 if (buf.getByte(i) != 0) {
                     zeroedData = false;
                     break;
                 }
             }
             if (zeroedData) {
                 buf.skipBytes(Math.min(buf.readableBytes(), 45));
             }
             return false;
         }
     }
 
+    if (buf.readableBytes() < 2) {
+        return false;
+    }
     int mcc = buf.readUnsignedShort();
-        int mnc;
+
+    int mncSize;
     if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
+        mncSize = 2;
+    } else {
+        mncSize = 1;
+    }
+
+    int lacSize = (type == MSG_LBS_ALARM) ? 4 : 2;
+
+    int cidSize;
+    if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
+        cidSize = 8;
+    } else if (type == MSG_GPS_LBS_6) {
+        cidSize = 4;
+    } else {
+        cidSize = 3;
+    }
+
+    int totalRequiredBytes = mncSize + lacSize + cidSize;
+
+    if (buf.readableBytes() < totalRequiredBytes) {
+        return false;
+    }
+
+    int mnc;
+    if (mncSize == 2) {
         mnc = buf.readUnsignedShort();
     } else {
         mnc = buf.readUnsignedByte();
     }
+
     int lac;
-        if (type == MSG_LBS_ALARM) {
+    if (lacSize == 4) {
         lac = buf.readInt();
     } else {
         lac = buf.readUnsignedShort();
     }
+
     long cid;
-        if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
+    if (cidSize == 8) {
         cid = buf.readLong();
-        } else if (type == MSG_GPS_LBS_6) {
+    } else if (cidSize == 4) {
         cid = buf.readUnsignedInt();
     } else {
         cid = buf.readUnsignedMedium();
     }
 
     position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
-        if (length > 9) {
-            buf.skipBytes(length - 9);
+    int skip = length - (2 + mncSize + lacSize + cidSize);
+    if (skip > 0) {
+        buf.skipBytes(skip);
+    } else if (skip < 0) {
+        return false;
     }
 
     return true;
 }
\ No newline at end of file
