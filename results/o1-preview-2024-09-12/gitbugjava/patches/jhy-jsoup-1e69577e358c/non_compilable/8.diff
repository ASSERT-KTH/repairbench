diff --git a/tmp/61518377-928d-4f54-b124-95fdda343f23_buggy.java b/tmp/5acdd6a9-d7fd-4387-a6b4-9923ab6ee8a4_fixed.java
index c9c77a4..4f5fe5d 100644
--- a/tmp/61518377-928d-4f54-b124-95fdda343f23_buggy.java
+++ b/tmp/5acdd6a9-d7fd-4387-a6b4-9923ab6ee8a4_fixed.java
@@ -1,35 +1,41 @@
 URL build() {
     try {
         // use the URI class to encode non-ascii in path
+        String path = u.getFile();
+        int qPos = path.indexOf('?');
+        if (qPos >= 0) {
+            path = path.substring(0, qPos);
+        }
+
         URI uri = new URI(
             u.getProtocol(),
             u.getUserInfo(),
             IDN.toASCII(decodePart(u.getHost())), // puny-code
             u.getPort(),
-                decodePart(u.getPath()),
+            path,
             null, null // query and fragment appended later so as not to encode
         );
 
         String normUrl = uri.toASCIIString();
         if (q != null || u.getRef() != null) {
             StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
             if (q != null) {
                 sb.append('?');
                 appendToAscii(StringUtil.releaseBuilder(q), true, sb);
             }
             if (u.getRef() != null) {
                 sb.append('#');
                 appendToAscii(u.getRef(), false, sb);
             }
             normUrl = StringUtil.releaseBuilder(sb);
         }
         u =  new URL(normUrl);
         return u;
     } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
+        // we assert here so that any incomplete normalization issues can be caught in devel. but in practice,
         // the remote end will be able to handle it, so in prod we just pass the original URL.
         // The UnsupportedEncodingException would never happen as always UTF8
         assert Validate.assertFail(e.toString());
         return u;
     }
 }
\ No newline at end of file
