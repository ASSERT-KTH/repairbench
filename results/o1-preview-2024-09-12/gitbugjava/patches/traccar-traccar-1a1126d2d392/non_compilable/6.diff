diff --git a/tmp/b1e65142-5767-4dbc-a04e-f95da6143eb0_buggy.java b/tmp/03297ac7-3419-4727-821c-15e1d436772f_fixed.java
index 2a0dceb..4d0fad4 100644
--- a/tmp/b1e65142-5767-4dbc-a04e-f95da6143eb0_buggy.java
+++ b/tmp/03297ac7-3419-4727-821c-15e1d436772f_fixed.java
@@ -1,68 +1,87 @@
     private Position decode4(
             Channel channel, SocketAddress remoteAddress, String[] values) throws ParseException {
         int index = 0;
 
-        String type = values[index++].substring(5);
+        String id = values[index++];
+        String type;
 
-        if (!type.equals("STT") && !type.equals("ALT")) {
+        if (id.length() >= 3 && (id.endsWith("STT") || id.endsWith("ALT"))) {
+            type = id.substring(id.length() - 3);
+        } else {
             return null;
         }
 
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, values[index++]);
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
         position.set(Position.KEY_TYPE, type);
 
         position.set(Position.KEY_VERSION_FW, values[index++]);
         index += 1; // model
 
         Network network = new Network();
 
         for (int i = 0; i < 7; i++) {
+            if (index + 6 <= values.length) {
                 int cid = Integer.parseInt(values[index++]);
                 int mcc = Integer.parseInt(values[index++]);
                 int mnc = Integer.parseInt(values[index++]);
                 int lac, rssi;
                 if (i == 0) {
                     rssi = Integer.parseInt(values[index++]);
                     lac = Integer.parseInt(values[index++]);
                 } else {
                     lac = Integer.parseInt(values[index++]);
                     rssi = Integer.parseInt(values[index++]);
                 }
                 index += 1; // timing advance
                 if (cid > 0) {
                     network.addCellTower(CellTower.from(mcc, mnc, lac, cid, rssi));
                 }
+            } else {
+                break;
+            }
         }
 
         position.setNetwork(network);
 
         position.set(Position.KEY_BATTERY, Double.parseDouble(values[index++]));
         position.set(Position.KEY_ARCHIVE, values[index++].equals("0") ? true : null);
         position.set(Position.KEY_INDEX, Integer.parseInt(values[index++]));
         position.set(Position.KEY_STATUS, Integer.parseInt(values[index++]));
 
-        if (values[index].length() == 3) {
+        if (index < values.length && values[index].length() == 3) {
             index += 1; // collaborative network
         }
 
         DateFormat dateFormat = new SimpleDateFormat("yyyyMMddHH:mm:ss");
         dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
-        position.setTime(dateFormat.parse(values[index++] + values[index++]));
 
+        if (index + 1 < values.length) {
+            String dateStr = values[index++] + values[index++];
+            if (!dateStr.isEmpty()) {
+                position.setTime(dateFormat.parse(dateStr));
+            }
+        }
+
+        if (index + 4 <= values.length) {
             position.setLatitude(Double.parseDouble(values[index++]));
             position.setLongitude(Double.parseDouble(values[index++]));
             position.setSpeed(UnitsConverter.knotsFromKph(Double.parseDouble(values[index++])));
             position.setCourse(Double.parseDouble(values[index++]));
+        }
 
+        if (index < values.length) {
             position.set(Position.KEY_SATELLITES, Integer.parseInt(values[index++]));
+        }
 
+        if (index < values.length) {
             position.setValid(values[index++].equals("1"));
+        }
 
         return position;
     }
\ No newline at end of file
