diff --git a/tmp/fa72b3e9-89c6-4845-9e38-a2a30bedcafb_buggy.java b/tmp/4c4fd747-545b-45f4-bf79-729807250263_fixed.java
index 9e4d15c..05bdae9 100644
--- a/tmp/fa72b3e9-89c6-4845-9e38-a2a30bedcafb_buggy.java
+++ b/tmp/4c4fd747-545b-45f4-bf79-729807250263_fixed.java
@@ -1,137 +1,140 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         ByteBuf buf = (ByteBuf) msg;
 
         buf.skipBytes(2); // header
         int type = buf.readUnsignedByte();
         buf.readUnsignedShort(); // size
 
         if (type == MSG_LOGIN || type == MSG_ADMIN_NUMBER || type == MSG_SEND_TEXT
                 || type == MSG_SMS_ALARM_SWITCH || type == MSG_POSITION_REUPLOAD) {
 
             ByteBuf response = Unpooled.buffer();
             response.writeByte(0x29);
             response.writeByte(0x29); // header
             response.writeByte(MSG_CONFIRMATION);
             response.writeShort(5); // size
-            response.writeByte(buf.getByte(buf.writerIndex() - 2));
+            response.writeByte(buf.getByte(buf.readerIndex() - 1));
             response.writeByte(type);
-            response.writeByte(buf.writerIndex() > 9 ? buf.getByte(9) : 0); // 10th byte
+            response.writeByte(buf.readerIndex() > 8 ? buf.getByte(buf.readerIndex() + 7) : 0); // 10th byte
             response.writeByte(Checksum.xor(response.nioBuffer()));
             response.writeByte(0x0D); // ending
 
             if (channel != null) {
                 channel.writeAndFlush(new NetworkMessage(response, remoteAddress));
             }
 
         }
 
         if (type == MSG_ON_DEMAND || type == MSG_POSITION_UPLOAD || type == MSG_POSITION_REUPLOAD
-                || type == MSG_ALARM || type == MSG_REPLY || type == MSG_PERIPHERAL) {
+                || type == MSG_ALARM || type == MSG_REPLY || type == MSG_PERIPHERAL
+                || type == MSG_TEMPERATURE || type == MSG_BATTERY) {
 
             Position position = new Position(getProtocolName());
 
             DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, readIdentifiers(buf));
             if (deviceSession == null) {
                 return null;
             }
             position.setDeviceId(deviceSession.getDeviceId());
 
             DateBuilder dateBuilder = new DateBuilder()
                     .setYear(BcdUtil.readInteger(buf, 2))
                     .setMonth(BcdUtil.readInteger(buf, 2))
                     .setDay(BcdUtil.readInteger(buf, 2))
                     .setHour(BcdUtil.readInteger(buf, 2))
                     .setMinute(BcdUtil.readInteger(buf, 2))
                     .setSecond(BcdUtil.readInteger(buf, 2));
             position.setTime(dateBuilder.getDate());
 
             position.setLatitude(BcdUtil.readCoordinate(buf));
             position.setLongitude(BcdUtil.readCoordinate(buf));
             position.setSpeed(UnitsConverter.knotsFromKph(BcdUtil.readInteger(buf, 4)));
             position.setCourse(BcdUtil.readInteger(buf, 4));
             position.setValid((buf.readUnsignedByte() & 0x80) != 0);
 
-            if (type != MSG_ALARM) {
+            if (type != MSG_ALARM && type != MSG_BATTERY) {
 
                 int odometer = buf.readUnsignedMedium();
                 if (BitUtil.to(odometer, 16) > 0) {
                     position.set(Position.KEY_ODOMETER, odometer);
                 } else if (odometer > 0) {
                     position.set(Position.KEY_FUEL_LEVEL, BitUtil.from(odometer, 16));
                 }
 
                 position.set(Position.KEY_STATUS, buf.readUnsignedInt());
 
                 buf.readUnsignedShort();
                 buf.readUnsignedByte();
                 buf.readUnsignedByte();
                 buf.readUnsignedByte();
                 buf.readUnsignedByte();
                 buf.readUnsignedByte();
 
                 position.set(Position.KEY_RESULT, String.valueOf(buf.readUnsignedByte()));
 
                 if (type == MSG_PERIPHERAL) {
 
                     buf.readUnsignedShort(); // data length
 
                     int dataType = buf.readUnsignedByte();
 
                     buf.readUnsignedByte(); // content length
 
                     switch (dataType) {
                         case 0x01:
                             position.set(Position.KEY_FUEL_LEVEL,
                                     buf.readUnsignedByte() * 100 + buf.readUnsignedByte());
                             break;
                         case 0x02:
                             position.set(Position.PREFIX_TEMP + 1,
                                     buf.readUnsignedByte() * 100 + buf.readUnsignedByte());
                             break;
                         case 0x18:
                             for (int i = 1; i <= 4; i++) {
                                 double value = buf.readUnsignedShort();
                                 if (value > 0x0000 && value < 0xFFFF) {
                                     position.set("fuel" + i, value / 0xFFFE);
                                 }
                             }
                             break;
                         case 0x23:
                             Network network = new Network();
                             int count = buf.readUnsignedByte();
                             for (int i = 0; i < count; i++) {
                                 network.addCellTower(CellTower.from(
                                         buf.readUnsignedShort(), buf.readUnsignedByte(),
                                         buf.readUnsignedShort(), buf.readUnsignedShort(), buf.readUnsignedByte()));
                             }
                             if (count > 0) {
                                 position.setNetwork(network);
                             }
                             break;
                         default:
                             break;
                     }
 
                 }
 
-            }  else {
+            }  else if (type == MSG_ALARM){
 
                 buf.readUnsignedByte(); // overloaded state
                 buf.readUnsignedByte(); // logging status
 
                 byte[] alarmStatus = new byte[8];
                 buf.readBytes(alarmStatus);
 
                 decodeAlarmStatus(position, alarmStatus);
 
+            } else if (type == MSG_BATTERY) {
+                 position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());
             }
 
             return position;
 
         }
 
         return null;
     }
\ No newline at end of file
