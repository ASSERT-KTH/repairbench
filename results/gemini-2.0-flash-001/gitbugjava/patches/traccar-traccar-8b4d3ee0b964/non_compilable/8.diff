diff --git a/tmp/fa52390a-597b-413f-bfb2-8114e2300cbb_buggy.java b/tmp/dc4ea916-11b9-43da-9ca8-86232fbd5ebf_fixed.java
index 27f2719..bc949e0 100644
--- a/tmp/fa52390a-597b-413f-bfb2-8114e2300cbb_buggy.java
+++ b/tmp/dc4ea916-11b9-43da-9ca8-86232fbd5ebf_fixed.java
@@ -1,90 +1,97 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         String sentence = (String) msg;
 
         if (sentence.startsWith("!1,")) {
             int index = sentence.indexOf(',', 3);
             if (index < 0) {
                 index = sentence.length();
             }
-            getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
+            String deviceId = sentence.substring(3, index);
+            if (!deviceId.isEmpty()) {
+                getDeviceSession(channel, remoteAddress, deviceId);
+            }
             return null;
         }
 
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
         if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         String type = sentence.substring(1, 2);
         position.set(Position.KEY_TYPE, type);
 
         if (type.equals("3")) {
 
             getLastLocation(position, null);
 
             position.set(Position.KEY_RESULT, sentence.substring(3));
 
             return position;
 
         } else if (type.equals("5")) {
 
             String[] values = sentence.split(",");
 
             getLastLocation(position, null);
 
+            try {
                 position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
                 if (values.length >= 4) {
                     position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
                 }
+            } catch (NumberFormatException e) {
+                return null;
+            }
 
             return position;
 
         } else if (type.equals("B") || type.equals("D")) {
 
             Parser parser = new Parser(PATTERN_BD, sentence);
             if (!parser.matches()) {
                 return null;
             }
 
             decodeFix(position, parser);
             decodeState(position, parser);
 
             position.set(Position.KEY_SATELLITES, parser.nextInt(0));
             position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
             position.set(Position.KEY_HDOP, parser.nextDouble(0));
 
             return position;
 
         } else if (type.equals("C")) {
 
             Parser parser = new Parser(PATTERN_C, sentence);
             if (!parser.matches()) {
                 return null;
             }
 
             decodeFix(position, parser);
             decodeState(position, parser);
 
             return position;
 
         } else if (type.equals("A")) {
 
             Parser parser = new Parser(PATTERN_A, sentence);
             if (!parser.matches()) {
                 return null;
             }
 
             decodeFix(position, parser);
 
             return position;
 
         }
 
         return null;
     }
\ No newline at end of file
