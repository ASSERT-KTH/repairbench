diff --git a/tmp/8a1bb47a-4725-4291-90bc-36f0bcca04e8_buggy.java b/tmp/81bd6295-ec2e-4c56-ba38-a09af48137f4_fixed.java
index eb0a5c8..23be405 100644
--- a/tmp/8a1bb47a-4725-4291-90bc-36f0bcca04e8_buggy.java
+++ b/tmp/81bd6295-ec2e-4c56-ba38-a09af48137f4_fixed.java
@@ -1,27 +1,36 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
     if (!ariCommand.extractCommandType().isCreationCommand()) {
       return Try.success(Done.done());
     }
 
     final Option<AriResource> maybeResource =
         ariCommand
             .extractResourceRelations()
             .find(AriResourceRelation::isCreated)
             .map(AriResourceRelation::getResource);
 
     if (maybeResource.isEmpty()) {
+      // attempting to extract the resource id from the path
+      final String path = ariCommand.getPath();
+      final String[] pathSegments = path.split("/");
+      if (pathSegments.length > 0) {
+        final String resourceId = pathSegments[pathSegments.length - 1];
+        callContextProvider.tell(new RegisterCallContext(resourceId, callContext));
+        return Try.success(Done.done());
+      }
+
       return Try.failure(
           new RuntimeException(
               String.format(
                   "Failed to extract resourceId from command '%s'", ariCommand.toString())));
     }
 
     final AriResource resource = maybeResource.get();
 
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
     return Try.success(Done.done());
   }
\ No newline at end of file
