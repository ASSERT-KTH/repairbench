diff --git a/tmp/c7b41bb0-b179-4adc-902e-500ada54bc37_buggy.java b/tmp/62981d68-8d9e-4c02-bd67-b72306cae78c_fixed.java
index 939f49b..84cd301 100644
--- a/tmp/c7b41bb0-b179-4adc-902e-500ada54bc37_buggy.java
+++ b/tmp/62981d68-8d9e-4c02-bd67-b72306cae78c_fixed.java
@@ -1,21 +1,19 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+          && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        // check that a prototype property is assigned.
+        Node firstChild = n.getFirstChild();
+        if (firstChild != null && firstChild.getType() == Token.GETPROP) {
+          Node maybePrototype = firstChild.getLastChild();
+          if (maybePrototype != null &&
+              maybePrototype.getType() == Token.STRING &&
+              maybePrototype.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
