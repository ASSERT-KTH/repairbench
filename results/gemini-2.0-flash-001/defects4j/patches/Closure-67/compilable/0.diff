diff --git a/tmp/eda932a6-5182-42d9-b139-9c08f1a01bbc_buggy.java b/tmp/f79bcd8f-7c66-4220-b116-6167446dfc48_fixed.java
index 939f49b..f0e45e5 100644
--- a/tmp/eda932a6-5182-42d9-b139-9c08f1a01bbc_buggy.java
+++ b/tmp/f79bcd8f-7c66-4220-b116-6167446dfc48_fixed.java
@@ -1,21 +1,17 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+          && n.getType() == Token.GETPROP) {
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        Node firstChild = n.getFirstChild();
+        if (firstChild != null && firstChild.getType() == Token.GETPROP) {
+          Node secondChild = firstChild.getFirstChild();
+          if (secondChild != null && secondChild.getNext() != null &&
+              secondChild.getNext().getType() == Token.STRING &&
+              secondChild.getNext().getString().equals("prototype")) {
             return true;
           }
         }
       }
-
       return false;
     }
\ No newline at end of file
