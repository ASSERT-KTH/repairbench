diff --git a/tmp/8140484b-1c59-40bb-93ae-f8837ca2fe59_buggy.java b/tmp/66175c41-741b-47e3-8ecf-d3aea112d5e8_fixed.java
index 42b58d0..c456165 100644
--- a/tmp/8140484b-1c59-40bb-93ae-f8837ca2fe59_buggy.java
+++ b/tmp/66175c41-741b-47e3-8ecf-d3aea112d5e8_fixed.java
@@ -1,19 +1,32 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Type rawType = parameterizedType.getRawType();
+
+        if (!(rawType instanceof Class<?>)) {
+            return;
+        }
+
+        TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
+        // It's possible that the number of type parameters and actual type arguments differ.
+        // This can happen e.g. with raw types. In that case, we skip the registration.
+        if (typeParameters.length != actualTypeArguments.length) {
+            return;
+        }
+
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
