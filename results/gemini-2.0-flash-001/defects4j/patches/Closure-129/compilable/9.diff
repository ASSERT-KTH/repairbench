diff --git a/tmp/9c3a3283-73c5-4d6c-8cc9-427b4a32a7c2_buggy.java b/tmp/7f90aa44-2fd0-4af3-99ef-7c565cb65207_fixed.java
index e8705ac..c99c173 100644
--- a/tmp/9c3a3283-73c5-4d6c-8cc9-427b4a32a7c2_buggy.java
+++ b/tmp/7f90aa44-2fd0-4af3-99ef-7c565cb65207_fixed.java
@@ -1,24 +1,22 @@
     /**
      * There are two types of calls we are interested in calls without explicit
      * "this" values (what we are call "free" calls) and direct call to eval.
      */
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
 
       // Keep track of of the "this" context of a call.  A call without an
       // explicit "this" is a free call.
       Node first = n.getFirstChild();
 
       // ignore cast nodes.
 
-      if (!NodeUtil.isGet(first)) {
-        n.putBooleanProp(Node.FREE_CALL, true);
-      }
-
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+      if (first.isName()) {
+        if ("eval".equals(first.getString())) {
           first.putBooleanProp(Node.DIRECT_EVAL, true);
         }
+        n.putBooleanProp(Node.FREE_CALL, true);
+      } else if (!NodeUtil.isGet(first)) {
+        n.putBooleanProp(Node.FREE_CALL, true);
+      }
     }
\ No newline at end of file
