diff --git a/tmp/dc645cfe-fe62-417f-a5b1-702686f8c279_buggy.java b/tmp/9d6c0e72-9b0a-489c-95b5-3828146bbdd6_fixed.java
index 4b163f6..d881c86 100644
--- a/tmp/dc645cfe-fe62-417f-a5b1-702686f8c279_buggy.java
+++ b/tmp/9d6c0e72-9b0a-489c-95b5-3828146bbdd6_fixed.java
@@ -1,28 +1,33 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+        long skippedTotal = 0;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
+                // fall back to single byte reads
+                if (input.read() == -1) {
                     break;
+                } else {
+                    skipped = 1;
+                }
             }
             numToSkip -= skipped;
+            skippedTotal += skipped;
         }
-            
-        return available - numToSkip;
+        return skippedTotal;
     }
\ No newline at end of file
