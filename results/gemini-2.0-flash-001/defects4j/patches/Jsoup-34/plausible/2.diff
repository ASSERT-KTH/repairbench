diff --git a/tmp/0f70f647-af25-48f3-8efd-e27a5838b642_buggy.java b/tmp/252b5641-eaa6-4d71-b873-c23e92770d00_fixed.java
index 21f64c6..843712e 100644
--- a/tmp/0f70f647-af25-48f3-8efd-e27a5838b642_buggy.java
+++ b/tmp/252b5641-eaa6-4d71-b873-c23e92770d00_fixed.java
@@ -1,23 +1,38 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
+        int seqLen = seq.length();
+        for (int offset = pos; offset <= length - seqLen; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            if (startChar != input[offset]) {
+                boolean found = false;
+                while(++offset <= length - seqLen) {
+                    if (startChar == input[offset]) {
+                        found = true;
+                        break;
+                    }
+                }
+                if (!found)
+                    return -1;
+            }
+
             int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            int last = i + seqLen - 1;
+            if (offset <= length - seqLen) {
+                int j = 1;
+                while (i < length && j < seqLen && seq.charAt(j) == input[i]) {
+                    i++;
+                    j++;
+                }
+                if (j == seqLen) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
