diff --git a/tmp/156ea12d-48ee-4410-97c1-67c3cde56476_buggy.java b/tmp/94f43d2b-459c-432d-8fc2-4e9d749b64ee_fixed.java
index 9ac2149..2719d18 100644
--- a/tmp/156ea12d-48ee-4410-97c1-67c3cde56476_buggy.java
+++ b/tmp/94f43d2b-459c-432d-8fc2-4e9d749b64ee_fixed.java
@@ -1,40 +1,43 @@
     /**
      * Verify the given ongoing verification data, and confirm that it satisfies the delegate verification mode
      * before the full duration has passed.
      *
      * In practice, this polls the delegate verification mode until it is satisfied. If it is not satisfied once
      * the full duration has passed, the last error returned by the delegate verification mode will be thrown
      * here in turn. This may be thrown early if the delegate is unsatisfied and the verification mode is known
      * to never recover from this situation (e.g. {@link AtMost}).
      *
      * If it is satisfied before the full duration has passed, behaviour is dependent on the returnOnSuccess parameter
      * given in the constructor. If true, this verification mode is immediately satisfied once the delegate is. If
      * false, this verification mode is not satisfied until the delegate is satisfied and the full time has passed.
      *
      * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout
      */
     public void verify(VerificationData data) {
         AssertionError error = null;
 
         timer.start();
         while (timer.isCounting()) {
             try {
                 delegate.verify(data);
 
                 if (returnOnSuccess) {
                     return;
                 } else {
-                    error = null;
+                    // If verification succeeded, we still need to wait for the full duration
+                    // before considering this verification as complete. This ensures that
+                    // the delegate verification mode is stable and doesn't fluctuate.
+                    // We don't clear the error, in case an error occurs after a success.
                 }
-            } catch (MockitoAssertionError e) {
+            } catch (AssertionError e) {
                 error = handleVerifyException(e);
             }
             catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {
                 error = handleVerifyException(e);
             }
         }
 
         if (error != null) {
             throw error;
         }
     }
\ No newline at end of file
