diff --git a/tmp/8a5b4501-0d62-4794-b892-3a918511c237_buggy.java b/tmp/88d465e7-185b-43e0-9548-12d2d9b0e9d3_fixed.java
index e69de29..d35b598 100644
--- a/tmp/8a5b4501-0d62-4794-b892-3a918511c237_buggy.java
+++ b/tmp/88d465e7-185b-43e0-9548-12d2d9b0e9d3_fixed.java
@@ -0,0 +1,74 @@
+import java.util.Collection;
+import java.util.Map;
+
+import org.apache.commons.collections4.MultiValuedMap;
+
+public class MultiValueMap<K, V> extends AbstractMultiValuedMap<K, V> {
+
+    /**
+     * Creates a new MultiValueMap that uses an ArrayList to store the
+     * multiple values for each key.
+     */
+    public MultiValueMap() {
+        super();
+    }
+
+    /**
+     * Creates a new MultiValueMap that uses an ArrayList to store the
+     * multiple values for each key.
+     *
+     * @param map the Map whose values are to be added
+     */
+    public MultiValueMap(final Map<? extends K, ? extends V> map) {
+        super(map);
+    }
+
+    /**
+     * Creates a new MultiValueMap which copies the given map.
+     *
+     * @param map  the Map whose values are to be added
+     * @param collectionClass  the collection class to use for each value
+     * @throws IllegalArgumentException if collectionClass is null
+     * @throws IllegalArgumentException if collectionClass is not a Collection
+     * @throws IllegalArgumentException if collectionClass cannot be instantiated
+     */
+    public MultiValueMap(final Map<? extends K, ? extends V> map, final Class<? extends Collection<V>> collectionClass) {
+        super(map, collectionClass);
+    }
+
+    /**
+     * Creates a new MultiValueMap that uses an ArrayList to store the
+     * multiple values for each key.
+     * <p>
+     * NOTE: From v4.1 this constructor will be removed as the class
+     * cannot implement {@link MultiValuedMap} due to the interface using generics.
+     * Please use one of the other constructors.
+     *
+     * @param collectionClass  the collection class to use for each value
+     * @deprecated since 4.0, to be removed in 4.1
+     */
+    @Deprecated
+    public MultiValueMap(final Class<? extends Collection<V>> collectionClass) {
+        super(collectionClass);
+    }
+
+    /**
+     * Creates a new MultiValueMap using the supplied Map to store the keys and values.
+     * <p>
+     * NOTE: From v4.1 this method will be removed as the class
+     * cannot implement {@link MultiValuedMap} due to the interface using generics.
+     * Please use one of the other constructors.
+     *
+     * @param map  the Map whose values are to be added
+     * @param collectionClass  the collection class to use for each value
+     * @return a new MultiValueMap using the supplied Map
+     * @deprecated since 4.0, to be removed in 4.1
+     */
+    @Deprecated
+    public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<? extends K, ? extends V> map, final Class<? extends Collection<V>> collectionClass) {
+        final MultiValueMap<K, V> mvp = new MultiValueMap<>(collectionClass);
+        mvp.putAll(map);
+        return mvp;
+    }
+
+}
\ No newline at end of file
