diff --git a/tmp/cc078981-8c0c-4646-a8bd-727039fd13dc_buggy.java b/tmp/fe0a9a78-0302-47f5-bb65-f8b490a97595_fixed.java
index e0ecec8..03fdba8 100644
--- a/tmp/cc078981-8c0c-4646-a8bd-727039fd13dc_buggy.java
+++ b/tmp/fe0a9a78-0302-47f5-bb65-f8b490a97595_fixed.java
@@ -1,35 +1,43 @@
   /**
    * Visits the parameters of a CALL or a NEW node.
    */
   private void visitParameterList(NodeTraversal t, Node call,
       FunctionType functionType) {
     Iterator<Node> arguments = call.children().iterator();
     arguments.next(); // skip the function name
 
     Iterator<Node> parameters = functionType.getParameters().iterator();
     int ordinal = 0;
     Node parameter = null;
     Node argument = null;
     while (arguments.hasNext() &&
            parameters.hasNext()) {
       // If there are no parameters left in the list, then the while loop
       // above implies that this must be a var_args function.
       parameter = parameters.next();
       argument = arguments.next();
       ordinal++;
 
       validator.expectArgumentMatchesParameter(t, argument,
           getJSType(argument), getJSType(parameter), call, ordinal);
     }
 
     int numArgs = call.getChildCount() - 1;
     int minArgs = functionType.getMinArguments();
     int maxArgs = functionType.getMaxArguments();
-    if (minArgs > numArgs || maxArgs < numArgs) {
+    if (functionType.isVarArgs()) {
+        if (numArgs < minArgs) {
+          report(t, call, WRONG_ARGUMENT_COUNT,
+                  validator.getReadableJSTypeName(call.getFirstChild(), false),
+                  String.valueOf(numArgs), String.valueOf(minArgs),
+                  maxArgs != Integer.MAX_VALUE ?
+                  " and no more than " + maxArgs + " argument(s)" : "");
+        }
+    } else if (minArgs > numArgs || maxArgs < numArgs) {
       report(t, call, WRONG_ARGUMENT_COUNT,
               validator.getReadableJSTypeName(call.getFirstChild(), false),
               String.valueOf(numArgs), String.valueOf(minArgs),
               maxArgs != Integer.MAX_VALUE ?
               " and no more than " + maxArgs + " argument(s)" : "");
     }
   }
\ No newline at end of file
