diff --git a/tmp/e1a83431-ba2c-461d-9252-577003212bb6_buggy.java b/tmp/4ea913f0-d692-45e6-9df7-28173386ef12_fixed.java
index e4d90e7..463abcc 100644
--- a/tmp/e1a83431-ba2c-461d-9252-577003212bb6_buggy.java
+++ b/tmp/4ea913f0-d692-45e6-9df7-28173386ef12_fixed.java
@@ -1,45 +1,79 @@
   @Override
   String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
       return getReferenceName();
     } else if (prettyPrint) {
       // Don't pretty print recursively.
       prettyPrint = false;
 
       // Use a tree set so that the properties are sorted.
       Set<String> propertyNames = Sets.newTreeSet();
       for (ObjectType current = this;
            current != null && !current.isNativeObjectType() &&
                propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
            current = current.getImplicitPrototype()) {
         propertyNames.addAll(current.getOwnPropertyNames());
       }
 
       StringBuilder sb = new StringBuilder();
       sb.append("{");
 
       int i = 0;
+      boolean exceededMax = false;
       for (String property : propertyNames) {
         if (i > 0) {
           sb.append(", ");
         }
 
         sb.append(property);
         sb.append(": ");
+        if (forAnnotations) {
+          sb.append(getPropertyType(property).toAnnotationString());
+        } else {
           sb.append(getPropertyType(property).toString());
+        }
+
 
         ++i;
         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
           sb.append(", ...");
+          exceededMax = true;
           break;
         }
       }
 
       sb.append("}");
 
       prettyPrint = true;
+      if (exceededMax && forAnnotations) {
+        int end = sb.lastIndexOf(", ...");
+        sb.delete(end, sb.length());
+
+        i = 0;
+        sb = new StringBuilder();
+        sb.append("{");
+        for (String property : propertyNames) {
+          if (i > 0) {
+            sb.append(", ");
+          }
+
+          sb.append(property);
+          sb.append(": ");
+          sb.append(getPropertyType(property).toAnnotationString());
+
+
+          ++i;
+          if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+            break;
+          }
+        }
+
+        sb.append("}");
+        return sb.toString();
+
+      }
       return sb.toString();
     } else {
       return "{...}";
     }
   }
\ No newline at end of file
