diff --git a/tmp/03932564-66ff-4137-883a-c8aa67ec658d_buggy.java b/tmp/30059402-2e0d-4af0-b23d-a284a71ff611_fixed.java
index d6a560a..b816cee 100644
--- a/tmp/03932564-66ff-4137-883a-c8aa67ec658d_buggy.java
+++ b/tmp/30059402-2e0d-4af0-b23d-a284a71ff611_fixed.java
@@ -1,33 +1,28 @@
   /**
    * Resolve the referenced type within the enclosing scope.
    */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
     // TODO(user): Investigate whether it is really necessary to keep two
     // different mechanisms for resolving named types, and if so, which order
     // makes more sense. Now, resolution via registry is first in order to
     // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
 
-    if (resolved) {
-      super.resolveInternal(t, enclosing);
-      finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
-    }
-
+    if (!resolved) {
       resolveViaProperties(t, enclosing);
       if (detectImplicitPrototypeCycle()) {
         handleTypeCycle(t);
       }
+    }
 
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
\ No newline at end of file
