diff --git a/tmp/df0b37b6-a788-4d5d-bb5b-89baafb052ab_buggy.java b/tmp/a0cf0c8a-d511-42cc-86f1-31606238706b_fixed.java
index 1a63a66..d8cbf11 100644
--- a/tmp/df0b37b6-a788-4d5d-bb5b-89baafb052ab_buggy.java
+++ b/tmp/a0cf0c8a-d511-42cc-86f1-31606238706b_fixed.java
@@ -1,21 +1,31 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
         // TODO: fix in 2.8
             /*
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
                     */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+        
+        // Need to ensure bindings are retained, as they may be needed for
+        // narrowing (see [databind#1125])
+        JavaType subtype = new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
+        
+        // As per [databind#2124], we must also propagate any external type definition
+        if (_typeDefinition != null) {
+            subtype = subtype.withTypeHandler(_typeDefinition);
+        }
+        
+        return subtype;
         // Otherwise, stitch together the hierarchy. First, super-class
         // if not found, try a super-interface
         // should not get here but...
     }
\ No newline at end of file
