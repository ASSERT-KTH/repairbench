diff --git a/tmp/3743ab51-64c6-4a5e-95d0-22f28373d4e5_buggy.java b/tmp/4a2a32f0-52bd-4d78-9e6a-7445a68a5c8f_fixed.java
index cae5e03..40878a6 100644
--- a/tmp/3743ab51-64c6-4a5e-95d0-22f28373d4e5_buggy.java
+++ b/tmp/4a2a32f0-52bd-4d78-9e6a-7445a68a5c8f_fixed.java
@@ -1,33 +1,37 @@
     /*
      * (non-Javadoc)
      * 
      * @see java.io.InputStream#read(byte[], int, int)
      */
     @Override
     public int read(final byte[] dest, final int offs, final int len)
         throws IOException {
         if (offs < 0) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
         }
         if (len < 0) {
             throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
         }
         if (offs + len > dest.length) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                                 + len + ") > dest.length(" + dest.length + ").");
         }
         if (this.in == null) {
             throw new IOException("stream closed");
         }
 
+        if (len == 0) {
+            return 0;
+        }
+
         final int hi = offs + len;
         int destOffs = offs;
         int b;
         while (destOffs < hi && ((b = read0()) >= 0)) {
             dest[destOffs++] = (byte) b;
             count(1);
         }
 
         int c = (destOffs == offs) ? -1 : (destOffs - offs);
         return c;
     }
\ No newline at end of file
