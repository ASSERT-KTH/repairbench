diff --git a/tmp/c620e8dc-c349-4a2d-8f5b-6f2a7b4be430_buggy.java b/tmp/6eee8ea1-241f-48e5-a0c5-4685800a81df_fixed.java
index be2af16..d0d5261 100644
--- a/tmp/c620e8dc-c349-4a2d-8f5b-6f2a7b4be430_buggy.java
+++ b/tmp/6eee8ea1-241f-48e5-a0c5-4685800a81df_fixed.java
@@ -1,29 +1,45 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant < iCutoverMillis) {
                 // Maybe it's Julian.
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                 if (instant >= iCutoverMillis) {
                     // Okay, it's in the illegal cutover gap.
                     throw new IllegalArgumentException("Specified date does not exist");
                 }
             }
+        } catch (IllegalArgumentException e) {
+            instant = iJulianChronology.getDateTimeMillis
+                    (year, monthOfYear, dayOfMonth,
+                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant < iCutoverMillis) {
+                return instant;
+            }
+             instant = iGregorianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+                if (instant >= iCutoverMillis){
+                   throw new IllegalArgumentException("Specified date does not exist");
+                }
+            
+        }
         return instant;
     }
\ No newline at end of file
