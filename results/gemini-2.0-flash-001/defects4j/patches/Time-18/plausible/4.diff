diff --git a/tmp/3f9cf8ad-4c0e-416c-b07b-7a9a83ab3d65_buggy.java b/tmp/5ec99de3-0f7b-47b0-8d89-56b7fe0eff6e_fixed.java
index be2af16..4299644 100644
--- a/tmp/3f9cf8ad-4c0e-416c-b07b-7a9a83ab3d65_buggy.java
+++ b/tmp/5ec99de3-0f7b-47b0-8d89-56b7fe0eff6e_fixed.java
@@ -1,29 +1,40 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        } catch (IllegalArgumentException e) {
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+            return instant;
+        }
+        if (instant < iCutoverMillis) {
+            // Maybe it's Julian.
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (julianInstant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            return julianInstant;
         }
         return instant;
     }
\ No newline at end of file
