diff --git a/tmp/398c09cf-5656-4819-a0bf-a1cde561b475_buggy.java b/tmp/eb102af3-32f5-47ef-9c55-5cd9bc78e776_fixed.java
index fecb896..c14dc15 100644
--- a/tmp/398c09cf-5656-4819-a0bf-a1cde561b475_buggy.java
+++ b/tmp/eb102af3-32f5-47ef-9c55-5cd9bc78e776_fixed.java
@@ -1,34 +1,35 @@
     /**
      * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
      * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
      * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
      * contains text strings; use unescape for that.
      * @param open opener
      * @param close closer
      * @return data matched from the queue
      */
     public String chompBalanced(char open, char close) {
         int start = -1;
         int end = -1;
         int depth = 0;
         char last = 0;
 
         do {
             if (isEmpty()) break;
             Character c = consume();
-            if (last == 0 || last != ESC) {
+            if (last != ESC) {
                 if (c.equals(open)) {
+                    if (depth == 0)
+                        start = pos -1;
                     depth++;
-                    if (start == -1)
-                        start = pos;
+
                 }
                 else if (c.equals(close))
                     depth--;
             }
 
-            if (depth > 0 && last != 0)
+            if (depth > 0)
                 end = pos; // don't include the outer match pair in the return
             last = c;
         } while (depth > 0);
-        return (end >= 0) ? queue.substring(start, end) : "";
+        return (end >= 0 && start >= 0) ? queue.substring(start, end) : "";
     }
\ No newline at end of file
