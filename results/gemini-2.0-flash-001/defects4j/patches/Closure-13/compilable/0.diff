diff --git a/tmp/bc3e3e82-af21-4186-b1c3-fbca3485ec5d_buggy.java b/tmp/bc77e941-06dc-4095-a949-7f4c3c453975_fixed.java
index b5d94e0..de1cf19 100644
--- a/tmp/bc3e3e82-af21-4186-b1c3-fbca3485ec5d_buggy.java
+++ b/tmp/bc77e941-06dc-4095-a949-7f4c3c453975_fixed.java
@@ -1,26 +1,31 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
-      Node c = node.getFirstChild();
-      while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
-        c = next;
-      }
-
       visit(node);
       visits++;
 
       Preconditions.checkState(visits < 10000, "too many interations");
+
+      if (shouldRetraverse(node)) {
+        // Retraverse the children.  Otherwise, we're done with
+        // this node.
+        Node c = node.getFirstChild();
+        while(c != null) {
+          traverse(c);
+          c = c.getNext();
+        }
+      } else {
+          break;
+      }
     } while (shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
