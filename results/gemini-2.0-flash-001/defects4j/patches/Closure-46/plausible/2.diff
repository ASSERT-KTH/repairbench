diff --git a/tmp/06799317-a897-48cb-9279-ac8a78200b91_buggy.java b/tmp/9f3d0e96-fc42-4b05-a72c-510cff066369_fixed.java
index 46817a7..27856f4 100644
--- a/tmp/06799317-a897-48cb-9279-ac8a78200b91_buggy.java
+++ b/tmp/9f3d0e96-fc42-4b05-a72c-510cff066369_fixed.java
@@ -1,16 +1,30 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+
+    // Find the properties that are in both types.
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+      if (that.toMaybeRecordType().hasProperty(property)) {
+        JSType thisPropertyType = getPropertyType(property);
+        JSType thatPropertyType =
+            that.toMaybeRecordType().getPropertyType(property);
+        if (thisPropertyType.isEquivalentTo(thatPropertyType)) {
+          builder.addProperty(
+              property, thisPropertyType, getPropertyNode(property));
+        } else {
+          return registry.createUnionType(this, that);
         }
       }
+    }
+
+    for (String property : that.toMaybeRecordType().getPropertyNames()) {
+      if (!hasProperty(property)) {
+        return registry.createUnionType(this, that);
+      }
+    }
+
     return builder.build();
   }
\ No newline at end of file
