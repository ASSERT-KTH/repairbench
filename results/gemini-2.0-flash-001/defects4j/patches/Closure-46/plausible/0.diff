diff --git a/tmp/50f4c9cb-e0cb-45db-bf62-059d1beb02f9_buggy.java b/tmp/c7a72a3f-8ec3-4f26-888b-5efd1860303b_fixed.java
index 46817a7..7941fb1 100644
--- a/tmp/50f4c9cb-e0cb-45db-bf62-059d1beb02f9_buggy.java
+++ b/tmp/c7a72a3f-8ec3-4f26-888b-5efd1860303b_fixed.java
@@ -1,16 +1,31 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+
+    // Find properties that are in both record types.
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+      if (that.toMaybeRecordType().hasProperty(property)) {
+        JSType thisPropertyType = getPropertyType(property);
+        JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+        if (thisPropertyType.isEquivalentTo(thatPropertyType)) {
+          builder.addProperty(
+              property,
+              thisPropertyType,
               getPropertyNode(property));
+        } else {
+          return registry.createUnionType(this, that);
         }
       }
+    }
+
+    for (String property : that.toMaybeRecordType().getOwnPropertyNames()) {
+        if (!hasProperty(property)) {
+            return registry.createUnionType(this, that);
+        }
+    }
+
     return builder.build();
   }
\ No newline at end of file
