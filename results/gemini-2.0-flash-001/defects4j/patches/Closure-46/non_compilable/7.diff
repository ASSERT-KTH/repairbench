diff --git a/tmp/a0c37c3c-d94f-43ef-9128-9ddf504c55cd_buggy.java b/tmp/5d84d8a6-98f1-42eb-b32a-d372df1af4d2_fixed.java
index 46817a7..241a1f1 100644
--- a/tmp/a0c37c3c-d94f-43ef-9128-9ddf504c55cd_buggy.java
+++ b/tmp/5d84d8a6-98f1-42eb-b32a-d372df1af4d2_fixed.java
@@ -1,16 +1,29 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+      if (that.toMaybeRecordType().hasProperty(property)) {
+        JSType thisPropertyType = getPropertyType(property);
+        JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+        if (thisPropertyType.isEquivalentTo(thatPropertyType)) {
+          builder.addProperty(property, thisPropertyType,
               getPropertyNode(property));
         }
       }
-    return builder.build();
+    }
+
+    for (String property : that.toMaybeRecordType().getProperties()) {
+        if (this.toMaybeRecordType() != null &&
+            this.toMaybeRecordType().hasProperty(property)) {
+          continue;
+        }
+        builder.addProperty(
+            property, that.toMaybeRecordType().getPropertyType(property), null);
+      }
+
+    JSType result = builder.build();
+    return result.isEmptyType() ? registry.getNativeObjectType(OBJECT_TYPE) : result;
   }
\ No newline at end of file
