diff --git a/tmp/8e4694d1-f0e2-4e22-a5e3-fba9376c1d7a_buggy.java b/tmp/2d7a6012-73f2-468f-b915-9345d0a04030_fixed.java
index b36b2a9..56f504f 100644
--- a/tmp/8e4694d1-f0e2-4e22-a5e3-fba9376c1d7a_buggy.java
+++ b/tmp/2d7a6012-73f2-468f-b915-9345d0a04030_fixed.java
@@ -1,26 +1,31 @@
   JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
-      if (alternate.isSubtype(that)) {
-        builder.addAlternate(alternate);
+      JSType meet = alternate.meet(that);
+      if (meet != null && !meet.isNoType()) {
+        builder.addAlternate(meet);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
-        if (otherAlternate.isSubtype(this)) {
-          builder.addAlternate(otherAlternate);
+        JSType meet = otherAlternate.meet(this);
+        if (meet != null && !meet.isNoType()) {
+          builder.addAlternate(meet);
         }
       }
-    } else if (that.isSubtype(this)) {
-      builder.addAlternate(that);
+    } else {
+      JSType meet = that.meet(this);
+      if (meet != null && !meet.isNoType()) {
+        builder.addAlternate(meet);
+      }
     }
     JSType result = builder.build();
     if (result != null) {
       return result;
     } else if (this.isObject() && that.isObject()) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
       return getNativeType(JSTypeNative.NO_TYPE);
     }
   }
\ No newline at end of file
