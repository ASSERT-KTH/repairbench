diff --git a/tmp/1aa71f91-5a94-4ace-b32b-37bc095e687b_buggy.java b/tmp/21e7d5c1-22dd-4f99-b1e5-42fc49fe7e77_fixed.java
index 2573d30..b48f808 100644
--- a/tmp/1aa71f91-5a94-4ace-b32b-37bc095e687b_buggy.java
+++ b/tmp/21e7d5c1-22dd-4f99-b1e5-42fc49fe7e77_fixed.java
@@ -1,20 +1,24 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    Node target = node.getFirstChild();
+
+    // When replacing a property access that contains a qualified name, we
+    // can not be sure that a property of the qualified name is not being
+    // assigned to a value.
+    if (target.isQualifiedName()
+        && isNameAssignedTo(target.getQualifiedName(), replacement)) {
       return false;
     }
 
     return true;
   }
\ No newline at end of file
