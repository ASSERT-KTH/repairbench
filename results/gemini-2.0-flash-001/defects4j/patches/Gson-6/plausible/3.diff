diff --git a/tmp/d55a4399-2d46-482c-89ef-8a93d278f386_buggy.java b/tmp/e7fb4c66-e58a-46d5-a4a4-c91c6cad635e_fixed.java
index 1c53d31..759478a 100644
--- a/tmp/d55a4399-2d46-482c-89ef-8a93d278f386_buggy.java
+++ b/tmp/e7fb4c66-e58a-46d5-a4a4-c91c6cad635e_fixed.java
@@ -1,20 +1,22 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
+    TypeAdapter<?> typeAdapter = null;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      TypeAdapterFactory factory = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
+          .construct();
+      typeAdapter = factory.create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+    if (typeAdapter != null) {
       typeAdapter = typeAdapter.nullSafe();
+    }
     return typeAdapter;
   }
\ No newline at end of file
