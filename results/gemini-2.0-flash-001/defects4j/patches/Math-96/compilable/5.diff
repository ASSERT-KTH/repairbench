diff --git a/tmp/05fbcd03-88a2-494b-bfc3-3e345f41750b_buggy.java b/tmp/71b436a7-0e0b-442d-820d-98f561d18f5d_fixed.java
index f674e52..e745f67 100644
--- a/tmp/05fbcd03-88a2-494b-bfc3-3e345f41750b_buggy.java
+++ b/tmp/71b436a7-0e0b-442d-820d-98f561d18f5d_fixed.java
@@ -1,41 +1,40 @@
     /**
      * Test for the equality of two Complex objects.
      * <p>
      * If both the real and imaginary parts of two Complex numbers
      * are exactly the same, and neither is <code>Double.NaN</code>, the two
      * Complex objects are considered to be equal.</p>
      * <p>
      * All <code>NaN</code> values are considered to be equal - i.e, if either
      * (or both) real and imaginary parts of the complex number are equal
      * to <code>Double.NaN</code>, the complex number is equal to 
      * <code>Complex.NaN</code>.</p>
      *
      * @param other Object to test for equality to this
      * @return true if two Complex objects are equal, false if
      *         object is null, not an instance of Complex, or
      *         not equal to this Complex instance
      * 
      */
     public boolean equals(Object other) {
         boolean ret;
         
         if (this == other) { 
             ret = true;
         } else if (other == null) {
             ret = false;
         } else  {
-            try {
+            if (other instanceof Complex) {
                 Complex rhs = (Complex)other;
-                if (rhs.isNaN()) {
-                    ret = this.isNaN();
+                if (isNaN()) {
+                    ret = rhs.isNaN();
                 } else {
                     ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
                 }
-            } catch (ClassCastException ex) {
-                // ignore exception
+            } else {
                 ret = false;
             }
         }
       
         return ret;
     }
\ No newline at end of file
