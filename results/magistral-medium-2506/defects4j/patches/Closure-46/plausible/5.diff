diff --git a/tmp/9e704d83-be2c-4588-bcd4-e2aca7436272_buggy.java b/tmp/9ed8babf-1ddd-4d3d-875d-10783fc82b34_fixed.java
index 46817a7..4b6aea2 100644
--- a/tmp/9e704d83-be2c-4588-bcd4-e2aca7436272_buggy.java
+++ b/tmp/9ed8babf-1ddd-4d3d-875d-10783fc82b34_fixed.java
@@ -1,16 +1,42 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
+    RecordType thatRecord = that.toMaybeRecordType();
+    if (this.properties.isEmpty() || thatRecord.properties.isEmpty()) {
+        // If either record has no properties, the union is the correct LST
+        return registry.createUnionType(this, that);
+    }
+
+    // Check if one type is a subtype of the other
+    if (this.isSubtype(that)) {
+        return that;
+    }
+    if (that.isSubtype(this)) {
+        return this;
+    }
+
+    // Find common properties with equivalent types
+    boolean hasCommonProperties = false;
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+        if (thatRecord.hasProperty(property) &&
+            thatRecord.getPropertyType(property).isEquivalentTo(
                 getPropertyType(property))) {
             builder.addProperty(property, getPropertyType(property),
                 getPropertyNode(property));
+            hasCommonProperties = true;
         }
     }
-    return builder.build();
+
+    if (hasCommonProperties) {
+        JSType commonType = builder.build();
+        // If there are common properties, the LST is the union of the common parts and the two types
+        // But actually, the least supertype for records with no common structure is their union
+        // So we need to return the union in most cases
+        return registry.createUnionType(this, that);
+    } else {
+        return registry.createUnionType(this, that);
+    }
 }
\ No newline at end of file
