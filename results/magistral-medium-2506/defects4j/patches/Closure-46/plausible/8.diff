diff --git a/tmp/cdf5db8e-8e37-4f44-b1ac-604f870dea71_buggy.java b/tmp/17048107-911b-47f1-8c00-d6e38b348961_fixed.java
index 46817a7..c2bc8a8 100644
--- a/tmp/cdf5db8e-8e37-4f44-b1ac-604f870dea71_buggy.java
+++ b/tmp/17048107-911b-47f1-8c00-d6e38b348961_fixed.java
@@ -1,16 +1,17 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+
+  // For record types, the least supertype should be the union of both record types
+  RecordType otherRecord = that.toMaybeRecordType();
+
+  // If both records are the same, return the same type
+  if (isEquivalentTo(otherRecord)) {
+    return this;
   }
-    }
-    return builder.build();
+
+  // Otherwise return the union of the two record types
+  return registry.createUnionType(this, otherRecord);
 }
\ No newline at end of file
