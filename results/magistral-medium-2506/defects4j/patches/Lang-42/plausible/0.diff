diff --git a/tmp/de579824-b43a-4ffd-93bf-ff91e628fe0b_buggy.java b/tmp/4862635b-50b3-4054-82ca-a10692a7bf4e_fixed.java
index 822447c..2b48ec5 100644
--- a/tmp/de579824-b43a-4ffd-93bf-ff91e628fe0b_buggy.java
+++ b/tmp/4862635b-50b3-4054-82ca-a10692a7bf4e_fixed.java
@@ -1,37 +1,43 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
-        for (int i = 0; i < len; i++) {
+        int i = 0;
+        while (i < len) {
+            // Get the full Unicode code point, which may span two char values (surrogate pair)
+            int codePoint = str.codePointAt(i);
+            int charCount = Character.charCount(codePoint);
+
+            // Check if the current character is part of a surrogate pair
+            if (charCount > 1) {
+                // Process as a single code point
+                String entityName = this.entityName((char) codePoint); // Note: This might need adjustment
+                if (entityName == null) {
+                    writer.write("&#");
+                    writer.write(Integer.toString(codePoint));
+                    writer.write(';');
+                } else {
+                    writer.write('&');
+                    writer.write(entityName);
+                    writer.write(';');
+                }
+                i += charCount;
+            } else {
+                // Process as a single char
                 char c = str.charAt(i);
                 String entityName = this.entityName(c);
                 if (entityName == null) {
                     if (c > 0x7F) {
                         writer.write("&#");
                         writer.write(Integer.toString(c, 10));
                         writer.write(';');
                     } else {
                         writer.write(c);
                     }
                 } else {
                     writer.write('&');
                     writer.write(entityName);
                     writer.write(';');
                 }
+                i++;
+            }
         }
     }
\ No newline at end of file
