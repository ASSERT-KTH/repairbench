diff --git a/tmp/3efad739-58e0-4d3b-8ba4-3c61bed03254_buggy.java b/tmp/c5071723-cf2f-40fa-802c-69b4d0abeaf1_fixed.java
index 822447c..48b744f 100644
--- a/tmp/3efad739-58e0-4d3b-8ba4-3c61bed03254_buggy.java
+++ b/tmp/c5071723-cf2f-40fa-802c-69b4d0abeaf1_fixed.java
@@ -1,37 +1,51 @@
 /**
  * <p>
  * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
  * passed.
  * </p>
  *
  * @param writer
  *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
  * @param str
  *            The <code>String</code> to escape. Assumed to be a non-null value.
  * @throws IOException
  *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
  *             methods.
  *
  * @see #escape(String)
  * @see Writer
  */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
     for (int i = 0; i < len; i++) {
         char c = str.charAt(i);
+        // Check if this is a high surrogate (start of a surrogate pair)
+        if (c >= 0xD800 && c <= 0xDBFF && i + 1 < len) {
+            char next = str.charAt(i + 1);
+            if (next >= 0xDC00 && next <= 0xDFFF) {
+                // This is a surrogate pair, combine them to get the code point
+                int codePoint = (c - 0xD800) * 0x400 + (next - 0xDC00) + 0x10000;
+                writer.write("&#");
+                writer.write(Integer.toString(codePoint, 10));
+                writer.write(';');
+                i++; // Skip the next character since we've already processed it
+                continue;
+            }
+        }
+
         String entityName = this.entityName(c);
         if (entityName == null) {
             if (c > 0x7F) {
                 writer.write("&#");
                 writer.write(Integer.toString(c, 10));
                 writer.write(';');
             } else {
                 writer.write(c);
             }
         } else {
             writer.write('&');
             writer.write(entityName);
             writer.write(';');
         }
     }
 }
\ No newline at end of file
