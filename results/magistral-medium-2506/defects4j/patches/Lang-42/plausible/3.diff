diff --git a/tmp/32806fbc-9fc7-4270-b75f-4a60b0f28fbe_buggy.java b/tmp/d9ae7328-37a0-4a0e-a497-3154870c7add_fixed.java
index 822447c..7ce993b 100644
--- a/tmp/32806fbc-9fc7-4270-b75f-4a60b0f28fbe_buggy.java
+++ b/tmp/d9ae7328-37a0-4a0e-a497-3154870c7add_fixed.java
@@ -1,37 +1,33 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
     for (int i = 0; i < len; i++) {
         char c = str.charAt(i);
+        if (Character.isHighSurrogate(c) && i + 1 < len) {
+            char nextChar = str.charAt(i + 1);
+            if (Character.isLowSurrogate(nextChar)) {
+                // Process surrogate pair as a single code point
+                int codePoint = Character.toCodePoint(c, nextChar);
+                writer.write("&#");
+                writer.write(Integer.toString(codePoint));
+                writer.write(';');
+                i++; // Skip the next character since we've processed it as part of the surrogate pair
+                continue;
+            }
+        }
+
         String entityName = this.entityName(c);
         if (entityName == null) {
             if (c > 0x7F) {
                 writer.write("&#");
                 writer.write(Integer.toString(c, 10));
                 writer.write(';');
             } else {
                 writer.write(c);
             }
         } else {
             writer.write('&');
             writer.write(entityName);
             writer.write(';');
         }
     }
 }
\ No newline at end of file
