diff --git a/tmp/7be7af9a-93aa-4ca1-a209-89efca40a0cb_buggy.java b/tmp/1f0677b7-587f-452e-9f2c-7968ff8a3756_fixed.java
index b5d94e0..644873e 100644
--- a/tmp/7be7af9a-93aa-4ca1-a209-89efca40a0cb_buggy.java
+++ b/tmp/1f0677b7-587f-452e-9f2c-7968ff8a3756_fixed.java
@@ -1,26 +1,32 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
-    int visits = 0;
+    boolean needsRetraversal;
     do {
+      needsRetraversal = false;
+
       Node c = node.getFirstChild();
       while(c != null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
 
       visit(node);
-      visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+      // Check if we need to retraverse exactly once per node
+      if (shouldRetraverse(node)) {
+        needsRetraversal = true;
+      }
+
+      Preconditions.checkState(!(visits >= 10000), "too many iterations");
+    } while (needsRetraversal);
 
     exitNode(node);
   }
\ No newline at end of file
