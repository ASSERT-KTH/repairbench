diff --git a/tmp/3dec1a5e-0d02-437d-9b81-7d926c5252d8_buggy.java b/tmp/a1095451-c95d-4c75-a0da-fd7c93cb231b_fixed.java
index 5f96616..e6c8202 100644
--- a/tmp/3dec1a5e-0d02-437d-9b81-7d926c5252d8_buggy.java
+++ b/tmp/a1095451-c95d-4c75-a0da-fd7c93cb231b_fixed.java
@@ -1,20 +1,34 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
-    if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    if (constraint.isRecordType() || constraint.isUnionType()) {
+      JSType recordType = constraint.isRecordType() ?
+          constraint.toObjectType() :
+          extractRecordType(constraint.toUnionType());
+      if (recordType != null) {
+        matchRecordTypeConstraint(recordType);
       }
     }
+  }
+
+  private JSType extractRecordType(ObjectType union) {
+    for (JSType alternate : union.getAlternates()) {
+      if (alternate.isRecordType()) {
+        return alternate.toObjectType();
+      }
+    }
+    return null;
+  }
\ No newline at end of file
