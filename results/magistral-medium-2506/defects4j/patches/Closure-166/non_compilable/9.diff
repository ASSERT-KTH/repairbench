diff --git a/tmp/353c75db-9532-4457-a278-bd644650d378_buggy.java b/tmp/4f67852e-8c24-4506-b140-c4cddb73e09b_fixed.java
index 5f96616..a3c6b5c 100644
--- a/tmp/353c75db-9532-4457-a278-bd644650d378_buggy.java
+++ b/tmp/4f67852e-8c24-4506-b140-c4cddb73e09b_fixed.java
@@ -1,20 +1,29 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
+  if (constraint.isRecordType() || constraint.isUnionType()) {
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else {
+      // Handle union types containing record types
+      for (JSType subtype : constraint.getUnionMembers()) {
+        if (subtype.isRecordType()) {
+          matchRecordTypeConstraint(subtype.toObjectType());
+        }
+      }
+    }
   }
 }
\ No newline at end of file
