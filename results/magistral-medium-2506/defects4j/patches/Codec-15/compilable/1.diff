diff --git a/tmp/83ba1729-95a3-48b1-adb3-bf4af063169e_buggy.java b/tmp/8289e628-c659-453d-af9c-697f99b1f7ed_fixed.java
index b529d33..7263011 100644
--- a/tmp/83ba1729-95a3-48b1-adb3-bf4af063169e_buggy.java
+++ b/tmp/8289e628-c659-453d-af9c-697f99b1f7ed_fixed.java
@@ -1,29 +1,22 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
     private char getMappingCode(final String str, final int index) {
         // map() throws IllegalArgumentException
         final char mappedChar = this.map(str.charAt(index));
         // HW rule check
-        if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
+        if (index > 0 && mappedChar != '0') {
+            final char prevChar = str.charAt(index - 1);
+            if ('H' == prevChar || 'W' == prevChar) {
+                // Check if previous character (before H/W) has same code
+                if (index > 1) {
                     final char preHWChar = str.charAt(index - 2);
+                    // If preHWChar is not H or W and has same code, return 0
+                    if (preHWChar != 'H' && preHWChar != 'W') {
                         final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
-                    return 0;
+                        if (firstCode == mappedChar) {
+                            return '0';
+                        }
+                    }
                 }
             }
         }
         return mappedChar;
     }
\ No newline at end of file
