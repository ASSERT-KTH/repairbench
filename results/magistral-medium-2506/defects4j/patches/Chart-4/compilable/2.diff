diff --git a/tmp/cac2a558-e89f-4697-8b3f-414040fd6803_buggy.java b/tmp/95640b5f-9b47-4969-8323-a5aa1f084469_fixed.java
index e7bb994..84b723d 100644
--- a/tmp/cac2a558-e89f-4697-8b3f-414040fd6803_buggy.java
+++ b/tmp/95640b5f-9b47-4969-8323-a5aa1f084469_fixed.java
@@ -1,102 +1,123 @@
     /**
      * Returns the range for the specified axis.
      *
      * @param axis  the axis.
      *
      * @return The range.
      */
     public Range getDataRange(ValueAxis axis) {
 
-        Range result = null;
+        Range result = new Range(0, 0); // Initialize with a default empty range
         List mappedDatasets = new ArrayList();
         List includedAnnotations = new ArrayList();
         boolean isDomainAxis = true;
 
         // is it a domain axis?
         int domainIndex = getDomainAxisIndex(axis);
         if (domainIndex >= 0) {
             isDomainAxis = true;
             mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
                     new Integer(domainIndex)));
             if (domainIndex == 0) {
                 // grab the plot's annotations
                 Iterator iterator = this.annotations.iterator();
                 while (iterator.hasNext()) {
                     XYAnnotation annotation = (XYAnnotation) iterator.next();
                     if (annotation instanceof XYAnnotationBoundsInfo) {
                         includedAnnotations.add(annotation);
                     }
                 }
             }
         }
 
         // or is it a range axis?
         int rangeIndex = getRangeAxisIndex(axis);
         if (rangeIndex >= 0) {
             isDomainAxis = false;
             mappedDatasets.addAll(getDatasetsMappedToRangeAxis(
                     new Integer(rangeIndex)));
             if (rangeIndex == 0) {
                 Iterator iterator = this.annotations.iterator();
                 while (iterator.hasNext()) {
                     XYAnnotation annotation = (XYAnnotation) iterator.next();
                     if (annotation instanceof XYAnnotationBoundsInfo) {
                         includedAnnotations.add(annotation);
                     }
                 }
             }
         }
 
         // iterate through the datasets that map to the axis and get the union
         // of the ranges.
         Iterator iterator = mappedDatasets.iterator();
         while (iterator.hasNext()) {
             XYDataset d = (XYDataset) iterator.next();
             if (d != null) {
                 XYItemRenderer r = getRendererForDataset(d);
                 if (isDomainAxis) {
                     if (r != null) {
-                        result = Range.combine(result, r.findDomainBounds(d));
+                        Range range = r.findDomainBounds(d);
+                        if (range != null) {
+                            result = Range.combine(result, range);
+                        }
                     }
                     else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findDomainBounds(d));
+                        Range range = DatasetUtilities.findDomainBounds(d);
+                        if (range != null) {
+                            result = Range.combine(result, range);
+                        }
                     }
                 }
                 else {
                     if (r != null) {
-                        result = Range.combine(result, r.findRangeBounds(d));
+                        Range range = r.findRangeBounds(d);
+                        if (range != null) {
+                            result = Range.combine(result, range);
+                        }
                     }
                     else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findRangeBounds(d));
+                        Range range = DatasetUtilities.findRangeBounds(d);
+                        if (range != null) {
+                            result = Range.combine(result, range);
+                        }
                     }
                 }
 
                     Collection c = r.getAnnotations();
+                    if (c != null) {
                         Iterator i = c.iterator();
                         while (i.hasNext()) {
                             XYAnnotation a = (XYAnnotation) i.next();
                             if (a instanceof XYAnnotationBoundsInfo) {
                                 includedAnnotations.add(a);
                             }
                         }
                     }
             }
+        }
 
         Iterator it = includedAnnotations.iterator();
         while (it.hasNext()) {
             XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();
             if (xyabi.getIncludeInDataBounds()) {
                 if (isDomainAxis) {
-                    result = Range.combine(result, xyabi.getXRange());
+                    Range range = xyabi.getXRange();
+                    if (range != null) {
+                        result = Range.combine(result, range);
+                    }
                 }
                 else {
-                    result = Range.combine(result, xyabi.getYRange());
+                    Range range = xyabi.getYRange();
+                    if (range != null) {
+                        result = Range.combine(result, range);
+                    }
                 }
             }
         }
 
+        // if no range was found, return zero range
+        if (result == null || Double.isNaN(result.getLowerBound()) || Double.isNaN(result.getUpperBound())) {
+            return new Range(0, 0);
+        }
         return result;
-
     }
\ No newline at end of file
