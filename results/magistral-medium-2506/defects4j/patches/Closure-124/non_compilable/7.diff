diff --git a/tmp/8d5f4c7e-ec3a-4121-af61-2f73e0432d6c_buggy.java b/tmp/1f2fc6e5-5159-4cfe-85ce-4ce0d8dea59c_fixed.java
index 2573d30..fcdafcd 100644
--- a/tmp/8d5f4c7e-ec3a-4121-af61-2f73e0432d6c_buggy.java
+++ b/tmp/1f2fc6e5-5159-4cfe-85ce-4ce0d8dea59c_fixed.java
@@ -1,20 +1,25 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    Node child = node.getFirstChild();
+    if (child.isName()
+        && isNameAssignedTo(child.getString(), replacement)) {
+      return false;
+    }
+
+    // Also check if the property access targets a potentially modified object
+    if (isPropertyOfModifiedObject(node, replacement)) {
       return false;
     }
 
     return true;
   }
\ No newline at end of file
