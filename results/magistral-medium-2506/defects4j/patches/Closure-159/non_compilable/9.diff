diff --git a/tmp/7904cb79-9440-4f93-8a7a-1d8d6f789552_buggy.java b/tmp/4b32d903-8f2c-4a0d-baeb-6d8e7cd15ee3_fixed.java
index de9af32..05ab167 100644
--- a/tmp/7904cb79-9440-4f93-8a7a-1d8d6f789552_buggy.java
+++ b/tmp/4b32d903-8f2c-4a0d-baeb-6d8e7cd15ee3_fixed.java
@@ -1,18 +1,36 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+      if (child.getType() == Token.GETPROP) {
+        // For method calls like object.method()
+        StringBuilder sb = new StringBuilder();
+        Node current = child.getFirstChild();
+        while (current != null) {
+          if (current.getType() == Token.NAME) {
+            sb.append(current.getString());
+          } else if (current.getType() == Token.GETPROP) {
+            Node prop = current.getLastChild();
+            if (prop.getType() == Token.STRING) {
+              sb.append ".").append(prop.getString().substring(1, prop.getString().length()-1));
+            }
+          }
+          current = current.getNext();
+        }
+        if (sb.length() > 0) {
+          changed.add(sb.toString());
+        }
+      } else if (child.getType() == Token.NAME) {
         changed.add(child.getString());
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
