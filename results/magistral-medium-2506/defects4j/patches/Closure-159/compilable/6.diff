diff --git a/tmp/afce33ff-6039-4240-b709-7aba59dd505a_buggy.java b/tmp/17ef9931-8f86-47b3-8650-54f7e78f0098_fixed.java
index de9af32..cdeafed 100644
--- a/tmp/afce33ff-6039-4240-b709-7aba59dd505a_buggy.java
+++ b/tmp/17ef9931-8f86-47b3-8650-54f7e78f0098_fixed.java
@@ -1,18 +1,27 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
+    // Handle both direct function calls (NAME) and method calls (GETPROP)
+    if (child.getType() == Token.NAME || child.getType() == Token.GETPROP) {
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else {
+        // For GETPROP, we want the property name (the function name)
+        Node propertyName = child.getLastChild();
+        if (propertyName != null && propertyName.getType() == Token.STRING) {
+          changed.add(propertyName.getString());
+        }
+      }
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
