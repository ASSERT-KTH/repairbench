diff --git a/tmp/80af3f05-fa27-4ce6-a1a3-023e1d737731_buggy.java b/tmp/d158376e-88c9-40ba-ab63-5693f691266d_fixed.java
index 98b456f..15802a6 100644
--- a/tmp/80af3f05-fa27-4ce6-a1a3-023e1d737731_buggy.java
+++ b/tmp/d158376e-88c9-40ba-ab63-5693f691266d_fixed.java
@@ -1,17 +1,21 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            // For boolean attributes in HTML mode, skip the value if the value matches the key (e.g., noshade="noshade")
+            // or if the value is empty (e.g., noshade="")
+            boolean isHtml = out.syntax() == Document.OutputSettings.Syntax.html;
+            boolean isBooleanAttr = Attribute.isBooleanAttribute(key);
+            boolean skipVal = isHtml && (val == null || val.isEmpty() || val.equals(key));
+
+            if (!(skipVal)) {
                 accum.append("=\"");
-                Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
+                Entities.escape(accum, val == null ? "" : val, out, true, false, false); // Fixed: use empty string for null
                 accum.append('"');
             }
         }
     }
\ No newline at end of file
