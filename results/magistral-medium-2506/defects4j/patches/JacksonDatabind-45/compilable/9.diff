diff --git a/tmp/7abff4de-bc9d-4049-b5bc-80b9de9179a6_buggy.java b/tmp/1b9a109d-fd02-4731-9dd6-17351783e227_fixed.java
index 0dbce00..819fd07 100644
--- a/tmp/7abff4de-bc9d-4049-b5bc-80b9de9179a6_buggy.java
+++ b/tmp/1b9a109d-fd02-4731-9dd6-17351783e227_fixed.java
@@ -1,33 +1,60 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+
+                // Check if shape is explicitly set
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // Handle empty or non-numeric shape
+                if (shape != JsonFormat.Shape.STRING && shape != JsonFormat.Shape.NUMBER) {
+                    // If there's a pattern, locale, or timezone specified, we should use STRING format
+                    boolean hasFormatSpecifications = format.hasPattern() || format.hasLocale() || format.getTimeZone() != null;
+                    boolean useNumeric = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS) && !hasFormatSpecifications;
+
+                    if (useNumeric) {
+                        return withFormat(Boolean.TRUE, null);
+                    }
+
+                    // Otherwise treat as STRING format
+                    TimeZone tz = format.getTimeZone();
+                    final String pattern = format.hasPattern()
+                            ? format.getPattern()
+                            : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    final Locale loc = format.hasLocale()
+                            ? format.getLocale()
+                            : serializers.getLocale();
+                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    if (tz == null) {
+                        tz = serializers.getTimeZone();
+                    }
+                    df.setTimeZone(tz);
+                    return withFormat(Boolean.FALSE, df);
+                }
+
+                // Original handling for explicit STRING shape
+                if (shape == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
         }
         return this;
     }
\ No newline at end of file
