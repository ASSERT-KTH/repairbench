diff --git a/tmp/be0e6b4c-d9a2-444c-b5d6-6763ced8abf2_buggy.java b/tmp/deadd714-51ca-47aa-b1e2-27207d466fe9_fixed.java
index 0dbce00..4610fb4 100644
--- a/tmp/be0e6b4c-d9a2-444c-b5d6-6763ced8abf2_buggy.java
+++ b/tmp/deadd714-51ca-47aa-b1e2-27207d466fe9_fixed.java
@@ -1,33 +1,42 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
+            // Check if the format has specific settings that would dictate shape
+            boolean hasShapeIndicators = format.hasPattern() || format.hasLocale() || format.hasTimeZone()
+                    || format.getShape() != JsonFormat.Shape.ANY;
 
-            	// Simple case first: serialize as numeric timestamp?
+            if (hasShapeIndicators) {
                 JsonFormat.Shape shape = format.getShape();
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                if (shape == JsonFormat.Shape.STRING || shape == JsonFormat.Shape.ANY) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
         }
+    }
+
+    // Default case: follow the serialization feature setting
+    if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        return withFormat(Boolean.TRUE, null);
+    }
     return this;
 }
\ No newline at end of file
