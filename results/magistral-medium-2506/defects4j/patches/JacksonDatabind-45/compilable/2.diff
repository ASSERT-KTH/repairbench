diff --git a/tmp/709f0cb3-5a8c-47f7-938b-873e08c2b0aa_buggy.java b/tmp/77938c17-d260-4326-b8da-f8284bb7a08c_fixed.java
index 0dbce00..d5ebc39 100644
--- a/tmp/709f0cb3-5a8c-47f7-938b-873e08c2b0aa_buggy.java
+++ b/tmp/77938c17-d260-4326-b8da-f8284bb7a08c_fixed.java
@@ -1,33 +1,53 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // Handle Shape.ANY by respecting the serialization feature
+                if (shape == JsonFormat.Shape.ANY || shape == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
+                    final String pattern = format.getPattern(); // null if not specified
+                    boolean useTimestamp = false;
+
+                    // If pattern is specified, we must use string format
+                    if (format.hasPattern()) {
+                        useTimestamp = false;
+                    }
+                    // If no pattern but we're configured to write timestamps
+                    else if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                        useTimestamp = true;
+                    }
+
+                    if (!useTimestamp) {
+                        final String effectivePattern = (pattern != null)
+                                    ? pattern
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                         final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                        SimpleDateFormat df = new SimpleDateFormat(effectivePattern, loc);
                         if (tz == null) {
                             tz = serializers.getTimeZone();
                         }
                         df.setTimeZone(tz);
                         return withFormat(Boolean.FALSE, df);
+                    } else {
+                        return withFormat(Boolean.TRUE, null);
                     }
                 }
             }
+        }
+        // Default case: respect serialization feature if no format annotation
+        if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+            return withFormat(Boolean.TRUE, null);
+        }
         return this;
     }
\ No newline at end of file
