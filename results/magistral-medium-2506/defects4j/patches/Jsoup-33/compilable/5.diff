diff --git a/tmp/558080f0-6e36-4bea-9a4e-1fe470043978_buggy.java b/tmp/1329133f-9cbc-4a39-a6dc-a3440e7393a6_fixed.java
index dc93be3..1aed93d 100644
--- a/tmp/558080f0-6e36-4bea-9a4e-1fe470043978_buggy.java
+++ b/tmp/1329133f-9cbc-4a39-a6dc-a3440e7393a6_fixed.java
@@ -1,14 +1,19 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
+            if (Tag.valueOf(startTag.name()).isSelfClosing()) {
+                return insertEmpty(startTag);
+            } else {
+                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+                insert(el);
+                tokeniser.emit(new Token.EndTag(el.tagName()));
                 stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
             }
+        }
 
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
