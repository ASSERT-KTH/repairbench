diff --git a/tmp/7d28e60b-f6cb-4b1f-a069-ace647ca1dde_buggy.java b/tmp/ff1f6c91-71b6-4fc3-9d79-8ec3e44ba031_fixed.java
index dc93be3..7934749 100644
--- a/tmp/7d28e60b-f6cb-4b1f-a069-ace647ca1dde_buggy.java
+++ b/tmp/ff1f6c91-71b6-4fc3-9d79-8ec3e44ba031_fixed.java
@@ -1,14 +1,16 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            if (!el.tag().isSelfClosing()) { // only emit end tag if not a self-closing tag
+                tokeniser.emit(new Token.EndTag(el.tagName()));
+            }
             return el;
         }
 
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
