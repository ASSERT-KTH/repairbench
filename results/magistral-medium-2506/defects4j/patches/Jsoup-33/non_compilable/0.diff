diff --git a/tmp/6c8122e2-afa7-4b17-8e53-c02210f1c4c6_buggy.java b/tmp/b495df5f-a217-46b6-8070-0b9ddb200379_fixed.java
index dc93be3..c3cc3b7 100644
--- a/tmp/6c8122e2-afa7-4b17-8e53-c02210f1c4c6_buggy.java
+++ b/tmp/b495df5f-a217-46b6-8070-0b9ddb200379_fixed.java
@@ -1,14 +1,17 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+            insert(el);
+            if (!el.isEmpty()) {
+                Token.EndTag endTag = new Token.EndTag(startTag.name());
+                tokeniser.emit(endTag);
+            }
             return el;
         }
 
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
