diff --git a/tmp/1599182f-6d46-4b7c-a4d1-7f65fb77d4ed_buggy.java b/tmp/4d05e94c-ba6b-4dab-90b2-f4a99332188e_fixed.java
index 43fb5fd..e5e6bdf 100644
--- a/tmp/1599182f-6d46-4b7c-a4d1-7f65fb77d4ed_buggy.java
+++ b/tmp/4d05e94c-ba6b-4dab-90b2-f4a99332188e_fixed.java
@@ -1,55 +1,35 @@
-    /**
-     * <p>Breaks <code>token</code> into its constituent parts
-     * using the following algorithm.
-     * <ul>
-     *  <li>ignore the first character ("<b>-</b>")</li>
-     *  <li>foreach remaining character check if an {@link Option}
-     *  exists with that id.</li>
-     *  <li>if an {@link Option} does exist then add that character
-     *  prepended with "<b>-</b>" to the list of processed tokens.</li>
-     *  <li>if the {@link Option} can have an argument value and there 
-     *  are remaining characters in the token then add the remaining 
-     *  characters as a token to the list of processed tokens.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> 
-     *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
-     *  "<b>--</b>" followed by the remaining characters and also 
-     *  the remaining tokens directly to the processed tokens list.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
-     *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
-     *  character prepended with "<b>-</b>".</li>
-     * </ul>
-     * </p>
-     *
-     * @param token The current token to be <b>burst</b>
-     * @param stopAtNonOption Specifies whether to stop processing
-     * at the first non-Option encountered.
-     */
 protected void burstToken(String token, boolean stopAtNonOption)
 {
-        for (int i = 1; i < token.length(); i++)
+    int i = 1;
+    for (; i < token.length(); i++)
     {
         String ch = String.valueOf(token.charAt(i));
 
         if (options.hasOption(ch))
         {
             tokens.add("-" + ch);
             currentOption = options.getOption(ch);
 
             if (currentOption.hasArg() && (token.length() != (i + 1)))
             {
                 tokens.add(token.substring(i + 1));
-
                 break;
             }
         }
         else if (stopAtNonOption)
         {
             process(token.substring(i));
+            i = token.length(); // exit loop after processing non-option
+            break;
         }
         else
         {
-                tokens.add(token);
-                break;
+            tokens.add("-" + ch);
         }
     }
+
+    // If we stopped bursting and there are remaining characters, add them as an argument
+    if (i < token.length() && stopAtNonOption) {
+        tokens.add(token.substring(i));
+    }
 }
\ No newline at end of file
