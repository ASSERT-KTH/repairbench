diff --git a/tmp/bf8585fb-daf6-4263-876c-e6bf7c94047a_buggy.java b/tmp/3aedb972-f3c6-4177-a586-024c2dc82dad_fixed.java
index 735a993..2d90440 100644
--- a/tmp/bf8585fb-daf6-4263-876c-e6bf7c94047a_buggy.java
+++ b/tmp/3aedb972-f3c6-4177-a586-024c2dc82dad_fixed.java
@@ -1,29 +1,37 @@
     /**
      * Appends an object to the builder padding on the right to a fixed length.
      * The <code>toString</code> of the object is used.
      * If the object is larger than the length, the right hand side is lost.
      * If the object is null, null text value is used.
      *
      * @param obj  the object to append, null uses null text
      * @param width  the fixed field width, zero or negative has no effect
      * @param padChar  the pad character to use
      * @return this, to enable chaining
      */
     public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
         if (width > 0) {
-            ensureCapacity(size + width);
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
+                strLen = width;  // Ensure we don't try to copy more than width characters
+            }
+            int totalLen = strLen;
+            if (strLen < width) {
+                totalLen = width;
+            }
+            ensureCapacity(size + totalLen);
+
+            if (strLen > 0) {
                 str.getChars(0, strLen, buffer, size);
-            } else {
+            }
+            if (strLen < width) {
                 int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
                 for (int i = 0; i < padLen; i++) {
                     buffer[size + strLen + i] = padChar;
                 }
             }
             size += width;
         }
         return this;
     }
\ No newline at end of file
