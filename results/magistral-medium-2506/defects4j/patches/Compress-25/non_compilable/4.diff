diff --git a/tmp/528581da-5651-48d2-ac65-6a07d849bb0b_buggy.java b/tmp/84fc6898-f970-4171-928c-5832fa30e7bd_fixed.java
index 6c0aa19..00391e9 100644
--- a/tmp/528581da-5651-48d2-ac65-6a07d849bb0b_buggy.java
+++ b/tmp/84fc6898-f970-4171-928c-5832fa30e7bd_fixed.java
@@ -1,20 +1,29 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
         in = new PushbackInputStream(inputStream, buf.capacity());
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+        // initialize buffer to read first bytes
+        buf.clear();
+        fill();
+        // check if the stream starts with a local file header
+        // if not, move to the first header
+        if (!readLocalFileHeader(true)) {
+            // handle case where initial position isn't at a local file header
+            buf.compact();
+            fill();
+        }
     }
\ No newline at end of file
