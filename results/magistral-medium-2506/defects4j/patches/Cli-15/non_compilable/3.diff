diff --git a/tmp/2f311aff-e322-4859-a351-bb539f529bb4_buggy.java b/tmp/41b57408-1224-4c28-b70f-f20b1bf05287_fixed.java
index 4e8b037..f0e6712 100644
--- a/tmp/2f311aff-e322-4859-a351-bb539f529bb4_buggy.java
+++ b/tmp/41b57408-1224-4c28-b70f-f20b1bf05287_fixed.java
@@ -1,20 +1,45 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
 
         // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+        if (valueList == null) {
+            valueList = new ArrayList();
+        }
+        List optionDefaults = (List) this.defaultValues.get(option);
+        if (optionDefaults != null && !optionDefaults.isEmpty()) {
+            if (valueList.isEmpty()) {
+                valueList = new ArrayList(optionDefaults);
+            } else {
+                // Only add defaults that weren't provided by user and don't exceed maximum
+                int maxArgs = getMaximumNumberOfArguments(option);
+                int neededDefaults = maxArgs - valueList.size();
+                if (neededDefaults > 0) {
+                    // Copy the list to avoid modifying the original
+                    valueList = new ArrayList(valueList);
+                    // Add needed defaults up to the maximum
+                    for (int i = optionDefaults.size() - 1, count = 0;
+                         i >= 0 && count < neededDefaults;
+                         i--, count++) {
+                        valueList.add(optionDefaults.get(i));
+                    }
+                }
+            }
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
+
+    private int getMaximumNumberOfArguments(Option option) {
+        Argument argument = option.getArgument();
+        if (argument != null) {
+            return argument.getMaximum();
+        }
+        return Integer.MAX_VALUE;
+    }
\ No newline at end of file
