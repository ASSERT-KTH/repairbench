diff --git a/tmp/79d9c327-a3a0-4948-9e1f-75d9c979f4a1_buggy.java b/tmp/c76b3b53-17db-41ed-be6e-c068ccfff804_fixed.java
index 562001a..a8a2076 100644
--- a/tmp/79d9c327-a3a0-4948-9e1f-75d9c979f4a1_buggy.java
+++ b/tmp/c76b3b53-17db-41ed-be6e-c068ccfff804_fixed.java
@@ -1,29 +1,16 @@
-    /**
-     * <p>Checks if String contains a search String irrespective of case,
-     * handling <code>null</code>. Case-insensitivity is defined as by
-     * {@link String#equalsIgnoreCase(String)}.
-     *
-     * <p>A <code>null</code> String will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.contains(null, *) = false
-     * StringUtils.contains(*, null) = false
-     * StringUtils.contains("", "") = true
-     * StringUtils.contains("abc", "") = true
-     * StringUtils.contains("abc", "a") = true
-     * StringUtils.contains("abc", "z") = false
-     * StringUtils.contains("abc", "A") = true
-     * StringUtils.contains("abc", "Z") = false
-     * </pre>
-     *
-     * @param str  the String to check, may be null
-     * @param searchStr  the String to find, may be null
-     * @return true if the String contains the search String irrespective of
-     * case or false if not or <code>null</code> string input
-     */
     public static boolean containsIgnoreCase(String str, String searchStr) {
         if (str == null || searchStr == null) {
             return false;
         }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+        if (searchStr.length() == 0) {
+            return true;
+        }
+        int len = searchStr.length();
+        int max = str.length() - len;
+        for (int i = 0; i <= max; i++) {
+            if (str.regionMatches(true, i, searchStr, 0, len)) {
+                return true;
+            }
+        }
+        return false;
     }
\ No newline at end of file
