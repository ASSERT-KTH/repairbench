diff --git a/tmp/8b2e5472-e691-46a9-baf7-1f4e33d442b2_buggy.java b/tmp/a5763fe4-e51d-4734-a438-5ac7ef28d6a9_fixed.java
index ce3d60f..115308f 100644
--- a/tmp/8b2e5472-e691-46a9-baf7-1f4e33d442b2_buggy.java
+++ b/tmp/a5763fe4-e51d-4734-a438-5ac7ef28d6a9_fixed.java
@@ -1,16 +1,24 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
-        int shift = 7;
+        int shift = 7; // Starting with the most significant bit of the byte
         for (int i = 0; i < length; i++) {
-            cache |= ((bits.get(i) ? 1 : 0) << shift);
-            --shift;
-            if (shift == 0) {
-                header.write(cache);
+            // Add current bit to the cache at the current shift position
+            int bitValue = bits.get(i) ? 1 : 0;
+            cache |= (bitValue << shift);
+
+            // Move to the next bit position
+            shift--;
+
+            // When we've filled a byte (8 bits), write it out
+            if (shift < 0) {  // Changed to < 0 to handle the last bit correctly
+                header.writeByte(cache);
                 shift = 7;
                 cache = 0;
             }
         }
-        if (length > 0 && shift > 0) {
-            header.write(cache);
+
+        // If there are remaining bits that didn't fill a complete byte, write them
+        if (length > 0 && shift != 7) {
+            header.writeByte(cache);
         }
     }
\ No newline at end of file
