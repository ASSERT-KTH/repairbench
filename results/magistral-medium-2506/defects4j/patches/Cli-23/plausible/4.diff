diff --git a/tmp/c3881969-2385-4046-b4c3-4006ccd86df1_buggy.java b/tmp/57386b84-da97-40f1-9f82-43912aed216c_fixed.java
index 227a4ef..7878c5a 100644
--- a/tmp/c3881969-2385-4046-b4c3-4006ccd86df1_buggy.java
+++ b/tmp/57386b84-da97-40f1-9f82-43912aed216c_fixed.java
@@ -1,48 +1,57 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space
         // characters
         final String padding = createPadding(nextLineTabStop);
 
+        // Store the original text for error detection
+        String originalText = text;
+        int loopCount = 0;
+        int maxLoops = 100; // Safety measure to prevent infinite loops
+
         while (true)
         {
             int lastPos = pos;
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
-            } else
-            if (pos == lastPos)
+            }
+            else if (pos == lastPos)
             {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+                // Check if we're making progress by comparing with original text
+                if (loopCount++ > maxLoops || text.equals(originalText)) {
+                    sb.append(rtrim(text));
+                    break;
+                }
+                originalText = text;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
+        return sb;
     }
\ No newline at end of file
