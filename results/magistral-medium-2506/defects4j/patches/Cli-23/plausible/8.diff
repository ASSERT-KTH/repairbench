diff --git a/tmp/0e90b69d-3eae-447f-b413-2122b0cf7d49_buggy.java b/tmp/e1120aa2-ae62-4de0-8611-6e265ce0a277_fixed.java
index 227a4ef..e9827fe 100644
--- a/tmp/0e90b69d-3eae-447f-b413-2122b0cf7d49_buggy.java
+++ b/tmp/e1120aa2-ae62-4de0-8611-6e265ce0a277_fixed.java
@@ -1,48 +1,39 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space
     // characters
     final String padding = createPadding(nextLineTabStop);
+    String remainingText = text.substring(pos).trim();
 
     while (true)
     {
         int lastPos = pos;
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+        String currentLine = padding + remainingText;
+        pos = findWrapPos(currentLine, width, 0);
 
         if (pos == -1)
         {
-                sb.append(text);
-
+            sb.append(currentLine);
             return sb;
-            } else
+        }
         if (pos == lastPos)
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            // Instead of throwing exception, append the remaining text as is
+            sb.append(rtrim(currentLine));
+            return sb;
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);
+        remainingText = currentLine.substring(pos).trim();
     }
 }
\ No newline at end of file
