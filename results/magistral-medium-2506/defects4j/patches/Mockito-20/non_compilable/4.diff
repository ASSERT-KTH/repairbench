diff --git a/tmp/a2fe432d-6876-4505-9f5d-cf1920e43228_buggy.java b/tmp/2359c221-0a55-4ccb-90cb-faf774126c37_fixed.java
index f9a9b5b..ad11723 100644
--- a/tmp/a2fe432d-6876-4505-9f5d-cf1920e43228_buggy.java
+++ b/tmp/2359c221-0a55-4ccb-90cb-faf774126c37_fixed.java
@@ -1,30 +1,45 @@
     public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
             throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
         }
         Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
                 settings.getTypeToMock(),
                 settings.getExtraInterfaces()
         );
         T mockInstance = null;
         try {
+            Object outerInstance = settings.getConstruction().getOuterInstance();
+            if (outerInstance != null && settings.getTypeToMock().isMemberClass()) {
+                // Handle inner class construction with proper outer instance
+                try {
+                    Constructor<? extends T> constructor = mockedProxyType.getDeclaredConstructor(settings.getTypeToMock().getEnclosingClass());
+                    mockInstance = constructor.newInstance(outerInstance);
+                } catch (NoSuchMethodException e) {
+                    // Fall back to default instantiation if constructor with outer instance not found
                     mockInstance = classInstantiator.instantiate(mockedProxyType);
+                }
+            } else {
+                mockInstance = classInstantiator.instantiate(mockedProxyType);
+            }
+
             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
             return ensureMockIsAssignableToMockedType(settings, mockInstance);
         } catch (ClassCastException cce) {
             throw new MockitoException(join(
                     "ClassCastException occurred while creating the mockito mock :",
                     "  class to mock : " + describeClass(mockedProxyType),
                     "  created class : " + describeClass(settings.getTypeToMock()),
                     "  proxy instance class : " + describeClass(mockInstance),
                     "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                     "",
                     "You might experience classloading issues, please ask the mockito mailing-list.",
                     ""
             ), cce);
-        } catch (org.mockito.internal.creation.instance.InstantiationException e) {
+        } catch (InvocationTargetException ite) {
+            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", ite.getCause());
+        } catch (Exception e) {
             throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
         }
     }
\ No newline at end of file
