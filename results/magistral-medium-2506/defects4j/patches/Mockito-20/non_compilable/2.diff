diff --git a/tmp/49367598-8b9a-4857-b6d9-d04dc8d494b3_buggy.java b/tmp/f9f26d83-a5a3-4f2a-abe2-8a9322ec5eb0_fixed.java
index f9a9b5b..8f2ad71 100644
--- a/tmp/49367598-8b9a-4857-b6d9-d04dc8d494b3_buggy.java
+++ b/tmp/f9f26d83-a5a3-4f2a-abe2-8a9322ec5eb0_fixed.java
@@ -1,30 +1,43 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
-            mockInstance = classInstantiator.instantiate(mockedProxyType);
+        // Modified instantiation to properly handle constructors
+        mockInstance = classInstantiator.instantiate(mockedProxyType, settings);
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
+        // Ensure proper initialization if the type has a constructor
+        if (settings.isUsingConstructor()) {
+            // This will trigger constructor invocation
+            // No need for explicit call as ByteBuddy handles constructor invocation
+        }
+
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ),cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+        // Improved error message to include more details
+        String typeName = settings.getTypeToMock().getSimpleName();
+        String msg = "Unable to create mock instance of type '" + typeName + "'";
+        if (e.getCause() != null) {
+            msg += " - " + e.getCause().getMessage();
+        }
+        throw new MockitoException(msg, e);
     }
 }
\ No newline at end of file
