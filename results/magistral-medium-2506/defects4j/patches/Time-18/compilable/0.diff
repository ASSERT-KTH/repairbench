diff --git a/tmp/5bf2f1f9-2c90-414c-a27d-c117f198defe_buggy.java b/tmp/e5031d90-01e8-43e9-a625-5bc016a6291b_fixed.java
index be2af16..db06b3b 100644
--- a/tmp/5bf2f1f9-2c90-414c-a27d-c117f198defe_buggy.java
+++ b/tmp/e5031d90-01e8-43e9-a625-5bc016a6291b_fixed.java
@@ -1,29 +1,59 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Try Gregorian first
+    long instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
+    // If Gregorian fails (throws exception), but it's before cutover, try Julian
+    try {
+        // Only check if instant is valid
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+            long julianInstant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
+
+            if (julianInstant < iCutoverMillis) {
+                return julianInstant;
+            }
+        }
+    } catch (IllegalArgumentException ex) {
+        // Try Julian if Gregorian failed and date is before cutover
+        if (year < 1582) {  // Approximate cutover year
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
+            if (julianInstant < iCutoverMillis) {
+                return julianInstant;
+            }
+        }
+        throw new IllegalArgumentException(ex.getMessage());
+    }
+
+    // Check for illegal cutover gap
+    if (instant < iCutoverMillis) {
+        // If we get here, Gregorian worked but is before cutover - try Julian
+        long julianInstant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
+        if (julianInstant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        return julianInstant;
     }
+
     return instant;
 }
\ No newline at end of file
