diff --git a/tmp/c794ec01-df32-437f-8f16-e80f2115c35e_buggy.java b/tmp/e3cebdb5-1c2f-4115-8acc-c5d87508b87f_fixed.java
index be2af16..3e1c924 100644
--- a/tmp/c794ec01-df32-437f-8f16-e80f2115c35e_buggy.java
+++ b/tmp/e3cebdb5-1c2f-4115-8acc-c5d87508b87f_fixed.java
@@ -1,29 +1,48 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Check both Gregorian and Julian calendars to handle cases like 1500-2-29
+    try {
         long instant;
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        if (instant >= iCutoverMillis) {
+            return instant;
+        }
+
+        // If we get here with an invalid date (like Feb 29 in Gregorian non-leap year)
+        // we need to try the Julian calendar
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            // This date exists in Julian but not Gregorian and is after cutover - invalid
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        return instant;
+    } catch (IllegalArgumentException ex) {
+        // If Gregorian fails, try Julian (for dates like 1500-2-29)
+        try {
+            long instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant >= iCutoverMillis) {
+                throw new IllegalArgumentException("Specified date does not exist");
             }
             return instant;
+        } catch (IllegalArgumentException ex2) {
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+    }
 }
\ No newline at end of file
