diff --git a/tmp/0235ad4e-0a96-4465-a083-2d3ae60b9930_buggy.java b/tmp/e98681b8-1d8e-4c4d-8ea2-fb69c95ce7a3_fixed.java
index d5b3da9..bd71d29 100644
--- a/tmp/0235ad4e-0a96-4465-a083-2d3ae60b9930_buggy.java
+++ b/tmp/e98681b8-1d8e-4c4d-8ea2-fb69c95ce7a3_fixed.java
@@ -1,7 +1,51 @@
         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
+                // First check if the key is a valid XML attribute name
+                String key = attribute.getKey();
+                if (!isValidXmlName(key)) {
+                    // If not valid, we need to transform it to a valid name
+                    // We'll prefix with "invalid-" and replace invalid characters
+                    StringBuilder validKey = new StringBuilder();
+                    validKey.append("invalid-");
+                    for (int i = 0; i < key.length(); i++) {
+                        char c = key.charAt(i);
+                        if (i == 0) {
+                            // First character must be a letter, underscore, or colon
+                            if (Character.isLetter(c) || c == '_' || c == ':') {
+                                validKey.append(c);
+                            } else {
+                                validKey.append("_");
+                            }
+                        } else {
+                            // Subsequent characters can be letter, digit, hyphen, underscore, dot, or colon
+                            if (Character.isLetterOrDigit(c) || c == '-' || c == '_' || c == '.' || c == ':') {
+                                validKey.append(c);
+                            } else {
+                                validKey.append("_");
+                            }
+                        }
+                    }
+                    key = validKey.toString();
+                }
                 el.setAttribute(key, attribute.getValue());
             }
         }
+
+        private boolean isValidXmlName(String name) {
+            if (name == null || name.isEmpty()) return false;
+
+            // First character must be a letter, underscore, or colon
+            char first = name.charAt(0);
+            if (!(Character.isLetter(first) || first == '_' || first == ':')) {
+                return false;
+            }
+
+            // Subsequent characters can be letter, digit, hyphen, underscore, dot, or colon
+            for (int i = 1; i < name.length(); i++) {
+                char c = name.charAt(i);
+                if (!(Character.isLetterOrDigit(c) || c == '-' || c == '_' || c == '.' || c == ':')) {
+                    return false;
+                }
+            }
+            return true;
+        }
\ No newline at end of file
