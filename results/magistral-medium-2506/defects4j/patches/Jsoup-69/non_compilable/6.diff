diff --git a/tmp/0029b5f7-83cf-4e45-b2be-13bce25b30c1_buggy.java b/tmp/aa144426-82d9-42c7-a1f0-da8aa09671de_fixed.java
index e69de29..c1cb769 100644
--- a/tmp/0029b5f7-83cf-4e45-b2be-13bce25b30c1_buggy.java
+++ b/tmp/aa144426-82d9-42c7-a1f0-da8aa09671de_fixed.java
@@ -0,0 +1,60 @@
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+
+    // Get all form control elements, but filter out any that have been removed from the DOM
+    Elements elements = select("input, textarea, select");
+    for (Element el : elements) {
+        if (!el.hasParent()) continue; // skip elements that have been removed
+        String name = el.attr("name").trim();
+        if (name.length() > 0) {
+            String type = el.attr("type");
+            // Handle different input types appropriately
+            if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+                if (el.hasAttr("checked")) {
+                    String val = el.val();
+                    if (val == null || val.isEmpty()) val = "on";
+                    data.add(new Connection.KeyVal(name, val));
+                }
+            } else if (el.tagName().equals("select")) {
+                Elements options = el.select("option[selected]");
+                if (options.isEmpty() && el.hasAttr("multiple")) {
+                    // For multiple selects without selections, use all options?
+                    options = el.select("option");
+                }
+                for (Element option : options) {
+                    String val = option.val();
+                    if (val == null) val = option.text();
+                    data.add(new Connection.KeyVal(name, val));
+                }
+            } else if ("submit".equalsIgnoreCase(type)) {
+                if (el.is("[default-submit]")) { // if we're the submit button that was pressed
+                    data.add(new Connection.KeyVal(name, el.val()));
+                }
+            } else if (!iskeyable(el)) {
+                // don't add
+            } else {
+                String val = el.val();
+                if (el.tagName().equals("textarea")) {
+                    val = el.text(); // textarea values come from text()
+                }
+                if (val == null) val = "";
+                data.add(new Connection.KeyVal(name, val));
+            }
+        }
+    }
+    return data;
+}
+
+private boolean iskeyable(Element el) {
+    // Determine if an element should be included in form data
+    String type = el.attr("type");
+    if (el.tagName().equals("textarea") || el.tagName().equals("select"))
+        return true;
+    if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type))
+        return true;
+    if ("button".equalsIgnoreCase(type) || "submit".equalsIgnoreCase(type) || "image".equalsIgnoreCase(type))
+        return true;
+    if (el.attr("name").length() == 0 && !"hidden".equalsIgnoreCase(type))
+        return false; // no name and not hidden means not keyable
+    return true;
+}
\ No newline at end of file
