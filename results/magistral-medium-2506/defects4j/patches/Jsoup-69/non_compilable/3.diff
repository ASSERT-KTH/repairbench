diff --git a/tmp/c038f9f8-c277-4d47-9bf4-61060e75df36_buggy.java b/tmp/cd5da143-403f-4d49-a220-b9713e29cc0d_fixed.java
index e69de29..019b0e5 100644
--- a/tmp/c038f9f8-c277-4d47-9bf4-61060e75df36_buggy.java
+++ b/tmp/cd5da143-403f-4d49-a220-b9713e29cc0d_fixed.java
@@ -0,0 +1,43 @@
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    Elements inputs = getElementsByTag("input")
+            .stream()
+            .filter(element -> !element.hasAttr("type") ||
+                              !element.attr("type").equals("submit") ||
+                              element.hasAttr("name"))
+            .collect(Collectors.toList());
+
+    // Also include other form elements like textarea, select
+    Elements otherInputs = select("textarea,select");
+    inputs.addAll(otherInputs);
+
+    // Collect data
+    for (Element input : inputs) {
+        if (input.hasAttr("disabled")) continue;
+        String name = input.attr("abs:name");
+        if (name.length() == 0) continue;
+
+        String type = input.hasAttr("type") ? input.attr("type").trim().toLowerCase() : "text";
+        if (input.tag().getName().equals("input") && type.equals("file")) continue; // skip files
+
+        String value;
+        if (input.tag().getName().equals("textarea")) {
+            value = input.text();
+        } else if (input.tag().getName().equals("select")) {
+            Element select = (Element)input.select("option[selected]").first();
+            value = select == null ? "" : select.val();
+        } else if (input.hasAttr("value")) {
+            value = input.val();
+        } else {
+            value = "";
+        }
+
+        if (type.equals("checkbox") || type.equals("radio")) {
+            if (!input.hasAttr("checked") && !value.equalsIgnoreCase("on")) continue;
+        }
+
+        data.add(new Connection.KeyVal(name, value));
+    }
+
+    return data;
+}
\ No newline at end of file
