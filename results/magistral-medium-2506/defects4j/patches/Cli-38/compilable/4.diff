diff --git a/tmp/6cfdc2da-c391-4958-9eff-daf0e1ece95e_buggy.java b/tmp/46d76166-df7c-4327-88bc-da7868f8004e_fixed.java
index 81a6e8b..82d2221 100644
--- a/tmp/6cfdc2da-c391-4958-9eff-daf0e1ece95e_buggy.java
+++ b/tmp/46d76166-df7c-4327-88bc-da7868f8004e_fixed.java
@@ -1,19 +1,36 @@
     /**
      * Tells if the token looks like a short option.
      *
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
+        // check if this is a single short option with value (-S=V)
         int pos = token.indexOf("=");
+        if (pos != -1) {
+            String optName = token.substring(1, pos);
+            if (optName.length() == 1 && options.hasShortOption(optName)) {
+                return true;
+            }
+        }
+
+        // for concatenated short options (-S1S2) or single short option (-S)
         String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
+        if (optName.length() == 1) {
             return options.hasShortOption(optName);
-        // check for several concatenated short options
+        } else {
+            // check if all characters are valid short options
+            for (int i = 0; i < optName.length(); i++) {
+                if (!options.hasShortOption(optName.substring(i, i+1))) {
+                    return false;
+                }
+            }
+            return true;
+        }
     }
\ No newline at end of file
