diff --git a/tmp/687ff15b-c92b-4eec-8483-5f976bd52b2c_buggy.java b/tmp/d2144fe5-0033-47ac-93d8-f3563d3d84af_fixed.java
index 81a6e8b..a36980b 100644
--- a/tmp/687ff15b-c92b-4eec-8483-5f976bd52b2c_buggy.java
+++ b/tmp/d2144fe5-0033-47ac-93d8-f3563d3d84af_fixed.java
@@ -1,19 +1,34 @@
     /**
      * Tells if the token looks like a short option.
      *
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        // Check if all characters (after '-') are valid short options
+        String candidate = token.substring(1);
+        int equalPos = candidate.indexOf('=');
+        if (equalPos != -1) {
+            candidate = candidate.substring(0, equalPos);
+        }
+
+        // Check if each character in the candidate is a valid short option
+        if (options.hasShortOption(candidate)) {
+            return true;
+        }
+
+        // Check for concatenated short options
+        for (int i = 0; i < candidate.length(); i++) {
+            String opt = candidate.substring(i, i+1);
+            if (!options.hasShortOption(opt)) {
+                return false;
+            }
+        }
+        return true;
     }
\ No newline at end of file
