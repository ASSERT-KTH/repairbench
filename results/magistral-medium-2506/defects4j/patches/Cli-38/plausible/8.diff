diff --git a/tmp/4460429e-399f-4dd6-9472-708f8279a88f_buggy.java b/tmp/2e00f852-5d65-440b-9ec0-f2887b234cdc_fixed.java
index 81a6e8b..216b8e8 100644
--- a/tmp/4460429e-399f-4dd6-9472-708f8279a88f_buggy.java
+++ b/tmp/2e00f852-5d65-440b-9ec0-f2887b234cdc_fixed.java
@@ -1,19 +1,42 @@
 /**
  * Tells if the token looks like a short option.
  *
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
     if (!token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
 
+    // check for several concatenated short options
+    if (token.startsWith("--"))
+    {
+        return false;
+    }
+
     // remove leading "-" and "=value"
     int pos = token.indexOf("=");
     String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+
+    // Check if the first character is a valid short option
+    if (optName.length() > 0 && options.hasShortOption(optName.substring(0, 1))) {
+        return true;
+    }
+
+    // Check if the entire token (without - and =value) is a valid short option
+    if (options.hasShortOption(optName)) {
+        return true;
+    }
+
+    // For concatenated short options (like -abcd), check if all characters are valid short options
+    for (int i = 0; i < optName.length(); i++) {
+        String singleOption = optName.substring(i, i + 1);
+        if (!options.hasShortOption(singleOption)) {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
