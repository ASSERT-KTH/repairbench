diff --git a/tmp/cec98271-0ea9-40fa-b117-9b48febb6c20_buggy.java b/tmp/81e9f421-ad06-4963-aa3f-8ac61f341aab_fixed.java
index 2608424..2086c55 100644
--- a/tmp/cec98271-0ea9-40fa-b117-9b48febb6c20_buggy.java
+++ b/tmp/81e9f421-ad06-4963-aa3f-8ac61f341aab_fixed.java
@@ -1,39 +1,17 @@
-    /**
-     * Convert to multidimensional counter.
-     *
-     * @param index Index in unidimensional counter.
-     * @return the multidimensional counts.
-     * @throws OutOfRangeException if {@code index} is not between
-     * {@code 0} and the value returned by {@link #getSize()} (excluded).
-     */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
-        int count = 0;
-        for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
+        int remaining = index;
+        for (int i = 0; i < dimension; i++) {
+            final int size = sizes[i];
+            indices[i] = remaining % size;
+            remaining = remaining / size;
         }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
-        }
-
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
 
         return indices;
     }
\ No newline at end of file
