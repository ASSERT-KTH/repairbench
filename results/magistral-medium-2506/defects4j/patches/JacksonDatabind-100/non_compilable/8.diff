diff --git a/tmp/65cc4168-0ab3-497e-be59-c0e12597580e_buggy.java b/tmp/3168732f-07b5-4404-b8b4-121c55f4d740_fixed.java
index fc8c302..acc530f 100644
--- a/tmp/65cc4168-0ab3-497e-be59-c0e12597580e_buggy.java
+++ b/tmp/3168732f-07b5-4404-b8b4-121c55f4d740_fixed.java
@@ -1,23 +1,34 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        try {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
+            // If we get here with a TextNode, try to decode it with the provided variant
+            if (n.isTextual()) {
+                String text = n.textValue();
+                if (text != null) {
+                    return b64variant.decode(text);
+                }
+            }
+        } catch (IllegalArgumentException e) {
+            throw new JsonParseException("Cannot access contents of TextNode as binary: " + e.getMessage(), currentLocation());
+        }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
