diff --git a/tmp/29d4b758-559f-486b-919f-24636fc6b639_buggy.java b/tmp/4f995a7d-29de-4b3a-9bf5-fc64c15150c2_fixed.java
index fc8c302..480f12d 100644
--- a/tmp/29d4b758-559f-486b-919f-24636fc6b639_buggy.java
+++ b/tmp/4f995a7d-29de-4b3a-9bf5-fc64c15150c2_fixed.java
@@ -1,23 +1,36 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
             // [databind#2096]: although `binaryValue()` works for real binary node
             // and embedded "POJO" node, coercion from TextNode may require variant, so:
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
+            // Handle TextNode case separately since it needs base64 decoding with variant
+            if (n.isTextual()) {
+                String text = n.textValue();
+                if (text != null) {
+                    // Try to decode with the provided variant
+                    try {
+                        return b64variant.decode(text);
+                    } catch (IllegalArgumentException e) {
+                        throw new JsonParseException("Cannot access contents of TextNode as binary due to broken Base64 encoding",
+                            currentLocation(), e);
+                    }
+                }
+            }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
