diff --git a/tmp/181cc381-6901-489e-977c-c29bd559c400_buggy.java b/tmp/45562ed9-654c-4491-b1f0-e9e8d4ebfc45_fixed.java
index 6ea5795..6896831 100644
--- a/tmp/181cc381-6901-489e-977c-c29bd559c400_buggy.java
+++ b/tmp/45562ed9-654c-4491-b1f0-e9e8d4ebfc45_fixed.java
@@ -1,37 +1,44 @@
     /**
      * Appends the usage clause for an Option to a StringBuffer.
      *
      * @param buff the StringBuffer to append to
      * @param option the Option to append
      * @param required whether the Option is required or not
      */
     private static void appendOption(final StringBuffer buff,
                                      final Option option,
                                      final boolean required)
     {
         if (!required)
         {
             buff.append("[");
         }
 
         if (option.getOpt() != null)
         {
             buff.append("-").append(option.getOpt());
         }
         else
         {
             buff.append("--").append(option.getLongOpt());
         }
 
-        // if the Option has a value
-        if (option.hasArg() && (option.getArgName() != null))
+        // if the Option has a value and has a non-empty arg name or no arg name at all
+        if (option.hasArg() && (option.getArgName() == null || !option.getArgName().isEmpty()))
         {
+            if (option.getArgName() != null) {
                 buff.append(" <").append(option.getArgName()).append(">");
             }
+        }
+        // but if argName is empty but we still need to show we expect an argument
+        else if (option.hasArg() && option.getArgName() != null && option.getArgName().isEmpty())
+        {
+            buff.append(" <>");
+        }
 
         // if the Option is not a required option
         if (!required)
         {
             buff.append("]");
         }
     }
\ No newline at end of file
