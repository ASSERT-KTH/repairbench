diff --git a/tmp/19f53526-67ef-411e-84aa-400186150716_buggy.java b/tmp/379cf88c-353e-4fa4-8b7b-d5e926d90817_fixed.java
index 1650d36..e221858 100644
--- a/tmp/19f53526-67ef-411e-84aa-400186150716_buggy.java
+++ b/tmp/379cf88c-353e-4fa4-8b7b-d5e926d90817_fixed.java
@@ -1,25 +1,23 @@
-    /**
-     * <p>Checks if two calendar objects represent the same local time.</p>
-     *
-     * <p>This method compares the values of the fields of the two objects.
-     * In addition, both calendars must be the same of the same type.</p>
-     * 
-     * @param cal1  the first calendar, not altered, not null
-     * @param cal2  the second calendar, not altered, not null
-     * @return true if they represent the same millisecond instant
-     * @throws IllegalArgumentException if either date is <code>null</code>
-     * @since 2.1
-     */
     public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
         if (cal1 == null || cal2 == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
-                cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
-                cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
-                cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
-                cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
-                cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
-                cal1.getClass() == cal2.getClass());
+        if (cal1.getClass() != cal2.getClass()) {
+            return false;
+        }
+        // Clone calendars to avoid modifying the input parameters
+        Calendar c1 = (Calendar) cal1.clone();
+        Calendar c2 = (Calendar) cal2.clone();
+
+        // Convert both calendars to the same time zone (UTC) to compare local time properly
+        c1.setTimeZone(TimeZone.getTimeZone("UTC"));
+        c2.setTimeZone(TimeZone.getTimeZone("UTC"));
+
+        return (c1.get(Calendar.MILLISECOND) == c2.get(Calendar.MILLISECOND) &&
+                c1.get(Calendar.SECOND) == c2.get(Calendar.SECOND) &&
+                c1.get(Calendar.MINUTE) == c2.get(Calendar.MINUTE) &&
+                c1.get(Calendar.HOUR_OF_DAY) == c2.get(Calendar.HOUR_OF_DAY) &&
+                c1.get(Calendar.DAY_OF_YEAR) == c2.get(Calendar.DAY_OF_YEAR) &&
+                c1.get(Calendar.YEAR) == c2.get(Calendar.YEAR) &&
+                c1.get(Calendar.ERA) == c2.get(Calendar.ERA));
     }
\ No newline at end of file
