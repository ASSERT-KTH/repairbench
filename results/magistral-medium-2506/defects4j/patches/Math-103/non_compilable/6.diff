diff --git a/tmp/9165d95e-33cf-4e3c-9c80-974a937c6690_buggy.java b/tmp/ba24be31-1f81-4a86-aef7-66a6b31a53d3_fixed.java
index 6cfa79b..83596e7 100644
--- a/tmp/9165d95e-33cf-4e3c-9c80-974a937c6690_buggy.java
+++ b/tmp/ba24be31-1f81-4a86-aef7-66a6b31a53d3_fixed.java
@@ -1,12 +1,25 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
+        try {
+            double deviation = Math.abs(x - mean) / standardDeviation;
+            if (deviation > 20) {
+                return x < mean ? 0.0 : 1.0;
+            }
+            return 0.5 * (1.0 + Mathf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MathException e) {
+            // If we get a convergence error with extreme values, return appropriate bound
+            if (x < mean) {
+                return 0.0;
+            } else {
+                return 1.0;
+            }
+        }
     }
\ No newline at end of file
