diff --git a/tmp/f7ef94a9-9025-4868-ad73-bfead2268b26_buggy.java b/tmp/bac819aa-2741-49e0-ad77-329e453c8639_fixed.java
index 6cfa79b..f205362 100644
--- a/tmp/f7ef94a9-9025-4868-ad73-bfead2268b26_buggy.java
+++ b/tmp/bac819aa-2741-49e0-ad77-329e453c8639_fixed.java
@@ -1,12 +1,25 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        try {
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MathException e) {
+            // If we get a convergence error, handle extreme values
+            double dev = Math.abs((x - mean) / standardDeviation);
+            if (dev > 20) {
+                if (x < mean) {
+                    return 0.0;
+                } else {
+                    return 1.0;
+                }
+            }
+            throw e;
+        }
     }
\ No newline at end of file
