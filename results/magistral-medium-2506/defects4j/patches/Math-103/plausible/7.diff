diff --git a/tmp/b1b85c63-6054-4a09-a8b1-8ec2d76fb6a0_buggy.java b/tmp/4ff132a3-726e-4156-94cb-09b30f36e4f3_fixed.java
index 6cfa79b..648bae6 100644
--- a/tmp/b1b85c63-6054-4a09-a8b1-8ec2d76fb6a0_buggy.java
+++ b/tmp/4ff132a3-726e-4156-94cb-09b30f36e4f3_fixed.java
@@ -1,12 +1,27 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        try {
+            if (Math.abs(x - mean) > 20 * standardDeviation) {
+                if (x < mean) {
+                    return 0.0;
+                } else {
+                    return 1.0;
+                }
+            }
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MathException e) {
+            if (x < mean) {
+                return 0.0;
+            } else {
+                return 1.0;
+            }
+        }
     }
\ No newline at end of file
