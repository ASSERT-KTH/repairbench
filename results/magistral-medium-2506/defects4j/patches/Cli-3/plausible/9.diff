diff --git a/tmp/71a06e42-d28c-4e58-976b-e9b4427cffa7_buggy.java b/tmp/7a58a2d9-ab33-4473-9e27-fef93104be10_fixed.java
index d9b400d..a7ec101 100644
--- a/tmp/71a06e42-d28c-4e58-976b-e9b4427cffa7_buggy.java
+++ b/tmp/7a58a2d9-ab33-4473-9e27-fef93104be10_fixed.java
@@ -1,21 +1,39 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        if (str == null) {
+            return null;
         }
-        catch (NumberFormatException nfe)
-        {
+        if (str.indexOf('.') >= 0 || str.indexOf('e') >= 0 || str.indexOf('E') >= 0) {
+            try {
+                return Double.valueOf(str);
+            } catch (NumberFormatException nfe) {
+                // Try falling back to Float
+                try {
+                    return Float.valueOf(str);
+                } catch (NumberFormatException e) {
                     System.err.println(nfe.getMessage());
+                    return null;
                 }
-
+            }
+        } else {
+            try {
+                return Long.valueOf(str);
+            } catch (NumberFormatException nfe) {
+                // Try falling back to Integer
+                try {
+                    return Integer.valueOf(str);
+                } catch (NumberFormatException e) {
+                    System.err.println(nfe.getMessage());
                     return null;
                 }
+            }
+        }
+    }
\ No newline at end of file
