diff --git a/tmp/afc694c9-0d73-4a0e-bdee-f12a5fb02d32_buggy.java b/tmp/802d029d-bef7-47f5-baf0-a5a58a6921d3_fixed.java
index d9b400d..36d501f 100644
--- a/tmp/afc694c9-0d73-4a0e-bdee-f12a5fb02d32_buggy.java
+++ b/tmp/802d029d-bef7-47f5-baf0-a5a58a6921d3_fixed.java
@@ -1,21 +1,46 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
+        if (str == null)
+        {
+            return null;
+        }
+        if (str.indexOf('.') >= 0 || str.indexOf('e') >= 0 || str.indexOf('E') >= 0)
+        {
+            try
+            {
+                return new Double(str);
+            }
+            catch (NumberFormatException nfe)
+            {
+                // ignore and try next format
+            }
+        }
         try
         {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+            Long l = Long.valueOf(str);
+            if (str.startsWith("0x") || str.startsWith("-0x"))
+            {
+                return l;
+            }
+            return l.longValue();
         }
         catch (NumberFormatException nfe)
         {
-            System.err.println(nfe.getMessage());
+            try
+            {
+                return Double.valueOf(str);
             }
-
+            catch (NumberFormatException nfe2)
+            {
                 return null;
             }
+        }
+    }
\ No newline at end of file
