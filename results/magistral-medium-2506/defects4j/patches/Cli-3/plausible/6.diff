diff --git a/tmp/954b5f0c-2ba3-4bd7-b641-7defa5891d43_buggy.java b/tmp/0cad0a75-ae0b-4b5f-8643-7be8cd7d0a5f_fixed.java
index d9b400d..ff06d93 100644
--- a/tmp/954b5f0c-2ba3-4bd7-b641-7defa5891d43_buggy.java
+++ b/tmp/0cad0a75-ae0b-4b5f-8643-7be8cd7d0a5f_fixed.java
@@ -1,21 +1,26 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
-        }
-        catch (NumberFormatException nfe)
-        {
-            System.err.println(nfe.getMessage());
-        }
-
+        if (str == null) {
             return null;
         }
+
+        try {
+            // First try to parse as a double if it contains a decimal point
+            if (str.contains(".")) {
+                return Double.parseDouble(str);
+            } else {
+                // Otherwise try to parse as a long
+                return Long.parseLong(str);
+            }
+        } catch (NumberFormatException nfe) {
+            return null;  // Return null for invalid number strings
+        }
+    }
\ No newline at end of file
