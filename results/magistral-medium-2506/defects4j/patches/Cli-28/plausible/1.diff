diff --git a/tmp/82234ab6-cc3b-4913-b2d6-6d52e117adef_buggy.java b/tmp/aac762a7-05ac-4d6e-9157-54e2042a0276_fixed.java
index a7549f0..45344f3 100644
--- a/tmp/82234ab6-cc3b-4913-b2d6-6d52e117adef_buggy.java
+++ b/tmp/aac762a7-05ac-4d6e-9157-54e2042a0276_fixed.java
@@ -1,50 +1,51 @@
     /**
      * Sets the values of Options using the values in <code>properties</code>.
      *
      * @param properties The value properties to be processed.
      */
     protected void processProperties(Properties properties)
     {
         if (properties == null)
         {
             return;
         }
 
         for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)
         {
             String option = e.nextElement().toString();
 
-            if (!cmd.hasOption(option))
-            {
             Option opt = getOptions().getOption(option);
+            if (opt == null)
+            {
+                continue;
+            }
 
             // get the value from the properties instance
             String value = properties.getProperty(option);
 
             if (opt.hasArg())
             {
                 if (opt.getValues() == null || opt.getValues().length == 0)
                 {
                     try
                     {
                         opt.addValueForProcessing(value);
                     }
                     catch (RuntimeException exp)
                     {
                         // if we cannot add the value don't worry about it
                     }
                 }
             }
             else if (!("yes".equalsIgnoreCase(value)
                     || "true".equalsIgnoreCase(value)
                     || "1".equalsIgnoreCase(value)))
             {
                 // if the value is not yes, true or 1 then don't add the
                 // option to the CommandLine
-                    break;
+                continue;
             }
 
             cmd.addOption(opt);
         }
     }
\ No newline at end of file
-    }
