diff --git a/tmp/93cc807d-0807-4341-8542-2eb6250c702f_buggy.java b/tmp/f2fe5647-de18-4b56-a0a6-c34c395c05a2_fixed.java
index 19fe1b4..c68aa68 100644
--- a/tmp/93cc807d-0807-4341-8542-2eb6250c702f_buggy.java
+++ b/tmp/f2fe5647-de18-4b56-a0a6-c34c395c05a2_fixed.java
@@ -1,17 +1,51 @@
     public static boolean isJSIdentifier(String s) {
         int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+        if (length == 0) {
             return false;
         }
 
+        // Check first character
+        char firstChar = s.charAt(0);
+        if (!(Character.isUnicodeIdentifierStart(firstChar) ||
+              firstChar == '$' ||
+              firstChar == '_')) {
+            return false;
+        }
+
+        // Check remaining characters
         for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+            char c = s.charAt(i);
+            if (!(Character.isUnicodeIdentifierPart(c) ||
+                  c == '$' ||
+                  c == '\u200C' || // ZERO WIDTH NON-JOINER
+                  c == '\u200D')) { // ZERO WIDTH JOINER
                 return false;
             }
         }
 
+        // Check for reserved words (simplified check for JavaScript)
+        if (isJavaScriptReservedWord(s)) {
+            return false;
+        }
+
         return true;
     }
+
+    private static boolean isJavaScriptReservedWord(String s) {
+        // List of JavaScript reserved words (simplified version)
+        String[] reservedWords = {
+            "break", "case", "catch", "class", "const", "continue", "debugger",
+            "default", "delete", "do", "else", "enum", "export", "extends",
+            "false", "finally", "for", "function", "if", "import", "in",
+            "instanceof", "new", "null", "return", "super", "switch", "this",
+            "throw", "true", "try", "typeof", "var", "void", "while", "with",
+            "yield"
+        };
+        for (String word : reservedWords) {
+            if (s.equals(word)) {
+                return true;
+            }
+        }
+        return false;
+    }
\ No newline at end of file
