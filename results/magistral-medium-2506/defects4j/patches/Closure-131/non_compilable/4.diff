diff --git a/tmp/9c08dedc-3e17-4268-8e3d-d92425af5b0d_buggy.java b/tmp/7d4ee650-f800-41cc-9acb-22eeaf7e1b27_fixed.java
index 19fe1b4..a769b9d 100644
--- a/tmp/9c08dedc-3e17-4268-8e3d-d92425af5b0d_buggy.java
+++ b/tmp/7d4ee650-f800-41cc-9acb-22eeaf7e1b27_fixed.java
@@ -1,17 +1,80 @@
     public static boolean isJSIdentifier(String s) {
       int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+      if (length == 0) {
+        return false;
+      }
+
+      char firstChar = s.charAt(0);
+      // JavaScript allows Unicode letters, $, and _ as first character
+      if (!Character.isUnicodeIdentifierStart(firstChar) &&
+          firstChar != '$' && firstChar != '_') {
         return false;
       }
 
       for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        char c = s.charAt(i);
+        if (!Character.isUnicodeIdentifierPart(c) && c != '$' && c != '\u200c' && c != '\u200d') {
           return false;
         }
       }
 
+      // Additional check for JavaScript reserved words
+      if (isReservedWord(s)) {
+        return false;
+      }
+
+      return true;
+    }
+
+    private static boolean isReservedWord(String s) {
+      switch (s) {
+        case "break":
+        case "case":
+        case "catch":
+        case "class":
+        case "const":
+        case "continue":
+        case "debugger":
+        case "default":
+        case "delete":
+        case "do":
+        case "else":
+        case "export":
+        case "extends":
+        case "finally":
+        case "for":
+        case "function":
+        case "if":
+        case "import":
+        case "in":
+        case "instanceof":
+        case "new":
+        case "return":
+        case "super":
+        case "switch":
+        case "this":
+        case "throw":
+        case "try":
+        case "typeof":
+        case "var":
+        case "void":
+        case "while":
+        case "with":
+        case "yield":
+        case "enum":
+        case "implements":
+        case "interface":
+        case "let":
+        case "package":
+        case "private":
+        case "protected":
+        case "public":
+        case "static":
+        case "yield":
+        case "await":
           return true;
+        default:
+          return false;
+      }
     }
\ No newline at end of file
