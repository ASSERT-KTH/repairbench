diff --git a/tmp/f30376d2-56a6-4641-b3b0-3a3527559e48_buggy.java b/tmp/ac8b1458-a2bc-4d1b-8b7f-46eacdbcf862_fixed.java
index 939f49b..a0c780c 100644
--- a/tmp/f30376d2-56a6-4641-b3b0-3a3527559e48_buggy.java
+++ b/tmp/ac8b1458-a2bc-4d1b-8b7f-46eacdbcf862_fixed.java
@@ -1,21 +1,24 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          Node current = n.getFirstChild();
+          while (current.getType() == Token.GETPROP) {
+            Node propName = current.getFirstChild().getNext();
+            if (propName.getType() == Token.STRING &&
+                propName.getString().equals("prototype")) {
               return true;
             }
+            current = current.getFirstChild();
+          }
         }
       }
 
       return false;
     }
\ No newline at end of file
