diff --git a/tmp/77b4cce8-1dc3-4a30-bc7c-bebea9e1a10c_buggy.java b/tmp/08f4c942-954e-4f8b-bd4b-d408cdedbec3_fixed.java
index 939f49b..1c2413a 100644
--- a/tmp/77b4cce8-1dc3-4a30-bc7c-bebea9e1a10c_buggy.java
+++ b/tmp/08f4c942-954e-4f8b-bd4b-d408cdedbec3_fixed.java
@@ -1,21 +1,22 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+          && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
           Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          while (child != null && child.getType() == Token.GETPROP) {
+            Node propName = child.getLastChild();
+            if (propName.getType() == Token.STRING &&
+                propName.getString().equals("prototype")) {
               return true;
             }
+            child = child.getFirstChild().getNext();
+          }
         }
       }
-
       return false;
     }
\ No newline at end of file
