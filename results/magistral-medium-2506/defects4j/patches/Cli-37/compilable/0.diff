diff --git a/tmp/ba29fe05-ed99-41db-8cd1-ca6f54d14def_buggy.java b/tmp/512b6429-ebc1-4ac9-a61f-695212b56084_fixed.java
index a7e6997..44aad01 100644
--- a/tmp/ba29fe05-ed99-41db-8cd1-ca6f54d14def_buggy.java
+++ b/tmp/512b6429-ebc1-4ac9-a61f-695212b56084_fixed.java
@@ -1,12 +1,38 @@
     /**
      * Tells if the token looks like a short option.
      *
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        if (!token.startsWith("-") || token.length() < 2) {
+            return false;
+        }
+
+        // Check if the character after '-' is a valid short option
+        String potentialOption = token.substring(1, 2);
+        if (!options.hasShortOption(potentialOption)) {
+            return false;
+        }
+
+        // Special case: if the token has more characters and starts with "-X" where X is valid,
+        // but the rest is another option (like -t1 -last case)
+        // So we need to check if the remaining string (after first option) could be another option
+        if (token.length() > 2) {
+            // Check if the remaining string starts with a valid option character
+            String remaining = token.substring(2);
+            if (remaining.startsWith("-")) {
+                // Could be another option if the first character after second '-' is valid
+                if (remaining.length() >= 2 && options.hasShortOption(remaining.substring(1, 2))) {
+                    return false;
+                }
+            }
+            // Also check if the remaining part starts with a short option (Case like -SV)
+            else if (options.hasShortOption(remaining.substring(0, 1))) {
+                return true;
+            }
+        }
 
-        // remove leading "-" and "=value"
+        return true;
     }
\ No newline at end of file
