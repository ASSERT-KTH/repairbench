diff --git a/tmp/4613599c-3ac4-499a-97bd-edeeb444702b_buggy.java b/tmp/835794c2-ba31-4238-b4ae-fcfc395e629d_fixed.java
index e69de29..1288b70 100644
--- a/tmp/4613599c-3ac4-499a-97bd-edeeb444702b_buggy.java
+++ b/tmp/835794c2-ba31-4238-b4ae-fcfc395e629d_fixed.java
@@ -0,0 +1,25 @@
+public Object deserialize(byte[] bytes) throws Exception {
+    ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes)) {
+        @Override
+        protected ObjectStreamClass readClassDescriptor() throws IOException, ClassNotFoundException {
+            ObjectStreamClass desc = super.readClassDescriptor();
+            if (desc.getName().equals("org.apache.commons.collections4.map.MultiValueMap")) {
+                // Add validation for the collectionClass type during deserialization
+                try {
+                    Field field = MultiValueMap.class.getDeclaredField("collectionClass");
+                    field.setAccessible(true);
+                    Class<?> collectionClass = (Class<?>) field.get(this.currentObject);
+                    if (collectionClass != null && !Collection.class.isAssignableFrom(collectionClass)) {
+                        throw new UnsupportedOperationException(
+                            "Unsafe collection class: " + collectionClass.getName());
+                    }
+                } catch (Exception e) {
+                    // Handle reflection errors appropriately
+                    throw new UnsupportedOperationException("Error accessing collection class", e);
+                }
+            }
+            return desc;
+        }
+    };
+    return ois.readObject();
+}
\ No newline at end of file
