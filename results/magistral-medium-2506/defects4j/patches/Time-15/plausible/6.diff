diff --git a/tmp/1c82ec4a-6a3b-4bab-9deb-fd40105ec377_buggy.java b/tmp/9d501742-0733-4d96-828d-f4182daffbfd_fixed.java
index a9a5e27..6e7c22b 100644
--- a/tmp/1c82ec4a-6a3b-4bab-9deb-fd40105ec377_buggy.java
+++ b/tmp/9d501742-0733-4d96-828d-f4182daffbfd_fixed.java
@@ -1,24 +1,24 @@
-    /**
-     * Multiply two values throwing an exception if overflow occurs.
-     * 
-     * @param val1  the first value
-     * @param val2  the second value
-     * @return the new total
-     * @throws ArithmeticException if the value is too big or too small
-     * @since 1.2
-     */
 public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                return -val1;
-            case 0:
+    if (val2 == 0) {
         return 0L;
-            case 1:
+    }
+    if (val2 == 1) {
         return val1;
     }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+    if (val2 == -1) {
+        if (val1 == Long.MIN_VALUE) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * -1");
+        }
+        return -val1;
+    }
+    if (val2 == Integer.MIN_VALUE) {
+        if (val1 != 0 && val1 != 1 && val1 != -1) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        }
+    }
+    long result = val1 * val2;
+    if (val2 != 0 && result / val2 != val1) {
         throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
-        return total;
+    return result;
 }
\ No newline at end of file
