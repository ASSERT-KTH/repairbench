diff --git a/tmp/ce8dce91-35d5-4b43-8ecc-54f1521cb5cd_buggy.java b/tmp/e758c90c-5d60-489f-83c6-48bbba0b8d67_fixed.java
index b56897c..19837ff 100644
--- a/tmp/ce8dce91-35d5-4b43-8ecc-54f1521cb5cd_buggy.java
+++ b/tmp/e758c90c-5d60-489f-83c6-48bbba0b8d67_fixed.java
@@ -1,27 +1,33 @@
 @Override
 public boolean apply(Node n) {
   // When the node is null it means, we reached the implicit return
   // where the function returns (possibly without an return statement)
   if (n == null) {
     return false;
   }
 
   // TODO(user): We only care about calls to functions that
   // passes one of the dependent variable to a non-side-effect free
   // function.
   if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
+    // Special case: 'in' operator is not considered to have side effects
+    if (n.getFirstChild() != null) {
+      String name = NodeUtil.getName(n.getFirstChild());
+      if ("in".equals(name)) {
+        return false;
+      }
+    }
     return true;
   }
 
   if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
     return true;
   }
 
-
   for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
     if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
       return true;
     }
   }
   return false;
 }
\ No newline at end of file
