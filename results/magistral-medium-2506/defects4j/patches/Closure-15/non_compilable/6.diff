diff --git a/tmp/3a9b755a-5e8e-4632-8a46-ca7fc430c5bc_buggy.java b/tmp/828206e7-d5db-48ff-998a-e38516efd461_fixed.java
index b56897c..f7ef792 100644
--- a/tmp/3a9b755a-5e8e-4632-8a46-ca7fc430c5bc_buggy.java
+++ b/tmp/828206e7-d5db-48ff-998a-e38516efd461_fixed.java
@@ -1,27 +1,31 @@
       @Override
       public boolean apply(Node n) {
         // When the node is null it means, we reached the implicit return
         // where the function returns (possibly without an return statement)
         if (n == null) {
           return false;
         }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+        // Check for 'in' operator and other potential side-effect cases
+        if (n.isToken()) {
+          Token token = n.getToken();
+          if (token == Token.IN) {
+            return true;
+          }
+        }
+
         if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
           return true;
         }
 
         if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
           return true;
         }
 
-
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
           }
         }
         return false;
       }
\ No newline at end of file
