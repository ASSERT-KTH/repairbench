diff --git a/tmp/be452d2b-fc04-4606-9285-ffe4255d1978_buggy.java b/tmp/b5719f86-bad5-471c-b958-ba7fd6f37337_fixed.java
index 8e93a5e..9d40cc2 100644
--- a/tmp/be452d2b-fc04-4606-9285-ffe4255d1978_buggy.java
+++ b/tmp/b5719f86-bad5-471c-b958-ba7fd6f37337_fixed.java
@@ -1,43 +1,43 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, nextLineTabStop);
 
         if (pos == -1)
         {
             sb.append(text);
+            return sb;
+        }
 
+        // check if we're wrapping at the padding position
+        if (pos <= padding.length()) {
+            // if so, just move past the padding
+            pos = padding.length() + findWrapPos(text.substring(padding.length()),
+                                               width, 0);
+            if (pos == padding.length() + (-1)) {
+                sb.append(text);
                 return sb;
             }
+            pos = padding.length() + findWrapPos(text.substring(padding.length()),
+                                               width, 0);
+        }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
