diff --git a/tmp/7a310e2f-a848-443b-8a0e-e01ef2467462_buggy.java b/tmp/84b1a569-9da3-4881-a377-b1bf994e20e9_fixed.java
index e1fc51f..8394097 100644
--- a/tmp/7a310e2f-a848-443b-8a0e-e01ef2467462_buggy.java
+++ b/tmp/84b1a569-9da3-4881-a377-b1bf994e20e9_fixed.java
@@ -1,9 +1,20 @@
 public boolean hasSameMethod(Invocation candidate) {
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    if (m1.equals(m2)) {
+        return true;
+    }
+
+    // Handle cases where generics cause different method objects to be equals
+    try {
+        return m1.getName().equals(m2.getName()) &&
+               Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes()) &&
+               m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass()) ||
+               m2.getDeclaringClass().isAssignableFrom(m1.getDeclaringClass());
+    } catch (Exception e) {
+        return false;
+    }
 }
\ No newline at end of file
