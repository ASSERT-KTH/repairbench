diff --git a/tmp/ebfb6b22-3e0e-44fc-a684-9c8c36116044_buggy.java b/tmp/5f4d0f01-529b-47b0-a82f-f5badf1cb5ef_fixed.java
index 99141e0..ad7ebda 100644
--- a/tmp/ebfb6b22-3e0e-44fc-a684-9c8c36116044_buggy.java
+++ b/tmp/5f4d0f01-529b-47b0-a82f-f5badf1cb5ef_fixed.java
@@ -1,33 +1,42 @@
 static String unescape(String string) {
     if (!string.contains("&"))
         return string;
 
     Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
     StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
     // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
 
     while (m.find()) {
         int charval = -1;
         String num = m.group(3);
         if (num != null) {
             try {
                 int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                 charval = Integer.valueOf(num, base);
             } catch (NumberFormatException e) {
             } // skip
         } else {
             String name = m.group(1);
             if (full.containsKey(name))
                 charval = full.get(name);
         }
 
-            if (charval != -1 || charval > 0xFFFF) { // out of range
+        if (charval != -1) {
+            if (charval <= 0xFFFF) {
                 String c = Character.toString((char) charval);
-                m.appendReplacement(accum, c);
+                m.appendReplacement(accum, Matcher.quoteReplacement(c));
             } else {
-                m.appendReplacement(accum, m.group(0));
+                // Handle characters outside BMP (like emoji) by using surrogate pairs
+                charval -= 0x10000;
+                char high = (char) ((charval >> 10) + 0xD800);
+                char low = (char) ((charval % 0x400) + 0xDC00);
+                String c = new String(new char[]{high, low});
+                m.appendReplacement(accum, Matcher.quoteReplacement(c));
+            }
+        } else {
+            m.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));
         }
     }
     m.appendTail(accum);
     return accum.toString();
 }
\ No newline at end of file
