diff --git a/tmp/8404f744-b338-4a32-9543-69cb545f14f5_buggy.java b/tmp/41a21f27-aa34-4bef-bf31-5d5921807c99_fixed.java
index d4e6d48..f291909 100644
--- a/tmp/8404f744-b338-4a32-9543-69cb545f14f5_buggy.java
+++ b/tmp/41a21f27-aa34-4bef-bf31-5d5921807c99_fixed.java
@@ -1,23 +1,27 @@
   private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
       // Fold String(a) to '' + (a) on immutable literals,
       // which allows further optimizations
       //
       // We can't do this in the general case, because String(a) has
       // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
+      // http://code.google.com/p/closure-compiler/issues.detail?id=759
       Node value = callTarget.getNext();
-      if (value != null) {
+      if (value != null &&
+          (value.is QualifiedName() ||
+           value.isNumber() ||
+           value.isString()) &&
+          callTarget.getNext().getNext() == null) {
         Node addition = IR.add(
             IR.string("").srcref(callTarget),
             value.detachFromParent());
         n.getParent().replaceChild(n, addition);
         reportCodeChange();
         return addition;
       }
     }
     return n;
   }
\ No newline at end of file
