diff --git a/tmp/badd4d7b-3cf4-4566-9838-695561feef11_buggy.java b/tmp/50b5ddd6-4c94-4d6d-9901-9ad032f9de7b_fixed.java
index 57f69c5..14ab7c6 100644
--- a/tmp/badd4d7b-3cf4-4566-9838-695561feef11_buggy.java
+++ b/tmp/50b5ddd6-4c94-4d6d-9901-9ad032f9de7b_fixed.java
@@ -1,12 +1,20 @@
-  /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
-   */
   private boolean isOneExactlyFunctionOrDo(Node n) {
       // For labels with block children, we need to ensure that a
       // labeled FUNCTION or DO isn't generated when extraneous BLOCKs
       // are skipped.
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+      // First check if it's directly a FUNCTION or DO node
+      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+        return true;
+      }
+      // Then check if it's a LABEL with a child that's a FUNCTION or DO
+      if (n.isLabel() && n.hasOneChild()) {
+        Node child = n.getFirstChild();
+        // If the child is a BLOCK with one grandchild that's FUNCTION/DO
+        if (child.isBlock() && child.hasOneChild()) {
+          Node grandchild = child.getFirstChild();
+          return grandchild.getType() == Token.FUNCTION || grandchild.getType() == Token.DO;
+        }
+        return child.getType() == Token.FUNCTION || child.getType() == Token.DO;
+      }
+      return false;
   }
\ No newline at end of file
