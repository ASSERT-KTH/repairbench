diff --git a/tmp/dd06b1dc-d826-4b8e-9cf5-f62a0a06091c_buggy.java b/tmp/7257acd3-231c-4a1c-bb2d-8934ecf9b38e_fixed.java
index bfa2423..ca0e468 100644
--- a/tmp/dd06b1dc-d826-4b8e-9cf5-f62a0a06091c_buggy.java
+++ b/tmp/7257acd3-231c-4a1c-bb2d-8934ecf9b38e_fixed.java
@@ -1,23 +1,25 @@
     /**
      * Generate a random sample from the distribution.
      *
      * @param sampleSize the number of random values to generate.
      * @return an array representing the random sample.
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        @SuppressWarnings("unchecked")
+        final T[] out = (T[]) java.lang.reflect.Array.newInstance(
+                (Class<?>) ((java.lang.Object) singletons.get(0)).getClass(),
+                sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
 
         return out;
-
     }
\ No newline at end of file
