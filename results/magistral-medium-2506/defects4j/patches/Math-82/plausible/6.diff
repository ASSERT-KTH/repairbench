diff --git a/tmp/f3ec6135-c3cc-4f81-a74c-1d97e75c2ae1_buggy.java b/tmp/e57ee659-b222-444d-bf51-c92f8cf7b5a7_fixed.java
index 220820e..1d3f9f2 100644
--- a/tmp/f3ec6135-c3cc-4f81-a74c-1d97e75c2ae1_buggy.java
+++ b/tmp/e57ee659-b222-444d-bf51-c92f8cf7b5a7_fixed.java
@@ -1,22 +1,16 @@
-    /**
-     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
-     * @param tableau simple tableau for the problem
-     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
-     * @return row with the minimum ratio
-     */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
         double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {  // Changed to > 0
                 final double ratio = rhs / entry;
-                if (ratio < minRatio) {
+                if (ratio >= 0 && ratio < minRatio) {  // Added ratio >= 0 condition
                     minRatio = ratio;
                     minRatioPos = i;
                 }
             }
         }
         return minRatioPos;
     }
\ No newline at end of file
