diff --git a/tmp/bd886d52-83ad-41d7-8d55-d370d3b28c8c_buggy.java b/tmp/18fe13e7-a592-4d52-a295-12b937cc4a4a_fixed.java
index d926eea..9d45ebb 100644
--- a/tmp/bd886d52-83ad-41d7-8d55-d370d3b28c8c_buggy.java
+++ b/tmp/18fe13e7-a592-4d52-a295-12b937cc4a4a_fixed.java
@@ -1,48 +1,49 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
     // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
     // First: custom pattern will override things
             if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                             || format.hasLocale() || format.hasTimeZone()) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
         final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
         df.setTimeZone(tz);
         return withFormat(Boolean.FALSE, df);
     }
 
-        // Otherwise, need one of these changes:
+    // Otherwise, check if there's a default date format configured
+    DateFormat defaultFormat = serializers.getConfig().getDateFormat();
+    if (defaultFormat instanceof SimpleDateFormat) {
+        SimpleDateFormat df = (SimpleDateFormat) defaultFormat.clone();
+        TimeZone tz = format.getTimeZone();
+        if (tz != null) {
+            df.setTimeZone(tz);
+        }
+        return withFormat(Boolean.FALSE, df);
+    }
 
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
     return this;
 }
\ No newline at end of file
