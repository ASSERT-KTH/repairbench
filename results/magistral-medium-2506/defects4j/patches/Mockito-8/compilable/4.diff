diff --git a/tmp/62470116-7767-4556-b91e-b7fad9af8919_buggy.java b/tmp/d937821b-9e12-4d3b-ac9d-bfdeef528f7c_fixed.java
index 42b58d0..3d84339 100644
--- a/tmp/62470116-7767-4556-b91e-b7fad9af8919_buggy.java
+++ b/tmp/d937821b-9e12-4d3b-ac9d-bfdeef528f7c_fixed.java
@@ -1,19 +1,34 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    TypeVariable[] typeParameters;
+    if (rawType instanceof Class) {
+        typeParameters = ((Class<?>) rawType).getTypeParameters();
+    } else if (rawType instanceof ParameterizedType) {
+        // Handle recursive case where raw type is itself a parameterized type
+        registerTypeVariablesOn(rawType);
+        return;
+    } else {
+        return;
+    }
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
+        if (i >= typeParameters.length) {
+            break; // prevent array index out of bounds if typeParameters is shorter
+        }
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Handle case where actual type argument is another type variable
+            registerTypeVariablesOn(actualTypeArgument);
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
