diff --git a/tmp/daaa7db2-99a1-4f10-a66d-48ee8ce2dda7_buggy.java b/tmp/ab37a70f-8131-447b-b8b6-e7d44fbba29a_fixed.java
index 42b58d0..968e3e8 100644
--- a/tmp/daaa7db2-99a1-4f10-a66d-48ee8ce2dda7_buggy.java
+++ b/tmp/ab37a70f-8131-447b-b8b6-e7d44fbba29a_fixed.java
@@ -1,19 +1,29 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    if (!(rawType instanceof Class)) {
+        return;
+    }
+    TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
+
+    // Prevent infinite recursion by checking if we've already processed this type
+    if (contextualActualTypeParameters.containsKey(parameterizedType)) {
+        return;
+    }
+    contextualActualTypeParameters.put(parameterizedType, parameterizedType); // Mark as processed
+
+    for (int i = 0; i < typeParameters.length && i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
