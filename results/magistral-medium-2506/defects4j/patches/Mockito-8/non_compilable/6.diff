diff --git a/tmp/45538488-563d-41b4-9e52-e62e401a3a67_buggy.java b/tmp/4b52df9a-fc63-42e5-a166-1067bd48a6ef_fixed.java
index 42b58d0..75a457c 100644
--- a/tmp/45538488-563d-41b4-9e52-e62e401a3a67_buggy.java
+++ b/tmp/4b52df9a-fc63-42e5-a166-1067bd48a6ef_fixed.java
@@ -1,19 +1,30 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    if (!(rawType instanceof Class<?>) || contextualActualTypeParameters.containsKey(rawType)) {
+        return;
+    }
+    TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Handle type variables by looking them up in the context
+            Type resolvedType = contextualActualTypeParameters.get(actualTypeArgument);
+            if (resolvedType != null) {
+                contextualActualTypeParameters.put(typeParameter, resolvedType);
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+        } else {
+            contextualActualTypeArguments.put(typeParameter, actualTypeArgument);
+        }
     }
 }
\ No newline at end of file
