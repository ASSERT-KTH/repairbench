diff --git a/tmp/ac55eb1f-b2d2-408e-aee8-b802c7b3134c_buggy.java b/tmp/4065084f-d050-4528-bf47-1ce3953c398e_fixed.java
index 3cb9232..fcaff8c 100644
--- a/tmp/ac55eb1f-b2d2-408e-aee8-b802c7b3134c_buggy.java
+++ b/tmp/4065084f-d050-4528-bf47-1ce3953c398e_fixed.java
@@ -1,26 +1,36 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
             /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
              *   it's actually bit tricky to do it more efficiently (meta-annotations
              *   add more lookups; AnnotationMap costs etc)
              */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
             return null;
         }
     }
+    // Additional check for JsonUnwrapped annotation
+    if (name == null || name.isEmpty()) {
+        JsonUnwrapped unwrapped = _findAnnotation(a, JsonUnwrapped.class);
+        if (unwrapped != null) {
+            name = unwrapped.prefix();
+            if (name.isEmpty()) {
+                return null; // Unwrapped properties shouldn't serialize their container property
+            }
+        }
+    }
     return PropertyName.construct(name);
 }
\ No newline at end of file
