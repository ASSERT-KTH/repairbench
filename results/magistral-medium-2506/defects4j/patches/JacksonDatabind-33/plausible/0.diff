diff --git a/tmp/1bef4870-f308-4b20-bf28-a230e80bfd2f_buggy.java b/tmp/8ecf46fa-85a7-4add-8c9e-bf4d89dd02f1_fixed.java
index 3cb9232..7a53ce7 100644
--- a/tmp/1bef4870-f308-4b20-bf28-a230e80bfd2f_buggy.java
+++ b/tmp/8ecf46fa-85a7-4add-8c9e-bf4d89dd02f1_fixed.java
@@ -1,26 +1,26 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
 
-        JsonGetter jg = _findAnnotation(a, JsonGetter.class);
-        if (jg != null) {
-            name = jg.value();
-        } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
+        } else if (_hasAnnotation(a, JsonUnwrapped.class)) {
+            // Special handling for unwrapped properties
+            return PropertyName.USE_DEFAULT;
+        } else if (_findAnnotation(a, JsonGetter.class) != null) {
+            name = "";
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
             return null;
         }
+
+        if (name != null) {
+            return PropertyName.construct(name.isEmpty() ? null : name);
         }
-        return PropertyName.construct(name);
+        return null;
     }
\ No newline at end of file
