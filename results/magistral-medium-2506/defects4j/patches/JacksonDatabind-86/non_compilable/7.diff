diff --git a/tmp/539c495b-ab62-4536-bcbc-92accbb8dde3_buggy.java b/tmp/2a5c57af-812b-4c96-80da-26f0ec2dcb30_fixed.java
index e69de29..6d469a3 100644
--- a/tmp/539c495b-ab62-4536-bcbc-92accbb8dde3_buggy.java
+++ b/tmp/2a5c57af-812b-4c96-80da-26f0ec2dcb30_fixed.java
@@ -0,0 +1,47 @@
+public JavaType constructType(Type type) {
+    // Existing implementation start
+    JavaType result;
+
+    // Check if we already have this type in cache
+    if (type instanceof Class<?>) {
+        Class<?> cls = (Class<?>) type;
+        // First try to find from cache (may be incomplete)
+        result = _typeCache.get(cls);
+        if (result != null) {
+            // Verify completeness if it's a recursive type
+            if (result.isRecursive()) {
+                RecursiveTypeHander handler = new RecursiveTypeHander(this);
+                result = handler.resolveed(result);
+            }
+            return result;
+        }
+
+        // Construct eagerly if not found in cache
+        result = _fromClass(_typeSource,
+                cls, cls.getTypeParameters(),
+                getBindingsForTypeParameters(cls));
+    } else if (type instanceof ParameterizedType) {
+        ParameterizedType pt = (ParameterizedType) type;
+        Class<?> rawClass = (Class<?>) pt.getRawType();
+        // Similar handling for ParameterizedType
+        result = _fromParamType(_typeSource,
+                pt, rawClass, pt.getActualTypeArguments());
+    } else if (type instanceof JavaType) {
+        return (JavaType) type;
+    } else {
+        result = _fromAny(_typeSource, type, null);
+    }
+
+    // Ensure recursive types are properly resolved
+    if (result.isRecursive()) {
+        RecursiveTypeHander handler = new RecursiveTypeHander(this);
+        result = handler.resolveRecursive(result);
+    }
+
+    // Cache the result if it's a class type (most common case)
+    if (type instanceof Class<?> && !result.incomplete()) {
+        _typeCache.put((Class<?>) type, result);
+    }
+
+    return result;
+}
\ No newline at end of file
