diff --git a/tmp/2a7b1bd8-4992-4941-86cc-3002b343d127_buggy.java b/tmp/e5d325fd-e35c-40f8-a04b-5a7e47873ca3_fixed.java
index 10616db..2b48311 100644
--- a/tmp/2a7b1bd8-4992-4941-86cc-3002b343d127_buggy.java
+++ b/tmp/e5d325fd-e35c-40f8-a04b-5a7e47873ca3_fixed.java
@@ -1,19 +1,42 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
+        // Create a helper field to determine if we're dealing with a month-day scenario
+        boolean isMonthDay = partial.size() == 2 &&
+                           partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&
+                           partial.getFieldType(1) == DateTimeFieldType.dayOfMonth();
+
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+
+        // Handle month-day cases specially for leap days
+        if (isMonthDay && partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&
+            values[1] == 29 && values[0] == 2) {
+            // Get the resulting instant first
+            long resultInstant = add(instant, valueToAdd);
+
+            // Check if the day would be invalid in the resulting month
+            int newMonth = iChronology.monthOfYear().get(resultInstant);
+            int year = iChronology.year().get(0L); // Get any year to check max day
+            int maxDay = iChronology.dayOfMonth().getMaximumValueForSet(instant, newMonth);
+
+            if (maxDay < values[1]) {
+                // Day is too large for new month, set to last day of month
+                return new int[] {newMonth, maxDay};
+            }
+        }
+
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
