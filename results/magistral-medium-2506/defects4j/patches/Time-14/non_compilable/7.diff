diff --git a/tmp/7560582f-ce93-4165-8592-7791a33e9333_buggy.java b/tmp/d3d2f7d0-2faf-4726-8c29-a6b27fd62877_fixed.java
index 10616db..6f534cb 100644
--- a/tmp/7560582f-ce93-4165-8592-7791a33e9333_buggy.java
+++ b/tmp/d3d2f7d0-2faf-4726-8c29-a6b27fd62877_fixed.java
@@ -1,19 +1,31 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] newValues = iChronology.get(partial, instant);
+
+            // Handle the case where dayOfMonth is not valid for the month
+            if (partial.getFieldType(0) == DateTimeFieldType.dayOfMonth() &&
+                partial.getFieldType(1) == DateTimeFieldType.monthOfYear()) {
+                int month = newValues[1];
+                int day = newValues[0];
+                int maxDay = DateTimeUtils.daysInMonth(month, valueToAdd > 0 ? 2004 : 2000); // Use leap year if adding, non-leap if subtracting
+                if (day > maxDay) {
+                    newValues[0] = maxDay; // Adjust day to last day of month
+                }
+            }
+            return newValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
