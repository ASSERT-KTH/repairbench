diff --git a/tmp/ba62c563-2ec7-46b2-8daf-ebd7ef7a57f5_buggy.java b/tmp/a9613834-f1c4-4ae3-aaf1-7817d0b741c0_fixed.java
index 10616db..ac6c539 100644
--- a/tmp/ba62c563-2ec7-46b2-8daf-ebd7ef7a57f5_buggy.java
+++ b/tmp/a9613834-f1c4-4ae3-aaf1-7817d0b741c0_fixed.java
@@ -1,19 +1,38 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+            // Get the partial values after addition
+            int[] newValues = iChronology.get(partial, instant);
+
+            // For month-day case, handle invalid days (like Feb 29 in non-leap years)
+            if (partial.size() == 2 &&
+                partial.getFieldType(0).equals(monthOfYear()) &&
+                partial.getFieldType(1).equals(dayOfMonth())) {
+                int year = 2000; // Use a leap year as base
+                long testInstant = iChronology.year().set(0L, year);
+                testInstant = iChronology.monthOfYear().set(testInstant, newValues[0]);
+                try {
+                    testInstant = iChronology.dayOfMonth().set(testInstant, newValues[1]);
+                } catch (IllegalFieldValueException ex) {
+                    // If the day is invalid (like Feb 29 in non-leap year), use the last day of month
+                    int daysInMonth = iChronology.getDaysInMonth(partial.getFieldType(0), newValues[0], year);
+                    newValues[1] = daysInMonth;
+                }
+            }
+            return newValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
