diff --git a/tmp/d8a3aaf1-1bf8-4445-9736-36035173ea38_buggy.java b/tmp/343d3ec6-299a-407f-8d4e-aa20cbe7be12_fixed.java
index 10616db..20b8cf8 100644
--- a/tmp/d8a3aaf1-1bf8-4445-9736-36035173ea38_buggy.java
+++ b/tmp/343d3ec6-299a-407f-8d4e-aa20cbe7be12_fixed.java
@@ -1,19 +1,53 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
+            if (partial.size() == 2 &&
+                partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&
+                partial.getFieldType(1) == DateTimeFieldType.dayOfMonth()) {
+                // Handle month-day specially for leap day cases
+                int month = values[0];
+                int dayOfMonth = values[1];
+                int newMonth = month + valueToAdd;
+
+                // Adjust the year to handle month overflow correctly
+                int year = 2004; // a leap year, safe for our purposes
+
+                if (newMonth > 12 || newMonth < 1) {
+                    // Normalize month and adjust year
+                    int yearAdjust = (newMonth - 1) / 12;
+                    newMonth = newMonth - (yearAdjust * 12);
+                    if (newMonth < 1) {
+                        newMonth += 12;
+                        yearAdjust -= 1;
+                    } else if (newMonth > 12) {
+                        newMonth -= 12;
+                        yearAdjust += 1;
+                    }
+                    year += yearAdjust;
+                }
+
+                // Validate the day against the new month
+                int maxDay = iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth()).getMaximumValueForSet(year, newMonth, 1);
+                if (dayOfMonth > maxDay) {
+                    dayOfMonth = maxDay; // adjust to last day of month
+                }
+
+                return new int[] {newMonth, dayOfMonth};
+            } else {
                 long instant = 0L;
                 for (int i = 0, isize = partial.size(); i < isize; i++) {
                     instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
                 }
                 instant = add(instant, valueToAdd);
                 return iChronology.get(partial, instant);
+            }
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
