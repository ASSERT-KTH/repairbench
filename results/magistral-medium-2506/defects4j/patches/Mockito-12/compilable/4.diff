diff --git a/tmp/3a777dbc-7741-4fe8-bd8c-561ee9f5df0d_buggy.java b/tmp/f9f0e4ea-f5d5-4871-91bb-542e0dd9f847_fixed.java
index bada2b6..6170eec 100644
--- a/tmp/3a777dbc-7741-4fe8-bd8c-561ee9f5df0d_buggy.java
+++ b/tmp/f9f0e4ea-f5d5-4871-91bb-542e0dd9f847_fixed.java
@@ -1,16 +1,22 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
      *
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {
         Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (generic instanceof ParameterizedType) {
+            ParameterizedType pt = (ParameterizedType) generic;
+            Type actual = pt.getActualTypeArguments()[0];
+            if (actual instanceof Class) {
+                return (Class<?>) actual;
+            } else if (actual instanceof ParameterizedType) {
+                // Return the raw type for nested generics
+                return (Class<?>) ((ParameterizedType) actual).getRawType();
+            }
+        } else if (generic instanceof Class) {
+            return (Class<?>) generic;
         }
-        
         return Object.class;
     }
\ No newline at end of file
