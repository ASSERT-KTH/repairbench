diff --git a/tmp/115a83b3-e635-497c-b01d-da4fb6bae57d_buggy.java b/tmp/25300ba4-9cc5-4edc-bf83-ed6506b85d75_fixed.java
index bada2b6..50ca60d 100644
--- a/tmp/115a83b3-e635-497c-b01d-da4fb6bae57d_buggy.java
+++ b/tmp/25300ba4-9cc5-4edc-bf83-ed6506b85d75_fixed.java
@@ -1,16 +1,21 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
      *
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
+    public Class<?> getGenericType(Field field) {
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            if (actual instanceof Class) {
+                return (Class<?>) actual;
+            } else if (actual instanceof ParameterizedType) {
+                // Handle nested generic types by getting the raw type
+                return (Class<?>) ((ParameterizedType) actual).getRawType();
+            }
+            // For other cases, return Object.class
+            return Object.class;
         }
-        
         return Object.class;
     }
\ No newline at end of file
