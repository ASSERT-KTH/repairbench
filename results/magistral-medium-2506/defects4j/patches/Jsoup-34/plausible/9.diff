diff --git a/tmp/e2c9f83f-00c2-487f-8629-5c1ef5a82233_buggy.java b/tmp/18da2561-6d94-4c4a-ad98-fd3b07eddb23_fixed.java
index 21f64c6..e6f042e 100644
--- a/tmp/e2c9f83f-00c2-487f-8629-5c1ef5a82233_buggy.java
+++ b/tmp/18da2561-6d94-4c4a-ad98-fd3b07eddb23_fixed.java
@@ -1,23 +1,35 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
+        int seqLength = seq.length();
+        if (seqLength == 0) {
+            return 0; // empty sequence matches current position
+        }
+
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
+            if (startChar != input[offset]) {
                 while (++offset < length && startChar != input[offset]);
+                if (offset >= length) break; // prevent out of bounds
+            }
+
             int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            int last = i + seqLength - 1;
+            if (last > length) { // check if sequence would go beyond input length
+                return -1;
+            }
+
+            boolean match = true;
+            for (int j = 1; j < seqLength; j++) {
+                if (i + j - 1 >= length || seq.charAt(j) != input[i + j - 1]) {
+                    match = false;
+                    break;
+                }
+            }
+
+            if (match) { // found full sequence
                 return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
