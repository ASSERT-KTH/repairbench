diff --git a/tmp/d902f094-7a91-4ecb-bd10-eb3a9e9edb41_buggy.java b/tmp/e7cebddb-2768-4d2f-abc6-ae398b6c9969_fixed.java
index 21f64c6..9b91e1b 100644
--- a/tmp/d902f094-7a91-4ecb-bd10-eb3a9e9edb41_buggy.java
+++ b/tmp/e7cebddb-2768-4d2f-abc6-ae398b6c9969_fixed.java
@@ -1,23 +1,25 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
+        if (seq.length() == 0) {
+            return 0;
+        }
+
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
+
             int i = offset + 1;
             int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+            if (last <= length) { // check if we can read all chars without going out of bounds
+                int j = 1;
+                while (i < last && seq.charAt(j) == input[i]) {
+                    i++;
+                    j++;
+                }
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
