diff --git a/tmp/2590a099-10f1-4566-9fa0-62ed85f94e06_buggy.java b/tmp/034dc8c0-178c-4d99-a7dc-962cdc43a9d4_fixed.java
index 544303b..e3bb7a0 100644
--- a/tmp/2590a099-10f1-4566-9fa0-62ed85f94e06_buggy.java
+++ b/tmp/034dc8c0-178c-4d99-a7dc-962cdc43a9d4_fixed.java
@@ -1,29 +1,34 @@
     /**
      * Get the current solution.
      * <p>
      * {@link #solve} should be called first for this to be the optimal solution.
      * </p>
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
             // if multiple variables can take a given value
             // then we choose the first and set the rest equal to 0
             coefficients[i] =
                 (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                 (restrictToNonNegative ? 0 : mostNegative);
+
+            // Fix: Only check columns for our current variable (i), not all previous ones
             if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                int currentVarIndex = getNumObjectiveFunctions() + i;
+                if (tableau.getEntry(basicRow, currentVarIndex) == 1) {
+                    // This was a basic variable, so we already have its value
+                    // No need to set to 0 in this case
+                } else {
+                    // If this variable is not the basic variable for this row, set to 0
                     coefficients[i] = 0;
                 }
             }
         }
-        }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
