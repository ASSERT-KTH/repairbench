diff --git a/tmp/901ed73e-5e63-4dab-8fbb-d15f140593b9_buggy.java b/tmp/948bf2e2-0b6d-4fce-b1e7-0084358c0b0c_fixed.java
index ec6c9ee..63be493 100644
--- a/tmp/901ed73e-5e63-4dab-8fbb-d15f140593b9_buggy.java
+++ b/tmp/948bf2e2-0b6d-4fce-b1e7-0084358c0b0c_fixed.java
@@ -1,21 +1,28 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
+            // Check if we have enough elements after the separator
+            if (size <= 2) {
+                throw new IllegalStateException("Separator requires at least one element pair after it");
+            }
             Separator sep = (Separator) elementPairs.get(0);
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
+        } else if (size == 0) {
+            throw new IllegalStateException("Builder has not added any elements to format");
         }
+
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
