diff --git a/tmp/c656a313-a2ac-4559-9677-1cd37ab489bb_buggy.java b/tmp/9d127813-ca70-483a-a4e8-55bafd4c0745_fixed.java
index 4b7f469..a2854a1 100644
--- a/tmp/c656a313-a2ac-4559-9677-1cd37ab489bb_buggy.java
+++ b/tmp/9d127813-ca70-483a-a4e8-55bafd4c0745_fixed.java
@@ -1,10 +1,37 @@
   static boolean isSimpleNumber(String s) {
-    int len = s.length();
-    for (int index = 0; index < len; index++) {
-      char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+    if (s.length() == 0) return false;
+
+    // Check for hexadecimal (0x or 0X prefix)
+    if (s.startsWith("0x") || s.startsWith("0X")) {
+      if (s.length() < 3) return false; // Need at least "0x" + 1 digit
+      for (int i = 2; i < s.length(); i++) {
+        char c = s.charAt(i);
+        if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
           return false;
         }
       }
-    return len > 0;
+      return true;
+    }
+
+    // Check for decimal (including possible leading/trailing decimal point)
+    boolean hasDecimalPoint = false;
+    boolean hasDigit = false;
+
+    for (int i = 0; i < s.length(); i++) {
+      char c = s.charAt(i);
+      if (c == '.') {
+        if (hasDecimalPoint) return false; // Multiple decimal points
+        hasDecimalPoint = true;
+      } else if (c >= '0' && c <= '9') {
+        hasDigit = true;
+      } else {
+        return false;
+      }
+    }
+
+    // Must have at least one digit
+    if (!hasDigit) return false;
+
+    // Leading zero is OK unless it would be interpreted as octal (which we skip here)
+    return true;
   }
\ No newline at end of file
