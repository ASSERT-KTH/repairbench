diff --git a/tmp/17509796-3067-45d1-be5f-4d1209b5ce1b_buggy.java b/tmp/4a8bc7a2-54ec-4c04-90bb-b275e5d5dd83_fixed.java
index 4b7f469..0796a7d 100644
--- a/tmp/17509796-3067-45d1-be5f-4d1209b5ce1b_buggy.java
+++ b/tmp/4a8bc7a2-54ec-4c04-90bb-b275e5d5dd83_fixed.java
@@ -1,10 +1,35 @@
   static boolean isSimpleNumber(String s) {
     int len = s.length();
+    if (len == 0) return false;
+
+    // Check if the string is a simple decimal number with no leading zeros
+    // (unless the number is 0 itself)
+    if (s.length() > 1 && s.charAt(0) == '0') {
+      // Special case: "0x" prefix (hex)
+      if (s.length() >= 3 && s.charAt(1) == 'x') {
+        for (int i = 2; i < s.length(); i++) {
+          char c = s.charAt(i);
+          if (!(c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F')) {
+            return false;
+          }
+        }
+        return true;
+      }
+      // Leading zero (not just "0") -> not a simple number
+      if (s.equals("0")) return true;  // But "0" is valid
+      if (s.charAt(1) >= '0' && s.charAt(1) <= '9') return false;
+    }
+
+    // Check if it's a decimal number with optional decimal point
+    boolean hasDecimal = false;
     for (int index = 0; index < len; index++) {
       char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+      if (c == '.') {
+        if (hasDecimal) return false; // multiple decimal points
+        hasDecimal = true;
+      } else if (c < '0' || c > '9') {
         return false;
       }
     }
-    return len > 0;
+    return len > 0; // hasDecimal is allowed in certain contexts per the tests
   }
\ No newline at end of file
