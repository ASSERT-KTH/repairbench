diff --git a/tmp/cf1176f7-5569-46c5-9a12-aca20fdf2530_buggy.java b/tmp/719125a5-c633-4a27-8505-dc8434893585_fixed.java
index 98d89dc..15969c4 100644
--- a/tmp/cf1176f7-5569-46c5-9a12-aca20fdf2530_buggy.java
+++ b/tmp/719125a5-c633-4a27-8505-dc8434893585_fixed.java
@@ -1,23 +1,31 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
+        if (left instanceof Number && right instanceof Number) {
+            double ld = InfoSetUtil.doubleValue(left);
+            double rd = InfoSetUtil.doubleValue(right);
+            if (Double.isNaN(ld) || Double.isNaN(rd)) {
+                return evaluateCompare(0); // Treat NaN comparisons as equal
+            }
+            return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
+        }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
         return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
     }
\ No newline at end of file
