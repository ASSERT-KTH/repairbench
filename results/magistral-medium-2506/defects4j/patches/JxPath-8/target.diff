diff --git a/tmp/8d4ff0c6-bfd0-425a-aaec-3928a823bc60_buggy.java b/tmp/f2b88537-20a3-4b6d-afb6-08fb02acbdad_fixed.java
index 98d89dc..6822b73 100644
--- a/tmp/8d4ff0c6-bfd0-425a-aaec-3928a823bc60_buggy.java
+++ b/tmp/f2b88537-20a3-4b6d-afb6-08fb02acbdad_fixed.java
@@ -1,23 +1,29 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
+        if (Double.isNaN(ld)) {
+            return false;
+        }
         double rd = InfoSetUtil.doubleValue(right);
+        if (Double.isNaN(rd)) {
+            return false;
+        }
         return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
     }
