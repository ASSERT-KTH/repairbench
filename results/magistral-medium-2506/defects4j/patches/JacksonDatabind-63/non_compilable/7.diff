diff --git a/tmp/396c37ae-d33c-49a1-9b43-15d1a87e931b_buggy.java b/tmp/2882212f-b72e-42c5-bc62-0edbb0aa1117_fixed.java
index f955f47..b4737ac 100644
--- a/tmp/396c37ae-d33c-49a1-9b43-15d1a87e931b_buggy.java
+++ b/tmp/2882212f-b72e-42c5-bc62-0edbb0aa1117_fixed.java
@@ -1,34 +1,48 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
-                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
-                    if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
-                    }
-                    sb.append(cls.getSimpleName());
+                    // Use getCanonicalName() to properly handle inner classes
+                    String className = cls.getCanonicalName();
+                    if (className == null) {
+                        className = cls.getName();
+                    }
+                    // Replace inner class separator with '$'
+                    className = className.replace('/', '$');
+                    // Handle arrays and other special cases
+                    if (className.startsWith("[")) {
+                        // Simplify array notation if needed
+                        int arrayDepth = 0;
+                        while (className.charAt(arrayDepth) == '[') {
+                            arrayDepth++;
+                        }
+                        Class<?> componentType = cls.getComponentType();
+                        if (componentType != null) {
+                            String componentName = componentType.getName();
+                            if (componentName.startsWith("java.lang.")) {
+                                componentName = componentName.substring(10);
+                            }
+                            className = componentName + "[]".repeat(arrayDepth);
+                        }
+                    }
+                    sb.append(className);
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file
