diff --git a/tmp/aec519f4-8d91-4d0c-888f-30e3558b6418_buggy.java b/tmp/b63eb167-8069-468d-bd94-1dfcd5d58808_fixed.java
index f955f47..d5cd30f 100644
--- a/tmp/aec519f4-8d91-4d0c-888f-30e3558b6418_buggy.java
+++ b/tmp/b63eb167-8069-468d-bd94-1dfcd5d58808_fixed.java
@@ -1,34 +1,56 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
+                    String fullName;
+                    if (cls.isArray()) {
+                        fullName = com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription(cls);
+                    } else {
                         String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
+                        String simpleName = cls.getSimpleName();
+                        // Handle inner class names properly
                         if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
+                            fullName = pkgName + '.' + simpleName;
+                        } else {
+                            fullName = simpleName;
                         }
-                    sb.append(cls.getSimpleName());
+                        // For inner classes, we need to include the enclosing class names
+                        if (cls.getEnclosingClass() != null) {
+                            // Recursively get all enclosing classes
+                            Class<?> enclosingClass = cls.getEnclosingClass();
+                            StringBuilder enclosingNames = new StringBuilder();
+                            while (enclosingClass != null) {
+                                if (enclosingNames.length() > 0) {
+                                    enclosingNames.insert(0, '.');
+                                }
+                                enclosingNames.insert(0, enclosingClass.getSimpleName());
+                                enclosingClass = enclosingClass.getEnclosingClass();
+                            }
+                            if (pkgName != null) {
+                                fullName = pkgName + '.' + enclosingNames + '$' + simpleName;
+                            } else {
+                                fullName = enclosingNames + '$' + simpleName;
+                            }
+                        }
+                    }
+                    sb.append(fullName);
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file
