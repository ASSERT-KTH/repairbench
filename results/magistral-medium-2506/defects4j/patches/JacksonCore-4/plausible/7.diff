diff --git a/tmp/130f44d7-3047-4fe8-83d5-c48162e314b8_buggy.java b/tmp/ed88b21a-1eea-4162-8cd5-8dce2c898e17_fixed.java
index c6cb157..402f820 100644
--- a/tmp/130f44d7-3047-4fe8-83d5-c48162e314b8_buggy.java
+++ b/tmp/ed88b21a-1eea-4162-8cd5-8dce2c898e17_fixed.java
@@ -1,14 +1,27 @@
     /**
      * Method called to expand size of the current segment, to
      * accommodate for more contiguous content. Usually only
      * used when parsing tokens like names if even then.
      */
     public char[] expandCurrentSegment()
     {
         final char[] curr = _currentSegment;
         // Let's grow by 50% by default
         final int len = curr.length;
         // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        int newLen;
+        if (len < MAX_SEGMENT_LEN) {
+            newLen = len + (len >> 1);
+            // but limit to max segment length
+            if (newLen > MAX_SEGMENT_LEN) {
+                newLen = MAX_SEGMENT_LEN;
+            }
+        } else {
+            // for lengths >= MAX_SEGMENT_LEN, only increase by 25% (but not over Integer.MAX_VALUE)
+            newLen = len + (len >> 2);
+            if (newLen < 0) { // overflow check
+                newLen = Integer.MAX_VALUE;
+            }
+        }
         return (_currentSegment = Arrays.copyOf(curr, newLen));
     }
\ No newline at end of file
