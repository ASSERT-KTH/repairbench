diff --git a/tmp/c0fafc91-a332-4181-a952-4f4f948328bb_buggy.java b/tmp/3752641f-4dd1-407d-bb20-cb15fa3d4b2a_fixed.java
index 1530b34..48e8851 100644
--- a/tmp/c0fafc91-a332-4181-a952-4f4f948328bb_buggy.java
+++ b/tmp/3752641f-4dd1-407d-bb20-cb15fa3d4b2a_fixed.java
@@ -1,23 +1,35 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+              JSType parameterType = jsDocParameter.getJSType();
+              defineSlot(astParameter, functionNode, parameterType, true);
+              // Store the parameter type in the AST parameter node as well
+              astParameter.setJSType(parameterType);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);
             }
           }
+        } else {
+          // If there's no JSDoc parameters, still declare all parameters with null type
+          for (Node astParameter : astParameters.children()) {
+            defineSlot(astParameter, functionNode, null, true);
+          }
+        }
+      } else {
+        // If there's no function type, still declare all parameters with null type
+        for (Node astParameter : astParameters.children()) {
+          defineSlot(astParameter, functionNode, null, true);
         }
       }
     } // end declareArguments
\ No newline at end of file
