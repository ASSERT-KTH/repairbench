diff --git a/tmp/78ab8a27-e6c3-4358-8b45-2780b9de8af0_buggy.java b/tmp/dc5dd5b1-7be1-425c-8eee-3050de0d10b0_fixed.java
index ae6c2b1..58d36fa 100644
--- a/tmp/78ab8a27-e6c3-4358-8b45-2780b9de8af0_buggy.java
+++ b/tmp/dc5dd5b1-7be1-425c-8eee-3050de0d10b0_fixed.java
@@ -1,10 +1,25 @@
         public int parseInto(DateTimeParserBucket bucket, String text, int position) {
             String str = text.substring(position);
-            for (String id : ALL_IDS) {
+            // Sort ALL_IDS by length in descending order to prefer longer matches
+            List<String> sortedIds = new ArrayList<>(Arrays.asList(ALL_IDS));
+            sortedIds.sort((a, b) -> Integer.compare(b.length(), a.length()));
+
+            for (String id : sortedIds) {
                 if (str.startsWith(id)) {
+                    // Check if the match is part of a longer ID (e.g. "Dawson" vs "Dawson_Creek")
+                    boolean found = true;
+                    for (String longerId : sortedIds) {
+                        if (longerId.length() > id.length() && longerId.startsWith(id) &&
+                            str.startsWith(longerId)) {
+                            found = false;
+                            break;
+                        }
+                    }
+                    if (found) {
                         bucket.setZone(DateTimeZone.forID(id));
                         return position + id.length();
                     }
                 }
+            }
             return ~position;
         }
\ No newline at end of file
