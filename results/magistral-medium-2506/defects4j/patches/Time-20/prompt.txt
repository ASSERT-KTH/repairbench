You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
        public int parseInto(DateTimeParserBucket bucket, String text, int position) {
            String str = text.substring(position);
            for (String id : ALL_IDS) {
                if (str.startsWith(id)) {
                    bucket.setZone(DateTimeZone.forID(id));
                    return position + id.length();
                }
            }
            return ~position;
        }

```

The code fails the following tests.

Test `org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek`:
```java
    public void test_printParseZoneDawsonCreek() {  // clashes with shorter Dawson
        DateTimeFormatterBuilder bld = new DateTimeFormatterBuilder()
            .appendPattern("yyyy-MM-dd HH:mm ").appendTimeZoneId();
        DateTimeFormatter f = bld.toFormatter();
        
        DateTime dt = new DateTime(2007, 3, 4, 12, 30, 0, DateTimeZone.forID("America/Dawson_Creek"));
        assertEquals("2007-03-04 12:30 America/Dawson_Creek", f.print(dt));
        assertEquals(dt, f.parseDateTime("2007-03-04 12:30 America/Dawson_Creek"));
    }

```
Test `org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneDawsonCreek` error:
```
java.lang.IllegalArgumentException: Invalid format: 2007-03-04 12:30 America/Dawson_Creek is malformed at _Creek
```


Please provide a fixed version of the buggy function, and only that function, inside a code block.
