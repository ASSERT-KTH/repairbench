diff --git a/tmp/2173d258-0695-4bd3-8f09-d1eb685dab9d_buggy.java b/tmp/ebbc1c19-2a2b-44bc-8eeb-99c7443bd159_fixed.java
index 3127f85..f68667f 100644
--- a/tmp/2173d258-0695-4bd3-8f09-d1eb685dab9d_buggy.java
+++ b/tmp/ebbc1c19-2a2b-44bc-8eeb-99c7443bd159_fixed.java
@@ -1,24 +1,33 @@
-    /**
-     * For this distribution, {@code X}, this method returns {@code P(X < x)}.
-     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
-     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
-     *
-     * @param x Value at which the CDF is evaluated.
-     * @return CDF evaluated at {@code x}.
-     * @throws MathException if the algorithm fails to converge
-     */
 public double cumulativeProbability(double x) throws MathException {
     final double dev = x - mean;
+    // Handle infinite and extreme values first
+    if (Double.isInfinite(x)) {
+        return x < 0 ? 0.0 : 1.0;
+    }
+    // Handle extreme standard deviations
+    if (standardDeviation == 0) {
+        return x < mean ? 0.0 : 1.0;
+    }
+    // For very large x values, return 0.0 or 1.0 appropriately
+    if (Math.abs(x) > Double.MAX_VALUE * 0.5) { // Adjust threshold as needed
+        return x < mean ? 0.0 : 1.0;
+    }
     try {
-        return 0.5 * (1.0 + Erf.erf((dev) /
-                    (standardDeviation * FastMath.sqrt(2.0))));
+        if (FastMath.abs(dev) > 40 * standardDeviation) {
+            if (x < mean) {
+                return 0.0;
+            } else {
+                return 1.0;
+            }
+        }
+        return 0.5 * (1.0 + Erf.erf((dev) / (standardDeviation * FastMath.sqrt(2.0))));
     } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+        if (x < (mean - 20 * standardDeviation)) {
             return 0;
         } else if (x > (mean + 20 * standardDeviation)) {
             return 1;
         } else {
             throw ex;
         }
     }
 }
\ No newline at end of file
