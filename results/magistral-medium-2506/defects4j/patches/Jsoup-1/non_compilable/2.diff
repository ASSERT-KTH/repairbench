diff --git a/tmp/457c0a88-af9b-469c-acd1-1b1b4ecb9fb5_buggy.java b/tmp/5fbc6456-911f-4ab6-b730-7742aad88951_fixed.java
index 00914da..94d0f27 100644
--- a/tmp/457c0a88-af9b-469c-acd1-1b1b4ecb9fb5_buggy.java
+++ b/tmp/5fbc6456-911f-4ab6-b730-7742aad88951_fixed.java
@@ -1,17 +1,46 @@
     // does not recurse.
     private void normalise(Element element) {
+        if (element == null || element.childNodes() == null) {
+            return;
+        }
+
         List<Node> toMove = new ArrayList<Node>();
-        for (Node node: element.childNodes) {
+        for (Node node : element.childNodes()) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+                if (!tn.isBlank()) {
                     toMove.add(tn);
                 }
             }
+        }
+
+        if (toMove.isEmpty()) {
+            return;
+        }
+
+        // Find the first non-empty text node in the body (or root element)
+        Element root = element.ownerDocument().body();
+        if (root == null) {
+            root = element.ownerDocument();
+        }
+
+        // Insert all nodes before existing content
+        int insertPos = 0;
+        List<Node> bodyChildren = root.childNodes();
+        for (int i = 0; i < bodyChildren.size(); i++) {
+            Node child = bodyChildren.get(i);
+            if (child instanceof TextNode && !((TextNode)child).isBlank()) {
+                insertPos = i;
+                break;
+            }
+        }
 
         for (Node node : toMove) {
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            root.insertChildren(insertPos, Collections.singletonList(node));
+            // Add space after each inserted text node (except if it was the last one)
+            if (toMove.indexOf(node) < toMove.size() - 1) {
+                root.insertChildren(insertPos + 1, Collections.singletonList(new TextNode(" ", "")));
+            }
         }
     }
\ No newline at end of file
