diff --git a/tmp/b61a8567-67f8-4150-acdb-4557879dc731_buggy.java b/tmp/41e4d771-f0e5-4bba-a1c8-3f07556fa7c8_fixed.java
index 00914da..b1a2adc 100644
--- a/tmp/b61a8567-67f8-4150-acdb-4557879dc731_buggy.java
+++ b/tmp/41e4d771-f0e5-4bba-a1c8-3f07556fa7c8_fixed.java
@@ -1,17 +1,24 @@
-    // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node : element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+                if (!tn.isBlank()) {
                     toMove.add(tn);
                 }
             }
+        }
 
+        // Move nodes in order to preserve their original sequence
+        int index = 0;
         for (Node node : toMove) {
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            // Insert at the correct position (beginning) rather than appending
+            if (index == 0 && element.childNodeSize() > 0) {
+                element.insertChildren(0, Collections.singletonList(new TextNode(" ", "")));
+                index++;
+            }
+            element.insertChildren(index, Collections.singletonList(node));
+            index++;
         }
     }
\ No newline at end of file
