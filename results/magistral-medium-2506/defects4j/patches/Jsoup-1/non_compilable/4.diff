diff --git a/tmp/b4f535e5-6954-423f-be09-fa4dd13b78d2_buggy.java b/tmp/3a8f7a4a-5357-43f8-90eb-44cad090171c_fixed.java
index 00914da..2078c49 100644
--- a/tmp/b4f535e5-6954-423f-be09-fa4dd13b78d2_buggy.java
+++ b/tmp/3a8f7a4a-5357-43f8-90eb-44cad090171c_fixed.java
@@ -1,17 +1,19 @@
     // does not recurse.
     private void normalise(Element element) {
-        List<Node> toMove = new ArrayList<Node>();
-        for (Node node: element.childNodes) {
+        List<Node> children = new ArrayList<Node>(element.childNodes()); // copy to avoid concurrent modification
+        for (int i = 0; i < children.size(); i++) {
+            Node node = children.get(i);
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
-                    toMove.add(tn);
-            }
-        }
-
-        for (Node node: toMove) {
+                if (!tn.isBlank()) {
                     element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+                    if (i > 0) {
+                        Node prevNode = children.get(i-1);
+                        element.insertChildren(element.childNodeIndex(prevNode) + 1, Collections.singletonList(tn));
+                    } else {
+                        element.prependChild(tn);
+                    }
+                }
+            }
         }
     }
\ No newline at end of file
