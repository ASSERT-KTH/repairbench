diff --git a/tmp/e8af8a25-9352-48ed-9c37-c59e2ee041a4_buggy.java b/tmp/d00c81f2-9c14-4c12-acb0-e61ac74392a5_fixed.java
index 111ba5e..af18390 100644
--- a/tmp/e8af8a25-9352-48ed-9c37-c59e2ee041a4_buggy.java
+++ b/tmp/d00c81f2-9c14-4c12-acb0-e61ac74392a5_fixed.java
@@ -1,9 +1,39 @@
     public static boolean areEqual(Object o1, Object o2) {
+        if (o1 == o2) {
+            return true;
+        }
         if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
+            return false;
+        }
+        if (isArray(o1)) {
             return isArray(o2) && areArraysEqual(o1, o2);
         } else {
             return o1.equals(o2);
         }
     }
+
+    private static boolean isArray(Object obj) {
+        return obj != null && obj.getClass().isArray();
+    }
+
+    private static boolean areArraysEqual(Object o1, Object o2) {
+        if (o1.getClass() != o2.getClass() && !o1.getClass().getComponentType().isAssignableFrom(o2.getClass().getComponentType())) {
+            // Different array types but elements might be compatible (e.g., int[] vs Integer[])
+            return false;
+        }
+
+        int length1 = java.lang.reflect.Array.getLength(o1);
+        int length2 = java.lang.reflect.Array.getLength(o2);
+        if (length1 != length2) {
+            return false;
+        }
+
+        for (int i = 0; i < length1; i++) {
+            Object elem1 = java.lang.reflect.Array.get(o1, i);
+            Object elem2 = java.lang.reflect.Array.get(o2, i);
+            if (!areEqual(elem1, elem2)) {
+                return false;
+            }
+        }
+        return true;
+    }
\ No newline at end of file
