diff --git a/tmp/a5f90a33-083b-4b3a-8565-1d2ddcfc9c11_buggy.java b/tmp/c4a995be-5431-4d47-99d8-2da593574d39_fixed.java
index 1c53d31..9e1f3d2 100644
--- a/tmp/a5f90a33-083b-4b3a-8565-1d2ddcfc9c11_buggy.java
+++ b/tmp/c4a995be-5431-4d47-99d8-2da593574d39_fixed.java
@@ -1,20 +1,26 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      TypeAdapterFactory factory = constructorConstructor.get(TypeToken.get(typeAdapterFactory)).construct();
+      if (factory != null) {
+        typeAdapter = factory.create(gson, fieldType);
+      } else {
+        throw new IllegalArgumentException("Factory constructor returned null");
+      }
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+    if (typeAdapter == null) {
+      throw new IllegalArgumentException("Type adapter creation returned null");
+    }
     typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
   }
\ No newline at end of file
