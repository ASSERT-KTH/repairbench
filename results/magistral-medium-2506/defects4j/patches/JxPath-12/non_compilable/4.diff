diff --git a/tmp/6dfa3c20-9c33-4db2-a4be-32d3b45943c3_buggy.java b/tmp/19207d96-989e-4b26-a9db-4039f513f01e_fixed.java
index 40f74f7..8257013 100644
--- a/tmp/6dfa3c20-9c33-4db2-a4be-32d3b45943c3_buggy.java
+++ b/tmp/19207d96-989e-4b26-a9db-4039f513f01e_fixed.java
@@ -1,50 +1,57 @@
     public static boolean testNode(Node node, NodeTest test) {
         if (test == null) {
             return true;
         }
         if (test instanceof NodeNameTest) {
             if (node.getNodeType() != Node.ELEMENT_NODE) {
                 return false;
             }
 
             NodeNameTest nodeNameTest = (NodeNameTest) test;
             QName testName = nodeNameTest.getNodeName();
             String namespaceURI = nodeNameTest.getNamespaceURI();
             boolean wildcard = nodeNameTest.isWildcard();
             String testPrefix = testName.getPrefix();
+
             if (wildcard && testPrefix == null) {
                 return true;
             }
-            if (wildcard
-                || testName.getName()
-                        .equals(DOMNodePointer.getLocalName(node))) {
+
+            String nodeLocalName = DOMNodePointer.getLocalName(node);
             String nodeNS = DOMNodePointer.getNamespaceURI(node);
-                return equalStrings(namespaceURI, nodeNS);
+
+            // Fix: handle cases where test namespace is null or empty
+            if (wildcard
+                || (testName.getLocalPart().equals(nodeLocalName)
+                    && (namespaceURI == null
+                        || "".equals(namespaceURI)
+                        || equalStrings(namespaceURI, nodeNS)))) {
+                return true;
             }
             return false;
         }
         if (test instanceof NodeTypeTest) {
             int nodeType = node.getNodeType();
             switch (((NodeTypeTest) test).getNodeType()) {
                 case Compiler.NODE_TYPE_NODE :
                     return nodeType == Node.ELEMENT_NODE
                             || nodeType == Node.DOCUMENT_NODE;
                 case Compiler.NODE_TYPE_TEXT :
                     return nodeType == Node.CDATA_SECTION_NODE
                         || nodeType == Node.TEXT_NODE;
                 case Compiler.NODE_TYPE_COMMENT :
                     return nodeType == Node.COMMENT_NODE;
                 case Compiler.NODE_TYPE_PI :
                     return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
             }
             return false;
         }
         if (test instanceof ProcessingInstructionTest) {
             if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
                 String testPI = ((ProcessingInstructionTest) test).getTarget();
                 String nodePI = ((ProcessingInstruction) node).getTarget();
                 return testPI.equals(nodePI);
             }
         }
         return false;
     }
\ No newline at end of file
