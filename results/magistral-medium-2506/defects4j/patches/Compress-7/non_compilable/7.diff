diff --git a/tmp/f52cb2be-e75d-458b-b9e3-a69b2bc8fe4d_buggy.java b/tmp/b436e3fc-562c-4a35-9fe2-02dc62bcc9f2_fixed.java
index d6662c7..e726995 100644
--- a/tmp/f52cb2be-e75d-458b-b9e3-a69b2bc8fe4d_buggy.java
+++ b/tmp/b436e3fc-562c-4a35-9fe2-02dc62bcc9f2_fixed.java
@@ -1,23 +1,31 @@
-    /**
-     * Parse an entry name from a buffer.
-     * Parsing stops when a NUL is found
-     * or the buffer length is reached.
-     *
-     * @param buffer The buffer from which to parse.
-     * @param offset The offset into the buffer from which to parse.
-     * @param length The maximum number of bytes to parse.
-     * @return The entry name.
-     */
     public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
         int end = offset + length;
+        int nameLength = 0;
 
+        // First find the actual length of the name (up to NUL terminator)
         for (int i = offset; i < end; ++i) {
             if (buffer[i] == 0) {
                 break;
             }
-            result.append((char) buffer[i]);
+            nameLength++;
+        }
+
+        // Create a new byte array with the actual name bytes
+        byte[] nameBytes = new byte[nameLength];
+        for (int i = 0; i < nameLength; ++i) {
+            nameBytes[i] = buffer[offset + i];
+        }
+
+        // Convert using platform's default charset (same as original) but this won't help with encoding issues
+        // Instead, we'll convert each byte to its unsigned value for display
+        StringBuilder result = new StringBuilder(nameLength);
+        for (byte b : nameBytes) {
+            if (b >= 0) {
+                result.append((char) b);
+            } else {
+                result.append((char) (b + 256));
+            }
         }
 
         return result.toString();
     }
\ No newline at end of file
