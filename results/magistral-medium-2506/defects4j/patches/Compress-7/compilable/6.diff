diff --git a/tmp/a9e2d62a-d522-4f25-8429-fd6ec7d94229_buggy.java b/tmp/e58e5901-cb8e-4b2d-8b5f-5686120be9df_fixed.java
index d6662c7..121dcb5 100644
--- a/tmp/a9e2d62a-d522-4f25-8429-fd6ec7d94229_buggy.java
+++ b/tmp/e58e5901-cb8e-4b2d-8b5f-5686120be9df_fixed.java
@@ -1,23 +1,46 @@
     /**
      * Parse an entry name from a buffer.
      * Parsing stops when a NUL is found
      * or the buffer length is reached.
      *
      * @param buffer The buffer from which to parse.
      * @param offset The offset into the buffer from which to parse.
      * @param length The maximum number of bytes to parse.
      * @return The entry name.
      */
     public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
         int end = offset + length;
+        int nulPos = -1;
 
+        // First find where the null terminator is
         for (int i = offset; i < end; ++i) {
             if (buffer[i] == 0) {
+                nulPos = i;
                 break;
             }
-            result.append((char) buffer[i]);
         }
 
+        // Determine the actual length to read
+        int actualLength;
+        if (nulPos != -1) {
+            actualLength = nulPos - offset;
+        } else {
+            actualLength = length;
+        }
+
+        // Create a new byte array with just the relevant portion
+        byte[] nameBytes = new byte[actualLength];
+        System.arraycopy(buffer, offset, nameBytes, 0, actualLength);
+
+        try {
+            // Use platform default charset or specify one if needed
+            return new String(nameBytes, java.nio.charset.Charset.defaultCharset());
+        } catch (Exception e) {
+            // Fallback to simple char-by-char conversion if charset fails
+            StringBuffer result = new StringBuffer(actualLength);
+            for (int i = 0; i < actualLength; ++i) {
+                result.append((char) nameBytes[i]);
+            }
             return result.toString();
         }
+    }
\ No newline at end of file
