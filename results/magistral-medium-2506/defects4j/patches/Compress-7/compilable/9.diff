diff --git a/tmp/4fc8c84d-2e79-42ea-ac52-b0ac31d71683_buggy.java b/tmp/fdd4edf7-f3b8-4d90-a7da-fd1a4437f8f6_fixed.java
index d6662c7..8f7d1db 100644
--- a/tmp/4fc8c84d-2e79-42ea-ac52-b0ac31d71683_buggy.java
+++ b/tmp/fdd4edf7-f3b8-4d90-a7da-fd1a4437f8f6_fixed.java
@@ -1,23 +1,23 @@
-    /**
-     * Parse an entry name from a buffer.
-     * Parsing stops when a NUL is found
-     * or the buffer length is reached.
-     *
-     * @param buffer The buffer from which to parse.
-     * @param offset The offset into the buffer from which to parse.
-     * @param length The maximum number of bytes to parse.
-     * @return The entry name.
-     */
     public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
         int end = offset + length;
-
-        for (int i = offset; i < end; ++i) {
+        // First determine the actual length by finding null terminator
+        int actualLength = 0;
+        for (int i = offset; i < end; i++) {
             if (buffer[i] == 0) {
                 break;
             }
-            result.append((char) buffer[i]);
+            actualLength++;
         }
 
+        // Convert bytes to string with proper encoding
+        try {
+            return new String(buffer, offset, actualLength, "ISO-8859-1");
+        } catch (java.io.UnsupportedEncodingException e) {
+            // Fallback if encoding is not supported (should never happen for ISO-8859-1)
+            StringBuilder result = new StringBuilder(actualLength);
+            for (int i = offset; i < offset + actualLength; i++) {
+                result.append((char)(buffer[i] & 0xff));
+            }
             return result.toString();
         }
+    }
\ No newline at end of file
