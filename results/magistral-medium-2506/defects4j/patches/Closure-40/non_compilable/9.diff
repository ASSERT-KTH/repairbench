diff --git a/tmp/b3bf96db-c566-4e2f-9efb-73fb82f4f7e8_buggy.java b/tmp/4bcab4b3-f670-4605-b757-0d5c5162499a_fixed.java
index 670114d..1f58922 100644
--- a/tmp/b3bf96db-c566-4e2f-9efb-73fb82f4f7e8_buggy.java
+++ b/tmp/4bcab4b3-f670-4605-b757-0d5c5162499a_fixed.java
@@ -1,48 +1,69 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
-
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
+      // Handle inheritance cases
+      if (n.isCall() && n.getFirstChild() != null) {
+        Node callee = n.getFirstChild();
+        if (callee.isName() && "goog.inherits".equals(callee.getString())) {
+          if (n.hasChildren() && n.getChildCount() >= 3) {
+            Node childClassNode = n.getSecondChild();
+            Node parentClassNode = n.getThirdChild();
+
+            if (childClassNode != null && parentClassNode != null) {
+              NameInformation childNs = createNameInformation(t, childClassNode, n);
+              NameInformation parentNs = createNameInformation(t, parentClassNode, n);
+
+              if (childNs != null && parentNs != null) {
+                recordPrototypeSet(childNs.prototypeClass,
+                                  parentNs.prototypeClass.getOriginalName(),
+                                  n);
+              }
+            }
+          }
+        }
+      }
+
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
-
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
-      } else if (n.isCall()) {
+      } else if (n.isCall() && !n.getFirstChild().isName() ||
+                 !"goog.inherits".equals(n.getFirstChild().getString())) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
             refNodes.add(new ClassDefiningFunctionNode(
                 name, n, parent, parent.getParent()));
           }
         }
       }
     }
\ No newline at end of file
