diff --git a/tmp/0891475c-0578-4188-922b-91c1ab1193c0_buggy.java b/tmp/fcd2bae7-d884-40d0-a61a-850d8c22beb3_fixed.java
index 670114d..52bf0f4 100644
--- a/tmp/0891475c-0578-4188-922b-91c1ab1193c0_buggy.java
+++ b/tmp/fcd2bae7-d884-40d0-a61a-850d8c22beb3_fixed.java
@@ -1,48 +1,60 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
+  } else if (n.isGetProp() && parent != null && parent.isCall()) {
+    // Handle cases where a property (e.g., ChangeEvent in goog.inherits case) is used in a call
+    // but isn't necessarily a function declaration or assignment
+    Node nameNode = n.getFirstChild();
+    NameInformation ns = createNameInformation(t, nameNode, parent);
+    if (ns != null) {
+      JsName name = getName(ns.name, false);
+      if (name != null) {
+        refNodes.add(new ClassDefiningFunctionNode(
+            name, n, parent, parent.getParent()));
+      }
+    }
   }
 }
\ No newline at end of file
