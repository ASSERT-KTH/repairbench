diff --git a/tmp/c2d6effa-ba1b-447d-8934-60e0bd71462d_buggy.java b/tmp/ee22aee3-726a-4744-8b13-099b9d0c6ac3_fixed.java
index 0313249..03f4c76 100644
--- a/tmp/c2d6effa-ba1b-447d-8934-60e0bd71462d_buggy.java
+++ b/tmp/ee22aee3-726a-4744-8b13-099b9d0c6ac3_fixed.java
@@ -1,32 +1,38 @@
     /**
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
+        int orderIndex = -1;
 
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
-                    _propsInOrder[_findFromOrdered(prop)] = null;
+                // Check both the property name and the name slot for case-insensitive comparison
+                boolean nameMatch = key.equals(prop.getName());
+                if (!nameMatch && _caseInsensitive) {
+                    // For case-insensitive comparison, use the case-sensitive comparison of the lower-cased versions
+                    String propKey = getPropertyName(prop);
+                    nameMatch = key.equalsIgnoreCase(propKey);
+                }
+                if (nameMatch) {
+                    found = true;
+                    orderIndex = _findFromOrdered(prop);
                     continue;
                 }
             }
             props.add(prop);
         }
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
+        _propsInOrder[orderIndex] = null;
         init(props);
     }
\ No newline at end of file
