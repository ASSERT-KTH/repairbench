diff --git a/tmp/3bf69d2c-ccf9-4b75-91b5-cb68fff25082_buggy.java b/tmp/56274cc3-1dbe-4aa6-bb26-2ba32e3c95b4_fixed.java
index 0313249..b4d7822 100644
--- a/tmp/3bf69d2c-ccf9-4b75-91b5-cb68fff25082_buggy.java
+++ b/tmp/56274cc3-1dbe-4aa6-bb26-2ba32e3c95b4_fixed.java
@@ -1,32 +1,27 @@
-    /**
-     * Specialized method for removing specified existing entry.
-     * NOTE: entry MUST exist, otherwise an exception is thrown.
-     */
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
 
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
-            if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+            if (key.equals(getPropertyName(prop))) {
                 if (found) {
+                    throw new IllegalStateException("Duplicate property '" + key + "' found");
+                }
+                found = true;
                 // need to leave a hole here
                 _propsInOrder[_findFromOrdered(prop)] = null;
-                    continue;
-                }
-            }
+            } else {
                 props.add(prop);
             }
+        }
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
         init(props);
     }
\ No newline at end of file
