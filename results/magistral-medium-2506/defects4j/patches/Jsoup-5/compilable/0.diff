diff --git a/tmp/dd03a973-e62b-4e1e-b47a-48aee2fb1fa5_buggy.java b/tmp/48c5f601-4ffc-40a8-8a0b-d73119581d1f_fixed.java
index 39dd8e7..43161d8 100644
--- a/tmp/dd03a973-e62b-4e1e-b47a-48aee2fb1fa5_buggy.java
+++ b/tmp/48c5f601-4ffc-40a8-8a0b-d73119581d1f_fixed.java
@@ -1,30 +1,37 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
+        if (key.length() == 0) { // This change fixes the infinite loop case
+            // If we didn't get a valid key, consume the next character and return null
+            if (!tq.isEmpty()) {
+                tq.consume();
+            }
+            return null;
+        }
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
 
             return null;
         }
     }
\ No newline at end of file
