diff --git a/tmp/4eaa66b6-f08d-4586-8b60-dda1b3061fc4_buggy.java b/tmp/f75335a2-7102-49e0-a5dc-d16401fee050_fixed.java
index 4bbd561..860df7a 100644
--- a/tmp/4eaa66b6-f08d-4586-8b60-dda1b3061fc4_buggy.java
+++ b/tmp/f75335a2-7102-49e0-a5dc-d16401fee050_fixed.java
@@ -1,37 +1,54 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
+        try {
             if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
                 int start = index + 2;
                 boolean isHex = false;
 
+                if (start >= input.length()) {
+                    return 0;
+                }
+
                 char firstChar = input.charAt(start);
                 if (firstChar == 'x' || firstChar == 'X') {
                     start++;
                     isHex = true;
                 }
 
+                if (start >= input.length()) {
+                    return 0;
+                }
+
                 int end = start;
-            while(input.charAt(end) != ';') {
+                while (end < input.length() && input.charAt(end) != ';') {
                     end++;
                 }
 
+                if (end >= input.length() || input.charAt(end) != ';') {
+                    return 0;
+                }
+
                 int entityValue;
                 try {
+                    String numStr = input.subSequence(start, end).toString();
                     if (isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
+                        entityValue = Integer.parseInt(numStr, 16);
                     } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
+                        entityValue = Integer.parseInt(numStr, 10);
                     }
                 } catch (NumberFormatException nfe) {
                     return 0;
                 }
 
+                // Write the character properly, handling supplementary characters
                 out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+                return end - index + 1;
+            }
+        } catch (IndexOutOfBoundsException e) {
+            return 0;
         }
         return 0;
     }
\ No newline at end of file
