diff --git a/tmp/66ea33ac-b39b-4f08-9669-da07c68f0613_buggy.java b/tmp/0071f28a-218b-4c7e-a647-7e58114a9f14_fixed.java
index 6e238e7..5b9ae1a 100644
--- a/tmp/66ea33ac-b39b-4f08-9669-da07c68f0613_buggy.java
+++ b/tmp/0071f28a-218b-4c7e-a647-7e58114a9f14_fixed.java
@@ -1,15 +1,26 @@
     /**
      * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
      *
      * @param p1 the first point
      * @param p2 the second point
      * @return the L<sub>2</sub> distance between the two points
      */
     public static double distance(int[] p1, int[] p2) {
+        if (p1 == null || p2 == null) {
+            return Double.MAX_VALUE;
+        }
+        int minLength = Math.min(p1.length, p2.length);
         int sum = 0;
-      for (int i = 0; i < p1.length; i++) {
+        for (int i = 0; i < minLength; i++) {
             final int dp = p1[i] - p2[i];
             sum += dp * dp;
         }
+        // Add squared difference for extra dimensions in the longer array
+        for (int i = minLength; i < p1.length; i++) {
+            sum += p1[i] * p1[i];
+        }
+        for (int i = minLength; i < p2.length; i++) {
+            sum += p2[i] * p2[i];
+        }
         return Math.sqrt(sum);
     }
\ No newline at end of file
