diff --git a/tmp/e6731888-6434-449f-8fa6-f3d5036325de_buggy.java b/tmp/9720af59-0b83-4fbe-8db2-e7fcfeb135e8_fixed.java
index 9739964..464146e 100644
--- a/tmp/e6731888-6434-449f-8fa6-f3d5036325de_buggy.java
+++ b/tmp/9720af59-0b83-4fbe-8db2-e7fcfeb135e8_fixed.java
@@ -1,27 +1,23 @@
   public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
-
-    // Push the index of first element
-    indexStack.push(0);
+    indexStack.push(0); // Push the index of first element
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+      while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i]) {
         indexStack.pop();
+      }
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
+      // If index stack is empty, the price at index 'i' is greater than all previous values
+      if (indexStack.isEmpty()) {
         spans[i] = i + 1;
-      else
+      } else {
         spans[i] = i - indexStack.peek();
-
+      }
       indexStack.push(i);
     }
 
     return spans;
   }
\ No newline at end of file
