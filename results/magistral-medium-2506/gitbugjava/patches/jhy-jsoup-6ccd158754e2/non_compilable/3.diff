diff --git a/tmp/75816142-f850-4e3b-96b6-ae0914662e56_buggy.java b/tmp/74e9b732-1cdc-454f-a4bd-d9c649aed72f_fixed.java
index 23f078d..2f385c0 100644
--- a/tmp/75816142-f850-4e3b-96b6-ae0914662e56_buggy.java
+++ b/tmp/74e9b732-1cdc-454f-a4bd-d9c649aed72f_fixed.java
@@ -1,14 +1,19 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+        for (int i = 0; i < s.length();) {
             int c = s.codePointAt(i);
+            if (c > Character.MAX_VALUE) { // this means we're dealing with a supplementary character (surrogate pair)
+                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                i += Character.charCount(c); // skip the next char as it's part of the surrogate pair
+            } else {
                 if (c == ' ') {
                     sb.append(spaceAsPlus ? '+' : "%20");
                 } else if (c > 127) { // out of ascii range
                     sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
                 } else {
                     sb.append((char) c);
                 }
+                i++;
+            }
         }
     }
\ No newline at end of file
