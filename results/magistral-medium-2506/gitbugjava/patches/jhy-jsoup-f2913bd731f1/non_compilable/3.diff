diff --git a/tmp/16f62fb4-44fe-4084-9c59-98b2d966620f_buggy.java b/tmp/1a798e1e-5767-43f1-820c-c246d6c14dc6_fixed.java
index 016a7f6..5c7ef1f 100644
--- a/tmp/16f62fb4-44fe-4084-9c59-98b2d966620f_buggy.java
+++ b/tmp/1a798e1e-5767-43f1-820c-c246d6c14dc6_fixed.java
@@ -1,29 +1,35 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
         final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
         boolean trimLeading = false, trimTrailing = false;
 
         if (normaliseWhite) {
             trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
             trimTrailing = trimLikeBlock && nextSibling() == null;
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
-            if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+            // Fixed logic to prevent adding extra space before inline elements
+            boolean shouldIndent = (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank)
+                || (out.outline() && siblingNodes().size() > 0 && !isBlank)
+                || (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br"));
+            if (shouldIndent) {
                 indent(accum, depth, out);
             }
+            // Also handle case where previous node was a block element and we're an inline element following it
+            else if (next instanceof Element && !((Element)next).tag().isBlock() &&
+                    prev != null && (prev instanceof Element && ((Element)prev).tag().isBlock())) {
+                // Don't add whitespace in this case
+            }
+        }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
