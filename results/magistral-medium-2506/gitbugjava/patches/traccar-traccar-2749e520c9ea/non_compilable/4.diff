diff --git a/tmp/cddf7d2d-480b-4d01-8287-61d9c17d9f14_buggy.java b/tmp/a3b93a67-46e2-4b3a-bc95-b1a0ee5e2fd8_fixed.java
index 7b9216c..8b33f5c 100644
--- a/tmp/cddf7d2d-480b-4d01-8287-61d9c17d9f14_buggy.java
+++ b/tmp/a3b93a67-46e2-4b3a-bc95-b1a0ee5e2fd8_fixed.java
@@ -1,47 +1,58 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
-
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
+    // Added code to read gyro data if present
+    if (buf.readableBytes() >= 5) {
+        int gyroLength = buf.readUnsignedByte();
+        if (buf.readableBytes() >= gyroLength) {
+            byte[] gyroData = new byte[gyroLength];
+            buf.readBytes(gyroData);
+            if (gyroData.length > 0) {
+                position.set(Position.KEY_GYRO, Hex.encodeHexString(gyroData));
+            }
+        }
+    }
+
     return position;
 }
\ No newline at end of file
