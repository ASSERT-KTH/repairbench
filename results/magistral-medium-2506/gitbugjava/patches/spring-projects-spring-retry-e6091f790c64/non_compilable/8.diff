diff --git a/tmp/e5c98b49-9762-4226-bb03-9704afa74904_buggy.java b/tmp/04f2a56f-f6ca-4a09-91fe-067558d24361_fixed.java
index b8e3fa3..23c3b6d 100644
--- a/tmp/e5c98b49-9762-4226-bb03-9704afa74904_buggy.java
+++ b/tmp/04f2a56f-f6ca-4a09-91fe-067558d24361_fixed.java
@@ -1,65 +1,93 @@
-	/**
-	 * Builds the {@link BackOffPolicy} with the given parameters.
-	 * @return the {@link BackOffPolicy} instance
-	 */
 public BackOffPolicy build() {
-		if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
+    if (this.multiplier != null && this.multiplier > 0) {
         ExponentialBackOffPolicy policy;
         if (Boolean.TRUE.equals(this.random)) {
             policy = new ExponentialRandomBackOffPolicy();
         }
         else {
             policy = new ExponentialBackOffPolicy();
         }
         if (this.delay != null) {
             policy.setInitialInterval(this.delay);
         }
         if (this.delaySupplier != null) {
             policy.initialIntervalSupplier(this.delaySupplier);
         }
         if (this.multiplier != null) {
             policy.setMultiplier(this.multiplier);
         }
         if (this.multiplierSupplier != null) {
             policy.multiplierSupplier(this.multiplierSupplier);
         }
         if (this.maxDelay != null && this.delay != null) {
             policy.setMaxInterval(
                     this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
         }
         if (this.maxDelaySupplier != null) {
             policy.maxIntervalSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper != null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
+    if (this.multiplierSupplier != null) {
+        ExponentialBackOffPolicy policy;
+        if (Boolean.TRUE.equals(this.random)) {
+            policy = new ExponentialRandomBackOffPolicy();
+        }
+        else {
+            policy = new ExponentialBackOffPolicy();
+        }
+        if (this.delay != null) {
+            policy.setInitialInterval(this.delay);
+        }
+        if (this.delaySupplier != null) {
+            policy.initialIntervalSupplier(this.delaySupplier);
+        }
+        if (this.multiplierSupplier != null) {
+            policy.multiplierSupplier(this.multiplierSupplier);
+        }
+        if (this.maxDelay != null && this.delay != null) {
+            policy.setMaxInterval(
+                    this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
+        }
+        if (this.maxDelaySupplier != null) {
+            policy.maxIntervalSupplier(this.maxDelaySupplier);
+        }
+        if (this.sleeper != null) {
+            policy.setSleeper(this.sleeper);
+        }
+        return policy;
+    }
     if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
         UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
         if (this.delay != null) {
             policy.setMinBackOffPeriod(this.delay);
         }
         if (this.delaySupplier != null) {
             policy.minBackOffPeriodSupplier(this.delaySupplier);
         }
         if (this.maxDelay != null) {
             policy.setMaxBackOffPeriod(this.maxDelay);
         }
         if (this.maxDelaySupplier != null) {
             policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper != null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
     FixedBackOffPolicy policy = new FixedBackOffPolicy();
     if (this.delay != null) {
         policy.setBackOffPeriod(this.delay);
     }
+    if (this.delaySupplier != null) {
+        policy.setBackOffPeriod(this.delaySupplier.get());
+    }
     if (this.sleeper != null) {
         policy.setSleeper(this.sleeper);
     }
     return policy;
 }
\ No newline at end of file
