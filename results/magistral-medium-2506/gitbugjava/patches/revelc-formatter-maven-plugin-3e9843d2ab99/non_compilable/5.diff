diff --git a/tmp/fb4e2f43-89e7-4b08-8b48-b527eb7745ce_buggy.java b/tmp/81302f74-71c8-4e5a-8202-e91de9a35e3b_fixed.java
index 1098336..0d25630 100644
--- a/tmp/fb4e2f43-89e7-4b08-8b48-b527eb7745ce_buggy.java
+++ b/tmp/81302f74-71c8-4e5a-8202-e91de9a35e3b_fixed.java
@@ -1,16 +1,30 @@
     @Override
     protected String doFormat(final String code, final LineEnding ending) throws IOException {
-
         final var source = new InputSource(new StringReader(code));
         final var parser = new CSSOMParser(new SACParserCSS3());
         final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
         var formattedCode = sheet.getCssText(this.formatter);
 
         // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
         formattedCode = formattedCode.replace("\t;", "\\9;");
 
+        // Normalize line endings to ensure consistent output across platforms
+        formattedCode = normalizedLineEndings(formattedCode, ending);
+
         if (code.equals(formattedCode)) {
             return null;
         }
         return formattedCode;
     }
+
+    private String normalizedLineEndings(String text, LineEnding ending) {
+        if (ending == null) {
+            return text;
+        }
+        String normalized = text.replace("\r\n", "\n");
+        normalized = normalized.replace('\r', '\n');
+        if (ending == LineEnding.CRLF) {
+            normalized = normalized.replace("\n", "\r\n");
+        }
+        return normalized;
+    }
\ No newline at end of file
