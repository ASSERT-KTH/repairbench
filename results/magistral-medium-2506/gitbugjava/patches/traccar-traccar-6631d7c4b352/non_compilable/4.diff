diff --git a/tmp/19fe089a-0070-474c-973e-d31895c36d13_buggy.java b/tmp/c7130100-2b86-4465-bfef-1f61494456a2_fixed.java
index d87dd79..db28a5c 100644
--- a/tmp/19fe089a-0070-474c-973e-d31895c36d13_buggy.java
+++ b/tmp/c7130100-2b86-4465-bfef-1f61494456a2_fixed.java
@@ -1,47 +1,60 @@
     @Override
     protected Object decode(
             ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+        // First check if we have enough data to find a complete frame
         int endIndex = -1;
         for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
             if (buf.getByte(i) == ']') {
                 endIndex = i + 1;
                 break;
             }
         }
 
         if (endIndex > 0) {
             ByteBuf frame = Unpooled.buffer();
+            int startIndex = buf.readerIndex();
+
+            // Check if we have a full frame
+            if (buf.writerIndex() >= endIndex) {
+                int originalReaderIndex = buf.readerIndex();
+
                 while (buf.readerIndex() < endIndex) {
                     byte b1 = buf.readByte();
                     if (b1 == '}') {
                         byte b2 = buf.readByte();
                         switch (b2) {
                             case 0x01:
                                 frame.writeByte('}');
                                 break;
                             case 0x02:
                                 frame.writeByte('[');
                                 break;
                             case 0x03:
                                 frame.writeByte(']');
                                 break;
                             case 0x04:
                                 frame.writeByte(',');
                                 break;
                             case 0x05:
                                 frame.writeByte('*');
                                 break;
                             default:
                                 throw new IllegalArgumentException(String.format(
                                         "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                         }
                     } else {
                         frame.writeByte(b1);
                     }
                 }
+
+                // Update reader index to skip over the frame we just processed
+                buf.readerIndex(endIndex);
+
                 return frame;
             }
+        }
 
+        // Not enough data to complete a frame yet
         return null;
     }
\ No newline at end of file
