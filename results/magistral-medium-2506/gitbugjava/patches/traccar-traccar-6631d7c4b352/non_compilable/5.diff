diff --git a/tmp/86f60384-1532-4560-9d83-6470d6e575f5_buggy.java b/tmp/dc371ce2-7fcc-4bb0-b97f-01597446ea0b_fixed.java
index d87dd79..8b21abd 100644
--- a/tmp/86f60384-1532-4560-9d83-6470d6e575f5_buggy.java
+++ b/tmp/dc371ce2-7fcc-4bb0-b97f-01597446ea0b_fixed.java
@@ -1,47 +1,56 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
         ByteBuf frame = Unpooled.buffer();
+        int readerIndex = buf.readerIndex();
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
+                if (buf.readableBytes() == 0) break; // Check for readable bytes before read
                 byte b2 = buf.readByte();
                 switch (b2) {
                     case 0x01:
                         frame.writeByte('}');
                         break;
                     case 0x02:
                         frame.writeByte('[');
                         break;
                     case 0x03:
                         frame.writeByte(']');
                         break;
                     case 0x04:
                         frame.writeByte(',');
                         break;
                     case 0x05:
                         frame.writeByte('*');
                         break;
                     default:
-                            throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                        buf.readerIndex(readerIndex); // Reset reader index if invalid
+                        return null;
                 }
             } else {
                 frame.writeByte(b1);
             }
         }
+
+        // Only return if we actually decoded a complete frame
+        if (buf.readerIndex() == endIndex) {
             return frame;
+        } else {
+            buf.readerIndex(readerIndex); // Reset position if we didn't complete decoding
+            return null;
+        }
     }
 
     return null;
 }
\ No newline at end of file
