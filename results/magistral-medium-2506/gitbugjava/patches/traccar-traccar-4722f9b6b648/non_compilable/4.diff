diff --git a/tmp/4e88cd83-c8f9-4ca2-8eaa-ef1939839350_buggy.java b/tmp/2a6374d5-f6ec-4e70-bc6a-fb755ad0a15f_fixed.java
index c84c989..9991217 100644
--- a/tmp/4e88cd83-c8f9-4ca2-8eaa-ef1939839350_buggy.java
+++ b/tmp/2a6374d5-f6ec-4e70-bc6a-fb755ad0a15f_fixed.java
@@ -1,27 +1,34 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
     buf.readUnsignedIntLE(); // date and time
 
-        buf.skipBytes(23); // coordinates block
+    // Read coordinates block instead of skipping it
+    double latitude = buf.readUnsignedIntLE() / 100000.0;
+    double longitude = buf.readUnsignedIntLE() / 100000.0;
+    position.setLatitude(latitude);
+    position.setLongitude(longitude);
+    position.setValid(buf.readUnsignedByte() == 1);
+
+    buf.skipBytes(2); // skip remaining bytes in coordinates block if any
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
