diff --git a/tmp/ec6a8c1e-b5c5-46e1-9a47-72b5f2a7ced3_buggy.java b/tmp/1a5bf427-98b7-43c8-b494-c134ea1567e9_fixed.java
index c84c989..723760a 100644
--- a/tmp/ec6a8c1e-b5c5-46e1-9a47-72b5f2a7ced3_buggy.java
+++ b/tmp/1a5bf427-98b7-43c8-b494-c134ea1567e9_fixed.java
@@ -1,27 +1,37 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
-        buf.readUnsignedShortLE(); // length
+        // Read and verify length
+        int length = buf.readUnsignedShortLE();
+        if (buf.readableBytes() < length - 2) { // subtract 2 for the length field itself
+            return null;
+        }
 
         buf.skipBytes(3); // identification header
         buf.readUnsignedIntLE(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
 
+        // Read and set time properly
+        long dateTimeValue = ((long)buf.readUnsignedIntLE()) * 1000L; // assuming this is seconds since epoch
+        if (dateTimeValue > 0) {
+            position.setTime(new Date(dateTimeValue));
+        }
+
+        // Process coordinate block
         buf.skipBytes(23); // coordinates block
 
         buf.skipBytes(3); // data tag header
         decodeMinimalDataSet(position, buf);
 
         return position;
     }
\ No newline at end of file
