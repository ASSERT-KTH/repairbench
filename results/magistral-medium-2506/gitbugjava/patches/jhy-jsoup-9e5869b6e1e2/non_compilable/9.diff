diff --git a/tmp/b21f9d9c-8e95-4815-817b-5f1177e96c6b_buggy.java b/tmp/932f56cc-92f8-457d-b7cc-6f9a73c3adf0_fixed.java
index 0583946..18d1129 100644
--- a/tmp/b21f9d9c-8e95-4815-817b-5f1177e96c6b_buggy.java
+++ b/tmp/932f56cc-92f8-457d-b7cc-6f9a73c3adf0_fixed.java
@@ -1,30 +1,42 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
             )
                 indent(accum, depth, out);
         }
 
+        // Fix: don't output trailing whitespace when the next sibling is a custom element (or a block element)
+        Node next = nextSibling();
+        boolean isBlank = isBlank();
+        if (isBlank && next != null) {
+            boolean nextIsCustomOrBlock =
+                (next instanceof Element && (((Element) next).tag().isBlock() ||
+                 ((Element) next).tag().isCustomElement()));
+            if (nextIsCustomOrBlock) {
+                return; // skip this whitespace node if next is custom/block element
+            }
+        }
+
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
