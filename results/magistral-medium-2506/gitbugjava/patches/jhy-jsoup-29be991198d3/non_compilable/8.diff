diff --git a/tmp/43c195eb-c81d-46ca-a0f7-85ae45c0cfb7_buggy.java b/tmp/7da05d34-1b82-4d66-bd37-d701fa8bbce9_fixed.java
index 862c60c..f0b6e82 100644
--- a/tmp/43c195eb-c81d-46ca-a0f7-85ae45c0cfb7_buggy.java
+++ b/tmp/7da05d34-1b82-4d66-bd37-d701fa8bbce9_fixed.java
@@ -1,25 +1,34 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = this.nextSibling();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank()) return;
 
             if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+                (out.outline() && siblingNodes().size() > 0 && !isBlank())) {
                 indent(accum, depth, out);
+            } else if (prettyPrint && parent != null && parent.tag().formatAsBlock() &&
+                      this.previousSibling() instanceof Element &&
+                      ((Element)this.previousSibling()).tag().isBlock()) {
+                // Handle case when the previous sibling is a block element (like br)
+                accum.append('\n');
+                if (parent.tag().formatAsBlock()) {
+                    indent(accum, depth, out);
+                }
+            }
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
