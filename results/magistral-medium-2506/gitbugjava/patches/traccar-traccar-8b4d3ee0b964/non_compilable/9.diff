diff --git a/tmp/43a0c55b-16b4-482c-aaa9-20e27f33a926_buggy.java b/tmp/d9c8b10b-e18e-4065-a745-50ffb40641d8_fixed.java
index 27f2719..2c53490 100644
--- a/tmp/43a0c55b-16b4-482c-aaa9-20e27f33a926_buggy.java
+++ b/tmp/d9c8b10b-e18e-4065-a745-50ffb40641d8_fixed.java
@@ -1,90 +1,99 @@
 @Override
 protected Object decode(
         Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
+    if (msg == null) {
+        return null;
+    }
+
     String sentence = (String) msg;
+    if (sentence == null || sentence.isEmpty()) {
+        return null;
+    }
 
     if (sentence.startsWith("!1,")) {
         int index = sentence.indexOf(',', 3);
         if (index < 0) {
             index = sentence.length();
         }
         getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
         return null;
     }
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
-        if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
+    if (deviceSession == null) {
+        return null;
+    }
+
+    if (!sentence.matches("![35A-D],.*")) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
+    if (sentence.length() < 3) {  // Need at least "!X," prefix
+        return null;
+    }
+
     String type = sentence.substring(1, 2);
     position.set(Position.KEY_TYPE, type);
 
+    try {
         if (type.equals("3")) {
-
             getLastLocation(position, null);
-
-            position.set(Position.KEY_RESULT, sentence.substring(3));
-
+            position.set(Position.KEY_RESULT, sentence.length() > 3 ? sentence.substring(3) : "");
             return position;
-
         } else if (type.equals("5")) {
-
             String[] values = sentence.split(",");
-
             getLastLocation(position, null);
 
+            if (values.length > 1) {
+                try {
                     position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
+                } catch (NumberFormatException e) {
+                    position.set(Position.KEY_RSSI, 0);
+                }
+            }
+
             if (values.length >= 4) {
+                try {
                     position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
+                } catch (NumberFormatException e) {
+                    position.set(Position.KEY_BATTERY_LEVEL, 0);
+                }
             }
-
             return position;
-
         } else if (type.equals("B") || type.equals("D")) {
-
             Parser parser = new Parser(PATTERN_BD, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
             decodeState(position, parser);
-
             position.set(Position.KEY_SATELLITES, parser.nextInt(0));
             position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
             position.set(Position.KEY_HDOP, parser.nextDouble(0));
-
             return position;
-
         } else if (type.equals("C")) {
-
             Parser parser = new Parser(PATTERN_C, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
             decodeState(position, parser);
-
             return position;
-
         } else if (type.equals("A")) {
-
             Parser parser = new Parser(PATTERN_A, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
-
             return position;
-
+        }
+    } catch (Exception e) {
+        return null;  // Handle any parsing errors gracefully
     }
 
     return null;
 }
\ No newline at end of file
