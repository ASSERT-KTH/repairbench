diff --git a/tmp/83cf80c4-0e33-48f6-b7de-35888a8a82b9_buggy.java b/tmp/22252f34-c26a-48cc-a894-6120a749d678_fixed.java
index 27f2719..8e29648 100644
--- a/tmp/83cf80c4-0e33-48f6-b7de-35888a8a82b9_buggy.java
+++ b/tmp/22252f34-c26a-48cc-a894-6120a749d678_fixed.java
@@ -1,90 +1,82 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         String sentence = (String) msg;
 
         if (sentence.startsWith("!1,")) {
             int index = sentence.indexOf(',', 3);
             if (index < 0) {
                 index = sentence.length();
             }
             getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
             return null;
         }
 
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
-        if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
+        if (deviceSession == null) {
+            return null;
+        }
+
+        // Modified pattern to handle cases where type might not be followed by comma
+        if (!sentence.matches("![35A-D].*") && !sentence.startsWith("!1,")) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
-        String type = sentence.substring(1, 2);
+        String type;
+        try {
+            type = sentence.substring(1, 2);
+        } catch (IndexOutOfBoundsException e) {
+            return null;
+        }
         position.set(Position.KEY_TYPE, type);
 
         if (type.equals("3")) {
-
             getLastLocation(position, null);
-
             position.set(Position.KEY_RESULT, sentence.substring(3));
-
             return position;
-
         } else if (type.equals("5")) {
-
             String[] values = sentence.split(",");
-
             getLastLocation(position, null);
-
+            try {
                 position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
                 if (values.length >= 4) {
                     position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
                 }
-
+            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
+                // Handle case where parsing fails
+            }
             return position;
-
         } else if (type.equals("B") || type.equals("D")) {
-
             Parser parser = new Parser(PATTERN_BD, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
             decodeState(position, parser);
-
             position.set(Position.KEY_SATELLITES, parser.nextInt(0));
             position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
             position.set(Position.KEY_HDOP, parser.nextDouble(0));
-
             return position;
-
         } else if (type.equals("C")) {
-
             Parser parser = new Parser(PATTERN_C, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
             decodeState(position, parser);
-
             return position;
-
         } else if (type.equals("A")) {
-
             Parser parser = new Parser(PATTERN_A, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
-
             return position;
-
         }
 
         return null;
     }
\ No newline at end of file
