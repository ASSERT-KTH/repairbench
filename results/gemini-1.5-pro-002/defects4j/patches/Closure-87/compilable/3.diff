diff --git a/tmp/aac7ad29-75ba-4271-bddd-11341c3922ae_buggy.java b/tmp/ce88004d-7a7a-44cc-9558-632bd50fe89d_fixed.java
index 19fd63e..c422759 100644
--- a/tmp/aac7ad29-75ba-4271-bddd-11341c3922ae_buggy.java
+++ b/tmp/ce88004d-7a7a-44cc-9558-632bd50fe89d_fixed.java
@@ -1,24 +1,25 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
             // We only have to worry about methods with an implicit 'this'
             // param, or this doesn't happen.
 
-          return NodeUtil.isExpressionNode(maybeExpr);
+          return NodeUtil.isExpressionNode(maybeExpr) &&
+              maybeExpr.getType() != Token.EXPR_RESULT;
       }
     }
 
     return false;
   }
