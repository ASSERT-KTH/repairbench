diff --git a/tmp/97d74dc4-2538-49fa-8de3-948bf5a5925f_buggy.java b/tmp/6d197b61-707a-4a42-9635-8f30874c5932_fixed.java
index 388771b..8530e6d 100644
--- a/tmp/97d74dc4-2538-49fa-8de3-948bf5a5925f_buggy.java
+++ b/tmp/6d197b61-707a-4a42-9635-8f30874c5932_fixed.java
@@ -1,37 +1,39 @@
     /**
      * Creates a new timeseries by copying a subset of the data in this time
      * series.
      *
      * @param start  the index of the first time period to copy.
      * @param end  the index of the last time period to copy.
      *
      * @return A series containing a copy of this times series from start until
      *         end.
      *
      * @throws CloneNotSupportedException if there is a cloning problem.
      */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
+        if (end >= getItemCount()) {
+            throw new IllegalArgumentException("Requires end < getItemCount().");
+        }
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {
                 TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
+                        = (TimeSeriesDataItem) this.data.get(index).clone();
                 try {
-                    copy.add(clone);
+                    copy.add(item);
                 }
                 catch (SeriesException e) {
                     e.printStackTrace();
                 }
             }
         }
         return copy;
     }
\ No newline at end of file
