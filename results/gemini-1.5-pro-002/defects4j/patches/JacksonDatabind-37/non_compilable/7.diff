diff --git a/tmp/71440537-0b7e-4744-8c78-f1df8c226e84_buggy.java b/tmp/8fdfb4d1-0daa-497f-8bc6-4b53602621b3_fixed.java
index e5ad041..ed9eb3b 100644
--- a/tmp/71440537-0b7e-4744-8c78-f1df8c226e84_buggy.java
+++ b/tmp/8fdfb4d1-0daa-497f-8bc6-4b53602621b3_fixed.java
@@ -1,19 +1,14 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+        //    placeholder values, so no. But ensure that we do not carry
+        //    type parameters of the base type
+        TypeBindings bindings = (_bindings == null || _bindings.isEmpty()) ? _bindings : null;
+        return new SimpleType(subclass, bindings, _narrow(_superClass, subclass),
+                 _narrow(_superInterfaces, subclass), _valueHandler, _typeHandler, _asStatic);
     }
