diff --git a/tmp/377c2b2c-7f0d-467a-b49f-6a48d70a7aac_buggy.java b/tmp/b38f2cf7-1058-4820-a712-ac0971885839_fixed.java
index e5ad041..729a8cc 100644
--- a/tmp/377c2b2c-7f0d-467a-b49f-6a48d70a7aac_buggy.java
+++ b/tmp/b38f2cf7-1058-4820-a712-ac0971885839_fixed.java
@@ -1,19 +1,19 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+        //    placeholder values, so no. But ensure sharing of resolved values
         if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
            return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
                    _valueHandler, _typeHandler, _asStatic);
         }
+        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
+        return new SimpleType(subclass, _bindings,
+               subclass.isInterface() ? this : _superClass,
+               _superInterfaces,
+               _valueHandler, _typeHandler, _asStatic);
+    }
