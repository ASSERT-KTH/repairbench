diff --git a/tmp/5c1c57dd-d6f2-4b41-b61c-d0029c14e1d1_buggy.java b/tmp/b9f402ee-1aac-485c-a78f-62fd05dbd6fc_fixed.java
index e5ad041..b1114f3 100644
--- a/tmp/5c1c57dd-d6f2-4b41-b61c-d0029c14e1d1_buggy.java
+++ b/tmp/b9f402ee-1aac-485c-a78f-62fd05dbd6fc_fixed.java
@@ -1,19 +1,18 @@
     @Override
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
+        // 01-May-2019, tatu: ... but we MUST verify for resolved types
+        if (_class != null && subclass != null && !_class.isAssignableFrom(subclass)) {
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
         }
-        */
         // 15-Jan-2015, tatu: Not correct; should really re-resolve...
         return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
     }
