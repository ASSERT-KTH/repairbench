diff --git a/tmp/71961f5f-e699-4c4d-bf70-c20c91c52130_buggy.java b/tmp/27f2b5be-f024-4a2d-a973-f5dcf539d59f_fixed.java
index be2af16..fe3a322 100644
--- a/tmp/71961f5f-e699-4c4d-bf70-c20c91c52130_buggy.java
+++ b/tmp/27f2b5be-f024-4a2d-a973-f5dcf539d59f_fixed.java
@@ -1,29 +1,41 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
+        } catch (IllegalArgumentException e) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
-        return instant;
+
+        if (instant < iCutoverMillis) {
+           return instant; // needs to be checked against cutover last 
+        } else {
+             //Recheck with Julian
+             long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+             if (julianInstant < iCutoverMillis)
+                 throw new IllegalArgumentException("Specified date does not exist");
+             else return instant;
+        }
     }
