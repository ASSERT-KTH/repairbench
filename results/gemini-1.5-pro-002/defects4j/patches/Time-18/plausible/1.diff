diff --git a/tmp/ea716b44-40b4-4c02-ae4d-3869faf52227_buggy.java b/tmp/2e5e9810-0d83-40e3-b120-4c20f397962a_fixed.java
index be2af16..e924c4e 100644
--- a/tmp/ea716b44-40b4-4c02-ae4d-3869faf52227_buggy.java
+++ b/tmp/2e5e9810-0d83-40e3-b120-4c20f397962a_fixed.java
@@ -1,29 +1,42 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // Might be a Julian date.
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+             if (instant < iCutoverMillis) {
+                return instant;
+            } else {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+        }
+
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
