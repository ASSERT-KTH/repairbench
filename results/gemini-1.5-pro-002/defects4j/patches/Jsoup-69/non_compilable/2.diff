diff --git a/tmp/4ca10635-7488-448c-ae37-5f46936f0780_buggy.java b/tmp/ee73b756-e61a-4591-b90a-b83fda5086b9_fixed.java
index e69de29..09a0b24 100644
--- a/tmp/4ca10635-7488-448c-ae37-5f46936f0780_buggy.java
+++ b/tmp/ee73b756-e61a-4591-b90a-b83fda5086b9_fixed.java
@@ -0,0 +1,40 @@
+import org.jsoup.Connection;
+import org.jsoup.helper.Validate;
+import org.jsoup.nodes.Element;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public List<Connection.KeyVal> formData() {
+        ArrayList<Connection.KeyVal> data = new ArrayList<>();
+
+        // iterate the form control elements and accumulate their values
+        for (Element el : elements()) {
+            if (!el.tag().isFormSubmittable()) continue; // contents are not form submittable, e.g. label, fieldset
+
+            String name = el.attr("name");
+            if (name == null || name.length() == 0) continue;
+            String type = el.attr("type");
+
+            if ("select".equals(el.tagName())) {
+                Elements options = el.select("option[selected]");
+                boolean set = false;
+                for (Element option : options) {
+                    data.add(HttpConnection.KeyValue.create(name, option.val()));
+                    set = true;
+                }
+                if (!set) {
+                    Element option = el.select("option").first();
+                    if (option != null)
+                        data.add(HttpConnection.KeyValue.create(name, option.val()));
+                }
+            } else if ("checkbox".equals(type) || "radio".equals(type)) {
+                // only add checkbox or radio if they are checked
+                if (el.hasAttr("checked"))
+                    data.add(HttpConnection.KeyValue.create(name, el.val().length() >  0 ? el.val() : "on"));
+            } else {
+                data.add(HttpConnection.KeyValue.create(name, el.val()));
+            }
+        }
+        return data;
+    }
\ No newline at end of file
