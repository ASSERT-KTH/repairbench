diff --git a/tmp/0e01e622-51df-4208-968c-1d4392547a47_buggy.java b/tmp/4ffcab06-30de-4740-a4bf-bf0ccaaf36d7_fixed.java
index 0dbce00..25e44bc 100644
--- a/tmp/0e01e622-51df-4208-968c-1d4392547a47_buggy.java
+++ b/tmp/4ffcab06-30de-4740-a4bf-bf0ccaaf36d7_fixed.java
@@ -1,33 +1,36 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
             	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
+                if (shape == JsonFormat.Shape.NUMBER || shape == JsonFormat.Shape.NUMBER_INT) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                if (shape == JsonFormat.Shape.STRING
+                        || (shape == JsonFormat.Shape.ANY && format.hasPattern())
+                        || (shape == JsonFormat.Shape.ANY && format.hasLocale())
+                        || (shape == JsonFormat.Shape.ANY && format.hasTimeZone())) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
         }
         return this;
     }
