diff --git a/tmp/9f174aee-d524-4e6d-b7cb-9d6dfb71b1f6_buggy.java b/tmp/83f15cd1-29b9-491d-bc5e-4c7ef7565d37_fixed.java
index 0dbce00..75f096a 100644
--- a/tmp/9f174aee-d524-4e6d-b7cb-9d6dfb71b1f6_buggy.java
+++ b/tmp/83f15cd1-29b9-491d-bc5e-4c7ef7565d37_fixed.java
@@ -1,33 +1,47 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
             	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
+                if (shape == JsonFormat.Shape.NUMBER || shape == JsonFormat.Shape.NUMBER_INT) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                if (shape == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
+                //JsonFormat with Shape.ANY and pattern => STRING shape, regardless of user config
+                if (shape == JsonFormat.Shape.ANY && format.hasPattern()) {
+                    TimeZone tz = format.getTimeZone();
+                    final String pattern = format.getPattern();
+                    final Locale loc = format.hasLocale()
+                                    ? format.getLocale()
+                                    : serializers.getLocale();
+                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    if (tz == null) {
+                        tz = serializers.getTimeZone();
+                    }
+                    df.setTimeZone(tz);
+                    return withFormat(Boolean.FALSE, df);
+                }
             }
         }
         return this;
     }
