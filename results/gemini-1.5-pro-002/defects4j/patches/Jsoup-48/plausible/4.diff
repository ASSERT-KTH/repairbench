diff --git a/tmp/daf091e1-0bb6-4be7-86ec-da7642fb4917_buggy.java b/tmp/305cad8d-4764-4fee-bc32-b22d2a989d22_fixed.java
index bcd80aa..75ad5f8 100644
--- a/tmp/daf091e1-0bb6-4be7-86ec-da7642fb4917_buggy.java
+++ b/tmp/305cad8d-4764-4fee-bc32-b22d2a989d22_fixed.java
@@ -1,25 +1,32 @@
         void processResponseHeaders(Map<String, List<String>> resHeaders) {
             for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
                 String name = entry.getKey();
                 if (name == null)
                     continue; // http/1.1 line
 
                 List<String> values = entry.getValue();
                 if (name.equalsIgnoreCase("Set-Cookie")) {
                     for (String value : values) {
                         if (value == null)
                             continue;
                         TokenQueue cd = new TokenQueue(value);
                         String cookieName = cd.chompTo("=").trim();
                         String cookieVal = cd.consumeTo(";").trim();
                         // ignores path, date, domain, validateTLSCertificates et al. req'd?
                         // name not blank, value not null
                         if (cookieName.length() > 0)
                             cookie(cookieName, cookieVal);
                     }
                 } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
-                    if (!values.isEmpty())
-                        header(name, values.get(0));
+                    if (!values.isEmpty()) {
+                        StringBuilder accum = new StringBuilder();
+                        for (int i = 0; i < values.size(); i++) {
+                            accum.append(values.get(i));
+                            if (i < values.size() - 1)
+                                accum.append(", ");
+                        }
+                        header(name, accum.toString());
+                    }
                 }
             }
         }
