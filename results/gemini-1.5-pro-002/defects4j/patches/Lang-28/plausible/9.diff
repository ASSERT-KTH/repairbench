diff --git a/tmp/f45ceb8e-37a7-4b46-a873-ea846696303d_buggy.java b/tmp/79fe0dec-886f-41c3-8bcd-0eb69e15c67d_fixed.java
index 4bbd561..566c1d5 100644
--- a/tmp/f45ceb8e-37a7-4b46-a873-ea846696303d_buggy.java
+++ b/tmp/79fe0dec-886f-41c3-8bcd-0eb69e15c67d_fixed.java
@@ -1,37 +1,50 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        if(index + 1 >= input.length() || input.charAt(index) != '&' || input.charAt(index + 1) != '#') {
+            return 0;
+        }
         int start = index + 2;
         boolean isHex = false;
 
+        if (start < input.length()) {
             char firstChar = input.charAt(start);
             if (firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
+        }
+
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while(end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if (end == input.length()) {
+            return 0;
+        }
+
         int entityValue;
         try {
             if(isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch(NumberFormatException nfe) {
             return 0;
         }
 
+        if (Character.isSupplementaryCodePoint(entityValue)) {
+            char[] chrs = Character.toChars(entityValue);
+            out.write(chrs[0]);
+            out.write(chrs[1]);
+        } else {
             out.write(entityValue);
+        }
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
-        return 0;
-    }
