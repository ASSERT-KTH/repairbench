diff --git a/tmp/d807a54d-3ec0-472f-9159-1c08eccb56d2_buggy.java b/tmp/9fa37d7b-e708-4cb4-8cb8-990a15599e61_fixed.java
index e69de29..9a7ecc8 100644
--- a/tmp/d807a54d-3ec0-472f-9159-1c08eccb56d2_buggy.java
+++ b/tmp/9fa37d7b-e708-4cb4-8cb8-990a15599e61_fixed.java
@@ -0,0 +1,28 @@
+import java.io.*;
+import com.fasterxml.jackson.core.*;
+import com.fasterxml.jackson.core.json.*;
+
+public void testFieldNameQuotingEnabled() throws IOException
+{
+    // // First, test with default factory, with quoting enabled by default
+
+    // First, default, with quotes
+    _testFieldNameQuotingEnabled(JSON_F, true, true, "{\"foo\":1}");
+    _testFieldNameQuotingEnabled(JSON_F, false, true, "{\"foo\":1}");
+
+    // then without quotes
+    _testFieldNameQuotingEnabled(JSON_F, true, false, "{foo:1}");
+    _testFieldNameQuotingEnabled(JSON_F, false, false, "{foo:1}");
+
+    // // Then with alternatively configured factory
+
+    JsonFactory f = JsonFactory.builder()
+            .disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES)
+            .build();
+    _testFieldNameQuotingEnabled(f, true, true, "{\"foo\":1}"); // should still quote, due to explicit enabling
+    _testFieldNameQuotingEnabled(f, false, true, "{\"foo\":1}"); // as per config
+
+    // then without quotes
+    _testFieldNameQuotingEnabled(f, true, false, "{foo:1}");
+    _testFieldNameQuotingEnabled(f, false, false, "{foo:1}");
+}
\ No newline at end of file
