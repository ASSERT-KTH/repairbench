diff --git a/tmp/9057961a-bcbc-4e73-8ce6-15f409c04ab8_buggy.java b/tmp/088b7fcb-41ed-4f50-8c02-cf6343d86b95_fixed.java
index e69de29..687e362 100644
--- a/tmp/9057961a-bcbc-4e73-8ce6-15f409c04ab8_buggy.java
+++ b/tmp/088b7fcb-41ed-4f50-8c02-cf6343d86b95_fixed.java
@@ -0,0 +1,63 @@
+import com.fasterxml.jackson.core.JsonFactory;
+import com.fasterxml.jackson.core.JsonGenerator;
+import java.io.IOException;
+import java.io.StringWriter;
+
+public class Fix {
+    private void _testFieldNameQuotingEnabled(JsonFactory f, boolean useBytes,
+            boolean quote, String expected) throws IOException
+    {
+        StringWriter sw = new StringWriter();
+        JsonGenerator gen;
+
+        if (useBytes) {
+            gen = f.createGenerator(sw);
+        } else {
+            gen = f.createGenerator(sw);
+        }
+        gen.writeStartObject();
+        if (quote) { // should be via setting, not forcing...
+            gen.writeFieldName("foo");
+        } else {
+            gen.writeFieldName("foo");
+        }
+        gen.writeNumber(1);
+        gen.writeEndObject();
+        gen.close();
+
+        assertEquals(expected, sw.toString());
+    }
+
+    private void assertEquals(String expected, String actual) {
+        if (!expected.equals(actual)) {
+            throw new AssertionError("expected:<" + expected + "> but was:<" + actual + ">");
+        }
+    }
+
+    private JsonFactory JSON_F = new JsonFactory();
+
+    public void testFieldNameQuotingEnabled() throws IOException
+    {
+        // // First, test with default factory, with quoting enabled by default
+        
+        // First, default, with quotes
+        _testFieldNameQuotingEnabled(JSON_F, true, true, "{\"foo\":1}");
+        _testFieldNameQuotingEnabled(JSON_F, false, true, "{\"foo\":1}");
+
+        // then without quotes
+        _testFieldNameQuotingEnabled(JSON_F, true, false, "{foo:1}");
+        _testFieldNameQuotingEnabled(JSON_F, false, false, "{foo:1}");
+
+        // // Then with alternatively configured factory
+
+        JsonFactory JF2 = new JsonFactory();
+        JF2.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+
+        _testFieldNameQuotingEnabled(JF2, true, true, "{\"foo\":1}");
+        _testFieldNameQuotingEnabled(JF2, false, true, "{\"foo\":1}");
+
+        // then without quotes
+        _testFieldNameQuotingEnabled(JF2, true, false, "{foo:1}");
+        _testFieldNameQuotingEnabled(JF2, false, false, "{foo:1}");
+    }
+}
\ No newline at end of file
