diff --git a/tmp/07bdb88f-49b6-48fc-9629-a775be9e2667_buggy.java b/tmp/a84a7522-4ec6-475b-809b-2d41c0aa4a80_fixed.java
index e69de29..9725222 100644
--- a/tmp/07bdb88f-49b6-48fc-9629-a775be9e2667_buggy.java
+++ b/tmp/a84a7522-4ec6-475b-809b-2d41c0aa4a80_fixed.java
@@ -0,0 +1,42 @@
+import java.io.*;
+import com.fasterxml.jackson.core.*;
+import com.fasterxml.jackson.core.json.*;
+
+public void _testFieldNameQuotingEnabled(JsonFactory f, boolean useBytes,
+                                           boolean quoted, String exp)
+        throws IOException
+{
+    String FIELD = "foo";
+    int VALUE = 1;
+
+    JsonGenerator jg;
+    ByteArrayOutputStream bytes = useBytes ? new ByteArrayOutputStream() : null;
+    StringWriter sw = useBytes ? null : new StringWriter();
+
+    if (useBytes) {
+        jg = f.createGenerator(bytes, JsonEncoding.UTF8);
+    } else {
+        jg = f.createGenerator(sw);
+    }
+    jg.writeStartObject();
+    jg.writeFieldName(FIELD);
+    jg.writeNumber(VALUE);
+    jg.writeEndObject();
+    jg.close();
+
+    String actual = useBytes ? bytes.toString("UTF-8") : sw.toString();
+
+    if (quoted) {
+        if (!actual.equals(exp)) {
+            fail("Expected '"+exp+"', got '"+actual+"'");
+        }
+    } else {
+        // Let's verify quoting IS disabled (if not there...)
+        if (actual.contains("\""+FIELD+"\"")) {
+             fail("Expected \""+FIELD+"\" NOT to be quoted in '"+actual+"'");
+        }
+        if (!exp.equals(actual)) {
+            fail("Expected '"+exp+"', got '"+actual+"'");
+        }
+    }
+}
\ No newline at end of file
