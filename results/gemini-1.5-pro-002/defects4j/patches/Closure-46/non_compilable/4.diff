diff --git a/tmp/97ca2257-e22f-4de3-b657-c22b6e1c6bc7_buggy.java b/tmp/049bd0d0-fa1f-48f7-9067-0c4254d54060_fixed.java
index 46817a7..27e606d 100644
--- a/tmp/97ca2257-e22f-4de3-b657-c22b6e1c6bc7_buggy.java
+++ b/tmp/049bd0d0-fa1f-48f7-9067-0c4254d54060_fixed.java
@@ -1,16 +1,27 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+    RecordType thatRecord = that.toMaybeRecordType();
+    if (isEmptyType() || thatRecord.isEmptyType()) {
+      return getTopMostAncestorOfType(JSTypeNative.RECORD_TYPE);
+    }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+      if (thatRecord.hasProperty(property)) {
+        JSType thisPropertyType = getPropertyType(property);
+        JSType thatPropertyType = thatRecord.getPropertyType(property);
+        builder.addProperty(property, thisPropertyType.getLeastSupertype(thatPropertyType),
             getPropertyNode(property));
       }
     }
+    for (String property : thatRecord.getProperties()) {
+      if (!hasProperty(property)) {
+        builder.addProperty(property, thatRecord.getPropertyType(property),
+            thatRecord.getPropertyNode(property));
+      }
+    }
     return builder.build();
   }
