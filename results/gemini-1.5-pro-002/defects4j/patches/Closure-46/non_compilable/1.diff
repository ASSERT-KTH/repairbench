diff --git a/tmp/9e6b047d-d456-431b-849b-d3e87fa10818_buggy.java b/tmp/8dabaa97-aeea-45c8-acea-8035d8e593d4_fixed.java
index 46817a7..f714873 100644
--- a/tmp/9e6b047d-d456-431b-849b-d3e87fa10818_buggy.java
+++ b/tmp/8dabaa97-aeea-45c8-acea-8035d8e593d4_fixed.java
@@ -1,16 +1,26 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+    RecordType thatRecord = that.toMaybeRecordType();
+    if (thatRecord == null) {
+      return super.getLeastSupertype(that);
+    }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+      if (thatRecord.hasProperty(property)) {
+        builder.addProperty(property,
+            getPropertyType(property).getLeastSupertype(
+                thatRecord.getPropertyType(property)),
             getPropertyNode(property));
       }
     }
-    return builder.build();
+    for (String property : thatRecord.getProperties()) {
+      if (!hasProperty(property)) {
+        builder.addProperty(property, thatRecord.getPropertyType(property), null);
+      }
+    }
+    return builder.build().getLeastSupertype(this);
   }
