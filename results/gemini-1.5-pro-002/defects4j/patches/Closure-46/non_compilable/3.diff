diff --git a/tmp/0ebf6c64-15bb-464c-8fc0-f0693be815bc_buggy.java b/tmp/62f83e95-5ada-4ece-8935-02ea43f2d669_fixed.java
index 46817a7..e3f7451 100644
--- a/tmp/0ebf6c64-15bb-464c-8fc0-f0693be815bc_buggy.java
+++ b/tmp/62f83e95-5ada-4ece-8935-02ea43f2d669_fixed.java
@@ -1,16 +1,39 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+
+    RecordType thatRecord = that.toMaybeRecordType();
+    if (thatRecord == null) {
+      return super.getLeastSupertype(that);
+    }
+
+    boolean hasCommonProperties = false;
+    for (String property : properties.keySet()) {
+      if (thatRecord.hasProperty(property)) {
+        hasCommonProperties = true;
+        break;
+      }
+    }
+
+    if (hasCommonProperties) {
         RecordTypeBuilder builder = new RecordTypeBuilder(registry);
         for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+          if (thatRecord.hasProperty(property)) {
+              JSType thisPropertyType = getPropertyType(property);
+              JSType thatPropertyType = thatRecord.getPropertyType(property);
+              if (thisPropertyType != null && thatPropertyType != null &&
+                  thisPropertyType.isEquivalentTo(thatPropertyType)) {
+                builder.addProperty(property, thisPropertyType, getPropertyNode(property));
               }
            }
+        }
+         if (!builder.isEmpty()){
            return builder.build();
          }
+    }
+
+
+    return registry.createUnionType(this, that);
+  }
