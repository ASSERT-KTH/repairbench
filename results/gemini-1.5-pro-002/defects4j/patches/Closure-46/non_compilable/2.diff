diff --git a/tmp/0ddc831d-0d39-4ae9-bab4-5bd2af22daf1_buggy.java b/tmp/82c65331-8fb0-431f-b532-0804b27bc0d7_fixed.java
index 46817a7..3f9c42f 100644
--- a/tmp/0ddc831d-0d39-4ae9-bab4-5bd2af22daf1_buggy.java
+++ b/tmp/82c65331-8fb0-431f-b532-0804b27bc0d7_fixed.java
@@ -1,16 +1,27 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+    RecordType thatRecord = that.toMaybeRecordType();
+    if (isEmptyType() || thatRecord.isEmptyType()) {
+        return getTopMostAncestorOfType(JSTypeNative.RECORD_TYPE);
+    }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+      if (thatRecord.hasProperty(property)) {
+        JSType thisPropertyType = getPropertyType(property);
+        JSType thatPropertyType = thatRecord.getPropertyType(property);
+        builder.addProperty(property, thisPropertyType.getLeastSupertype(thatPropertyType),
             getPropertyNode(property));
       }
     }
-    return builder.build();
+    for (String property : thatRecord.getProperties()) {
+      if (!hasProperty(property)) {
+          builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));
+      }
+    }
+
+    return builder.build().getLeastSupertype(this);
   }
