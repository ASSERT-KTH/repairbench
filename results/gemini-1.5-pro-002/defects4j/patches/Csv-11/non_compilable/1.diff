diff --git a/tmp/cc2f883f-dffb-400c-acd0-68e5b114cbdc_buggy.java b/tmp/79e7f209-2b36-4148-8b44-fdfd83f54df4_fixed.java
index 784bbab..354c9a6 100644
--- a/tmp/cc2f883f-dffb-400c-acd0-68e5b114cbdc_buggy.java
+++ b/tmp/79e7f209-2b36-4148-8b44-fdfd83f54df4_fixed.java
@@ -1,42 +1,49 @@
     /**
      * Initializes the name to index mapping if the format defines a header.
      *
      * @return null if the format has no header.
      * @throws IOException if there is a problem reading the header or skipping the first record
      */
     private Map<String, Integer> initializeHeader() throws IOException {
         Map<String, Integer> hdrMap = null;
         final String[] formatHeader = this.format.getHeader();
         if (formatHeader != null) {
             hdrMap = new LinkedHashMap<String, Integer>();
 
             String[] headerRecord = null;
             if (formatHeader.length == 0) {
                 // read the header from the first line of the file
                 final CSVRecord nextRecord = this.nextRecord();
                 if (nextRecord != null) {
                     headerRecord = nextRecord.values();
                 }
             } else {
                 if (this.format.getSkipHeaderRecord()) {
                     this.nextRecord();
                 }
                 headerRecord = formatHeader;
             }
 
             // build the name to index mappings
             if (headerRecord != null) {
                 for (int i = 0; i < headerRecord.length; i++) {
                     final String header = headerRecord[i];
+                    if (header == null) {
+                        if (this.format.getNullString() == null) {
+                            throw new IllegalArgumentException("The header contains a null name: \"" + header +
+                                    "\" in " + Arrays.toString(headerRecord));
+                        }
+                        header = this.format.getNullString();
+                    }
                     final boolean containsHeader = hdrMap.containsKey(header);
                     final boolean emptyHeader = header.trim().isEmpty();
                     if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
                         throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                                 "\" in " + Arrays.toString(headerRecord));
                     }
                     hdrMap.put(header, Integer.valueOf(i));
                 }
             }
         }
         return hdrMap;
     }
