diff --git a/tmp/088a0854-7b92-471c-9323-a37d3d482463_buggy.java b/tmp/a10dea97-ad3c-4041-888b-e0637ac758f0_fixed.java
index 0b7c52e..2102b55 100644
--- a/tmp/088a0854-7b92-471c-9323-a37d3d482463_buggy.java
+++ b/tmp/a10dea97-ad3c-4041-888b-e0637ac758f0_fixed.java
@@ -1,27 +1,44 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
         // We should never see a mix of numbers and strings.
+        if (child.isStringKey()) {
           String name = child.getString();
-        T type = typeSystem.getType(getScope(), n, name);
+          T type = typeSystem.getType(getScope(), child.getFirstChild(), name);
 
           Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
+          if (!prop.scheduleRenaming(child.getFirstChild(),
                                      processProperty(t, prop, type, null))) {
             // TODO(user): It doesn't look like the user can do much in this
             // case right now.
             if (propertiesToErrorFor.containsKey(name)) {
               compiler.report(JSError.make(
                   t.getSourceName(), child, propertiesToErrorFor.get(name),
                   Warnings.INVALIDATION, name,
                   (type == null ? "null" : type.toString()), n.toString(), ""));
             }
           }
+        } else {
+          // GET or SET
+          Node key = child.getFirstChild();
+          String name = key.getString();
+          T type = typeSystem.getType(getScope(), key, name);
+          Property prop = getProperty(name);
+          if (!prop.scheduleRenaming(key, processProperty(t, prop, type, null))) {
+           if (propertiesToErrorFor.containsKey(name)) {
+             compiler.report(JSError.make(
+                 t.getSourceName(), child, propertiesToErrorFor.get(name),
+                 Warnings.INVALIDATION, name,
+                 (type == null ? "null" : type.toString()), n.toString(), ""));
+           }
+         }
+
+        }
       }
     }
