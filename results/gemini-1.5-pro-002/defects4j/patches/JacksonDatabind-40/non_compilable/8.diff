diff --git a/tmp/50d082a6-b387-4933-a0d7-6ee451efdadb_buggy.java b/tmp/2e1418ed-591e-47dd-bc8e-e8cb3b093100_fixed.java
index e69de29..66e0432 100644
--- a/tmp/50d082a6-b387-4933-a0d7-6ee451efdadb_buggy.java
+++ b/tmp/2e1418ed-591e-47dd-bc8e-e8cb3b093100_fixed.java
@@ -0,0 +1,53 @@
+import com.fasterxml.jackson.annotation.JsonSetter;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.exc.MismatchedInputException;
+
+import java.io.IOException;
+
+public class TestSimpleTypes {
+
+    private void _testEmptyToNullCoercion(Class<?> primType, Object emptyValue) throws IOException
+    {
+        ObjectMapper m = new ObjectMapper();
+        m.setDefaultSetterInfo(JsonSetter.Value.forContentNulls(Nulls.AS_EMPTY));
+        Bean b = m.readValue("{\"value\":\"\"}", Bean.class);
+        if (b.value != emptyValue) {
+            throw new AssertionError("Should not have passed");
+        }
+        // also, defaulting should work for nulls as well, even if it's not enabled:
+        b = m.readValue("{\"value\":null}", Bean.class);
+        if (b.value != emptyValue) {
+            throw new AssertionError("Should not have passed");
+        }
+
+        // and for both empty AND null, with explicit defaulting:
+        m.setDefaultSetterInfo(JsonSetter.Value.forContentNulls(Nulls.AS_EMPTY)
+                .forContentEmptyValue(emptyValue));
+        b = m.readValue("{\"value\":\"\"}", Bean.class);
+        if (b.value != emptyValue) {
+            throw new AssertionError("Should not have passed");
+        }
+        b = m.readValue("{\"value\":null}", Bean.class);
+        if (b.value != emptyValue) {
+            throw new AssertionError("Should not have passed");
+        }
+        m = new ObjectMapper();
+        m.coercionConfigDefaults().setCoercion(CoercionInputShape.EmptyString, CoercionAction.AsNull);
+        try {
+           m.readValue("{\"value\":\"\"}", Bean.class);
+           fail("Should not have passed");
+        } catch (MismatchedInputException e) {
+           verifyException(e, "Cannot coerce empty String (\"\")");
+           verifyException(e, "to `"+primType.getName()+"` value");
+        }
+
+    }
+
+    static class Bean {
+        public Object value;
+
+        public void setValue(Object v) {
+            value = v;
+        }
+    }
+}
\ No newline at end of file
