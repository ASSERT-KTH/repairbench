diff --git a/tmp/2725faca-0cc3-4e1f-941a-e68c4121da62_buggy.java b/tmp/3a0c2c85-4d05-440f-a173-b33542d41133_fixed.java
index e69de29..8d10bbb 100644
--- a/tmp/2725faca-0cc3-4e1f-941a-e68c4121da62_buggy.java
+++ b/tmp/3a0c2c85-4d05-440f-a173-b33542d41133_fixed.java
@@ -0,0 +1,33 @@
+import com.fasterxml.jackson.annotation.JsonSetter;
+import com.fasterxml.jackson.annotation.Nulls;
+import com.fasterxml.jackson.databind.ObjectMapper;
+
+import java.io.IOException;
+
+public class TestSimpleTypes {
+
+    private void _testEmptyToNullCoercion(Class<?> cls, Object defaultValue) throws IOException
+    {
+        ObjectMapper m = new ObjectMapper();
+        m.setDefaultPropertyInclusion(Value.construct(JsonInclude.Include.NON_EMPTY, JsonInclude.Include.ALWAYS));
+        EmptyBean bean = m.readerFor(EmptyBean.class)
+            .with(m.deserializationConfig().with(
+                    new JsonSetter.Value().withNulls(Nulls.AS_EMPTY)))
+            .readValue("{\"value\":\"\"}");
+        assertNull("Should coerce empty String to `null` for " + cls.getName(), bean.value);
+    }
+
+    static class EmptyBean {
+        @JsonSetter(nulls=Nulls.AS_EMPTY)
+        public Object value;
+    }
+
+    // // // Test methods
+
+    public void testEmptyToNullCoercionForPrimitives() throws Exception {
+        _testEmptyToNullCoercion(int.class, Integer.valueOf(0));
+        _testEmptyToNullCoercion(long.class, Long.valueOf(0));
+        _testEmptyToNullCoercion(double.class, Double.valueOf(0.0));
+        _testEmptyToNullCoercion(float.class, Float.valueOf(0.0f));
+    }
+}
\ No newline at end of file
