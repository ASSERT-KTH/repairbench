diff --git a/tmp/b3447ccb-9dce-4b6e-92d5-8136adb4ec8b_buggy.java b/tmp/46408949-ffed-4c1a-8b39-da6619e5333d_fixed.java
index e69de29..57c503e 100644
--- a/tmp/b3447ccb-9dce-4b6e-92d5-8136adb4ec8b_buggy.java
+++ b/tmp/46408949-ffed-4c1a-8b39-da6619e5333d_fixed.java
@@ -0,0 +1,64 @@
+import com.fasterxml.jackson.annotation.JsonSetter;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
+
+import java.io.IOException;
+
+public class TestSimpleTypes_testEmptyToNullCoercionForPrimitives {
+
+    static class Wrapper {
+        public int i;
+        public long l;
+        public double d;
+        public float f;
+
+        public Wrapper() { }
+
+        public Wrapper(int i0, long l0, double d0, float f0) {
+            i = i0;
+            l = l0;
+            d = d0;
+            f = f0;
+        }
+
+        @JsonSetter(nulls=JsonSetter.Nulls.AS_EMPTY)
+        public void setI(int i) { this.i = i; }
+
+        @JsonSetter(nulls=JsonSetter.Nulls.AS_EMPTY)
+        public void setL(long l) { this.l = l; }
+
+        @JsonSetter(nulls=JsonSetter.Nulls.AS_EMPTY)
+        public void setD(double d) { this.d = d; }
+
+        @JsonSetter(nulls=JsonSetter.Nulls.AS_EMPTY)
+        public void setF(float f) { this.f = f; }
+    }
+
+    private void _testEmptyToNullCoercion(Class<?> primType, Object emptyValue) throws IOException
+    {
+        ObjectMapper mapper = new ObjectMapper();
+
+        mapper.setDefaultSetterInfo(JsonSetter.Value.forValueNulls(JsonSetter.Nulls.AS_EMPTY));
+        Wrapper w = mapper.readValue("{}", Wrapper.class);
+
+        if (primType == int.class) {
+           if (emptyValue.equals(w.i)) {
+               throw new AssertionError("Should not have passed");
+           }
+        } else if (primType == long.class) {
+           if (emptyValue.equals(w.l)) {
+               throw new AssertionError("Should not have passed");
+           }
+        } else if (primType == double.class) {
+            if (emptyValue.equals(w.d)) {
+                throw new AssertionError("Should not have passed");
+            }
+        } else if (primType == float.class) {
+            if (emptyValue.equals(w.f)) {
+                throw new AssertionError("Should not have passed");
+            }
+        }
+
+
+    }
+}
\ No newline at end of file
