diff --git a/tmp/deab24b5-77d6-44de-a4ee-0b1739aa66db_buggy.java b/tmp/b5462812-c190-4cdf-bd3b-9caacab81144_fixed.java
index e69de29..500f87d 100644
--- a/tmp/deab24b5-77d6-44de-a4ee-0b1739aa66db_buggy.java
+++ b/tmp/b5462812-c190-4cdf-bd3b-9caacab81144_fixed.java
@@ -0,0 +1,38 @@
+import com.fasterxml.jackson.annotation.JsonSetter;
+import com.fasterxml.jackson.databind.DeserializationFeature;
+import com.fasterxml.jackson.databind.ObjectMapper;
+
+import java.io.IOException;
+
+public class TestSimpleTypes {
+
+    private void _testEmptyToNullCoercion(Class<?> primType, Object emptyValue) throws IOException
+    {
+        ObjectMapper m = new ObjectMapper();
+        m.enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);
+        // First, verify that we get empty value if coercion is not enabled
+        ObjectResult ob = m.readValue("{\"value\":\"\"}", ObjectResult.class);
+        if (!emptyValue.equals(ob.value)) {
+          fail("Should get empty value ("+emptyValue+") with empty String and no-coercion; got "+ob.value);
+        }
+        // and then that we get null with coercion
+        m = new ObjectMapper();
+
+        m.enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);
+        m.configOverride(primType)
+                .setSetterInfo(JsonSetter.Value.forContentNulls(Nulls.AS_EMPTY));
+       
+        ob = m.readValue("{\"value\":\"\"}", ObjectResult.class);
+        if (ob.value != null) {
+            fail("Should get null with empty String and coercion; got "+ob.value+" (type "+ob.value.getClass()+")");
+        }
+    }
+
+    static class ObjectResult {
+        public Object value;
+
+        public void setValue(Object v) {
+            value = v;
+        }
+    }
+}
\ No newline at end of file
