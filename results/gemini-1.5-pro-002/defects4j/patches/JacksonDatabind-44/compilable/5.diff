diff --git a/tmp/dda39e27-d5a4-4947-afb8-640c8f598d65_buggy.java b/tmp/347ae5c2-d673-42dd-9ec1-efbf28854926_fixed.java
index 1a63a66..a638608 100644
--- a/tmp/dda39e27-d5a4-4947-afb8-640c8f598d65_buggy.java
+++ b/tmp/347ae5c2-d673-42dd-9ec1-efbf28854926_fixed.java
@@ -1,21 +1,18 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+        // 01-May-2017, tatu: Related to [databind#1596], may now try to check.
+        if (!_class.isAssignableFrom(subclass)) {
+             throw new IllegalArgumentException("Class "+subclass.getName()+" not subtype of "+_class.getName());
+        }
+        // Ok, now can specialize the type:
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
     }
