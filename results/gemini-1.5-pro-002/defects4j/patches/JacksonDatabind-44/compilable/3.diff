diff --git a/tmp/73c81a5e-a4eb-4860-ad39-da42142377c1_buggy.java b/tmp/bc12cf79-4680-4c57-ad47-0156d71a5d91_fixed.java
index 1a63a66..1b80856 100644
--- a/tmp/73c81a5e-a4eb-4860-ad39-da42142377c1_buggy.java
+++ b/tmp/bc12cf79-4680-4c57-ad47-0156d71a5d91_fixed.java
@@ -1,21 +1,21 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+        // 21-Mar-2017, tatu: Ok, now can and should... and checking prevents an
+        //    infinite loop, too (in absence of `TypeModifier`)
+        if (!_class.isAssignableFrom(subclass)) {
+             throw new IllegalArgumentException("Class "+subclass.getName()+" not subtype of "+_class.getName());
+        }
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
         // Otherwise, stitch together the hierarchy. First, super-class
         // if not found, try a super-interface
         // should not get here but...
     }
