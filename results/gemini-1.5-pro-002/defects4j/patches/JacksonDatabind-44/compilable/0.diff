diff --git a/tmp/f6f67bea-f933-4da1-8930-b8d85a88d124_buggy.java b/tmp/738dfbbb-12f6-429e-bebe-ce7e3bf6690b_fixed.java
index 1a63a66..3605b36 100644
--- a/tmp/f6f67bea-f933-4da1-8930-b8d85a88d124_buggy.java
+++ b/tmp/738dfbbb-12f6-429e-bebe-ce7e3bf6690b_fixed.java
@@ -1,21 +1,18 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+        // TODO: fix in 2.8.  For now, ensure that interfaces are checked.
+        if (_class.isAssignableFrom(subclass)) { 
             return new SimpleType(subclass, _bindings, this, _superInterfaces,
                     _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
+        }
         // should not get here but...
+        throw new IllegalArgumentException("Class "+subclass.getName()+" not subtype of "+_class.getName());
     }
