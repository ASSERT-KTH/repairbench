diff --git a/tmp/6fbf6192-c77d-474c-9021-6e5455f3be03_buggy.java b/tmp/b09f9f50-35e9-41b7-a32d-6359b4b1f21e_fixed.java
index 1a63a66..7924e2f 100644
--- a/tmp/6fbf6192-c77d-474c-9021-6e5455f3be03_buggy.java
+++ b/tmp/b09f9f50-35e9-41b7-a32d-6359b4b1f21e_fixed.java
@@ -1,21 +1,20 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+        // TODO: fix in 2.8. So for now, only check direct sub-classes
+        if (!_class.isAssignableFrom(subclass)) {
+            throw new IllegalArgumentException("Class "+subclass.getName()+" not subtype of "+_class.getName());
+        }
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
         // Otherwise, stitch together the hierarchy. First, super-class
         // if not found, try a super-interface
         // should not get here but...
     }
