diff --git a/tmp/203c396e-f451-4462-848a-69775e6fa645_buggy.java b/tmp/37633534-0037-485f-add8-b037dca67a73_fixed.java
index 1a63a66..f8155b3 100644
--- a/tmp/203c396e-f451-4462-848a-69775e6fa645_buggy.java
+++ b/tmp/37633534-0037-485f-add8-b037dca67a73_fixed.java
@@ -1,21 +1,24 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+        // 01-May-2017, tatu: As per [databind#1696], may also need to consider
+        //   difference between "raw" and non-raw types.
+
+        // TODO: fix in 2.8 or later
+        if (!_class.isAssignableFrom(subclass)) {
+           return new SimpleType(subclass, _bindings, this, _superInterfaces,
+                    _valueHandler, _typeHandler, _asStatic);
+        }
             return new SimpleType(subclass, _bindings, this, _superInterfaces,
                     _valueHandler, _typeHandler, _asStatic);
         // Otherwise, stitch together the hierarchy. First, super-class
         // if not found, try a super-interface
         // should not get here but...
     }
