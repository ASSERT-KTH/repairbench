diff --git a/tmp/95d8ad75-211e-4c2c-87a8-d23f228175c9_buggy.java b/tmp/8e7f5ff9-0278-4a7f-91d1-dbe71cb9aaa7_fixed.java
index 1a63a66..45ad10c 100644
--- a/tmp/95d8ad75-211e-4c2c-87a8-d23f228175c9_buggy.java
+++ b/tmp/8e7f5ff9-0278-4a7f-91d1-dbe71cb9aaa7_fixed.java
@@ -1,21 +1,25 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+        // 26-Nov-2016, tatu: ... not quite yet...
+        if (!_class.isAssignableFrom(subclass)) {
+           // Ideally should also check for assignability, but that gets tricky
+           // with potential "natural types" -- would need both Class.isAssignableFrom()
+           // and TypeBindings.isAssignable() checks (2.7 did have the latter; 2.8 not)
+
+            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+                    _valueHandler, _typeHandler, _asStatic);
+        }
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
         // Otherwise, stitch together the hierarchy. First, super-class
         // if not found, try a super-interface
         // should not get here but...
     }
