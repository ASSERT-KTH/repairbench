diff --git a/tmp/9d1da413-5849-468e-bac0-0d63114e11d7_buggy.java b/tmp/91448f65-e545-47e6-b9a8-18186c8fb4ab_fixed.java
index b6b11b6..5dba928 100644
--- a/tmp/9d1da413-5849-468e-bac0-0d63114e11d7_buggy.java
+++ b/tmp/91448f65-e545-47e6-b9a8-18186c8fb4ab_fixed.java
@@ -1,38 +1,39 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      *
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
+                appendTo.append(c, lastHold, i - lastHold).append(
                         QUOTE);
                 pos.setIndex(i + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
+                i = pos.getIndex() -1;
                 continue;
             }
-            switch (c[pos.getIndex()]) {
+            switch (c[i]) {
             case QUOTE:
-                next(pos);
+                pos.setIndex(i + 1);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                        pos.getIndex() - lastHold -1);
             default:
                 next(pos);
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
