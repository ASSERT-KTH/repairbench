diff --git a/tmp/0e027d17-af1b-434f-9316-5d589907503a_buggy.java b/tmp/993aa129-a830-450e-9021-aa0fe31d60e0_fixed.java
index a6f008f..432bad7 100644
--- a/tmp/0e027d17-af1b-434f-9316-5d589907503a_buggy.java
+++ b/tmp/993aa129-a830-450e-9021-aa0fe31d60e0_fixed.java
@@ -1,11 +1,19 @@
     /**
      * Method that can be called on backends that support passing opaque datatypes of
      * non-JSON formats
      *
      * @since 2.8
      */
     public void writeEmbeddedObject(Object object) throws IOException {
         // 01-Sep-2016, tatu: As per [core#318], handle small number of cases
-        throw new JsonGenerationException("No native support for writing embedded objects",
-                this);
+        if (object == null) {
+            // 14-Mar-2023, tatu: [core#855] Special case to allow `null` as alias
+            writeNull();
+        } else if (object instanceof byte[]) {
+            byte[] data = (byte[]) object;
+            _writeBinary(data, 0, data.length);
+        } else {
+            throw new JsonGenerationException("No native support for writing embedded objects of type "
+                    +object.getClass().getName(), this);
+        }
     }
