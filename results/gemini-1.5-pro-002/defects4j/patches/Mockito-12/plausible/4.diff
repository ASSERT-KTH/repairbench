diff --git a/tmp/bb8e8348-31d1-4264-8a0f-d1cb106a04d1_buggy.java b/tmp/5b30cbf1-c1bd-4f6f-b785-2d00fbde01bb_fixed.java
index bada2b6..b69aba0 100644
--- a/tmp/bb8e8348-31d1-4264-8a0f-d1cb106a04d1_buggy.java
+++ b/tmp/5b30cbf1-c1bd-4f6f-b785-2d00fbde01bb_fixed.java
@@ -1,16 +1,20 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
+    public Class<?> getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
+            if (actual instanceof Class) {
+                return (Class<?>) actual;
+            } else if (actual instanceof ParameterizedType) {
+                return (Class<?>) ((ParameterizedType) actual).getRawType();
+            }
                 //in case of nested generics we don't go deep
         }
         
         return Object.class;
     }
