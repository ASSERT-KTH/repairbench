diff --git a/tmp/23ae1d54-c038-4c17-b775-401a3f412bc3_buggy.java b/tmp/b1db1765-29a0-4cb7-b530-41b3d7cc2f3b_fixed.java
index 3002587..f5e0b8c 100644
--- a/tmp/23ae1d54-c038-4c17-b775-401a3f412bc3_buggy.java
+++ b/tmp/b1db1765-29a0-4cb7-b530-41b3d7cc2f3b_fixed.java
@@ -1,10 +1,35 @@
     /**
      * Fits a Gaussian function to the observed points.
      *
      * @return the parameters of the Gaussian function that best fits the
      * observed points (in the same order as above).
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        double[] parameters = fit(new Gaussian.Parametric(), guess);
+        if (Double.isNaN(parameters[0]) || Double.isNaN(parameters[1]) || Double.isNaN(parameters[2])) {
+            // try again using a different starting point
+            double[] newGuess = new double[3];
+            if (guess[0] == 0) {
+                newGuess[0] = 1e-10;
+            } else {
+                newGuess[0] = guess[0];
+            }
+
+            if (guess[1] == 0) {
+                newGuess[1] = 1e-10;
+            } else {
+                newGuess[1] = guess[1];
+            }
+
+            if (guess[2] <= 0) {
+                newGuess[2] = 1e-10;
+            } else {
+                newGuess[2] = guess[2];
+            }
+
+            parameters = fit(new Gaussian.Parametric(), newGuess);
+
+        }
+        return parameters;
     }
