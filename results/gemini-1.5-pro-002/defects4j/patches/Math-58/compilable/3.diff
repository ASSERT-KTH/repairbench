diff --git a/tmp/65bfa480-13f7-4ac8-b0e8-99c676ac45f1_buggy.java b/tmp/a5baf438-8c5c-440b-96e1-9f502779b840_fixed.java
index 3002587..604599e 100644
--- a/tmp/65bfa480-13f7-4ac8-b0e8-99c676ac45f1_buggy.java
+++ b/tmp/a5baf438-8c5c-440b-96e1-9f502779b840_fixed.java
@@ -1,10 +1,25 @@
     /**
      * Fits a Gaussian function to the observed points.
      *
      * @return the parameters of the Gaussian function that best fits the
      * observed points (in the same order as above).
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        double[] parameters = fit(new Gaussian.Parametric(), guess);
+        if (Double.isNaN(parameters[0]) || Double.isNaN(parameters[1]) || Double.isNaN(parameters[2])) {
+            // try to fit a gaussian curve with default maximum value
+            final WeightedObservedPoint[] obs = getObservations();
+            double max = obs[0].getY();
+            for (int i = 1; i < obs.length; ++i) {
+                if (obs[i].getY() > max) {
+                    max = obs[i].getY();
+                }
+            }
+
+            double[] newGuess = new double[]{max, guess[1], guess[2]};
+            parameters = fit(new Gaussian.Parametric(), newGuess);
+        }
+
+        return parameters;
     }
