diff --git a/tmp/ea2e2cd0-e8c8-4069-92ca-34836be3c1af_buggy.java b/tmp/587a3979-210f-46e0-ad65-6aa644681977_fixed.java
index e69de29..863391e 100644
--- a/tmp/ea2e2cd0-e8c8-4069-92ca-34836be3c1af_buggy.java
+++ b/tmp/587a3979-210f-46e0-ad65-6aa644681977_fixed.java
@@ -0,0 +1,38 @@
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
+import com.fasterxml.jackson.databind.ObjectMapper;
+
+import java.io.IOException;
+
+public class TestTypeFactoryWithRecursiveTypes {
+
+    @JsonAutoDetect(fieldVisibility = Visibility.ANY)
+    static class Base {
+        public int base = 1;
+    }
+
+    @JsonAutoDetect(fieldVisibility = Visibility.ANY)
+    static class Sub extends Base {
+        public int sub = 2;
+    }
+
+
+    private ObjectMapper objectMapper() {
+        return new ObjectMapper();
+    }
+
+    public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {
+        TypeFactory tf = TypeFactory.defaultInstance();
+        tf.constructType(Base.class);
+        tf.constructType(Sub.class);
+        Sub sub = new Sub();
+        String serialized = objectMapper().writeValueAsString(sub);
+        assertEquals("{\"base\":1,\"sub\":2}", serialized);
+    }
+
+    private void assertEquals(String expected, String actual) {
+        if (!expected.equals(actual)) {
+            throw new AssertionError("Expected: " + expected + ", Actual: " + actual);
+        }
+    }
+}
\ No newline at end of file
