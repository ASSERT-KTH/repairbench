diff --git a/tmp/f7e759dd-bbee-4c4f-a552-44e53a918c09_buggy.java b/tmp/7ad2e01c-c04a-44d6-bcc1-03cae6820827_fixed.java
index 4e8b037..0e12910 100644
--- a/tmp/f7e759dd-bbee-4c4f-a552-44e53a918c09_buggy.java
+++ b/tmp/7ad2e01c-c04a-44d6-bcc1-03cae6820827_fixed.java
@@ -1,20 +1,35 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+            valueList = new ArrayList();
         }
+        if(defaultValues != null) {
+            valueList.addAll(defaultValues);
+        }
+
 
         // augment the list with the default values
         if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+            List defaultVal = (List) this.defaultValues.get(option);
+            if (defaultVal != null) {
+                valueList.addAll(defaultVal);
             }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+        } else {
+            List defaultVal = (List) this.defaultValues.get(option);
+            if (defaultVal != null) {
+                int valueListSize = valueList.size();
+                for (int i = 0; i < defaultVal.size(); i++) {
+                  if (i + valueListSize >= option.getArgument().getMaximum())
+                    break;
                   
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+                  valueList.add(defaultVal.get(i));
+                }
+            }
+        }
+        
+        return valueList == null || valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;
     }
