diff --git a/tmp/081e101e-6f9f-4a27-85bd-d17444b4d8b0_buggy.java b/tmp/f1e96a90-bfb0-4c85-b500-0ca07a175546_fixed.java
index 4e8b037..339ed5b 100644
--- a/tmp/081e101e-6f9f-4a27-85bd-d17444b4d8b0_buggy.java
+++ b/tmp/f1e96a90-bfb0-4c85-b500-0ca07a175546_fixed.java
@@ -1,20 +1,33 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
-        }
-
+            valueList = new ArrayList(defaultValues);
+        } else if (defaultValues != null && !defaultValues.isEmpty()) {
             // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+            int valueListSize = valueList.size();
+            int defaultValuesSize = defaultValues.size();
+            for (int i = 0; i < defaultValuesSize; i++) {
+                if (i + valueListSize < option.getArgument().getMaximum()) {
+                    valueList.add(defaultValues.get(i));
                 }
+            }
+            
+        }
+
+
         // if there are more default values as specified, add them to
         // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+        if(valueList == null) {
+            if(this.defaultValues.get(option) == null) {
+                return Collections.EMPTY_LIST;
+            }
+            return  new ArrayList((List)this.defaultValues.get(option));
+        }
+        
+        return valueList;
     }
