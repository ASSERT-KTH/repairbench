diff --git a/tmp/5bbcbd59-6237-4c86-9b53-8c0b62189887_buggy.java b/tmp/c8254416-3d79-4980-8fb7-5fff4808010b_fixed.java
index e4d90e7..85dfcdc 100644
--- a/tmp/5bbcbd59-6237-4c86-9b53-8c0b62189887_buggy.java
+++ b/tmp/c8254416-3d79-4980-8fb7-5fff4808010b_fixed.java
@@ -1,45 +1,50 @@
   @Override
   String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
       return getReferenceName();
     } else if (prettyPrint) {
       // Don't pretty print recursively.
       prettyPrint = false;
 
       // Use a tree set so that the properties are sorted.
       Set<String> propertyNames = Sets.newTreeSet();
+      if (!forAnnotations) {
         for (ObjectType current = this;
              current != null && !current.isNativeObjectType() &&
                  propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
              current = current.getImplicitPrototype()) {
           propertyNames.addAll(current.getOwnPropertyNames());
         }
+      } else {
+        propertyNames.addAll(getOwnPropertyNames());
+      }
+
 
       StringBuilder sb = new StringBuilder();
       sb.append("{");
 
       int i = 0;
       for (String property : propertyNames) {
         if (i > 0) {
           sb.append(", ");
         }
 
         sb.append(property);
         sb.append(": ");
-        sb.append(getPropertyType(property).toString());
+        sb.append(getPropertyType(property).toStringHelper(forAnnotations));
 
         ++i;
-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+        if (i == MAX_PRETTY_PRINTED_PROPERTIES && !forAnnotations) {
           sb.append(", ...");
           break;
         }
       }
 
       sb.append("}");
 
       prettyPrint = true;
       return sb.toString();
     } else {
       return "{...}";
     }
   }
