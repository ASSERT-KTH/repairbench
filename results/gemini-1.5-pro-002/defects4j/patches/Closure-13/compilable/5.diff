diff --git a/tmp/03308d24-d8db-4e05-be36-7ae919b6256e_buggy.java b/tmp/68658328-355d-40f6-ad49-87136b0a2ffb_fixed.java
index b5d94e0..5be4e9d 100644
--- a/tmp/03308d24-d8db-4e05-be36-7ae919b6256e_buggy.java
+++ b/tmp/68658328-355d-40f6-ad49-87136b0a2ffb_fixed.java
@@ -1,26 +1,29 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
-      Node c = node.getFirstChild();
-      while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
-        c = next;
-      }
-
       visit(node);
       visits++;
 
       Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+
+      if (!shouldRetraverse(node)) {
+        break;
+      }
+
+      Node c = node.getFirstChild();
+      while(c != null) {
+        traverse(c);
+        c = c.getNext();
+      }
+    } while (true);
 
     exitNode(node);
   }
