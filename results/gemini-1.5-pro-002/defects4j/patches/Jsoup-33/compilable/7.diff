diff --git a/tmp/1a5ca574-f10c-4c3b-9b16-6aebea5614cf_buggy.java b/tmp/b44a900b-143a-4a2e-911f-da5d386d0eaa_fixed.java
index dc93be3..c4edb20 100644
--- a/tmp/1a5ca574-f10c-4c3b-9b16-6aebea5614cf_buggy.java
+++ b/tmp/b44a900b-143a-4a2e-911f-da5d386d0eaa_fixed.java
@@ -1,14 +1,16 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
+            if (!StringUtil.in(el.tagName(), "meta", "link", "base", "frame", "img", "br", "wbr", "embed", "hr", "input", "keygen", "col", "area", "param", "source", "track")) {
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            }
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
