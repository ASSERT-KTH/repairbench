diff --git a/tmp/3b1b2a1f-05bb-4d92-968e-3137e3f91d76_buggy.java b/tmp/f89e12a7-6c4b-49c4-bf70-0801a63ae076_fixed.java
index 6cfa79b..0129b35 100644
--- a/tmp/3b1b2a1f-05bb-4d92-968e-3137e3f91d76_buggy.java
+++ b/tmp/f89e12a7-6c4b-49c4-bf70-0801a63ae076_fixed.java
@@ -1,12 +1,18 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = (x - mean) / standardDeviation;
+        if (dev < -20) {
+            return 0;
+        } else if (dev > 20) {
+            return 1;
+        } else {
+            return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));
+        }
     }
