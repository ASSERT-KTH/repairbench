diff --git a/tmp/fe24f33e-ef57-420a-a8e6-8e9a5ca9da8b_buggy.java b/tmp/90454e8d-c638-4b98-8488-d3d397cb8565_fixed.java
index 6cfa79b..a1d2b75 100644
--- a/tmp/fe24f33e-ef57-420a-a8e6-8e9a5ca9da8b_buggy.java
+++ b/tmp/90454e8d-c638-4b98-8488-d3d397cb8565_fixed.java
@@ -1,12 +1,18 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double z = (x - mean) / standardDeviation;
+        if (z < -20) {
+            return 0;
+        } else if (z > 20) {
+            return 1;
+        } else {
+            return 0.5 * (1.0 + Erf.erf(z / Math.sqrt(2.0)));
+        }
     }
