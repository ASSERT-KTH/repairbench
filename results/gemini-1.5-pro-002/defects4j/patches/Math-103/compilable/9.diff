diff --git a/tmp/a8bc0bbc-422f-44be-a348-979c611326c8_buggy.java b/tmp/a783e2a0-b761-4a23-a447-d035fc4bfeb0_fixed.java
index 6cfa79b..a7e130a 100644
--- a/tmp/a8bc0bbc-422f-44be-a348-979c611326c8_buggy.java
+++ b/tmp/a783e2a0-b761-4a23-a447-d035fc4bfeb0_fixed.java
@@ -1,12 +1,15 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = (x - mean) / standardDeviation;
+        if (Math.abs(dev) > 40.0) {
+            return dev < 0 ? 0.0d : 1.0d;
+        }
+        return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));
     }
