diff --git a/tmp/755bf187-ec0d-4e19-9f56-322a569c3a81_buggy.java b/tmp/f797c742-d048-4a1d-b594-27fc122fd8d7_fixed.java
index 10616db..ef28a71 100644
--- a/tmp/755bf187-ec0d-4e19-9f56-322a569c3a81_buggy.java
+++ b/tmp/f797c742-d048-4a1d-b594-27fc122fd8d7_fixed.java
@@ -1,19 +1,34 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
+
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] result = iChronology.get(partial, instant);
+            
+            // If adding to the month and the day is too large, reduce it.
+            if (fieldIndex == 0) {  // month is at index 0 for MonthDay
+                DateTimeFieldType[] types = partial.getFieldTypes();
+                if (types[0] == DateTimeFieldType.monthOfYear() && types.length > 1 && types[1] == DateTimeFieldType.dayOfMonth()) {
+                    int month = result[0];
+                    int day = result[1];
+                    int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+                    if (day > maxDay) {
+                        result[1] = maxDay;
+                    }
+                }
+            }
+
+            return result;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
