diff --git a/tmp/f03fd027-d2d4-4d2e-b739-018afd40d965_buggy.java b/tmp/be95014a-d421-4ba0-8e12-daf44dbfa3b6_fixed.java
index 822447c..f2126aa 100644
--- a/tmp/f03fd027-d2d4-4d2e-b739-018afd40d965_buggy.java
+++ b/tmp/be95014a-d421-4ba0-8e12-daf44dbfa3b6_fixed.java
@@ -1,37 +1,40 @@
     /**
      * <p>
      * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
      * passed.
      * </p>
      * 
      * @param writer
      *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
      * @param str
      *            The <code>String</code> to escape. Assumed to be a non-null value.
      * @throws IOException
      *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
      *             methods.
      * 
      * @see #escape(String)
      * @see Writer
      */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
         for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            String entityName = this.entityName(c);
+            int codepoint = str.codePointAt(i);
+            String entityName = this.entityName(codepoint);
             if (entityName == null) {
-                if (c > 0x7F) {
+                if (codepoint > 0x7F) {
                     writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
+                    writer.write(Integer.toString(codepoint, 10));
                     writer.write(';');
+                    if (Character.charCount(codepoint) == 2) {
+                        i++;
+                    }
                 } else {
-                    writer.write(c);
+                    writer.write(codepoint);
                 }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
         }
     }
