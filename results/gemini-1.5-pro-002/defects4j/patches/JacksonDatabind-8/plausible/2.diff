diff --git a/tmp/6697c6df-aa9b-4579-8592-436b8097e7b6_buggy.java b/tmp/2deb4069-7bc6-419c-90b6-3d84cb37b2b4_fixed.java
index c9da1b7..bbb0909 100644
--- a/tmp/6697c6df-aa9b-4579-8592-436b8097e7b6_buggy.java
+++ b/tmp/2deb4069-7bc6-419c-90b6-3d84cb37b2b4_fixed.java
@@ -1,33 +1,34 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
         // already had an explicitly marked one?
         if (oldOne != null) {
 
             if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                 // but skip, if new one not annotated
                 if (!explicit) {
                     return;
                 }
                 // both explicit: verify
                 // otherwise only verify if neither explicitly annotated.
             }
 
             // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
-
+                if (_explicitCreators != 0) { // only if there's explicit creator
                     throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                             +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                }
                 // otherwise, which one to choose?
                     // new type more generic, use old
                 // new type more specific, use it
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
