diff --git a/tmp/5a39c4fd-cc23-4703-b979-38b02c335bd1_buggy.java b/tmp/8e5cc036-929e-4af6-807d-8cecf5dc08fe_fixed.java
index 23f078d..8492fdd 100644
--- a/tmp/5a39c4fd-cc23-4703-b979-38b02c335bd1_buggy.java
+++ b/tmp/8e5cc036-929e-4af6-807d-8cecf5dc08fe_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                final int[] codePoints = {c};
+                sb.append(URLEncoder.encode(new String(codePoints, 0, codePoints.length), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
+                if (Character.charCount(c) == 2) {
+                    i++;
+                }
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file
