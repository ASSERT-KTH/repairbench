diff --git a/tmp/d3e2f4a4-c7a1-422f-8d19-6a7997cd089b_buggy.java b/tmp/49dacf38-0fab-4775-9a4a-72c3bb13d350_fixed.java
index 23f078d..cff2a18 100644
--- a/tmp/d3e2f4a4-c7a1-422f-8d19-6a7997cd089b_buggy.java
+++ b/tmp/49dacf38-0fab-4775-9a4a-72c3bb13d350_fixed.java
@@ -1,14 +1,19 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                final int[] codepoints = new int[1];
+                codepoints[0] = c;
+                sb.append(URLEncoder.encode(new String(codepoints, 0, 1), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
+                if (Character.charCount(c) == 2) {
+                    i++;
+                }
             } else {
                 sb.append((char) c);
             }
         }
     }
