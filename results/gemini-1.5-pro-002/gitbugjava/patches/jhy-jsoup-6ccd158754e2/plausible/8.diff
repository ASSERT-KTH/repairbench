diff --git a/tmp/3fc1e2a3-ade6-4fe3-87f5-859f194abe31_buggy.java b/tmp/0a6d7cdc-af05-440f-bad4-8ce308f1d127_fixed.java
index 23f078d..3204f9f 100644
--- a/tmp/3fc1e2a3-ade6-4fe3-87f5-859f194abe31_buggy.java
+++ b/tmp/0a6d7cdc-af05-440f-bad4-8ce308f1d127_fixed.java
@@ -1,14 +1,21 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                final int[] codePoints = new int[1];
+                codePoints[0] = c;
+                sb.append(URLEncoder.encode(new String(codePoints, 0, 1), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
+
+                if (Character.charCount(c) > 1) {
+                    i++;
+                }
+
             } else {
                 sb.append((char) c);
             }
         }
     }
