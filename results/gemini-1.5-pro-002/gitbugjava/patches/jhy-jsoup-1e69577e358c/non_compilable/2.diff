diff --git a/tmp/76db6286-bf11-464b-ae6f-93360af47528_buggy.java b/tmp/df5c9a71-e307-4cf0-a856-f2e7c1d941a4_fixed.java
index c9c77a4..744374c 100644
--- a/tmp/76db6286-bf11-464b-ae6f-93360af47528_buggy.java
+++ b/tmp/df5c9a71-e307-4cf0-a856-f2e7c1d941a4_fixed.java
@@ -1,35 +1,41 @@
     URL build() {
         try {
             // use the URI class to encode non-ascii in path
+            String host = u.getHost();
+            String protocol = u.getProtocol();
+            String path = u.getPath();
+
+            // Only encode the host. getPath() returns a decoded path, so no need to decode then encode again.
             URI uri = new URI(
-                u.getProtocol(),
+                    protocol,
                     u.getUserInfo(),
-                IDN.toASCII(decodePart(u.getHost())), // puny-code
+                    host == null ? null : IDN.toASCII(host), // puny-code
                     u.getPort(),
-                decodePart(u.getPath()),
+                    path,
                     null, null // query and fragment appended later so as not to encode
             );
 
             String normUrl = uri.toASCIIString();
+
             if (q != null || u.getRef() != null) {
                 StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
                 if (q != null) {
                     sb.append('?');
                     appendToAscii(StringUtil.releaseBuilder(q), true, sb);
                 }
                 if (u.getRef() != null) {
                     sb.append('#');
                     appendToAscii(u.getRef(), false, sb);
                 }
                 normUrl = StringUtil.releaseBuilder(sb);
             }
             u =  new URL(normUrl);
             return u;
         } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
             // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
             // the remote end will be able to handle it, so in prod we just pass the original URL.
             // The UnsupportedEncodingException would never happen as always UTF8
             assert Validate.assertFail(e.toString());
             return u;
         }
     }
\ No newline at end of file
