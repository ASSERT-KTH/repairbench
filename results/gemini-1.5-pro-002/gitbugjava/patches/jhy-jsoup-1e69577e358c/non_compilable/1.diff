diff --git a/tmp/9453a1ef-8355-4d69-a540-3bccda35ab81_buggy.java b/tmp/8025203b-926a-479f-962b-8f86ae441c45_fixed.java
index c9c77a4..5fde70b 100644
--- a/tmp/9453a1ef-8355-4d69-a540-3bccda35ab81_buggy.java
+++ b/tmp/8025203b-926a-479f-962b-8f86ae441c45_fixed.java
@@ -1,35 +1,49 @@
     URL build() {
         try {
             // use the URI class to encode non-ascii in path
-            URI uri = new URI(
-                u.getProtocol(),
-                u.getUserInfo(),
-                IDN.toASCII(decodePart(u.getHost())), // puny-code
-                u.getPort(),
-                decodePart(u.getPath()),
-                null, null // query and fragment appended later so as not to encode
-            );
-
-            String normUrl = uri.toASCIIString();
-            if (q != null || u.getRef() != null) {
-                StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
-                if (q != null) {
-                    sb.append('?');
-                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);
+            String host = u.getHost();
+            String protocol = u.getProtocol();
+            int port = u.getPort();
+            String path = u.getPath();
+            String userInfo = u.getUserInfo();
+            String query = u.getQuery();
+            String ref = u.getRef();
+
+
+            StringBuilder urlBuilder = new StringBuilder();
+            urlBuilder.append(protocol).append("://");
+
+            if (userInfo != null) {
+                urlBuilder.append(userInfo).append('@');
             }
-                if (u.getRef() != null) {
-                    sb.append('#');
-                    appendToAscii(u.getRef(), false, sb);
+
+            if (host != null) {
+                urlBuilder.append(IDN.toASCII(host));
+            }
+            if (port != -1) {
+                urlBuilder.append(':').append(port);
             }
-                normUrl = StringUtil.releaseBuilder(sb);
+            if (path != null) {
+
+                // Keep encoded reserved characters in the path
+                urlBuilder.append(path);
             }
-            u =  new URL(normUrl);
+           
+            if (query != null) {
+                urlBuilder.append('?').append(query);
+            }
+            if (ref != null) {
+                urlBuilder.append('#').append(ref);
+            }
+
+
+            u = new URL(urlBuilder.toString());
             return u;
-        } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
+        } catch (MalformedURLException | UnsupportedEncodingException e) {
             // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
             // the remote end will be able to handle it, so in prod we just pass the original URL.
             // The UnsupportedEncodingException would never happen as always UTF8
             assert Validate.assertFail(e.toString());
             return u;
         }
     }
