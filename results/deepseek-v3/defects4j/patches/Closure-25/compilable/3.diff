diff --git a/tmp/02bfb585-729b-4b80-9580-d517c393e253_buggy.java b/tmp/9b76e060-04d3-4ce0-8b95-6336144b18cf_fixed.java
index b98f0a7..0e25f83 100644
--- a/tmp/02bfb585-729b-4b80-9580-d517c393e253_buggy.java
+++ b/tmp/9b76e060-04d3-4ce0-8b95-6336144b18cf_fixed.java
@@ -1,29 +1,37 @@
 private FlowScope traverseNew(Node n, FlowScope scope) {
-
     Node constructor = n.getFirstChild();
     scope = traverse(constructor, scope);
     JSType constructorType = constructor.getJSType();
     JSType type = null;
     if (constructorType != null) {
         constructorType = constructorType.restrictByNotNullOrUndefined();
         if (constructorType.isUnknownType()) {
             type = getNativeType(UNKNOWN_TYPE);
         } else {
             FunctionType ct = constructorType.toMaybeFunctionType();
             if (ct == null && constructorType instanceof FunctionType) {
                 // If constructorType is a NoObjectType, then toMaybeFunctionType will
                 // return null. But NoObjectType implements the FunctionType
                 // interface, precisely because it can validly construct objects.
                 ct = (FunctionType) constructorType;
             }
             if (ct != null && ct.isConstructor()) {
                 type = ct.getInstanceType();
-        }
-      }
-    }
-    n.setJSType(type);
+                // Handle backward inference for constructor arguments
+                Node param = ct.getParametersNode().getFirstChild();
                 for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {
+                    if (param != null) {
+                        JSType paramType = param.getJSType();
+                        if (paramType != null) {
+                            arg.setJSType(paramType);
+                        }
+                        param = param.getNext();
+                    }
                     scope = traverse(arg, scope);
                 }
+            }
+        }
+    }
+    n.setJSType(type);
     return scope;
 }
\ No newline at end of file
