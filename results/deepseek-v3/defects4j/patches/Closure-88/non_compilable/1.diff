diff --git a/tmp/6178ec18-ecff-4c25-81d4-abe76fa8ffb7_buggy.java b/tmp/5aacfa47-204f-47ea-85f4-4a49fb021e24_fixed.java
index 9353941..77fe0f4 100644
--- a/tmp/6178ec18-ecff-4c25-81d4-abe76fa8ffb7_buggy.java
+++ b/tmp/5aacfa47-204f-47ea-85f4-4a49fb021e24_fixed.java
@@ -1,30 +1,39 @@
   /**
    * Give an expression and a variable. It returns READ, if the first
    * reference of that variable is a read. It returns KILL, if the first
    * reference of that variable is an assignment. It returns MAY_LIVE otherwise.
    */
   private VariableLiveness isVariableReadBeforeKill(
       Node n, String variable) {
     if (NodeUtil.isName(n) && variable.equals(n.getString())) {
       if (NodeUtil.isLhs(n, n.getParent())) {
         // The expression to which the assignment is made is evaluated before
         // the RHS is evaluated (normal left to right evaluation) but the KILL
         // occurs after the RHS is evaluated.
         return VariableLiveness.KILL;
       } else {
         return VariableLiveness.READ;
       }
     }
 
     // Expressions are evaluated left-right, depth first.
     for (Node child = n.getFirstChild();
         child != null; child = child.getNext()) {
       if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
         VariableLiveness state = isVariableReadBeforeKill(child, variable);
         if (state != VariableLiveness.MAYBE_LIVE) {
+          // Special handling for logical AND expressions
+          if (n.isAnd() && child.getNext() != null && state == VariableLiveness.KILL) {
+            // If the variable is assigned in the LHS of an AND expression,
+            // and it is used in the RHS, it should be considered as a READ in the RHS.
+            VariableLiveness rhsState = isVariableReadBeforeKill(child.getNext(), variable);
+            if (rhsState == VariableLiveness.READ) {
+              return VariableLiveness.READ;
+            }
+          }
           return state;
         }
       }
     }
     return VariableLiveness.MAYBE_LIVE;
   }
\ No newline at end of file
