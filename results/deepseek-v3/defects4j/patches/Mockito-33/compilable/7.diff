diff --git a/tmp/821af4ca-8220-40b9-aaab-f2d1a3d8cf65_buggy.java b/tmp/acc29e5d-1e8b-4862-af00-66c9e8b9fc49_fixed.java
index e1fc51f..105bbfd 100644
--- a/tmp/821af4ca-8220-40b9-aaab-f2d1a3d8cf65_buggy.java
+++ b/tmp/acc29e5d-1e8b-4862-af00-66c9e8b9fc49_fixed.java
@@ -1,9 +1,28 @@
     public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
         Method m1 = invocation.getMethod();
         Method m2 = candidate.getMethod();
         
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+        // Compare method names
+        if (!m1.getName().equals(m2.getName())) {
+            return false;
+        }
+        
+        // Compare return types
+        if (!m1.getReturnType().equals(m2.getReturnType())) {
+            return false;
+        }
+        
+        // Compare parameter types
+        Class<?>[] params1 = m1.getParameterTypes();
+        Class<?>[] params2 = m2.getParameterTypes();
+        if (params1.length != params2.length) {
+            return false;
+        }
+        for (int i = 0; i < params1.length; i++) {
+            if (!params1[i].equals(params2[i])) {
+                return false;
+            }
+        }
+        
+        return true;
     }
\ No newline at end of file
