diff --git a/tmp/2c1bbb1a-ba48-4ef4-816e-38049b2716f1_buggy.java b/tmp/eca09425-0fae-4408-aeee-e15cafb1591c_fixed.java
index e69de29..2ff3fb3 100644
--- a/tmp/2c1bbb1a-ba48-4ef4-816e-38049b2716f1_buggy.java
+++ b/tmp/eca09425-0fae-4408-aeee-e15cafb1591c_fixed.java
@@ -0,0 +1,31 @@
+public JavaType constructType(Type type) {
+    if (type == null) {
+        return null;
+    }
+    if (type instanceof Class<?>) {
+        return _fromClass((Class<?>) type, TypeBindings.emptyBindings());
+    }
+    if (type instanceof ParameterizedType) {
+        return _fromParamType((ParameterizedType) type);
+    }
+    if (type instanceof GenericArrayType) {
+        return _fromArrayType((GenericArrayType) type);
+    }
+    if (type instanceof TypeVariable<?>) {
+        return _fromVariable((TypeVariable<?>) type, TypeBindings.emptyBindings());
+    }
+    if (type instanceof WildcardType) {
+        return _fromWildcard((WildcardType) type, TypeBindings.emptyBindings());
+    }
+    // Handle recursive types
+    if (type instanceof ResolvedRecursiveType) {
+        ResolvedRecursiveType rrt = (ResolvedRecursiveType) type;
+        JavaType resolved = rrt.getSelfReferencedType();
+        if (resolved != null) {
+            return resolved;
+        }
+        // If not resolved, return the base type
+        return _fromClass(Object.class, TypeBindings.emptyBindings());
+    }
+    throw new IllegalArgumentException("Unrecognized type: " + type.getClass().getName());
+}
\ No newline at end of file
