diff --git a/tmp/b72741be-519d-4cda-8635-158aad7fbc14_buggy.java b/tmp/249c6049-0723-4453-ab59-5de37fadd390_fixed.java
index 63641d0..4a000e8 100644
--- a/tmp/b72741be-519d-4cda-8635-158aad7fbc14_buggy.java
+++ b/tmp/249c6049-0723-4453-ab59-5de37fadd390_fixed.java
@@ -1,33 +1,39 @@
 /**
  * For functions with function(this: T, ...) and T as parameters, type
  * inference will set the type of this on a function literal argument to the
  * the actual type of T.
  */
 private boolean inferTemplatedTypesForCall(
     Node n, FunctionType fnType) {
     final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
         .getTemplateKeys();
     if (keys.isEmpty()) {
         return false;
     }
 
     // Try to infer the template types
     Map<TemplateType, JSType> inferred =
         inferTemplateTypesFromParameters(fnType, n);
 
+    // If no types were inferred, return false
+    if (inferred.isEmpty()) {
+        return false;
+    }
 
     // Replace all template types. If we couldn't find a replacement, we
     // replace it with UNKNOWN.
     TemplateTypeReplacer replacer = new TemplateTypeReplacer(
         registry, inferred);
     Node callTarget = n.getFirstChild();
 
     FunctionType replacementFnType = fnType.visit(replacer)
         .toMaybeFunctionType();
-    Preconditions.checkNotNull(replacementFnType);
+    if (replacementFnType == null) {
+        return false;
+    }
 
     callTarget.setJSType(replacementFnType);
     n.setJSType(replacementFnType.getReturnType());
 
     return replacer.madeChanges;
 }
\ No newline at end of file
