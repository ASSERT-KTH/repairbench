diff --git a/tmp/fcbc954c-2f85-4712-9ca2-6db32ef34940_buggy.java b/tmp/cdacacf6-26af-429f-b720-b3c266b6e20d_fixed.java
index b5d94e0..efbd2c4 100644
--- a/tmp/fcbc954c-2f85-4712-9ca2-6db32ef34940_buggy.java
+++ b/tmp/cdacacf6-26af-429f-b720-b3c266b6e20d_fixed.java
@@ -1,26 +1,26 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
     do {
-      Node c = node.getFirstChild();
-      while(c != null) {
+        // Visit all children first
+        for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
             traverse(c);
-        Node next = c.getNext();
-        c = next;
         }
 
+        // Visit the current node
         visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+        // Ensure we don't enter an infinite loop
+        Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
