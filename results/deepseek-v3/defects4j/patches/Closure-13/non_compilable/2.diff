diff --git a/tmp/b91f66f0-5176-451d-a992-15d42076437e_buggy.java b/tmp/7a70f409-05cf-4faa-a023-231d056dd487_fixed.java
index b5d94e0..305955b 100644
--- a/tmp/b91f66f0-5176-451d-a992-15d42076437e_buggy.java
+++ b/tmp/7a70f409-05cf-4faa-a023-231d056dd487_fixed.java
@@ -1,26 +1,30 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
+    boolean changed;
     do {
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
             Node next = c.getNext();
             c = next;
         }
 
         visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+        // Check if the node has changed after visiting
+        changed = hasChanged(node);
+
+        Preconditions.checkState(visits < 10000, "too many iterations");
+    } while (changed && shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
