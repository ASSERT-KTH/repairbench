diff --git a/tmp/5717b170-108b-436f-a98a-fee63b0e6f2f_buggy.java b/tmp/37c1bc02-d6a7-4d85-8003-61c41db91d7e_fixed.java
index fa42cd9..e244897 100644
--- a/tmp/5717b170-108b-436f-a98a-fee63b0e6f2f_buggy.java
+++ b/tmp/37c1bc02-d6a7-4d85-8003-61c41db91d7e_fixed.java
@@ -1,27 +1,29 @@
   /**
    * Declares a refined type in {@code scope} for the name represented by
    * {@code node}. It must be possible to refine the type of the given node in
    * the given scope, as determined by {@link #getTypeIfRefinable}.
    */
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
 
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
 
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
 
+      case Token.THIS:
         // "this" references aren't currently modeled in the CFG.
+        return;
 
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }
\ No newline at end of file
