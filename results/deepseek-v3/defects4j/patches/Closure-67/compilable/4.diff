diff --git a/tmp/358b67d5-a1e2-470d-bf88-39c1832b1ad7_buggy.java b/tmp/54d4d6bf-e632-42e9-b6a4-bb67600d3a6d_fixed.java
index 939f49b..bb89def 100644
--- a/tmp/358b67d5-a1e2-470d-bf88-39c1832b1ad7_buggy.java
+++ b/tmp/54d4d6bf-e632-42e9-b6a4-bb67600d3a6d_fixed.java
@@ -1,21 +1,18 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+        && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+        Node current = n;
+        while (current.getType() == Token.GETPROP) {
+            Node child = current.getFirstChild();
+            Node property = child.getNext();
+            if (property.getType() == Token.STRING &&
+                property.getString().equals("prototype")) {
                 return true;
             }
+            current = child;
         }
     }
-
     return false;
 }
\ No newline at end of file
