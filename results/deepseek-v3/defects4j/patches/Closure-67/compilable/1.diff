diff --git a/tmp/6985d174-1c23-4443-893e-4e79b7e712e0_buggy.java b/tmp/8ab1fcb0-c9d1-4aac-b48e-a23f0241fe6e_fixed.java
index 939f49b..3b395a5 100644
--- a/tmp/6985d174-1c23-4443-893e-4e79b7e712e0_buggy.java
+++ b/tmp/8ab1fcb0-c9d1-4aac-b48e-a23f0241fe6e_fixed.java
@@ -1,21 +1,28 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+        && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+            Node child = n.getFirstChild();
+            while (child.getType() == Token.GETPROP) {
+                Node next = child.getFirstChild().getNext();
+                if (next != null && next.getType() == Token.STRING &&
+                    next.getString().equals("prototype")) {
+                    return true;
+                }
+                child = child.getFirstChild();
+            }
+        } else {
+            Node next = n.getFirstChild().getNext();
+            if (next != null && next.getType() == Token.STRING &&
+                next.getString().equals("prototype")) {
                 return true;
             }
         }
     }
-
     return false;
 }
\ No newline at end of file
