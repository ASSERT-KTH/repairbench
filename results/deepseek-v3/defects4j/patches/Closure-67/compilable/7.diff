diff --git a/tmp/dfe2f18d-8f34-4d0a-ac57-f43ce80e4714_buggy.java b/tmp/228e77c6-2849-4ba7-9b49-34ecee4636e5_fixed.java
index 939f49b..397a2f3 100644
--- a/tmp/dfe2f18d-8f34-4d0a-ac57-f43ce80e4714_buggy.java
+++ b/tmp/228e77c6-2849-4ba7-9b49-34ecee4636e5_fixed.java
@@ -1,21 +1,27 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
     if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+        && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
+            Node child = n.getFirstChild();
+            while (child.getType() == Token.GETPROP) {
+                child = child.getFirstChild();
+            }
+            if (child.getType() == Token.STRING &&
+                child.getString().equals("prototype")) {
+                return true;
+            }
+        } else {
+            Node child = n.getFirstChild();
             if (child.getType() == Token.STRING &&
                 child.getString().equals("prototype")) {
                 return true;
             }
         }
     }
-
     return false;
 }
\ No newline at end of file
