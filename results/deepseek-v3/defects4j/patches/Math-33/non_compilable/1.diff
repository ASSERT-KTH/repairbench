diff --git a/tmp/0956e178-7437-4a00-a064-2461603bc634_buggy.java b/tmp/ec519a00-571f-4fd7-b6aa-d0e6473f9393_fixed.java
index 56b2d66..6a15956 100644
--- a/tmp/0956e178-7437-4a00-a064-2461603bc634_buggy.java
+++ b/tmp/ec519a00-571f-4fd7-b6aa-d0e6473f9393_fixed.java
@@ -1,45 +1,50 @@
     /**
      * Removes the phase 1 objective function, positive cost non-artificial variables,
      * and the non-basic artificial variables from this tableau.
      */
     protected void dropPhase1Objective() {
         if (getNumObjectiveFunctions() == 1) {
             return;
         }
 
         List<Integer> columnsToDrop = new ArrayList<Integer>();
         columnsToDrop.add(0);
 
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                 columnsToDrop.add(i);
             }
         }
 
         // non-basic artificial variables
         for (int i = 0; i < getNumArtificialVariables(); i++) {
             int col = i + getArtificialVariableOffset();
             if (getBasicRow(col) == null) {
                 columnsToDrop.add(col);
             }
         }
 
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
-          int col = 0;
+        // Remove columns in reverse order to avoid index shifting
+        Collections.sort(columnsToDrop, Collections.reverseOrder());
+
+        // Create new matrix with reduced dimensions
+        double[][] matrix = new double[getHeight()][getWidth() - columnsToDrop.size()];
+        for (int i = 0; i < getHeight(); i++) {
+            int colIndex = 0;
             for (int j = 0; j < getWidth(); j++) {
                 if (!columnsToDrop.contains(j)) {
-              matrix[i - 1][col++] = tableau.getEntry(i, j);
+                    matrix[i][colIndex++] = tableau.getEntry(i, j);
                 }
             }
         }
 
-        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
-          columnLabels.remove((int) columnsToDrop.get(i));
+        // Remove column labels
+        for (int col : columnsToDrop) {
+            columnLabels.remove(col);
         }
 
         this.tableau = new Array2DRowRealMatrix(matrix);
         this.numArtificialVariables = 0;
     }
\ No newline at end of file
