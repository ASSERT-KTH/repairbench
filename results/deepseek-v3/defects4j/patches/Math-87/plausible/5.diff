diff --git a/tmp/33dd4aa9-42a7-40ed-b94e-4aac2278eb28_buggy.java b/tmp/06bf28eb-f6d0-4a26-bd7b-d362fc8b1e9d_fixed.java
index 70cafe0..b97cb67 100644
--- a/tmp/33dd4aa9-42a7-40ed-b94e-4aac2278eb28_buggy.java
+++ b/tmp/06bf28eb-f6d0-4a26-bd7b-d362fc8b1e9d_fixed.java
@@ -1,18 +1,21 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+            final double entry = getEntry(i, col);
+            if (MathUtils.equals(entry, 1.0, epsilon)) {
                 if (row == null) {
                     row = i;
                 } else {
-                return null;
+                    return null; // More than one row has a 1.0 entry
                 }
+            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {
+                return null; // Non-zero entry that's not 1.0
             }
         }
         return row;
     }
\ No newline at end of file
