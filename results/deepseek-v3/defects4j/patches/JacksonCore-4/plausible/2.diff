diff --git a/tmp/3d7a7b0d-b6d3-4faf-a500-93b47a143d0f_buggy.java b/tmp/040891f3-0b3d-4533-b0e2-9081d0292728_fixed.java
index c6cb157..2c55cec 100644
--- a/tmp/3d7a7b0d-b6d3-4faf-a500-93b47a143d0f_buggy.java
+++ b/tmp/040891f3-0b3d-4533-b0e2-9081d0292728_fixed.java
@@ -1,14 +1,21 @@
     /**
      * Method called to expand size of the current segment, to
      * accommodate for more contiguous content. Usually only
      * used when parsing tokens like names if even then.
      */
     public char[] expandCurrentSegment()
     {
         final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
         final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        // Calculate the new length by increasing by 50% or 25% depending on the current length
+        int newLen = len + (len >> 1);
+        // If the new length exceeds MAX_SEGMENT_LEN, set it to MAX_SEGMENT_LEN + 1
+        if (newLen > MAX_SEGMENT_LEN) {
+            newLen = MAX_SEGMENT_LEN + 1;
+        }
+        // Ensure the new length is always greater than the current length
+        if (newLen <= len) {
+            newLen = len + 1;
+        }
         return (_currentSegment = Arrays.copyOf(curr, newLen));
     }
\ No newline at end of file
