diff --git a/tmp/3987c323-cb25-43f0-993d-b7ec83c5fabb_buggy.java b/tmp/4916a143-3d05-4348-9df5-1cdebe20c178_fixed.java
index eea9e73..61e9fb6 100644
--- a/tmp/3987c323-cb25-43f0-993d-b7ec83c5fabb_buggy.java
+++ b/tmp/4916a143-3d05-4348-9df5-1cdebe20c178_fixed.java
@@ -1,41 +1,24 @@
-    /**
-     * <p>Checks if the CharSequence contains any character in the given
-     * set of characters.</p>
-     *
-     * <p>A <code>null</code> CharSequence will return <code>false</code>.
-     * A <code>null</code> or zero length search array will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.containsAny(null, *)                = false
-     * StringUtils.containsAny("", *)                  = false
-     * StringUtils.containsAny(*, null)                = false
-     * StringUtils.containsAny(*, [])                  = false
-     * StringUtils.containsAny("zzabyycdxx",['z','a']) = true
-     * StringUtils.containsAny("zzabyycdxx",['b','y']) = true
-     * StringUtils.containsAny("aba", ['z'])           = false
-     * </pre>
-     *
-     * @param cs  the CharSequence to check, may be null
-     * @param searchChars  the chars to search for, may be null
-     * @return the <code>true</code> if any of the chars are found,
-     * <code>false</code> if no match or null input
-     * @since 2.4
-     */
 public static boolean containsAny(CharSequence cs, char[] searchChars) {
     if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
         return false;
     }
     int csLength = cs.length();
     int searchLength = searchChars.length;
     for (int i = 0; i < csLength; i++) {
         char ch = cs.charAt(i);
         for (int j = 0; j < searchLength; j++) {
             if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+                // Check if this is part of a surrogate pair
+                if (Character.isHighSurrogate(ch) && i + 1 < csLength) {
+                    char low = cs.charAt(i + 1);
+                    if (j + 1 < searchLength && searchChars[j + 1] == low) {
                         return true;
                     }
+                } else if (!Character.isHighSurrogate(ch)) {
+                    return true;
+                }
+            }
         }
     }
     return false;
 }
\ No newline at end of file
