diff --git a/tmp/b3467ab5-75d9-491c-a27b-2e7c73397a2f_buggy.java b/tmp/5e940a9c-f8a2-4e87-8e96-cd7b1ab7ba51_fixed.java
index 85e6a42..ac0d2ab 100644
--- a/tmp/b3467ab5-75d9-491c-a27b-2e7c73397a2f_buggy.java
+++ b/tmp/5e940a9c-f8a2-4e87-8e96-cd7b1ab7ba51_fixed.java
@@ -1,50 +1,56 @@
     /**
      * Walks through all recorded entries and adds the data available
      * from the local file header.
      *
      * <p>Also records the offsets for the data to read from the
      * entries.</p>
      */
     private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                                             entriesWithoutUTF8Flag)
         throws IOException {
         // changing the name of a ZipArchiveEntry is going to change
         // the hashcode - see COMPRESS-164
         // Map needs to be reconstructed in order to keep central
         // directory order
         for (ZipArchiveEntry ze : entries.keySet()) {
             OffsetEntry offsetEntry = entries.get(ze);
             long offset = offsetEntry.headerOffset;
             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
             byte[] b = new byte[SHORT];
             archive.readFully(b);
             int fileNameLen = ZipShort.getValue(b);
             archive.readFully(b);
             int extraFieldLen = ZipShort.getValue(b);
             int lenToSkip = fileNameLen;
             while (lenToSkip > 0) {
                 int skipped = archive.skipBytes(lenToSkip);
                 if (skipped <= 0) {
                     throw new RuntimeException("failed to skip file name in"
                                                + " local file header");
                 }
                 lenToSkip -= skipped;
             }
             byte[] localExtraData = new byte[extraFieldLen];
             archive.readFully(localExtraData);
             ze.setExtra(localExtraData);
             offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
                 + SHORT + SHORT + fileNameLen + extraFieldLen;
 
             if (entriesWithoutUTF8Flag.containsKey(ze)) {
                 String orig = ze.getName();
                 NameAndComment nc = entriesWithoutUTF8Flag.get(ze);
                 ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,
                                                          nc.comment);
                 if (!orig.equals(ze.getName())) {
                     nameMap.remove(orig);
                     nameMap.put(ze.getName(), ze);
                 }
+            } else {
+                // Handle the case where Unicode extra fields are only in the central directory
+                byte[] centralExtraData = ze.getExtra();
+                if (centralExtraData != null && centralExtraData.length > 0) {
+                    ze.setExtra(centralExtraData);
+                }
             }
         }
     }
\ No newline at end of file
