diff --git a/tmp/d607df52-ea26-4719-8310-5ca0554ad749_buggy.java b/tmp/eefed5c1-de4a-4de3-be14-0d2e406d4c73_fixed.java
index be2af16..e176bb2 100644
--- a/tmp/d607df52-ea26-4719-8310-5ca0554ad749_buggy.java
+++ b/tmp/eefed5c1-de4a-4de3-be14-0d2e406d4c73_fixed.java
@@ -1,29 +1,35 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+        // First, check if the date is valid in the Julian calendar.
+        long julianInstant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+
+        // If the date is before the cutover, return the Julian instant.
+        if (julianInstant < iCutoverMillis) {
+            return julianInstant;
+        }
+
+        // Otherwise, check if the date is valid in the Gregorian calendar.
+        long gregorianInstant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+
+        // If the Gregorian instant is before the cutover, it's in the illegal gap.
+        if (gregorianInstant < iCutoverMillis) {
             throw new IllegalArgumentException("Specified date does not exist");
         }
-        }
-        return instant;
+
+        // Otherwise, return the Gregorian instant.
+        return gregorianInstant;
     }
\ No newline at end of file
