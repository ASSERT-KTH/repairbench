diff --git a/tmp/c4a93bb5-20ac-4b68-8cc4-3bb02cf5270f_buggy.java b/tmp/a9be2990-09c3-42e5-99aa-93271e794e7b_fixed.java
index 98d89dc..3da60a8 100644
--- a/tmp/c4a93bb5-20ac-4b68-8cc4-3bb02cf5270f_buggy.java
+++ b/tmp/a9be2990-09c3-42e5-99aa-93271e794e7b_fixed.java
@@ -1,23 +1,33 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
+        
+        // Handle NaN values
+        if (Double.isNaN(ld) || Double.isNaN(rd)) {
+            if (Double.isNaN(ld) && Double.isNaN(rd)) {
+                return evaluateCompare(0); // NaN == NaN is true
+            } else {
+                return evaluateCompare(-1); // Any comparison involving NaN is false
+            }
+        }
+        
         return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
     }
\ No newline at end of file
