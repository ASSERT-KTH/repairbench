diff --git a/tmp/08a27e91-0e33-4d9b-a9a3-8dd05ef7b140_buggy.java b/tmp/b49c4053-4384-4275-ab75-f1ef3482d9b1_fixed.java
index 47915ed..8499d0f 100644
--- a/tmp/08a27e91-0e33-4d9b-a9a3-8dd05ef7b140_buggy.java
+++ b/tmp/b49c4053-4384-4275-ab75-f1ef3482d9b1_fixed.java
@@ -1,22 +1,26 @@
     /* (non-Javadoc)
      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
      */
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
+            // If the mock is compared to itself, return 0
+            // Otherwise return 1 (anything but 0 is good)
+            Object mock = invocation.getMock();
+            Object[] arguments = invocation.getArguments();
+            if (arguments.length > 0 && arguments[0] == mock) {
+                return 0;
+            }
             return 1;
         }
         
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
\ No newline at end of file
