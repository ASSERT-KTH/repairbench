diff --git a/tmp/d9a7173e-29c3-4925-81db-010ee4f9d304_buggy.java b/tmp/606f4aa4-5d54-40a2-b6ad-f4e20bb67663_fixed.java
index 670114d..02dccc8 100644
--- a/tmp/d9a7173e-29c3-4925-81db-010ee4f9d304_buggy.java
+++ b/tmp/606f4aa4-5d54-40a2-b6ad-f4e20bb67663_fixed.java
@@ -1,48 +1,60 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
-
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
+        if (ns != null) {
+          if (ns.onlyAffectsClassDef) {
             JsName name = getName(ns.name, false);
             if (name != null) {
               refNodes.add(new ClassDefiningFunctionNode(
                   name, n, parent, parent.getParent()));
             }
+          } else if (nameNode.getQualifiedName() != null && 
+                     nameNode.getQualifiedName().equals("goog.inherits")) {
+            // Handle goog.inherits calls
+            Node childClass = nameNode.getNext();
+            Node parentClass = childClass.getNext();
+            if (childClass != null && parentClass != null) {
+              recordPrototypeSet(childClass.getQualifiedName(), 
+                               "prototype", childClass);
+              recordPrototypeSet(parentClass.getQualifiedName(), 
+                               "prototype", parentClass);
+            }
+          }
         }
       }
     }
\ No newline at end of file
