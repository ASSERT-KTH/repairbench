diff --git a/tmp/80c0ac67-5479-4825-b7e3-7d05412c4f06_buggy.java b/tmp/8b5fd9b9-8617-45e6-8d81-8b19ac15263d_fixed.java
index 3cb9232..bab3cff 100644
--- a/tmp/80c0ac67-5479-4825-b7e3-7d05412c4f06_buggy.java
+++ b/tmp/8b5fd9b9-8617-45e6-8d81-8b19ac15263d_fixed.java
@@ -1,26 +1,30 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
             /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
              *   it's actually bit tricky to do it more efficiently (meta-annotations
              *   add more lookups; AnnotationMap costs etc)
              */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
+        } else if (_hasAnnotation(a, JsonUnwrapped.class)) {
+            // If the field is annotated with @JsonUnwrapped, return null to indicate
+            // that the field should be unwrapped during serialization
+            return null;
         } else {
             return null;
         }
     }
     return PropertyName.construct(name);
 }
\ No newline at end of file
