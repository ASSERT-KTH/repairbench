diff --git a/tmp/cb4b8156-992d-4744-9e13-cad28b4a4673_buggy.java b/tmp/17a09a36-57e7-475f-852e-87be5ae0ac95_fixed.java
index 800e6e1..8bb6f0d 100644
--- a/tmp/cb4b8156-992d-4744-9e13-cad28b4a4673_buggy.java
+++ b/tmp/17a09a36-57e7-475f-852e-87be5ae0ac95_fixed.java
@@ -1,32 +1,52 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.GETPROP:
+          if (parent.getType() == Token.EXPR_RESULT) {
+            // Handle function stubs like "goog.foo;"
+            Node target = n.getFirstChild();
+            if (target != null && target.getType() == Token.NAME) {
+              String propName = n.getLastChild().getString();
+              defineNamespacedFunctionStub(target.getString(), propName, n);
+            }
+          }
+          break;
+        case Token.GETPROP:
+          if (parent.getType() == Token.EXPR_RESULT) {
+            // Handle method stubs like "this.foo;"
+            Node target = n.getFirstChild();
+            if (target != null && target.getType() == Token.THIS) {
+              String propName = n.getLastChild().getString();
+              defineMethodStub(propName, n);
+            }
+          }
+          break;
       }
     }
\ No newline at end of file
