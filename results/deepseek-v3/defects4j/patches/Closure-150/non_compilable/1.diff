diff --git a/tmp/55db499e-7119-421e-86f9-4314385dea47_buggy.java b/tmp/b4656fc3-e5c8-4350-be9e-0240dd2014af_fixed.java
index 800e6e1..6a6279f 100644
--- a/tmp/55db499e-7119-421e-86f9-4314385dea47_buggy.java
+++ b/tmp/b4656fc3-e5c8-4350-be9e-0240dd2014af_fixed.java
@@ -1,32 +1,59 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.GETPROP:
+          if (parent.getType() == Token.EXPR_RESULT) {
+            // Handle function stubs like "goog.foo;"
+            Node target = n.getFirstChild();
+            if (target.getType() == Token.NAME) {
+              String propName = n.getLastChild().getString();
+              Var var = scope.getVar(target.getString());
+              if (var != null && var.getType() instanceof ObjectType) {
+                ObjectType objectType = (ObjectType) var.getType();
+                if (!objectType.hasProperty(propName)) {
+                  objectType.defineDeclaredProperty(propName, null, n);
+                }
+              }
+            }
+          }
+          break;
+        case Token.THIS:
+          if (parent.getType() == Token.GETPROP) {
+            // Handle function stubs like "this.foo;"
+            Node propNode = parent.getLastChild();
+            String propName = propNode.getString();
+            ObjectType thisType = (ObjectType) n.getJSType();
+            if (thisType != null && !thisType.hasProperty(propName)) {
+              thisType.defineDeclaredProperty(propName, null, parent);
+            }
+          }
+          break;
       }
     }
\ No newline at end of file
