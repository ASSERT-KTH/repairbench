diff --git a/tmp/058bfcc5-6da7-4595-990f-e37102f598e7_buggy.java b/tmp/d3d54dc4-90d9-40c9-b314-ff4646fcb3be_fixed.java
index 2608424..dc7ba27 100644
--- a/tmp/058bfcc5-6da7-4595-990f-e37102f598e7_buggy.java
+++ b/tmp/d3d54dc4-90d9-40c9-b314-ff4646fcb3be_fixed.java
@@ -1,39 +1,26 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
-
         int count = 0;
-        for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
-            }
-            --idx;
-            count -= offset;
+
+        for (int i = 0; i < dimension; i++) {
+            int offset = uniCounterOffset[i];
+            int idx = index / offset;
             indices[i] = idx;
+            index -= idx * offset;
         }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
-
         return indices;
     }
\ No newline at end of file
