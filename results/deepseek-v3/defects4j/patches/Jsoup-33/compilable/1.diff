diff --git a/tmp/bfd8c72b-9468-40dc-8ca8-f20863ada72d_buggy.java b/tmp/a1f93faf-156f-407f-bea4-1434b9035355_fixed.java
index dc93be3..cc3ef14 100644
--- a/tmp/bfd8c72b-9468-40dc-8ca8-f20863ada72d_buggy.java
+++ b/tmp/a1f93faf-156f-407f-bea4-1434b9035355_fixed.java
@@ -1,14 +1,17 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        // Only add to stack and emit end tag for unknown elements
+        if (!Tag.isKnownTag(startTag.name())) {
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
