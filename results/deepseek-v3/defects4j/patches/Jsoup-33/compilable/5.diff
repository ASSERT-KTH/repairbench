diff --git a/tmp/3a3a732b-79ec-411a-acc3-7c69d5459c08_buggy.java b/tmp/5435cb51-0f5c-42cf-ab54-bd14760f00ea_fixed.java
index dc93be3..4704753 100644
--- a/tmp/3a3a732b-79ec-411a-acc3-7c69d5459c08_buggy.java
+++ b/tmp/5435cb51-0f5c-42cf-ab54-bd14760f00ea_fixed.java
@@ -1,14 +1,20 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            Tag tag = Tag.valueOf(startTag.name());
+            // only add to stack and emit end tag for unknown tags
+            if (tag.isKnownTag()) {
+                return insertEmpty(startTag);
+            } else {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
             }
+        }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
