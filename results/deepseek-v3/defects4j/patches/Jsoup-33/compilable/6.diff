diff --git a/tmp/f50fd559-3dcf-4498-bfee-b92bf00796e9_buggy.java b/tmp/240a0be6-7c81-4727-a41d-dd886ef9ad19_fixed.java
index dc93be3..b25adad 100644
--- a/tmp/f50fd559-3dcf-4498-bfee-b92bf00796e9_buggy.java
+++ b/tmp/240a0be6-7c81-4727-a41d-dd886ef9ad19_fixed.java
@@ -1,14 +1,17 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
+            // Only add to stack and emit end tag if it's not a known empty block
+            if (!Tag.isKnownTag(startTag.name()) || !Tag.valueOf(startTag.name()).isEmpty()) {
                 stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            }
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
