diff --git a/tmp/bd9492ce-b83d-4753-9848-d0ab7303c3db_buggy.java b/tmp/fd592a6d-207c-49a2-985d-cfaa6e6cff2f_fixed.java
index 10616db..015f988 100644
--- a/tmp/bd9492ce-b83d-4753-9848-d0ab7303c3db_buggy.java
+++ b/tmp/fd592a6d-207c-49a2-985d-cfaa6e6cff2f_fixed.java
@@ -1,19 +1,34 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        
+        // Add the value and get the new partial
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+        
+        // Handle month-end adjustments
+        if (fieldIndex == 1) { // 1 typically represents the month field
+            int month = newValues[0];
+            int day = newValues[1];
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+            if (day > maxDay) {
+                newValues[1] = maxDay;
+            }
+        }
+        
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
