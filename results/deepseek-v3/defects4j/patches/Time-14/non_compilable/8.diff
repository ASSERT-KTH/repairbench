diff --git a/tmp/165ee662-dd6a-4797-848f-ab1eabc18f8d_buggy.java b/tmp/0e4fab4a-f4b9-4753-8a74-1ae601ae07c2_fixed.java
index 10616db..64148ab 100644
--- a/tmp/165ee662-dd6a-4797-848f-ab1eabc18f8d_buggy.java
+++ b/tmp/0e4fab4a-f4b9-4753-8a74-1ae601ae07c2_fixed.java
@@ -1,19 +1,43 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+    
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        
+        // Handle month addition with end-of-month adjustment
+        if (fieldIndex == 1) { // 1 is typically the month field index
+            int year = iChronology.year().get(instant);
+            int month = iChronology.monthOfYear().get(instant);
+            int day = iChronology.dayOfMonth().get(instant);
+            
+            // Calculate new month and year
+            int newMonth = month + valueToAdd;
+            int yearDiff = (newMonth - 1) / 12;
+            newMonth = ((newMonth - 1) % 12) + 1;
+            year += yearDiff;
+            
+            // Get maximum days in new month
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, newMonth);
+            if (day > maxDay) {
+                day = maxDay;
+            }
+            
+            // Set new values
+            instant = iChronology.year().set(instant, year);
+            instant = iChronology.monthOfYear().set(instant, newMonth);
+            instant = iChronology.dayOfMonth().set(instant, day);
+            
+            return iChronology.get(partial, instant);
+        }
+        
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
