diff --git a/tmp/ae733f76-b15f-47b2-be58-fcf5fa62d1d2_buggy.java b/tmp/00168d55-04af-4cac-b120-73ab093b041b_fixed.java
index f47d784..ce55739 100644
--- a/tmp/ae733f76-b15f-47b2-be58-fcf5fa62d1d2_buggy.java
+++ b/tmp/00168d55-04af-4cac-b120-73ab093b041b_fixed.java
@@ -1,12 +1,25 @@
 @Override
 public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
         MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
         NodeTraversal t = new NodeTraversal(compiler, renamer);
         t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
+    
+    // Additional logic to handle the 'arguments' object
+    NodeTraversal.traverse(compiler, root, new AbstractPostOrderCallback() {
+        @Override
+        public void visit(NodeTraversal t, Node n, Node parent) {
+            if (n.isVar() && n.getFirstChild().getString().equals("arguments")) {
+                // Convert var arguments = ... to arguments = ...
+                Node expr = new Node(Token.EXPR_RESULT, n.getFirstChild().detach());
+                parent.replaceChild(n, expr);
+                compiler.reportCodeChange();
+            }
+        }
+    });
 }
\ No newline at end of file
