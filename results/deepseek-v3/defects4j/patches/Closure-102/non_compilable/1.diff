diff --git a/tmp/71492cae-5eaf-48c9-af0b-8b1ecbf0bc86_buggy.java b/tmp/b22bfa17-1013-48b8-bb7a-c1682bdaf307_fixed.java
index f47d784..0a93de2 100644
--- a/tmp/71492cae-5eaf-48c9-af0b-8b1ecbf0bc86_buggy.java
+++ b/tmp/b22bfa17-1013-48b8-bb7a-c1682bdaf307_fixed.java
@@ -1,12 +1,25 @@
 @Override
 public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
         MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
         NodeTraversal t = new NodeTraversal(compiler, renamer);
         t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
+    
+    // Additional logic to handle 'arguments' object
+    NodeTraversal.traverse(compiler, root, new AbstractPostOrderCallback() {
+        @Override
+        public void visit(NodeTraversal t, Node n, Node parent) {
+            if (n.isVar() && n.getFirstChild().getString().equals("arguments")) {
+                // Convert 'var arguments = ...' to 'arguments = ...'
+                Node expr = new Node(Token.EXPR_RESULT, n.getFirstChild().detach());
+                parent.replaceChild(n, expr);
+                compiler.reportCodeChange();
+            }
+        }
+    });
 }
\ No newline at end of file
