diff --git a/tmp/0558c68e-ff47-4688-96cf-361854074925_buggy.java b/tmp/18b2daba-9283-4fdf-9bb4-4f422202ad84_fixed.java
index f47d784..47cfb02 100644
--- a/tmp/0558c68e-ff47-4688-96cf-361854074925_buggy.java
+++ b/tmp/18b2daba-9283-4fdf-9bb4-4f422202ad84_fixed.java
@@ -1,12 +1,25 @@
 @Override
 public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
         MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
         NodeTraversal t = new NodeTraversal(compiler, renamer);
         t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
+    
+    // Additional fix: Ensure 'arguments' is not redeclared
+    NodeTraversal.traverse(compiler, root, new AbstractPostOrderCallback() {
+        @Override
+        public void visit(NodeTraversal t, Node n, Node parent) {
+            if (n.isVar() && n.getFirstChild().getString().equals("arguments")) {
+                // Convert the var declaration to a simple assignment
+                Node expr = IR.exprResult(IR.assign(n.getFirstChild().detach(), n.getFirstChild().detach()));
+                parent.replaceChild(n, expr);
+                compiler.reportCodeChange();
+            }
+        }
+    });
 }
\ No newline at end of file
