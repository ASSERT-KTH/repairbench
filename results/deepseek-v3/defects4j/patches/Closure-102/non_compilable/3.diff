diff --git a/tmp/3fc91bf3-d2ea-4189-9922-4d1cd73f74ef_buggy.java b/tmp/0251d327-a6bb-4a62-bb5b-46393add7146_fixed.java
index f47d784..f5e4ebf 100644
--- a/tmp/3fc91bf3-d2ea-4189-9922-4d1cd73f74ef_buggy.java
+++ b/tmp/0251d327-a6bb-4a62-bb5b-46393add7146_fixed.java
@@ -1,12 +1,25 @@
 @Override
 public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
         MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
         NodeTraversal t = new NodeTraversal(compiler, renamer);
         t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
+    
+    // Additional fix to handle the 'arguments' object correctly
+    NodeTraversal.traverse(compiler, root, new AbstractPostOrderCallback() {
+        @Override
+        public void visit(NodeTraversal t, Node n, Node parent) {
+            if (n.isVar() && n.getFirstChild().getString().equals("arguments")) {
+                // Convert the var declaration to a simple assignment
+                Node value = n.getFirstChild().getFirstChild();
+                Node assign = new Node(Token.ASSIGN, n.getFirstChild().cloneNode(), value.cloneTree());
+                parent.replaceChild(n, assign);
+            }
+        }
+    });
 }
\ No newline at end of file
