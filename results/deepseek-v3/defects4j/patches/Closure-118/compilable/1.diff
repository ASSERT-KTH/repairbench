diff --git a/tmp/9942f6dd-c4cd-47ec-a724-3f6767cdb8fa_buggy.java b/tmp/f3fd1475-98a6-4b5c-bda5-c3d893eb6072_fixed.java
index 0b7c52e..d6bd089 100644
--- a/tmp/9942f6dd-c4cd-47ec-a724-3f6767cdb8fa_buggy.java
+++ b/tmp/f3fd1475-98a6-4b5c-bda5-c3d893eb6072_fixed.java
@@ -1,27 +1,29 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
         // We should never see a mix of numbers and strings.
         String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
+        if (prop != null) {  // Add null check for prop
             if (!prop.scheduleRenaming(child,
                                      processProperty(t, prop, type, null))) {
               // TODO(user): It doesn't look like the user can do much in this
               // case right now.
               if (propertiesToErrorFor.containsKey(name)) {
                 compiler.report(JSError.make(
                     t.getSourceName(), child, propertiesToErrorFor.get(name),
                     Warnings.INVALIDATION, name,
                     (type == null ? "null" : type.toString()), n.toString(), ""));
               }
             }
         }
       }
+    }
\ No newline at end of file
