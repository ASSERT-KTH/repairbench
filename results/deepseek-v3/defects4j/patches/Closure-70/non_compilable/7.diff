diff --git a/tmp/63e6da8f-5edc-4e55-802f-d25cf3caf913_buggy.java b/tmp/ec8c92fa-c4b4-479c-af36-eeff104dbfba_fixed.java
index 1530b34..dfb0615 100644
--- a/tmp/63e6da8f-5edc-4e55-802f-d25cf3caf913_buggy.java
+++ b/tmp/ec8c92fa-c4b4-479c-af36-eeff104dbfba_fixed.java
@@ -1,23 +1,34 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
     Node astParameters = functionNode.getFirstChild().getNext();
     Node body = astParameters.getNext();
     FunctionType functionType = (FunctionType) functionNode.getJSType();
     if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
             Node jsDocParameter = jsDocParameters.getFirstChild();
             for (Node astParameter : astParameters.children()) {
                 if (jsDocParameter != null) {
+                    // Check if the parameter is already declared
+                    Var var = scope.getVar(astParameter.getString());
+                    if (var != null && var.getScope() == scope) {
+                        // Handle duplicate declaration with type checking
+                        JSType originalType = var.getType();
+                        JSType newType = jsDocParameter.getJSType();
+                        if (!originalType.isEquivalentTo(newType)) {
+                            // Report type mismatch
+                            reportTypeMismatch(astParameter, originalType, newType);
+                        }
+                    }
                     defineSlot(astParameter, functionNode,
                             jsDocParameter.getJSType(), true);
                     jsDocParameter = jsDocParameter.getNext();
                 } else {
                     defineSlot(astParameter, functionNode, null, true);
                 }
             }
         }
     }
 } // end declareArguments
\ No newline at end of file
