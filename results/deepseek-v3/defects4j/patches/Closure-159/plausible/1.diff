diff --git a/tmp/11b8cb25-d0e3-4b7c-ae50-99d75820bb70_buggy.java b/tmp/385751d7-f04b-4d37-a78f-ecb7023ae3b9_fixed.java
index de9af32..5cb9180 100644
--- a/tmp/11b8cb25-d0e3-4b7c-ae50-99d75820bb70_buggy.java
+++ b/tmp/385751d7-f04b-4d37-a78f-ecb7023ae3b9_fixed.java
@@ -1,18 +1,25 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+      if (child.getType() == Token.GETPROP) {
+        // Handle cases like foo.call() or foo.apply()
+        Node target = child.getFirstChild();
+        if (target.getType() == Token.NAME) {
+          changed.add(target.getString());
+        }
+      } else if (child.getType() == Token.NAME) {
+        // Handle normal function calls
         changed.add(child.getString());
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
