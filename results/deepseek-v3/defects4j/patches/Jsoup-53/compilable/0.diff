diff --git a/tmp/08505f18-4c22-4c86-800b-95ff5507a9c7_buggy.java b/tmp/4a1d9982-860f-48d3-bf9e-53b4d4bff54c_fixed.java
index fecb896..ec2ec75 100644
--- a/tmp/08505f18-4c22-4c86-800b-95ff5507a9c7_buggy.java
+++ b/tmp/4a1d9982-860f-48d3-bf9e-53b4d4bff54c_fixed.java
@@ -1,34 +1,37 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    boolean inSingleQuote = false;
+    boolean inDoubleQuote = false;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
+        
+        // Handle quotes
+        if (c == '\'' && last != ESC) {
+            inSingleQuote = !inSingleQuote;
+        } else if (c == '"' && last != ESC) {
+            inDoubleQuote = !inDoubleQuote;
+        }
+
+        if (!inSingleQuote && !inDoubleQuote) {
             if (last == 0 || last != ESC) {
                 if (c.equals(open)) {
                     depth++;
                     if (start == -1)
                         start = pos;
                 }
                 else if (c.equals(close))
                     depth--;
             }
+        }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
