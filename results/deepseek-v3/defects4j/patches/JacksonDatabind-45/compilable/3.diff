diff --git a/tmp/1cd38e69-30a5-43f3-a6a3-071e6fb3a5d9_buggy.java b/tmp/fd86a1c0-e08b-4a69-a5ea-af3482f8afe8_fixed.java
index 0dbce00..237668f 100644
--- a/tmp/1cd38e69-30a5-43f3-a6a3-071e6fb3a5d9_buggy.java
+++ b/tmp/fd86a1c0-e08b-4a69-a5ea-af3482f8afe8_fixed.java
@@ -1,33 +1,34 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
-
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            if (shape == JsonFormat.Shape.STRING || shape == JsonFormat.Shape.ANY) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
-        return this;
+    // Fall back to default behavior based on SerializationFeature.WRITE_DATES_AS_TIMESTAMPS
+    boolean asTimestamp = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
+    return withFormat(asTimestamp, null);
 }
\ No newline at end of file
