diff --git a/tmp/348cb0ef-bf27-4bcb-8c4e-a656aca2915f_buggy.java b/tmp/4444dfa5-b165-401c-9c4c-fcda19f9f8f9_fixed.java
index 1c732f4..e0c956e 100644
--- a/tmp/348cb0ef-bf27-4bcb-8c4e-a656aca2915f_buggy.java
+++ b/tmp/4444dfa5-b165-401c-9c4c-fcda19f9f8f9_fixed.java
@@ -1,88 +1,95 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         String sentence = (String) msg;
         sentence = sentence.substring(sentence.indexOf('|') + 1, sentence.lastIndexOf('|'));
 
         Position position = new Position();
         position.setProtocol(getProtocolName());
 
         for (String entry : sentence.split(",")) {
             int delimiter = entry.indexOf('=');
             String key = entry.substring(0, delimiter);
             String value = entry.substring(delimiter + 1);
             switch (key) {
                 case "unit":
                     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, value);
                     if (deviceSession != null) {
                         position.setDeviceId(deviceSession.getDeviceId());
                     }
                     break;
                 case "gps_valid":
                     position.setValid(Integer.parseInt(value) != 0);
                     break;
                 case "datetime_actual":
+                    try {
                         position.setTime(new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").parse(value));
+                    } catch (ParseException e) {
+                        // Handle parsing errors, e.g., log them or set a default value
+                        System.err.println("Error parsing datetime_actual: " + value + ", " + e.getMessage());
+                        // Optionally set a default time
+                        // position.setTime(new Date());
+                    }
                     break;
                 case "latitude":
                     position.setLatitude(Double.parseDouble(value));
                     break;
                 case "longitude":
                     position.setLongitude(Double.parseDouble(value));
                     break;
                 case "altitude":
                     position.setAltitude(Double.parseDouble(value));
                     break;
                 case "velocity":
                     position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(value)));
                     break;
                 case "heading":
                     position.setCourse(Integer.parseInt(value));
                     break;
                 case "eventid":
                     position.set(Position.KEY_EVENT, Integer.parseInt(value));
                     break;
                 case "mileage":
                     position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));
                     break;
                 case "satellites":
                     position.set(Position.KEY_SATELLITES, Integer.parseInt(value));
                     break;
                 case "ignition":
                     position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);
                     break;
                 case "door":
                     position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);
                     break;
                 case "arm":
                     position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);
                     break;
                 case "fuel":
                     position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));
                     break;
                 case "rpm":
                     position.set(Position.KEY_RPM, Integer.parseInt(value));
                     break;
                 case "main_voltage":
                     position.set(Position.KEY_POWER, Double.parseDouble(value));
                     break;
                 case "backup_voltage":
                     position.set(Position.KEY_BATTERY, Double.parseDouble(value));
                     break;
                 case "analog1":
                 case "analog2":
                 case "analog3":
                     position.set(Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'), Double.parseDouble(value));
                     break;
                 case "extra1":
                 case "extra2":
                 case "extra3":
                 default:
                     position.set(key, value);
                     break;
             }
         }
 
         return position;
     }
\ No newline at end of file
