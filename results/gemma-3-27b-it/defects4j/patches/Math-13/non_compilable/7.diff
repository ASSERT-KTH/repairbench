diff --git a/tmp/630faa3e-9986-42cf-94a5-3faaae1e7ab5_buggy.java b/tmp/1c649d94-9300-47c6-8446-9ffcb6dea06c_fixed.java
index 4e21866..cdf1d6f 100644
--- a/tmp/630faa3e-9986-42cf-94a5-3faaae1e7ab5_buggy.java
+++ b/tmp/1c649d94-9300-47c6-8446-9ffcb6dea06c_fixed.java
@@ -1,10 +1,25 @@
     /**
      * Computes the square-root of the weight matrix.
      *
      * @param m Symmetric, positive-definite (weight) matrix.
      * @return the square-root of the weight matrix.
      */
     private RealMatrix squareRoot(RealMatrix m) {
         final EigenDecomposition dec = new EigenDecomposition(m);
-            return dec.getSquareRoot();
+        RealMatrix sqrtM = new Array2DRowRealMatrix(m.getRowDimension(), m.getColumnDimension());
+        for (int i = 0; i < m.getRowDimension(); i++) {
+            double eigenvalue = dec.getRealEigenvalue(i);
+            if (eigenvalue < 0) {
+                throw new IllegalArgumentException("Matrix is not positive definite");
+            }
+            sqrtM.setEntry(i, i, FastMath.sqrt(eigenvalue));
+        }
+        RealMatrix v = dec.getV();
+        RealMatrix vInverse = new Array2DRowRealMatrix(v.getRowDimension(), v.getColumnDimension());
+        for (int i = 0; i < v.getRowDimension(); i++) {
+            for (int j = 0; j < v.getColumnDimension(); j++) {
+                vInverse.setEntry(i, j, v.getEntry(j, i));
+            }
+        }
+        return v.multiply(sqrtM).multiply(vInverse);
     }
\ No newline at end of file
