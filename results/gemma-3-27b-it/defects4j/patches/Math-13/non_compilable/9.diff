diff --git a/tmp/d244b69f-0268-4b83-b54e-089f4df53def_buggy.java b/tmp/0149807c-57fd-4412-a155-2eeccd788de8_fixed.java
index 4e21866..28e38ec 100644
--- a/tmp/d244b69f-0268-4b83-b54e-089f4df53def_buggy.java
+++ b/tmp/0149807c-57fd-4412-a155-2eeccd788de8_fixed.java
@@ -1,10 +1,26 @@
     /**
      * Computes the square-root of the weight matrix.
      *
      * @param m Symmetric, positive-definite (weight) matrix.
      * @return the square-root of the weight matrix.
      */
     private RealMatrix squareRoot(RealMatrix m) {
         final EigenDecomposition dec = new EigenDecomposition(m);
-            return dec.getSquareRoot();
+        RealMatrix sqrtM = new Array2DRowRealMatrix(m.getRowDimension(), m.getColumnDimension());
+        for (int i = 0; i < m.getRowDimension(); i++) {
+            double eigenvalue = dec.getRealEigenvalue(i);
+            if (eigenvalue < 0) {
+                throw new IllegalArgumentException("Matrix is not positive semi-definite");
+            }
+            sqrtM.setEntry(i, i, FastMath.sqrt(eigenvalue));
+        }
+        RealMatrix v = dec.getV();
+        RealMatrix vInv = new Array2DRowRealMatrix(v.getRowDimension(), v.getColumnDimension());
+        for (int i = 0; i < v.getRowDimension(); i++) {
+            for (int j = 0; j < v.getColumnDimension(); j++) {
+                vInv.setEntry(i, j, v.getEntry(j, i));
+            }
+        }
+
+        return v.multiply(sqrtM).multiply(vInv);
     }
\ No newline at end of file
