diff --git a/tmp/8a1591ba-50af-4b9e-9cb7-4164003463b6_buggy.java b/tmp/8e744b9e-b992-4f0a-9220-fac5a768fa40_fixed.java
index 4e21866..6b5d2e7 100644
--- a/tmp/8a1591ba-50af-4b9e-9cb7-4164003463b6_buggy.java
+++ b/tmp/8e744b9e-b992-4f0a-9220-fac5a768fa40_fixed.java
@@ -1,10 +1,29 @@
     /**
      * Computes the square-root of the weight matrix.
      *
      * @param m Symmetric, positive-definite (weight) matrix.
      * @return the square-root of the weight matrix.
      */
     private RealMatrix squareRoot(RealMatrix m) {
         final EigenDecomposition dec = new EigenDecomposition(m);
-            return dec.getSquareRoot();
+        RealMatrix sqrtM = new Array2DRowRealMatrix(m.getRowDimension(), m.getColumnDimension());
+        for (int i = 0; i < m.getRowDimension(); i++) {
+            double eigenvalue = dec.getRealEigenvalue(i);
+            if (eigenvalue < 0) {
+                return m; // Or throw an exception, depending on the desired behavior
+            }
+            sqrtM.setEntry(i, i, FastMath.sqrt(eigenvalue));
+        }
+        RealVector eigenvectors = dec.getEigenvector(0);
+        for (int i = 0; i < m.getRowDimension(); i++) {
+            for(int j = 0; j < m.getColumnDimension(); j++) {
+                double sum = 0.0;
+                for(int k = 0; k < m.getRowDimension(); k++){
+                    sum += dec.getEigenvector(k).getEntry(i) * sqrtM.getEntry(k, k) * dec.getEigenvector(k).getEntry(j);
+                }
+                sqrtM.setEntry(i, j, sum);
+            }
+        }
+
+        return sqrtM;
     }
\ No newline at end of file
