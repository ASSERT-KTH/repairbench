diff --git a/tmp/e81aa6e1-87dc-429f-92eb-b3fc0677ee59_buggy.java b/tmp/479c711a-5f7e-49c9-b317-406ab0f81d8b_fixed.java
index e69de29..026f506 100644
--- a/tmp/e81aa6e1-87dc-429f-92eb-b3fc0677ee59_buggy.java
+++ b/tmp/479c711a-5f7e-49c9-b317-406ab0f81d8b_fixed.java
@@ -0,0 +1,20 @@
+    @Override
+    public JavaType getSuperClass()
+    {
+        if (_superClassType == null) {
+            // Need to resolve superclass, but only on demand.  Important
+            // for performance (avoid resolving if not needed) and to
+            // avoid infinite recursion if superclass is itself recursive.
+
+            // Ok: check if base type even defines a super class.
+            Class<?> rawSuper = _class.getSuperclass();
+            if (rawSuper == null) {
+                return null; // No super class
+            }
+
+            // Important: must always construct Type from *raw* class, not
+            // from type variable.
+            _superClassType = _typeFactory.constructType(rawSuper);
+        }
+        return _superClassType;
+    }
\ No newline at end of file
