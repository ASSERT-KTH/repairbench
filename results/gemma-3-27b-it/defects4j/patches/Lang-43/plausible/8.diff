diff --git a/tmp/16f39db6-b27b-4047-9bcf-53fd468cbd91_buggy.java b/tmp/598cd058-1e19-48cf-83c6-892c47d1bcec_fixed.java
index b6b11b6..2ba4918 100644
--- a/tmp/16f39db6-b27b-4047-9bcf-53fd468cbd91_buggy.java
+++ b/tmp/598cd058-1e19-48cf-83c6-892c47d1bcec_fixed.java
@@ -1,38 +1,39 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            pos.setIndex(pos.getIndex() + 1);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
+        while (pos.getIndex() < pattern.length()) {
+            if (escapingOn && pattern.substring(pos.getIndex()).startsWith(ESCAPED_QUOTE)) {
                 appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
                         QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+                pos.setIndex(pos.getIndex() + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
                 continue;
             }
             switch (c[pos.getIndex()]) {
             case QUOTE:
-                next(pos);
+                pos.setIndex(pos.getIndex() + 1);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
                         pos.getIndex() - lastHold);
             default:
-                next(pos);
+                pos.setIndex(pos.getIndex() + 1);
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
