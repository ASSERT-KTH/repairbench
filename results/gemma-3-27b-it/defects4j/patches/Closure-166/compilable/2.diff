diff --git a/tmp/8c11b160-838a-414b-a6a2-8ef543cfb8cb_buggy.java b/tmp/e035e495-d050-4b2c-b097-80914bf98403_fixed.java
index 5f96616..a97c097 100644
--- a/tmp/8c11b160-838a-414b-a6a2-8ef543cfb8cb_buggy.java
+++ b/tmp/e035e495-d050-4b2c-b097-80914bf98403_fixed.java
@@ -1,20 +1,26 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint instanceof UnionType) {
+      UnionType unionType = (UnionType) constraint;
+      if (unionType.contains(constraint.toObjectType())) {
+          matchRecordTypeConstraint(constraint.toObjectType());
+      }
+
     }
   }
\ No newline at end of file
