diff --git a/tmp/f33fbb78-5a1b-4033-8e86-2d6d159e4c01_buggy.java b/tmp/ea6a0eae-2dad-43fb-8ac5-f59648665f76_fixed.java
index 5f96616..aa2ab8c 100644
--- a/tmp/f33fbb78-5a1b-4033-8e86-2d6d159e4c01_buggy.java
+++ b/tmp/ea6a0eae-2dad-43fb-8ac5-f59648665f76_fixed.java
@@ -1,20 +1,25 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint instanceof UnionType) {
+      UnionType unionType = (UnionType) constraint;
+      if (unionType.contains(constraint.toObjectType())) {
+        matchRecordTypeConstraint(constraint.toObjectType());
+      }
     }
   }
\ No newline at end of file
