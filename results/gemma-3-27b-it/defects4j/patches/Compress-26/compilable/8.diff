diff --git a/tmp/dff0435d-a6bc-41fd-abdc-6655ef6d1764_buggy.java b/tmp/b3d895be-c482-48ac-ac59-063b29c632b9_fixed.java
index 4b163f6..5b027e4 100644
--- a/tmp/dff0435d-a6bc-41fd-abdc-6655ef6d1764_buggy.java
+++ b/tmp/b3d895be-c482-48ac-ac59-063b29c632b9_fixed.java
@@ -1,28 +1,34 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+        long totalSkipped = 0;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
-                break;
+                byte[] buffer = new byte[1];
+                while (numToSkip > 0 && input.read(buffer, 0, 1) != -1) {
+                    totalSkipped++;
+                    numToSkip--;
                 }
+            } else {
+                totalSkipped += skipped;
                 numToSkip -= skipped;
             }
+        }
 
-        return available - numToSkip;
+        return totalSkipped;
     }
\ No newline at end of file
