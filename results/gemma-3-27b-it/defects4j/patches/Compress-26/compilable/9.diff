diff --git a/tmp/4ed7b015-4d84-4a62-8a79-e13ae18cf0e0_buggy.java b/tmp/302e1258-897e-46bb-a6e4-99fa8ecd0085_fixed.java
index 4b163f6..8bd638c 100644
--- a/tmp/4ed7b015-4d84-4a62-8a79-e13ae18cf0e0_buggy.java
+++ b/tmp/302e1258-897e-46bb-a6e4-99fa8ecd0085_fixed.java
@@ -1,28 +1,32 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
         long available = numToSkip;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
+                byte[] buffer = new byte[1];
+                while (numToSkip > 0 && input.read(buffer) != -1) {
+                    numToSkip--;
+                }
                 break;
             }
             numToSkip -= skipped;
         }
             
         return available - numToSkip;
     }
\ No newline at end of file
