diff --git a/tmp/64340d78-1717-4cd7-bade-60fe68369287_buggy.java b/tmp/e2ce7acc-a266-47d1-82e2-608b5e3352b0_fixed.java
index 21f64c6..b3abd90 100644
--- a/tmp/64340d78-1717-4cd7-bade-60fe68369287_buggy.java
+++ b/tmp/e2ce7acc-a266-47d1-82e2-608b5e3352b0_fixed.java
@@ -1,23 +1,32 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            if (startChar != input[offset]) {
+                while (offset < length && startChar != input[offset]) {
+                    offset++;
+                }
+            }
+            if (offset >= length) {
+                return -1;
+            }
             int i = offset + 1;
             int last = i + seq.length() - 1;
             if (offset < length) {
+                if (last >= length) {
+                    continue;
+                }
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
