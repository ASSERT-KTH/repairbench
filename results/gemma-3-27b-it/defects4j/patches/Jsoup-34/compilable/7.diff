diff --git a/tmp/28840287-f3d2-4a73-bae1-9a3e61bc2c37_buggy.java b/tmp/fd46fc5c-5089-422b-9dcb-95b27e0a4f19_fixed.java
index 21f64c6..0c93e2c 100644
--- a/tmp/28840287-f3d2-4a73-bae1-9a3e61bc2c37_buggy.java
+++ b/tmp/fd46fc5c-5089-422b-9dcb-95b27e0a4f19_fixed.java
@@ -1,23 +1,30 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            if (startChar != input[offset]) {
+                while (offset < length && startChar != input[offset]) {
+                    offset++;
+                }
+            }
+            if (offset >= length) {
+                return -1;
+            }
             int i = offset + 1;
             int last = i + seq.length() - 1;
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++) {
+                }
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
