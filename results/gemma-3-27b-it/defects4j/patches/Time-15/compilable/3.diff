diff --git a/tmp/6690e802-3e58-4f39-8314-01d0c24391ba_buggy.java b/tmp/37a4ad4a-5d55-4bd4-bf07-9eee8c546c7d_fixed.java
index a9a5e27..65751da 100644
--- a/tmp/6690e802-3e58-4f39-8314-01d0c24391ba_buggy.java
+++ b/tmp/37a4ad4a-5d55-4bd4-bf07-9eee8c546c7d_fixed.java
@@ -1,24 +1,25 @@
     /**
      * Multiply two values throwing an exception if overflow occurs.
      * 
      * @param val1  the first value
      * @param val2  the second value
      * @return the new total
      * @throws ArithmeticException if the value is too big or too small
      * @since 1.2
      */
     public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                return -val1;
-            case 0:
+        if (val2 == 0) {
             return 0L;
-            case 1:
-                return val1;
         }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+        long total = val1 * (long) val2;
+        if (val1 > 0 && val2 > 0 && total < 0) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        } else if (val1 < 0 && val2 < 0 && total < 0) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        } else if (val1 > 0 && val2 < 0 && total > 0) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        } else if (val1 < 0 && val2 > 0 && total > 0) {
             throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
         }
         return total;
     }
\ No newline at end of file
