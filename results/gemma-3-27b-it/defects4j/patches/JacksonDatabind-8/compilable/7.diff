diff --git a/tmp/8b884ba4-48c9-43bf-8d01-da8f0f6c19d3_buggy.java b/tmp/a5d42cb1-3fd2-43f8-8b22-6cf2d4db9183_fixed.java
index c9da1b7..103e39a 100644
--- a/tmp/8b884ba4-48c9-43bf-8d01-da8f0f6c19d3_buggy.java
+++ b/tmp/a5d42cb1-3fd2-43f8-8b22-6cf2d4db9183_fixed.java
@@ -1,33 +1,37 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
         // already had an explicitly marked one?
         if (oldOne != null) {
 
             if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                 // but skip, if new one not annotated
                 if (!explicit) {
                     return;
                 }
                 // both explicit: verify
+                if (oldOne.getClass() == newOne.getClass()) {
+                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                }
                 // otherwise only verify if neither explicitly annotated.
-            }
-
+            } else {
                 // one more thing: ok to override in sub-class
                 if (oldOne.getClass() == newOne.getClass()) {
                     // [databind#667]: avoid one particular class of bogus problems
                     
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                     // otherwise, which one to choose?
                     // new type more generic, use old
                     // new type more specific, use it
+                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                            +" creators: already had "+oldOne+", encountered "+newOne);
+                }
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
\ No newline at end of file
