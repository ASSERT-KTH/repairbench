diff --git a/tmp/dc971544-4102-4a8a-98d2-9637cfba838c_buggy.java b/tmp/86a1c234-0138-43f8-a6b5-27c5cd719049_fixed.java
index c9da1b7..58a3cea 100644
--- a/tmp/dc971544-4102-4a8a-98d2-9637cfba838c_buggy.java
+++ b/tmp/86a1c234-0138-43f8-a6b5-27c5cd719049_fixed.java
@@ -1,33 +1,36 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
         // already had an explicitly marked one?
         if (oldOne != null) {
 
             if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
                 // but skip, if new one not annotated
                 if (!explicit) {
                     return;
                 }
                 // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+                if (oldOne.getClass() == newOne.getClass()) {
+                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                 }
-
-            // one more thing: ok to override in sub-class
+            } else {
+                // only verify if neither explicitly annotated.
                 if (oldOne.getClass() == newOne.getClass()) {
                     // [databind#667]: avoid one particular class of bogus problems
 
                         throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                                 +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                     // otherwise, which one to choose?
                     // new type more generic, use old
                     // new type more specific, use it
                 }
             }
+        }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
\ No newline at end of file
