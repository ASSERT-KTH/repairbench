diff --git a/tmp/7c39389d-e99f-490f-8c15-1b5f89e6bf44_buggy.java b/tmp/9394a982-a992-40b6-8478-323aa98b4eff_fixed.java
index 51ebfca..abfea19 100644
--- a/tmp/7c39389d-e99f-490f-8c15-1b5f89e6bf44_buggy.java
+++ b/tmp/9394a982-a992-40b6-8478-323aa98b4eff_fixed.java
@@ -1,32 +1,41 @@
     /**
      * Encodes binary data using the base64 algorithm, optionally chunking the output into 76 character blocks.
      * 
      * @param binaryData
      *            Array containing binary data to encode.
      * @param isChunked
      *            if <code>true</code> this encoder will chunk the base64 output into 76 character blocks
      * @param urlSafe
      *            if <code>true</code> this encoder will emit - and _ instead of the usual + and / characters.
      * @param maxResultSize
      *            The maximum result size to accept.
      * @return Base64-encoded data.
      * @throws IllegalArgumentException
      *             Thrown when the input array needs an output array bigger than maxResultSize
      * @since 1.4
      */
     public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {
         if (binaryData == null || binaryData.length == 0) {
             return binaryData;
         }
 
-        long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
+        int padding = 0;
+        if (binaryData.length % 3 != 0) {
+            padding = 3 - (binaryData.length % 3);
+        }
+        
+        long len = (binaryData.length + padding) * 4 / 3;
+        if (isChunked) {
+            len += (len / 76) * CHUNK_SEPARATOR.length;
+        }
+
         if (len > maxResultSize) {
             throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
                 len +
                 ") than the specified maxium size of " +
                 maxResultSize);
         }
 
-        Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);
+        Base64 b64 = isChunked ? new Base64(urlSafe, MIME_CHUNK_SIZE, CHUNK_SEPARATOR) : new Base64(urlSafe);
         return b64.encode(binaryData);
     }
\ No newline at end of file
