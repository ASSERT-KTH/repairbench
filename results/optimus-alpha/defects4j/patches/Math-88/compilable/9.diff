diff --git a/tmp/ace3ec18-7952-4f09-855c-e871fdb09656_buggy.java b/tmp/546e0bb9-2d55-4dd6-8b1d-623e33797a70_fixed.java
index 544303b..f75ec09 100644
--- a/tmp/ace3ec18-7952-4f09-855c-e871fdb09656_buggy.java
+++ b/tmp/546e0bb9-2d55-4dd6-8b1d-623e33797a70_fixed.java
@@ -1,29 +1,34 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         // if multiple variables can take a given value 
         // then we choose the first and set the rest equal to 0
-                coefficients[i] =
+        double value =
             (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
             (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
+        boolean isBasic = (basicRow != null);
+        boolean alreadySet = false;
+        if (isBasic) {
+            for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + coefficients.length; j++) {
+                if (tableau.getEntry(basicRow, j) == 1 && (j - getNumObjectiveFunctions()) != i) {
+                    // The current basic variable corresponds to another variable, not i
+                    alreadySet = true;
+                    break;
                 }
             }
         }
+        coefficients[i] = (!isBasic || alreadySet) ? 0 : value;
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
