diff --git a/tmp/8ae98b43-7b6d-4919-b316-b39b2fc88c6b_buggy.java b/tmp/ca250579-c82a-4122-8031-c33afe1f9bf7_fixed.java
index 544303b..c9f1382 100644
--- a/tmp/8ae98b43-7b6d-4919-b316-b39b2fc88c6b_buggy.java
+++ b/tmp/ca250579-c82a-4122-8031-c33afe1f9bf7_fixed.java
@@ -1,29 +1,25 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
+        // if variable is basic, set value, else zero
+        if (basicRow != null && basicRow < getHeight()) {
             coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
+                (getEntry(basicRow, getRhsOffset())) -
                 (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+        } else {
             coefficients[i] = 0;
         }
     }
-            }
-        }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
