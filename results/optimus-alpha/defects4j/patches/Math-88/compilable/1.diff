diff --git a/tmp/f01c7204-4fc2-477b-9ca0-3ecfe1538df4_buggy.java b/tmp/7194779d-9cd0-41a9-9270-488ce3b002fd_fixed.java
index 544303b..0e29bde 100644
--- a/tmp/f01c7204-4fc2-477b-9ca0-3ecfe1538df4_buggy.java
+++ b/tmp/7194779d-9cd0-41a9-9270-488ce3b002fd_fixed.java
@@ -1,29 +1,33 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+    double mostNegative = 0;
+    if (!restrictToNonNegative) {
+        Integer negativeVarBasicRow = getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
+        mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
+    }
     for (int i = 0; i < coefficients.length; i++) {
-            basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+        Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+        boolean isBasic = basicRow != null;
+        if (isBasic) {
+            boolean onlyOne = true;
+            // Check if current row corresponds exactly to x_i
+            for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + coefficients.length; j++) {
+                if (j != getNumObjectiveFunctions() + i && tableau.getEntry(basicRow, j) != 0) {
+                    onlyOne = false;
+                    break;
+                }
+            }
+            coefficients[i] = onlyOne ? getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative ? 0 : mostNegative) : 0;
+        } else {
             coefficients[i] = 0;
         }
     }
-            }
-        }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
