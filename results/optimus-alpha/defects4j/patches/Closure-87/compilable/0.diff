diff --git a/tmp/b649a446-0bd7-402a-a636-607f260c431b_buggy.java b/tmp/103350ae-5189-4cbc-859c-18a3b2eda2c4_fixed.java
index 19fd63e..897e18e 100644
--- a/tmp/b649a446-0bd7-402a-a636-607f260c431b_buggy.java
+++ b/tmp/103350ae-5189-4cbc-859c-18a3b2eda2c4_fixed.java
@@ -1,24 +1,30 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
       // IE has a bug where event handlers behave differently when
       // their return value is used vs. when their return value is in
       // an EXPR_RESULT. It's pretty freaking weird. See:
       // http://code.google.com/p/closure-compiler/issues/detail?id=291
       // We try to detect this case, and not fold EXPR_RESULTs
       // into other expressions.
-
       // We only have to worry about methods with an implicit 'this'
       // param, or this doesn't happen.
 
-          return NodeUtil.isExpressionNode(maybeExpr);
+      if (NodeUtil.isExpressionNode(maybeExpr)) {
+        if (maybeExpr.getFirstChild() != null
+            && NodeUtil.isGetProp(maybeExpr.getFirstChild())
+            && "onchange".equals(maybeExpr.getFirstChild().getLastChild().getString())) {
+          // Don't fold blocks with f.onchange() calls.
+          return false;
+        }
+        return true;
+      }
     }
   }
-
   return false;
 }
\ No newline at end of file
