diff --git a/tmp/7d1ee92e-012d-49fb-b458-50dc3d610cec_buggy.java b/tmp/fa997055-3f4c-4a57-a821-5bdd8b04bf81_fixed.java
index 511560e..ca354b6 100644
--- a/tmp/7d1ee92e-012d-49fb-b458-50dc3d610cec_buggy.java
+++ b/tmp/fa997055-3f4c-4a57-a821-5bdd8b04bf81_fixed.java
@@ -1,21 +1,21 @@
 private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
     // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
-        int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
+    int stackSize = stack.size();
+    // Limit the maximum number of elements to search up the stack to avoid stack overflows.
+    int searchLimit = Math.min(stackSize, MaxScopeSearchDepth);
+    int startPos = stackSize - 1;
+    int endPos = startPos - searchLimit + 1;
+    if (endPos < 0) endPos = 0;
 
-        for (int pos = bottom; pos >= top; pos--) {
+    for (int pos = startPos; pos >= endPos; pos--) {
         final String elName = stack.get(pos).nodeName();
         if (inSorted(elName, targetNames))
             return true;
         if (inSorted(elName, baseTypes))
             return false;
         if (extraTypes != null && inSorted(elName, extraTypes))
             return false;
     }
     //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
     return false;
 }
\ No newline at end of file
