diff --git a/tmp/4c7718f3-ed3c-4005-a975-ead7f4cb1054_buggy.java b/tmp/b83b7b3e-c232-4f94-908f-0276c1d65b51_fixed.java
index e4d90e7..cdaaddd 100644
--- a/tmp/4c7718f3-ed3c-4005-a975-ead7f4cb1054_buggy.java
+++ b/tmp/b83b7b3e-c232-4f94-908f-0276c1d65b51_fixed.java
@@ -1,45 +1,72 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
   } else if (prettyPrint) {
     // Don't pretty print recursively.
     prettyPrint = false;
 
     // Use a tree set so that the properties are sorted.
     Set<String> propertyNames = Sets.newTreeSet();
     for (ObjectType current = this;
          current != null && !current.isNativeObjectType() &&
              propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
 
     StringBuilder sb = new StringBuilder();
     sb.append("{");
 
     int i = 0;
+    int propertyCount = propertyNames.size();
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
 
       sb.append(property);
       sb.append(": ");
       sb.append(getPropertyType(property).toString());
 
       ++i;
+      // For prettyPrint==true (i.e., toString), only show up to MAX_PRETTY_PRINTED_PROPERTIES.
       if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
         sb.append(", ...");
         break;
       }
     }
 
     sb.append("}");
 
     prettyPrint = true;
     return sb.toString();
   } else {
-      return "{...}";
+    // In annotation (forAnnotations) mode, print all properties.
+    Set<String> propertyNames = Sets.newTreeSet();
+    for (ObjectType current = this;
+         current != null && !current.isNativeObjectType();
+         current = current.getImplicitPrototype()) {
+      propertyNames.addAll(current.getOwnPropertyNames());
+    }
+
+    StringBuilder sb = new StringBuilder();
+    sb.append("{");
+
+    int i = 0;
+    for (String property : propertyNames) {
+      if (i > 0) {
+        sb.append(", ");
+      }
+
+      sb.append(property);
+      sb.append(": ");
+      sb.append(getPropertyType(property).toStringHelper(forAnnotations));
+
+      ++i;
+    }
+
+    sb.append("}");
+    return sb.toString();
   }
 }
\ No newline at end of file
