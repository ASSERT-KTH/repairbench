diff --git a/tmp/4b75be8a-5b0c-4333-b6b7-c4b7ff5c5734_buggy.java b/tmp/6976bcb1-73dc-4be3-ba21-c6d24b7a2eb6_fixed.java
index 03b03d7..b8a83db 100644
--- a/tmp/4b75be8a-5b0c-4333-b6b7-c4b7ff5c5734_buggy.java
+++ b/tmp/6976bcb1-73dc-4be3-ba21-c6d24b7a2eb6_fixed.java
@@ -1,25 +1,37 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
 
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // get both candidate instants for this local time
+        long earlier = convertLocalToUTC(local, false, instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
+        long later = convertLocalToUTC(local, false, instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+
+        // Make sure earlier <= later
+        if (earlier > later) {
+            long tmp = earlier;
+            earlier = later;
+            later = tmp;
+        }
+
+        // If the requested instant is already at the desired offset, return it as is
+        if (instant == (earlierOrLater ? later : earlier)) {
+            return instant;
+        }
+        
+        // Return either the earlier or later candidate
+        return earlierOrLater ? later : earlier;
     }
\ No newline at end of file
