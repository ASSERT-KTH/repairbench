diff --git a/tmp/7807f7da-9473-45f4-87f3-b6a14d0aa626_buggy.java b/tmp/7c756305-aa34-4be2-9dca-11ee77ca807e_fixed.java
index 03b03d7..4924708 100644
--- a/tmp/7807f7da-9473-45f4-87f3-b6a14d0aa626_buggy.java
+++ b/tmp/7c756305-aa34-4be2-9dca-11ee77ca807e_fixed.java
@@ -1,25 +1,44 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
 
     // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    long localInstant = convertUTCToLocal(instant);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Find both possible UTC instants for this local time (one with earlier offset, one with later offset)
+    long earlierInstant = convertLocalToUTC(localInstant, false, instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
+    long laterInstant = convertLocalToUTC(localInstant, false, instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+
+    // For overlaps, earlierInstant and laterInstant will not be equal.
+    // We need to pick which one matches the earlier/later flag most closely to the input instant
+    if (instant == earlierInstant || instant == laterInstant) {
+        // already at one of the possibilities
+        if (earlierOrLater) {
+            // want later offset
+            return laterInstant;
+        } else {
+            // want earlier offset
+            return earlierInstant;
+        }
+    } else {
+        // instant is not at either overlap instant, pick offset accordingly
+        if (earlierOrLater) {
+            // want later offset
+            return laterInstant;
+        } else {
+            // want earlier offset
+            return earlierInstant;
+        }
+    }
 }
\ No newline at end of file
