diff --git a/tmp/764bc908-4c68-42dd-86bb-e7e9a2153dab_buggy.java b/tmp/c4cc142a-afa1-4c15-b0b6-b7eea31f5f42_fixed.java
index 03b03d7..3e07bb5 100644
--- a/tmp/764bc908-4c68-42dd-86bb-e7e9a2153dab_buggy.java
+++ b/tmp/c4cc142a-afa1-4c15-b0b6-b7eea31f5f42_fixed.java
@@ -1,25 +1,48 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
 
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
 
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // The two possible UTC instants for this local time
+        long earlierInstant = convertLocalToUTC(local, false, instantBefore);
+        long laterInstant = convertLocalToUTC(local, false, instantAfter);
+
+        // Ensure earlierInstant and laterInstant are ordered
+        if (earlierInstant > laterInstant) {
+            long tmp = earlierInstant;
+            earlierInstant = laterInstant;
+            laterInstant = tmp;
+        }
+
+        // Adjust as requested
+        if (earlierOrLater) {
+            // Select later instant if in overlap, otherwise don't move
+            if (instant < laterInstant && instant >= earlierInstant) {
+                return laterInstant;
+            } else {
+                return instant;
+            }
+        } else {
+            // Select earlier instant if in overlap, otherwise don't move
+            if (instant >= laterInstant || instant < earlierInstant) {
+                return instant;
+            } else {
+                return earlierInstant;
+            }
+        }
     }
\ No newline at end of file
