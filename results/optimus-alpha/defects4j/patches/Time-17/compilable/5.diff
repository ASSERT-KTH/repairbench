diff --git a/tmp/a64c30e6-29a8-4ce7-9b79-f228d41cec56_buggy.java b/tmp/2f8ee507-f29f-4781-a3c6-f9f53d174787_fixed.java
index 03b03d7..4d9f570 100644
--- a/tmp/a64c30e6-29a8-4ce7-9b79-f228d41cec56_buggy.java
+++ b/tmp/2f8ee507-f29f-4781-a3c6-f9f53d174787_fixed.java
@@ -1,25 +1,39 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
         
         // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+        long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;
+        long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;
+        long offsetBefore = getOffset(instantBefore);
+        long offsetAfter = getOffset(instantAfter);
+        long offsetAtInstant = getOffset(instant);
+
+        if (offsetBefore <= offsetAfter) {
+            // No overlap, or gap
+            return instant;
         }
         
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        // There is an overlap. The offset is decreasing (e.g. DST ends, clocks go backward).
+        // So for a given local time, there are two possible instants.
+        // Earlier/later refers to the offset: earlier = bigger offset, later = smaller offset.
+
+        long local = instant + offsetAtInstant;
+
+        // The two candidate instants for this local time:
+        long instant1 = local - offsetBefore;
+        long instant2 = local - offsetAfter;
+
+        // sort
+        long earlierInstant = instant1 < instant2 ? instant1 : instant2;
+        long laterInstant = instant1 < instant2 ? instant2 : instant1;
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // Pick the one matching the request:
+        return earlierOrLater ? laterInstant : earlierInstant;
     }
\ No newline at end of file
