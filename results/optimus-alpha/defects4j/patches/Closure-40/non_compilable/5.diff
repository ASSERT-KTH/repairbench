diff --git a/tmp/bc420554-0f01-4408-89a2-b9ffbbd4bb12_buggy.java b/tmp/94f8f691-8df9-4fff-a6c3-ed88ef0ec9ac_fixed.java
index 670114d..f58db6e 100644
--- a/tmp/bc420554-0f01-4408-89a2-b9ffbbd4bb12_buggy.java
+++ b/tmp/94f8f691-8df9-4fff-a6c3-ed88ef0ec9ac_fixed.java
@@ -1,48 +1,56 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
+        // Fix: avoid adding a ClassDefiningFunctionNode for calls like
+        // goog.inherits(ns.PageSelectionModel.ChangeEvent, ...)
+        // if .ChangeEvent has never actually been declared.
+        // See: https://github.com/google/closure-compiler/issues/284
+        // Only add a class defining node if the name is actually a function or constructor.
+        // (Was: always added if getName returned non-null.)
+        if (name.getDeclaration() != null) {
           refNodes.add(new ClassDefiningFunctionNode(
-              name, n, parent, parent.getParent()));
+              name, n, parent, parent != null ? parent.getParent() : null));
+        }
       }
     }
   }
 }
\ No newline at end of file
