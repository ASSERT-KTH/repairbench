diff --git a/tmp/eb9f83e5-38e9-43b6-8072-aab75db5b469_buggy.java b/tmp/f5c8aa58-af83-4f59-ab71-94ef6473ced4_fixed.java
index 1c53d31..e7ccb90 100644
--- a/tmp/eb9f83e5-38e9-43b6-8072-aab75db5b469_buggy.java
+++ b/tmp/f5c8aa58-af83-4f59-ab71-94ef6473ced4_fixed.java
@@ -1,20 +1,29 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
+  Object instance;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    instance = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    if (!(instance instanceof TypeAdapter)) {
+      throw new IllegalArgumentException("@JsonAdapter value must be a TypeAdapter or TypeAdapterFactory reference.");
+    }
+    TypeAdapter<?> typeAdapter = (TypeAdapter<?>) instance;
+    return annotation.nullSafe() ? typeAdapter.nullSafe() : typeAdapter;
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    instance = constructorConstructor.get(TypeToken.get(typeAdapterFactory)).construct();
+    if (!(instance instanceof TypeAdapterFactory)) {
+      throw new IllegalArgumentException("@JsonAdapter value must be a TypeAdapter or TypeAdapterFactory reference.");
+    }
+    TypeAdapter<?> typeAdapter = ((TypeAdapterFactory) instance).create(gson, fieldType);
+    if (typeAdapter != null && annotation.nullSafe()) {
+      return typeAdapter.nullSafe();
+    }
+    return typeAdapter;
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
 }
\ No newline at end of file
