diff --git a/tmp/e8ab1b3c-66c4-4158-81c3-6f51d10ff706_buggy.java b/tmp/2f6c845c-c353-4f5d-81eb-226cbb87b09d_fixed.java
index 25c13b3..c6e94ce 100644
--- a/tmp/e8ab1b3c-66c4-4158-81c3-6f51d10ff706_buggy.java
+++ b/tmp/2f6c845c-c353-4f5d-81eb-226cbb87b09d_fixed.java
@@ -1,15 +1,13 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
 protected double getInitialDomain(double p) {
-        double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+    // Use mean if defined, otherwise use median, or 1 as a fallback.
+    if (d > 2.0) {
+        return d / (d - 2.0); // mean
+    } else if (d > 0.0 && d != 2.0) {
+        // median can be an alternative, but for generality, use 1.0 as a fallback
+        return 1.0;
+    } else {
+        // d <= 0 or d == 2: avoid invalid domain
+        return 1.0;
+    }
 }
\ No newline at end of file
