diff --git a/tmp/7c7883c3-95d7-46d5-a311-7e9830c6d663_buggy.java b/tmp/689d137d-3310-4b70-ac41-e7072f08fee0_fixed.java
index 88bb3a1..4358ea3 100644
--- a/tmp/7c7883c3-95d7-46d5-a311-7e9830c6d663_buggy.java
+++ b/tmp/689d137d-3310-4b70-ac41-e7072f08fee0_fixed.java
@@ -1,57 +1,62 @@
 /**
  * Helper method called when there is the explicit "is-creator", but no mode declaration.
  *
  * @since 2.9.2
  */
 protected void _addExplicitAnyCreator(DeserializationContext ctxt,
         BeanDescription beanDesc, CreatorCollector creators,
         CreatorCandidate candidate)
     throws JsonMappingException
 {
     // Looks like there's bit of magic regarding 1-parameter creators; others simpler:
     if (1 != candidate.paramCount()) {
         // Ok: for delegates, we want one and exactly one parameter without
         // injection AND without name
         int oneNotInjected = candidate.findOnlyParamWithoutInjection();
         if (oneNotInjected >= 0) {
             // getting close; but most not have name
             if (candidate.paramName(oneNotInjected) == null) {
                 _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);
                 return;
             }
         }
         _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);
         return;
     }
     AnnotatedParameter param = candidate.parameter(0);
     JacksonInject.Value injectId = candidate.injection(0);
     PropertyName paramName = candidate.explicitParamName(0);
     BeanPropertyDefinition paramDef = candidate.propertyDef(0);
 
+    // Fix: always use findImplicitParamName for correct name (strategy-based rename)
+    PropertyName implicitParamName = candidate.findImplicitParamName(0);
+
     // If there's injection or explicit name, should be properties-based
     boolean useProps = (paramName != null) || (injectId != null);
     if (!useProps && (paramDef != null)) {
         // One more thing: if implicit name matches property with a getter
         // or field, we'll consider it property-based as well
-
-            // 25-May-2018, tatu: as per [databind#2051], looks like we have to get
-            //    not implicit name, but name with possible strategy-based-rename
-//            paramName = candidate.findImplicitParamName(0);
-            paramName = candidate.findImplicitParamName(0);
+        // Use implicit param name (fix for [databind#2051])
+        paramName = implicitParamName;
         useProps = (paramName != null) && paramDef.couldSerialize();
     }
+    // Further fix: If explicit and implicit are both null, but def exists and implicit name exists, use it
+    if (!useProps && (implicitParamName != null)) {
+        paramName = implicitParamName;
+        useProps = true;
+    }
     if (useProps) {
         SettableBeanProperty[] properties = new SettableBeanProperty[] {
                 constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)
         };
         creators.addPropertyCreator(candidate.creator(), true, properties);
         return;
     }
     _handleSingleArgumentCreator(creators, candidate.creator(), true, true);
 
     // one more thing: sever link to creator property, to avoid possible later
     // problems with "unresolved" constructor property
     if (paramDef != null) {
         ((POJOPropertyBuilder) paramDef).removeConstructors();
     }
 }
\ No newline at end of file
