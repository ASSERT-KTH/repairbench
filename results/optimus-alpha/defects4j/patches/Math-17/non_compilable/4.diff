diff --git a/tmp/2c09152e-1eb5-438f-9f6c-f66863390b3a_buggy.java b/tmp/7b554f82-6832-4603-9758-a144c905c8af_fixed.java
index 10da689..ddadbab 100644
--- a/tmp/2c09152e-1eb5-438f-9f6c-f66863390b3a_buggy.java
+++ b/tmp/7b554f82-6832-4603-9758-a144c905c8af_fixed.java
@@ -1,7 +1,35 @@
     /** Multiply this by a single digit x.
      * @param x multiplicand
      * @return product of this and x
      */
     public Dfp multiply(final int x) {
+        // handle special cases per Dfp multiply contract
+        if (isNaN()) {
+            return field.newNaN(this);
+        }
+        if (x == 0) {
+            if (sign == -1) {
+                return field.newDfp(0).negate();
+            } else {
+                return field.getZero();
+            }
+        }
+        if (isInfinite()) {
+            if (x == 0) {
+                field.setIEEEFlagsBits(DfpField.FLAG_INVALID);
+                return field.newNaN(this);
+            }
+            if ((sign > 0 && x > 0) || (sign < 0 && x < 0)) {
+                return field.getPositiveInfinity();
+            } else {
+                return field.getNegativeInfinity();
+            }
+        }
+        if (Math.abs(x) == 1) {
+            Dfp result = this.copy();
+            result.sign = sign * Integer.signum(x);
+            return result;
+        }
+        // normal case
         return multiplyFast(x);
     }
\ No newline at end of file
