diff --git a/tmp/ad7fa188-1096-4d7c-8a82-5c445f2e938b_buggy.java b/tmp/98592f13-31b4-4e46-a68d-ddc7c4d9c7cc_fixed.java
index d6662c7..a88ef76 100644
--- a/tmp/ad7fa188-1096-4d7c-8a82-5c445f2e938b_buggy.java
+++ b/tmp/98592f13-31b4-4e46-a68d-ddc7c4d9c7cc_fixed.java
@@ -1,23 +1,21 @@
-    /**
-     * Parse an entry name from a buffer.
-     * Parsing stops when a NUL is found
-     * or the buffer length is reached.
-     *
-     * @param buffer The buffer from which to parse.
-     * @param offset The offset into the buffer from which to parse.
-     * @param length The maximum number of bytes to parse.
-     * @return The entry name.
-     */
 public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
     int end = offset + length;
-
-        for (int i = offset; i < end; ++i) {
+    int i = offset;
+    // Find NUL or end
+    for (; i < end; ++i) {
         if (buffer[i] == 0) {
             break;
         }
-            result.append((char) buffer[i]);
     }
-
+    try {
+        // Use Latin-1/ISO-8859-1 to interpret bytes 1:1 as chars
+        return new String(buffer, offset, i - offset, "ISO-8859-1");
+    } catch (java.io.UnsupportedEncodingException e) {
+        // Fallback should never hit, but just in case
+        StringBuilder result = new StringBuilder(i - offset);
+        for (int j = offset; j < i; ++j) {
+            result.append((char) (buffer[j] & 0xFF));
+        }
         return result.toString();
     }
+}
\ No newline at end of file
