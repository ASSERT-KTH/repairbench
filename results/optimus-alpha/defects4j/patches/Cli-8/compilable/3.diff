diff --git a/tmp/bc8c167a-0a0a-4182-8ee8-66d0bfedf80e_buggy.java b/tmp/db125b01-024e-4951-86ba-0228a11535f3_fixed.java
index 8e93a5e..925054d 100644
--- a/tmp/bc8c167a-0a0a-4182-8ee8-66d0bfedf80e_buggy.java
+++ b/tmp/db125b01-024e-4951-86ba-0228a11535f3_fixed.java
@@ -1,43 +1,51 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
+    // Process all existing newlines first so that wrapped text remains correct
+    int lineStart = 0;
+    while (true) {
+        int newline = text.indexOf(defaultNewLine, lineStart);
+        String line;
+        boolean lastLine = (newline == -1);
+        if (lastLine) {
+            line = text.substring(lineStart);
+        } else {
+            line = text.substring(lineStart, newline);
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
         
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        // Now process this line
+        boolean firstLine = (lineStart == 0);
+        int pos = findWrapPos(line, width, firstLine ? 0 : nextLineTabStop);
 
-            if (pos == -1)
-            {
-                sb.append(text);
+        String prefix = (!firstLine && nextLineTabStop > 0) ? createPadding(nextLineTabStop) : "";
 
-                return sb;
+        while (true) {
+            if (pos == -1) {
+                sb.append(prefix).append(rtrim(line));
+                break;
+            } else {
+                sb.append(prefix).append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+                line = line.substring(pos).trim();
+                prefix = (nextLineTabStop > 0) ? createPadding(nextLineTabStop) : "";
+                pos = findWrapPos(line, width, nextLineTabStop);
+            }
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        if (lastLine) break;
+        sb.append(defaultNewLine);
+        lineStart = newline + defaultNewLine.length();
     }
+
+    return sb;
 }
\ No newline at end of file
