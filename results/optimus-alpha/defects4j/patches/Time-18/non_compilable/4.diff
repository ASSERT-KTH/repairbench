diff --git a/tmp/d1a58098-38ec-4812-aa29-8490e7922946_buggy.java b/tmp/d4ddc170-35e0-4ba1-abb9-ff4ccac9b65c_fixed.java
index be2af16..61f09c8 100644
--- a/tmp/d1a58098-38ec-4812-aa29-8490e7922946_buggy.java
+++ b/tmp/d4ddc170-35e0-4ba1-abb9-ff4ccac9b65c_fixed.java
@@ -1,29 +1,53 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Try Julian first if date is before cutover year,
+    // because, e.g., 1500-02-29 is invalid in Gregorian but valid in Julian.
+    boolean tryJulianFirst = false;
+    if (year < iCutoverYear) {
+        tryJulianFirst = true;
+    } else if (year == iCutoverYear) {
+        if (monthOfYear < iCutoverMonth) {
+            tryJulianFirst = true;
+        } else if (monthOfYear == iCutoverMonth) {
+            if (dayOfMonth < iCutoverDay) {
+                tryJulianFirst = true;
+            }
+        }
+    }
+
     long instant;
+    if (tryJulianFirst) {
+        instant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant >= iCutoverMillis) {
+            // Okay, it's in the illegal cutover gap.
+            throw new IllegalArgumentException("Specified date does not exist");
+        }
+    } else {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
+    }
     return instant;
 }
\ No newline at end of file
