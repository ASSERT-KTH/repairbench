diff --git a/tmp/5f881928-ba7b-40e2-9cab-dc4d70d775ff_buggy.java b/tmp/bc90c235-5a35-409c-9b81-d77070129527_fixed.java
index be2af16..81c1565 100644
--- a/tmp/5f881928-ba7b-40e2-9cab-dc4d70d775ff_buggy.java
+++ b/tmp/bc90c235-5a35-409c-9b81-d77070129527_fixed.java
@@ -1,29 +1,47 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
+    // Always try Julian first to allow valid Julian dates before cutover.
+    long instant = 0L;
+    boolean julianValid = true;
+    try {
+        instant = iJulianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    } catch (IllegalArgumentException e) {
+        julianValid = false;
+    }
+
+    if (julianValid && instant < iCutoverMillis) {
+        return instant;
+    } else {
+        // Try Gregorian for at or after cutover
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // If fails for Gregorian, and not a valid Julian, bubble up exception
+            if (!julianValid) {
+                throw e;
+            } else {
+                // Otherwise, for historical broken dates, throw "gap"
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+        }
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            // Result landed before cutover, but Gregorian field would not exist there (should not happen)
             throw new IllegalArgumentException("Specified date does not exist");
         }
-        }
         return instant;
     }
+}
\ No newline at end of file
