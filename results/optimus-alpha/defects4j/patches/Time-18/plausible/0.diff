diff --git a/tmp/40a1c69d-d621-423f-b085-040d3421be82_buggy.java b/tmp/59405384-36ee-48f0-be7f-0236cca81a36_fixed.java
index be2af16..1b126e2 100644
--- a/tmp/40a1c69d-d621-423f-b085-040d3421be82_buggy.java
+++ b/tmp/59405384-36ee-48f0-be7f-0236cca81a36_fixed.java
@@ -1,29 +1,30 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // Try Julian first. If in Julian it's before cutover, use it. Otherwise fallback to Gregorian.
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
     instant = iJulianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+    if (instant < iCutoverMillis) {
+        return instant;
+    }
+
+    // Otherwise try Gregorian.
+    instant = iGregorianChronology.getDateTimeMillis
+        (year, monthOfYear, dayOfMonth,
+         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    if (instant < iCutoverMillis) {
         throw new IllegalArgumentException("Specified date does not exist");
     }
-        }
     return instant;
 }
\ No newline at end of file
