diff --git a/tmp/d704c045-7c12-4a0b-b8b1-8c92604b9812_buggy.java b/tmp/ad165656-d46f-4d10-ac12-14098bcc3959_fixed.java
index be2af16..19e5a9b 100644
--- a/tmp/d704c045-7c12-4a0b-b8b1-8c92604b9812_buggy.java
+++ b/tmp/ad165656-d46f-4d10-ac12-14098bcc3959_fixed.java
@@ -1,29 +1,45 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    // Try Julian first, as dates before cutover should be evaluated in Julian
+    long instant = 0L;
+    IllegalArgumentException julianEx = null;
+    try {
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant < iCutoverMillis) {
+            return instant;
+        }
+    } catch (IllegalArgumentException ex) {
+        julianEx = ex;
+    }
+
+    // Try Gregorian
+    try {
+        instant = iGregorianChronology.getDateTimeMillis
+            (year, monthOfYear, dayOfMonth,
+             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            return instant;
+        }
+    } catch (IllegalArgumentException ex) {
+        // If both Julian and Gregorian fail, throw Julian's exception
+        if (julianEx != null) {
+            throw julianEx;
+        }
+        throw ex;
+    }
+
+    // If the instant is in the cutover gap
     throw new IllegalArgumentException("Specified date does not exist");
 }
\ No newline at end of file
-        }
-        return instant;
-    }
