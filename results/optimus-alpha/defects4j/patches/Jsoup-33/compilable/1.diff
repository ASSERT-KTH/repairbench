diff --git a/tmp/4f0753ef-945a-49c4-9835-6f2efb56bd82_buggy.java b/tmp/bd79cb46-7170-4486-ac62-da883d3d723a_fixed.java
index dc93be3..a88b17b 100644
--- a/tmp/4f0753ef-945a-49c4-9835-6f2efb56bd82_buggy.java
+++ b/tmp/bd79cb46-7170-4486-ac62-da883d3d723a_fixed.java
@@ -1,14 +1,16 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+    // handle empty known and unknown tags
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        if (!el.tag().isKnownTag() || !el.tag().isSelfClosing()) {
+            // Only add to stack (simulate end tag) if unknown or not truly empty per HTML spec
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
