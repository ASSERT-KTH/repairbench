diff --git a/tmp/fd3dc652-98ea-4c49-bb79-6dfe31f2a0c9_buggy.java b/tmp/a4fc6368-a581-4f5a-8400-012c0ee4f756_fixed.java
index a7f0d46..4bf460b 100644
--- a/tmp/fd3dc652-98ea-4c49-bb79-6dfe31f2a0c9_buggy.java
+++ b/tmp/a4fc6368-a581-4f5a-8400-012c0ee4f756_fixed.java
@@ -1,22 +1,31 @@
 void add(String newcode) {
   maybeEndStatement();
 
   if (newcode.length() == 0) {
     return;
   }
 
   char c = newcode.charAt(0);
+  char lastChar = getLastChar();
+
   if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+      isWordChar(lastChar)) {
     append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
+  }
+
+  // Special handling for the case of consecutive regexps ("/" or "/ /")
+  // to avoid inserting unwanted spaces, as in: "/ // / /"
+  if (c == '/' && lastChar == '/') {
+    // See if the newcode looks like a regular expression with a space
+    // (i.e., starts with "/ ", but not just "//")
+    if (newcode.length() > 1 && newcode.charAt(1) == ' ') {
+      // Don't append a space between the slashes.
+      // Instead, append the "/" first, then the rest
+      append("/");
+      append(newcode.substring(1));
+      return;
+    }
   }
 
   append(newcode);
 }
\ No newline at end of file
