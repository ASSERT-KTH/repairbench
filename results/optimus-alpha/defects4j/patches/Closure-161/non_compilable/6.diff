diff --git a/tmp/5bff5d6c-19e5-4246-b423-9f8b26d67075_buggy.java b/tmp/79104d9b-3a62-4d22-9c9a-f400a2fc175f_fixed.java
index 1303a19..627bbcd 100644
--- a/tmp/5bff5d6c-19e5-4246-b423-9f8b26d67075_buggy.java
+++ b/tmp/79104d9b-3a62-4d22-9c9a-f400a2fc175f_fixed.java
@@ -1,45 +1,55 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
+    // Don't fold if GETELEM/GETPROP is the left child of an ASSIGN node.
+    if (parent != null && parent.isAssign() && parent.getFirstChild() == n) {
+        return n;
+    }
 
     if (right.getType() != Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into
       // arrays, or strings to index into array methods.
       return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
       error(INVALID_GETELEM_INDEX_ERROR, right);
       return n;
     }
 
     if (intIndex < 0) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
+    // Get the value at the given index in the array literal
     Node elem = left.getFirstChild();
     for (int i = 0; elem != null && i < intIndex; i++) {
       elem = elem.getNext();
     }
 
+    // Only fold if we're not assigning to an out-of-bounds array slot
     if (elem == null) {
+      // If this is being assigned (LHS of =), don't fold and don't error
+      if (parent != null && parent.isAssign() && parent.getFirstChild() == n) {
+          return n;
+      }
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
     if (elem.getType() == Token.EMPTY) {
       elem = NodeUtil.newUndefinedNode(elem);
     } else {
       left.removeChild(elem);
     }
 
     // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
 }
\ No newline at end of file
