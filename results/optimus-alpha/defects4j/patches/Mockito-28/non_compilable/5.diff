diff --git a/tmp/f9b4f4ae-ab8e-4b8f-bc6d-d17d10d9cfcc_buggy.java b/tmp/06434622-ff8b-4eff-9274-15578183f121_fixed.java
index fa6828a..b081ac8 100644
--- a/tmp/f9b4f4ae-ab8e-4b8f-bc6d-d17d10d9cfcc_buggy.java
+++ b/tmp/06434622-ff8b-4eff-9274-15578183f121_fixed.java
@@ -1,5 +1,25 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
-        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
+    // Sort fields: exact type matches come before ancestor type matches
+    List<Field> fields = new ArrayList<>(orderedInstanceFieldsFrom(awaitingInjectionClazz));
+    fields.sort((f1, f2) -> {
+        int c1 = countExactTypeMatches(f1, mocks);
+        int c2 = countExactTypeMatches(f2, mocks);
+        // Fields with more exact type matches are prioritized
+        return Integer.compare(c2, c1);
+    });
+    for(Field field : fields) {
         mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
     }
 }
+
+// Helper method to count how many mocks have exact type match for field
+private int countExactTypeMatches(Field field, Set<Object> mocks) {
+    int count = 0;
+    for (Object mock : mocks) {
+        if (field.getType().equals(mock.getClass()) || 
+            Arrays.stream(mock.getClass().getInterfaces()).anyMatch(iface -> iface.equals(field.getType()))) {
+            count++;
+        }
+    }
+    return count;
+}
\ No newline at end of file
