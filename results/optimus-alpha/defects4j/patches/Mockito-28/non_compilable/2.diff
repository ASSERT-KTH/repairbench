diff --git a/tmp/8a1acf29-e3cb-43a8-bb72-95317aecd13a_buggy.java b/tmp/480f2a8c-00a5-4e84-9263-bb9ff0bb7a75_fixed.java
index fa6828a..e951d8a 100644
--- a/tmp/8a1acf29-e3cb-43a8-bb72-95317aecd13a_buggy.java
+++ b/tmp/480f2a8c-00a5-4e84-9263-bb9ff0bb7a75_fixed.java
@@ -1,5 +1,18 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
-        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
+    // Sort fields so that more specific types come before their supertypes
+    List<Field> fields = new ArrayList<>(orderedInstanceFieldsFrom(awaitingInjectionClazz));
+    fields.sort(Comparator.comparingInt(f -> getClassHierarchyDepth(f.getType())).reversed());
+    for(Field field : fields) {
         mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
     }
 }
+
+// Helper method to determine class depth in the inheritance hierarchy
+private int getClassHierarchyDepth(Class<?> clazz) {
+    int depth = 0;
+    while (clazz != null && clazz != Object.class) {
+        depth++;
+        clazz = clazz.getSuperclass();
+    }
+    return depth;
+}
\ No newline at end of file
