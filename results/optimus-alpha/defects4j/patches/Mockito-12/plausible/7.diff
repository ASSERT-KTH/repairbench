diff --git a/tmp/b3f253f9-b700-464a-94d4-e2b9dba51ea1_buggy.java b/tmp/2c461df0-3ad9-4a74-9e85-744514dda9eb_fixed.java
index bada2b6..0d9ab12 100644
--- a/tmp/b3f253f9-b700-464a-94d4-e2b9dba51ea1_buggy.java
+++ b/tmp/2c461df0-3ad9-4a74-9e85-744514dda9eb_fixed.java
@@ -1,16 +1,22 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            if (actual instanceof Class) {
                 return (Class) actual;
-                //in case of nested generics we don't go deep
+            } else if (actual instanceof ParameterizedType) {
+                Type rawType = ((ParameterizedType) actual).getRawType();
+                if (rawType instanceof Class) {
+                    return (Class) rawType;
+                }
+            }
+            // Other possible types (TypeVariable, WildcardType) are not handled, fallback to Object.class
         }
-        
         return Object.class;
     }
\ No newline at end of file
