diff --git a/tmp/8794a6a3-5e21-4f2e-88da-dbb519b0dd68_buggy.java b/tmp/e03d91a3-2108-475e-901e-3b2c723aa938_fixed.java
index bada2b6..b1a2339 100644
--- a/tmp/8794a6a3-5e21-4f2e-88da-dbb519b0dd68_buggy.java
+++ b/tmp/e03d91a3-2108-475e-901e-3b2c723aa938_fixed.java
@@ -1,16 +1,23 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
+        // Fallback for other cases (TypeVariable, WildcardType, etc.)
+        return Object.class;
     }
-        
     return Object.class;
 }
\ No newline at end of file
