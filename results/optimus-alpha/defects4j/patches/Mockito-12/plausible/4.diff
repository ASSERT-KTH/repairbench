diff --git a/tmp/7b63fd3c-8bfa-4222-96b6-27a11e76db31_buggy.java b/tmp/5a4a135f-c204-4cb3-8222-604a7dda5adf_fixed.java
index bada2b6..a531987 100644
--- a/tmp/7b63fd3c-8bfa-4222-96b6-27a11e76db31_buggy.java
+++ b/tmp/5a4a135f-c204-4cb3-8222-604a7dda5adf_fixed.java
@@ -1,16 +1,24 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic != null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            // For nested generics, return the raw type
+            Type raw = ((ParameterizedType) actual).getRawType();
+            if (raw instanceof Class) {
+                return (Class) raw;
+            }
+        }
+        // If the actual type argument is not a class or parameterized type
     }
     
     return Object.class;
 }
\ No newline at end of file
