diff --git a/tmp/ea846b8c-6c79-4ac7-8b40-7d89a9b1467f_buggy.java b/tmp/520665f5-b042-481f-afbe-d7e36010a7d9_fixed.java
index bada2b6..1ffee18 100644
--- a/tmp/ea846b8c-6c79-4ac7-8b40-7d89a9b1467f_buggy.java
+++ b/tmp/520665f5-b042-481f-afbe-d7e36010a7d9_fixed.java
@@ -1,16 +1,22 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic != null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // In case of nested generics we don't go deep. To avoid ClassCastException, unwrap if needed.
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            Type rawType = ((ParameterizedType) actual).getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
