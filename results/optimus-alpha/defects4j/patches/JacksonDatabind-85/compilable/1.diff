diff --git a/tmp/6a65b863-e42e-4373-8654-2f9d49055584_buggy.java b/tmp/2e0769f8-596a-4856-bba8-0b8de8e1d12c_fixed.java
index d926eea..50f674a 100644
--- a/tmp/6a65b863-e42e-4373-8654-2f9d49055584_buggy.java
+++ b/tmp/2e0769f8-596a-4856-bba8-0b8de8e1d12c_fixed.java
@@ -1,48 +1,42 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
-        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
-        // First: custom pattern will override things
+    // If custom pattern or locale or timezone is specified, or shape is STRING, use it
     if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                     || format.hasLocale() || format.hasTimeZone()) {
-                    TimeZone tz = format.getTimeZone();
+        TimeZone tz = format.hasTimeZone() ? format.getTimeZone() : serializers.getTimeZone();
         final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
         final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
         SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
         df.setTimeZone(tz);
         return withFormat(Boolean.FALSE, df);
     }
 
-        // Otherwise, need one of these changes:
+    // Default (contextual) formatting: use provider's DateFormat if possible
+    DateFormat defaultFormat = serializers.getConfig().getDateFormat();
+    if (defaultFormat instanceof SimpleDateFormat) {
+        // Make a defensive copy
+        SimpleDateFormat sdf = (SimpleDateFormat) ((SimpleDateFormat) defaultFormat).clone();
+        return withFormat(Boolean.FALSE, sdf);
+    }
 
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
     return this;
 }
\ No newline at end of file
