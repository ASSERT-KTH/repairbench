diff --git a/tmp/5c096c1a-bb28-4f24-bb58-7adffc324289_buggy.java b/tmp/b058e9f7-0446-482d-8b2b-dc667c1ed213_fixed.java
index 1bd0d7e..b7be3e8 100644
--- a/tmp/5c096c1a-bb28-4f24-bb58-7adffc324289_buggy.java
+++ b/tmp/b058e9f7-0446-482d-8b2b-dc667c1ed213_fixed.java
@@ -1,31 +1,38 @@
 /**
  * Get the ns uri of the specified node.
  * @param node Node to check
  * @return String ns uri
  */
 public static String getNamespaceURI(Node node) {
     if (node instanceof Document) {
         node = ((Document) node).getDocumentElement();
     }
 
+    if (!(node instanceof Element)) {
+        return null;
+    }
+
     Element element = (Element) node;
 
     String uri = element.getNamespaceURI();
+
+    // Fix: if the local name has a prefix, and namespace URI is null, we should check for an empty ns mapping
     if (uri == null) {
         String prefix = getPrefix(node);
         String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
 
         Node aNode = node;
-            while (aNode != null) {
-                if (aNode.getNodeType() == Node.ELEMENT_NODE) {
+        while (aNode != null && aNode.getNodeType() == Node.ELEMENT_NODE) {
             Attr attr = ((Element) aNode).getAttributeNode(qname);
             if (attr != null) {
-                        return attr.getValue();
-                    }
+                String value = attr.getValue();
+                // If the mapped value is an empty string, treat as the empty namespace (per XML NS 1.0)
+                return value.length() == 0 ? "" : value;
             }
             aNode = aNode.getParentNode();
         }
+        // If we have a prefix and we couldn't resolve, per DOM API spec, consider as null
         return null;
     }
     return uri;
 }
\ No newline at end of file
