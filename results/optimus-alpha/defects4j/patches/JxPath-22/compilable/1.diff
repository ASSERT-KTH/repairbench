diff --git a/tmp/2204e728-d96c-47f2-b0d9-127b05f6b764_buggy.java b/tmp/bd354b15-d03f-49f8-baec-f80afeb83d8a_fixed.java
index 1bd0d7e..0482a9d 100644
--- a/tmp/2204e728-d96c-47f2-b0d9-127b05f6b764_buggy.java
+++ b/tmp/bd354b15-d03f-49f8-baec-f80afeb83d8a_fixed.java
@@ -1,31 +1,37 @@
 /**
  * Get the ns uri of the specified node.
  * @param node Node to check
  * @return String ns uri
  */
 public static String getNamespaceURI(Node node) {
     if (node instanceof Document) {
         node = ((Document) node).getDocumentElement();
     }
 
+    if (!(node instanceof Element)) {
+        return null;
+    }
+
     Element element = (Element) node;
 
     String uri = element.getNamespaceURI();
     if (uri == null) {
         String prefix = getPrefix(node);
         String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
 
         Node aNode = node;
-            while (aNode != null) {
-                if (aNode.getNodeType() == Node.ELEMENT_NODE) {
+        while (aNode != null && aNode.getNodeType() == Node.ELEMENT_NODE) {
             Attr attr = ((Element) aNode).getAttributeNode(qname);
             if (attr != null) {
-                        return attr.getValue();
-                    }
+                String val = attr.getValue();
+                // In DOM, an explicit xmlns="" unbinds the prefix which means no namespace.
+                // We should return "" rather than null so the element falls in NO_NAMESPACE.
+                return val;
             }
             aNode = aNode.getParentNode();
         }
-            return null;
+        // If we don't find any namespace declaration, return "" rather than null.
+        return "";
     }
     return uri;
 }
\ No newline at end of file
