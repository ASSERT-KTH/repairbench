diff --git a/tmp/9e8c4e31-4686-427b-a7ff-68571f5be6f9_buggy.java b/tmp/855db869-0769-4ea8-8a7b-af0538ffcc31_fixed.java
index 5f8ac1a..092515e 100644
--- a/tmp/9e8c4e31-4686-427b-a7ff-68571f5be6f9_buggy.java
+++ b/tmp/855db869-0769-4ea8-8a7b-af0538ffcc31_fixed.java
@@ -1,34 +1,44 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
     if (depth1 < depth2) {
+        if (p2 == null || p2.parent == null) {
+            // Can't go up anymore, treat as different trees
+            return -1;
+        }
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
+        if (p1 == null || p1.parent == null) {
+            // Can't go up anymore, treat as different trees
+            return 1;
+        }
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
-        if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
+    if (p1 == null || p2 == null || p1.parent == null || p2.parent == null) {
+        // Previously would throw, now safely treat as different trees.
+        // Arbitrary but consistent order: compare toString
+        String s1 = String.valueOf(p1);
+        String s2 = String.valueOf(p2);
+        return s1.compareTo(s2);
     }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
