diff --git a/tmp/43863551-fa81-4e59-9b3f-6f30d3c1bf2d_buggy.java b/tmp/db4d5e18-10da-40c4-b68e-a642de391f23_fixed.java
index d357c7e..0cb47b7 100644
--- a/tmp/43863551-fa81-4e59-9b3f-6f30d3c1bf2d_buggy.java
+++ b/tmp/db4d5e18-10da-40c4-b68e-a642de391f23_fixed.java
@@ -1,16 +1,18 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        // There are cases where a zero-sized file results in no block stream,
+        // we should return an empty stream instead of failing.
+        return new ByteArrayInputStream(new byte[0]);
     }
     
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder's
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
