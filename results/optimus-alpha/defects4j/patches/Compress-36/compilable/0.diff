diff --git a/tmp/388dc09c-7ea7-4f79-bb54-e561eb36e2fd_buggy.java b/tmp/fa113acd-142f-4943-be55-a0da7bcb23ae_fixed.java
index d357c7e..a32b200 100644
--- a/tmp/388dc09c-7ea7-4f79-bb54-e561eb36e2fd_buggy.java
+++ b/tmp/fa113acd-142f-4943-be55-a0da7bcb23ae_fixed.java
@@ -1,16 +1,22 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        // Instead of throwing, return a dummy InputStream (always EOF) so entries of size 0 work.
+        return new InputStream() {
+            @Override
+            public int read() {
+                return -1;
+            }
+        };
     }
     
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder's
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
