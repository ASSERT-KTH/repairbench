diff --git a/tmp/d556cc27-a6c9-41b1-a678-85a7f4a946c8_buggy.java b/tmp/746b9b5b-d496-49c9-84de-d4843a6114d7_fixed.java
index d357c7e..5391a4a 100644
--- a/tmp/d556cc27-a6c9-41b1-a678-85a7f4a946c8_buggy.java
+++ b/tmp/746b9b5b-d496-49c9-84de-d4843a6114d7_fixed.java
@@ -1,16 +1,23 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        // Return a dummy InputStream for zero-size entries, as per COMPRESS-348
+        // This ensures that read() returns -1 instantly.
+        return new InputStream() {
+            @Override
+            public int read() {
+                return -1;
+            }
+        };
     }
 
     while (deferredBlockStreams.size() > 1) {
         // In solid compression mode we need to decompress all leading folder'
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
