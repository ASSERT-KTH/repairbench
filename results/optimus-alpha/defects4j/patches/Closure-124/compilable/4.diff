diff --git a/tmp/3f2d4f24-f9f4-41d7-a575-adec2d0aba36_buggy.java b/tmp/f99fd314-8587-4b12-94f2-55da376a876e_fixed.java
index 2573d30..e84d0ae 100644
--- a/tmp/3f2d4f24-f9f4-41d7-a575-adec2d0aba36_buggy.java
+++ b/tmp/f99fd314-8587-4b12-94f2-55da376a876e_fixed.java
@@ -1,20 +1,26 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    Node objNode = node.getFirstChild();
+    // If the object of the property access might be changed by the replacement, it's not safe.
+    if (!isSafeReplacement(objNode, replacement)) {
+      return false;
+    }
+
+    // If the property access itself is being assigned, it's not safe.
+    if (node.isGetProp()
+        && isNameAssignedTo(node.getQualifiedName(), replacement)) {
       return false;
     }
 
     return true;
   }
\ No newline at end of file
