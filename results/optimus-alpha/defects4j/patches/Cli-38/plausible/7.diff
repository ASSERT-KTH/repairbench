diff --git a/tmp/48fc13e2-c357-4c54-ba6e-c24c7ac96bc4_buggy.java b/tmp/3b8bb10a-6269-402d-ad99-a363ec20d5cb_fixed.java
index 81a6e8b..8be4a5b 100644
--- a/tmp/48fc13e2-c357-4c54-ba6e-c24c7ac96bc4_buggy.java
+++ b/tmp/3b8bb10a-6269-402d-ad99-a363ec20d5cb_fixed.java
@@ -1,19 +1,35 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
     // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
     if (!token.startsWith("-") || token.length() == 1)
     {
         return false;
     }
 
     // remove leading "-" and "=value"
     int pos = token.indexOf("=");
+
     String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+
+    // Direct match for full string as a short option
+    if (options.hasShortOption(optName))
+    {
+        return true;
+    }
+
+    // Check for concatenated single-character short options (e.g. -ab => -a -b)
+    for (int i = 0; i < optName.length(); i++)
+    {
+        String ch = String.valueOf(optName.charAt(i));
+        if (!options.hasShortOption(ch))
+        {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
