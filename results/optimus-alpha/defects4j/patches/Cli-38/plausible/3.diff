diff --git a/tmp/9363ab15-275c-48c7-8606-a74ae3908c9a_buggy.java b/tmp/666d0c5a-7bf4-401c-b10f-701bb55da5e8_fixed.java
index 81a6e8b..bea80ad 100644
--- a/tmp/9363ab15-275c-48c7-8606-a74ae3908c9a_buggy.java
+++ b/tmp/666d0c5a-7bf4-401c-b10f-701bb55da5e8_fixed.java
@@ -1,19 +1,31 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
+        if (!token.startsWith("-") || token.length() == 1 || token.startsWith("--"))
         {
             return false;
         }
 
         // remove leading "-" and "=value"
         int pos = token.indexOf("=");
         String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+
+        // if optName is a registered short option or a concatenation of short options
+        if (options.hasShortOption(optName)) {
+            return true;
+        }
+
+        // Check if all characters in optName represent valid short options (concatenated)
+        for (int i = 0; i < optName.length(); i++) {
+            String shortOpt = String.valueOf(optName.charAt(i));
+            if (!options.hasShortOption(shortOpt)) {
+                return false;
+            }
+        }
+        return true;
     }
\ No newline at end of file
