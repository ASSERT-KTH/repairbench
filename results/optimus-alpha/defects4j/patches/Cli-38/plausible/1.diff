diff --git a/tmp/fd81c615-4a90-4ad4-856a-c6aa5f59d527_buggy.java b/tmp/2b447b8f-802d-448c-991f-4ebef40f54f0_fixed.java
index 81a6e8b..fa17839 100644
--- a/tmp/fd81c615-4a90-4ad4-856a-c6aa5f59d527_buggy.java
+++ b/tmp/2b447b8f-802d-448c-991f-4ebef40f54f0_fixed.java
@@ -1,19 +1,37 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
+        // If the token starts with "--", it's a long option, not a short one
+        if (token.startsWith("--")) {
+            return false;
+        }
+
         // remove leading "-" and "=value"
         int pos = token.indexOf("=");
+
         String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+
+        // Check if the whole string is a short option
+        if (options.hasShortOption(optName)) {
+            return true;
+        }
+
+        // Now check for multiple concatenated short options, e.g., -ab as -a -b
+        for (int i = 0; i < optName.length(); i++) {
+            String ch = String.valueOf(optName.charAt(i));
+            if (!options.hasShortOption(ch)) {
+                return false;
+            }
+        }
+        return true;
     }
\ No newline at end of file
