diff --git a/tmp/7c27b6bd-1ecc-4696-bf2d-18e6f9cf97d2_buggy.java b/tmp/d19b29d8-cfed-44f4-9f73-e3812fbe4e50_fixed.java
index 70cafe0..cf431b6 100644
--- a/tmp/7c27b6bd-1ecc-4696-bf2d-18e6f9cf97d2_buggy.java
+++ b/tmp/d19b29d8-cfed-44f4-9f73-e3812fbe4e50_fixed.java
@@ -1,18 +1,20 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
+    int nonZeroCount = 0;
     for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
-                } else {
+            nonZeroCount++;
+            if (nonZeroCount > 1 || !MathUtils.equals(getEntry(i, col), 1.0, epsilon)) {
                 return null;
             }
+            row = i;
         }
     }
-        return row;
+    // Column is basic if it has exactly one entry == 1 and all others == 0
+    return (nonZeroCount == 1) ? row : null;
 }
\ No newline at end of file
