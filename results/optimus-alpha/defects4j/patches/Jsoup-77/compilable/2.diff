diff --git a/tmp/a1af470b-7d8c-48be-b24d-15246ea9ac37_buggy.java b/tmp/3b4884c4-5bec-4d02-bb7b-bfb574afc601_fixed.java
index 9a3a9db..c6bbbd8 100644
--- a/tmp/a1af470b-7d8c-48be-b24d-15246ea9ac37_buggy.java
+++ b/tmp/3b4884c4-5bec-4d02-bb7b-bfb574afc601_fixed.java
@@ -1,27 +1,25 @@
 /**
-     * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
-     * found, skips.
+ * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence.
+ * If not found, skips.
  *
  * @param endTag tag to close
  */
 private void popStackToClose(Token.EndTag endTag) {
     String elName = endTag.name();
-        Element firstFound = null;
-
-        for (int pos = stack.size() -1; pos >= 0; pos--) {
+    // Find the FIRST (lowest) occurrence in stack matching elName, not just from top (for HTML-like case-insensitive matching etc)
+    int firstFoundPos = -1;
+    for (int pos = 0; pos < stack.size(); pos++) { // from the bottom
         Element next = stack.get(pos);
         if (next.nodeName().equals(elName)) {
-                firstFound = next;
+            firstFoundPos = pos;
             break;
         }
     }
-        if (firstFound == null)
+    if (firstFoundPos == -1)
         return; // not found, skip
 
-        for (int pos = stack.size() -1; pos >= 0; pos--) {
-            Element next = stack.get(pos);
+    // Remove from stack from the top down to and including firstFoundPos
+    for (int pos = stack.size() - 1; pos >= firstFoundPos; pos--) {
         stack.remove(pos);
-            if (next == firstFound)
-                break;
     }
 }
\ No newline at end of file
