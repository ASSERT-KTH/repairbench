diff --git a/tmp/fcdb86b1-b984-4544-9849-962699408fdc_buggy.java b/tmp/cad11d1a-3130-49d4-acb2-87976085da59_fixed.java
index a7e6997..b16d963 100644
--- a/tmp/fcdb86b1-b984-4544-9849-962699408fdc_buggy.java
+++ b/tmp/cad11d1a-3130-49d4-acb2-87976085da59_fixed.java
@@ -1,12 +1,25 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+    // Short options (-S, -SV, -S=V, -SV1=V2, -S1S2, -t1)
+    if (token == null || !token.startsWith("-") || token.length() < 2 || token.startsWith("--")) {
+        return false;
+    }
+
+    String optionPart = token.substring(1);
+    // If '=' is present, the option is before the first '='
+    String optionKey = optionPart.split("=", 2)[0];
 
-        // remove leading "-" and "=value"
+    // Try to find the longest matching short option from the beginning of optionPart
+    for (int i = optionKey.length(); i >= 1; i--) {
+        String candidate = optionKey.substring(0, i);
+        if (options.hasShortOption(candidate)) {
+            return true;
+        }
+    }
+    return false;
 }
\ No newline at end of file
