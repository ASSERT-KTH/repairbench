diff --git a/tmp/89e873c4-6c4a-482e-b906-5ad56924f372_buggy.java b/tmp/17eee186-6095-4431-abd1-c707177381c8_fixed.java
index a7e6997..551ad25 100644
--- a/tmp/89e873c4-6c4a-482e-b906-5ad56924f372_buggy.java
+++ b/tmp/17eee186-6095-4431-abd1-c707177381c8_fixed.java
@@ -1,12 +1,25 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
 private boolean isShortOption(String token)
 {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+    // Short options: -S, -SV, -S=V, -SV1=V2, -S1S2
+    // This function should recognize "-X", "-XX", but not treat "-long" as short option, unless "long" is a valid short option!
+    // The original implementation only checks the first character.
+    // FIX: Try to check for the longest matching short option prefix after the leading '-'
+    if (!token.startsWith("-") || token.length() < 2) {
+        return false;
+    }
 
-        // remove leading "-" and "=value"
+    String t = token.substring(1);
+    // Find the longest matching short option at the start of t
+    for (int i = t.length(); i >= 1; --i) {
+        String opt = t.substring(0, i);
+        if (options.hasShortOption(opt)) {
+            return true;
+        }
+    }
+    return false;
 }
\ No newline at end of file
