diff --git a/tmp/b663f9a0-1c92-42e0-b51d-5247f7072900_buggy.java b/tmp/c4fc7601-51ed-450f-a444-ae842537da52_fixed.java
index 6e45f80..b879955 100644
--- a/tmp/b663f9a0-1c92-42e0-b51d-5247f7072900_buggy.java
+++ b/tmp/c4fc7601-51ed-450f-a444-ae842537da52_fixed.java
@@ -1,21 +1,34 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
-
+      // Wrap typeAdapter to perform a runtime type check during read
+      return new TypeAdapter<T2>() {
+        @Override
+        public T2 read(com.google.gson.stream.JsonReader in) throws java.io.IOException {
+          T1 result = typeAdapter.read(in);
+          if (result == null || requestedType.isInstance(result)) {
+            return (T2) result;
+          }
+          throw new com.google.gson.JsonSyntaxException("Expected a " + requestedType.getName() + " but was " + result.getClass().getName());
+        }
+        @Override
+        public void write(com.google.gson.stream.JsonWriter out, T2 value) throws java.io.IOException {
+          typeAdapter.write(out, value);
+        }
+      };
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
