diff --git a/tmp/18717feb-08e5-402c-b924-5c8312041560_buggy.java b/tmp/34b14ba3-2dc2-42e0-9f9d-7d6977f7d7bc_fixed.java
index bfa2423..b3bf4b1 100644
--- a/tmp/18717feb-08e5-402c-b924-5c8312041560_buggy.java
+++ b/tmp/34b14ba3-2dc2-42e0-9f9d-7d6977f7d7bc_fixed.java
@@ -1,23 +1,20 @@
-    /**
-     * Generate a random sample from the distribution.
-     *
-     * @param sampleSize the number of random values to generate.
-     * @return an array representing the random sample.
-     * @throws NotStrictlyPositiveException if {@code sampleSize} is not
-     * positive.
-     */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        // Use the class of the distribution itself to determine the runtime type of T
+        @SuppressWarnings("unchecked")
+        T[] out = (T[]) java.lang.reflect.Array.newInstance(
+                singletons.get(0).getClass().getComponentType() != null 
+                ? singletons.get(0).getClass()
+                : Object.class, 
+                sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
 
         return out;
-
     }
\ No newline at end of file
