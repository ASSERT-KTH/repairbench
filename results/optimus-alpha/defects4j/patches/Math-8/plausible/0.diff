diff --git a/tmp/c374bf51-161b-4080-8b69-de1563c64717_buggy.java b/tmp/d04532c2-9143-4997-aeae-6471314e5cf4_fixed.java
index bfa2423..02eb896 100644
--- a/tmp/c374bf51-161b-4080-8b69-de1563c64717_buggy.java
+++ b/tmp/d04532c2-9143-4997-aeae-6471314e5cf4_fixed.java
@@ -1,23 +1,26 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
  * @return an array representing the random sample.
  * @throws NotStrictlyPositiveException if {@code sampleSize} is not
  * positive.
  */
+@SuppressWarnings("unchecked")
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                 sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    // Fix: Use the component type of the "sample()" result for array creation
+    T firstSample = sample();
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(firstSample.getClass(), sampleSize);
+    out[0] = firstSample;
 
-        for (int i = 0; i < sampleSize; i++) {
+    for (int i = 1; i < sampleSize; i++) {
         out[i] = sample();
     }
 
     return out;
-
 }
\ No newline at end of file
