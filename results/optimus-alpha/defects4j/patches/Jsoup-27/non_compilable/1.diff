diff --git a/tmp/1d367d5e-5227-4b54-90ee-d086a526ffa3_buggy.java b/tmp/c54263ff-377f-4d8a-af82-177aee5147ed_fixed.java
index 7fb120e..5a04a94 100644
--- a/tmp/1d367d5e-5227-4b54-90ee-d086a526ffa3_buggy.java
+++ b/tmp/c54263ff-377f-4d8a-af82-177aee5147ed_fixed.java
@@ -1,16 +1,28 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
  * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
-            return charset;
+        // Remove surrounding quotes if present
+        if (charset.length() > 1 && (charset.startsWith("\"") && charset.endsWith("\"")))
+            charset = charset.substring(1, charset.length() - 1).trim();
+        // Try to validate the charset
+        try {
+            if (Charset.isSupported(charset)) {
+                if (charset.equalsIgnoreCase("utf-8")) {
+                    return "utf-8";
+                }
+                return Charset.forName(charset).name();
+            }
+        } catch (IllegalCharsetNameException | UnsupportedCharsetException e) {
+            // Fall through to return null
+        }
     }
     return null;
 }
\ No newline at end of file
