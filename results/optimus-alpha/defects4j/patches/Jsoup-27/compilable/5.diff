diff --git a/tmp/09adbdcd-c038-497e-9eb6-326efa73ca15_buggy.java b/tmp/8422016e-58e4-4eb2-8456-adaab474a8a1_fixed.java
index 7fb120e..8f0d0bf 100644
--- a/tmp/09adbdcd-c038-497e-9eb6-326efa73ca15_buggy.java
+++ b/tmp/8422016e-58e4-4eb2-8456-adaab474a8a1_fixed.java
@@ -1,16 +1,23 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased (or lowercased for utf-8).
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
-            return charset;
+        // Remove surrounding quotes if present
+        if ((charset.startsWith("\"") && charset.endsWith("\"")) || (charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        // utf-8 is to be normalized as lower-case 'utf-8'
+        if (charset.equalsIgnoreCase("utf-8"))
+            return "utf-8";
+        // ISO-8859-1 and other charsets normalized as upper-case
+        return charset.toUpperCase(Locale.ENGLISH);
     }
     return null;
 }
\ No newline at end of file
