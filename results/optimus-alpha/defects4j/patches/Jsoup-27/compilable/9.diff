diff --git a/tmp/39c7938d-d38a-4100-9e3f-c83e546839d2_buggy.java b/tmp/7450d65a-c45d-44e5-816c-d44d9b69e071_fixed.java
index 7fb120e..5d92363 100644
--- a/tmp/39c7938d-d38a-4100-9e3f-c83e546839d2_buggy.java
+++ b/tmp/7450d65a-c45d-44e5-816c-d44d9b69e071_fixed.java
@@ -1,16 +1,29 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+ * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased or lowercased for "utf-8".
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
-            return charset;
+        // Remove possible quotes surrounding the charset name
+        if ((charset.startsWith("\"") && charset.endsWith("\"")) || (charset.startsWith("'") && charset.endsWith("'"))) {
+            charset = charset.substring(1, charset.length() - 1);
+        }
+        String upper = charset.toUpperCase(Locale.ENGLISH);
+        if (upper.equals("UTF-8")) {
+            return "utf-8";
+        }
+        // Check whether the charset is supported; if not, return null
+        try {
+            if (!Charset.isSupported(charset)) return null;
+        } catch (Exception e) {
+            return null;
+        }
+        return upper;
     }
     return null;
 }
\ No newline at end of file
