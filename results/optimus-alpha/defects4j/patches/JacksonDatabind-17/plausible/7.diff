diff --git a/tmp/4983e832-ddda-4068-aa17-e9753174dd56_buggy.java b/tmp/fd433839-e256-4b53-bde7-b004581d6adf_fixed.java
index 01967cc..9a4a4d2 100644
--- a/tmp/4983e832-ddda-4068-aa17-e9753174dd56_buggy.java
+++ b/tmp/fd433839-e256-4b53-bde7-b004581d6adf_fixed.java
@@ -1,35 +1,50 @@
 /**
  * Method called to check if the default type handler should be
  * used for given type.
  * Note: "natural types" (String, Boolean, Integer, Double) will never
  * use typing; that is both due to them being concrete and final,
  * and since actual serializers and deserializers will also ignore any
  * attempts to enforce typing.
  */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
+        {
+            JavaType origType = t;
             while (t.isArrayType()) {
                 t = t.getContentType();
             }
+            // [databind#793]: Do NOT apply default typing to TreeNode and its subtypes (for JsonNode)
+            if (TreeNode.class.isAssignableFrom(origType.getRawClass())) {
+                return false;
+            }
             // fall through
+        }
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
+        // [databind#793]: Do NOT apply default typing to TreeNode and its subtypes (for JsonNode)
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
         return (t.getRawClass() == Object.class)
                 || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+        );
 
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
+        return !t.isFinal();
     default:
         //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
+        // [databind#793]: Do NOT apply default typing to TreeNode and its subtypes (for JsonNode)
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
         return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file
