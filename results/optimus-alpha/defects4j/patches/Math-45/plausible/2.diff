diff --git a/tmp/28316a8f-dd7d-4ce7-ba4c-d4d3a1cde1c4_buggy.java b/tmp/1f2933b1-7322-4b9c-9b44-5e34cdb2ff01_fixed.java
index 6c5e87f..c3238e2 100644
--- a/tmp/28316a8f-dd7d-4ce7-ba4c-d4d3a1cde1c4_buggy.java
+++ b/tmp/1f2933b1-7322-4b9c-9b44-5e34cdb2ff01_fixed.java
@@ -1,12 +1,25 @@
 /**
  * Build a sparse matrix with the supplied row and column dimensions.
  *
  * @param rowDimension Number of rows of the matrix.
  * @param columnDimension Number of columns of the matrix.
+ * @throws NumberIsTooLargeException if the number of entries is too large.
  */
 public OpenMapRealMatrix(int rowDimension, int columnDimension) {
     super(rowDimension, columnDimension);
+
+    // Check for matrix size overflow, as in OpenMapRealMatrix.MAX_MATRIX_SIZE
+    // If possible, use MathUtils.safeMultiply to detect overflow; otherwise, check for multiplication overflow manually
+    // e.g., in Commons Math, MAX_MATRIX_SIZE is Integer.MAX_VALUE
+
+    // This check ensures that the product does not overflow
+    if ((long) rowDimension * (long) columnDimension > Integer.MAX_VALUE) {
+        throw new NumberIsTooLargeException(
+            (long) rowDimension * (long) columnDimension,
+            Integer.MAX_VALUE, true
+        );
+    }
     this.rows = rowDimension;
     this.columns = columnDimension;
     this.entries = new OpenIntToDoubleHashMap(0.0);
 }
\ No newline at end of file
