diff --git a/tmp/aaa7a79e-b6ed-42f5-9ea3-c4f2faae0cee_buggy.java b/tmp/982226c1-ebd2-45ba-bfd5-5f834cf60f82_fixed.java
index e1fc51f..f243956 100644
--- a/tmp/aaa7a79e-b6ed-42f5-9ea3-c4f2faae0cee_buggy.java
+++ b/tmp/982226c1-ebd2-45ba-bfd5-5f834cf60f82_fixed.java
@@ -1,9 +1,22 @@
 public boolean hasSameMethod(Invocation candidate) {        
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Methods may not be equal due to type parameters (generic bridge methods)
+    // but if they have the same name and parameter types, consider them the same.
+    if (m1.getName().equals(m2.getName())) {
+        Class<?>[] params1 = m1.getParameterTypes();
+        Class<?>[] params2 = m2.getParameterTypes();
+        if (params1.length == params2.length) {
+            for (int i = 0; i < params1.length; i++) {
+                if (!params1[i].equals(params2[i])) {
+                    return false;
+                }
+            }
+            return true;
+        }
+    }
+    return false;
 }
\ No newline at end of file
