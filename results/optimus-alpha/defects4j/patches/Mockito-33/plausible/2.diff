diff --git a/tmp/c972fe50-3027-48ea-834d-2ab331153f37_buggy.java b/tmp/b8d4f7de-6d00-474c-af8e-e1c7446adb38_fixed.java
index e1fc51f..84f6a4a 100644
--- a/tmp/c972fe50-3027-48ea-834d-2ab331153f37_buggy.java
+++ b/tmp/b8d4f7de-6d00-474c-af8e-e1c7446adb38_fixed.java
@@ -1,9 +1,21 @@
 public boolean hasSameMethod(Invocation candidate) {        
     // not using method.equals() for 1 good reason:
     // sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // If method objects are equal, short-circuit
+    if (m1.equals(m2)) return true;
+
+    // Compare by method name and parameter types, since generic bridge/forwarding methods can have different declaring classes
+    if (!m1.getName().equals(m2.getName())) return false;
+
+    Class<?>[] params1 = m1.getParameterTypes();
+    Class<?>[] params2 = m2.getParameterTypes();
+    if (params1.length != params2.length) return false;
+
+    for (int i = 0; i < params1.length; i++) {
+        if (!params1[i].equals(params2[i])) return false;
+    }
+    return true;
 }
\ No newline at end of file
