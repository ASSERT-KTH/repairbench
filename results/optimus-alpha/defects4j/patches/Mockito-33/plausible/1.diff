diff --git a/tmp/9e67059d-903b-4905-9729-3fb0764f4c5a_buggy.java b/tmp/e3148516-e9b3-4a68-85ea-8cb99dfc3bea_fixed.java
index e1fc51f..d5bed42 100644
--- a/tmp/9e67059d-903b-4905-9729-3fb0764f4c5a_buggy.java
+++ b/tmp/e3148516-e9b3-4a68-85ea-8cb99dfc3bea_fixed.java
@@ -1,9 +1,17 @@
 public boolean hasSameMethod(Invocation candidate) {        
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Compare method name and declaring class, and parameter types to handle synthetic forwarding methods
+    if (!m1.getName().equals(m2.getName())) return false;
+    if (!m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass()) && !m2.getDeclaringClass().isAssignableFrom(m1.getDeclaringClass())) return false;
+    Class<?>[] params1 = m1.getParameterTypes();
+    Class<?>[] params2 = m2.getParameterTypes();
+    if (params1.length != params2.length) return false;
+    for (int i = 0; i < params1.length; i++) {
+        if (!params1[i].equals(params2[i])) return false;
+    }
+    return true;
 }
\ No newline at end of file
