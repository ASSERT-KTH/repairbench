diff --git a/tmp/b80c70f1-6cb8-4452-99ca-fd73659d5a6c_buggy.java b/tmp/7eeb5f6f-2415-4465-ad31-cd89fbbef924_fixed.java
index b5d94e0..583925f 100644
--- a/tmp/b80c70f1-6cb8-4452-99ca-fd73659d5a6c_buggy.java
+++ b/tmp/7eeb5f6f-2415-4465-ad31-cd89fbbef924_fixed.java
@@ -1,26 +1,28 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
+    // Save next sibling before traversing child, 
+    // since child traversal might detach/replace current child.
     while (c != null) {
-        traverse(c);
       Node next = c.getNext();
+      traverse(c);
       c = next;
     }
 
     visit(node);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+    Preconditions.checkState(visits < 10000, "too many iterations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
