diff --git a/tmp/ef6d564e-f141-40a7-aabd-743a8a593c50_buggy.java b/tmp/696d53f5-ebfd-416d-b1e2-cef439168cd0_fixed.java
index 4aff4e4..6952e23 100644
--- a/tmp/ef6d564e-f141-40a7-aabd-743a8a593c50_buggy.java
+++ b/tmp/696d53f5-ebfd-416d-b1e2-cef439168cd0_fixed.java
@@ -1,15 +1,22 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
     // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
     // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
+    String value;
+    if (protocols != null && protocols.size() > 0) {
+        // if a protocol is allowed, use the attribute's original value (may be relative or protocol based)
+        value = attr.getValue();
+    } else {
+        // fallback: use absUrl if protocols are not defined (shouldn't happen in normal scenarios)
+        value = el.absUrl(attr.getKey());
+    }
     if (!preserveRelativeLinks)
-            attr.setValue(value);
+        attr.setValue(el.absUrl(attr.getKey()));
 
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
+        String prot = protocol.toString().toLowerCase() + ":";
         if (value.toLowerCase().startsWith(prot)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
