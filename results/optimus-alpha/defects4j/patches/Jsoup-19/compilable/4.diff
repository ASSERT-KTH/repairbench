diff --git a/tmp/830edf4b-0d2b-4bb1-a97c-c306d61c6de2_buggy.java b/tmp/506e0c46-8006-4299-8529-8602f3b47cb1_fixed.java
index 4aff4e4..57b5636 100644
--- a/tmp/830edf4b-0d2b-4bb1-a97c-c306d61c6de2_buggy.java
+++ b/tmp/506e0c46-8006-4299-8529-8602f3b47cb1_fixed.java
@@ -1,15 +1,27 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
     // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
     // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
-            attr.setValue(value);
+    String value = attr.getValue(); // get the raw (possibly relative) attribute value
+    String absValue = el.absUrl(attr.getKey());
+    if (!preserveRelativeLinks && absValue.length() > 0)
+        attr.setValue(absValue);
 
+    String checkValue = value.trim().toLowerCase();
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        String prot = protocol.toString().toLowerCase() + ":";
+        if (checkValue.startsWith(prot)) {
             return true;
         }
     }
+    // Also check for abs url if we changed it above
+    if (!preserveRelativeLinks && absValue.length() > 0) {
+        checkValue = absValue.trim().toLowerCase();
+        for (Protocol protocol : protocols) {
+            String prot = protocol.toString().toLowerCase() + ":";
+            if (checkValue.startsWith(prot)) {
+                return true;
+            }
+        }
+    }
     return false;
 }
\ No newline at end of file
