diff --git a/tmp/798d7ff4-ffba-463c-9daf-2fe875472fcb_buggy.java b/tmp/bfeba016-cf55-4da1-b982-3d5cea17fbc7_fixed.java
index 6c0aa19..c26d0c1 100644
--- a/tmp/798d7ff4-ffba-463c-9daf-2fe875472fcb_buggy.java
+++ b/tmp/bfeba016-cf55-4da1-b982-3d5cea17fbc7_fixed.java
@@ -1,20 +1,23 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+    // Fix: ensure the PushbackInputStream is initialized with at least MIN_BUF_SIZE bytes,
+    // or use a constant buffer size (like 512) instead of buf.capacity() which is likely 0.
+    // Assume MIN_BUF_SIZE = 512 as in the source code.
+    in = new PushbackInputStream(inputStream, MIN_BUF_SIZE);
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
     // haven't read anything so far
 }
\ No newline at end of file
