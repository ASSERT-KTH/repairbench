diff --git a/tmp/a60dd824-a2b2-4c5a-91fa-21e786ab1537_buggy.java b/tmp/c2fd9f7e-2729-4332-84ec-b88cce432879_fixed.java
index 227a4ef..e5f935e 100644
--- a/tmp/a60dd824-a2b2-4c5a-91fa-21e786ab1537_buggy.java
+++ b/tmp/c2fd9f7e-2729-4332-84ec-b88cce432879_fixed.java
@@ -1,48 +1,44 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+        // padding + left-trim only (preserve right spaces for further wrapping)
+        String sub = text.substring(pos);
+        String trimmedLeft = sub.replaceFirst("^\\s+", "");
+        text = padding + trimmedLeft;
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
-                sb.append(text);
+            sb.append(rtrim(text));
 
             return sb;
-            } else
-            if (pos == lastPos)
+        } 
+        // If our wrap position has not advanced, or hasn't advanced at all,
+        // and text is unchanged, write the rest and break (do not loop infinitely)
+        // (handles CLI-162)
+        if (pos <= padding.length())
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            sb.append(rtrim(text));
+            return sb;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
