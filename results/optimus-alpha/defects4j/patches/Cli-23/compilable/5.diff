diff --git a/tmp/a02eb191-7a29-4fdf-aa17-974ff173620a_buggy.java b/tmp/e69678d3-fc35-4fbf-b6df-7464db80c026_fixed.java
index 227a4ef..03001f1 100644
--- a/tmp/a02eb191-7a29-4fdf-aa17-974ff173620a_buggy.java
+++ b/tmp/e69678d3-fc35-4fbf-b6df-7464db80c026_fixed.java
@@ -1,48 +1,49 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         int lastPos = pos;
         text = padding + text.substring(pos).trim();
+
+        // Prevent infinite loop: if the new text is shorter or same length as padding, the remainder is whitespace. Stop.
+        if (text.length() <= padding.length()) {
+            sb.append(text);
+            return sb;
+        }
+
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
         } 
-
+        // Remove the check for pos == lastPos since it caused issues for heavily wrapped padded lines.
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
