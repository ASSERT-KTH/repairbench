diff --git a/tmp/67bf1a85-9c3a-42ae-a487-55e48afa4296_buggy.java b/tmp/6a1fd119-a96f-4677-9738-9330fa0e97b2_fixed.java
index 1b29465..f74097f 100644
--- a/tmp/67bf1a85-9c3a-42ae-a487-55e48afa4296_buggy.java
+++ b/tmp/6a1fd119-a96f-4677-9738-9330fa0e97b2_fixed.java
@@ -1,50 +1,60 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
+    boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>)
     if (tq.matchChomp("/>")) { // close empty element or tag
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
     // pc data only tags (textarea, script): chomp to end tag, add content as text node
     if (tag.isData()) {
         String data = tq.chompTo("</" + tagName);
+        // Patch: Check if '</tagName>' was found, and if not, chomp to end of queue to get all text in data tag
+        if (!tq.matches("</" + tagName)) { // If no end tag was found, take the rest
+            data = data + tq.remainder();
+            tq.remainder(""); // Remove all remaining, as there is no </tagName>
+        }
         tq.chompTo(">");
 
         Node dataNode;
         if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
             dataNode = TextNode.createFromEncoded(data, baseUri);
         else
             dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
         child.appendChild(dataNode);
+
+        // Patch: If there is leftover text between </tagName> and the next tag, parse it as a text node
+        if (!tq.isEmpty() && !tq.matches("<")) {
+            parseTextNode();
+        }
     }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
         if (href.length() != 0) { // ignore <base target> etc
             baseUri = href;
             doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
         }
     }
 }
\ No newline at end of file
