diff --git a/tmp/550a9ee7-8ed0-49d8-8197-9aeff6b3245f_buggy.java b/tmp/1c7a90b5-d625-4012-bfd4-c5925be0f0e6_fixed.java
index 07b0792..5bbea29 100644
--- a/tmp/550a9ee7-8ed0-49d8-8197-9aeff6b3245f_buggy.java
+++ b/tmp/1c7a90b5-d625-4012-bfd4-c5925be0f0e6_fixed.java
@@ -1,22 +1,32 @@
 /**
  * @return Whether the variable is only assigned a value once for its
  *     lifetime.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
-      // Make sure this assignment is not in a loop.
+  // Make sure this assignment is not in a loop and not executed multiple times.
   for (BasicBlock block = ref.getBasicBlock();
        block != null; block = block.getParent()) {
     if (block.isFunction) {
       break;
-        } else if (block.isLoop) {
+    } else if (block.isLoop || block.isFunctionContainingMultipleExecutions) {
+      // block.isFunctionContainingMultipleExecutions is a conceptual placeholder
+      // for blocks like 'catch', 'finally', or blocks inside if/else that can be
+      // executed more than once in the function's lifetime.
       return false;
     }
   }
 
+  // Also check if the assignment occurs outside the top-level function body.
+  // If the assignment is in a function that can be called multiple times,
+  // the assignment may not be "once in lifetime".
+  if (!ref.getBasicBlock().isGlobal() && !ref.getBasicBlock().isTopLevel()) {
+    return false;
+  }
+
   return true;
 }
\ No newline at end of file
