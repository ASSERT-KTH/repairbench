diff --git a/tmp/ac3c444d-9652-45ec-a831-341d185c2322_buggy.java b/tmp/018289f4-18dc-4492-b4a0-a671da729d1b_fixed.java
index 57f69c5..1fae1a2 100644
--- a/tmp/ac3c444d-9652-45ec-a831-341d185c2322_buggy.java
+++ b/tmp/018289f4-18dc-4492-b4a0-a671da729d1b_fixed.java
@@ -1,12 +1,14 @@
 /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * @return Whether the Node is a single unlabeled or labeled FUNCTION or DO,
+ * not wrapped in a BLOCK.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // For labels with block children, ensure that a labeled FUNCTION or DO isn't
+    // generated after extraneous BLOCKs are skipped.
+    // Example: LABEL -> BLOCK -> LABEL -> DO/FUNCTION.
+    // We want to detect patterns like LABEL:DO or LABEL:FUNCTION directly under the IF/ELSE.
+    while (n.isLabel() && n.hasChildren()) {
+        n = n.getFirstChild();
+    }
+    return n.getType() == Token.FUNCTION || n.getType() == Token.DO;
 }
\ No newline at end of file
