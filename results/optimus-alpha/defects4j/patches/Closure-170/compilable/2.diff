diff --git a/tmp/6eac8e2f-573e-4801-8b9c-de9600e36ba1_buggy.java b/tmp/5289e28b-4d34-4f0b-a8bf-5d4ef9603cb7_fixed.java
index 5abdeb5..9838635 100644
--- a/tmp/6eac8e2f-573e-4801-8b9c-de9600e36ba1_buggy.java
+++ b/tmp/5289e28b-4d34-4f0b-a8bf-5d4ef9603cb7_fixed.java
@@ -1,29 +1,37 @@
 /**
  * Computes the number of uses of the variable varName and store it in
  * numUseWithinUseCfgNode.
  */
 private void getNumUseInUseCfgNode(final Node cfgNode) {
 
   numUsesWithinCfgNode = 0;
   AbstractCfgNodeTraversalCallback gatherCb =
       new AbstractCfgNodeTraversalCallback() {
 
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
+      if (n.isName() && n.getString().equals(varName)) {
         // Don't count lhs of top-level assignment chain
+        if (parent != null && parent.isAssign() && (parent.getFirstChild() == n)) {
+          // If parent is ASSIGN and n is LHS, check if parent is direct child of a HOOK expression.
+          Node grandparent = t.getScopeRoot(); // default/fallback
+          for (Node p = n; p != null && p != cfgNode; p = p.getParent()) {
+            grandparent = p.getParent();
+            if (grandparent == parent) break; // find parent's parent fast
+          }
+          if (grandparent != null && grandparent.isHook()) {
+            // LHS of assignment that is inside HOOK, DO count
             numUsesWithinCfgNode++;
+            return;
+          }
+          // Otherwise, skip
+        } else {
+          numUsesWithinCfgNode++;
+        }
       }
     }
 
   };
 
   NodeTraversal.traverse(compiler, cfgNode, gatherCb);
 }
\ No newline at end of file
