diff --git a/tmp/48c5e5a5-23a7-42c7-ad5b-5cb9a89a7c69_buggy.java b/tmp/8572c033-5b41-44ab-b497-f96d163fb28f_fixed.java
index f650982..79ad090 100644
--- a/tmp/48c5e5a5-23a7-42c7-ad5b-5cb9a89a7c69_buggy.java
+++ b/tmp/8572c033-5b41-44ab-b497-f96d163fb28f_fixed.java
@@ -1,42 +1,54 @@
 /**
  * Compares two values
  */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right) 
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
+    // Convert Iterable or Iterator to Iterator (special case for Collections, but also Arrays)
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
+    } else if (l != null && l.getClass().isArray()) {
+        l = Arrays.asList((Object[]) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
+    } else if (r != null && r.getClass().isArray()) {
+        r = Arrays.asList((Object[]) r).iterator();
     }
 
+    // If only one is an iterator, check if it contains the other
     if ((l instanceof Iterator) && !(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
     if (!(l instanceof Iterator) && (r instanceof Iterator)) {
         return contains((Iterator) r, l);
     }
     if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
+        return findMatch((Iterator) ((Iterator) l), (Iterator) ((Iterator) r));
     }
+
+    // SPECIAL CASE: At least one of the values is a Pointer, compare its value for equality
+    // Unwrap pointers for comparison
+    if (l instanceof org.apache.commons.jxpath.Pointer) {
+        l = ((org.apache.commons.jxpath.Pointer) l).getValue();
+    }
+    if (r instanceof org.apache.commons.jxpath.Pointer) {
+        r = ((org.apache.commons.jxpath.Pointer) r).getValue();
+    }
+
     return equal(l, r);
 }
\ No newline at end of file
