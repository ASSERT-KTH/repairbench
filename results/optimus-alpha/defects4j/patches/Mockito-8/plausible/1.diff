diff --git a/tmp/49872eeb-7ba5-473a-aafd-66a5e486fb1e_buggy.java b/tmp/8710deef-c283-4e56-8845-21f72d40c2ba_fixed.java
index 42b58d0..c3ad7b1 100644
--- a/tmp/49872eeb-7ba5-473a-aafd-66a5e486fb1e_buggy.java
+++ b/tmp/8710deef-c283-4e56-8845-21f72d40c2ba_fixed.java
@@ -1,19 +1,30 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    // Defensive: only proceed if rawType is a Class and has type parameters
+    if (!(rawType instanceof Class<?>)) {
+        return;
+    }
+    TypeVariable<?>[] typeParameters = ((Class<?>) rawType).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+    // Prevent infinite recursion in case of self-referencing, or bad generic signatures
+    int len = Math.min(typeParameters.length, actualTypeArguments.length);
+    for (int i = 0; i < len; i++) {
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
-
+        if (actualTypeArgument instanceof TypeVariable) {
+            // Avoid endless mapping of a TypeVariable to itself
+            if (actualTypeArgument.equals(typeParameter)) {
+                continue;
+            }
+        }
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
