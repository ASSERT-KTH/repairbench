diff --git a/tmp/15f18c04-e217-4d7a-b273-671e2b0c9660_buggy.java b/tmp/62a44e96-bc38-46a5-a048-7346c8109822_fixed.java
index b8e7fdb..e5695ec 100644
--- a/tmp/15f18c04-e217-4d7a-b273-671e2b0c9660_buggy.java
+++ b/tmp/62a44e96-bc38-46a5-a048-7346c8109822_fixed.java
@@ -1,15 +1,34 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
+    // check if data has at least 2 chars to substring(1, length-1) safely
+    if (data == null || data.length() < 3) 
+        return null;
+    // Only try to parse as XML declaration if starts with "!" or "?"
+    char first = data.charAt(0);
+    if (first != '!' && first != '?') 
+        return null;
+    String inner;
+    try {
+        inner = data.substring(1, data.length() - 1);
+    } catch (Exception e) {
+        return null;
+    }
+    Document doc = Jsoup.parse("<" + inner + ">", baseUri(), Parser.xmlParser());
     XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+    for (Node node : doc.childNodes()) {
+        if (node instanceof XmlDeclaration) {
+            decl = (XmlDeclaration) node;
+            break;
+        } else if (node instanceof Element) {
+            Element el = (Element) node;
+            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), first == '!');
             decl.attributes().addAll(el.attributes());
+            break;
+        }
     }
     return decl;
 }
\ No newline at end of file
