diff --git a/tmp/3e5c19f0-d6e0-4231-b170-96044fe65d42_buggy.java b/tmp/3979d08a-8309-4a66-a250-36f18cfbe7aa_fixed.java
index 47915ed..2f4e4e6 100644
--- a/tmp/3e5c19f0-d6e0-4231-b170-96044fe65d42_buggy.java
+++ b/tmp/3979d08a-8309-4a66-a250-36f18cfbe7aa_fixed.java
@@ -1,22 +1,25 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
             return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
         //see issue 184.
         //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
         //Only for compareTo() method by the Comparable interface
+        Object mock = invocation.getMock();
+        Object other = invocation.getArguments().length > 0 ? invocation.getArguments()[0] : null;
+        if (mock == other) {
+            return 0;
+        } else {
             return 1;
         }
+    }
     
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
