diff --git a/tmp/e214d5c3-49fa-4310-b2ed-7a16b5850a68_buggy.java b/tmp/52cd4979-528a-4354-a20a-2e1512587471_fixed.java
index 4e21866..c948d3f 100644
--- a/tmp/e214d5c3-49fa-4310-b2ed-7a16b5850a68_buggy.java
+++ b/tmp/52cd4979-528a-4354-a20a-2e1512587471_fixed.java
@@ -1,10 +1,28 @@
 /**
  * Computes the square-root of the weight matrix.
  *
  * @param m Symmetric, positive-definite (weight) matrix.
  * @return the square-root of the weight matrix.
  */
 private RealMatrix squareRoot(RealMatrix m) {
-            final EigenDecomposition dec = new EigenDecomposition(m);
-            return dec.getSquareRoot();
+    final EigenDecomposition dec = new EigenDecomposition(m, 1e-12);
+    final int n = m.getRowDimension();
+    final RealMatrix sqrtM = MatrixUtils.createRealMatrix(n, n);
+
+    // Compute square root of the matrix using eigen decomposition
+    for (int i = 0; i < n; ++i) {
+        double[] eigenvector = dec.getEigenvector(i).toArray();
+        double eigenvalue = dec.getRealEigenvalue(i);
+        if (eigenvalue < 0) {
+            // For numerical stability in near-semidefinite matrices
+            eigenvalue = 0;
+        }
+        double sqrtEigen = Math.sqrt(eigenvalue);
+        for (int j = 0; j < n; ++j) {
+            for (int k = 0; k < n; ++k) {
+                sqrtM.addToEntry(j, k, sqrtEigen * eigenvector[j] * eigenvector[k]);
+            }
+        }
+    }
+    return sqrtM;
 }
\ No newline at end of file
