diff --git a/tmp/2bd41ea4-dbb6-4877-ba23-a4f37cba0c19_buggy.java b/tmp/a4a351fb-4816-44ae-a5d4-66e06754c600_fixed.java
index 10616db..2a09cde 100644
--- a/tmp/2bd41ea4-dbb6-4877-ba23-a4f37cba0c19_buggy.java
+++ b/tmp/a4a351fb-4816-44ae-a5d4-66e06754c600_fixed.java
@@ -1,19 +1,48 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
+        // Special handling for MonthDay (no year) - adjust day if invalid in target month
+        if (partial.size() == 2 &&
+            partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) &&
+            partial.getFieldType(1).equals(DateTimeFieldType.dayOfMonth())) {
+
+            // Use a leap year as a base so 2-29 is a valid day
+            int baseYear = 2004;
+            int month = values[0];
+            int day = values[1];
+
+            // Compose base instant (using fixed leap year 2004)
+            long instant = iChronology.getDateTimeMillis(baseYear, month, day, 0, 0, 0, 0);
+
+            // Add value to the target field
+            instant = partial.getFieldType(fieldIndex).getField(iChronology).add(instant, valueToAdd);
+
+            // Get the year, month, day after addition
+            int newMonth = iChronology.monthOfYear().get(instant);
+            int newDay = iChronology.dayOfMonth().get(instant);
+
+            // Defensive: Clamp day if it exceeds max for resulting month in BASE year
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(baseYear, newMonth);
+            if (newDay > maxDay) {
+                newDay = maxDay;
+            }
+
+            return new int[] { newMonth, newDay };
+        } else {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
+        }
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
