diff --git a/tmp/c5e2acad-101f-46ed-b66b-87276713fe7d_buggy.java b/tmp/748f194b-f8f8-4371-9b39-7344c0dc895f_fixed.java
index 10616db..bf6c216 100644
--- a/tmp/c5e2acad-101f-46ed-b66b-87276713fe7d_buggy.java
+++ b/tmp/748f194b-f8f8-4371-9b39-7344c0dc895f_fixed.java
@@ -1,19 +1,49 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
+        // Use the 2000-01-01 as a "leap-year" base for computation
+        // (since for MonthDay, year is not present -- using a leap year avoids 2/29 trouble)
+        int baseYear = 2000;
+        Chronology chrono = iChronology.withUTC();
+        // Gather month and day indices
+        int month = 1;
+        int day = 1;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+            if ("monthOfYear".equals(partial.getFieldType(i).getName())) {
+                month = values[i];
+            } else if ("dayOfMonth".equals(partial.getFieldType(i).getName())) {
+                day = values[i];
             }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        }
+        try {
+            instant = chrono.getDateTimeMillis(baseYear, month, day, 0, 0, 0, 0);
+        } catch (org.joda.time.IllegalFieldValueException ex) {
+            // Fallback, best effort if day out of range (shouldn't happen with valid MonthDay)
+            // Clamp day to 28 (minimum for February)
+            if (day == 29 && month == 2) {
+                day = 28;
+                instant = chrono.getDateTimeMillis(baseYear, month, day, 0, 0, 0, 0);
+            } else {
+                throw ex;
+            }
+        }
+        DurationField field = partial.getField(fieldIndex).getDurationField();
+        instant = field.add(instant, valueToAdd);
+        // extract back month and day
+        int[] newValues = new int[partial.size()];
+        for (int i = 0, isize = partial.size(); i < isize; i++) {
+            DateTimeField f = partial.getFieldType(i).getField(chrono);
+            newValues[i] = f.get(instant);
+        }
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
