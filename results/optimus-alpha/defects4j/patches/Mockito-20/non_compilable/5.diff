diff --git a/tmp/6bf089b3-1f86-4380-addf-2b29b191c516_buggy.java b/tmp/69187a71-3eb6-4339-a954-cac4b08f13ee_fixed.java
index f9a9b5b..d9535db 100644
--- a/tmp/6bf089b3-1f86-4380-addf-2b29b191c516_buggy.java
+++ b/tmp/69187a71-3eb6-4339-a954-cac4b08f13ee_fixed.java
@@ -1,30 +1,60 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
         throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
     }
     Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
             settings.getTypeToMock(),
             settings.getExtraInterfaces()
     );
     T mockInstance = null;
     try {
+        boolean withConstructor = settings.isUsingConstructor();
+        Object outerClassInstance = settings.getOuterClassInstance();
+        // Try to instantiate with constructor if requested, else fallback to no-arg
+        if (withConstructor) {
+            Object[] constructorArgs = settings.getConstructorArgs();
+            if (outerClassInstance != null) {
+                // For inner classes, outerClassInstance must be the first constructor arg
+                Object[] argsWithOuter = constructorArgs != null
+                        ? new Object[constructorArgs.length + 1]
+                        : new Object[1];
+                argsWithOuter[0] = outerClassInstance;
+                if (constructorArgs != null) {
+                    System.arraycopy(constructorArgs, 0, argsWithOuter, 1, constructorArgs.length);
+                }
+                mockInstance = classInstantiator.instantiate(mockedProxyType, argsWithOuter);
+            } else {
+                if (constructorArgs == null) {
+                    // Try 0-arg constructor
                     mockInstance = classInstantiator.instantiate(mockedProxyType);
+                } else {
+                    mockInstance = classInstantiator.instantiate(mockedProxyType, constructorArgs);
+                }
+            }
+        } else {
+            mockInstance = classInstantiator.instantiate(mockedProxyType);
+        }
         MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
         mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
         return ensureMockIsAssignableToMockedType(settings, mockInstance);
     } catch (ClassCastException cce) {
         throw new MockitoException(join(
                 "ClassCastException occurred while creating the mockito mock :",
                 "  class to mock : " + describeClass(mockedProxyType),
                 "  created class : " + describeClass(settings.getTypeToMock()),
                 "  proxy instance class : " + describeClass(mockInstance),
                 "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                 "",
                 "You might experience classloading issues, please ask the mockito mailing-list.",
                 ""
         ),cce);
     } catch (org.mockito.internal.creation.instance.InstantiationException e) {
+        Throwable cause = e.getCause();
+        if (settings.isUsingConstructor() && cause != null) {
+            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", cause);
+        } else {
             throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
         }
     }
+}
\ No newline at end of file
