diff --git a/tmp/33793906-f7a5-4b6b-9da3-fa660830629f_buggy.java b/tmp/dd775df8-306c-4ada-b124-7f74c10aba00_fixed.java
index de9af32..deab0b2 100644
--- a/tmp/33793906-f7a5-4b6b-9da3-fa660830629f_buggy.java
+++ b/tmp/dd775df8-306c-4ada-b124-7f74c10aba00_fixed.java
@@ -1,18 +1,24 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
+  if (node.getToken() == Token.CALL) {
     Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+    // Only add direct function calls by name, not .call/.apply or x.y() objects
+    if (child.getToken() == Token.NAME) {
       changed.add(child.getString());
     }
   }
 
+  // Do not traverse into FUNCTIONs (skip their body to avoid collecting nested calls as top-level)
+  if (node.isFunction()) {
+    return;
+  }
+
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
