diff --git a/tmp/f33918d1-31ba-4ecf-a005-d0d97229a3f8_buggy.java b/tmp/cf08b607-b0d5-447b-aa2d-6e9b9d3993d6_fixed.java
index de9af32..f9c7b08 100644
--- a/tmp/f33918d1-31ba-4ecf-a005-d0d97229a3f8_buggy.java
+++ b/tmp/cf08b607-b0d5-447b-aa2d-6e9b9d3993d6_fixed.java
@@ -1,18 +1,24 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
+    if (node.getToken() == Token.CALL) {
       Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+      if (child != null && child.getToken() == Token.NAME) {
         changed.add(child.getString());
       }
     }
 
+    // Do not recurse into function declarations or function expressions,
+    // since called functions inside them are unrelated to the outer scope
+    if (node.isFunction()) {
+      return;
+    }
+
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
