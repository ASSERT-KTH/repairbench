diff --git a/tmp/c646e4cf-630e-47c2-81ea-c230c890d710_buggy.java b/tmp/7a5d0d65-4466-4017-8e3f-936462320915_fixed.java
index de9af32..b0d6789 100644
--- a/tmp/c646e4cf-630e-47c2-81ea-c230c890d710_buggy.java
+++ b/tmp/7a5d0d65-4466-4017-8e3f-936462320915_fixed.java
@@ -1,18 +1,24 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
+    if (child != null && child.getType() == Token.NAME) {
       changed.add(child.getString());
     }
+    // Do NOT recurse on function name in CALLâ€”already handled.
+    // Instead, only recurse on the remaining children (the call arguments)
+    for (Node c = child.getNext(); c != null; c = c.getNext()) {
+      findCalledFunctions(c, changed);
+    }
+    return;
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
