diff --git a/tmp/29bf2a77-57a3-433a-9781-f7f8ae82a81e_buggy.java b/tmp/b892ab8e-9e68-45e3-8646-45f394a498d7_fixed.java
index 939f49b..8f164ef 100644
--- a/tmp/29bf2a77-57a3-433a-9781-f7f8ae82a81e_buggy.java
+++ b/tmp/b892ab8e-9e68-45e3-8646-45f394a498d7_fixed.java
@@ -1,21 +1,23 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        n.getFirstChild() != null && n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node getprop = n.getFirstChild();
+      Node obj = getprop.getFirstChild();
+      Node prop = obj != null ? obj.getNext() : null;
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      if (prop != null && prop.getType() == Token.STRING &&
+          prop.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
