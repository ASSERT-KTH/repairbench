diff --git a/tmp/7e192266-4067-4e25-a947-bfa0b22fa242_buggy.java b/tmp/c493f139-2fbf-4d65-badf-532e78e58ba8_fixed.java
index 939f49b..e935053 100644
--- a/tmp/7e192266-4067-4e25-a947-bfa0b22fa242_buggy.java
+++ b/tmp/c493f139-2fbf-4d65-badf-532e78e58ba8_fixed.java
@@ -1,21 +1,19 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    // Check if this is a prototype property assignment: x.prototype.y
+    Node propTarget = n.getFirstChild(); // e.g., x.prototype
+    if (propTarget != null && propTarget.getType() == Token.GETPROP) {
+      Node propNameNode = propTarget.getLastChild();
+      if (propNameNode != null &&
+          propNameNode.getType() == Token.STRING &&
+          "prototype".equals(propNameNode.getString())) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
