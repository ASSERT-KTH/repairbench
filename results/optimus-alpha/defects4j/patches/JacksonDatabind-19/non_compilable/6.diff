diff --git a/tmp/43b42714-834c-4d47-8498-22c86b6f7073_buggy.java b/tmp/cc12b35e-b835-45a9-9cba-129c5c81334a_fixed.java
index 1bec4d6..3249d1c 100644
--- a/tmp/43b42714-834c-4d47-8498-22c86b6f7073_buggy.java
+++ b/tmp/cc12b35e-b835-45a9-9cba-129c5c81334a_fixed.java
@@ -1,14 +1,18 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    if (rawClass == java.util.Properties.class) {
+        // Properties act as Map<String, String>
+        return MapType.construct(rawClass, TypeFactory.unknownType(TypeFactory.defaultInstance().constructType(String.class)), TypeFactory.unknownType(TypeFactory.defaultInstance().constructType(String.class)));
+    }
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
