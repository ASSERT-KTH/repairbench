diff --git a/tmp/7c0b51d2-d99a-4297-95b8-0e482525f100_buggy.java b/tmp/7dd9957f-83a5-48cf-8838-aac8039c6785_fixed.java
index 4e8b037..66569b2 100644
--- a/tmp/7c0b51d2-d99a-4297-95b8-0e482525f100_buggy.java
+++ b/tmp/7dd9957f-83a5-48cf-8838-aac8039c6785_fixed.java
@@ -1,20 +1,49 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // grab the correct default values if no value is present
+    if (valueList == null || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If still empty, check this.defaultValues
+    if (valueList == null || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // If we have a list AND we have any defaultValues, and valueList contains fewer than max number of required arguments,
+    // add remaining default values from defaultValues (or this.defaultValues) until we reach the correct size.
+    int minArgs = 0;
+    int maxArgs = Integer.MAX_VALUE;
+    Argument arg = null;
+    if (option instanceof DefaultOption) {
+        arg = ((DefaultOption) option).getArgument();
+    }
+    if (arg != null) {
+        minArgs = arg.getMinimum();
+        maxArgs = arg.getMaximum();
+    }
+
+    // Gather all possible defaults (from passed defaultValues or this.defaultValues)
+    List allDefaults = (List) this.defaultValues.get(option);
+    if ((allDefaults == null || allDefaults.isEmpty()) && defaultValues != null && !defaultValues.isEmpty()) {
+        allDefaults = defaultValues;
+    }
+
+    if (valueList == null) {
+        valueList = new ArrayList();
+    } else {
+        // make a defensive copy to avoid mutating original list
+        valueList = new ArrayList(valueList);
+    }
+
+    if (allDefaults != null && !allDefaults.isEmpty()) {
+        int requiredSize = Math.min(maxArgs, valueList.size() + allDefaults.size());
+        for (int i = valueList.size(); i < requiredSize && i < allDefaults.size(); i++) {
+            valueList.add(allDefaults.get(i));
+        }
+    }
+
+    return valueList == null || valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
