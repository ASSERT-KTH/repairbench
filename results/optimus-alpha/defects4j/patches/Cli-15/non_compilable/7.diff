diff --git a/tmp/4ad8470e-5da4-4972-b084-b21c5ced47b2_buggy.java b/tmp/de3d6b67-11a9-4bc5-b90d-66268bc0973d_fixed.java
index 4e8b037..a0ab675 100644
--- a/tmp/4ad8470e-5da4-4972-b084-b21c5ced47b2_buggy.java
+++ b/tmp/de3d6b67-11a9-4bc5-b90d-66268bc0973d_fixed.java
@@ -1,20 +1,46 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // if there are no parsed values, fall back to defaults
+    if (valueList == null || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If still null or empty, check the instance defaultValues map
+    if (valueList == null || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // If still null, return empty list
+    if (valueList == null) {
+        return Collections.EMPTY_LIST;
+    }
+
+    // Determine maximum argument count if possible
+    int maximum = Integer.MAX_VALUE;
+    if (option instanceof DefaultOption) {
+        Argument arg = ((DefaultOption) option).getArgument();
+        if (arg != null) {
+            maximum = arg.getMaximum();
+        }
+    }
+
+    // Copy all present values
+    List result = new ArrayList(valueList);
+
+    // Pad with defaults if fewer than maximum and default values exist
+    if (result.size() < maximum) {
+        List defVals = defaultValues;
+        if (defVals == null || defVals.isEmpty()) {
+            defVals = (List) this.defaultValues.get(option);
+        }
+        if (defVals != null) {
+            for (int i = result.size(); i < maximum && i < defVals.size(); ++i) {
+                result.add(defVals.get(i));
+            }
+        }
+    }
+
+    return result;
 }
\ No newline at end of file
