diff --git a/tmp/074dad3a-d230-47b6-83f2-1b9d3b922576_buggy.java b/tmp/551a5c71-42df-472e-adf0-2726f5d226bd_fixed.java
index 4e8b037..77c94f8 100644
--- a/tmp/074dad3a-d230-47b6-83f2-1b9d3b922576_buggy.java
+++ b/tmp/551a5c71-42df-472e-adf0-2726f5d226bd_fixed.java
@@ -1,20 +1,44 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // if not present or empty, use defaultValues
+    if (valueList == null || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    // If still null or not enough arguments, augment with option's own defaults
+    if (valueList == null) {
         valueList = (List) this.defaultValues.get(option);
+        if (valueList == null) {
+            return Collections.EMPTY_LIST;
+        }
+        return valueList;
+    }
+
+    // get the maximum allowed if possible
+    int maximum = Integer.MAX_VALUE;
+    if (option instanceof DefaultOption) {
+        Argument arg = ((DefaultOption) option).getArgument();
+        if (arg != null) {
+            maximum = arg.getMaximum();
+        }
+    }
+
+    // Get the list of default values for the option
+    List optionDefaults = (List) this.defaultValues.get(option);
+
+    // augment valueList with remaining default values if needed
+    if (optionDefaults != null && valueList.size() < maximum) {
+        List fullList = new ArrayList(valueList);
+        int toAdd = maximum - fullList.size();
+        // add default values only up to maximum number of arguments
+        for (int i = fullList.size(); optionDefaults != null && i < maximum && i < optionDefaults.size(); i++) {
+            fullList.add(optionDefaults.get(i));
+        }
+        return fullList;
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
