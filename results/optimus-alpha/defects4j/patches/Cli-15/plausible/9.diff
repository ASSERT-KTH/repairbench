diff --git a/tmp/bdc2dc1a-edad-4858-9283-50628560a473_buggy.java b/tmp/b846ffef-7ac8-44c5-8048-a33170b01bca_fixed.java
index 4e8b037..be0504f 100644
--- a/tmp/bdc2dc1a-edad-4858-9283-50628560a473_buggy.java
+++ b/tmp/b846ffef-7ac8-44c5-8048-a33170b01bca_fixed.java
@@ -1,20 +1,34 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
+    // If valueList is null, use defaultValues (if provided)
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
-        // augment the list with the default values
+    // If valueList is still null or empty, use this.defaultValues.get(option) (may be null)
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     } 
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+    // Otherwise, if valueList is not null, and defaultValues is provided and non-empty,
+    // and valueList.size() < defaultValues.size(), augment with trailing default values
+    else if (defaultValues != null && !defaultValues.isEmpty() && valueList.size() < defaultValues.size()) {
+        // Copy the list to avoid mutating original
+        valueList = new ArrayList(valueList);
+        for (int i = valueList.size(); i < defaultValues.size(); ++i) {
+            valueList.add(defaultValues.get(i));
+        }
+    }
+    // Otherwise, in case this.defaultValues is relevant for extra trailing defaults (very unlikely)
+    else if (this.defaultValues.get(option) instanceof List 
+            && valueList.size() < ((List) this.defaultValues.get(option)).size()) {
+        List optDefaults = (List) this.defaultValues.get(option);
+        valueList = new ArrayList(valueList);
+        for (int i = valueList.size(); i < optDefaults.size(); ++i) {
+            valueList.add(optDefaults.get(i));
+        }
+    }
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
