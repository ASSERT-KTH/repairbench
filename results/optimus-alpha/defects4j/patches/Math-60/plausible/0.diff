diff --git a/tmp/ca3dc1eb-928b-4a0f-b6ce-75db796b582b_buggy.java b/tmp/c267098e-b82a-45b5-999f-e13faec5909b_fixed.java
index 3127f85..6c62364 100644
--- a/tmp/ca3dc1eb-928b-4a0f-b6ce-75db796b582b_buggy.java
+++ b/tmp/c267098e-b82a-45b5-999f-e13faec5909b_fixed.java
@@ -1,24 +1,33 @@
-    /**
-     * For this distribution, {@code X}, this method returns {@code P(X < x)}.
-     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
-     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
-     *
-     * @param x Value at which the CDF is evaluated.
-     * @return CDF evaluated at {@code x}.
-     * @throws MathException if the algorithm fails to converge
-     */
     public double cumulativeProbability(double x) throws MathException {
+        // Handle infinite values explicitly
+        if (Double.isNaN(x)) {
+            return Double.NaN;
+        }
+        if (x == Double.POSITIVE_INFINITY) {
+            return 1.0;
+        }
+        if (x == Double.NEGATIVE_INFINITY) {
+            return 0.0;
+        }
+        // Handle extreme finite values (far from the mean)
+        if (x < mean - 40 * standardDeviation) {
+            return 0.0;
+        }
+        if (x > mean + 40 * standardDeviation) {
+            return 1.0;
+        }
         final double dev = x - mean;
         try {
             return 0.5 * (1.0 + Erf.erf((dev) /
                         (standardDeviation * FastMath.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
-                return 0;
+            // These checks can use 40 (to match above) but kept as 20 for backward compatibility
+            if (x < (mean - 20 * standardDeviation)) {
+                return 0.0;
             } else if (x > (mean + 20 * standardDeviation)) {
-                return 1;
+                return 1.0;
             } else {
                 throw ex;
             }
         }
     }
\ No newline at end of file
