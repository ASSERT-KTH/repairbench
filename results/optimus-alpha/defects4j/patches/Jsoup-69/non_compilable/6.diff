diff --git a/tmp/8c8e8a3b-bef7-41dc-a76d-8ae0a799a5f3_buggy.java b/tmp/a3637de3-f541-4bad-a89d-caea6c953f58_fixed.java
index e69de29..8ec9c33 100644
--- a/tmp/8c8e8a3b-bef7-41dc-a76d-8ae0a799a5f3_buggy.java
+++ b/tmp/a3637de3-f541-4bad-a89d-caea6c953f58_fixed.java
@@ -0,0 +1,37 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    // Only consider elements that are still connected to the DOM (i.e., no longer removed)
+    for (Element el : elements) {
+        // skip elements that have been removed from the DOM
+        if (!el.hasParent())
+            continue;
+        if (!el.tag().isFormSubmittable())
+            continue;
+        String name = el.attr("name");
+        if (name.length() == 0)
+            continue;
+
+        if (el.tagName().equals("select")) {
+            Elements options = el.select("option[selected]");
+            boolean set = false;
+            for (Element option : options) {
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+                set = true;
+            }
+            if (!set) {
+                // only add first option if no option selected
+                Element option = el.selectFirst("option");
+                if (option != null)
+                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+            }
+        } else if (el.tagName().equals("checkbox") || el.tagName().equals("radio")) {
+            if (el.hasAttr("checked")) {
+                data.add(HttpConnection.KeyVal.create(name, el.val()));
+            }
+        } else {
+            data.add(HttpConnection.KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
