diff --git a/tmp/abf24171-c1e4-417a-a9ea-2d394a06c519_buggy.java b/tmp/040dd302-fb15-46d8-93f3-120f924f3d2c_fixed.java
index 56b2d66..27d32f4 100644
--- a/tmp/abf24171-c1e4-417a-a9ea-2d394a06c519_buggy.java
+++ b/tmp/040dd302-fb15-46d8-93f3-120f924f3d2c_fixed.java
@@ -1,45 +1,63 @@
 /**
  * Removes the phase 1 objective function, positive cost non-artificial variables,
  * and the non-basic artificial variables from this tableau.
  */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
     columnsToDrop.add(0);
 
     // positive cost non-artificial variables
     for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
-        // non-basic artificial variables
+    // non-basic artificial variables (remove only if variable is not basic in any row except objective rows)
     for (int i = 0; i < getNumArtificialVariables(); i++) {
       int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
+      // Only drop if col is not basic in any constraint row (skip objective rows)
+      boolean isBasic = false;
+      for (int row = getNumObjectiveFunctions(); row < getHeight(); row++) {
+        double value = tableau.getEntry(row, col);
+        if (Precision.equals(value, 1.0, maxUlps)) {
+          boolean onlyOne = true;
+          for (int k = 0; k < getWidth(); k++) {
+            if (k != col && Precision.equals(tableau.getEntry(row, k), 1.0, maxUlps)) {
+              onlyOne = false;
+              break;
+            }
+          }
+          if (onlyOne) {
+            isBasic = true;
+            break;
+          }
+        }
+      }
+      if (!isBasic) {
         columnsToDrop.add(col);
       }
     }
 
     double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
     for (int i = 1; i < getHeight(); i++) {
       int col = 0;
       for (int j = 0; j < getWidth(); j++) {
         if (!columnsToDrop.contains(j)) {
           matrix[i - 1][col++] = tableau.getEntry(i, j);
         }
       }
     }
 
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
       columnLabels.remove((int) columnsToDrop.get(i));
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file
