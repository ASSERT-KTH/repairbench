diff --git a/tmp/324f0e20-c2e2-4af5-aa9d-e112f213d8ba_buggy.java b/tmp/f2e680b6-aaf0-4afe-a1d4-93358d2da30d_fixed.java
index 1a63a66..edea7fb 100644
--- a/tmp/324f0e20-c2e2-4af5-aa9d-e112f213d8ba_buggy.java
+++ b/tmp/f2e680b6-aaf0-4afe-a1d4-93358d2da30d_fixed.java
@@ -1,21 +1,34 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
+    // Special case: handle primitive/wrapper equivalence (copied from TypeFactory)
+    if (_class.isPrimitive()) {
+        Class<?> prim = com.fasterxml.jackson.databind.util.ClassUtil.primitiveType(subclass);
+        if (prim != null && prim == _class) {
+            return this;
+        }
+    }
+    // Special case for marker value types (especially for missing default subtype)
+    // In SimpleType, _superClass can be null for "java.lang.Object", so allow narrowing from it
+    if (_class == Object.class) {
+        return new SimpleType(subclass, _bindings, this, _superInterfaces,
+                _valueHandler, _typeHandler, _asStatic);
+    }
     // Should we check that there is a sub-class relationship?
     // 15-Jan-2016, tatu: Almost yes, but there are some complications with
     //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
     // TODO: fix in 2.8
     /*
     throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
             +_class.getName());
             */
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
     // Otherwise, stitch together the hierarchy. First, super-class
     // if not found, try a super-interface
     // should not get here but...
 }
\ No newline at end of file
