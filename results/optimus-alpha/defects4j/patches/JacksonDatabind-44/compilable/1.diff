diff --git a/tmp/e11b6992-d504-472f-9b23-e829913fc7fb_buggy.java b/tmp/ed0108a8-ed9c-4909-88a7-f17cb99361f8_fixed.java
index 1a63a66..29d8387 100644
--- a/tmp/e11b6992-d504-472f-9b23-e829913fc7fb_buggy.java
+++ b/tmp/ed0108a8-ed9c-4909-88a7-f17cb99361f8_fixed.java
@@ -1,21 +1,15 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+    // 11-May-2023, tatu: Handle DefaultTyping, see [databind#1125]:
+    // If _class is Object.class, we must not pass along handlers/superclass for SimpleType
+    if (_class == Object.class) {
+        return new SimpleType(subclass, _bindings, null, null, _valueHandler, _typeHandler, _asStatic);
+    }
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
