diff --git a/tmp/8d9d77da-1ccf-49d8-a93e-240f4c72e5ce_buggy.java b/tmp/de63b5b4-0e62-4e0a-81f6-4462605d21e9_fixed.java
index 1a63a66..7c2afab 100644
--- a/tmp/8d9d77da-1ccf-49d8-a93e-240f4c72e5ce_buggy.java
+++ b/tmp/de63b5b4-0e62-4e0a-81f6-4462605d21e9_fixed.java
@@ -1,21 +1,12 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+    // 15-Jan-2016, tatu: Ideally would check subclassing, but can not in all cases
+    // so just create downgraded SimpleType for now, losing possible super-type info.
+    return new SimpleType(subclass, _bindings, null, null,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
