diff --git a/tmp/b3aa77ea-23bd-48d1-a390-aac70216bb6b_buggy.java b/tmp/099e1593-fb4b-48be-adc5-4e3285389ad8_fixed.java
index 1a63a66..aa13663 100644
--- a/tmp/b3aa77ea-23bd-48d1-a390-aac70216bb6b_buggy.java
+++ b/tmp/099e1593-fb4b-48be-adc5-4e3285389ad8_fixed.java
@@ -1,21 +1,20 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
+    // 15-Jan-2016, tatu: Avoid recreating SimpleType for same type
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
+    // Check sub-class relationship, but allow java.lang.Object, Void, NoClass as a special case
+    if (!_class.isAssignableFrom(subclass)
+            && !_class.equals(Object.class)
+            && !_class.getName().equals("com.fasterxml.jackson.databind.type.TypeFactory$BogusType")
+            && !_class.equals(Void.TYPE)
+            && !_class.equals(Void.class)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
-                    */
+    }
     return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
 }
\ No newline at end of file
