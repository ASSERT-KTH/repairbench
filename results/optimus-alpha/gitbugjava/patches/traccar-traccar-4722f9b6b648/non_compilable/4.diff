diff --git a/tmp/54c14294-1120-44d7-9827-38a3a961938d_buggy.java b/tmp/30c8b26c-4c4d-4945-a334-ef2d12c30501_fixed.java
index c84c989..a4cb2f1 100644
--- a/tmp/54c14294-1120-44d7-9827-38a3a961938d_buggy.java
+++ b/tmp/30c8b26c-4c4d-4945-a334-ef2d12c30501_fixed.java
@@ -1,27 +1,34 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Date and time field (seconds since 2000-01-01 00:00:00 UTC, little endian)
+    long seconds = buf.readUnsignedIntLE();
+    // Galileo's Iridium packets store the time as seconds since 2000-01-01, not Unix epoch!
+    // So we must convert!
+    final long GALILEO_EPOCH_DIFF = 946684800L; // seconds between 1970-01-01 and 2000-01-01
+    long unixTime = seconds + GALILEO_EPOCH_DIFF;
+    position.setTime(new java.util.Date(unixTime * 1000));
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
