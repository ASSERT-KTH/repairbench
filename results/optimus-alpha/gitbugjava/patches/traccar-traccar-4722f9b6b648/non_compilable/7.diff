diff --git a/tmp/aef82340-5687-43ab-ac4b-e1020b97570f_buggy.java b/tmp/7899f873-fc4e-419f-a968-943e6f811ecc_fixed.java
index c84c989..9b40a63 100644
--- a/tmp/aef82340-5687-43ab-ac4b-e1020b97570f_buggy.java
+++ b/tmp/7899f873-fc4e-419f-a968-943e6f811ecc_fixed.java
@@ -1,27 +1,32 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Fix: timestamp in Iridium block is in seconds since 2000-01-01T00:00:00Z, not UNIX epoch.
+    long timeSeconds = buf.readUnsignedIntLE();
+    // Iridium reference epoch: 2000-01-01T00:00:00Z
+    long iridiumEpochSeconds = 946684800L;
+    position.setTime(new Date((iridiumEpochSeconds + timeSeconds) * 1000));
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
