diff --git a/tmp/68e25bd6-fea3-4524-b523-e9da48b84a6e_buggy.java b/tmp/8032e7dc-71db-4854-9319-b39770d8dbf7_fixed.java
index 1c732f4..87cff3d 100644
--- a/tmp/68e25bd6-fea3-4524-b523-e9da48b84a6e_buggy.java
+++ b/tmp/8032e7dc-71db-4854-9319-b39770d8dbf7_fixed.java
@@ -1,88 +1,115 @@
 @Override
 protected Object decode(
         Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
     String sentence = (String) msg;
     sentence = sentence.substring(sentence.indexOf('|') + 1, sentence.lastIndexOf('|'));
 
     Position position = new Position();
     position.setProtocol(getProtocolName());
 
+    // Track if we have overridden odometer
+    boolean odometerSeen = false;
+
     for (String entry : sentence.split(",")) {
         int delimiter = entry.indexOf('=');
+        if (delimiter < 0) {
+            continue; // skip invalid entry
+        }
         String key = entry.substring(0, delimiter);
         String value = entry.substring(delimiter + 1);
         switch (key) {
             case "unit":
                 DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, value);
                 if (deviceSession != null) {
                     position.setDeviceId(deviceSession.getDeviceId());
                 }
                 break;
             case "gps_valid":
                 position.setValid(Integer.parseInt(value) != 0);
                 break;
             case "datetime_actual":
                 position.setTime(new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").parse(value));
                 break;
             case "latitude":
                 position.setLatitude(Double.parseDouble(value));
                 break;
             case "longitude":
                 position.setLongitude(Double.parseDouble(value));
                 break;
             case "altitude":
                 position.setAltitude(Double.parseDouble(value));
                 break;
             case "velocity":
                 position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(value)));
                 break;
             case "heading":
                 position.setCourse(Integer.parseInt(value));
                 break;
             case "eventid":
                 position.set(Position.KEY_EVENT, Integer.parseInt(value));
                 break;
             case "mileage":
+                // Only set odometer from mileage if odometer is not present in message
+                if (!odometerSeen) {
+                    // Mileage is in km with decimals
                     position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));
+                }
+                break;
+            case "odometer":
+                // Odometer is in meters, usually no decimals
+                position.set(Position.KEY_ODOMETER, Long.parseLong(value));
+                odometerSeen = true;
                 break;
             case "satellites":
                 position.set(Position.KEY_SATELLITES, Integer.parseInt(value));
                 break;
             case "ignition":
                 position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);
                 break;
             case "door":
                 position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);
                 break;
             case "arm":
                 position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);
                 break;
             case "fuel":
                 position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));
                 break;
             case "rpm":
                 position.set(Position.KEY_RPM, Integer.parseInt(value));
                 break;
             case "main_voltage":
                 position.set(Position.KEY_POWER, Double.parseDouble(value));
                 break;
             case "backup_voltage":
                 position.set(Position.KEY_BATTERY, Double.parseDouble(value));
                 break;
             case "analog1":
             case "analog2":
             case "analog3":
                 position.set(Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'), Double.parseDouble(value));
                 break;
             case "extra1":
             case "extra2":
             case "extra3":
             default:
                 position.set(key, value);
                 break;
         }
     }
 
+    // If we never saw 'odometer', mileage will set KEY_ODOMETER if present
+
+    // Set valid position only if coordinates present
+    if (position.getLatitude() == 0.0 && position.getLongitude() == 0.0) {
+        position.setValid(false);
+    }
+
+    // Set time explicitly to null if not set (could be handled elsewhere, but for clarity)
+    if (position.getFixTime() == null) {
+        position.setTime(new Date());
+    }
+
     return position;
 }
\ No newline at end of file
