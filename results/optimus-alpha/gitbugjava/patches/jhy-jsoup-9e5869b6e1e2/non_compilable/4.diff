diff --git a/tmp/9e869482-2c46-47a2-97a7-7ece9089ec2f_buggy.java b/tmp/5ff4e9e8-69ec-4cd9-9058-dc5650cc8c89_fixed.java
index 0583946..8ee163d 100644
--- a/tmp/9e869482-2c46-47a2-97a7-7ece9089ec2f_buggy.java
+++ b/tmp/5ff4e9e8-69ec-4cd9-9058-dc5650cc8c89_fixed.java
@@ -1,30 +1,32 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
-            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
+        // Treat custom tags (not built-in) similar to inline by default for whitespace trimming
+        boolean parentIsBlock = parent != null && parent.tag().isBlock() && !parent.tag().isInline() && !parent.tag().isCustomTag();
+        trimLeading = (siblingIndex == 0 && parentIsBlock)
+            || parentNode instanceof Document;
+        trimTrailing = nextSibling() == null && parentIsBlock;
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
         if (couldSkip && isBlank) return;
 
         Node prev = previousSibling();
         if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
+            (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank && !parent.tag().isCustomTag()) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
             (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
         )
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
