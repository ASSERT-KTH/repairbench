diff --git a/tmp/4ab1a70d-e5f5-41d2-a110-3d75e8ecf581_buggy.java b/tmp/872568d6-72c2-4b8b-a708-6b3cad102394_fixed.java
index 0583946..c6d51a1 100644
--- a/tmp/4ab1a70d-e5f5-41d2-a110-3d75e8ecf581_buggy.java
+++ b/tmp/872568d6-72c2-4b8b-a708-6b3cad102394_fixed.java
@@ -1,30 +1,35 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank) return;
+
+        // Fix: Only skip leading blank text nodes that are actually at the start of the block, not all blank text nodes
+        boolean couldSkip = isBlank &&
+            ((next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
+            || (next instanceof TextNode && (((TextNode) next).isBlank()))) // next is blank text, from re-parenting
+            && (siblingIndex == 0 || (parent != null && parent.tag().isBlock()));
+
+        if (couldSkip) return;
 
         Node prev = previousSibling();
         if (
             (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br>
         )
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
