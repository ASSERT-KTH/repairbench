diff --git a/tmp/68051379-b274-4886-9465-1bf548de70de_buggy.java b/tmp/9e7a7ce8-1652-4125-946a-3bdfe473a50a_fixed.java
index 855afa5..a2b2134 100644
--- a/tmp/68051379-b274-4886-9465-1bf548de70de_buggy.java
+++ b/tmp/9e7a7ce8-1652-4125-946a-3bdfe473a50a_fixed.java
@@ -1,13 +1,30 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+        String protocol = u.getProtocol();
+        String host = u.getHost();
+        int port = u.getPort();
+        String path = u.getPath();
+        String query = u.getQuery();
+        String fragment = u.getRef();
+
+        // encode path, query, and fragment properly
+        String encodedPath = path != null ? java.net.URLEncoder.encode(path, "UTF-8").replace("+", "%20").replace("%2F", "/") : null;
+        String encodedQuery = query != null ? java.net.URLEncoder.encode(query, "UTF-8").replace("+", "%20").replace("%3D", "=").replace("%26", "&") : null;
+        // fragment doesn't need to be encoded for URL, but let's keep it for completeness
+
+        URI uri = new URI(
+            protocol,
+            null,
+            host,
+            port,
+            encodedPath,
+            encodedQuery,
+            fragment
+        );
+        return uri.toURL();
+    } catch (Exception e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
