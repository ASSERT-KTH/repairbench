diff --git a/tmp/b0dca44e-a3ed-4924-84a7-ddec5262e3ad_buggy.java b/tmp/3e821a20-3c60-4850-9c9d-b7ecb68dd45e_fixed.java
index 016a7f6..9d615ba 100644
--- a/tmp/b0dca44e-a3ed-4924-84a7-ddec5262e3ad_buggy.java
+++ b/tmp/3e821a20-3c60-4850-9c9d-b7ecb68dd45e_fixed.java
@@ -1,29 +1,49 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
         trimTrailing = trimLikeBlock && nextSibling() == null;
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
         if (couldSkip && isBlank) return;
 
         Node prev = previousSibling();
+        // Only indent for text node preceding by <br> if not an inline element
+        boolean prevBrSpecial = siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")
+            && parent != null && parent.tag().formatAsBlock();
         if (
             (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            prevBrSpecial
         )
             indent(accum, depth, out);
+
+        // Remove accidental space between block elements from pretty printing
+        Node previousSibling = previousSibling();
+        Node nextSibling = nextSibling();
+
+        if (
+            parent != null &&
+            parent.tag().isBlock() &&
+            previousSibling instanceof Element &&
+            ((Element) previousSibling).tag().isBlock() &&
+            nextSibling instanceof Element &&
+            ((Element) nextSibling).tag().isBlock() &&
+            isBlank()
+        ) {
+            // Don't output whitespace solely between block elements
+            return;
+        }
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
