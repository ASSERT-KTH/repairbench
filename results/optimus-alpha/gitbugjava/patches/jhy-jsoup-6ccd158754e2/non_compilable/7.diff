diff --git a/tmp/1fd25bb5-8802-4a49-becb-55618e53470d_buggy.java b/tmp/ed0cbe10-fa0b-4a99-b756-e5d3194b1c98_fixed.java
index 23f078d..f2bbe0d 100644
--- a/tmp/1fd25bb5-8802-4a49-becb-55618e53470d_buggy.java
+++ b/tmp/ed0cbe10-fa0b-4a99-b756-e5d3194b1c98_fixed.java
@@ -1,14 +1,14 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()).replace("+", "%20"));
         } else {
             sb.append((char) c);
         }
+        i += Character.charCount(c);
     }
 }
\ No newline at end of file
