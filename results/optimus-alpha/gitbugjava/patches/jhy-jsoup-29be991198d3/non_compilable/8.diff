diff --git a/tmp/48f36e28-ff66-48b8-b32a-0de1b83658cc_buggy.java b/tmp/8bd75baa-8d8e-41bc-8cfa-3fdfb9fd382a_fixed.java
index 862c60c..bd3d164 100644
--- a/tmp/48f36e28-ff66-48b8-b32a-0de1b83658cc_buggy.java
+++ b/tmp/8bd75baa-8d8e-41bc-8cfa-3fdfb9fd382a_fixed.java
@@ -1,25 +1,30 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
+        // Fix: check if previous sibling is <br>, if so, always indent (special-case for <br>)
+        Node prev = previousSibling();
+        if (prev instanceof Element && ((Element) prev).normalName().equals("br")) {
+            indent(accum, depth, out);
+        } else if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
+                (out.outline() && siblingNodes().size() > 0 && !isBlank())) {
+            indent(accum, depth, out);
+        }
+
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && (((TextNode) next).isBlank()));
         if (couldSkip && isBlank()) return;
-
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
-                indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
