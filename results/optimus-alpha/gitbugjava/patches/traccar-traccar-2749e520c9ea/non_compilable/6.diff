diff --git a/tmp/4214c026-dd2e-4ea2-84bd-c442863fbd4b_buggy.java b/tmp/b1635149-0de5-4446-a675-98771cf09617_fixed.java
index 7b9216c..e3d5321 100644
--- a/tmp/4214c026-dd2e-4ea2-84bd-c442863fbd4b_buggy.java
+++ b/tmp/b1635149-0de5-4446-a675-98771cf09617_fixed.java
@@ -1,47 +1,67 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
+    // Read gyro field if present for product==3
+    if (product == 3) {
+        // Save reader index before attempting to read
+        int readerIndex = buf.readerIndex();
+        if (buf.readableBytes() >= 7) {
+            // Save next 7 bytes as gyro (6 for the value, typically 6 bytes + 1 for a trailing checksum, sometimes 7)
+            ByteBuf gyroBytes = buf.readSlice(7);
+            StringBuilder sb = new StringBuilder();
+            gyroBytes.markReaderIndex();
+            for (int i = 0; i < gyroBytes.readableBytes(); i++) {
+                sb.append(String.format("%02x", gyroBytes.getUnsignedByte(i)));
+            }
+            position.set("gyro", sb.toString());
+            gyroBytes.resetReaderIndex();
+        } else {
+            // Not enough bytes left, reset index
+            buf.readerIndex(readerIndex);
+        }
+    }
+
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
     return position;
 }
\ No newline at end of file
