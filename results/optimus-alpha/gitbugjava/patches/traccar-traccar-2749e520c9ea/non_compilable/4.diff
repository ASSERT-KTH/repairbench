diff --git a/tmp/54686a9c-2674-458b-b68d-a590d6c1e0d3_buggy.java b/tmp/9f906874-a670-4c0a-9a3c-eacfa57cf40b_fixed.java
index 7b9216c..508a7b9 100644
--- a/tmp/54686a9c-2674-458b-b68d-a590d6c1e0d3_buggy.java
+++ b/tmp/9f906874-a670-4c0a-9a3c-eacfa57cf40b_fixed.java
@@ -1,47 +1,55 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
+    // For Huabao protocol, gyro info follows after alarm and status for some product types.
+    // Read 7 bytes for "gyro" if enough bytes remaining (for product == 3 and buf readableBytes >= 7)
+    if (product == 3 && buf.readableBytes() >= 7) {
+        byte[] gyro = new byte[7];
+        buf.readBytes(gyro);
+        position.set("gyro", DatatypeConverter.printHexBinary(gyro).toLowerCase());
+    }
+
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
     return position;
 }
\ No newline at end of file
