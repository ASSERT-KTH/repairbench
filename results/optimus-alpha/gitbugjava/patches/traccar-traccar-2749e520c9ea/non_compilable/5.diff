diff --git a/tmp/4d1d96fa-b5ff-4c02-aa3c-6575ef7c1719_buggy.java b/tmp/a9666561-3de2-4cab-a52c-f1e7cac9cf16_fixed.java
index 7b9216c..260d839 100644
--- a/tmp/4d1d96fa-b5ff-4c02-aa3c-6575ef7c1719_buggy.java
+++ b/tmp/a9666561-3de2-4cab-a52c-f1e7cac9cf16_fixed.java
@@ -1,47 +1,58 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
+    // Save gyro field if available (3 bytes), for Huabao variant
+    if (buf.readableBytes() >= 3) {
+        int readerIndex = buf.readerIndex();
+        // We expect gyro bytes only under certain message types/products, but for Huabao it's next
+        byte[] gyro = new byte[3];
+        buf.getBytes(readerIndex, gyro);
+        position.set("gyro", DataConverter.printHex(gyro, 0, 3, false));
+        // Advance reader index so that if other code expects to read more, it reads after gyro
+        buf.skipBytes(3);
+    }
+
     if (product == 1 || product == 2) {
         if (BitUtil.check(alarm, 0)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
     } else if (product == 3) {
         position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
         if (BitUtil.check(alarm, 1)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
         }
         if (BitUtil.check(alarm, 2)) {
             position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
         }
         if (BitUtil.check(alarm, 3)) {
             position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
         }
     }
 
     position.set(Position.KEY_STATUS, status);
 
     return position;
 }
\ No newline at end of file
