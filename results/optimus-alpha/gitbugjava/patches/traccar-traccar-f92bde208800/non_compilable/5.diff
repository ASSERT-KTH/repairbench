diff --git a/tmp/75fbac2c-e47a-4f5d-a5a4-40baed48135c_buggy.java b/tmp/6b3c55d4-1924-4ab9-9cb7-ce38a3a300d4_fixed.java
index 33e2e76..15cf727 100644
--- a/tmp/75fbac2c-e47a-4f5d-a5a4-40baed48135c_buggy.java
+++ b/tmp/6b3c55d4-1924-4ab9-9cb7-ce38a3a300d4_fixed.java
@@ -1,126 +1,133 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
     CellTower cellTower = new CellTower();
     String[] keys = form.substring(1).split("%");
     for (String key : keys) {
         switch (key) {
             case "SA":
                 position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                 break;
             case "MV":
                 position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
                 break;
             case "BV":
                 position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
                 break;
             case "GQ":
                 cellTower.setSignalStrength((int) buf.readUnsignedByte());
                 break;
             case "CE":
-                    cellTower.setCellId(buf.readUnsignedInt());
+                cellTower.setCellId((long) buf.readUnsignedInt());
                 break;
             case "LC":
-                    cellTower.setLocationAreaCode(buf.readUnsignedShort());
+                cellTower.setLocationAreaCode((int) buf.readUnsignedShort());
                 break;
-                case "CN":
-                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
-                    cellTower.setMobileCountryCode(combinedMobileCodes / 100);
-                    cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
+            case "CN": {
+                // Combined mobile codes: cccnn (MCC and MNC)
+                int combinedMobileCodes = (int) buf.readUnsignedInt(); // get all 5 digits
+                int mcc = combinedMobileCodes / 100;
+                int mnc = combinedMobileCodes % 100;
+                cellTower.setMobileCountryCode(mcc);
+                cellTower.setMobileNetworkCode(mnc);
                 break;
+            }
             case "RL":
-                    buf.readUnsignedByte(); // rxlev
+                buf.readUnsignedByte(); // rxlev (unused)
                 break;
             case "PC":
                 position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
                 break;
             case "AT":
                 position.setAltitude(buf.readUnsignedInt());
                 break;
             case "RP":
                 position.set(Position.KEY_RPM, buf.readUnsignedShort());
                 break;
             case "GS":
                 position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                 break;
             case "DT":
                 position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
                 break;
             case "VN":
                 position.set(Position.KEY_VIN, readString(buf));
                 break;
             case "MF":
-                    buf.readUnsignedShort(); // mass air flow rate
+                buf.readUnsignedShort(); // mass air flow rate (unused)
                 break;
             case "EL":
-                    buf.readUnsignedByte(); // engine load
+                buf.readUnsignedByte(); // engine load (unused)
                 break;
             case "TR":
                 position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                 break;
             case "ET":
                 position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
                 break;
             case "FL":
                 position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                 break;
             case "ML":
-                    buf.readUnsignedByte(); // mil status
+                buf.readUnsignedByte(); // mil status (unused)
                 break;
             case "FC":
                 position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
                 break;
             case "CI":
-                    readString(buf); // format string
+                readString(buf); // format string (skip)
                 break;
             case "AV1":
                 position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
                 break;
             case "NC":
-                    readString(buf); // gsm neighbor cell info
+                readString(buf); // gsm neighbor cell info (skip)
                 break;
             case "SM":
-                    buf.readUnsignedShort(); // max speed between reports
+                buf.readUnsignedShort(); // max speed between reports (unused)
                 break;
             case "GL":
-                    readString(buf); // google link
+                readString(buf); // google link (skip)
                 break;
             case "MA":
-                    readString(buf); // mac address
+                readString(buf); // mac address (skip)
                 break;
             case "PD":
-                    buf.readUnsignedByte(); // pending code status
+                buf.readUnsignedByte(); // pending code status (unused)
                 break;
             case "CD":
                 position.set(Position.KEY_ICCID, readString(buf));
                 break;
             case "CM":
-                    buf.readLong(); // imsi
+                buf.readLong(); // imsi (skip)
                 break;
             case "GN":
-                    buf.skipBytes(60); // g sensor data
+                buf.skipBytes(60); // g sensor data (skip 60 bytes)
                 break;
             case "GV":
-                    buf.skipBytes(6); // maximum g force
+                buf.skipBytes(6); // maximum g force (skip 6 bytes)
                 break;
             case "ME":
-                    buf.readLong(); // imei
+                buf.readLong(); // imei (skip)
                 break;
             case "IA":
-                    buf.readUnsignedByte(); // intake air temperature
+                buf.readUnsignedByte(); // intake air temperature (unused)
                 break;
             case "MP":
-                    buf.readUnsignedByte(); // manifold absolute pressure
+                buf.readUnsignedByte(); // manifold absolute pressure (unused)
                 break;
             default:
                 break;
         }
     }
 
-        if (cellTower.getMobileCountryCode() != null
-            && cellTower.getMobileNetworkCode() != null
-            && cellTower.getCellId() != null && cellTower.getCellId() != 0
-            && cellTower.getLocationAreaCode() != null) {
+    // Defensive check for nulls in CellTower fields before autoboxing
+    Integer mcc = cellTower.getMobileCountryCode();
+    Integer mnc = cellTower.getMobileNetworkCode();
+    Long cellId = cellTower.getCellId();
+    Integer lac = cellTower.getLocationAreaCode();
+
+    if (mcc != null && mnc != null && cellId != null && cellId != 0 && lac != null) {
         position.setNetwork(new Network(cellTower));
     } else if (cellTower.getSignalStrength() != null) {
         position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
     }
 }
\ No newline at end of file
