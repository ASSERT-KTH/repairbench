diff --git a/tmp/cfe74988-3a62-4713-a77f-e25f6506eb92_buggy.java b/tmp/6add8d83-29eb-416a-bcb8-593c2be847a4_fixed.java
index d87dd79..f6aa259 100644
--- a/tmp/cfe74988-3a62-4713-a77f-e25f6506eb92_buggy.java
+++ b/tmp/6add8d83-29eb-416a-bcb8-593c2be847a4_fixed.java
@@ -1,47 +1,74 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
-        int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    int frameStart = -1;
+    int frameEnd = -1;
+
+    // Look for the first '['
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
+        if (buf.getByte(i) == '[') {
+            frameStart = i;
+            break;
+        }
+    }
+
+    // Look for the first ']' after frameStart
+    if (frameStart != -1) {
+        for (int i = frameStart; i < buf.writerIndex(); i++) {
             if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
+                frameEnd = i;
                 break;
             }
         }
+    }
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
+    if (frameStart != -1 && frameEnd != -1 && frameEnd > frameStart) {
+        int oldReaderIndex = buf.readerIndex();
+        buf.readerIndex(frameStart);
+
+        ByteBuf frame = Unpooled.buffer(frameEnd - frameStart + 1);
+        int endIndex = frameEnd + 1;
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
+                // make sure there is at least one byte to read in the frame
+                if (buf.readerIndex() < endIndex) {
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
+                } else {
+                    // Incomplete escape sequence, break out (shouldn't happen since frameEnd is at ']')
+                    frame.writeByte(b1);
+                }
             } else {
                 frame.writeByte(b1);
             }
         }
+
+        // Remove what we've read
+        buf.readerIndex(endIndex);
+
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
