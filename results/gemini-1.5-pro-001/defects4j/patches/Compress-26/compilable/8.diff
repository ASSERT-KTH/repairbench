diff --git a/tmp/6c42b6b0-120b-4b44-ba68-2c5bce4302e2_buggy.java b/tmp/dd1c1926-dfe5-4a51-913f-a4e747311cd4_fixed.java
index 4b163f6..3c7655d 100644
--- a/tmp/6c42b6b0-120b-4b44-ba68-2c5bce4302e2_buggy.java
+++ b/tmp/dd1c1926-dfe5-4a51-913f-a4e747311cd4_fixed.java
@@ -1,28 +1,34 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
         long available = numToSkip;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
+                // Only read one byte to check if we've reached EOF
+                int read = input.read();
+                if (read == -1) {
                     break;
+                } else {
+                    skipped = 1;
+                }
             }
             numToSkip -= skipped;
         }
             
         return available - numToSkip;
     }
