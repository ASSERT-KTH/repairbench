diff --git a/tmp/2a999f54-4305-43d2-a509-542f14c21e0f_buggy.java b/tmp/08cc82d5-4afc-4f14-a4ca-a39d934ff1eb_fixed.java
index b36b2a9..05c46a0 100644
--- a/tmp/2a999f54-4305-43d2-a509-542f14c21e0f_buggy.java
+++ b/tmp/08cc82d5-4afc-4f14-a4ca-a39d934ff1eb_fixed.java
@@ -1,26 +1,27 @@
   JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
         }
       }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
     }
     JSType result = builder.build();
     if (result != null) {
       return result;
-    } else if (this.isObject() && that.isObject()) {
-      return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
+      // Objects and subtypes of objects are tested using the builder above.
+      // Here we handle the cases where result is null and at least one of
+      // this and that is not an object.
       return getNativeType(JSTypeNative.NO_TYPE);
     }
   }
