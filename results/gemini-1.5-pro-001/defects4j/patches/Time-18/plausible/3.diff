diff --git a/tmp/4b8597bb-368a-48e8-bfda-d1ee11e3bbe0_buggy.java b/tmp/4d0f3b17-7a43-4b51-a90e-45b299709484_fixed.java
index be2af16..7782939 100644
--- a/tmp/4b8597bb-368a-48e8-bfda-d1ee11e3bbe0_buggy.java
+++ b/tmp/4d0f3b17-7a43-4b51-a90e-45b299709484_fixed.java
@@ -1,29 +1,48 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // Might be a Julian date, with the dayOfMonth out of range.
+            //
+            // For example, with the default cutover date,
+            // October 15, 1582 (Gregorian) is October 5, 1582 (Julian).
+            //
+            // If we were given the date October 15, 1582, assuming that
+            // it's a Julian date, it would fail with an exception.
+
+            // Assume date is Julian.
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant >= iCutoverMillis) {
+                // Okay, it's in the illegal cutover gap.
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+        }
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
