diff --git a/tmp/02b03414-98de-48c1-8875-13ed72b9bf16_buggy.java b/tmp/9c460985-efaf-4392-9f56-f59817d3889b_fixed.java
index fecb896..e0fe7e1 100644
--- a/tmp/02b03414-98de-48c1-8875-13ed72b9bf16_buggy.java
+++ b/tmp/9c460985-efaf-4392-9f56-f59817d3889b_fixed.java
@@ -1,34 +1,39 @@
     /**
      * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
      * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
      * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
      * contains text strings; use unescape for that.
      * @param open opener
      * @param close closer
      * @return data matched from the queue
      */
     public String chompBalanced(char open, char close) {
         int start = -1;
         int end = -1;
         int depth = 0;
         char last = 0;
+        boolean inQuote = false; // added a flag to track if we are within a quote
 
         do {
             if (isEmpty()) break;
             Character c = consume();
             if (last == 0 || last != ESC) {
+                if (c == '\'' || c == '"') {
+                    inQuote = !inQuote; // toggle inQuote flag if we encounter a quote
+                }
+                if (!inQuote) { // only process brackets if we are not in a quote
                     if (c.equals(open)) {
                         depth++;
                         if (start == -1)
                             start = pos;
-                }
-                else if (c.equals(close))
+                    } else if (c.equals(close))
                         depth--;
                 }
+            }
 
             if (depth > 0 && last != 0)
                 end = pos; // don't include the outer match pair in the return
             last = c;
         } while (depth > 0);
         return (end >= 0) ? queue.substring(start, end) : "";
     }
\ No newline at end of file
