diff --git a/tmp/991dbb45-ee1f-4008-9877-3cb501c64c10_buggy.java b/tmp/7c54e04a-ec54-4739-882e-2a17bc1c56e1_fixed.java
index dc93be3..2d73626 100644
--- a/tmp/991dbb45-ee1f-4008-9877-3cb501c64c10_buggy.java
+++ b/tmp/7c54e04a-ec54-4739-882e-2a17bc1c56e1_fixed.java
@@ -1,14 +1,18 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            if (!Tag.isKnownTag(el.tagName()))
+                return el;
+            else
+                stack.removeLast(); // if it's a known tag that is self closing, but shouldn't be, pop it from the stack so we ignore the tag
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
