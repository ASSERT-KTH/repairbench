diff --git a/tmp/782ae5d6-a807-4447-8a28-7ef35d951f6f_buggy.java b/tmp/3918d555-3391-40d8-b4fc-df54d6472073_fixed.java
index 5f96616..2bd8e98 100644
--- a/tmp/782ae5d6-a807-4447-8a28-7ef35d951f6f_buggy.java
+++ b/tmp/3918d555-3391-40d8-b4fc-df54d6472073_fixed.java
@@ -1,20 +1,20 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
-    if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    if (constraint.isRecordType() || constraint.isUnionType()) {
+      matchRecordTypeConstraint(constraint);
     }
   }
