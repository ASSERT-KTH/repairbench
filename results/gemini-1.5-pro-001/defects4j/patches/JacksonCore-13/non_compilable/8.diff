diff --git a/tmp/3a0f204d-9fa1-40fe-b159-b5ea6cdb1e38_buggy.java b/tmp/2ef44fe5-34e6-4422-a90f-1348ab21a639_fixed.java
index e69de29..d4f0f95 100644
--- a/tmp/3a0f204d-9fa1-40fe-b159-b5ea6cdb1e38_buggy.java
+++ b/tmp/2ef44fe5-34e6-4422-a90f-1348ab21a639_fixed.java
@@ -0,0 +1,30 @@
+package com.fasterxml.jackson.core.json;
+
+import java.io.IOException;
+
+import com.fasterxml.jackson.core.*;
+
+public class TestJsonGeneratorFeatures
+    extends com.fasterxml.jackson.core.BaseTest
+{
+    private final JsonFactory JSON_F = new JsonFactory();
+
+    private void _testFieldNameQuotingEnabled(JsonFactory f, boolean useBytes,
+            boolean quote, String exp) throws IOException
+    {
+        String DOC = quote ? "{\"foo\":1}" : "{foo:1}";
+        JsonGenerator gen;
+        if (useBytes) {
+            gen = f.createGenerator(new TestUtil.NoBufferOutputStream(null), JsonEncoding.UTF8);
+        } else {
+            gen = f.createGenerator(new TestUtil.NoBufferWriter(null));
+        }
+        gen.writeStartObject();
+        gen.writeFieldName("foo");
+        gen.writeNumber(1);
+        gen.writeEndObject();
+        gen.close();
+
+        assertEquals(exp, gen.getOutputContext().toString());
+    }
+}
\ No newline at end of file
