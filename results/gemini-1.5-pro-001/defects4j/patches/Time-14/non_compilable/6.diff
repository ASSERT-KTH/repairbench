diff --git a/tmp/8298b63b-89ec-47b3-916a-9560c03844d7_buggy.java b/tmp/9d5faf4b-9449-4a54-9d3f-916b3a1b4cac_fixed.java
index 10616db..15ae310 100644
--- a/tmp/8298b63b-89ec-47b3-916a-9560c03844d7_buggy.java
+++ b/tmp/9d5faf4b-9449-4a54-9d3f-916b3a1b4cac_fixed.java
@@ -1,19 +1,22 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
             // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+            int[] newValues = values.clone();
+            newValues[fieldIndex] = getField(fieldIndex).addWrapField(this, fieldIndex, newValues, valueToAdd);
+            // need to normalize because of wrap situation
+            return set(partial, newValues);
         }
     }
