diff --git a/tmp/9b141ca3-feae-4684-9be6-08f2b016db86_buggy.java b/tmp/2d69851a-1814-4486-b966-4f9267593d57_fixed.java
index 3cb9232..e963699 100644
--- a/tmp/9b141ca3-feae-4684-9be6-08f2b016db86_buggy.java
+++ b/tmp/2d69851a-1814-4486-b966-4f9267593d57_fixed.java
@@ -1,26 +1,32 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
 
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
                 /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
                  *   it's actually bit tricky to do it more efficiently (meta-annotations
                  *   add more lookups; AnnotationMap costs etc)
                  */
             } else if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
                     || _hasAnnotation(a, JsonRawValue.class)) {
                 name = "";
             } else {
+                // 18-Aug-2016, tatu: Important change here; was returning null, but
+                //   that means different things for property name and value handlers;
+                //   better to let caller figure it out
                 return null;
             }
         }
+        if (name != null && name.isEmpty()) {
+            name = null;
+        }
         return PropertyName.construct(name);
     }
