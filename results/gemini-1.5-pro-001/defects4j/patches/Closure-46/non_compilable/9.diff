diff --git a/tmp/c4efa043-0940-4d1f-9f93-b9fda10b087b_buggy.java b/tmp/c565557d-f356-4183-b575-87288422ae19_fixed.java
index 46817a7..eafda2c 100644
--- a/tmp/c4efa043-0940-4d1f-9f93-b9fda10b087b_buggy.java
+++ b/tmp/c565557d-f356-4183-b575-87288422ae19_fixed.java
@@ -1,16 +1,29 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    // Add properties in this type that are not in that type.
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
+      if (!that.toMaybeRecordType().hasProperty(property)) {
+        builder.addProperty(property, getPropertyType(property),
+            getPropertyNode(property));
+      }
+    }
+    for (String property : that.toMaybeRecordType().getProperties()) {
+      // Add properties that are in both types if they are equivalent.
+      if (hasProperty(property) &&
           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
               getPropertyType(property))) {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
+      } else if (!hasProperty(property)) {
+        // Add properties in that type that are not in this type.
+        builder.addProperty(property,
+            that.toMaybeRecordType().getPropertyType(property),
+            that.toMaybeRecordType().getSlot(property).getPropertyNode());
       }
     }
     return builder.build();
   }
\ No newline at end of file
