diff --git a/tmp/7f41f75f-0d28-47e1-9585-e9e5ce677fd2_buggy.java b/tmp/a92221e3-fcea-4ea8-b6c4-7ce62bfb6776_fixed.java
index 2608424..9e6effc 100644
--- a/tmp/7f41f75f-0d28-47e1-9585-e9e5ce677fd2_buggy.java
+++ b/tmp/a92221e3-fcea-4ea8-b6c4-7ce62bfb6776_fixed.java
@@ -1,39 +1,31 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
         int count = 0;
         for (int i = 0; i < last; i++) {
             int idx = 0;
             final int offset = uniCounterOffset[i];
-            while (count <= index) {
+            while (count + offset <= index) {
                 count += offset;
                 ++idx;
             }
-            --idx;
-            count -= offset;
             indices[i] = idx;
         }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
+        indices[last] = index - count;
 
         return indices;
     }
