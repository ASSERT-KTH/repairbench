You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
    /**
     * Returns the number of characters between the current position and the next instance of the input sequence
     *
     * @param seq scan target
     * @return offset between current position and next instance of target. -1 if not found.
     */
    int nextIndexOf(CharSequence seq) {
        // doesn't handle scanning for surrogates
        char startChar = seq.charAt(0);
        for (int offset = pos; offset < length; offset++) {
            // scan to first instance of startchar:
            if (startChar != input[offset])
                while(++offset < length && startChar != input[offset]);
            int i = offset + 1;
            int last = i + seq.length()-1;
            if (offset < length) {
                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                if (i == last) // found full sequence
                    return offset - pos;
            }
        }
        return -1;
    }

```

The code fails the following tests.

Test `org.jsoup.parser.CharacterReaderTest::nextIndexOfUnmatched`:
```java
    @Test public void nextIndexOfUnmatched() {
        CharacterReader r = new CharacterReader("<[[one]]");
        assertEquals(-1, r.nextIndexOf("]]>"));
    }

```
Test `org.jsoup.parser.CharacterReaderTest::nextIndexOfUnmatched` error:
```
java.lang.ArrayIndexOutOfBoundsException: 11
```

Test `org.jsoup.parser.HtmlParserTest::handlesUnclosedCdataAtEOF`:
```java
    @Test public void handlesUnclosedCdataAtEOF() {
        // https://github.com/jhy/jsoup/issues/349 would crash, as character reader would try to seek past EOF
        String h = "<![CDATA[]]";
        Document doc = Jsoup.parse(h);
        assertEquals(1, doc.body().childNodeSize());
    }

```
Test `org.jsoup.parser.HtmlParserTest::handlesUnclosedCdataAtEOF` error:
```
java.lang.ArrayIndexOutOfBoundsException: 11
```


Please provide a fixed version of the buggy function, and only that function, inside a code block.
