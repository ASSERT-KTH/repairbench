diff --git a/tmp/e33589be-0901-4af4-a0d2-68fc8f9ba91a_buggy.java b/tmp/62ad6670-9c3e-4867-8e22-c11b12630007_fixed.java
index 6cfa79b..c61f838 100644
--- a/tmp/e33589be-0901-4af4-a0d2-68fc8f9ba91a_buggy.java
+++ b/tmp/62ad6670-9c3e-4867-8e22-c11b12630007_fixed.java
@@ -1,12 +1,18 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        if (x < mean - 20 * standardDeviation) {
+            return 0;
+        } else if (x > mean + 20 * standardDeviation) {
+            return 1;
+        } else {
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
         }
+    }
