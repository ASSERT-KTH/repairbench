diff --git a/tmp/7151c658-4f31-4e14-9837-691416df31c9_buggy.java b/tmp/d9d2559d-e1ae-49a9-bdf1-7d0e050dd553_fixed.java
index 6cfa79b..790158f 100644
--- a/tmp/7151c658-4f31-4e14-9837-691416df31c9_buggy.java
+++ b/tmp/d9d2559d-e1ae-49a9-bdf1-7d0e050dd553_fixed.java
@@ -1,12 +1,19 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+            double dev = standardDeviation * Math.sqrt(2.0);
+            double x0 = (x - mean) / dev;
+            if (x0 < -20) {
+                return 0.0d;
+            } else if (x0 > 20) {
+                return 1.0d;
+            } else {
+                return 0.5 * (1.0 + Erf.erf(x0));
+            }
     }
