diff --git a/tmp/20e0a5f4-183e-4834-852d-776dc3145068_buggy.java b/tmp/abd987bb-1e11-4b91-8604-e3b86993ef7f_fixed.java
index 6cfa79b..414a6a7 100644
--- a/tmp/20e0a5f4-183e-4834-852d-776dc3145068_buggy.java
+++ b/tmp/abd987bb-1e11-4b91-8604-e3b86993ef7f_fixed.java
@@ -1,12 +1,18 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+            return 0;
+        }
+        if (x > (mean + 20 * standardDeviation)) {
+            return 1;
+        }
         return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
     }
