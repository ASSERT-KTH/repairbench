diff --git a/tmp/b04ca9ad-9b73-490c-8cc5-f75aabd1f676_buggy.java b/tmp/b601e255-168f-4b0b-a5ca-851f71c939dc_fixed.java
index 6cfa79b..57b50da 100644
--- a/tmp/b04ca9ad-9b73-490c-8cc5-f75aabd1f676_buggy.java
+++ b/tmp/b601e255-168f-4b0b-a5ca-851f71c939dc_fixed.java
@@ -1,12 +1,16 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = standardDeviation * Math.sqrt(2.0);
+        double diff = x - mean;
+        if (Math.abs(diff) > 40 * standardDeviation) {
+            return diff < 0 ? 0.0d : 1.0d;
+        }
+        return 0.5 * (1.0 + Erf.erf(diff / dev));
     }
