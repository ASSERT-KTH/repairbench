You are an automatic program repair tool. Your task is to fix the provided buggy code.

The following code contains a buggy function:
```java
    public void captureArgumentsFrom(Invocation i) {
        int k = 0;
        for (Matcher m : matchers) {
            if (m instanceof CapturesArguments) {
                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
            }
            k++;
        }
    }

```

The code fails the following tests.

Test `org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch`:
```java
    @Test
    public void shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch() throws Exception {
        //given
        mock.varargs();
        Invocation invocation = getLastInvocation();

        //when
        InvocationMatcher invocationMatcher = new InvocationMatcher(invocation, (List) asList(new LocalizedMatcher(AnyVararg.ANY_VARARG)));

        //then
        invocationMatcher.captureArgumentsFrom(invocation);
    }

```
Test `org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch` error:
```
java.lang.ArrayIndexOutOfBoundsException: 0
```

Test `org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg`:
```java
    @Test
    //See bug #157
    public void shouldMatchEasilyEmptyVararg() throws Exception {
        //when
        when(mock.foo(anyVararg())).thenReturn(-1);

        //then
        assertEquals(-1, mock.foo());
    } 

```
Test `org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg` error:
```
java.lang.ArrayIndexOutOfBoundsException: 0
```


Please provide a fixed version of the buggy function, and only that function, inside a code block.
