diff --git a/tmp/198d6607-c838-4abd-b5fa-e2775c86eee1_buggy.java b/tmp/e8bdeeb8-efde-4d78-9a47-b39bfbe88053_fixed.java
index 23f078d..c07fcb7 100644
--- a/tmp/198d6607-c838-4abd-b5fa-e2775c86eee1_buggy.java
+++ b/tmp/e8bdeeb8-efde-4d78-9a47-b39bfbe88053_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
+                // handle supplementary characters correctly
+                if (c >= Character.MIN_SUPPLEMENTARY_CODE_POINT) {
+                    i++; // skip surrogate pair second part
+                }
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
         }
     }
