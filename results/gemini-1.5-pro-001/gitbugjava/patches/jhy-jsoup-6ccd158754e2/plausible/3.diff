diff --git a/tmp/c9e2758d-334c-4f0f-8bdd-ca98718a3468_buggy.java b/tmp/62356997-1615-499e-b84c-546c1e23d0f6_fixed.java
index 23f078d..cacabe9 100644
--- a/tmp/c9e2758d-334c-4f0f-8bdd-ca98718a3468_buggy.java
+++ b/tmp/62356997-1615-499e-b84c-546c1e23d0f6_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
+                // handle supplementary characters correctly
+                if (Character.isSupplementaryCodePoint(c)) {
+                    i++;
+                }
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
         }
     }
