diff --git a/tmp/5d5fdbe6-e1a4-4309-b4f5-a4b31d469a4a_buggy.java b/tmp/e67b17a1-b1bb-479a-a305-6066c6a23151_fixed.java
index eb0a5c8..2835789 100644
--- a/tmp/5d5fdbe6-e1a4-4309-b4f5-a4b31d469a4a_buggy.java
+++ b/tmp/e67b17a1-b1bb-479a-a305-6066c6a23151_fixed.java
@@ -1,27 +1,24 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
     if (!ariCommand.extractCommandType().isCreationCommand()) {
       return Try.success(Done.done());
     }
 
-    final Option<AriResource> maybeResource =
-        ariCommand
+    return ariCommand
         .extractResourceRelations()
         .find(AriResourceRelation::isCreated)
-            .map(AriResourceRelation::getResource);
-
-    if (maybeResource.isEmpty()) {
-      return Try.failure(
+        .map(AriResourceRelation::getResource)
+        .map(
+            resource -> {
+              callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
+              return Try.success(Done.done());
+            })
+        .orElse(
+            Try.failure(
                 new RuntimeException(
                     String.format(
-                  "Failed to extract resourceId from command '%s'", ariCommand.toString())));
-    }
-
-    final AriResource resource = maybeResource.get();
-
-    callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
-    return Try.success(Done.done());
+                        "Failed to extract resourceId from command '%s'", ariCommand.toString()))));
   }
