diff --git a/tmp/78212259-5001-4b9c-97b0-39c433d7d327_buggy.java b/tmp/4ddabcf6-6038-4d49-b8e6-fc14a82cbbcd_fixed.java
index 712f277..e8fe81c 100644
--- a/tmp/78212259-5001-4b9c-97b0-39c433d7d327_buggy.java
+++ b/tmp/4ddabcf6-6038-4d49-b8e6-fc14a82cbbcd_fixed.java
@@ -1,48 +1,38 @@
-    /**
-     * Renders the given input to the target Appendable.
-     *
-     * @param input
-     *            source to render
-     * @param target
-     *            render onto this target Appendable.
-     * @return the given Appendable
-     * @throws IOException
-     *             If an I/O error occurs
-     */
 public static Appendable render(final String input, Appendable target) throws IOException {
-
     int i = 0;
     int j, k;
 
+    if (input.indexOf(END_TOKEN, 0) != -1 && input.indexOf(END_TOKEN, 0) < input.indexOf(BEGIN_TOKEN, 0) && input.indexOf(BEGIN_TOKEN, 0) == -1) {
+        throw new IllegalArgumentException("Invalid render sequence: END_TOKEN appears before BEGIN_TOKEN or BEGIN_TOKEN does not exist");
+    }
+
     while (true) {
         j = input.indexOf(BEGIN_TOKEN, i);
         if (j == -1) {
             if (i == 0) {
                 target.append(input);
                 return target;
             }
             target.append(input.substring(i));
             return target;
         }
         target.append(input.substring(i, j));
         k = input.indexOf(END_TOKEN, j);
 
         if (k == -1) {
-                target.append(input);
-                return target;
+            throw new IllegalArgumentException("Invalid render sequence: END_TOKEN not found");
         }
         j += BEGIN_TOKEN_LEN;
         String spec = input.substring(j, k);
 
         String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
-            if (items.length == 1) {
-                target.append(input);
-                return target;
+        if (items.length < 2) {
+            throw new IllegalArgumentException("Invalid render sequence: Spec is not correctly formatted");
         }
         String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
 
         target.append(replacement);
 
         i = k + END_TOKEN_LEN;
     }
 }
