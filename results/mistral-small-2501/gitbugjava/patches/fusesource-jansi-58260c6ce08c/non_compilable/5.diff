diff --git a/tmp/328060ad-196a-4438-bbf2-b40e5030a52a_buggy.java b/tmp/4d2936b1-5512-4dd1-bbc9-82519f10d1c3_fixed.java
index 712f277..263a124 100644
--- a/tmp/328060ad-196a-4438-bbf2-b40e5030a52a_buggy.java
+++ b/tmp/4d2936b1-5512-4dd1-bbc9-82519f10d1c3_fixed.java
@@ -1,48 +1,50 @@
     /**
      * Renders the given input to the target Appendable.
      *
      * @param input
      *            source to render
      * @param target
      *            render onto this target Appendable.
      * @return the given Appendable
      * @throws IOException
      *             If an I/O error occurs
      */
     public static Appendable render(final String input, Appendable target) throws IOException {
-
         int i = 0;
         int j, k;
 
         while (true) {
             j = input.indexOf(BEGIN_TOKEN, i);
             if (j == -1) {
                 if (i == 0) {
                     target.append(input);
                     return target;
                 }
                 target.append(input.substring(i));
                 return target;
             }
+
+            if (j == 0 || input.indexOf(END_TOKEN, j) != -1) {
                 target.append(input.substring(i, j));
                 k = input.indexOf(END_TOKEN, j);
-
                 if (k == -1) {
-                target.append(input);
-                return target;
+                    throw new IllegalArgumentException("Unmatched BEGIN_TOKEN");
                 }
+
                 j += BEGIN_TOKEN_LEN;
                 String spec = input.substring(j, k);
 
                 String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
                 if (items.length == 1) {
-                target.append(input);
-                return target;
+                    throw new IllegalArgumentException("Missing CODE_TEXT_SEPARATOR");
                 }
                 String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
-
                 target.append(replacement);
 
                 i = k + END_TOKEN_LEN;
+            } else {
+                target.append(input.substring(i));
+                return target;
+            }
         }
     }
\ No newline at end of file
