diff --git a/tmp/383ce1e8-53c4-426b-bc51-e7e278413322_buggy.java b/tmp/a58ad401-6c3c-4c21-ade4-936277c4fbc4_fixed.java
index 9739964..aa7046a 100644
--- a/tmp/383ce1e8-53c4-426b-bc51-e7e278413322_buggy.java
+++ b/tmp/a58ad401-6c3c-4c21-ade4-936277c4fbc4_fixed.java
@@ -1,27 +1,28 @@
 public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+      // While stack is not empty and the current price is greater than or equal to the price at the index in the stack
+      while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i])
         indexStack.pop();
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
+      // If index stack is empty, it means all previous prices are less than or equal to the current price
       if (indexStack.isEmpty())
         spans[i] = i + 1;
       else
+        // Otherwise, the span is the difference between the current index and the index at the top of the stack
         spans[i] = i - indexStack.peek();
 
+      // Push the current index onto the stack
       indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
