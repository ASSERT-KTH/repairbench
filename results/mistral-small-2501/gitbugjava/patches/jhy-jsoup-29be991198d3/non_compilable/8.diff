diff --git a/tmp/59563602-1f7f-49a7-8b60-7f68a7d101a9_buggy.java b/tmp/87fbf265-c493-4f72-a6d9-679bfe42790f_fixed.java
index 862c60c..3c7ca2d 100644
--- a/tmp/59563602-1f7f-49a7-8b60-7f68a7d101a9_buggy.java
+++ b/tmp/87fbf265-c493-4f72-a6d9-679bfe42790f_fixed.java
@@ -1,25 +1,27 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
-        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
+    final boolean normalizeWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
-        if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
+
+    if (normalizeWhite) {
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock())
+                  || (parentNode instanceof Document);
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
+        if (couldSkip && this.isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !this.isBlank())
+                || (out.outline() && siblingNodes().size() > 0 && !this.isBlank())) {
             indent(accum, depth, out);
         }
+    }
 
-        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
+    Entities.escape(accum, coreValue(), out, false, normalizeWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
