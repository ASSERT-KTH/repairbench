diff --git a/tmp/808e337e-4368-4f94-946c-3187706ba09d_buggy.java b/tmp/420e3a62-35c3-42cc-8c3f-90bf7d71af30_fixed.java
index 23f078d..c4bffb6 100644
--- a/tmp/808e337e-4368-4f94-946c-3187706ba09d_buggy.java
+++ b/tmp/420e3a62-35c3-42cc-8c3f-90bf7d71af30_fixed.java
@@ -1,14 +1,17 @@
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
+
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
             sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            i += Character.charCount(c) - 1; // move the index forward if the character is a surrogate pair
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
