diff --git a/tmp/8e22a186-b513-4ec7-9e4b-61c0f9e44b7c_buggy.java b/tmp/05cba6fb-9c3f-4d2a-8cd2-0317d7fa3cff_fixed.java
index 23f078d..31f5ba6 100644
--- a/tmp/8e22a186-b513-4ec7-9e4b-61c0f9e44b7c_buggy.java
+++ b/tmp/05cba6fb-9c3f-4d2a-8cd2-0317d7fa3cff_fixed.java
@@ -1,14 +1,18 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
+        if (Character.isHighSurrogate((char) c)) {
+            int lowSurrogate = s.codePointAt(i + 1);
+            c = Character.toCodePoint((char) c, (char) lowSurrogate);
+            i++; // Skip the next character as it is part of the surrogate pair.
+        }
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (c > 127) {
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), "UTF-8"));
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
