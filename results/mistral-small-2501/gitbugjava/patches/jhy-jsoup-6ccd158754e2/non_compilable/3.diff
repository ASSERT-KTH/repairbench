diff --git a/tmp/f8fa49ba-56b8-43b5-b515-ce1e06a27e7d_buggy.java b/tmp/24c478cd-56e0-47e8-9cc1-ae19b518e0b3_fixed.java
index 23f078d..ec3c6d8 100644
--- a/tmp/f8fa49ba-56b8-43b5-b515-ce1e06a27e7d_buggy.java
+++ b/tmp/24c478cd-56e0-47e8-9cc1-ae19b518e0b3_fixed.java
@@ -1,14 +1,16 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            } else if (c > 127) { // out of ASCII range
+                // Use URL encoding to handle supplementary characters correctly
+                sb.append(URLEncoder.encode(new String(Character.toChars(c)), "UTF-8"));
+                // Move index forward since this character is a supplementary pair
+                i++;
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file
