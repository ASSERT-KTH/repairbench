diff --git a/tmp/5b3bea40-7b97-4158-bb12-b360948859c6_buggy.java b/tmp/3d946d3c-d62b-480e-9bae-6d059d72408e_fixed.java
index 23f078d..4359bdf 100644
--- a/tmp/5b3bea40-7b97-4158-bb12-b360948859c6_buggy.java
+++ b/tmp/3d946d3c-d62b-480e-9bae-6d059d72408e_fixed.java
@@ -1,14 +1,19 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    int i = 0;
+    while (i < s.length()) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            i += Character.charCount(c);
+            sb.append(URLEncoder.encode(String.valueOf(Character.toChars(c)), "UTF-8"));
         } else {
             sb.append((char) c);
+            i++;
+        }
+        if (Character.isHighSurrogate(c) && ++i < s.length() && Character.isLowSurrogate(s.charAt(i))) {
+            i++;
         }
     }
 }
\ No newline at end of file
