diff --git a/tmp/8a5ee91a-541c-461f-bbca-62a62e9681ff_buggy.java b/tmp/60425416-d0be-4706-90ed-798950f4a1e5_fixed.java
index 23f078d..6aab68a 100644
--- a/tmp/8a5ee91a-541c-461f-bbca-62a62e9681ff_buggy.java
+++ b/tmp/60425416-d0be-4706-90ed-798950f4a1e5_fixed.java
@@ -1,14 +1,18 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
+        if (Character.charCount(c) == 2) {
+            i++;  // Skip the surrogate pair character
+        }
+
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (c >= 127) { // out of ASCII range
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), StandardCharsets.UTF_8));
+            // This encodes the supplementary character correctly
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
