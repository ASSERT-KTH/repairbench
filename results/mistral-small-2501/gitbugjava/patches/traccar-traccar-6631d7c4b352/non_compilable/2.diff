diff --git a/tmp/9d4ea932-2a46-421e-ada7-cce7a98363cc_buggy.java b/tmp/23cc9b3d-4a7b-439c-ae22-c86840ef39f6_fixed.java
index d87dd79..7cde0d8 100644
--- a/tmp/9d4ea932-2a46-421e-ada7-cce7a98363cc_buggy.java
+++ b/tmp/23cc9b3d-4a7b-439c-ae22-c86840ef39f6_fixed.java
@@ -1,47 +1,52 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
+        int initialReaderIndex = buf.readerIndex();
+
+        // Ensure it copies only until the endIndex - not beyond
+        ByteBuf frame = Unpooled.buffer(endIndex - initialReaderIndex);
+        for (int i = initialReaderIndex; i < endIndex; i++) {
+            byte b1 = buf.getByte(i);
+            frame.writeByte(b1);
+            if (buf.getByte(i) == '}') {
+                byte b2 = buf.getByte(i + 1);
                 switch (b2) {
                     case 0x01:
                         frame.writeByte('}');
                         break;
                     case 0x02:
                         frame.writeByte('[');
                         break;
                     case 0x03:
                         frame.writeByte(']');
                         break;
                     case 0x04:
                         frame.writeByte(',');
                         break;
                     case 0x05:
                         frame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                "unexpected byte at %d: 0x%02x", i, b2));
                 }
-                } else {
-                    frame.writeByte(b1);
+                i++;
             }
         }
+
+        buf.readerIndex(endIndex); // Move reader index past the processed frame
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
