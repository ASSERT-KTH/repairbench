diff --git a/tmp/3ee51646-5301-4274-92cd-86a8501857b7_buggy.java b/tmp/df7e9ed4-5f29-4ab9-a537-6452337de6aa_fixed.java
index 855afa5..a85acb5 100644
--- a/tmp/3ee51646-5301-4274-92cd-86a8501857b7_buggy.java
+++ b/tmp/df7e9ed4-5f29-4ab9-a537-6452337de6aa_fixed.java
@@ -1,13 +1,28 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
+        // Encode the entire URL using URI encoding
         String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
         urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        StringBuilder encodedUrl = new StringBuilder(urlS.length());
+        for (char c : urlS.toCharArray()) {
+            if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||
+                (c >= '0' && c <= '9') || c == '-' || c == '_' || c == '.' || c == '~' ||
+                c == ':' || c == '/' || c == '?' || c == '=' || c == '&' || c == '%' ||
+                c == '#') {
+                encodedUrl.append(c);
+            } else {
+                encodedUrl.append(URLEncoder.encode(String.valueOf(c), StandardCharsets.UTF_8.toString()));
+            }
+        }
+        final URI uri = new URI(encodedUrl.toString());
         return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+    } catch (URISyntaxException | MalformedURLException | IOException e) {
         // give up and return the original input
         return u;
     }
 }
+
+static URL punyUrl(URL u){
+    return u;
+}
\ No newline at end of file
