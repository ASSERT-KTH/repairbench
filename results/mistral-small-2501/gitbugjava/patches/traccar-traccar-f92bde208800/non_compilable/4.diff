diff --git a/tmp/b8f94e35-8977-4bfa-afcb-dc008bc064f3_buggy.java b/tmp/f22cfa36-29f0-4fe4-923f-8d7cb4eaee80_fixed.java
index 33e2e76..60fac03 100644
--- a/tmp/b8f94e35-8977-4bfa-afcb-dc008bc064f3_buggy.java
+++ b/tmp/f22cfa36-29f0-4fe4-923f-8d7cb4eaee80_fixed.java
@@ -1,126 +1,134 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
     CellTower cellTower = new CellTower();
     String[] keys = form.substring(1).split("%");
+
+    if (position == null) {
+        throw new IllegalArgumentException("Position object cannot be null");
+    }
+
     for (String key : keys) {
         switch (key) {
             case "SA":
                 position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                 break;
             case "MV":
                 position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
                 break;
             case "BV":
                 position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
                 break;
             case "GQ":
-                    cellTower.setSignalStrength((int) buf.readUnsignedByte());
+                cellTower.setSignalStrength((buf.isReadable() && buf.readableBytes() >= 1) ? (int) buf.readUnsignedByte() : null);
                 break;
             case "CE":
-                    cellTower.setCellId(buf.readUnsignedInt());
+                cellTower.setCellId((buf.isReadable() && buf.readableBytes() >= 4) ? (int) buf.readUnsignedInt() : null);
                 break;
             case "LC":
-                    cellTower.setLocationAreaCode(buf.readUnsignedShort());
+                cellTower.setLocationAreaCode((buf.isReadable() && buf.readableBytes() >= 2) ? (int) buf.readUnsignedShort() : null);
                 break;
             case "CN":
-                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
-                    cellTower.setMobileCountryCode(combinedMobileCodes / 100);
-                    cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
+                int combinedMobileCodes;
+                if (buf.isReadable() && buf.readableBytes() >= 4) {
+                    combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000);
+                    cellTower.setMobileCountryCode((combinedMobileCodes / 100));
+                    cellTower.setMobileNetworkCode(((combinedMobileCodes % 100)));
+                }
                 break;
             case "RL":
                 buf.readUnsignedByte(); // rxlev
                 break;
             case "PC":
-                    position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
+                position.set(Position.PREFIX_COUNT + 1, (buf.isReadable() && buf.readableBytes() >= 4) ? buf.readUnsignedInt() : 0);
                 break;
             case "AT":
-                    position.setAltitude(buf.readUnsignedInt());
+                position.setAltitude((buf.isReadable() && buf.readableBytes() >= 4) ? buf.readUnsignedInt() : 0);
                 break;
             case "RP":
-                    position.set(Position.KEY_RPM, buf.readUnsignedShort());
+                position.set(Position.KEY_RPM, (buf.isReadable() && buf.readableBytes() >= 2) ? buf.readUnsignedShort() : 0);
                 break;
             case "GS":
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+                position.set(Position.KEY_RSSI, (buf.isReadable() && buf.readableBytes() >= 1) ? buf.readUnsignedByte() : 0);
                 break;
             case "DT":
-                    position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
+                position.set(Position.KEY_ARCHIVE, (buf.isReadable() && buf.readableBytes() >= 1) ? (buf.readUnsignedByte() == 1) : false);
                 break;
             case "VN":
-                    position.set(Position.KEY_VIN, readString(buf));
+                position.set(Position.KEY_VIN, (buf.isReadable() && buf.readableBytes() >= 1) ? readString(buf) : null);
                 break;
             case "MF":
                 buf.readUnsignedShort(); // mass air flow rate
                 break;
             case "EL":
                 buf.readUnsignedByte(); // engine load
                 break;
             case "TR":
-                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
+                position.set(Position.KEY_THROTTLE, (buf.isReadable() && buf.readableBytes() >= 1) ? buf.readUnsignedByte() : 0);
                 break;
             case "ET":
-                    position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
+                position.set(Position.PREFIX_TEMP + 1, (buf.isReadable() && buf.readableBytes() >= 2) ? buf.readUnsignedShort() : 0);
                 break;
             case "FL":
-                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
+                position.set(Position.KEY_FUEL_LEVEL, (buf.isReadable() && buf.readableBytes() >= 1) ? buf.readUnsignedByte() : 0);
                 break;
             case "ML":
                 buf.readUnsignedByte(); // mil status
                 break;
             case "FC":
-                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
+                position.set(Position.KEY_FUEL_CONSUMPTION, (buf.isReadable() && buf.readableBytes() >= 4) ? buf.readUnsignedInt() : 0);
                 break;
             case "CI":
                 readString(buf); // format string
                 break;
             case "AV1":
-                    position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
+                position.set(Position.PREFIX_ADC + 1, (buf.isReadable() && buf.readableBytes() >= 2) ? buf.readUnsignedShort() : 0);
                 break;
             case "NC":
                 readString(buf); // gsm neighbor cell info
                 break;
             case "SM":
                 buf.readUnsignedShort(); // max speed between reports
                 break;
             case "GL":
                 readString(buf); // google link
                 break;
             case "MA":
                 readString(buf); // mac address
                 break;
             case "PD":
                 buf.readUnsignedByte(); // pending code status
                 break;
             case "CD":
-                    position.set(Position.KEY_ICCID, readString(buf));
+                position.set(Position.KEY_ICCID, (buf.isReadable() && buf.readableBytes() >= 1) ? readString(buf) : null);
                 break;
             case "CM":
                 buf.readLong(); // imsi
                 break;
             case "GN":
                 buf.skipBytes(60); // g sensor data
                 break;
             case "GV":
                 buf.skipBytes(6); // maximum g force
                 break;
             case "ME":
                 buf.readLong(); // imei
                 break;
             case "IA":
                 buf.readUnsignedByte(); // intake air temperature
                 break;
             case "MP":
                 buf.readUnsignedByte(); // manifold absolute pressure
                 break;
             default:
                 break;
         }
     }
 
     if (cellTower.getMobileCountryCode() != null
             && cellTower.getMobileNetworkCode() != null
             && cellTower.getCellId() != null && cellTower.getCellId() != 0
             && cellTower.getLocationAreaCode() != null) {
         position.setNetwork(new Network(cellTower));
     } else if (cellTower.getSignalStrength() != null) {
         position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
     }
 }
\ No newline at end of file
