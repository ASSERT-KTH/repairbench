diff --git a/tmp/f819cac6-c2bd-4c3f-95b7-794c6dcec7da_buggy.java b/tmp/4a9d7fb9-4389-43ac-8a8e-d0e3bc4b20b4_fixed.java
index c84c989..6842929 100644
--- a/tmp/f819cac6-c2bd-4c3f-95b7-794c6dcec7da_buggy.java
+++ b/tmp/4a9d7fb9-4389-43ac-8a8e-d0e3bc4b20b4_fixed.java
@@ -1,27 +1,38 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Correctly interpret the date and time field
+    long timestamp = decodeTimestamp(buf);
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
+    position.setTime(new Date(timestamp));
+
     return position;
 }
+
+private long decodeTimestamp(ByteBuf buf) {
+    // Adjust the date and time decoding according to the actual protocol specification
+    int timestamp = buf.readUnsignedIntLE();
+    // Assuming the timestamp is in seconds since epoch
+    return timestamp * 1000L;
+}
\ No newline at end of file
