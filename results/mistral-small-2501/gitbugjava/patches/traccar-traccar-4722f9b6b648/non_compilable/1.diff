diff --git a/tmp/19dc798e-0572-4243-8e52-dcab1c5bff44_buggy.java b/tmp/7b059ca8-1da8-472a-ba8b-2f8f6f397667_fixed.java
index c84c989..c9998ae 100644
--- a/tmp/19dc798e-0572-4243-8e52-dcab1c5bff44_buggy.java
+++ b/tmp/7b059ca8-1da8-472a-ba8b-2f8f6f397667_fixed.java
@@ -1,27 +1,41 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
-        buf.readUnsignedShortLE(); // length
+    // Skip the length field
+    buf.readUnsignedShortLE();
 
-        buf.skipBytes(3); // identification header
-        buf.readUnsignedIntLE(); // index
+    // Decode the identification header
+    buf.skipBytes(3);
+
+    // Read the index (assuming it's also 4 bytes)
+    buf.readUnsignedIntLE();
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
-        buf.readUnsignedByte(); // session status
-        buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    // Read session status
+    buf.readUnsignedByte();
 
-        buf.skipBytes(23); // coordinates block
+    // Skip the reserved bytes
+    buf.skipBytes(4);
 
-        buf.skipBytes(3); // data tag header
+    // Read the date and time (assuming it's 4 bytes and in Date-Time format)
+    long timestamp = buf.readUnsignedIntLE();
+    position.setTime(Instant.ofEpochMilli(timestamp * 1000));
+
+    // Skip the coordinates block
+    buf.skipBytes(23);
+
+    // Skip the data tag header
+    buf.skipBytes(3);
+
+    // Decode minimal data set
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
