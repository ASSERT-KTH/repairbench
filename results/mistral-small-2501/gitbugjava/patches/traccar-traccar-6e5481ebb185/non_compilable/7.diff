diff --git a/tmp/6884fec6-75d1-44db-86f8-78c14724ea53_buggy.java b/tmp/48064d93-5dfc-414e-8954-df9338ec01d9_fixed.java
index ee599aa..06705b5 100644
--- a/tmp/6884fec6-75d1-44db-86f8-78c14724ea53_buggy.java
+++ b/tmp/48064d93-5dfc-414e-8954-df9338ec01d9_fixed.java
@@ -1,50 +1,46 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
+    boolean zeroedData = false;
 
-        int length = 0;
-        if (hasLength) {
-            length = buf.readUnsignedByte();
+    int length = hasLength ? buf.readUnsignedByte() : 0;
     if (length == 0) {
-                boolean zeroedData = true;
-                for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
+        zeroedData = true;
+        for (int i = buf.readerIndex(); i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
             if (buf.getByte(i) != 0) {
                 zeroedData = false;
                 break;
             }
         }
-                if (zeroedData) {
-                    buf.skipBytes(Math.min(buf.readableBytes(), 45));
-                }
-                return false;
     }
+
+    if (!zeroedData) {
+        buf.readerIndex(buf.readerIndex() + length);
     }
 
     int mcc = buf.readUnsignedShort();
     int mnc;
     if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
         mnc = buf.readUnsignedShort();
     } else {
         mnc = buf.readUnsignedByte();
     }
+
     int lac;
     if (type == MSG_LBS_ALARM) {
         lac = buf.readInt();
     } else {
         lac = buf.readUnsignedShort();
     }
+
     long cid;
     if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
         cid = buf.readLong();
     } else if (type == MSG_GPS_LBS_6) {
         cid = buf.readUnsignedInt();
     } else {
         cid = buf.readUnsignedMedium();
     }
 
     position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
-        if (length > 9) {
-            buf.skipBytes(length - 9);
-        }
-
     return true;
 }
\ No newline at end of file
