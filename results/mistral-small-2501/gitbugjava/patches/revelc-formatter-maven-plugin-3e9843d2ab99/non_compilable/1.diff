diff --git a/tmp/bcd98b57-5d79-45ac-81f3-719278b82ed4_buggy.java b/tmp/6aaf9feb-84ff-48b0-946f-e26e5b78b870_fixed.java
index 1098336..c609d98 100644
--- a/tmp/bcd98b57-5d79-45ac-81f3-719278b82ed4_buggy.java
+++ b/tmp/6aaf9feb-84ff-48b0-946f-e26e5b78b870_fixed.java
@@ -1,16 +1,28 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
-
     final var source = new InputSource(new StringReader(code));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
     var formattedCode = sheet.getCssText(this.formatter);
 
-        // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
+    // Ensuring consistent line endings across platform and parser behavior
+    if (ending == LineEnding.CRLF) {
+        formattedCode = formattedCode.replaceAll("\r\n", "\n");
+    }
     formattedCode = formattedCode.replace("\t;", "\\9;");
 
+    if (code.equals(formattedCode) && ending == LineEnding.CRLF) {
+        return formattedCode;
+    }
     if (code.equals(formattedCode)) {
         return null;
     }
+    if (ending == LineEnding.CRLF && !formattedCode.contains("\r")) {
+        formattedCode = formattedCode.replaceAll("\n", "\r\n");
+    }
+    if (ending == LineEnding.LF && formattedCode.contains("\r")) {
+        formattedCode = formattedCode.replaceAll("\r\n", "\n");
+    }
+
     return formattedCode;
 }
\ No newline at end of file
