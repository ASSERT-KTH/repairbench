diff --git a/tmp/c5c7dd88-ec2f-4cc7-a575-e90463a31df5_buggy.java b/tmp/8a13e456-98ec-497c-ad14-95983a62924f_fixed.java
index 8bae155..0ece385 100644
--- a/tmp/c5c7dd88-ec2f-4cc7-a575-e90463a31df5_buggy.java
+++ b/tmp/8a13e456-98ec-497c-ad14-95983a62924f_fixed.java
@@ -1,5 +1,42 @@
     @Override
     public String asStringLiteral()
     {
-        return '"' + this.value + '"';
+        // Use the twice to handle mixed (' and ") quotes
+        if (this.value == null)
+            return "null";
+        if (this.value.isEmpty())
+            return "''";
+        if (this.value.contains("\"") && this.value.contains("'"))
+            // In this case we should format the string with matching parentheses properties.
+            return escapeQuotes(this.value);
+        if (this.value.contains("'")){
+            return "\"" + this.value + "\"";
+        }
+        return "'" + this.value.replace("'", "''") + "'";
+    }
+
+    private String escapeQuotes(String value) {
+        // Escape the quotes to handle both ' and " separately
+        if (value == null)
+            value = "null";
+        else if (value.isEmpty())
+            value = "\"";
+        else {
+            StringBuilder sb = new StringBuilder();
+            sb.append('\"');
+            for (char c: value.toCharArray()) {
+                if (c == '\\') {
+                    sb.append("\\\\");
+                } else if (c == '\"') {
+                    sb.append("\\\"");
+                } else if (c == '\'') {
+                    sb.append('\\');
+                } else {
+                    sb.append(c);
+                }
+            }
+            sb.append('\"');
+            value = sb.toString();
+        }
+        return value;
     }
\ No newline at end of file
