diff --git a/tmp/38975ed9-9569-43fc-9571-228bafd24188_buggy.java b/tmp/f78eb396-f43e-4a8f-95bf-a8989f581fa6_fixed.java
index fcb460f..41deda0 100644
--- a/tmp/38975ed9-9569-43fc-9571-228bafd24188_buggy.java
+++ b/tmp/f78eb396-f43e-4a8f-95bf-a8989f581fa6_fixed.java
@@ -1,183 +1,315 @@
 private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
     List<Position> positions = new LinkedList<>();
 
     buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);
     String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);
-        buf.skipBytes(1 + 3 + 1);
+    buf.skipBytes(1); // skip comma
+    int type = buf.readUnsignedByte();
+    buf.skipBytes(2); // skip CC or C#
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
     if (deviceSession == null) {
         return null;
     }
 
+    if (type == 'C') {
         buf.readUnsignedIntLE(); // remaining cache
         int count = buf.readUnsignedShortLE();
 
         for (int i = 0; i < count; i++) {
             Position position = new Position(getProtocolName());
             position.setDeviceId(deviceSession.getDeviceId());
 
             buf.readUnsignedShortLE(); // length
             buf.readUnsignedShortLE(); // index
 
             int paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 switch (id) {
                     case 0x01:
                         position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                         break;
                     case 0x05:
                         position.setValid(buf.readUnsignedByte() > 0);
                         break;
                     case 0x06:
                         position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                         break;
                     case 0x07:
                         position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                         break;
                     case 0x14:
                         position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
                         break;
                     case 0x15:
                         position.set(Position.KEY_INPUT, buf.readUnsignedByte());
                         break;
                     case 0x97:
                         position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                         break;
                     case 0x9D:
                         position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                         break;
                     case 0xFE69:
                         position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());
                         break;
                     default:
                         buf.readUnsignedByte();
                         break;
                 }
             }
 
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 switch (id) {
                     case 0x08:
                         position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
                         break;
                     case 0x09:
                         position.setCourse(buf.readUnsignedShortLE());
                         break;
                     case 0x0A:
                         position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());
                         break;
                     case 0x0B:
                         position.setAltitude(buf.readShortLE());
                         break;
                     case 0x16:
                         position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE() * 0.01);
                         break;
                     case 0x19:
                         position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
                         break;
                     case 0x1A:
                         position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
                         break;
                     case 0x40:
                         position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());
                         break;
                     case 0x91:
                     case 0x92:
                         position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShortLE());
                         break;
                     case 0x98:
                         position.set(Position.KEY_FUEL_USED, buf.readUnsignedShortLE());
                         break;
                     case 0x99:
                         position.set(Position.KEY_RPM, buf.readUnsignedShortLE());
                         break;
                     case 0x9C:
                         position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShortLE());
                         break;
                     case 0x9F:
                         position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShortLE());
                         break;
                     case 0xC9:
                         position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShortLE());
                         break;
                     default:
                         buf.readUnsignedShortLE();
                         break;
                 }
             }
 
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 switch (id) {
                     case 0x02:
                         position.setLatitude(buf.readIntLE() * 0.000001);
                         break;
                     case 0x03:
                         position.setLongitude(buf.readIntLE() * 0.000001);
                         break;
                     case 0x04:
                         position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000)); // 2000-01-01
                         break;
                     case 0x0C:
                     case 0x9B:
                         position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
                         break;
                     case 0x0D:
                         position.set("runtime", buf.readUnsignedIntLE());
                         break;
                     case 0x25:
                         position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readUnsignedIntLE()));
                         break;
                     case 0xA0:
                         position.set(Position.KEY_FUEL_USED, buf.readUnsignedIntLE() * 0.001);
                         break;
                     case 0xA2:
                         position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedIntLE() * 0.01);
                         break;
                     default:
                         buf.readUnsignedIntLE();
                         break;
                 }
             }
 
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
                 int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 int length = buf.readUnsignedByte();
                 switch (id) {
                     case 0x2A:
                     case 0x2B:
                     case 0x2C:
                     case 0x2D:
                     case 0x2E:
                     case 0x2F:
                     case 0x30:
                     case 0x31:
                         buf.readUnsignedByte(); // label
                         position.set(Position.PREFIX_TEMP + (id - 0x2A), buf.readShortLE() * 0.01);
                         break;
                     case 0xFE31:
                         buf.readUnsignedByte(); // alarm protocol
                         buf.readUnsignedByte(); // alarm type
                         buf.skipBytes(length - 2);
                         break;
                     default:
                         buf.skipBytes(length);
                         break;
                 }
             }
 
             positions.add(position);
         }
+    } else if (type == 'E') {
+        int hardware = buf.readUnsignedShortLE();
+        int firmware = buf.readUnsignedShortLE();
+        int count = buf.readUnsignedShortLE();
+        for (int i = 0; i < count; i++) {
+            Position position = new Position(getProtocolName());
+            position.setDeviceId(deviceSession.getDeviceId());
+
+            position.set(Position.KEY_INDEX, buf.readUnsignedShortLE());
+
+            int paramCount = buf.readUnsignedByte();
+            for (int j = 0; j < paramCount; j++) {
+                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
+                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
+                if (id == 0xFE01 || id == 0xFE02) {
+                    buf.readUnsignedShortLE(); // event data
+                } else {
+                    buf.readUnsignedByte(); // event
+                }
+            }
+
+            paramCount = buf.readUnsignedByte();
+            for (int j = 0; j < paramCount; j++) {
+                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
+                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
+                switch (id) {
+                    case 0xFE03:
+                        buf.skipBytes(6); // accelerometer status
+                        break;
+                    case 0xFE04:
+                        buf.readUnsignedIntLE(); // gps data status
+                        break;
+                    case 0xFE0C:
+                        position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
+                        break;
+                    default:
+                        buf.skipBytes(4); // unknown
+                        break;
+                }
+            }
+
+            paramCount = buf.readUnsignedByte();
+            for (int j = 0; j < paramCount; j++) {
+                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
+                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
+                switch (id) {
+                    case 0x02:
+                        position.setLatitude(buf.readIntLE() * 0.000001);
+                        break;
+                    case 0x03:
+                        position.setLongitude(buf.readIntLE() * 0.000001);
+                        break;
+                    case 0x04:
+                        position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000)); // 2000-01-01
+                        break;
+                    case 0x05:
+                        position.setValid((buf.readUnsignedByte() & 0x01) != 0);
+                        break;
+                    case 0x06:
+                        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
+                        break;
+                    case 0x07:
+                        position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+                        break;
+                    case 0x08:
+                        position.setSpeed(buf.readUnsignedShortLE() * 0.1);
+                        break;
+                    case 0x09:
+                        position.setCourse(buf.readUnsignedShortLE());
+                        break;
+                    case 0x0A:
+                        position.set(Position.KEY_HDOP, buf.readUnsignedShortLE() * 0.1);
+                        break;
+                    case 0x0B:
+                        position.setAltitude(buf.readShortLE());
+                        break;
+                    case 0x0C:
+                        position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
+                        break;
+                    case 0x0D:
+                        position.set(Position.KEY_HOURS, buf.readUnsignedIntLE());
+                        break;
+                    case 0x10:
+                        position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0x11:
+                        position.set(Position.PREFIX_ADC + 2, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0x12:
+                        position.set(Position.PREFIX_ADC + 3, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0x13:
+                        position.set(Position.PREFIX_ADC + 4, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0x14:
+                        position.set(Position.PREFIX_ADC + 5, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0x15:
+                        position.set(Position.PREFIX_ADC + 6, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0x16:
+                        position.set(Position.PREFIX_ADC + 7, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0x17:
+                        position.set(Position.PREFIX_ADC + 8, buf.readUnsignedShortLE() * 0.001);
+                        break;
+                    case 0xFE10:
+                        position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
+                        break;
+                    case 0xFE11:
+                        position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
+                        break;
+                    default:
+                        buf.skipBytes(4);
+                        break;
+                }
+            }
+
+            paramCount = buf.readUnsignedByte();
+            for (int j = 0; j < paramCount; j++) {
+                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
+                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
+                int length = buf.readUnsignedByte();
+                buf.skipBytes(length);
+            }
+
+            positions.add(position);
+        }
+    }
 
     return positions;
 }
\ No newline at end of file
