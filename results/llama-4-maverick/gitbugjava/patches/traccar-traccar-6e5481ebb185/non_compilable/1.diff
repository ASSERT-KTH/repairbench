diff --git a/tmp/1895c9e7-98e4-4aed-84cb-c1f9bc664a3e_buggy.java b/tmp/169ad4ce-ed07-44c3-8af2-e907e0d273f2_fixed.java
index ee599aa..540d54b 100644
--- a/tmp/1895c9e7-98e4-4aed-84cb-c1f9bc664a3e_buggy.java
+++ b/tmp/169ad4ce-ed07-44c3-8af2-e907e0d273f2_fixed.java
@@ -1,50 +1,37 @@
     private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
 
         int length = 0;
         if (hasLength) {
             length = buf.readUnsignedByte();
-            if (length == 0) {
-                boolean zeroedData = true;
-                for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
-                    if (buf.getByte(i) != 0) {
-                        zeroedData = false;
-                        break;
-                    }
-                }
-                if (zeroedData) {
-                    buf.skipBytes(Math.min(buf.readableBytes(), 45));
-                }
-                return false;
-            }
         }
 
         int mcc = buf.readUnsignedShort();
         int mnc;
         if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
             mnc = buf.readUnsignedShort();
         } else {
             mnc = buf.readUnsignedByte();
         }
         int lac;
         if (type == MSG_LBS_ALARM) {
             lac = buf.readInt();
         } else {
             lac = buf.readUnsignedShort();
         }
         long cid;
         if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
             cid = buf.readLong();
         } else if (type == MSG_GPS_LBS_6) {
             cid = buf.readUnsignedInt();
         } else {
             cid = buf.readUnsignedMedium();
         }
 
         position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
-        if (length > 9) {
+        if (hasLength) {
             buf.skipBytes(length - 9);
         }
 
         return true;
     }
\ No newline at end of file
