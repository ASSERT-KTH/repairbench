diff --git a/tmp/b57e5a4b-6bf9-4c1c-81b5-28519a370d55_buggy.java b/tmp/88f72c2c-af81-4982-ba3a-1a99d6961bb8_fixed.java
index d87dd79..60b78f1 100644
--- a/tmp/b57e5a4b-6bf9-4c1c-81b5-28519a370d55_buggy.java
+++ b/tmp/88f72c2c-af81-4982-ba3a-1a99d6961bb8_fixed.java
@@ -1,47 +1,54 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
-        if (endIndex > 0) {
+    if (endIndex > 0 && endIndex <= buf.writerIndex()) { // Add a check to ensure endIndex is within the buffer
         ByteBuf frame = Unpooled.buffer();
+        buf.markReaderIndex(); // Mark the reader index before reading
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
+                if (buf.readerIndex() < endIndex) { // Check if there's a next byte to read
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
+                            buf.resetReaderIndex(); // Reset the reader index if an exception occurs
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
+                } else {
+                    buf.resetReaderIndex(); // Reset the reader index if there's no next byte to read
+                    throw new IllegalArgumentException("Incomplete escape sequence at the end of the buffer");
+                }
             } else {
                 frame.writeByte(b1);
             }
         }
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
