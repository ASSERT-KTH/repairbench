diff --git a/tmp/9d0a4056-c5ad-4325-8a92-41ba7b4f2d3c_buggy.java b/tmp/63dd0f70-42db-415e-be1e-c71947f1ca52_fixed.java
index c9c77a4..b0039e0 100644
--- a/tmp/9d0a4056-c5ad-4325-8a92-41ba7b4f2d3c_buggy.java
+++ b/tmp/63dd0f70-42db-415e-be1e-c71947f1ca52_fixed.java
@@ -1,35 +1,35 @@
     URL build() {
         try {
             // use the URI class to encode non-ascii in path
             URI uri = new URI(
                 u.getProtocol(),
                 u.getUserInfo(),
                 IDN.toASCII(decodePart(u.getHost())), // puny-code
                 u.getPort(),
-                decodePart(u.getPath()),
+                u.getPath(), // Don't decode the path to preserve existing encoding
                 null, null // query and fragment appended later so as not to encode
             );
 
             String normUrl = uri.toASCIIString();
             if (q != null || u.getRef() != null) {
                 StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
                 if (q != null) {
                     sb.append('?');
                     appendToAscii(StringUtil.releaseBuilder(q), true, sb);
                 }
                 if (u.getRef() != null) {
                     sb.append('#');
                     appendToAscii(u.getRef(), false, sb);
                 }
-                normUrl = StringUtil.releaseBuilder(sb);
+                normUrl = sb.toString(); // Use toString() instead of releasing the builder
+                StringUtil.releaseBuilder(sb); // Release the builder after use
             }
             u =  new URL(normUrl);
             return u;
-        } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
+        } catch (MalformedURLException | URISyntaxException e) {
             // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
             // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
             assert Validate.assertFail(e.toString());
             return u;
         }
     }
\ No newline at end of file
