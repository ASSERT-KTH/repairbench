diff --git a/tmp/0b5f1796-2bea-4253-9c99-9877d196167a_buggy.java b/tmp/05ecc8d2-6fca-478a-a88d-0597b10fe118_fixed.java
index 9739964..b30f2b0 100644
--- a/tmp/0b5f1796-2bea-4253-9c99-9877d196167a_buggy.java
+++ b/tmp/05ecc8d2-6fca-478a-a88d-0597b10fe118_fixed.java
@@ -1,27 +1,32 @@
 public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
           && prices[indexStack.peek()] <= prices[i])
         indexStack.pop();
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
       if (indexStack.isEmpty())
         spans[i] = i + 1;
       else
-        spans[i] = i - indexStack.peek();
+        spans[i] = i - indexStack.peek(); // This line is incorrect
+
+      // The correct line should be:
+      // spans[i] = (indexStack.isEmpty()) ? i + 1 : i - indexStack.peek();
+      // However, the issue lies in the fact that the current implementation is almost correct.
+      // The issue is due to not handling the case when prices are equal correctly.
 
       indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
