diff --git a/tmp/a95cf945-5e31-498e-970b-1d36ebec8c42_buggy.java b/tmp/cc8eac33-7fc6-43c0-93da-4b4d3099c77c_fixed.java
index 9739964..32e6006 100644
--- a/tmp/a95cf945-5e31-498e-970b-1d36ebec8c42_buggy.java
+++ b/tmp/cc8eac33-7fc6-43c0-93da-4b4d3099c77c_fixed.java
@@ -1,27 +1,28 @@
 public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
           && prices[indexStack.peek()] <= prices[i])
         indexStack.pop();
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
       if (indexStack.isEmpty())
         spans[i] = i + 1;
       else
-        spans[i] = i - indexStack.peek();
+        spans[i] = i - indexStack.peek(); // This line is incorrect. It should be 'spans[i] = (i - indexStack.peek())' is actually correct in terms of math, 
+                                          // but the logic is not entirely wrong. However, we need to ensure it aligns with the expected output for equal elements.
 
       indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
