diff --git a/tmp/fcb06967-1853-43c1-bc61-44d293dfa506_buggy.java b/tmp/fa8ed116-1365-4f6d-8a8c-ab8c31a7040a_fixed.java
index c84c989..48d66f3 100644
--- a/tmp/fcb06967-1853-43c1-bc61-44d293dfa506_buggy.java
+++ b/tmp/fa8ed116-1365-4f6d-8a8c-ab8c31a7040a_fixed.java
@@ -1,27 +1,33 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
-        buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    buf.readUnsignedIntLE(); // reserved / sequence
+    long timeValue = buf.readUnsignedIntLE();
+    position.setTime(convertIridiumTime(timeValue));
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
+
+private Date convertIridiumTime(long time) {
+    long offset = TimeZone.getDefault().getOffset(System.currentTimeMillis());
+    return new Date((time + 1393591200) * 1000L + offset);
+}
\ No newline at end of file
