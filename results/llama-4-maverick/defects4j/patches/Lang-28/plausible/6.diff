diff --git a/tmp/aac1d07d-6437-4cb5-89ed-3c76368f8969_buggy.java b/tmp/d9d769fa-d704-4a01-985d-1b7e96942062_fixed.java
index 4bbd561..720a5dc 100644
--- a/tmp/aac1d07d-6437-4cb5-89ed-3c76368f8969_buggy.java
+++ b/tmp/d9d769fa-d704-4a01-985d-1b7e96942062_fixed.java
@@ -1,37 +1,49 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        int length = input.length();
+        if(index + 1 >= length || input.charAt(index) != '&' || input.charAt(index + 1) != '#') {
+            return 0;
+        }
+
         int start = index + 2;
         boolean isHex = false;
 
         char firstChar = input.charAt(start);
         if(firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while(end < length && input.charAt(end) != ';') {
             end++;
         }
 
+        if(end >= length || input.charAt(end) != ';') {
+            return 0;
+        }
+
         int entityValue;
         try {
             if(isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch(NumberFormatException nfe) {
             return 0;
         }
 
+        if (entityValue > 0xFFFF) {
+            char[] ch = Character.toChars(entityValue);
+            out.write(ch[0]);
+            out.write(ch[1]);
+        } else {
             out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
-        return 0;
+
+        return end - index + 1;
     }
\ No newline at end of file
