diff --git a/tmp/ac3e72d1-df48-4eb4-bcd1-d740026044d5_buggy.java b/tmp/659ebf6a-18e0-4e19-adc8-a0ada4908c3f_fixed.java
index 373b1e8..8f20d6c 100644
--- a/tmp/ac3e72d1-df48-4eb4-bcd1-d740026044d5_buggy.java
+++ b/tmp/659ebf6a-18e0-4e19-adc8-a0ada4908c3f_fixed.java
@@ -1,37 +1,40 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
     int end;
     for (int j = input.length; i < j; ++i) {
         int o = input[i];
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
         // UTF-8 leading:
         if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
+            end = i + 2; // Changed to 2 to account for the lead and one following byte
         } else if ((o & 0xF0) == 0xE0) {
-                    end = i + 2;
+            end = i + 3; // Changed to 3 to account for the lead and two following bytes
         } else if ((o & 0xF8) == 0xF0) {
-                    end = i + 3;
+            end = i + 4; // Changed to 4 to account for the lead and three following bytes
         } else {
             return false;
         }
 
+        if(end > input.length) { // Added a check to prevent ArrayIndexOutOfBoundsException
+            return false;
+        }
 
-                while (i < end) {
+        while (i < end - 1) { // Changed to end - 1 to prevent ArrayIndexOutOfBoundsException
             i++;
             o = input[i];
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
