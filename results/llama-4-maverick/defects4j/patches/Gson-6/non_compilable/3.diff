diff --git a/tmp/d40c1ad0-f02a-462a-9384-aa32beeb3d0e_buggy.java b/tmp/81a71980-18c6-4810-af20-634379600232_fixed.java
index 1c53d31..c674142 100644
--- a/tmp/d40c1ad0-f02a-462a-9384-aa32beeb3d0e_buggy.java
+++ b/tmp/81a71980-18c6-4810-af20-634379600232_fixed.java
@@ -1,20 +1,23 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  // Only call nullSafe if the annotation doesn't specify it explicitly.
+  if (!annotation.nullSafe() && typeAdapter != null) {
     typeAdapter = typeAdapter.nullSafe();
+  }
   return typeAdapter;
 }
\ No newline at end of file
