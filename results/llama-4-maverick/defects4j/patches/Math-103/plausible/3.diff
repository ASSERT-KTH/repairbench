diff --git a/tmp/6fb8a14e-6a1a-4cdc-8fb9-77ec7f44f6ff_buggy.java b/tmp/e1c09606-9b00-408f-ba30-d764a7dd5be0_fixed.java
index 6cfa79b..3ff2eda 100644
--- a/tmp/6fb8a14e-6a1a-4cdc-8fb9-77ec7f44f6ff_buggy.java
+++ b/tmp/e1c09606-9b00-408f-ba30-d764a7dd5be0_fixed.java
@@ -1,12 +1,23 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
+     * convergence exception is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        try {
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MaxIterationsExceededException e) {
+            double dev = (x - mean) / standardDeviation;
+            if (dev > 20) {
+                return 1.0;
+            } else if (dev < -20) {
+                return 0.0;
+            } else {
+                throw e;
+            }
+        }
     }
\ No newline at end of file
