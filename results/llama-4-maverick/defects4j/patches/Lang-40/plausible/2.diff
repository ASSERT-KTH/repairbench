diff --git a/tmp/acf6e2bb-ceb4-4267-aa68-7ea956cef945_buggy.java b/tmp/a3e498e3-1768-4529-a3a5-89d870148309_fixed.java
index 562001a..036a2f4 100644
--- a/tmp/acf6e2bb-ceb4-4267-aa68-7ea956cef945_buggy.java
+++ b/tmp/a3e498e3-1768-4529-a3a5-89d870148309_fixed.java
@@ -1,29 +1,42 @@
-    /**
-     * <p>Checks if String contains a search String irrespective of case,
-     * handling <code>null</code>. Case-insensitivity is defined as by
-     * {@link String#equalsIgnoreCase(String)}.
-     *
-     * <p>A <code>null</code> String will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.contains(null, *) = false
-     * StringUtils.contains(*, null) = false
-     * StringUtils.contains("", "") = true
-     * StringUtils.contains("abc", "") = true
-     * StringUtils.contains("abc", "a") = true
-     * StringUtils.contains("abc", "z") = false
-     * StringUtils.contains("abc", "A") = true
-     * StringUtils.contains("abc", "Z") = false
-     * </pre>
-     *
-     * @param str  the String to check, may be null
-     * @param searchStr  the String to find, may be null
-     * @return true if the String contains the search String irrespective of
-     * case or false if not or <code>null</code> string input
-     */
 public static boolean containsIgnoreCase(String str, String searchStr) {
     if (str == null || searchStr == null) {
         return false;
     }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+    int len = searchStr.length();
+    int max = str.length() - len;
+    for (int i = 0; i <= max; i++) {
+        if (regionMatches(str, i, searchStr, 0, len, true)) {
+            return true;
+        }
+    }
+    return false;
+}
+
+private static boolean regionMatches(String str, int strStart, String searchStr, int searchStrStart, int len, boolean ignoreCase) {
+    if (str == null || searchStr == null) {
+        return false;
+    }
+    if (strStart < 0 || searchStrStart < 0 || strStart + len > str.length() || searchStrStart + len > searchStr.length()) {
+        return false;
+    }
+    if (len <= 0) {
+        return true;
+    }
+    if (ignoreCase) {
+        for (int i = 0; i < len; i++) {
+            char c1 = str.charAt(strStart + i);
+            char c2 = searchStr.charAt(searchStrStart + i);
+            if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2) && 
+                Character.toLowerCase(c1) != Character.toLowerCase(c2)) {
+                return false;
+            }
+        }
+    } else {
+        for (int i = 0; i < len; i++) {
+            if (str.charAt(strStart + i) != searchStr.charAt(searchStrStart + i)) {
+                return false;
+            }
+        }
+    }
+    return true;
 }
\ No newline at end of file
