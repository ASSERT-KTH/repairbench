diff --git a/tmp/4514a90f-3c48-4be5-a2c3-c3dab2d266f9_buggy.java b/tmp/f239bb2e-636d-4781-a8e4-af6134fdf9b2_fixed.java
index 98dde53..56b734e 100644
--- a/tmp/4514a90f-3c48-4be5-a2c3-c3dab2d266f9_buggy.java
+++ b/tmp/f239bb2e-636d-4781-a8e4-af6134fdf9b2_fixed.java
@@ -1,34 +1,39 @@
 public void head(org.jsoup.nodes.Node source, int depth) {
     namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
     if (source instanceof org.jsoup.nodes.Element) {
         org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
         String prefix = updateNamespaces(sourceEl);
         String namespace = namespacesStack.peek().get(prefix);
         String tagName = sourceEl.tagName();
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
+        // Check if the namespace is null or empty before creating the element
+        Element el;
+        if (namespace == null || namespace.isEmpty()) {
+            el = doc.createElement(tagName);
+        } else {
+            el = doc.createElementNS(namespace, tagName);
+        }
         copyAttributes(sourceEl, el);
         if (dest == null) { // sets up the root
             doc.appendChild(el);
         } else {
             dest.appendChild(el);
         }
         dest = el; // descend
     } else if (source instanceof org.jsoup.nodes.TextNode) {
         org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
         Text text = doc.createTextNode(sourceText.getWholeText());
         dest.appendChild(text);
     } else if (source instanceof org.jsoup.nodes.Comment) {
         org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
         Comment comment = doc.createComment(sourceComment.getData());
         dest.appendChild(comment);
     } else if (source instanceof org.jsoup.nodes.DataNode) {
         org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
         Text node = doc.createTextNode(sourceData.getWholeData());
         dest.appendChild(node);
     } else {
         // unhandled
     }
 }
\ No newline at end of file
