diff --git a/tmp/91a7b143-9a68-4b70-bcd2-35e7819356b1_buggy.java b/tmp/b604c578-fa94-4edf-afd7-279a9a8c472b_fixed.java
index b5d94e0..e4f3ec0 100644
--- a/tmp/91a7b143-9a68-4b70-bcd2-35e7819356b1_buggy.java
+++ b/tmp/b604c578-fa94-4edf-afd7-279a9a8c472b_fixed.java
@@ -1,26 +1,25 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
-    int visits = 0;
-    do {
+  boolean shouldRetraverse = true;
+  for (int visits = 0; shouldRetraverse; visits++) {
+    Preconditions.checkState(visits < 10000, "too many iterations");
     Node c = node.getFirstChild();
     while(c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
     visit(node);
-      visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+    shouldRetraverse = shouldRetraverse(node);
+  }
 
   exitNode(node);
 }
\ No newline at end of file
