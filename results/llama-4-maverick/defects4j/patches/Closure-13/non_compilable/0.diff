diff --git a/tmp/9f867d3f-2f8f-4ca9-a2f2-e7d6429b7461_buggy.java b/tmp/be000dc6-4e09-4e53-b4cc-5ab25f6df59e_fixed.java
index b5d94e0..b46e7c4 100644
--- a/tmp/9f867d3f-2f8f-4ca9-a2f2-e7d6429b7461_buggy.java
+++ b/tmp/be000dc6-4e09-4e53-b4cc-5ab25f6df59e_fixed.java
@@ -1,26 +1,34 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
+    boolean childHasChanged = false;
     while(c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
+    // Check if any of the children have changed
+    for (Node child = node.getFirstChild(); child != null; child = child.getNext()) {
+      if (shouldRetraverse(child)) {
+        childHasChanged = true;
+        break;
+      }
+    }
 
     visit(node);
     visits++;
 
     Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+  } while (childHasChanged || shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
