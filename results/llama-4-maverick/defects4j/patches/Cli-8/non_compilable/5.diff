diff --git a/tmp/2c76c27f-0802-4934-83b6-c21ac4122055_buggy.java b/tmp/a91fb1ee-1c01-4cf9-a37e-99615e298155_fixed.java
index 8e93a5e..0978c93 100644
--- a/tmp/2c76c27f-0802-4934-83b6-c21ac4122055_buggy.java
+++ b/tmp/a91fb1ee-1c01-4cf9-a37e-99615e298155_fixed.java
@@ -1,43 +1,58 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
+    int pos;
+    int newLinePos = text.indexOf(defaultNewLine);
+    while (newLinePos != -1 && newLinePos < text.length() - defaultNewLine.length()) {
+        // we found a new line character, let's process this line
+        // first, adjust pos for the case that the new line is the
+        // first char of the remaining text
+        if (newLinePos == 0) {
+            text = text.substring(defaultNewLine.length());
+            newLinePos = text.indexOf(defaultNewLine);
+            continue;
+        }
+        pos = findWrapPos(text, width, 0);
+        if (pos == -1 || pos > newLinePos) {
+            // no need to wrap, or next line is too short to be wrapped, just append it
+            sb.append(rtrim(text.substring(0, newLinePos)));
+            sb.append(defaultNewLine);
+            text = text.substring(newLinePos + defaultNewLine.length());
+        } else {
+            // we need to wrap and newline was not at end, so we need to process the line
+            sb.append(rtrim(text.substring(0, pos)));
+            sb.append(defaultNewLine);
+            text = padding + text.substring(pos).trim();
+        }
+        newLinePos = text.indexOf(defaultNewLine);
+    }
+
+    pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, nextLineTabStop);
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
