diff --git a/tmp/f842c9b9-f08a-44fb-ac60-c270cd431898_buggy.java b/tmp/84b59ca9-84a3-425e-bde9-c3bb3ddf04e4_fixed.java
index e69de29..43a938a 100644
--- a/tmp/f842c9b9-f08a-44fb-ac60-c270cd431898_buggy.java
+++ b/tmp/84b59ca9-84a3-425e-bde9-c3bb3ddf04e4_fixed.java
@@ -0,0 +1,26 @@
+protected void _addFields(Class<?> type, BeanDescription beanDesc, TypeBindings bindings, Map<String, AnnotatedMember> fields) {
+    // first: super-class(es)
+    Class<?> parent = type.getSuperclass();
+    if (parent != null) {
+        _addFields(parent, beanDesc, bindings, fields);
+    }
+    // then fields from the class itself:
+    for (BeanPropertyDefinition d : beanDesc.findProperties()) {
+        // [databind#953]: Ignore @Transient properties
+        if (d.isTransient()) {
+            continue;
+        }
+        AnnotatedMember m = d.getAccessor();
+        // only getter/setter, not ctor params (for now?)
+        if (m != null && !m.getDeclaringClass().isInterface()) {
+            String name = d.getName();
+            // 26-Nov-2016, tatu: Ignore name of `log`, since that's very likely
+            //    "logger" field (and if not, is still a very unlikely property
+            //    name); and usually static (but not always, which is why we can
+            //    not just check that)
+            if (!name.equals("log")) {
+                fields.put(name, m);
+            }
+        }
+    }
+}
\ No newline at end of file
