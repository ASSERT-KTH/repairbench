diff --git a/tmp/fbdfad3d-cbff-4da1-985c-ccb74b852c81_buggy.java b/tmp/9025f24a-2c75-4402-a801-1beac0a4a2b3_fixed.java
index 21f64c6..d73cbd3 100644
--- a/tmp/fbdfad3d-cbff-4da1-985c-ccb74b852c81_buggy.java
+++ b/tmp/9025f24a-2c75-4402-a801-1beac0a4a2b3_fixed.java
@@ -1,23 +1,29 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
+            if (startChar != input[offset]) {
                 while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
+            }
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                int i = offset + 1;
+                int last = offset + seq.length();
+                if (last <= length) {
+                    int j = 1;
+                    while (i < last && seq.charAt(j) == input[i]) {
+                        i++;
+                        j++;
+                    }
                     if (i == last) // found full sequence
                         return offset - pos;
                 }
             }
+        }
         return -1;
     }
\ No newline at end of file
