diff --git a/tmp/8a298328-7340-482b-9651-7560da677d52_buggy.java b/tmp/729e4af1-c31c-4023-8635-bc1e2fac1578_fixed.java
index 21f64c6..2058e80 100644
--- a/tmp/8a298328-7340-482b-9651-7560da677d52_buggy.java
+++ b/tmp/729e4af1-c31c-4023-8635-bc1e2fac1578_fixed.java
@@ -1,23 +1,26 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
+            if (startChar != input[offset]) {
                 while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
+            }
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                int i = 1;
+                int last = seq.length() - 1;
+                int remainingChars = length - offset;
+                while (i <= last && i < remainingChars && seq.charAt(i) == input[offset + i]) {
+                    i++;
+                }
+                if (i > last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
