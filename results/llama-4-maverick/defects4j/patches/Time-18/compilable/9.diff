diff --git a/tmp/068b8539-82ce-44aa-b2aa-f9b6408c8196_buggy.java b/tmp/46812541-3cf2-4ca1-b40d-9b1b53ce5275_fixed.java
index be2af16..975954f 100644
--- a/tmp/068b8539-82ce-44aa-b2aa-f9b6408c8196_buggy.java
+++ b/tmp/46812541-3cf2-4ca1-b40d-9b1b53ce5275_fixed.java
@@ -1,29 +1,29 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    long instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+        long julianInstant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
+        if (julianInstant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
+        instant = julianInstant;
     }
     return instant;
 }
\ No newline at end of file
