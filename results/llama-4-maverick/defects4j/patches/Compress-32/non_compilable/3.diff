diff --git a/tmp/fd98ec4b-adb7-4feb-8e3c-c5a5698cd8d4_buggy.java b/tmp/49d7339f-5060-400d-bdf2-2339e7141da6_fixed.java
index 711e87d..be306ed 100644
--- a/tmp/fd98ec4b-adb7-4feb-8e3c-c5a5698cd8d4_buggy.java
+++ b/tmp/49d7339f-5060-400d-bdf2-2339e7141da6_fixed.java
@@ -1,38 +1,46 @@
 private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
     /*
      * The following headers are defined for Pax.
      * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
      * mtime
      * comment
      * gid, gname
      * linkpath
      * size
      * uid,uname
      * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
      */
     for (Entry<String, String> ent : headers.entrySet()){
         String key = ent.getKey();
         String val = ent.getValue();
         if ("path".equals(key)){
             currEntry.setName(val);
         } else if ("linkpath".equals(key)){
             currEntry.setLinkName(val);
         } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
+            currEntry.setGroupId(parseLongOrUnsignedLong(val));
         } else if ("gname".equals(key)){
             currEntry.setGroupName(val);
         } else if ("uid".equals(key)){
-                currEntry.setUserId(Integer.parseInt(val));
+            currEntry.setUserId((int) parseLongOrUnsignedLong(val));
         } else if ("uname".equals(key)){
             currEntry.setUserName(val);
         } else if ("size".equals(key)){
-                currEntry.setSize(Long.parseLong(val));
+            currEntry.setSize(parseLongOrUnsignedLong(val));
         } else if ("mtime".equals(key)){
             currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
         } else if ("SCHILY.devminor".equals(key)){
-                currEntry.setDevMinor(Integer.parseInt(val));
+            currEntry.setDevMinor((int) parseLongOrUnsignedLong(val));
         } else if ("SCHILY.devmajor".equals(key)){
-                currEntry.setDevMajor(Integer.parseInt(val));
+            currEntry.setDevMajor((int) parseLongOrUnsignedLong(val));
         }
     }
 }
+
+private long parseLongOrUnsignedLong(String val) {
+    try {
+        return Long.parseLong(val);
+    } catch (NumberFormatException e) {
+        return new BigInteger(val).longValue();
+    }
+}
\ No newline at end of file
