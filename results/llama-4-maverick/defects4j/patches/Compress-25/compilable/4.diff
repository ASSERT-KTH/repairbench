diff --git a/tmp/7b117f74-4bb1-4090-a822-6f7064cf8665_buggy.java b/tmp/0f23f0c1-81d1-4bd0-8053-ff9aabf9bdfb_fixed.java
index 6c0aa19..02de92e 100644
--- a/tmp/7b117f74-4bb1-4090-a822-6f7064cf8665_buggy.java
+++ b/tmp/0f23f0c1-81d1-4bd0-8053-ff9aabf9bdfb_fixed.java
@@ -1,20 +1,33 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
         in = new PushbackInputStream(inputStream, buf.capacity());
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
+        try {
+            if (in.available() == 0) {
+                in.mark(1);
+                int b = in.read();
+                if (b == -1) {
+                    // the zip file is empty
+                } else {
+                    in.reset();
+                }
+            }
+        } catch (IOException e) {
+            // swallow IOException, ZIP signature will be checked elsewhere
+        }
     }
\ No newline at end of file
