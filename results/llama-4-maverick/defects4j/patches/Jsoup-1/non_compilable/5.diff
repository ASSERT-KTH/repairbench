diff --git a/tmp/6cc4f2a5-2d19-467b-8721-96df881a8967_buggy.java b/tmp/0b5c4d78-6a25-42bb-9f7b-7f63244f9a88_fixed.java
index 00914da..e0d82e6 100644
--- a/tmp/6cc4f2a5-2d19-467b-8721-96df881a8967_buggy.java
+++ b/tmp/0b5c4d78-6a25-42bb-9f7b-7f63244f9a88_fixed.java
@@ -1,17 +1,20 @@
 // does not recurse.
 private void normalise(Element element) {
     List<Node> toMove = new ArrayList<Node>();
     for (Node node: element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
             if (!tn.isBlank())
                 toMove.add(tn);
         }
     }
 
     for (Node node: toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        body().prependChild(node); // prepend instead of append
+    }
+    // Only add a space if there are text nodes to move and the first child is not a text node or it's not a space
+    if (!toMove.isEmpty() && !(body().child(0) instanceof TextNode && ((TextNode) body().child(0)).getWholeText().startsWith(" "))) {
+        body().prependChild(new TextNode(" ", ""));
     }
 }
\ No newline at end of file
