diff --git a/tmp/ac48ff57-676a-4dfc-b9b2-bb648d5c729c_buggy.java b/tmp/f2807795-e9b1-40b8-ae92-ee5c546e028e_fixed.java
index 0f439b3..b753bd7 100644
--- a/tmp/ac48ff57-676a-4dfc-b9b2-bb648d5c729c_buggy.java
+++ b/tmp/f2807795-e9b1-40b8-ae92-ee5c546e028e_fixed.java
@@ -1,38 +1,25 @@
-    /**
-     * Reads bytes from the current tar archive entry.
-     *
-     * This method is aware of the boundaries of the current
-     * entry in the archive and will deal with them as if they
-     * were this stream's start and EOF.
-     *
-     * @param buf The buffer into which to place bytes read.
-     * @param offset The offset at which to place bytes read.
-     * @param numToRead The number of bytes to read.
-     * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
-     */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
     int totalRead = 0;
 
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
 
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
 
     numToRead = Math.min(numToRead, available());
     
     totalRead = is.read(buf, offset, numToRead);
     count(totalRead);
     
     if (totalRead == -1) {
-            hasHitEOF = true;
+        throw new IOException("Truncated TAR archive");
     } else {
         entryOffset += totalRead;
     }
 
     return totalRead;
 }
\ No newline at end of file
