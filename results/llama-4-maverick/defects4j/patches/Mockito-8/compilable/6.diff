diff --git a/tmp/f576ef04-12d8-4bdf-8c7e-d15d5a75baea_buggy.java b/tmp/4fa80e48-4ff8-4fca-9542-0a1253cd161a_fixed.java
index 42b58d0..4c49581 100644
--- a/tmp/f576ef04-12d8-4bdf-8c7e-d15d5a75baea_buggy.java
+++ b/tmp/4fa80e48-4ff8-4fca-9542-0a1253cd161a_fixed.java
@@ -1,19 +1,24 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // Check for self-referential type parameters to avoid infinite recursion
+        if (actualTypeArgument instanceof TypeVariable && ((TypeVariable) actualTypeArgument).getName().equals(typeParameter.getName())) {
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
