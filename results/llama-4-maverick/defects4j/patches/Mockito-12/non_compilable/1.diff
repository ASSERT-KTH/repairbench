diff --git a/tmp/9f48b233-10e3-411c-898f-7c9148e9924a_buggy.java b/tmp/dfb7c60b-e05c-4937-808e-5ffd7865abd9_fixed.java
index bada2b6..09920a8 100644
--- a/tmp/9f48b233-10e3-411c-898f-7c9148e9924a_buggy.java
+++ b/tmp/dfb7c60b-e05c-4937-808e-5ffd7865abd9_fixed.java
@@ -1,16 +1,25 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            if (actual instanceof Class) {
                 return (Class) actual;
-                //in case of nested generics we don't go deep
+            } else if (actual instanceof ParameterizedType) {
+                return (Class) ((ParameterizedType) actual).getRawType();
+            } else if (actual instanceof TypeVariable) {
+                //TODO it should look at the class generic declaration and so on
+                return Object.class;
+            } else {
+                //it is some other fancy type, let's get out
+                return Object.class;
+            }
         }
         
         return Object.class;
     }
\ No newline at end of file
