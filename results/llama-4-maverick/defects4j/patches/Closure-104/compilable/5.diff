diff --git a/tmp/d660705b-c40a-4923-bab5-31e43752302c_buggy.java b/tmp/3e8adb0a-f574-49bb-af53-d9cab7aa7ffa_fixed.java
index b36b2a9..bef4363 100644
--- a/tmp/d660705b-c40a-4923-bab5-31e43752302c_buggy.java
+++ b/tmp/3e8adb0a-f574-49bb-af53-d9cab7aa7ffa_fixed.java
@@ -1,26 +1,31 @@
 JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
         }
       }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
     }
     JSType result = builder.build();
     if (result != null) {
       return result;
     } else if (this.isObject() && that.isObject()) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
+    } else if (this.isAllType() || that.isAllType()) {
+      // If one of the types is a top type, we can't just return NO_TYPE,
+      // because the meet of (number|Array<string>) and (string|Array<number>)
+      // should be (string|Array<(string|number)>), not the None type.
+      return getNativeType(JSTypeNative.NO_TYPE);
     } else {
       return getNativeType(JSTypeNative.NO_TYPE);
     }
 }
\ No newline at end of file
