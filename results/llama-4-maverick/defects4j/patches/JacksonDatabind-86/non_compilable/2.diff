diff --git a/tmp/15767e5d-e6b5-4e3d-8820-ffb70920043b_buggy.java b/tmp/a2814c58-5d15-400a-8a6b-1858286e5b50_fixed.java
index e69de29..011ceb7 100644
--- a/tmp/15767e5d-e6b5-4e3d-8820-ffb70920043b_buggy.java
+++ b/tmp/a2814c58-5d15-400a-8a6b-1858286e5b50_fixed.java
@@ -0,0 +1,41 @@
+protected JavaType _fromClass(Class<?> clz, TypeBindings context, 
+                              RecursiveTypeBindings typeBindings)
+{
+    // 18-Apr-2019, tatu: Not certain whether we should try to "resolveSelf" or not.
+    //   One difference would be between "untyped" (simple class) and fully typed
+    //   recursive type; although both seem to require similar handling.
+    //   For now, let's pass `false` as seems to work
+    JavaType selfRef = _findRecursiveType(clz, context, typeBindings, false);
+    if (selfRef != null) {
+        return selfRef;
+    }
+    // First: do we have an instance?
+    JavaType result = _typeCache.find(clz);
+    if (result != null) {
+        return result;
+    }
+
+    // If not, need to start from superclasses/interfaces
+    // 25-Jan-2019, tatu: as per [databind#2197], need to pre-emptively add placeholder
+    //   for recursive type (if any)
+    JavaType superClass;
+    JavaType[] superInterfaces;
+
+    // Ok: let's build it
+    if (typeBindings == null) {
+        typeBindings = new RecursiveTypeBindings(this, clz);
+    } else {
+        typeBindings = typeBindings.child(clz);
+    }
+    synchronized (typeBindings) {
+        superClass = _fromAny(typeBindings, clz.getSuperclass(), typeBindings);
+        superInterfaces = _resolveTypeBindings(typeBindings, clz.getGenericInterfaces());
+        result = new SimpleType(this, clz, typeBindings, superClass, superInterfaces);
+        // 25-Jan-2019, tatu: Need to add placeholder for recursive type (if any)...
+        if (!typeBindings.isEmpty()) {
+            JavaType placeholder = typeBindings.asPlaceholderJavaType(clz);
+            placeholder.setValue(result);
+        }
+    }
+    return _typeCache.add(clz, result);
+}
\ No newline at end of file
