diff --git a/tmp/3d69587c-5927-4774-9f08-1a8d12a45d45_buggy.java b/tmp/e037cb48-a76b-4288-a41a-991a6696e74f_fixed.java
index 1530b34..41f2b02 100644
--- a/tmp/3d69587c-5927-4774-9f08-1a8d12a45d45_buggy.java
+++ b/tmp/e037cb48-a76b-4288-a41a-991a6696e74f_fixed.java
@@ -1,23 +1,32 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode,
                   jsDocParameter.getJSType(), true);
               jsDocParameter = jsDocParameter.getNext();
             } else {
-              defineSlot(astParameter, functionNode, null, true);
+              // Don't define a slot for the argument if it's not in the
+              // JSDoc. This allows for cases where a function is called with
+              // more arguments than it declares. If the JSDoc has a JsDoc type
+              // for this argument, the type-checker will still check the type
+              // of the argument (see TypeCheck#checkCall).
+              break;
             }
           }
         }
       }
+      // Declare the arguments array.
+      if (functionType != null && functionType.isOrdinaryFunction()) {
+        declareArgumentsArrayVar(functionNode);
+      }
     } // end declareArguments
\ No newline at end of file
