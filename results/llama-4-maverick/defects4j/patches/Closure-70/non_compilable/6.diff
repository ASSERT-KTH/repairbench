diff --git a/tmp/8ea2b371-2871-45fa-89b6-4115c0d85f3e_buggy.java b/tmp/1d397a07-6eaa-445a-8bbf-027d255e7e7c_fixed.java
index 1530b34..9372adb 100644
--- a/tmp/8ea2b371-2871-45fa-89b6-4115c0d85f3e_buggy.java
+++ b/tmp/1d397a07-6eaa-445a-8bbf-027d255e7e7c_fixed.java
@@ -1,23 +1,34 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
-      if (functionType != null) {
+      if (functionType != null && functionType.isFunctionType()) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode,
                   jsDocParameter.getJSType(), true);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);
             }
           }
+        } else {
+          // If there is no JSDoc parameter type, we should still give the
+          // parameter a "declared type" of 'unknown', so that the
+          // "inferred type" can be properly set later. If the parameter
+          // is named, set the type to Unknown, otherwise it's
+          // NoType (not declared).
+          for (Node astParameter : astParameters.children()) {
+            defineSlot(astParameter, functionNode,
+                astParameter.getString().isEmpty() ? null : getNativeType(UNKNOWN_TYPE),
+                false);
+          }
         }
       }
     } // end declareArguments
\ No newline at end of file
