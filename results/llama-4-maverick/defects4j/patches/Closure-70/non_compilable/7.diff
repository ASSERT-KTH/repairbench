diff --git a/tmp/af6d7197-28ee-4eaa-9252-0d673c6b7702_buggy.java b/tmp/16e7ba0d-2183-468a-9709-656b3b7399b5_fixed.java
index 1530b34..ae09daa 100644
--- a/tmp/af6d7197-28ee-4eaa-9252-0d673c6b7702_buggy.java
+++ b/tmp/16e7ba0d-2183-468a-9709-656b3b7399b5_fixed.java
@@ -1,23 +1,33 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType != null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters != null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
         if (jsDocParameter != null) {
           defineSlot(astParameter, functionNode,
               jsDocParameter.getJSType(), true);
           jsDocParameter = jsDocParameter.getNext();
         } else {
+          // The jsDocParameter can be null if the function has more
+          // arguments than are documented.
           defineSlot(astParameter, functionNode, null, true);
         }
       }
+    } else {
+      // If the function has no JsDoc parameters but is a function type,
+      // we should still declare the arguments. We don't declare
+      // an arguments slot for lazy functions because 'arguments' is a
+      // reserved variable that shouldn't be used.
+      for (Node astParameter : astParameters.children()) {
+        defineSlot(astParameter, functionNode, null, true);
+      }
     }
   }
 } // end declareArguments
\ No newline at end of file
