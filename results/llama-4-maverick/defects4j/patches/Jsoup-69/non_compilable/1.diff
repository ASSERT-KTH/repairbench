diff --git a/tmp/f6b8289f-3eca-4631-8ea9-825882e99080_buggy.java b/tmp/7f9f3f11-8aab-4a81-ab11-d82ec5fb6b14_fixed.java
index e69de29..53f16bb 100644
--- a/tmp/f6b8289f-3eca-4631-8ea9-825882e99080_buggy.java
+++ b/tmp/7f9f3f11-8aab-4a81-ab11-d82ec5fb6b14_fixed.java
@@ -0,0 +1,86 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> formData = new ArrayList<>();
+
+    for (Element el : this.children()) {
+        if (!el.hasAttr("disabled")) {
+            if (el.tag().getName().equals("input")) {
+                if (el.attr("type").equals("radio") || el.attr("type").equals("checkbox")) {
+                    if (el.hasAttr("checked")) {
+                        formData.add(new HttpConnection.KeyVal(el.attr("name"), el.val()));
+                    }
+                } else {
+                    formData.add(new HttpConnection.KeyVal(el.attr("name"), el.val()));
+                }
+            } else if (el.tag().getName().equals("button") && el.hasAttr("name")) {
+                formData.add(new HttpConnection.KeyVal(el.attr("name"), el.val()));
+            } else if (el.tag().getName().equals("textarea")) {
+                formData.add(new HttpConnection.KeyVal(el.attr("name"), el.ownText()));
+            } else if (el.tag().getName().equals("select")) {
+                Elements options = el.select("option[selected]");
+                boolean hasDefault = false;
+                for (Element option : options) {
+                    if (option.hasAttr("value")) {
+                        formData.add(new HttpConnection.KeyVal(el.attr("name"), option.attr("value")));
+                    } else {
+                        formData.add(new HttpConnection.KeyVal(el.attr("name"), option.text()));
+                    }
+                    hasDefault = true;
+                }
+                if (!hasDefault) {
+                    Element first = el.select("option").first();
+                    if (first != null) {
+                        if (first.hasAttr("value")) {
+                            formData.add(new HttpConnection.KeyVal(el.attr("name"), first.attr("value")));
+                        } else {
+                            formData.add(new HttpConnection.KeyVal(el.attr("name"), first.text()));
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    // iterate over form elements that are not children of this form (e.g. form controls referenced by a <input form="id">)
+    Elements inputs = getDocument().getElementsByAttribute("form");
+    for (Element input : inputs) {
+        if (input.attr("form").equals(this.attr("id")) && !input.hasAttr("disabled")) {
+            if (input.tag().getName().equals("input")) {
+                if (input.attr("type").equals("radio") || input.attr("type").equals("checkbox")) {
+                    if (input.hasAttr("checked")) {
+                        formData.add(new HttpConnection.KeyVal(input.attr("name"), input.val()));
+                    }
+                } else {
+                    formData.add(new HttpConnection.KeyVal(input.attr("name"), input.val()));
+                }
+            } else if (input.tag().getName().equals("button") && input.hasAttr("name")) {
+                formData.add(new HttpConnection.KeyVal(input.attr("name"), input.val()));
+            } else if (input.tag().getName().equals("textarea")) {
+                formData.add(new HttpConnection.KeyVal(input.attr("name"), input.ownText()));
+            } else if (input.tag().getName().equals("select")) {
+                Elements options = input.select("option[selected]");
+                boolean hasDefault = false;
+                for (Element option : options) {
+                    if (option.hasAttr("value")) {
+                        formData.add(new HttpConnection.KeyVal(input.attr("name"), option.attr("value")));
+                    } else {
+                        formData.add(new HttpConnection.KeyVal(input.attr("name"), option.text()));
+                    }
+                    hasDefault = true;
+                }
+                if (!hasDefault) {
+                    Element first = input.select("option").first();
+                    if (first != null) {
+                        if (first.hasAttr("value")) {
+                            formData.add(new HttpConnection.KeyVal(input.attr("name"), first.attr("value")));
+                        } else {
+                            formData.add(new HttpConnection.KeyVal(input.attr("name"), first.text()));
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    return formData;
+}
\ No newline at end of file
