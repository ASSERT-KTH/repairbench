diff --git a/tmp/864186f6-3c65-43a7-b996-b5c7f06f018f_buggy.java b/tmp/b58980e6-8b64-4297-8669-ca84858a4fb5_fixed.java
index 3002587..798044b 100644
--- a/tmp/864186f6-3c65-43a7-b996-b5c7f06f018f_buggy.java
+++ b/tmp/b58980e6-8b64-4297-8669-ca84858a4fb5_fixed.java
@@ -1,10 +1,23 @@
     /**
      * Fits a Gaussian function to the observed points.
      *
      * @return the parameters of the Gaussian function that best fits the
      * observed points (in the same order as above).
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+        // Add constraints to the optimizer to ensure that the parameters are positive.
+        LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer();
+        optimizer.setParameterGuesser(new SimpleBoundsLevenbergMarquardtOptimizer.ParameterGuesser() {
+            @Override
+            public double[] guess(double[] initialGuess) {
+                double[] newGuess = initialGuess.clone();
+                // Ensure that the initial guess for the norm is positive.
+                newGuess[0] = Math.abs(newGuess[0]);
+                // Ensure that the initial guess for the sigma is positive.
+                newGuess[2] = Math.abs(newGuess[2]);
+                return newGuess;
+            }
+        });
+        return fit(optimizer, guess);
     }
\ No newline at end of file
