diff --git a/tmp/9fee4c14-0865-4cb2-ae25-11436847435c_buggy.java b/tmp/0a8dba61-9ae1-4633-96a6-9f5292b92b1b_fixed.java
index bfa2423..af445ce 100644
--- a/tmp/9fee4c14-0865-4cb2-ae25-11436847435c_buggy.java
+++ b/tmp/0a8dba61-9ae1-4633-96a6-9f5292b92b1b_fixed.java
@@ -1,23 +1,23 @@
     /**
      * Generate a random sample from the distribution.
      *
      * @param sampleSize the number of random values to generate.
      * @return an array representing the random sample.
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
-    public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
+    public Object[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        final Object[] out = new Object[sampleSize];
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
 
         return out;
 
     }
