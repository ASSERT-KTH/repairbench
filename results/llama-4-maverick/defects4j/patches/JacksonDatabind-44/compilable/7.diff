diff --git a/tmp/63fd8036-6478-40ec-82de-50b4ad20918a_buggy.java b/tmp/e72548fa-f66e-4ce0-8f46-72127f5af118_fixed.java
index 1a63a66..bddfa29 100644
--- a/tmp/63fd8036-6478-40ec-82de-50b4ad20918a_buggy.java
+++ b/tmp/e72548fa-f66e-4ce0-8f46-72127f5af118_fixed.java
@@ -1,21 +1,16 @@
 @Override
 @Deprecated
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
     // 15-Jan-2016, tatu: Almost yes, but there are some complications with
     //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
+    if(!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+    }
+    JavaType subtype = TypeFactory.defaultInstance().constructSpecializedType(this, subclass);
+    return subtype;
 }
\ No newline at end of file
