diff --git a/tmp/50bb0aba-bcf0-4d56-a063-024600b924c5_buggy.java b/tmp/dc5837e7-e72c-4551-bb0e-1b9ada10aa7a_fixed.java
index 39dd8e7..a40e070 100644
--- a/tmp/50bb0aba-bcf0-4d56-a063-024600b924c5_buggy.java
+++ b/tmp/dc5837e7-e72c-4551-bb0e-1b9ada10aa7a_fixed.java
@@ -1,30 +1,34 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
+            tq.consume(); // Consume the closing SQ
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
+            tq.consume(); // Consume the closing DQ
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
     if (key.length() != 0)
         return Attribute.createFromEncoded(key, value);
     else {
+        // Prevent infinite loop when encountering invalid attributes
+        if (!tq.isEmpty() && !tq.matchesAny("<", "/>", ">")) {
             tq.consume();
-                
+        }
         return null;
     }
 }
\ No newline at end of file
