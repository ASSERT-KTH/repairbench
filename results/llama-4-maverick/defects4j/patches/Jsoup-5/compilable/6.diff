diff --git a/tmp/12cb3272-b18a-42d8-9268-82645f4d594a_buggy.java b/tmp/a0a41777-5584-4479-b775-a8ae585d86e4_fixed.java
index 39dd8e7..451b11b 100644
--- a/tmp/12cb3272-b18a-42d8-9268-82645f4d594a_buggy.java
+++ b/tmp/a0a41777-5584-4479-b775-a8ae585d86e4_fixed.java
@@ -1,30 +1,32 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
+            tq.matchChomp(SQ); // consume closing '
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
+            tq.matchChomp(DQ); // consume closing "
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    if (!key.isEmpty())
         return Attribute.createFromEncoded(key, value);
     else {
-            tq.consume();
-                
+        // If the key is empty, it means we encountered something like "=value" or " = ".
+        // In this case, we should return null and let the parser handle the rest.
         return null;
     }
 }
\ No newline at end of file
