diff --git a/tmp/fa78342c-189f-45de-bd10-ca127b20a89d_buggy.java b/tmp/d60e167c-a026-4f9e-8707-94f25acf0f7f_fixed.java
index 08a41cf..8ed83c8 100644
--- a/tmp/fa78342c-189f-45de-bd10-ca127b20a89d_buggy.java
+++ b/tmp/d60e167c-a026-4f9e-8707-94f25acf0f7f_fixed.java
@@ -1,12 +1,18 @@
     /**
      * Overloaded version of {@link #readValue(InputStream)}.
      */
     public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
         throws IOException, JsonProcessingException
     {
         if (_dataFormatReaders != null) {
             return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
         }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
-                true));
+        JsonParser jp = _parserFactory.createParser(src, offset, length);
+        // Need to start, in case root value is not JSON Object or Array:
+        if (jp.nextToken() == null) {
+            // But if there is no content, let's return empty SequenceReaders
+            jp.close();
+            return MappingIterator.emptyIterator();
+        }
+        return _bindAndReadValues(_considerFilter(jp, true));
     }
\ No newline at end of file
