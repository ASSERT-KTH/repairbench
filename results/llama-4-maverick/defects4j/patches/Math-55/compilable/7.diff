diff --git a/tmp/9c467503-5977-4174-b7fd-0b1dbcc90f81_buggy.java b/tmp/2227c190-4bbd-40c0-829a-39402ee7edb7_fixed.java
index 1478ee1..12cf62f 100644
--- a/tmp/9c467503-5977-4174-b7fd-0b1dbcc90f81_buggy.java
+++ b/tmp/2227c190-4bbd-40c0-829a-39402ee7edb7_fixed.java
@@ -1,24 +1,31 @@
   /** Compute the cross-product of two vectors.
    * @param v1 first vector
    * @param v2 second vector
    * @return the cross product v1 ^ v2 as a new Vector
    */
   public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {
 
+      double v21 = v2.getX();
+      double v22 = v2.getY();
+      double v23 = v2.getZ();
+      double v12v22 = v1.getY() * v22;
+      double v13v23 = v1.getZ() * v23;
+      double v11 = v1.getX();
+      double v12 = v1.getY();
+      double v13 = v1.getZ();
+      double s = Math.scalb(1.0, -FastMath.getExponent(v21 * v21 + v22 * v22 + v23 * v23) / 2);
+      double v11s = v11 * s;
+      double v21s = v21 * s;
+      double v12s = v12 * s;
+      double v22s = v22 * s;
+      double v13s = v13 * s;
+      double v23s = v23 * s;
 
-      // rescale both vectors without losing precision,
-      // to ensure their norm are the same order of magnitude
+      double d1 = v12s * v23s - v13s * v22s;
+      double d2 = v13s * v21s - v11s * v23s;
+      double d3 = v11s * v22s - v12s * v21s;
 
-      // we reduce cancellation errors by preconditioning,
-      // we replace v1 by v3 = v1 - rho v2 with rho chosen in order to compute
-      // v3 without loss of precision. See Kahan lecture
-      // "Computing Cross-Products and Rotations in 2- and 3-Dimensional Euclidean Spaces"
-      // available at http://www.cs.berkeley.edu/~wkahan/MathH110/Cross.pdf
-
-      // compute rho as an 8 bits approximation of v1.v2 / v2.v2
-
-
-      // compute cross product from v3 and v2 instead of v1 and v2
-      return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);
+      s = 1 / s;
+      return new Vector3D(s * d1, s * d2, s * d3);
 
   }
\ No newline at end of file
