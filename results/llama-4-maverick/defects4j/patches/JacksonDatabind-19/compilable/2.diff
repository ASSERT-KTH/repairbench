diff --git a/tmp/616ac1f3-cd8e-4b69-818a-62169f703a1f_buggy.java b/tmp/18a09629-19f3-4032-88a6-ac2df765c721_fixed.java
index 1bec4d6..930ab61 100644
--- a/tmp/616ac1f3-cd8e-4b69-818a-62169f703a1f_buggy.java
+++ b/tmp/18a09629-19f3-4032-88a6-ac2df765c721_fixed.java
@@ -1,14 +1,22 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
+        // 28-May-2015, tatu: As per [databind#2411], JDK 11+ will return
+        //   actual type parameters for `Properties`, so we should NOT
+        //   try resolving "raw" types; check here (earlier in code
+        //   path it is too late since type resolution has occurred)
+        if (Properties.class.isAssignableFrom(rawClass)) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
+        typeParams = new JavaType[] { _unknownType(), _unknownType() };
+    } else {
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
+    }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
