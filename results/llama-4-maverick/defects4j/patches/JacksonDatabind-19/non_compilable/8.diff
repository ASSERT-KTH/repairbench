diff --git a/tmp/8be7cfe3-c95c-49f8-bd2b-e2180989822e_buggy.java b/tmp/b4177d7b-3acb-4854-85e7-b65f753a87ca_fixed.java
index 1bec4d6..24d5642 100644
--- a/tmp/8be7cfe3-c95c-49f8-bd2b-e2180989822e_buggy.java
+++ b/tmp/b4177d7b-3acb-4854-85e7-b65f753a87ca_fixed.java
@@ -1,14 +1,19 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
+        // 28-May-2015, tatu: As per [databind#2527], let's actually try resolving 'raw'
+        //   type here, not just blindly return Map<Object,Object>
+        if (Properties.class.isAssignableFrom(rawClass)) {
+            return MapType.construct(rawClass, _fromClass(null, String.class), _fromClass(null, String.class));
+        }
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
