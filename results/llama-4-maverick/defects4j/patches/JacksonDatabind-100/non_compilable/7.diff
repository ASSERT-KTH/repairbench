diff --git a/tmp/8204e012-4156-439a-80a0-244aba1ca963_buggy.java b/tmp/f471aaec-56a2-4527-99c0-4e3cbc987e24_fixed.java
index fc8c302..b9413dc 100644
--- a/tmp/8204e012-4156-439a-80a0-244aba1ca963_buggy.java
+++ b/tmp/f471aaec-56a2-4527-99c0-4e3cbc987e24_fixed.java
@@ -1,23 +1,33 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n.isTextual()) {
+            String str = n.asText();
+            try {
+                return n.getBinaryValue(b64variant);
+            } catch (IllegalArgumentException e) {
+                // 22-Jan-2020, tatu: Used to simply propagate, but let's try to throw
+                //    more informative exception
+                throw new JsonParseException(_streamReadContext, e.getMessage(), e);
+            }
+        }
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
