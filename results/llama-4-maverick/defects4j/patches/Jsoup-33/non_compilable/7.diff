diff --git a/tmp/b8db1e1a-8b21-434d-91fb-67e99fcd7a30_buggy.java b/tmp/c5326923-fa29-4d7f-a600-dd2fd2a12b8c_fixed.java
index dc93be3..d825dde 100644
--- a/tmp/b8db1e1a-8b21-434d-91fb-67e99fcd7a30_buggy.java
+++ b/tmp/c5326923-fa29-4d7f-a600-dd2fd2a12b8c_fixed.java
@@ -1,14 +1,16 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
+        if (!el.tag().isKnownEmpty()) { // if not a known empty element (e.g. img), add to stack to generate a closing tag on pop
             stack.add(el);
+        }
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
