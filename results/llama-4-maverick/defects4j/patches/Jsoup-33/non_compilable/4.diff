diff --git a/tmp/4fbe4400-8ab4-4dc3-a414-4a25b4bcbf27_buggy.java b/tmp/42cb35c5-c789-4e3d-9a79-ebefdbd9eb4f_fixed.java
index dc93be3..eeb7021 100644
--- a/tmp/4fbe4400-8ab4-4dc3-a414-4a25b4bcbf27_buggy.java
+++ b/tmp/42cb35c5-c789-4e3d-9a79-ebefdbd9eb4f_fixed.java
@@ -1,14 +1,14 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+    Tag tag = Tag.valueOf(startTag.name());
+    if (startTag.isSelfClosing() || tag.isKnownEmpty()) {
+        Element el = new Element(tag, baseUri, startTag.attributes);
+        insertEmpty(el);
         return el;
     }
     
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+    Element el = new Element(tag, baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
