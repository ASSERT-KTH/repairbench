diff --git a/tmp/7be9f543-6e65-4c62-bdda-e9ad5e52b0b2_buggy.java b/tmp/ce76e019-2685-43f8-80a5-366e2c0d8632_fixed.java
index dc93be3..255f026 100644
--- a/tmp/7be9f543-6e65-4c62-bdda-e9ad5e52b0b2_buggy.java
+++ b/tmp/ce76e019-2685-43f8-80a5-366e2c0d8632_fixed.java
@@ -1,14 +1,16 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+    Tag tag = Tag.valueOf(startTag.name());
+    if (startTag.isSelfClosing() || tag.isKnownEmpty()) {
         Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        stack.add(el); // if not self closing, stack will be popped in the EndTag handling
+        if (!startTag.isSelfClosing()) // fake a end tag for this known empty tag
+            tokeniser.emit(new Token.EndTag(el.tagName()));
         return el;
     }
     
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+    Element el = new Element(tag, baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
