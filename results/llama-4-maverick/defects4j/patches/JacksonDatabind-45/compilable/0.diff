diff --git a/tmp/b39a1b3b-c626-4fcb-a70e-10e21ef27907_buggy.java b/tmp/753ffdce-177e-4b5e-8978-a41c917ab290_fixed.java
index 0dbce00..93084b8 100644
--- a/tmp/b39a1b3b-c626-4fcb-a70e-10e21ef27907_buggy.java
+++ b/tmp/753ffdce-177e-4b5e-8978-a41c917ab290_fixed.java
@@ -1,33 +1,38 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // [databind#1395]: if Shape.ANY is specified, need to use
+            // global default (which defaults to "String")
+            Boolean useTimestamp = (shape == JsonFormat.Shape.ANY) ? null : Boolean.FALSE;
+            return withFormat(useTimestamp, null);
         }
     }
     return this;
 }
\ No newline at end of file
