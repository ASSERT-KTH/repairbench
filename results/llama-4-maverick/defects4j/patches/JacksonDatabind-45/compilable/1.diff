diff --git a/tmp/bed56a07-72a2-41a1-89b5-47e689612c6f_buggy.java b/tmp/92ecdae0-19a9-4b49-a993-c54e081af2cc_fixed.java
index 0dbce00..e680253 100644
--- a/tmp/bed56a07-72a2-41a1-89b5-47e689612c6f_buggy.java
+++ b/tmp/92ecdae0-19a9-4b49-a993-c54e081af2cc_fixed.java
@@ -1,33 +1,39 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
-
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // [databind#1394]: `@JsonFormat(shape=JsonFormat.Shape.ANY)` should be considered "default"
+            if (format.getShape() == JsonFormat.Shape.ANY) {
+                Boolean asNumber = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+                        ? Boolean.TRUE : Boolean.FALSE;
+                return withFormat(asNumber, null);
+            }
         }
     }
     return this;
 }
\ No newline at end of file
