diff --git a/tmp/60902665-25a4-4873-b768-fca7427322c4_buggy.java b/tmp/f97161fa-0b07-43f5-9659-dd5c425db07a_fixed.java
index 0dbce00..3e0c202 100644
--- a/tmp/60902665-25a4-4873-b768-fca7427322c4_buggy.java
+++ b/tmp/f97161fa-0b07-43f5-9659-dd5c425db07a_fixed.java
@@ -1,33 +1,27 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
-
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
+            if (shape == JsonFormat.Shape.STRING) {
+                return withFormat(Boolean.FALSE, null);
             }
-                    df.setTimeZone(tz);
-                    return withFormat(Boolean.FALSE, df);
+            // [databind#1393]: Shape.ANY: use global default (not 'string' nor 'numeric')
+            if (shape == JsonFormat.Shape.ANY) {
+                return this;
+            }
+            // otherwise, checking for explicit setting(s)
+            if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                return withFormat(Boolean.FALSE, null);
             }
         }
     }
     return this;
 }
\ No newline at end of file
