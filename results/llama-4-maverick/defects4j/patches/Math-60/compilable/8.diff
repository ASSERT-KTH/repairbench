diff --git a/tmp/73803169-ff61-4223-8199-ea43df72e723_buggy.java b/tmp/27143c2c-4f8b-4e7b-93ad-127b0c0c2792_fixed.java
index 3127f85..1f5d8e6 100644
--- a/tmp/73803169-ff61-4223-8199-ea43df72e723_buggy.java
+++ b/tmp/27143c2c-4f8b-4e7b-93ad-127b0c0c2792_fixed.java
@@ -1,24 +1,29 @@
     /**
      * For this distribution, {@code X}, this method returns {@code P(X < x)}.
      * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
      * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
      *
      * @param x Value at which the CDF is evaluated.
      * @return CDF evaluated at {@code x}.
      * @throws MathException if the algorithm fails to converge
      */
     public double cumulativeProbability(double x) throws MathException {
         final double dev = x - mean;
+        if (Double.isInfinite(dev)) {
+            // For large deviation, the erf function is asymptotic to -1/(dev * sqrt(pi)) * exp(-dev^2/2),
+            // so (-dev < 0) => erf(dev) = -erf(-dev) = 1.
+            return (dev < 0) ? 0.0 : 1.0;
+        }
         try {
             return 0.5 * (1.0 + Erf.erf((dev) /
                     (standardDeviation * FastMath.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1;
             } else {
                 throw ex;
             }
         }
     }
\ No newline at end of file
