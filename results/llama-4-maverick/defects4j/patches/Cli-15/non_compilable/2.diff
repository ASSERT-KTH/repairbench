diff --git a/tmp/18b5d530-6a2e-4c23-bdaa-da782d3f3498_buggy.java b/tmp/e66eb725-5522-4695-883b-bca3ff03a6ff_fixed.java
index 4e8b037..5fb41bf 100644
--- a/tmp/18b5d530-6a2e-4c23-bdaa-da782d3f3498_buggy.java
+++ b/tmp/e66eb725-5522-4695-883b-bca3ff03a6ff_fixed.java
@@ -1,20 +1,29 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
     // grab the correct default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
     // augment the list with the default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
+
+    // if there are more default values as specified, add them to the list.
+    if (valueList != null && option != null && option.getArgument() != null) {
+        int max = ((Argument) option.getArgument()).getMaximum();
         // copy the list first
+        valueList = new ArrayList(valueList);
+        List defaultArgumentValues = (List) this.defaultValues.get(option);
+        if (defaultArgumentValues != null && valueList.size() < max) {
+            int nbToAdd = Math.min(max - valueList.size(), defaultArgumentValues.size());
+            valueList.addAll(defaultArgumentValues.subList(0, nbToAdd));
+        }
+    }
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
