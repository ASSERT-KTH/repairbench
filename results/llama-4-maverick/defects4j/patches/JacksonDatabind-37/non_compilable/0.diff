diff --git a/tmp/2d8e58e1-8c0b-4f05-9aa1-e47a8472ca4c_buggy.java b/tmp/985a09b3-3362-4ecd-bc44-93c1f685a647_fixed.java
index e5ad041..d858ecc 100644
--- a/tmp/2d8e58e1-8c0b-4f05-9aa1-e47a8472ca4c_buggy.java
+++ b/tmp/985a09b3-3362-4ecd-bc44-93c1f685a647_fixed.java
@@ -1,19 +1,24 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+    // 15-Jan-2016, tatu: Not perfect, but try to partially verify
     if (!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    JavaType newType = _fromSuperType(subclass);
+    // 26-Jun-2019, tatu: to fix [databind-1083] need to try re-creating bindings
+    //   (shouldn't need to recreate TypeBindings, but just in case there are type vars)
+    // 17-Feb-2020, tatu: [databind-1148] as per comments, may need to re-create handlers too
+    newType = newType._withBindings(_bindings);
+    if (_valueHandler != newType.getValueHandler()) {
+        newType = newType.withValueHandler(_valueHandler);
+    }
+    if (_typeHandler != newType.getTypeHandler()) {
+        newType = newType.withTypeHandler(_typeHandler);
+    }
+    return newType;
 }
\ No newline at end of file
