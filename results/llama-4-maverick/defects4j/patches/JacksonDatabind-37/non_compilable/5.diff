diff --git a/tmp/de8fc4c2-e361-40c4-8f48-0a38cc4eb388_buggy.java b/tmp/b31e9eba-d397-4cd1-8b8a-50109794446b_fixed.java
index e5ad041..acd8324 100644
--- a/tmp/de8fc4c2-e361-40c4-8f48-0a38cc4eb388_buggy.java
+++ b/tmp/b31e9eba-d397-4cd1-8b8a-50109794446b_fixed.java
@@ -1,19 +1,28 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
+    // 22-Jan-2016, tatu: We may need to allow "narrowing" to a subtype
+    //   when dealing with "untyped" (that is, `SimpleType` that
+    //   represents `Object` or `JsonNode` or such)
+    if ((_class == Object.class || _class == JsonNode.class)
+            && _class.isAssignableFrom(subclass)) {
+        // ... and then "narrow" back to sub-class
+        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
+                _valueHandler, _typeHandler, _asStatic);
+    }
     // Should we check that there is a sub-class relationship?
     // 15-Jan-2016, tatu: Almost yes, but there are some complications with
     //    placeholder values, so no.
     /*
     if (!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
     }
     */
     // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
+            +_class.getName());
 }
\ No newline at end of file
