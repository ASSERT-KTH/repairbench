diff --git a/tmp/3f170f93-36f2-4544-8986-e6d7a559782f_buggy.java b/tmp/20448556-1c90-45f4-a0bb-663bcfe23b37_fixed.java
index e5ad041..fc96c67 100644
--- a/tmp/3f170f93-36f2-4544-8986-e6d7a559782f_buggy.java
+++ b/tmp/20448556-1c90-45f4-a0bb-663bcfe23b37_fixed.java
@@ -1,19 +1,16 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
     // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
     if (!_class.isAssignableFrom(subclass)) {
         throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                 +_class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // 03-Feb-2016, tatu: As per [databind#1083] we may need to do bit more work
+    JavaType newType = _typeFactory.constructSpecializedType(this, subclass);
+    // and if so, this is definitely the thing to do...
+    return newType;
 }
\ No newline at end of file
