diff --git a/tmp/20bbd667-034d-4d47-a0b6-57b03e961698_buggy.java b/tmp/da7d8117-314a-42df-8313-bbbf1c4cbeca_fixed.java
index e5ad041..ab76441 100644
--- a/tmp/20bbd667-034d-4d47-a0b6-57b03e961698_buggy.java
+++ b/tmp/da7d8117-314a-42df-8313-bbbf1c4cbeca_fixed.java
@@ -1,19 +1,19 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
+    // 16-Jan-2016, tatu: Not sure if we should try to narrow bindings or not.
+    // For now, let's just keep bindings as-is (that is, no `_bindings` passed).
+    // As per [databind#1083] need to re-lookup generics.
+    JavaType subtype = _typeFactory._fromClass(null, subclass, TypeBindings.emptyBindings());
+    // 28-Jun-2016, tatu: Seems we should not force new instance always, since
+    //    canonical ones are cheap but not so much other types (SimpleType esp).
+    if ((_bindings == subtype.getBindings())
+            && (_superClass == subtype.getSuperClass())
+            && (_superInterfaces == subtype.getInterfaces())) {
+        return this;
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    return subtype;
 }
\ No newline at end of file
