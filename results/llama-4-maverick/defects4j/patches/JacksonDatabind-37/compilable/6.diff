diff --git a/tmp/eba1c416-1ed0-4871-970a-96f49a042847_buggy.java b/tmp/bae1c073-9f4b-448f-8307-f2aae75e67cc_fixed.java
index e5ad041..982e3fa 100644
--- a/tmp/eba1c416-1ed0-4871-970a-96f49a042847_buggy.java
+++ b/tmp/bae1c073-9f4b-448f-8307-f2aae75e67cc_fixed.java
@@ -1,19 +1,16 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
+    // 26-Jun-2015, tatu: We should probably try to re-create contextual bindings
+    //   (esp for root type) but for now that gets complicated. So for now,
+    //   just assert that there is no bindings.
+    if (_bindings != null && !_bindings.isEmpty()) {
+        throw new IllegalArgumentException("Internal error: Cannot narrow type "+this+" with non-empty bindings");
     }
-        */
     // 15-Jan-2015, tatu: Not correct; should really re-resolve...
     return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
 }
\ No newline at end of file
