diff --git a/tmp/6d7fdeef-4fd3-4ceb-a660-12fb3b7e9277_buggy.java b/tmp/4773f58c-2cab-4e26-8b80-30cc910eaf5e_fixed.java
index fd8eae5..7a0c265 100644
--- a/tmp/6d7fdeef-4fd3-4ceb-a660-12fb3b7e9277_buggy.java
+++ b/tmp/4773f58c-2cab-4e26-8b80-30cc910eaf5e_fixed.java
@@ -1,47 +1,50 @@
     /**
      * Adds or updates an item in the series and sends a
      * {@link SeriesChangeEvent} to all registered listeners.
      *
      * @param x  the x-value (<code>null</code> not permitted).
      * @param y  the y-value (<code>null</code> permitted).
      *
      * @return A copy of the overwritten data item, or <code>null</code> if no
      *         item was overwritten.
      */
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
 
         // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
             }
             catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
+            // don't return here, because if this.autoSort is true, we need 
+            // to make sure that the item is in the correct position in the 
+            // list, and this involves removing it and re-inserting it 
+            // (see bug report 1955483)
         }
-        else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+        
+        if (index < 0 || !this.allowDuplicateXValues) {
             if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+                index = -(index + 1);
+                this.data.add(index, new XYDataItem(x, y));
             }
             else {
                 this.data.add(new XYDataItem(x, y));
+                index = this.data.size() - 1;
             }
             // check if this addition will exceed the maximum item count...
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }
         }
         fireSeriesChanged();
         return overwritten;
     }
\ No newline at end of file
