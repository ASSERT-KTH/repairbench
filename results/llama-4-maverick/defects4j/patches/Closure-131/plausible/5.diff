diff --git a/tmp/5fed71e0-04b9-44db-9e61-8c4485fd2d57_buggy.java b/tmp/2152aed3-69a9-409a-9370-3971da3f7ade_fixed.java
index 19fe1b4..86bcc9b 100644
--- a/tmp/5fed71e0-04b9-44db-9e61-8c4485fd2d57_buggy.java
+++ b/tmp/2152aed3-69a9-409a-9370-3971da3f7ade_fixed.java
@@ -1,17 +1,38 @@
 public static boolean isJSIdentifier(String s) {
   int length = s.length();
 
   if (length == 0 ||
       !Character.isJavaIdentifierStart(s.charAt(0))) {
     return false;
   }
 
   for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+    if (!Character.isJavaIdentifierPart(s.charAt(i))) {
+      return false;
+    }
+  }
+
+  // Additional check to ensure the string is a valid JavaScript identifier
+  if (!isJSIdentifierStart(s.charAt(0))) {
+    return false;
+  }
+  for (int i = 1; i < length; i++) {
+    if (!isJSIdentifierPart(s.charAt(i))) {
       return false;
     }
   }
 
   return true;
 }
+
+// Helper methods to check if a character is a valid JavaScript identifier start or part
+private static boolean isJSIdentifierStart(char c) {
+  return (c >= 'a' && c <= 'z') ||
+         (c >= 'A' && c <= 'Z') ||
+         c == '_' || c == '$';
+}
+
+private static boolean isJSIdentifierPart(char c) {
+  return isJSIdentifierStart(c) ||
+         (c >= '0' && c <= '9');
+}
\ No newline at end of file
