diff --git a/tmp/c334a370-c0e8-4a8c-8319-9d7665c893eb_buggy.java b/tmp/7987cf68-46d4-4c11-b4e2-8adeb811e93d_fixed.java
index 19fe1b4..2f09f03 100644
--- a/tmp/c334a370-c0e8-4a8c-8319-9d7665c893eb_buggy.java
+++ b/tmp/7987cf68-46d4-4c11-b4e2-8adeb811e93d_fixed.java
@@ -1,17 +1,33 @@
 public static boolean isJSIdentifier(String s) {
   int length = s.length();
 
   if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+      !Character.isUnicodeIdentifierStart(s.charAt(0))) {
     return false;
   }
 
   for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+    if (!Character.isUnicodeIdentifierPart(s.charAt(i))) {
       return false;
     }
   }
 
+  // Check if the identifier is a JS reserved word
+  if (isJSReservedWord(s)) {
+    return false;
+  }
+
   return true;
 }
+
+// Helper function to check if a string is a JS reserved word
+private static boolean isJSReservedWord(String s) {
+  // List of JS reserved words
+  String[] reservedWords = {"break", "case", "catch", "class", "const", "continue", "debugger", "default", "delete", "do", "else", "enum", "export", "extends", "false", "finally", "for", "function", "if", "import", "in", "instanceof", "new", "null", "return", "super", "switch", "this", "throw", "true", "try", "typeof", "var", "void", "while", "with"};
+  for (String word : reservedWords) {
+    if (s.equals(word)) {
+      return true;
+    }
+  }
+  return false;
+}
\ No newline at end of file
