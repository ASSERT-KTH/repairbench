diff --git a/tmp/7a257147-0b08-4629-ada9-018fd75beb90_buggy.java b/tmp/f4ff2d8e-d291-498c-9de7-061b911b239a_fixed.java
index 939f49b..9b887db 100644
--- a/tmp/7a257147-0b08-4629-ada9-018fd75beb90_buggy.java
+++ b/tmp/f4ff2d8e-d291-498c-9de7-061b911b239a_fixed.java
@@ -1,21 +1,28 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node lhs = n.getFirstChild();
+      Node child = lhs.getFirstChild().getNext();
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
+        // Check for the pattern 'a.b.c = a.b.c = ...'
+        Node value = assign.getSecondChild();
+        if (value.getType() == Token.GETPROP &&
+            value.getFirstChild().isEquivalentTo(lhs)) {
+          return false;
+        }
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
