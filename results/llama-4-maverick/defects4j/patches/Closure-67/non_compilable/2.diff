diff --git a/tmp/9df5180f-a0b2-4f04-aaef-e1dbaa69d0fb_buggy.java b/tmp/627f5983-7843-4caf-82ce-6ac65b308419_fixed.java
index 939f49b..5ae9870 100644
--- a/tmp/9df5180f-a0b2-4f04-aaef-e1dbaa69d0fb_buggy.java
+++ b/tmp/627f5983-7843-4caf-82ce-6ac65b308419_fixed.java
@@ -1,21 +1,20 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      Node lhs = n.getFirstChild();
+      // check if the object is 'prototype' or a property on 'prototype'
+      if (lhs.isGetProp() && lhs.getFirstChild().getLastChild().getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
