diff --git a/tmp/9b6e713c-6878-49d9-975f-7fe106d29cf2_buggy.java b/tmp/35ae144d-2c73-49ad-b276-e9f76346b418_fixed.java
index 939f49b..e40f1bf 100644
--- a/tmp/9b6e713c-6878-49d9-975f-7fe106d29cf2_buggy.java
+++ b/tmp/35ae144d-2c73-49ad-b276-e9f76346b418_fixed.java
@@ -1,21 +1,25 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node lhs = n.getFirstChild();
+      Node target = lhs.getFirstChild();
+      if (target.getType() == Token.GETPROP && target.getLastChild().getString().equals("prototype")) {
+        return true;
+      }
 
+      Node child = lhs.getFirstChild().getNext();
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
