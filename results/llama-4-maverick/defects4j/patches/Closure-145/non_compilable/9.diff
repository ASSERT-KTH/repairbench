diff --git a/tmp/e3906a7f-b2fa-4d1b-a058-e0378457a279_buggy.java b/tmp/731007b6-50d4-4680-8f3a-b80e3aa79b7f_fixed.java
index 57f69c5..56032e3 100644
--- a/tmp/e3906a7f-b2fa-4d1b-a058-e0378457a279_buggy.java
+++ b/tmp/731007b6-50d4-4680-8f3a-b80e3aa79b7f_fixed.java
@@ -1,12 +1,31 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
     // For labels with block children, we need to ensure that a
     // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
     // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    for (; n != null; n = n.getParent()) {
+      switch (n.getType()) {
+        case Token.BLOCK:
+          if (n.getParent() != null && n.getParent().isLabel()) {
+            // Labeled BLOCKs are ok.
+            continue;
+          }
+          // BLOCKs with more than 1 child aren't FUNCTION or DO.
+          return n.hasMoreThanOneChild();
+        case Token.LABEL:
+          // LABELs aren't FUNCTION or DO.
+          continue;
+        case Token.FUNCTION:
+        case Token.DO:
+          // FUNCTION or DO aren't FUNCTION or DO.
+          return false;
+        default:
+          // Anything other than BLOCK or LABEL means it's not a FUNCTION or DO.
+          return true;
+      }
+    }
+    return false;
   }
\ No newline at end of file
