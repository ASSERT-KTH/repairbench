diff --git a/tmp/a6ebe8d1-b0ad-4a68-8922-d0262cac6626_buggy.java b/tmp/5bf8e2f8-d041-4621-8277-8b90f9632023_fixed.java
index 19fd63e..1b48510 100644
--- a/tmp/a6ebe8d1-b0ad-4a68-8922-d0262cac6626_buggy.java
+++ b/tmp/5bf8e2f8-d041-4621-8277-8b90f9632023_fixed.java
@@ -1,24 +1,28 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
           // We only have to worry about methods with an implicit 'this'
           // param, or this doesn't happen.
-
+          return NodeUtil.isExpressionNode(maybeExpr.getFirstChild())
+              && !NodeUtil.mayHaveSideEffects(maybeExpr.getFirstChild());
+        } else {
           return NodeUtil.isExpressionNode(maybeExpr);
         }
       }
+    }
 
     return false;
   }
\ No newline at end of file
