diff --git a/tmp/0e7efb41-7f8d-4d0c-83c7-ab15cf24133d_buggy.java b/tmp/0b5137cd-18b3-41d1-83d6-39e65c0cb3f1_fixed.java
index 19fd63e..cf6f1da 100644
--- a/tmp/0e7efb41-7f8d-4d0c-83c7-ab15cf24133d_buggy.java
+++ b/tmp/0b5137cd-18b3-41d1-83d6-39e65c0cb3f1_fixed.java
@@ -1,24 +1,28 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+          String exprFuncName = maybeExpr.getFirstChild().getQualifiedName();
+          if (exprFuncName != null && (exprFuncName.endsWith(".onchange")
+              || exprFuncName.endsWith(".onblur")
+              || exprFuncName.endsWith(".onfocus"))) {
+            return false;
+          }
+        }
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
\ No newline at end of file
