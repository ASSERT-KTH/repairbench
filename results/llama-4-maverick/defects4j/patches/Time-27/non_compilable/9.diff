diff --git a/tmp/8d9b3809-4f6b-4935-9bf3-f167bab779c7_buggy.java b/tmp/3f029bbc-5126-4d90-b95c-d1d506a5f161_fixed.java
index ec6c9ee..16f0c12 100644
--- a/tmp/8d9b3809-4f6b-4935-9bf3-f167bab779c7_buggy.java
+++ b/tmp/3f029bbc-5126-4d90-b95c-d1d506a5f161_fixed.java
@@ -1,21 +1,27 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
+        if (size >= 3 && elementPairs.get(2) instanceof Separator) {
+            List<Object> list = new ArrayList<>(elementPairs);
+            list.add(0, null); // dummy
+            elementPairs = list;
+            size = list.size();
+        }
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
