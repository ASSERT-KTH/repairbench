diff --git a/tmp/c60cc784-de26-4109-8d38-b205e480587b_buggy.java b/tmp/75aa7db1-7094-44c4-87b2-4adf3ea1f130_fixed.java
index ec6c9ee..0357dd0 100644
--- a/tmp/c60cc784-de26-4109-8d38-b205e480587b_buggy.java
+++ b/tmp/75aa7db1-7094-44c4-87b2-4adf3ea1f130_fixed.java
@@ -1,21 +1,30 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
+        if (size >= 3 && elementPairs.get(2) instanceof Separator) {
+            List<Object> list = elementPairs.subList(2, size);
+            Separator sep2 = (Separator) elementPairs.get(2);
+            PeriodFormatter f = toFormatter(list, notPrinter, notParser);
+            sep2 = sep2.finish(f.getPrinter(), f.getParser());
+            sep = sep.finish(sep2, sep2);
+            return new PeriodFormatter(sep, sep);
+        } else {
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
         }
+    }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
