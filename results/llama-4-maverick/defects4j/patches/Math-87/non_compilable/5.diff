diff --git a/tmp/6b411acf-7abc-47a0-a943-61732c53dbc8_buggy.java b/tmp/062e8ee4-aba4-4f22-8a65-832a8c6ea23e_fixed.java
index 70cafe0..3f2784c 100644
--- a/tmp/6b411acf-7abc-47a0-a943-61732c53dbc8_buggy.java
+++ b/tmp/062e8ee4-aba4-4f22-8a65-832a8c6ea23e_fixed.java
@@ -1,18 +1,25 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
             if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 if (row == null) {
                     row = i;
                 } else {
                     return null;
                 }
             }
         }
+        // Check if the column is a slack/surplus variable
+        if (row == null && col >= getNumDecisionVariables()) {
+            int slackVar = col - getNumDecisionVariables();
+            if (slackVar < getNumConstraints() && getConstraint(slackVar).getRelationship() == Relationship.EQ) {
+                return getNumObjectiveFunctions() + slackVar;
+            }
+        }
         return row;
     }
\ No newline at end of file
