diff --git a/tmp/724e25d8-8fe8-46b3-a864-50c98f5e6fd3_buggy.java b/tmp/62cd39ff-a1fc-4e1e-9616-362423f3dc82_fixed.java
index 70cafe0..0dbd592 100644
--- a/tmp/724e25d8-8fe8-46b3-a864-50c98f5e6fd3_buggy.java
+++ b/tmp/62cd39ff-a1fc-4e1e-9616-362423f3dc82_fixed.java
@@ -1,18 +1,25 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
             if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 if (row == null) {
                     row = i;
                 } else {
                     return null;
                 }
             }
         }
+        // Check if the column is a slack column, and if so, check the corresponding row
+        if (row == null && col >= getNumDecisionVariables() && getNumObjectiveFunctions() == 1) {
+            int slackRow = col - getNumDecisionVariables() + getNumObjectiveFunctions();
+            if (getEntry(slackRow, getWidth() - 1) > 0) {
+                row = slackRow;
+            }
+        }
         return row;
     }
\ No newline at end of file
