diff --git a/tmp/9f355c6f-fed9-409a-9bcf-0ac0039c4a3d_buggy.java b/tmp/34802063-1f07-4ddc-9b57-0de8fa5be699_fixed.java
index 10616db..17a5218 100644
--- a/tmp/9f355c6f-fed9-409a-9bcf-0ac0039c4a3d_buggy.java
+++ b/tmp/34802063-1f07-4ddc-9b57-0de8fa5be699_fixed.java
@@ -1,19 +1,24 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+        // month is largest field and being added to, such as month-day
+        // handle date fields where the day is invalid in the new month
+        int[] result = super.add(partial, fieldIndex, values, valueToAdd);
+        int dayOfMonth = result[partial.getFieldType(1).getField(iChronology).getIndex();
+        int maxDay = iChronology.dayOfMonth().getMaximumValue(result[0], result[1]);
+        if (dayOfMonth > maxDay) {
+            result[partial.getFieldType(1).getField(iChronology).getIndex()] = maxDay;
+        }
+        return result;
     }
 }
\ No newline at end of file
