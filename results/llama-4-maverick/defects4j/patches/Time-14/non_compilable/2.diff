diff --git a/tmp/6fcd6fc4-265a-4ce1-a7e8-026708dc1355_buggy.java b/tmp/20448891-3a43-4e26-86aa-4ad6fd777acb_fixed.java
index 10616db..cfffcfd 100644
--- a/tmp/6fcd6fc4-265a-4ce1-a7e8-026708dc1355_buggy.java
+++ b/tmp/20448891-3a43-4e26-86aa-4ad6fd777acb_fixed.java
@@ -1,19 +1,24 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+        // Adjust day-of-month if necessary to be valid
+        if (partial.getFieldType(0) == DateTimeFieldType.monthOfYear() && partial.getFieldType(1) == DateTimeFieldType.dayOfMonth()) {
+            int maxDay = DateTimeUtils.getChronology(instant).dayOfMonth().getMaximumValue(instant);
+            if (result[1] > maxDay) {
+                result[1] = maxDay;
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
