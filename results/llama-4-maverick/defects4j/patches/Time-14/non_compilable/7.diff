diff --git a/tmp/54716140-6049-4db5-8c92-9c32862eef5e_buggy.java b/tmp/1bda0c61-c1a0-4d7f-ad3d-dd640d048ed3_fixed.java
index 10616db..97a9b79 100644
--- a/tmp/54716140-6049-4db5-8c92-9c32862eef5e_buggy.java
+++ b/tmp/1bda0c61-c1a0-4d7f-ad3d-dd640d048ed3_fixed.java
@@ -1,19 +1,24 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+        // Adjust day of month if necessary to match original (fixes #3644)
+        int dayOfMonth = values[partial.getFieldType(DateTimeFieldType.dayOfMonth()).getIndex()];
+        if (dayOfMonth > result[partial.getFieldType(DateTimeFieldType.dayOfMonth()).getIndex()]) {
+            result[partial.getFieldType(DateTimeFieldType.dayOfMonth()).getIndex()] = Math.min(dayOfMonth, partial.getFieldType(DateTimeFieldType.dayOfMonth()).getField(iChronology).getMaximumValue(instant));
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
