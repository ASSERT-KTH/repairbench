diff --git a/tmp/5d9e651c-ae54-4c91-8ac8-cf06cbf26bdd_buggy.java b/tmp/3e741f42-54c6-430b-9e7f-6d2faa8469f5_fixed.java
index e1fc51f..214f321 100644
--- a/tmp/5d9e651c-ae54-4c91-8ac8-cf06cbf26bdd_buggy.java
+++ b/tmp/3e741f42-54c6-430b-9e7f-6d2faa8469f5_fixed.java
@@ -1,9 +1,20 @@
 public boolean hasSameMethod(Invocation candidate) {        
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
+    // To handle the case where Java generates forwarding methods, we need to check if the methods are bridge methods
+    if (m1.isBridge() && m2.isBridge()) {
+        // If both are bridge methods, compare the bridged methods
+        try {
+            m1 = (Method) m1.getClass().getMethod("getBridgedMethod").invoke(m1);
+            m2 = (Method) m2.getClass().getMethod("getBridgedMethod").invoke(m2);
+        } catch (Exception e) {
+            // If reflection fails, fall back to the original comparison
+        }
+    }
+    
     /* Avoid unnecessary cloning */
     return m1.equals(m2);
 }
\ No newline at end of file
