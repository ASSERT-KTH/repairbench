diff --git a/tmp/130392dc-dd5d-4ff3-bf35-f21071f7b35d_buggy.java b/tmp/67527da4-36aa-4812-ba15-0a4d32c6c74f_fixed.java
index e1fc51f..d5b8cec 100644
--- a/tmp/130392dc-dd5d-4ff3-bf35-f21071f7b35d_buggy.java
+++ b/tmp/67527da4-36aa-4812-ba15-0a4d32c6c74f_fixed.java
@@ -1,9 +1,37 @@
 public boolean hasSameMethod(Invocation candidate) {        
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
+    // Bridge methods are generated at bytecode level to implement generic interfaces.
+    // For example, List<T> implements Iterable<T> and at bytecode level, List will have 2 methods:
+    //   Iterator<T> iterator() // defined at List interface
+    //   Iterator iterator() // defined at Iterable interface, which is a bridge method to the above method
+    // Bridge methods are 'equal' to the method they are 'bridging' to.
+    if (m1.isBridge() != m2.isBridge()) {
+        // If one is bridge and the other is not, replace the bridge method with the bridged one.
+        // This is so that the comparison of methods is done on the actual method being bridged to.
+        if (m1.isBridge()) {
+            m1 = findBridgedMethod(m1);
+        } else {
+            m2 = findBridgedMethod(m2);
+        }
+    }
+
     /* Avoid unnecessary cloning */
     return m1.equals(m2);
 }
+
+// Helper method to find the bridged method
+private Method findBridgedMethod(Method bridgeMethod) {
+    // Get all methods of the declaring class
+    Method[] methods = bridgeMethod.getDeclaringClass().getDeclaredMethods();
+    for (Method method : methods) {
+        if (bridgeMethod != method && !method.isBridge() && bridgeMethod.getName().equals(method.getName())
+                && Arrays.equals(bridgeMethod.getParameterTypes(), method.getParameterTypes())) {
+            return method;
+        }
+    }
+    return bridgeMethod; // Return the original method if no bridged method is found
+}
\ No newline at end of file
