diff --git a/tmp/7c20b0ae-6a21-4069-82f2-fba18ea1af0d_buggy.java b/tmp/51f917ff-703f-424d-91c6-bf42df3da063_fixed.java
index e1fc51f..ad3c847 100644
--- a/tmp/7c20b0ae-6a21-4069-82f2-fba18ea1af0d_buggy.java
+++ b/tmp/51f917ff-703f-424d-91c6-bf42df3da063_fixed.java
@@ -1,9 +1,13 @@
 public boolean hasSameMethod(Invocation candidate) {        
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // We have to compare the methods this way, because sometimes JVM creates
+    // a new method instance for the same method invoked on different instances
+    // of the same class. See org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest
+    return m1.getName().equals(m2.getName())
+        && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())
+        && m1.getReturnType().isAssignableFrom(m2.getReturnType());
 }
\ No newline at end of file
