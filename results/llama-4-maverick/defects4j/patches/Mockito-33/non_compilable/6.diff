diff --git a/tmp/66948169-cee1-442c-b8a5-e925c782ce3a_buggy.java b/tmp/d71588c7-bff9-4300-861a-8910ad95cd11_fixed.java
index e1fc51f..d95d839 100644
--- a/tmp/66948169-cee1-442c-b8a5-e925c782ce3a_buggy.java
+++ b/tmp/d71588c7-bff9-4300-861a-8910ad95cd11_fixed.java
@@ -1,9 +1,20 @@
 public boolean hasSameMethod(Invocation candidate) {        
     //not using method.equals() for 1 good reason:
     //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
+    // Fix: check if the methods are bridge methods and compare their signatures
+    if (m1.isBridge() && !m2.isBridge()) {
+        return m1.getName().equals(m2.getName()) 
+            && m1.getReturnType().equals(m2.getReturnType())
+            && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes());
+    } else if (!m1.isBridge() && m2.isBridge()) {
+        return m2.getName().equals(m1.getName()) 
+            && m2.getReturnType().equals(m1.getReturnType())
+            && Arrays.equals(m2.getParameterTypes(), m1.getParameterTypes());
+    }
+    
     /* Avoid unnecessary cloning */
     return m1.equals(m2);
 }
\ No newline at end of file
