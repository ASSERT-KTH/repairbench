diff --git a/tmp/8d9fcfc3-e76d-4a05-bb26-a7074eebd8a9_buggy.java b/tmp/21f6f419-29cf-4ab5-8573-eb0dbe9241fe_fixed.java
index 855afa5..784dc55 100644
--- a/tmp/8d9fcfc3-e76d-4a05-bb26-a7074eebd8a9_buggy.java
+++ b/tmp/21f6f419-29cf-4ab5-8573-eb0dbe9241fe_fixed.java
@@ -1,13 +1,46 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+        String scheme = u.getProtocol();
+        String host = u.getHost();
+        int port = u.getPort();
+        String path = u.getPath();
+        String query = u.getQuery();
+        String fragment = u.getRef();
+        
+        StringBuilder urlStr = new StringBuilder();
+        urlStr.append(scheme).append("://").append(host);
+        if (port != -1)
+            urlStr.append(":").append(port);
+        
+        if (path != null && !path.isEmpty()) {
+            String[] segments = path.split("/");
+            for (int i = 0; i < segments.length; i++) {
+                if (i == 0 && segments[i].isEmpty()) {
+                    urlStr.append("/");
+                    continue;
+                }
+                if (i > 0 || (i == 0 && !segments[i].isEmpty()))
+                    urlStr.append("/");
+                urlStr.append(URLEncoder.encode(segments[i], "UTF-8")
+                        .replace("+", "%20")
+                        .replace("%2F", "/")
+                        .replace("%3A", ":")
+                        .replace("%40", "@"));
+            }
+        }
+        
+        if (query != null) {
+            urlStr.append("?").append(query);
+        }
+        
+        if (fragment != null) {
+            urlStr.append("#").append(fragment);
+        }
+        
+        return new URL(urlStr.toString());
+    } catch (Exception e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
