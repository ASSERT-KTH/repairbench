diff --git a/tmp/513edabc-4c95-40a8-be93-9b4ada368b22_buggy.java b/tmp/ab213e07-5069-4240-ac7f-218dcdd450b7_fixed.java
index c84c989..2d44529 100644
--- a/tmp/513edabc-4c95-40a8-be93-9b4ada368b22_buggy.java
+++ b/tmp/ab213e07-5069-4240-ac7f-218dcdd450b7_fixed.java
@@ -1,27 +1,34 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    position.setTime(new Date(buf.readUnsignedIntLE() * 1000L)); // date and time
 
-        buf.skipBytes(23); // coordinates block
+    // Process coordinates block instead of skipping
+    position.setValid(true);
+    position.setLatitude(buf.readIntLE() * 0.000001);
+    position.setLongitude(buf.readIntLE() * 0.000001);
+    position.setAltitude(buf.readIntLE() * 0.1);
+    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE() * 0.1));
+    position.setCourse(buf.readUnsignedShortLE() * 0.1);
+    buf.skipBytes(5); // remaining bytes in coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
