diff --git a/tmp/595b62c5-84bb-4791-bce4-7e2b9a0e222c_buggy.java b/tmp/83cc8e84-b115-4510-b1d2-b155cbe0067d_fixed.java
index c84c989..acb46ea 100644
--- a/tmp/595b62c5-84bb-4791-bce4-7e2b9a0e222c_buggy.java
+++ b/tmp/83cc8e84-b115-4510-b1d2-b155cbe0067d_fixed.java
@@ -1,27 +1,36 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
     
-        buf.skipBytes(23); // coordinates block
+    // Read and set device time
+    position.setTime(new Date(buf.readUnsignedIntLE() * 1000L));
+
+    // Read coordinates block instead of skipping
+    position.setValid(true);
+    position.setLongitude(buf.readIntLE() * 0.000001);
+    position.setLatitude(buf.readIntLE() * 0.000001);
+    position.setAltitude(buf.readIntLE() * 0.1);
+    position.setCourse(buf.readUnsignedShortLE() * 0.1);
+    position.setSpeed(buf.readUnsignedShortLE() * 0.1);
+    buf.skipBytes(5); // remaining part of coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
