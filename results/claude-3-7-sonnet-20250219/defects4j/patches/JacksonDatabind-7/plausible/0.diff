diff --git a/tmp/6c0d6113-7271-41be-b2aa-33e5a9aabe6e_buggy.java b/tmp/58d6c19d-02d2-4309-a793-3ef14c32d42e_fixed.java
index 4f21a3a..b7a2a27 100644
--- a/tmp/6c0d6113-7271-41be-b2aa-33e5a9aabe6e_buggy.java
+++ b/tmp/58d6c19d-02d2-4309-a793-3ef14c32d42e_fixed.java
@@ -1,14 +1,26 @@
 /**
  * Helper method used by standard deserializer.
  * 
  * @since 2.3
  */
 public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
 {
-            copyCurrentStructure(jp);
     /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
      *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
      *    to assume one did exist.
      */
+    JsonToken t = jp.getCurrentToken();
+    if (t == JsonToken.FIELD_NAME) {
+        // Must create a new START_OBJECT for this case
+        this.writeStartObject();
+        do {
+            this.writeFieldName(jp.getCurrentName());
+            jp.nextToken();
+            copyCurrentStructure(jp);
+        } while (jp.nextToken() == JsonToken.FIELD_NAME);
+        this.writeEndObject();
+    } else {
+        copyCurrentStructure(jp);
+    }
     return this;
 }
\ No newline at end of file
