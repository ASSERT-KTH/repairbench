diff --git a/tmp/ac130b1a-7a2f-4095-9ee4-c9723f53504f_buggy.java b/tmp/601e24b4-2f4b-44d1-adb7-308d72a5cd6e_fixed.java
index 62e8ec8..91f7384 100644
--- a/tmp/ac130b1a-7a2f-4095-9ee4-c9723f53504f_buggy.java
+++ b/tmp/601e24b4-2f4b-44d1-adb7-308d72a5cd6e_fixed.java
@@ -1,26 +1,27 @@
 /**
  * <p>If an {@link Option} exists for <code>token</code> then
  * set the current option and add the token to the processed 
  * list.</p>
  *
  * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
  * is set then ignore the current token and add the remaining tokens
  * to the processed tokens list directly.</p>
  *
  * @param token The current option token
  * @param stopAtNonOption Specifies whether flattening should halt
  * at the first non option.
+ * @throws UnrecognizedOptionException if the token is not a recognized option and
+ * not a valid argument.
  */
-    private void processOptionToken(String token, boolean stopAtNonOption)
+private void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException
 {
     if (options.hasOption(token))
     {
         currentOption = options.getOption(token);
         tokens.add(token);
     }
-        else if (stopAtNonOption)
+    else
     {
-            eatTheRest = true;
-            tokens.add(token);
+        throw new UnrecognizedOptionException("Unrecognized option: " + token, token);
     }
 }
\ No newline at end of file
