diff --git a/tmp/2f41630a-c200-4ae1-9e4e-a66b6320f1ed_buggy.java b/tmp/dc50cecd-ca84-42ae-9625-274977b41f2a_fixed.java
index 4b163f6..17714f7 100644
--- a/tmp/2f41630a-c200-4ae1-9e4e-a66b6320f1ed_buggy.java
+++ b/tmp/dc50cecd-ca84-42ae-9625-274977b41f2a_fixed.java
@@ -1,28 +1,34 @@
 /**
  * Skips the given number of bytes by repeatedly invoking skip on
  * the given input stream if necessary.
  *
  * <p>In a case where the stream's skip() method returns 0 before
  * the requested number of bytes has been skip this implementation
  * will fall back to using the read() method.</p>
  *
  * <p>This method will only skip less than the requested number of
  * bytes if the end of the input stream has been reached.</p>
  *
  * @param input stream to skip bytes in
  * @param numToSkip the number of bytes to skip
  * @return the number of bytes actually skipped
  * @throws IOException
  */
 public static long skip(InputStream input, long numToSkip) throws IOException {
     long available = numToSkip;
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
         if (skipped == 0) {
+            // Skip returned zero, try using read instead
+            int b = input.read();
+            if (b == -1) {
+                // EOF reached
                 break;
             }
+            skipped = 1;
+        }
         numToSkip -= skipped;
     }
         
     return available - numToSkip;
 }
\ No newline at end of file
