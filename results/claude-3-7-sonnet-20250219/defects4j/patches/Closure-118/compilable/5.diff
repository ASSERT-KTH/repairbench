diff --git a/tmp/e88a4e92-2d8c-4f63-8211-a11f1df19b11_buggy.java b/tmp/e9b64497-8870-47bc-b8d4-8e8de72a9a22_fixed.java
index 0b7c52e..843855f 100644
--- a/tmp/e88a4e92-2d8c-4f63-8211-a11f1df19b11_buggy.java
+++ b/tmp/e9b64497-8870-47bc-b8d4-8e8de72a9a22_fixed.java
@@ -1,27 +1,34 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child != null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
     
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
+    // Get the property name, depending on the type of node
+    String name;
+    if (child.isString()) {
+      name = child.getString();
+    } else {
+      // For quoted keys, use the node's original name
+      name = child.getString();
+    }
+    
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
