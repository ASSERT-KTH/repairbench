diff --git a/tmp/9e145408-cc3d-4f74-86a8-1afe630f3cc6_buggy.java b/tmp/37bd7dd0-6933-42b4-823c-3cd7b5f3fe09_fixed.java
index fecb896..a985479 100644
--- a/tmp/9e145408-cc3d-4f74-86a8-1afe630f3cc6_buggy.java
+++ b/tmp/37bd7dd0-6933-42b4-823c-3cd7b5f3fe09_fixed.java
@@ -1,34 +1,40 @@
 /**
  * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
  * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
  * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
  * contains text strings; use unescape for that.
  * @param open opener
  * @param close closer
  * @return data matched from the queue
  */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    char quote = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+        if (last == ESC) {
+            // escaped whatever this char is
+        } else if (quote != 0) {
+            if (c.equals(quote))
+                quote = 0;
+        } else if (c.equals('\'') || c.equals('"')) {
+            quote = c;
+        } else if (c.equals(open)) {
             depth++;
             if (start == -1)
                 start = pos;
-                }
-                else if (c.equals(close))
+        } else if (c.equals(close)) {
             depth--;
         }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
