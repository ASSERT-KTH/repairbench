diff --git a/tmp/22ca44e2-9bff-4598-b2a8-6e2aac699457_buggy.java b/tmp/47d0a50f-d6b2-49a4-91d6-99b6c547b46a_fixed.java
index 4e8b037..0925b77 100644
--- a/tmp/22ca44e2-9bff-4598-b2a8-6e2aac699457_buggy.java
+++ b/tmp/47d0a50f-d6b2-49a4-91d6-99b6c547b46a_fixed.java
@@ -1,20 +1,27 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
     
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    if (valueList == null) {
+        // if no values were provided, use all default values
         valueList = defaultValues;
+    } else if (defaultValues != null && !defaultValues.isEmpty()) {
+        // if we have values but there are also default values,
+        // create a new list containing the provided values
+        List newValueList = new ArrayList(valueList);
+        
+        // add any remaining default values that aren't already used
+        for (int i = valueList.size(); i < defaultValues.size(); i++) {
+            newValueList.add(defaultValues.get(i));
+        }
+        
+        valueList = newValueList;
     }
     
-        // augment the list with the default values
+    // if still no values, check the class-level default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
     
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
