diff --git a/tmp/78f39f77-5966-4860-b44e-d2fc42240cc1_buggy.java b/tmp/6801bdfb-f766-4b61-8e3c-84b6ee6ea409_fixed.java
index 4e8b037..ef06ce3 100644
--- a/tmp/78f39f77-5966-4860-b44e-d2fc42240cc1_buggy.java
+++ b/tmp/6801bdfb-f766-4b61-8e3c-84b6ee6ea409_fixed.java
@@ -1,20 +1,30 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
+    // if no values were specified, use the defaults
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
-
-        // augment the list with the default values
+    // if still no values, try internal defaults
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+    // if there are values but also default values, we need to check if we should
+    // augment with additional defaults
+    else if (defaultValues != null && !defaultValues.isEmpty()) {
+        // Make a copy of the list to avoid modifying the original
+        valueList = new ArrayList(valueList);
+        
+        // Add any remaining defaults that weren't provided by the user
+        List defaults = (List) this.defaultValues.get(option);
+        if (defaults != null && defaults.size() > valueList.size()) {
+            for (int i = valueList.size(); i < defaults.size(); i++) {
+                valueList.add(defaults.get(i));
+            }
+        }
+    }
     
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
