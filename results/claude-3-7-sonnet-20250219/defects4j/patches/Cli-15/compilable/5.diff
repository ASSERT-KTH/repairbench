diff --git a/tmp/b90f2f9b-cf1e-48be-a735-4ea2a41ad615_buggy.java b/tmp/539e6f08-536b-4358-9d71-c8521e55bc4f_fixed.java
index 4e8b037..31261dc 100644
--- a/tmp/b90f2f9b-cf1e-48be-a735-4ea2a41ad615_buggy.java
+++ b/tmp/539e6f08-536b-4358-9d71-c8521e55bc4f_fixed.java
@@ -1,20 +1,31 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    if (valueList == null) {
+        valueList = new ArrayList();
+    } else {
+        // Create a copy of the list to avoid modifying the original
+        valueList = new ArrayList(valueList);
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // If no values or not enough values, add default values
+    if (defaultValues != null) {
+        // Find the starting index to append default values
+        int startIdx = valueList.size();
+        for (int i = startIdx; i < defaultValues.size(); i++) {
+            valueList.add(defaultValues.get(i));
+        }
+    }
+
+    // If still empty, try the internal defaultValues
+    if (valueList.isEmpty() && this.defaultValues.containsKey(option)) {
+        List internalDefaults = (List) this.defaultValues.get(option);
+        if (internalDefaults != null) {
+            valueList.addAll(internalDefaults);
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
     
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
