diff --git a/tmp/862072cb-f1ed-437c-a314-ff07ddd53928_buggy.java b/tmp/bd836444-23e5-403d-aa84-04e7f1ef765e_fixed.java
index cfdcd9c..d6054a0 100644
--- a/tmp/862072cb-f1ed-437c-a314-ff07ddd53928_buggy.java
+++ b/tmp/bd836444-23e5-403d-aa84-04e7f1ef765e_fixed.java
@@ -1,51 +1,48 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
   Node parent = n.getParent();
   // If GETPROP/GETELEM is used as assignment target the array literal is
   // acting as a temporary we can't fold it here:
   //    "[][0] += 1"
   if (isAssignmentTarget(n)) {
     return n;
   }
 
   if (!right.isNumber()) {
     // Sometimes people like to use complex expressions to index into
     // arrays, or strings to index into array methods.
     return n;
   }
 
   double index = right.getDouble();
   int intIndex = (int) index;
   if (intIndex != index) {
     error(INVALID_GETELEM_INDEX_ERROR, right);
     return n;
   }
 
   if (intIndex < 0) {
     error(INDEX_OUT_OF_BOUNDS_ERROR, right);
     return n;
   }
 
   Node current = left.getFirstChild();
-    Node elem = null;
   for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
     current = current.getNext();
   }
 
-    if (elem == null) {
+  if (current == null) {
     error(INDEX_OUT_OF_BOUNDS_ERROR, right);
     return n;
   }
 
-    if (elem.isEmpty()) {
-      elem = NodeUtil.newUndefinedNode(elem);
+  if (current.isEmpty()) {
+    current = NodeUtil.newUndefinedNode(current);
   } else {
-      left.removeChild(elem);
+    left.removeChild(current);
   }
 
   // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
+  n.getParent().replaceChild(n, current);
   reportCodeChange();
-    return elem;
+  return current;
 }
\ No newline at end of file
