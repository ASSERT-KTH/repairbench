diff --git a/tmp/562a71ee-e008-48a8-9910-1eca6d98d1f7_buggy.java b/tmp/9f6d8adc-eb1a-42df-957a-0bc5163aa335_fixed.java
index 0f439b3..731961b 100644
--- a/tmp/562a71ee-e008-48a8-9910-1eca6d98d1f7_buggy.java
+++ b/tmp/9f6d8adc-eb1a-42df-957a-0bc5163aa335_fixed.java
@@ -1,38 +1,42 @@
 /**
  * Reads bytes from the current tar archive entry.
  *
  * This method is aware of the boundaries of the current
  * entry in the archive and will deal with them as if they
  * were this stream's start and EOF.
  *
  * @param buf The buffer into which to place bytes read.
  * @param offset The offset at which to place bytes read.
  * @param numToRead The number of bytes to read.
  * @return The number of bytes read, or -1 at EOF.
  * @throws IOException on error
  */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
     int totalRead = 0;
 
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
 
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
 
     numToRead = Math.min(numToRead, available());
     
     totalRead = is.read(buf, offset, numToRead);
     count(totalRead);
     
     if (totalRead == -1) {
+        // We hit EOF before we read everything we were supposed to
+        if (entryOffset < entrySize) {
+            throw new IOException("Truncated TAR archive");
+        }
         hasHitEOF = true;
     } else {
         entryOffset += totalRead;
     }
 
     return totalRead;
 }
\ No newline at end of file
