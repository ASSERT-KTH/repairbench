diff --git a/tmp/36001702-897d-46c4-8b40-6d769c30b24d_buggy.java b/tmp/17308561-2bf8-4731-ab27-3463bb7e87c5_fixed.java
index 42b58d0..4dcf8ad 100644
--- a/tmp/36001702-897d-46c4-8b40-6d769c30b24d_buggy.java
+++ b/tmp/17308561-2bf8-4731-ab27-3463bb7e87c5_fixed.java
@@ -1,19 +1,24 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
         
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof TypeVariable) {
+            // Simply store the type variable reference without further processing
+            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
