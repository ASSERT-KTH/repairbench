diff --git a/tmp/2caac43a-4577-4767-bc16-9745adbead43_buggy.java b/tmp/7dba50f7-2a4f-4211-aff3-9163fb62fabe_fixed.java
index 42b58d0..ceef64f 100644
--- a/tmp/2caac43a-4577-4767-bc16-9745adbead43_buggy.java
+++ b/tmp/7dba50f7-2a4f-4211-aff3-9163fb62fabe_fixed.java
@@ -1,19 +1,33 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
+    
+    // Check if the raw type is a Class to avoid ClassCastException
+    if (!(parameterizedType.getRawType() instanceof Class)) {
+        return;
+    }
+    
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
+    
+    // Ensure we don't go out of bounds
+    int length = Math.min(typeParameters.length, actualTypeArguments.length);
+    for (int i = 0; i < length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
         
+        // Avoid processing the same type parameter again to prevent infinite recursion
+        if (actualTypeArgument == classType || contextualActualTypeParameters.containsKey(typeParameter)) {
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
