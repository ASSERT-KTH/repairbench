diff --git a/tmp/d3bbbe64-e68a-4789-b2fb-e12d0964b520_buggy.java b/tmp/03290831-1d69-4041-9c7e-035872453c7c_fixed.java
index f674e52..79f1186 100644
--- a/tmp/d3bbbe64-e68a-4789-b2fb-e12d0964b520_buggy.java
+++ b/tmp/03290831-1d69-4041-9c7e-035872453c7c_fixed.java
@@ -1,41 +1,41 @@
 /**
  * Test for the equality of two Complex objects.
  * <p>
  * If both the real and imaginary parts of two Complex numbers
  * are exactly the same, and neither is <code>Double.NaN</code>, the two
  * Complex objects are considered to be equal.</p>
  * <p>
  * All <code>NaN</code> values are considered to be equal - i.e, if either
  * (or both) real and imaginary parts of the complex number are equal
  * to <code>Double.NaN</code>, the complex number is equal to 
  * <code>Complex.NaN</code>.</p>
  *
  * @param other Object to test for equality to this
  * @return true if two Complex objects are equal, false if
  *         object is null, not an instance of Complex, or
  *         not equal to this Complex instance
  * 
  */
 public boolean equals(Object other) {
     boolean ret;
     
     if (this == other) { 
         ret = true;
     } else if (other == null) {
         ret = false;
     } else  {
         try {
             Complex rhs = (Complex)other;
-                if (rhs.isNaN()) {
-                    ret = this.isNaN();
+            if (rhs.isNaN() || this.isNaN()) {
+                ret = rhs.isNaN() && this.isNaN();
             } else {
-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
+                ret = (real == rhs.getReal()) && (imaginary == rhs.getImaginary());
             }
         } catch (ClassCastException ex) {
             // ignore exception
             ret = false;
         }
     }
   
     return ret;
 }
\ No newline at end of file
