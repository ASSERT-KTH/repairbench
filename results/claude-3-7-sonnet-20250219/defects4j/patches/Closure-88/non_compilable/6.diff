diff --git a/tmp/48dd6f42-8bd3-4c6c-b391-88898da9f0a0_buggy.java b/tmp/7dbcf501-4f98-45ff-b608-fc66841954b0_fixed.java
index 9353941..b37fb91 100644
--- a/tmp/48dd6f42-8bd3-4c6c-b391-88898da9f0a0_buggy.java
+++ b/tmp/7dbcf501-4f98-45ff-b608-fc66841954b0_fixed.java
@@ -1,30 +1,43 @@
 /**
  * Give an expression and a variable. It returns READ, if the first
  * reference of that variable is a read. It returns KILL, if the first
  * reference of that variable is an assignment. It returns MAY_LIVE otherwise.
  */
 private VariableLiveness isVariableReadBeforeKill(
     Node n, String variable) {
   if (NodeUtil.isName(n) && variable.equals(n.getString())) {
-      if (NodeUtil.isLhs(n, n.getParent())) {
+    Node parent = n.getParent();
+    if (NodeUtil.isLhs(n, parent)) {
+      // Special case for assignments in a AND, OR, HOOK, etc.
+      // where we need to look at the grandparent to determine if this is
+      // in a read context.
+      if (parent.isAssign() && parent.getFirstChild() == n) {
+        Node gramps = parent.getParent();
+        if (gramps != null && 
+            (gramps.isAnd() || gramps.isOr() || 
+             gramps.isHook() || gramps.isSub() ||
+             NodeUtil.isIife(gramps))) {
+          return VariableLiveness.READ;
+        }
+      }
       // The expression to which the assignment is made is evaluated before
       // the RHS is evaluated (normal left to right evaluation) but the KILL
       // occurs after the RHS is evaluated.
       return VariableLiveness.KILL;
     } else {
       return VariableLiveness.READ;
     }
   }
 
   // Expressions are evaluated left-right, depth first.
   for (Node child = n.getFirstChild();
       child != null; child = child.getNext()) {
     if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
       VariableLiveness state = isVariableReadBeforeKill(child, variable);
       if (state != VariableLiveness.MAYBE_LIVE) {
         return state;
       }
     }
   }
   return VariableLiveness.MAYBE_LIVE;
 }
\ No newline at end of file
