diff --git a/tmp/f6b0cb3f-e10e-4a01-8f42-77b81f5dacb9_buggy.java b/tmp/7243d560-1f37-4295-b54e-5c615cc998d6_fixed.java
index d926eea..6170d2d 100644
--- a/tmp/f6b0cb3f-e10e-4a01-8f42-77b81f5dacb9_buggy.java
+++ b/tmp/7243d560-1f37-4295-b54e-5c615cc998d6_fixed.java
@@ -1,48 +1,45 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
     // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
     // First: custom pattern will override things
     if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                     || format.hasLocale() || format.hasTimeZone()) {
         TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+        if (tz == null) {
+            tz = serializers.getTimeZone();
+        }
+        
+        DateFormat df;
+        if (format.hasPattern()) {
+            final String pattern = format.getPattern();
             final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+            SimpleDateFormat sdf = new SimpleDateFormat(pattern, loc);
+            sdf.setTimeZone(tz);
+            df = sdf;
+        } else {
+            df = serializers.getConfig().getDateFormat().clone();
             df.setTimeZone(tz);
+        }
         return withFormat(Boolean.FALSE, df);
     }
 
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+    // Otherwise, just return as-is
     return this;
 }
\ No newline at end of file
