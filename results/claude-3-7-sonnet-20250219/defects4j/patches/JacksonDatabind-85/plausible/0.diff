diff --git a/tmp/72c1c796-fd85-4bf7-9711-3ce095c68ca2_buggy.java b/tmp/f98f3a95-a29b-4545-acd7-03899e86563c_fixed.java
index d926eea..cb1acfd 100644
--- a/tmp/72c1c796-fd85-4bf7-9711-3ce095c68ca2_buggy.java
+++ b/tmp/f98f3a95-a29b-4545-acd7-03899e86563c_fixed.java
@@ -1,48 +1,56 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
     // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
     // First: custom pattern will override things
     if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                     || format.hasLocale() || format.hasTimeZone()) {
         TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
         final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+        
+        DateFormat df;
+        if (format.hasPattern()) {
+            String pattern = format.getPattern();
+            SimpleDateFormat sdf = new SimpleDateFormat(pattern, loc);
+            if (tz == null) {
+                tz = serializers.getTimeZone();
+            }
+            sdf.setTimeZone(tz);
+            df = sdf;
+        } else {
+            df = serializers.getConfig().getDateFormat();
+            // Need to clone since the format may be used concurrently
+            df = (DateFormat) df.clone();
+            // and use specified timezone or serializer default
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
+        }
         return withFormat(Boolean.FALSE, df);
     }
 
     // Otherwise, need one of these changes:
-
-
     // Jackson's own `StdDateFormat` is quite easy to deal with...
-
     // 08-Jun-2017, tatu: Unfortunately there's no generally usable
     //    mechanism for changing `DateFormat` instances (or even clone()ing)
     //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
     // Ugh. No way to change `Locale`, create copy; must re-crete completely:
     return this;
 }
\ No newline at end of file
