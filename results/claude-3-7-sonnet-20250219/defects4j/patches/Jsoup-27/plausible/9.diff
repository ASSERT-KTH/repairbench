diff --git a/tmp/8ed4b567-209c-4828-a1cc-fbe47b29d535_buggy.java b/tmp/1134fa61-ce4b-4ddb-9c04-a078267f195e_fixed.java
index 7fb120e..ece2eff 100644
--- a/tmp/8ed4b567-209c-4828-a1cc-fbe47b29d535_buggy.java
+++ b/tmp/1134fa61-ce4b-4ddb-9c04-a078267f195e_fixed.java
@@ -1,16 +1,32 @@
 /**
  * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
  * will kick in.)
  * @param contentType e.g. "text/html; charset=EUC-JP"
  * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
  */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        if (charset.startsWith("\"") && charset.endsWith("\"")) {
+            charset = charset.substring(1, charset.length() - 1);
+        }
+        try {
+            if (Charset.isSupported(charset)) {
                 return charset;
             }
+            String charsetUpperCase = charset.toUpperCase(Locale.ENGLISH);
+            if (Charset.isSupported(charsetUpperCase)) {
+                return charsetUpperCase;
+            }
+            String charsetLowerCase = charset.toLowerCase(Locale.ENGLISH);
+            if (Charset.isSupported(charsetLowerCase)) {
+                return charsetLowerCase;
+            }
+        } catch (IllegalArgumentException e) {
+            // if our charset matching was invalid, just return null
+        }
+    }
     return null;
 }
\ No newline at end of file
