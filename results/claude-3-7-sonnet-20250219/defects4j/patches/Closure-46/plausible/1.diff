diff --git a/tmp/cc8938a4-efdd-4557-8194-1fd10c701e1f_buggy.java b/tmp/84456ae8-75e2-423f-9f1c-2483e8bd2fe8_fixed.java
index 46817a7..9a2484f 100644
--- a/tmp/cc8938a4-efdd-4557-8194-1fd10c701e1f_buggy.java
+++ b/tmp/84456ae8-75e2-423f-9f1c-2483e8bd2fe8_fixed.java
@@ -1,16 +1,27 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+  
+  RecordType thatRecord = that.toMaybeRecordType();
+  // Check if the records are structurally the same
+  boolean sameProps = properties.keySet().equals(thatRecord.properties.keySet());
+  if (sameProps) {
+    boolean allPropsEquivalent = true;
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+      if (!getPropertyType(property).isEquivalentTo(
+          thatRecord.getPropertyType(property))) {
+        allPropsEquivalent = false;
+        break;
       }
     }
-    return builder.build();
+    if (allPropsEquivalent) {
+      return this;
+    }
+  }
+  
+  // If the records have different properties or property types,
+  // return the union of the two types
+  return registry.createUnionType(this, that);
 }
\ No newline at end of file
