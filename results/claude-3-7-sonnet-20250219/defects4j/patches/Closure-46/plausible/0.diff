diff --git a/tmp/d4093b38-860e-48b4-b68a-77b4aaed07a4_buggy.java b/tmp/344c6655-3a25-45a2-b341-9f63e0b30553_fixed.java
index 46817a7..f69a5c0 100644
--- a/tmp/d4093b38-860e-48b4-b68a-77b4aaed07a4_buggy.java
+++ b/tmp/344c6655-3a25-45a2-b341-9f63e0b30553_fixed.java
@@ -1,16 +1,29 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+  
+  RecordType thatRecord = that.toMaybeRecordType();
+  // Check if all properties match
+  boolean allPropertiesMatch = true;
+  
+  if (properties.size() != thatRecord.properties.size()) {
+    allPropertiesMatch = false;
+  } else {
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+      if (!thatRecord.hasProperty(property) ||
+          !thatRecord.getPropertyType(property).isEquivalentTo(getPropertyType(property))) {
+        allPropertiesMatch = false;
+        break;
       }
     }
-    return builder.build();
+  }
+  
+  if (allPropertiesMatch) {
+    return this;
+  } else {
+    // If not all properties match, return a union type
+    return registry.createUnionType(this, that);
+  }
 }
\ No newline at end of file
