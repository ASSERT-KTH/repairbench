diff --git a/tmp/a0b6c53a-67f0-48f0-acea-107f8f678343_buggy.java b/tmp/86bbc88e-991c-4ebf-b084-b6cfd272f3af_fixed.java
index 46817a7..c232296 100644
--- a/tmp/a0b6c53a-67f0-48f0-acea-107f8f678343_buggy.java
+++ b/tmp/86bbc88e-991c-4ebf-b084-b6cfd272f3af_fixed.java
@@ -1,16 +1,15 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+  
+  RecordType thatRecord = that.toMaybeRecordType();
+  // Check if this is a subtype of that or vice versa
+  if (this.isSubtype(that) || that.isSubtype(this)) {
+    return this.isSubtype(that) ? that : this;
   }
-    }
-    return builder.build();
+  
+  // If neither is a subtype of the other, return a union type
+  return registry.createUnionType(this, that);
 }
\ No newline at end of file
