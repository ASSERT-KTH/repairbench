diff --git a/tmp/d483e4e1-7763-4c74-93a2-b85571a71019_buggy.java b/tmp/06332673-2b3a-45af-ac20-292e606838b6_fixed.java
index 03b03d7..5a42a7b 100644
--- a/tmp/d483e4e1-7763-4c74-93a2-b85571a71019_buggy.java
+++ b/tmp/06332673-2b3a-45af-ac20-292e606838b6_fixed.java
@@ -1,25 +1,28 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
     
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // if earlierOrLater is true, use the later offset (instantAfter)
+    // if earlierOrLater is false, use the earlier offset (instantBefore)
+    long offset = earlierOrLater ? 
+            convertLocalToUTC(local, false, true) :   // later offset
+            convertLocalToUTC(local, false, false);   // earlier offset
+    
+    return offset;
 }
\ No newline at end of file
