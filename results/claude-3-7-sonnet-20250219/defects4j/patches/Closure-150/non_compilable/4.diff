diff --git a/tmp/4dc79e7d-2abc-4479-aa83-38d4fa13bb11_buggy.java b/tmp/8e0041eb-44cc-430c-bee0-19ea32cacb46_fixed.java
index 800e6e1..5bf3d80 100644
--- a/tmp/4dc79e7d-2abc-4479-aa83-38d4fa13bb11_buggy.java
+++ b/tmp/8e0041eb-44cc-430c-bee0-19ea32cacb46_fixed.java
@@ -1,32 +1,39 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.GETPROP:
+          // Handle function and object literals in assignments
+          if (parent.getType() == Token.ASSIGN &&
+              parent.getFirstChild() == n) {
+            visitProperty(t, n, parent);
+          }
+          break;
       }
     }
\ No newline at end of file
