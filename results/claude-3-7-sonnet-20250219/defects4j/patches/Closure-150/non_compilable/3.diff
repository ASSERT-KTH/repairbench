diff --git a/tmp/5919b434-4e50-4fd3-8738-d5a0b682833e_buggy.java b/tmp/9ff93afd-ca42-4d98-9a61-743f927a71c0_fixed.java
index 800e6e1..00f03db 100644
--- a/tmp/5919b434-4e50-4fd3-8738-d5a0b682833e_buggy.java
+++ b/tmp/9ff93afd-ca42-4d98-9a61-743f927a71c0_fixed.java
@@ -1,32 +1,46 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.GETPROP:
+          // Handle function stubs (e.g., "goog.foo;" and "this.foo;")
+          if (parent.getType() == Token.EXPR_RESULT) {
+            // Skip the EXPR_RESULT node
+            Node gramps = parent.getParent();
+            // Skip the enclosing block (e.g., SCRIPT, BLOCK)
+            if (gramps != null) {
+              JSDocInfo info = n.getJSDocInfo();
+              if (info != null && info.containsFunctionDeclaration()) {
+                collectFunctionProperty(n, info);
+              }
+            }
+          }
+          break;
       }
     }
\ No newline at end of file
