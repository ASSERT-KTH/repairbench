diff --git a/tmp/caccefa2-1401-41e4-be03-1bffbc088419_buggy.java b/tmp/e5bdd54f-eb5f-431c-8e9b-b3066106db06_fixed.java
index be2af16..599334b 100644
--- a/tmp/caccefa2-1401-41e4-be03-1bffbc088419_buggy.java
+++ b/tmp/e5bdd54f-eb5f-431c-8e9b-b3066106db06_fixed.java
@@ -1,29 +1,44 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
+    } catch (IllegalFieldValueException ex) {
+        // If we get here with a field value error, we need to check if it might be a valid Julian date
+        try {
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant < iCutoverMillis) {
+                return instant;
+            }
+            throw new IllegalArgumentException("Specified date does not exist");
+        } catch (IllegalFieldValueException e) {
+            throw e;
+        }
+    }
 }
\ No newline at end of file
