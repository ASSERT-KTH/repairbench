diff --git a/tmp/7952e577-70b7-42b3-a1f7-489b84fda362_buggy.java b/tmp/8009fc4c-a27f-4bfb-bd3d-23141519ff4a_fixed.java
index 5f8ac1a..440892b 100644
--- a/tmp/7952e577-70b7-42b3-a1f7-489b84fda362_buggy.java
+++ b/tmp/8009fc4c-a27f-4bfb-bd3d-23141519ff4a_fixed.java
@@ -1,34 +1,43 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
+    if (p1 == null && p2 == null) {
+        return 0;
+    }
+    
+    if (p1 != null && p1.equals(p2)) {
+        return 0;
+    }
+    
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0 ? -1 : r;
     }
+    
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
-        if (p1 == null && p2 == null) {
-            return 0;
-        }
 
-        if (p1 != null && p1.equals(p2)) {
-            return 0;
+    if (depth1 == 0 || depth2 == 0) {
+        // Different trees - compare pointer types and values as strings
+        if (p1 == null) {
+            return -1;
         }
-
-        if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
+        if (p2 == null) {
+            return 1;
         }
+        int result = p1.getClass().getName().compareTo(p2.getClass().getName());
+        return result != 0 ? result : p1.toString().compareTo(p2.toString());
+    }
+    
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
