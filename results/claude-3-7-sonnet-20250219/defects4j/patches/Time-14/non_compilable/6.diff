diff --git a/tmp/f31393e4-26b8-4839-ab95-96fc928745d9_buggy.java b/tmp/5a8652a0-276d-48f7-b6dc-99d7b3c6f60c_fixed.java
index 10616db..0ae3c14 100644
--- a/tmp/f31393e4-26b8-4839-ab95-96fc928745d9_buggy.java
+++ b/tmp/5a8652a0-276d-48f7-b6dc-99d7b3c6f60c_fixed.java
@@ -1,19 +1,43 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
-        if (DateTimeUtils.isContiguous(partial)) {
+    
+    // Check if partial is non-contiguous - in that case use superclass
+    if (!DateTimeUtils.isContiguous(partial)) {
+        return super.add(partial, fieldIndex, values, valueToAdd);
+    }
+    
+    if (partial.size() > 0 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear())) {
+        // This is a special case for MonthDay fields
+        DurationField field = getField().getDurationField();
+        int[] newValues = new int[values.length];
+        System.arraycopy(values, 0, newValues, 0, values.length);
+        
+        // Get proper month and day values
+        int curMonth = newValues[0];
+        newValues[0] = getFieldIndex(curMonth, valueToAdd);
+        
+        // Adjust the day if needed for the new month length
+        if (partial.size() > 1 && partial.getFieldType(1).equals(DateTimeFieldType.dayOfMonth())) {
+            int curDay = newValues[1];
+            int maxDay = iChronology.getDaysInMonthMax(newValues[0]);
+            if (curDay > maxDay) {
+                newValues[1] = maxDay;
+            }
+        }
+        
+        return newValues;
+    } else {
+        // For other types, use the standard approach
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
-        } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
