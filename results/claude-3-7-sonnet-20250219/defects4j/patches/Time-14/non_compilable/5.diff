diff --git a/tmp/f5722744-8cfb-4c78-bad4-98c044cf90f3_buggy.java b/tmp/2f91b4f4-1f6e-4847-a177-c4a80bcb3487_fixed.java
index 10616db..81b96d9 100644
--- a/tmp/f5722744-8cfb-4c78-bad4-98c044cf90f3_buggy.java
+++ b/tmp/2f91b4f4-1f6e-4847-a177-c4a80bcb3487_fixed.java
@@ -1,19 +1,42 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
+    if (partial instanceof MonthDay) {
+        // Special handling for MonthDay to properly manage leap years
+        int[] newValues = new int[values.length];
+        System.arraycopy(values, 0, newValues, 0, values.length);
+        
+        // Add months directly without validation yet
+        DateTimeFieldType monthField = DateTimeFieldType.monthOfYear();
+        int monthFieldIndex = partial.indexOf(monthField);
+        if (monthFieldIndex >= 0 && fieldIndex == monthFieldIndex) {
+            // We're adding to the month field
+            newValues[monthFieldIndex] = values[monthFieldIndex] + valueToAdd;
+            // Make sure month is valid (1-12)
+            while (newValues[monthFieldIndex] <= 0) {
+                newValues[monthFieldIndex] += 12;
+            }
+            while (newValues[monthFieldIndex] > 12) {
+                newValues[monthFieldIndex] -= 12;
+            }
+            return partial.getField(0).getType().getField(iChronology).set(partial, 0, newValues);
+        }
+    }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
