diff --git a/tmp/7b07f50f-3d56-48de-b826-b2eb0b79b2d9_buggy.java b/tmp/0e73166f-04f0-40ab-9ada-abe91dd981a1_fixed.java
index 10616db..e06d4a6 100644
--- a/tmp/7b07f50f-3d56-48de-b826-b2eb0b79b2d9_buggy.java
+++ b/tmp/0e73166f-04f0-40ab-9ada-abe91dd981a1_fixed.java
@@ -1,19 +1,43 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
+    if (partial instanceof MonthDay) {
+        // Handle special case of MonthDay with February 29
+        int[] newValues = new int[values.length];
+        System.arraycopy(values, 0, newValues, 0, values.length);
+        
+        DateTimeField monthField = partial.getFieldType(0).getField(iChronology);
+        DateTimeField dayField = partial.getFieldType(1).getField(iChronology);
+        
+        int month = monthField.add(values[0], valueToAdd);
+        int day = values[1];
+        
+        if (day > 28) {
+            int maxDay = dayField.getMaximumValue(month);
+            if (day > maxDay) {
+                day = maxDay;
+            }
+        }
+        
+        newValues[0] = month;
+        newValues[1] = day;
+        return newValues;
+    }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
