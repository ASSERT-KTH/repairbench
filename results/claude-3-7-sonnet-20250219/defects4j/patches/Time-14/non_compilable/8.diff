diff --git a/tmp/378ba061-71f8-4bf4-82c5-a58a7876a938_buggy.java b/tmp/9aa9afd6-a968-43bf-9cfa-d57889e305d2_fixed.java
index 10616db..13ef3e8 100644
--- a/tmp/378ba061-71f8-4bf4-82c5-a58a7876a938_buggy.java
+++ b/tmp/9aa9afd6-a968-43bf-9cfa-d57889e305d2_fixed.java
@@ -1,19 +1,35 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
+    if (partial instanceof MonthDay) {
+        // Special handling for MonthDay to deal with leap year issues
+        int[] newValues = new int[values.length];
+        System.arraycopy(values, 0, newValues, 0, values.length);
+        
+        // Add the value
+        newValues[fieldIndex] = newValues[fieldIndex] + valueToAdd;
+        
+        // Check if this is a month field and we're dealing with Feb 29
+        if (fieldIndex == 0 && partial.size() >= 2 && newValues[1] == 29 && newValues[0] == 2) {
+            // We're dealing with Feb 29, which is valid, so return as is
+            return newValues;
+        }
+    }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
