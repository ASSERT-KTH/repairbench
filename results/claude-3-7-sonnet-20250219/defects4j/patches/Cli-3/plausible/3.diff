diff --git a/tmp/bc6a3286-78c9-4d93-9fde-ad7b1fc05983_buggy.java b/tmp/a0ffcf24-885b-4b73-abcb-5b7174e60bcf_fixed.java
index d9b400d..b8d6fb0 100644
--- a/tmp/bc6a3286-78c9-4d93-9fde-ad7b1fc05983_buggy.java
+++ b/tmp/a0ffcf24-885b-4b73-abcb-5b7174e60bcf_fixed.java
@@ -1,21 +1,32 @@
 /**
  * <p>Create a number from a String. If a . is present, it creates a 
  *    Double, otherwise a Long. </p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
 public static Number createNumber(String str)
 {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+    if (str == null) {
+        return null;
+    }
+    try {
+        // If it contains a decimal point, use Double
+        if (str.indexOf('.') != -1) {
+            return Double.valueOf(str);
+        } else {
+            // Otherwise, use Long
+            return Long.valueOf(str);
+        }
+    }
+    catch (NumberFormatException nfe) {
+        try {
+            // Try Double as a fallback for cases like scientific notation
+            return Double.valueOf(str);
+        } catch (NumberFormatException e) {
+            // Silent handling of error
         }
-        catch (NumberFormatException nfe)
-        {
-            System.err.println(nfe.getMessage());
     }
-
     return null;
 }
\ No newline at end of file
