diff --git a/tmp/ec44b82f-af7b-4a39-b532-a5d003bef2d0_buggy.java b/tmp/c771b2cf-cb3d-404a-aaac-ab07ea2a17d2_fixed.java
index d9b400d..dd1c9a1 100644
--- a/tmp/ec44b82f-af7b-4a39-b532-a5d003bef2d0_buggy.java
+++ b/tmp/c771b2cf-cb3d-404a-aaac-ab07ea2a17d2_fixed.java
@@ -1,21 +1,35 @@
 /**
  * <p>Create a number from a String. If a . is present, it creates a 
  *    Double, otherwise a Long. </p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
 public static Number createNumber(String str)
 {
+    if (str == null) {
+        return null;
+    }
+    
     try
     {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+        // If there's a decimal point, create a Double directly to ensure consistent type
+        if (str.indexOf('.') >= 0) {
+            return Double.valueOf(str);
+        } else {
+            // Otherwise try to parse as a Long
+            return Long.valueOf(str);
+        }
     }
     catch (NumberFormatException nfe)
     {
+        // If Long parsing fails, try Double as a fallback
+        try {
+            return Double.valueOf(str);
+        } catch (NumberFormatException e) {
             System.err.println(nfe.getMessage());
-        }
-
             return null;
         }
+    }
+}
\ No newline at end of file
