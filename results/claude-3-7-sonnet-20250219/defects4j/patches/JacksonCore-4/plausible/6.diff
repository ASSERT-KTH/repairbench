diff --git a/tmp/f83d10ac-930d-49e9-970e-941efcafb434_buggy.java b/tmp/78f64cd5-1b6d-4f88-b9a5-0b4edf8c3813_fixed.java
index c6cb157..6db0cb7 100644
--- a/tmp/f83d10ac-930d-49e9-970e-941efcafb434_buggy.java
+++ b/tmp/78f64cd5-1b6d-4f88-b9a5-0b4edf8c3813_fixed.java
@@ -1,14 +1,28 @@
 /**
  * Method called to expand size of the current segment, to
  * accommodate for more contiguous content. Usually only
  * used when parsing tokens like names if even then.
  */
 public char[] expandCurrentSegment()
 {
     final char[] curr = _currentSegment;
     // Let's grow by 50% by default
     final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    
+    // Always ensure we're actually growing
+    int newLen;
+    if (len >= MAX_SEGMENT_LEN) {
+        // Once we've reached the max, grow more slowly but ensure we're growing
+        newLen = len + (len >> 2); // 25% growth
+    } else {
+        // Normal case: grow by 50% but cap at MAX_SEGMENT_LEN
+        newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    }
+    
+    // Make sure we always increase by at least 1
+    if (newLen <= len) {
+        newLen = len + 1;
+    }
+    
     return (_currentSegment = Arrays.copyOf(curr, newLen));
 }
\ No newline at end of file
