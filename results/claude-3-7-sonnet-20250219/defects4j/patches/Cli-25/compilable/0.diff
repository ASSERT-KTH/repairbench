diff --git a/tmp/a5ac4215-5c66-4c10-9193-c892ef4b352e_buggy.java b/tmp/ba15ddcd-3997-4fbc-b1ed-37c1d8e82cc7_fixed.java
index 875b31b..5359180 100644
--- a/tmp/a5ac4215-5c66-4c10-9193-c892ef4b352e_buggy.java
+++ b/tmp/ba15ddcd-3997-4fbc-b1ed-37c1d8e82cc7_fixed.java
@@ -1,54 +1,55 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // all following lines must be padded with nextLineTabStop space characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
+            
+            // If the text length is less than the width, then this is the last line
+            if (text.length() <= width)
+            {
+                sb.append(rtrim(text));
+                return sb;
+            }
+            
             pos = findWrapPos(text, width, 0);
             
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
             
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+            // Handle case where pos is right at the indent level
+            if (pos <= nextLineTabStop)
             {
                 pos = width;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
