diff --git a/tmp/6fb8bf74-533f-4526-8f3f-c75a78a752ca_buggy.java b/tmp/00da2627-1c6a-407d-b983-ea7886c885f0_fixed.java
index 5f1dcf2..d37bbb2 100644
--- a/tmp/6fb8bf74-533f-4526-8f3f-c75a78a752ca_buggy.java
+++ b/tmp/00da2627-1c6a-407d-b983-ea7886c885f0_fixed.java
@@ -1,41 +1,44 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
         
         incrementIterationsCounter();
         
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
         
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
             
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
             
-                return;
-
-            }
+        } else {
             
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+            } else {
+                // accept the original simplex with the best point
+                simplex = original;
+            }
+            
+        }
         
         // check convergence
+        if (getConvergenceChecker().converged(getIterations(), original[0], simplex[0])) {
             return;
         }
-
     }
-
 }
\ No newline at end of file
