diff --git a/tmp/ed631c4d-6ce8-4e3d-a6a3-8779f3c0d377_buggy.java b/tmp/cdb3c35b-d063-4390-a631-9154e82b333a_fixed.java
index 5f1dcf2..21487a4 100644
--- a/tmp/ed631c4d-6ce8-4e3d-a6a3-8779f3c0d377_buggy.java
+++ b/tmp/cdb3c35b-d063-4390-a631-9154e82b333a_fixed.java
@@ -1,41 +1,46 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
-
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
-
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
-
+            // check convergence
+            if (checkConvergence()) {
                 return;
-
             }
-
+        } else {
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
-
                 // check convergence
+                if (checkConvergence()) {
                     return;
                 }
-
+            } else {
+                // perform a reduction step
+                evaluateNewSimplex(original, sigma, comparator);
+                // check convergence
+                if (checkConvergence()) {
+                    return;
+                }
+            }
+        }
     }
-
 }
\ No newline at end of file
