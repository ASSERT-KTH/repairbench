diff --git a/tmp/4ea8cf95-5c6e-44f3-aab9-8ee5ffbbe9a4_buggy.java b/tmp/b7062cf3-c999-4b2d-84b9-9680f2956588_fixed.java
index 1b29465..1d7f7a1 100644
--- a/tmp/4ea8cf95-5c6e-44f3-aab9-8ee5ffbbe9a4_buggy.java
+++ b/tmp/b7062cf3-c999-4b2d-84b9-9680f2956588_fixed.java
@@ -1,50 +1,54 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
     if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
     boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
     if (tq.matchChomp("/>")) { // close empty element or tag
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
     // pc data only tags (textarea, script): chomp to end tag, add content as text node
     if (tag.isData()) {
-            String data = tq.chompTo("</" + tagName);
+        String tagEnd = "</" + tagName;
+        String data = tq.consumeTo(tagEnd);
+        if (tq.matches(tagEnd)) { // found the end tag
+            child.appendChild(tag.equals(titleTag) || tag.equals(textareaTag) ? 
+                TextNode.createFromEncoded(data, baseUri) : 
+                new DataNode(data, baseUri));
             tq.chompTo(">");
-            
-            Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
-                dataNode = TextNode.createFromEncoded(data, baseUri);
-            else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
-            child.appendChild(dataNode);   
+        } else { // did not find end tag
+            // handle as plain text
+            child.appendChild(tag.equals(titleTag) || tag.equals(textareaTag) ? 
+                TextNode.createFromEncoded(data, baseUri) : 
+                new DataNode(data, baseUri));
+        }
     }
 
     // <base href>: update the base uri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
         if (href.length() != 0) { // ignore <base target> etc
             baseUri = href;
             doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
         }
     }
 }
\ No newline at end of file
