diff --git a/tmp/7620548f-522d-4b31-9a52-db2cbdde1274_buggy.java b/tmp/219dbe64-138e-4c9c-8f58-319a70642df6_fixed.java
index fc8c302..2dc303f 100644
--- a/tmp/7620548f-522d-4b31-9a52-db2cbdde1274_buggy.java
+++ b/tmp/219dbe64-138e-4c9c-8f58-319a70642df6_fixed.java
@@ -1,23 +1,33 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
+        // Check for text that we might be able to decode as base64
+        if (n.isTextual() && b64variant != null) {
+            String text = n.textValue();
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException e) {
+                // Let's just use the default error message from decoder:
+                throw _constructError("Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage());
+            }
+        }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
