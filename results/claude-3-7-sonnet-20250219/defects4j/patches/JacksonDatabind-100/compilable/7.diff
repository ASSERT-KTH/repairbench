diff --git a/tmp/c5f6368e-94f8-4620-b439-c89c2bcc8fb9_buggy.java b/tmp/3fc87cb4-a5c8-41b3-b9c1-b9664dacce61_fixed.java
index fc8c302..5946ed9 100644
--- a/tmp/c5f6368e-94f8-4620-b439-c89c2bcc8fb9_buggy.java
+++ b/tmp/3fc87cb4-a5c8-41b3-b9c1-b9664dacce61_fixed.java
@@ -1,23 +1,36 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n instanceof TextNode) {
+            // Text nodes need to use the provided variant for proper decoding
+            String value = n.textValue();
+            if (value != null && !value.isEmpty()) {
+                try {
+                    return b64variant.decode(value);
+                } catch (IllegalArgumentException e) {
+                    throw _constructError("Cannot access contents of TextNode as binary due to broken Base64 encoding: " 
+                            + e.getMessage());
+                }
+            }
+        } else {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
+    }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
