diff --git a/tmp/bf90150e-3c9e-4b0a-8593-40fdfaf2616a_buggy.java b/tmp/8531ba90-b8f8-4b4a-91f4-49c9662b6412_fixed.java
index 19fd63e..d425153 100644
--- a/tmp/bf90150e-3c9e-4b0a-8593-40fdfaf2616a_buggy.java
+++ b/tmp/8531ba90-b8f8-4b4a-91f4-49c9662b6412_fixed.java
@@ -1,24 +1,31 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
+          if (maybeExpr.getType() == Token.EXPR_RESULT) {
+            Node expr = maybeExpr.getFirstChild();
+            if (expr.getType() == Token.CALL) {
+              Node callee = expr.getFirstChild();
+              if (callee.getType() == Token.GETPROP && 
+                  callee.getLastChild().getString().equals("onchange")) {
+                return false;
+              }
+            }
+          }
 
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
\ No newline at end of file
