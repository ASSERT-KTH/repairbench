diff --git a/tmp/5824bbcd-c4a5-4f70-a199-1beb2a4fa58a_buggy.java b/tmp/62aee7d3-12c2-4227-ae38-e1804704fae6_fixed.java
index 19fd63e..6b2cfb4 100644
--- a/tmp/5824bbcd-c4a5-4f70-a199-1beb2a4fa58a_buggy.java
+++ b/tmp/62aee7d3-12c2-4227-ae38-e1804704fae6_fixed.java
@@ -1,24 +1,33 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
-
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
+          Node expr = maybeExpr.getFirstChild();
+          if (expr.getType() == Token.CALL) {
+            Node callee = expr.getFirstChild();
             // We only have to worry about methods with an implicit 'this'
             // param, or this doesn't happen.
+            if (callee.getType() == Token.GETPROP &&
+                callee.getLastChild().getString().startsWith("on")) {
+              return false;
+            }
+          }
+        }
 
         return NodeUtil.isExpressionNode(maybeExpr);
     }
   }
 
   return false;
 }
\ No newline at end of file
