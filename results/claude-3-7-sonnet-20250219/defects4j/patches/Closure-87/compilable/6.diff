diff --git a/tmp/ca9c44e5-5123-48a7-a713-110928a53109_buggy.java b/tmp/663e885c-d4ee-4a84-b135-5755dd0c2c0c_fixed.java
index 19fd63e..d3e08c4 100644
--- a/tmp/ca9c44e5-5123-48a7-a713-110928a53109_buggy.java
+++ b/tmp/663e885c-d4ee-4a84-b135-5755dd0c2c0c_fixed.java
@@ -1,24 +1,31 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
       // IE has a bug where event handlers behave differently when
       // their return value is used vs. when their return value is in
       // an EXPR_RESULT. It's pretty freaking weird. See:
       // http://code.google.com/p/closure-compiler/issues/detail?id=291
       // We try to detect this case, and not fold EXPR_RESULTs
       // into other expressions.
-
+      if (NodeUtil.isExpressionNode(maybeExpr)) {
+        Node expr = maybeExpr.getFirstChild();
+        if (expr.getType() == Token.CALL) {
+          Node callee = expr.getFirstChild();
           // We only have to worry about methods with an implicit 'this'
           // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+          if (callee.getType() == Token.GETPROP && 
+              callee.getLastChild().getString().startsWith("on")) {
+            return false;
+          }
+        }
+        return true;
+      }
     }
   }
-
   return false;
 }
\ No newline at end of file
