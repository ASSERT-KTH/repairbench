diff --git a/tmp/a2df2e3f-8260-42e2-a716-c3ddc08c2750_buggy.java b/tmp/79c1f08e-e9b3-4dde-9c36-711f4b68f571_fixed.java
index 19fd63e..2459905 100644
--- a/tmp/a2df2e3f-8260-42e2-a716-c3ddc08c2750_buggy.java
+++ b/tmp/79c1f08e-e9b3-4dde-9c36-711f4b68f571_fixed.java
@@ -1,24 +1,36 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
       
-          return NodeUtil.isExpressionNode(maybeExpr);
+      if (NodeUtil.isExpressionNode(maybeExpr)) {
+        // Don't fold expressions that may be event handlers in IE
+        Node expr = maybeExpr.getFirstChild();
+        if (expr.getType() == Token.CALL) {
+          Node callee = expr.getFirstChild();
+          if (callee.getType() == Token.GETPROP && 
+              callee.getLastChild().getString().startsWith("on")) {
+            return false;
+          }
+        }
+        return true;
+      }
+      return false;
     }
   }
 
   return false;
 }
\ No newline at end of file
