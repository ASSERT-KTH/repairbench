diff --git a/tmp/11e9dc70-f9bc-4882-bf09-0ce09ef04a31_buggy.java b/tmp/3cd1efe5-3bf5-4da3-8174-c06868b81966_fixed.java
index b6b11b6..23012f7 100644
--- a/tmp/11e9dc70-f9bc-4882-bf09-0ce09ef04a31_buggy.java
+++ b/tmp/3cd1efe5-3bf5-4da3-8174-c06868b81966_fixed.java
@@ -1,38 +1,37 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos);
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+        for (int i = start; i < pattern.length(); i = pos.getIndex()) {
+            if (escapingOn && i + 1 < pattern.length() && c[i] == QUOTE && c[i + 1] == QUOTE) {
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+                }
+                pos.setIndex(i + 2);
                 lastHold = pos.getIndex();
                 continue;
             }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
+            if (c[i] == QUOTE) {
                 next(pos);
+                return appendTo == null ? null : appendTo.append(c, lastHold, i - lastHold);
             }
+            next(pos);
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
