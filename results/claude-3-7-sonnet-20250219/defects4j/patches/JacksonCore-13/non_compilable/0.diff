diff --git a/tmp/f3fbca82-9da3-43b5-b849-967e949f3758_buggy.java b/tmp/360cb1c5-6848-44b6-8fe9-439a753d8bbd_fixed.java
index e69de29..cfb2feb 100644
--- a/tmp/f3fbca82-9da3-43b5-b849-967e949f3758_buggy.java
+++ b/tmp/360cb1c5-6848-44b6-8fe9-439a753d8bbd_fixed.java
@@ -0,0 +1,27 @@
+private void _testFieldNameQuotingEnabled(JsonFactory f, boolean useBytes, boolean enableQuoting, String expJson) throws IOException
+{
+    ByteArrayOutputStream bytes = new ByteArrayOutputStream();
+    StringWriter sw = new StringWriter();
+    JsonGenerator gen = useBytes ? f.createGenerator(ObjectWriteContext.empty(), bytes) 
+                                : f.createGenerator(ObjectWriteContext.empty(), sw);
+    
+    if (enableQuoting) {
+        gen.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    } else {
+        gen.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    }
+    
+    gen.writeStartObject();
+    gen.writeFieldName("foo");
+    gen.writeNumber(1);
+    gen.writeEndObject();
+    gen.close();
+    
+    String json = useBytes ? bytes.toString("UTF-8") : sw.toString();
+    
+    // Direct string comparison instead of assertEquals to better debug any invisible character issues
+    if (!expJson.equals(json)) {
+        fail("Expected: '" + expJson + "' (length: " + expJson.length() 
+             + "), actual: '" + json + "' (length: " + json.length() + ")");
+    }
+}
\ No newline at end of file
