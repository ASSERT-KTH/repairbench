diff --git a/tmp/255383f2-f952-492f-a368-910f298f9e25_buggy.java b/tmp/2fd48f19-1bb9-40eb-8a8c-dc149da7aecd_fixed.java
index 2573d30..45b8a5f 100644
--- a/tmp/255383f2-f952-492f-a368-910f298f9e25_buggy.java
+++ b/tmp/2fd48f19-1bb9-40eb-8a8c-dc149da7aecd_fixed.java
@@ -1,20 +1,25 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  Node child = node.getFirstChild();
+  // Check the object of the property access
+  if (child.isName() && isNameAssignedTo(child.getString(), replacement)) {
+    return false;
+  }
+  
+  // Recursively check any nested property accesses
+  if (child.isGetProp() && !isSafeReplacement(child, replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
