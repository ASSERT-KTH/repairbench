diff --git a/tmp/6f898398-ca91-4614-94d1-bb63c71803f5_buggy.java b/tmp/eeb1ba30-7364-44fc-88f8-26c7945a04ea_fixed.java
index 98d89dc..1e53dcd 100644
--- a/tmp/6f898398-ca91-4614-94d1-bb63c71803f5_buggy.java
+++ b/tmp/eeb1ba30-7364-44fc-88f8-26c7945a04ea_fixed.java
@@ -1,23 +1,33 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+    
+    // Special handling for NaN values
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        if (getOperation() == Ops.EQUAL) {
+            return Double.isNaN(ld) && Double.isNaN(rd);
+        } else {
+            return false;
+        }
+    }
+    
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
