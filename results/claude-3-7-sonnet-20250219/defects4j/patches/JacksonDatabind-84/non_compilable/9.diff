diff --git a/tmp/7dc62ebb-edc0-4959-b808-e367aaa3713f_buggy.java b/tmp/87add307-ff6e-4868-a1b7-50ed2823a0aa_fixed.java
index e69de29..22d4800 100644
--- a/tmp/7dc62ebb-edc0-4959-b808-e367aaa3713f_buggy.java
+++ b/tmp/87add307-ff6e-4868-a1b7-50ed2823a0aa_fixed.java
@@ -0,0 +1,21 @@
+protected void _addProperties(Map<String,NamedType> types, AnnotatedClass cls)
+{
+    List<NamedType> childTypes = new ArrayList<>();
+    for (AnnotatedClass ac : cls.getSubTypes()) {
+        // First, add super types (recursively) before adding subtypes
+        _addProperties(types, ac);
+        childTypes.add(new NamedType(ac.getRawType(), ac.getName()));
+    }
+    types.put(cls.getName(), new NamedType(cls.getRawType(), cls.getName()));
+    // And then types for all properties
+    for (AnnotatedMember member : cls.getFieldMembers()) {
+        if (!member.hasValueHandler()) continue;
+        Property property = new Property(member);
+        Type propertyType = member.getGenericType();
+        types.put(property.getName(), new NamedType(TypeFactory.defaultInstance().constructType(propertyType), property.getName()));
+    }
+    // Then add child types
+    for (NamedType namedType : childTypes) {
+        types.put(namedType.getName(), namedType);
+    }
+}
\ No newline at end of file
