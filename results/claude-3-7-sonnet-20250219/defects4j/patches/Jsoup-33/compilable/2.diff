diff --git a/tmp/abcdc8a4-0ae8-4478-bfa8-010839799a5d_buggy.java b/tmp/175d8171-2f24-4ddb-a0ab-1a358541da9e_fixed.java
index dc93be3..bb12b49 100644
--- a/tmp/abcdc8a4-0ae8-4478-bfa8-010839799a5d_buggy.java
+++ b/tmp/175d8171-2f24-4ddb-a0ab-1a358541da9e_fixed.java
@@ -1,14 +1,18 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        
+        // Don't add self-closing tags to the stack or emit end tags for them
+        if (!el.tag().isKnownTag() || el.tag().isEmpty()) {
             return el;
         }
         
+        // For known non-empty tags that use self-closing syntax, continue processing normally
+    }
+    
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
