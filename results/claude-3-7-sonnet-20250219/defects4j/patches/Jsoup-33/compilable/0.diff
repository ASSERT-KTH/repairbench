diff --git a/tmp/004e43ef-0a90-437c-84c4-c0232db25de6_buggy.java b/tmp/84fe7f58-5e74-4b92-9eab-9e889e3277fa_fixed.java
index dc93be3..cb3a16e 100644
--- a/tmp/004e43ef-0a90-437c-84c4-c0232db25de6_buggy.java
+++ b/tmp/84fe7f58-5e74-4b92-9eab-9e889e3277fa_fixed.java
@@ -1,14 +1,22 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (Tag.isKnownTag(startTag.name())) {
+            // known tag, but marked as self closing
+            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+            insert(el);
+            return el;
+        } else {
+            // unknown tag, treat as empty
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
+    }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
