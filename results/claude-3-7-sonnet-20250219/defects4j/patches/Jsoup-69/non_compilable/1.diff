diff --git a/tmp/2c3308b0-b7e7-4d50-b5b8-6b24d8b96e2c_buggy.java b/tmp/5160ef17-c6a0-4216-bac4-373d10b45a6e_fixed.java
index e69de29..3771bdf 100644
--- a/tmp/2c3308b0-b7e7-4d50-b5b8-6b24d8b96e2c_buggy.java
+++ b/tmp/5160ef17-c6a0-4216-bac4-373d10b45a6e_fixed.java
@@ -0,0 +1,37 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+    
+    // Only collect data from elements that are still attached to the DOM
+    Elements elements = select("input, textarea, select");
+    
+    for (Element el : elements) {
+        if (!el.hasAttr("name"))
+            continue;
+        
+        String name = el.attr("name");
+        if (name.length() == 0)
+            continue;
+        
+        String type = el.attr("type");
+        if ("select".equals(el.normalName())) {
+            Elements options = el.select("option[selected]");
+            boolean found = false;
+            for (Element option : options) {
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+                found = true;
+            }
+            if (!found && el.select("option").size() > 0) {
+                Element option = el.select("option").first();
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+            }
+        } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            if (el.hasAttr("checked")) {
+                final String val = el.val().length() > 0 ? el.val() : "on";
+                data.add(HttpConnection.KeyVal.create(name, val));
+            }
+        } else {
+            data.add(HttpConnection.KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
