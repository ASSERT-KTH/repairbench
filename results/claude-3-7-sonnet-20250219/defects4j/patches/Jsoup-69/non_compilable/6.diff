diff --git a/tmp/c6569d1a-1b80-4a68-b5d2-b088631c2aca_buggy.java b/tmp/35e45205-c2fc-4547-ae0f-6d2d86a85631_fixed.java
index e69de29..769c806 100644
--- a/tmp/c6569d1a-1b80-4a68-b5d2-b088631c2aca_buggy.java
+++ b/tmp/35e45205-c2fc-4547-ae0f-6d2d86a85631_fixed.java
@@ -0,0 +1,39 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+    
+    // Only select elements that are still attached to the DOM
+    Elements elements = select("input, textarea, select");
+    
+    for (Element el : elements) {
+        if (!el.hasAttr("name")) {
+            continue;
+        }
+        String name = el.attr("name");
+        if (name.length() == 0) {
+            continue;
+        }
+        String type = el.attr("type");
+        
+        if ("select".equals(el.tagName())) {
+            Elements options = el.select("option[selected]");
+            boolean foundSelected = false;
+            for (Element option : options) {
+                data.add(KeyVal.create(name, option.val()));
+                foundSelected = true;
+            }
+            
+            if (!foundSelected && el.select("option").size() > 0) {
+                Element option = el.select("option").first();
+                data.add(KeyVal.create(name, option.val()));
+            }
+        } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            if (el.hasAttr("checked")) {
+                final String val = el.val().length() > 0 ? el.val() : "on";
+                data.add(KeyVal.create(name, val));
+            }
+        } else {
+            data.add(KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
