diff --git a/tmp/7ab555de-f847-4d4a-925d-4e4e860b9817_buggy.java b/tmp/4462e0bf-e1ac-40f7-9009-bc78b9853b4b_fixed.java
index e69de29..82ff11e 100644
--- a/tmp/7ab555de-f847-4d4a-925d-4e4e860b9817_buggy.java
+++ b/tmp/4462e0bf-e1ac-40f7-9009-bc78b9853b4b_fixed.java
@@ -0,0 +1,36 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+    
+    // Get all input elements that are still attached to the document
+    Elements elementsByTag = this.getElementsByTag("input");
+    for (Element el : elementsByTag) {
+        if (!el.hasAttr("name") || "".equals(el.attr("name"))) {
+            continue; // Skip inputs with no / empty name
+        }
+        
+        String name = el.attr("name");
+        String type = el.attr("type");
+        if ("select".equals(el.tagName())) {
+            Elements options = el.select("option[selected]");
+            boolean found = false;
+            for (Element option : options) {
+                data.add(KeyVal.create(name, option.val()));
+                found = true;
+            }
+            if (!found && el.select("option").size() > 0) {
+                Element option = el.select("option").first();
+                data.add(KeyVal.create(name, option.val()));
+            }
+        } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            // only add checkbox or radio if they have the checked attribute
+            if (el.hasAttr("checked")) {
+                final String val = el.val().length() > 0 ? el.val() : "on";
+                data.add(KeyVal.create(name, val));
+            }
+        } else {
+            data.add(KeyVal.create(name, el.val()));
+        }
+    }
+    
+    return data;
+}
\ No newline at end of file
