diff --git a/tmp/9cada184-48e0-4116-933d-547ccfd980d0_buggy.java b/tmp/845713c5-6ddd-41a0-ac30-cbfc824078e7_fixed.java
index 8e93a5e..f837ceb 100644
--- a/tmp/9cada184-48e0-4116-933d-547ccfd980d0_buggy.java
+++ b/tmp/845713c5-6ddd-41a0-ac30-cbfc824078e7_fixed.java
@@ -1,43 +1,67 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
+    // Check if the text already contains line breaks
+    String[] lines = text.split("\n");
+    boolean firstLine = true;
     
-        if (pos == -1)
+    for (String line : lines)
     {
-            sb.append(rtrim(text));
+        if (!firstLine)
+        {
+            sb.append(defaultNewLine);
+            if (nextLineTabStop > 0)
+            {
+                sb.append(createPadding(nextLineTabStop));
+            }
+        }
+        
+        firstLine = false;
+        
+        renderWrappedTextLine(sb, width, nextLineTabStop, line);
+    }
     
     return sb;
 }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+private void renderWrappedTextLine(StringBuffer sb, int width, 
+                                   int nextLineTabStop, String line)
+{
+    int pos = findWrapPos(line, width, 0);
+
+    if (pos == -1)
+    {
+        sb.append(rtrim(line));
+        return;
+    }
+    
+    sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+
+    // all following lines must be padded with nextLineTabStop space characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+        line = padding + line.substring(pos).trim();
+        pos = findWrapPos(line, width, 0);
 
         if (pos == -1)
         {
-                sb.append(text);
-
-                return sb;
+            sb.append(rtrim(line));
+            return;
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
