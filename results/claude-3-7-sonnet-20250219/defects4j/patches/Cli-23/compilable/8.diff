diff --git a/tmp/5dab2cee-37ad-42d7-9f49-999604ae4532_buggy.java b/tmp/8e56ed03-f06b-4f55-9602-fc56ececad12_fixed.java
index 227a4ef..21ab91e 100644
--- a/tmp/5dab2cee-37ad-42d7-9f49-999604ae4532_buggy.java
+++ b/tmp/8e56ed03-f06b-4f55-9602-fc56ececad12_fixed.java
@@ -1,48 +1,49 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
-            int lastPos = pos;
         text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
         
-            if (pos == -1)
-            {
+        // If the text length is less than the width, just append it
+        if (text.length() <= width) {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
         }
         
+        pos = findWrapPos(text, width, 0);
+        
+        if (pos == -1) {
+            // Can't find a good wrapping position, force a wrap at width
+            pos = width;
+            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        } else {
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
+}
\ No newline at end of file
