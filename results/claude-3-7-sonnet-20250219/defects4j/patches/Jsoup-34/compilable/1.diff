diff --git a/tmp/d67db58d-c313-428e-a3d2-7742279454d6_buggy.java b/tmp/2d8b5451-5706-4236-87fd-0b94c01045ec_fixed.java
index 21f64c6..314169a 100644
--- a/tmp/d67db58d-c313-428e-a3d2-7742279454d6_buggy.java
+++ b/tmp/2d8b5451-5706-4236-87fd-0b94c01045ec_fixed.java
@@ -1,23 +1,27 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
     // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
         if (startChar != input[offset])
             while(++offset < length && startChar != input[offset]);
+        if (offset >= length)
+            break;
+            
         int i = offset + 1;
         int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+        if (last <= length) { // ensure we don't try to check beyond the input length
+            int j = 1;
+            for (; i < last && j < seq.length() && seq.charAt(j) == input[i]; i++, j++);
+            if (i == last && j == seq.length()-1) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
