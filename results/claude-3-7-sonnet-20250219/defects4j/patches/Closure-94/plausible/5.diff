diff --git a/tmp/548f20cb-f61a-48e4-8c94-2687f5f05b36_buggy.java b/tmp/b753bad9-2432-42c3-b43a-2b92afc30cb7_fixed.java
index 66e3d01..85009bd 100644
--- a/tmp/548f20cb-f61a-48e4-8c94-2687f5f05b36_buggy.java
+++ b/tmp/b753bad9-2432-42c3-b43a-2b92afc30cb7_fixed.java
@@ -1,34 +1,37 @@
 /**
  * Determines whether the given value may be assigned to a define.
  *
  * @param val The value being assigned.
  * @param defines The list of names of existing defines.
  */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
   switch (val.getType()) {
     case Token.STRING:
     case Token.NUMBER:
     case Token.TRUE:
     case Token.FALSE:
       return true;
 
     // Binary operators are only valid if both children are valid.
     case Token.BITAND:
     case Token.BITNOT:
     case Token.BITOR:
     case Token.BITXOR:
+    case Token.ADD:
+      return isValidDefineValue(val.getFirstChild(), defines) &&
+             isValidDefineValue(val.getLastChild(), defines);
 
     // Uniary operators are valid if the child is valid.
     case Token.NOT:
     case Token.NEG:
       return isValidDefineValue(val.getFirstChild(), defines);
 
     // Names are valid if and only if they are defines themselves.
     case Token.NAME:
     case Token.GETPROP:
       if (val.isQualifiedName()) {
         return defines.contains(val.getQualifiedName());
       }
   }
   return false;
 }
\ No newline at end of file
