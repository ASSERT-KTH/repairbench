diff --git a/tmp/c22f1da4-4823-4eb1-8222-577f369fae5e_buggy.java b/tmp/c1ad953b-1605-4e23-92a9-0ca20912d85e_fixed.java
index f650982..6606f02 100644
--- a/tmp/c22f1da4-4823-4eb1-8222-577f369fae5e_buggy.java
+++ b/tmp/c1ad953b-1605-4e23-92a9-0ca20912d85e_fixed.java
@@ -1,42 +1,64 @@
 /**
  * Compares two values
  */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right) 
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
 //    System.err.println("COMPARING: " +
 //        (l == null ? "null" : l.getClass().getName()) + " " +
 //        (r == null ? "null" : r.getClass().getName()));
 
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
     }
 
     if ((l instanceof Iterator) && !(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
     if (!(l instanceof Iterator) && (r instanceof Iterator)) {
         return contains((Iterator) r, l);
     }
-        if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
+    if ((l instanceof Iterator) && (r instanceof Iterator)) {
+        // Save the original iterators
+        Iterator li = (Iterator) l;
+        Iterator ri = (Iterator) r;
+        
+        // First check if there's a direct match
+        boolean match = findMatch(li, ri);
+        if (match) {
+            return true;
+        }
+        
+        // If no direct match was found, try comparing individual elements
+        // by exhaustively checking each element in left iterator against each in right
+        while (li.hasNext()) {
+            Object lv = li.next();
+            Iterator riCopy = (Iterator) r;
+            while (riCopy.hasNext()) {
+                Object rv = riCopy.next();
+                if (equal(lv, rv)) {
+                    return true;
+                }
+            }
+        }
+        return false;
     }
     return equal(l, r);
 }
\ No newline at end of file
