diff --git a/tmp/bbdac3eb-ff2c-4885-a404-d8974b83a751_buggy.java b/tmp/1879a944-44ad-44bb-b37a-24a80aad078f_fixed.java
index f955f47..24c748f 100644
--- a/tmp/bbdac3eb-ff2c-4885-a404-d8974b83a751_buggy.java
+++ b/tmp/1879a944-44ad-44bb-b37a-24a80aad078f_fixed.java
@@ -1,34 +1,41 @@
 public String getDescription() {
     if (_desc == null) {
         StringBuilder sb = new StringBuilder();
 
         if (_from == null) { // can this ever occur?
             sb.append("UNKNOWN");
         } else {
             Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
+            // For non-static inner classes, we need to include the enclosing class
+            String fullName = cls.getName();
+            String simpleName = cls.getSimpleName();
+            if (fullName.contains("$")) {
+                // This handles inner classes by keeping the enclosing class info
+                String enclosingName = fullName.substring(0, fullName.lastIndexOf('$') + 1);
+                sb.append(enclosingName);
+                sb.append(simpleName);
+            } else {
+                // For regular classes, use the package + simple name approach
                 String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
                 if (pkgName != null) {
                     sb.append(pkgName);
                     sb.append('.');
                 }
-                    sb.append(cls.getSimpleName());
+                sb.append(simpleName);
+            }
         }
         sb.append('[');
         if (_fieldName != null) {
             sb.append('"');
             sb.append(_fieldName);
             sb.append('"');
         } else if (_index >= 0) {
             sb.append(_index);
         } else {
             sb.append('?');
         }
         sb.append(']');
         _desc = sb.toString();
     }
     return _desc;
 }
\ No newline at end of file
