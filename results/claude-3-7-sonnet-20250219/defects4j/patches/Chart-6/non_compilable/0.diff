diff --git a/tmp/66d69188-22f5-44ca-81cd-1b6a131eefd9_buggy.java b/tmp/0b18c35e-b167-4a96-a364-6e8ee00d6521_fixed.java
index 351a97a..43bece0 100644
--- a/tmp/66d69188-22f5-44ca-81cd-1b6a131eefd9_buggy.java
+++ b/tmp/0b18c35e-b167-4a96-a364-6e8ee00d6521_fixed.java
@@ -1,18 +1,42 @@
 /**
  * Tests the list for equality with another object (typically also a list).
  *
  * @param obj  the other object (<code>null</code> permitted).
  *
  * @return A boolean.
  */
 public boolean equals(Object obj) {
-
     if (obj == this) {
         return true;
     }
     if (!(obj instanceof ShapeList)) {
         return false;
     }
-        return super.equals(obj);
     
+    ShapeList that = (ShapeList) obj;
+    int listSize = size();
+    if (listSize != that.size()) {
+        return false;
+    }
+    
+    for (int i = 0; i < listSize; i++) {
+        Shape s1 = getShape(i);
+        Shape s2 = that.getShape(i);
+        if (s1 == null) {
+            if (s2 != null) {
+                return false;
+            }
+        } 
+        else if (s1 instanceof Line2D && s2 instanceof Line2D) {
+            Line2D l1 = (Line2D) s1;
+            Line2D l2 = (Line2D) s2;
+            if (!l1.getP1().equals(l2.getP1()) || !l1.getP2().equals(l2.getP2())) {
+                return false;
+            }
+        }
+        else if (!s1.equals(s2)) {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
