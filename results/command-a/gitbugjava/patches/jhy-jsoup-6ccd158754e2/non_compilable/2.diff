diff --git a/tmp/2e0322d4-b63d-45ec-93b2-d84ac0658134_buggy.java b/tmp/9135bae8-1363-456e-9ad5-b6568d310378_fixed.java
index 23f078d..4c5f7e7 100644
--- a/tmp/2e0322d4-b63d-45ec-93b2-d84ac0658134_buggy.java
+++ b/tmp/9135bae8-1363-456e-9ad5-b6568d310378_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
+        int charCount = Character.charCount(c); // Get the number of chars this code point occupies
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (c > 127 || charCount > 1) { // out of ascii range or supplementary character
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name());
+            sb.append(encoded.replace("+", "%2B")); // Ensure '+' is encoded as %2B
         } else {
             sb.append((char) c);
         }
+        i += charCount - 1; // Skip the additional chars of the supplementary character
     }
 }
\ No newline at end of file
