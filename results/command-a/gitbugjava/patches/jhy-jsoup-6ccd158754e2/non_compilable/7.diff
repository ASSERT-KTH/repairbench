diff --git a/tmp/f528453d-2682-4f9a-af2c-826ed05bf607_buggy.java b/tmp/d88a12aa-cc48-4af9-98f5-735678178405_fixed.java
index 23f078d..3954bb4 100644
--- a/tmp/f528453d-2682-4f9a-af2c-826ed05bf607_buggy.java
+++ b/tmp/d88a12aa-cc48-4af9-98f5-735678178405_fixed.java
@@ -1,14 +1,18 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
+        int charCount = Character.charCount(c); // Get the number of chars this code point occupies
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
+        } else if (c > 127 || Character.isSupplementaryCodePoint(c)) { // out of ascii range or supplementary character
             sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            // Skip the next character if it's a high or low surrogate
+            if (charCount == 2) {
+                i++;
+            }
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
