diff --git a/tmp/79017cc6-bcfe-4f8a-8cf5-01948d3ce9b7_buggy.java b/tmp/7f36c911-a904-4055-ab83-0d417eef8a0a_fixed.java
index 23f078d..ee0f400 100644
--- a/tmp/79017cc6-bcfe-4f8a-8cf5-01948d3ce9b7_buggy.java
+++ b/tmp/7f36c911-a904-4055-ab83-0d417eef8a0a_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+                String encoded = URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name());
+                // remove any trailing '?' that URLEncoder might add for supplementary characters
+                if (encoded.endsWith("%3F")) {
+                    encoded = encoded.substring(0, encoded.length() - 3);
+                }
+                sb.append(encoded);
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file
