diff --git a/tmp/bb14a889-00ae-4190-a0b5-51b2bbb9fe11_buggy.java b/tmp/55231c0c-2e09-460b-8caa-2ebaacc15b1b_fixed.java
index c84c989..befd88e 100644
--- a/tmp/bb14a889-00ae-4190-a0b5-51b2bbb9fe11_buggy.java
+++ b/tmp/55231c0c-2e09-460b-8caa-2ebaacc15b1b_fixed.java
@@ -1,27 +1,38 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
-
         buf.readUnsignedShortLE(); // length
-
         buf.skipBytes(3); // identification header
         buf.readUnsignedIntLE(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+        long time = buf.readUnsignedIntLE();
+
+        if (time > 86400) {
+            time = time % 86400; // Wrap time if greater than 24 hours
+        }
+
+        position.setTime(new Date((
+            buf.readUnsignedByte() * 86400L * 365L + // years
+            (buf.readUnsignedByte() - 1) * 86400L * 30L + // months
+            buf.readUnsignedByte() * 86400L + // days
+            (buf.readUnsignedByte() - 1) * 3600L + // hours
+            buf.readUnsignedByte() * 60L + // minutes
+            buf.readUnsignedByte() // seconds
+        ) * 1000L));
 
         buf.skipBytes(23); // coordinates block
-
         buf.skipBytes(3); // data tag header
+
         decodeMinimalDataSet(position, buf);
 
         return position;
     }
\ No newline at end of file
