diff --git a/tmp/689722d8-4056-466a-a328-e65df1e57152_buggy.java b/tmp/98bbe3b2-a5df-4141-968f-f486a4e27d79_fixed.java
index b8e3fa3..2ed559c 100644
--- a/tmp/689722d8-4056-466a-a328-e65df1e57152_buggy.java
+++ b/tmp/98bbe3b2-a5df-4141-968f-f486a4e27d79_fixed.java
@@ -1,65 +1,75 @@
 /**
  * Builds the {@link BackOffPolicy} with the given parameters.
  * @return the {@link BackOffPolicy} instance
  */
 public BackOffPolicy build() {
     if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
         ExponentialBackOffPolicy policy;
         if (Boolean.TRUE.equals(this.random)) {
             policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
+        } else {
             policy = new ExponentialBackOffPolicy();
         }
+        configureExponentialPolicy(policy);
+        return policy;
+    }
+    if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
+        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
+        configureUniformPolicy(policy);
+        return policy;
+    }
+    FixedBackOffPolicy policy = new FixedBackOffPolicy();
+    configureFixedPolicy(policy);
+    return policy;
+}
+
+private void configureExponentialPolicy(ExponentialBackOffPolicy policy) {
     if (this.delay != null) {
         policy.setInitialInterval(this.delay);
     }
     if (this.delaySupplier != null) {
         policy.initialIntervalSupplier(this.delaySupplier);
     }
     if (this.multiplier != null) {
         policy.setMultiplier(this.multiplier);
     }
     if (this.multiplierSupplier != null) {
         policy.multiplierSupplier(this.multiplierSupplier);
     }
-			if (this.maxDelay != null && this.delay != null) {
-				policy.setMaxInterval(
-						this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
+    if (this.maxDelay != null) {
+        policy.setMaxInterval(this.maxDelay);
     }
     if (this.maxDelaySupplier != null) {
         policy.maxIntervalSupplier(this.maxDelaySupplier);
     }
     if (this.sleeper != null) {
         policy.setSleeper(this.sleeper);
     }
-			return policy;
 }
-		if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
-			UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
+
+private void configureUniformPolicy(UniformRandomBackOffPolicy policy) {
     if (this.delay != null) {
         policy.setMinBackOffPeriod(this.delay);
     }
     if (this.delaySupplier != null) {
         policy.minBackOffPeriodSupplier(this.delaySupplier);
     }
     if (this.maxDelay != null) {
         policy.setMaxBackOffPeriod(this.maxDelay);
     }
     if (this.maxDelaySupplier != null) {
         policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
     }
     if (this.sleeper != null) {
         policy.setSleeper(this.sleeper);
     }
-			return policy;
 }
-		FixedBackOffPolicy policy = new FixedBackOffPolicy();
+
+private void configureFixedPolicy(FixedBackOffPolicy policy) {
     if (this.delay != null) {
         policy.setBackOffPeriod(this.delay);
     }
     if (this.sleeper != null) {
         policy.setSleeper(this.sleeper);
     }
-		return policy;
 }
\ No newline at end of file
