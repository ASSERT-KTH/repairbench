diff --git a/tmp/24f40ae1-2f19-4d12-a07f-67b8d15f27c6_buggy.java b/tmp/599a617d-91d5-49c8-b354-864f5c59136a_fixed.java
index b8e3fa3..e55bb63 100644
--- a/tmp/24f40ae1-2f19-4d12-a07f-67b8d15f27c6_buggy.java
+++ b/tmp/599a617d-91d5-49c8-b354-864f5c59136a_fixed.java
@@ -1,65 +1,71 @@
 /**
  * Builds the {@link BackOffPolicy} with the given parameters.
+ * 
  * @return the {@link BackOffPolicy} instance
  */
 public BackOffPolicy build() {
     if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
         ExponentialBackOffPolicy policy;
         if (Boolean.TRUE.equals(this.random)) {
             policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
+        } else {
             policy = new ExponentialBackOffPolicy();
         }
-			if (this.delay != null) {
-				policy.setInitialInterval(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.initialIntervalSupplier(this.delaySupplier);
-			}
-			if (this.multiplier != null) {
-				policy.setMultiplier(this.multiplier);
-			}
-			if (this.multiplierSupplier != null) {
-				policy.multiplierSupplier(this.multiplierSupplier);
-			}
-			if (this.maxDelay != null && this.delay != null) {
-				policy.setMaxInterval(
-						this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
-			}
-			if (this.maxDelaySupplier != null) {
-				policy.maxIntervalSupplier(this.maxDelaySupplier);
-			}
-			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
-			}
+        configurePolicy(policy);
         return policy;
     }
     if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
         UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
-			if (this.delay != null) {
-				policy.setMinBackOffPeriod(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.minBackOffPeriodSupplier(this.delaySupplier);
-			}
-			if (this.maxDelay != null) {
-				policy.setMaxBackOffPeriod(this.maxDelay);
-			}
-			if (this.maxDelaySupplier != null) {
-				policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
-			}
-			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
-			}
+        configurePolicy(policy);
         return policy;
     }
     FixedBackOffPolicy policy = new FixedBackOffPolicy();
+    configurePolicy(policy);
+    return policy;
+}
+
+private void configurePolicy(BackOffPolicy policy) {
+    if (policy instanceof ExponentialBackOffPolicy) {
+        ExponentialBackOffPolicy expPolicy = (ExponentialBackOffPolicy) policy;
         if (this.delay != null) {
-			policy.setBackOffPeriod(this.delay);
+            expPolicy.setInitialInterval(this.delay);
+        }
+        if (this.delaySupplier != null) {
+            expPolicy.initialIntervalSupplier(this.delaySupplier);
+        }
+        if (this.multiplier != null) {
+            expPolicy.setMultiplier(this.multiplier);
+        }
+        if (this.multiplierSupplier != null) {
+            expPolicy.multiplierSupplier(this.multiplierSupplier);
+        }
+        if (this.maxDelay != null) {
+            expPolicy.setMaxInterval(this.maxDelay);
+        }
+        if (this.maxDelaySupplier != null) {
+            expPolicy.maxIntervalSupplier(this.maxDelaySupplier);
+        }
+    } else if (policy instanceof UniformRandomBackOffPolicy) {
+        UniformRandomBackOffPolicy uniPolicy = (UniformRandomBackOffPolicy) policy;
+        if (this.delay != null) {
+            uniPolicy.setMinBackOffPeriod(this.delay);
+        }
+        if (this.delaySupplier != null) {
+            uniPolicy.minBackOffPeriodSupplier(this.delaySupplier);
+        }
+        if (this.maxDelay != null) {
+            uniPolicy.setMaxBackOffPeriod(this.maxDelay);
+        }
+        if (this.maxDelaySupplier != null) {
+            uniPolicy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
+        }
+    } else if (policy instanceof FixedBackOffPolicy) {
+        FixedBackOffPolicy fixedPolicy = (FixedBackOffPolicy) policy;
+        if (this.delay != null) {
+            fixedPolicy.setBackOffPeriod(this.delay);
+        }
     }
     if (this.sleeper != null) {
         policy.setSleeper(this.sleeper);
     }
-		return policy;
 }
\ No newline at end of file
