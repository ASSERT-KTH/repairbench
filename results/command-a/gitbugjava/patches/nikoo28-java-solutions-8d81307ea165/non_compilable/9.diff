diff --git a/tmp/65f1a117-b1f6-4a6d-97ef-353c4258be8f_buggy.java b/tmp/52596553-185f-49dc-922b-686440ca273f_fixed.java
index 9739964..3e4a58d 100644
--- a/tmp/65f1a117-b1f6-4a6d-97ef-353c4258be8f_buggy.java
+++ b/tmp/52596553-185f-49dc-922b-686440ca273f_fixed.java
@@ -1,27 +1,32 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+      while (!indexStack.isEmpty() && prices[indexStack.peek()] < prices[i]) {
         indexStack.pop();
+      }
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
-      if (indexStack.isEmpty())
+      if (indexStack.isEmpty()) {
         spans[i] = i + 1;
-      else
+      } else {
         spans[i] = i - indexStack.peek();
+      }
 
+      // Handle the case where the current price is equal to the previous price
+      if (!indexStack.isEmpty() && prices[indexStack.peek()] == prices[i]) {
+        spans[i] = 1;
+      } else {
         indexStack.push(i);
       }
+    }
 
     return spans;
   }
\ No newline at end of file
