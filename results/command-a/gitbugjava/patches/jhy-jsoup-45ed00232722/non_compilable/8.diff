diff --git a/tmp/d6b22eea-48f2-4e86-b377-97777c8a90fc_buggy.java b/tmp/889b84cd-1078-4f2a-96ad-c7a578186e54_fixed.java
index 855afa5..6dd9652 100644
--- a/tmp/d6b22eea-48f2-4e86-b377-97777c8a90fc_buggy.java
+++ b/tmp/889b84cd-1078-4f2a-96ad-c7a578186e54_fixed.java
@@ -1,13 +1,29 @@
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+            // Properly encode the URL components
+            String protocol = u.getProtocol();
+            String host = u.getHost();
+            int port = u.getPort();
+            String path = u.getPath();
+            String query = u.getQuery();
+            String ref = u.getRef();
+
+            // Encode each component separately
+            URI uri = new URI(protocol, null, host, port, 
+                encodePath(path), encodeQuery(query), ref);
+
             return new URL(uri.toASCIIString());
         } catch (URISyntaxException | MalformedURLException e) {
             // give up and return the original input
             return u;
         }
     }
+
+    private static String encodePath(String path) {
+        return path != null ? path.replace(" ", "%20").replace("[", "%5B").replace("]", "%5D") : null;
+    }
+
+    private static String encodeQuery(String query) {
+        return query != null ? query.replace(" ", "%20") : null;
+    }
\ No newline at end of file
