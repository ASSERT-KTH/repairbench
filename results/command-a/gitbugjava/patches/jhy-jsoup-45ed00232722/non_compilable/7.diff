diff --git a/tmp/d38617a7-62b3-4688-9e71-44ac400b4a6c_buggy.java b/tmp/85b7dee2-c5ec-416a-9fdb-5f4eaf537a98_fixed.java
index 855afa5..26cc94e 100644
--- a/tmp/d38617a7-62b3-4688-9e71-44ac400b4a6c_buggy.java
+++ b/tmp/85b7dee2-c5ec-416a-9fdb-5f4eaf537a98_fixed.java
@@ -1,13 +1,14 @@
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+            // Correct way to encode URLs, handling all components properly
+            URI uri = new URI(u.getProtocol(), u.getUserInfo(), u.getHost(), u.getPort(), u.getPath(), u.getQuery(), u.getRef());
+            String encodedPath = uri.getPath() != null ? uri.getPath().replace(" ", "%20") : "";
+            String encodedQuery = uri.getQuery() != null ? uri.getQuery().replace(" ", "%20") : "";
+            URI encodedUri = new URI(uri.getScheme(), uri.getAuthority(), encodedPath, encodedQuery, uri.getFragment());
+            return new URL(encodedUri.toASCIIString());
         } catch (URISyntaxException | MalformedURLException e) {
             // give up and return the original input
             return u;
         }
     }
\ No newline at end of file
