diff --git a/tmp/6a53c3da-1dfe-4038-bab0-15ea069f832a_buggy.java b/tmp/f094dce5-b97a-470a-8b0e-e4995d330e4f_fixed.java
index 855afa5..4fa8a05 100644
--- a/tmp/6a53c3da-1dfe-4038-bab0-15ea069f832a_buggy.java
+++ b/tmp/f094dce5-b97a-470a-8b0e-e4995d330e4f_fixed.java
@@ -1,13 +1,16 @@
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+            // Properly encode the URL using URI utilities
+            String urlS = u.toExternalForm();
+            URI uri = new URI(urlS);
+            String encodedPath = uri.getRawPath() != null ? URLEncoder.encode(uri.getRawPath(), "UTF-8").replace("+", "%20") : "";
+            String encodedQuery = uri.getRawQuery() != null ? URLEncoder.encode(uri.getRawQuery(), "UTF-8").replace("+", "%20") : "";
+            String encodedFragment = uri.getRawFragment() != null ? URLEncoder.encode(uri.getRawFragment(), "UTF-8").replace("+", "%20") : "";
+            String encodedUrl = new URI(uri.getScheme(), uri.getAuthority(), encodedPath, encodedQuery, encodedFragment).toASCIIString();
+            return new URL(encodedUrl);
+        } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
             // give up and return the original input
             return u;
         }
     }
\ No newline at end of file
