diff --git a/tmp/8716c350-8041-4232-9c8c-31c276b16e39_buggy.java b/tmp/698ef7fa-19a2-487f-9e8a-3b72d0665a98_fixed.java
index 42b7b48..1e2115b 100644
--- a/tmp/8716c350-8041-4232-9c8c-31c276b16e39_buggy.java
+++ b/tmp/698ef7fa-19a2-487f-9e8a-3b72d0665a98_fixed.java
@@ -1,16 +1,23 @@
 /**
  * Adds 1 to the frequency count for v.
  * <p>
  * If other objects have already been added to this Frequency, v must
  * be comparable to those that have already been added.
  * </p>
  * 
  * @param v the value to add.
  * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
  *         or is not comparable with previous entries
  * @deprecated use {@link #addValue(Comparable)} instead
  */
 @Deprecated
+@SuppressWarnings("unchecked")
 public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+    if (!(v instanceof Comparable)) {
+        throw new IllegalArgumentException("Object is not Comparable");
+    }
+    if (!this.values.isEmpty() && !((Comparable<Object>) this.values.iterator().next()).getClass().isInstance(v)) {
+        throw new IllegalArgumentException("Object is not comparable with previous entries");
+    }
+    addValue((Comparable<Object>) v);            
 }
\ No newline at end of file
