diff --git a/tmp/7528d173-9eef-4fad-bb86-e0e987090532_buggy.java b/tmp/074b7d99-48d0-486a-baa8-16014a1f2fe5_fixed.java
index 42b7b48..f895431 100644
--- a/tmp/7528d173-9eef-4fad-bb86-e0e987090532_buggy.java
+++ b/tmp/074b7d99-48d0-486a-baa8-16014a1f2fe5_fixed.java
@@ -1,16 +1,31 @@
 /**
  * Adds 1 to the frequency count for v.
  * <p>
  * If other objects have already been added to this Frequency, v must
  * be comparable to those that have already been added.
  * </p>
  * 
  * @param v the value to add.
  * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
  *         or is not comparable with previous entries
  * @deprecated use {@link #addValue(Comparable)} instead
  */
 @Deprecated
 public void addValue(Object v) {
+    if (!(v instanceof Comparable)) {
+        throw new IllegalArgumentException("Object is not Comparable");
+    }
+    if (!getValues().isEmpty() && !isComparable(v, getValues().iterator().next())) {
+        throw new IllegalArgumentException("Object is not comparable with previous entries");
+    }
     addValue((Comparable<?>) v);            
 }
+
+private boolean isComparable(Object a, Object b) {
+    try {
+        ((Comparable<?>) a).compareTo(b);
+        return true;
+    } catch (ClassCastException e) {
+        return false;
+    }
+}
\ No newline at end of file
