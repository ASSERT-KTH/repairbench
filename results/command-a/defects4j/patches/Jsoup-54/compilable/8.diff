diff --git a/tmp/84868f38-16c5-4267-a6c7-016226ac3720_buggy.java b/tmp/6cfa7d6a-29d9-4379-b318-d76973010f0c_fixed.java
index d5b3da9..9cc55c6 100644
--- a/tmp/84868f38-16c5-4267-a6c7-016226ac3720_buggy.java
+++ b/tmp/6cfa7d6a-29d9-4379-b318-d76973010f0c_fixed.java
@@ -1,7 +1,44 @@
 private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
     for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
+        // valid xml attribute names must start with a letter, underscore, or colon, and can only contain letters, digits, underscores, colons, hyphens, and periods.
+        String key = attribute.getKey();
+        if (!isValidXmlAttributeName(key)) {
+            key = makeValidXmlAttributeName(key);
+        }
         el.setAttribute(key, attribute.getValue());
     }
 }
+
+private boolean isValidXmlAttributeName(String key) {
+    if (key == null || key.isEmpty()) {
+        return false;
+    }
+    if (!Character.isLetter(key.charAt(0)) && key.charAt(0) != '_' && key.charAt(0) != ':') {
+        return false;
+    }
+    for (int i = 1; i < key.length(); i++) {
+        char c = key.charAt(i);
+        if (!Character.isLetterOrDigit(c) && c != '_' && c != ':' && c != '-' && c != '.') {
+            return false;
+        }
+    }
+    return true;
+}
+
+private String makeValidXmlAttributeName(String key) {
+    StringBuilder sb = new StringBuilder();
+    if (key != null && !key.isEmpty()) {
+        char firstChar = key.charAt(0);
+        if (!Character.isLetter(firstChar)) {
+            firstChar = '_'; // Replace invalid first character with underscore
+        }
+        sb.append(firstChar);
+        for (int i = 1; i < key.length(); i++) {
+            char c = key.charAt(i);
+            if (Character.isLetterOrDigit(c) || c == '_' || c == ':' || c == '-' || c == '.') {
+                sb.append(c);
+            }
+        }
+    }
+    return sb.length() == 0 ? "_" : sb.toString(); // Ensure the attribute name is not empty
+}
\ No newline at end of file
