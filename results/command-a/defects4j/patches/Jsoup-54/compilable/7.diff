diff --git a/tmp/1c935e6e-32be-480a-a4b2-619a6dfda8b8_buggy.java b/tmp/1053b445-4c11-4819-8425-c25319a002db_fixed.java
index d5b3da9..4e32d24 100644
--- a/tmp/1c935e6e-32be-480a-a4b2-619a6dfda8b8_buggy.java
+++ b/tmp/1053b445-4c11-4819-8425-c25319a002db_fixed.java
@@ -1,7 +1,33 @@
 private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
-            for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
+    for (org.jsoup.nodes.Attribute attribute : source.attributes()) {
+        String key = attribute.getKey();
+        // Check if the attribute key is valid for XML
+        if (isValidXmlAttributeName(key)) {
             el.setAttribute(key, attribute.getValue());
+        } else {
+            // If not valid, replace invalid characters with an empty string
+            String sanitizedKey = key.replaceAll("[^-a-zA-Z0-9_:.]", "");
+            if (!sanitizedKey.isEmpty()) {
+                el.setAttribute(sanitizedKey, attribute.getValue());
             }
         }
+    }
+}
+
+private boolean isValidXmlAttributeName(String key) {
+    if (key == null || key.isEmpty()) {
+        return false;
+    }
+    // XML attribute names must start with a letter, underscore, or colon
+    if (!Character.isLetter(key.charAt(0)) && key.charAt(0) != '_' && key.charAt(0) != ':') {
+        return false;
+    }
+    // The rest of the characters can be letters, digits, hyphens, underscores, colons, or dots
+    for (int i = 1; i < key.length(); i++) {
+        char c = key.charAt(i);
+        if (!Character.isLetterOrDigit(c) && c != '-' && c != '_' && c != ':' && c != '.') {
+            return false;
+        }
+    }
+    return true;
+}
\ No newline at end of file
