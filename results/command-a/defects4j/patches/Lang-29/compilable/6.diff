diff --git a/tmp/c68ab4ad-9fe0-4239-9798-78616feb519a_buggy.java b/tmp/330e38f7-be05-4020-b727-90ab19157f5e_fixed.java
index 3ec995f..689cc4a 100644
--- a/tmp/c68ab4ad-9fe0-4239-9798-78616feb519a_buggy.java
+++ b/tmp/330e38f7-be05-4020-b727-90ab19157f5e_fixed.java
@@ -1,26 +1,12 @@
-    /**
-     * <p>
-     * Converts the given Java version string to an <code>int</code>.
-     * </p>
-     * 
-     * <p>
-     * Example return values:
-     * </p>
-     * <ul>
-     * <li><code>120</code> for Java 1.2</li>
-     * <li><code>131</code> for Java 1.3.1</li>
-     * <li><code>160</code> for Java 1.6.0_20</li>
-     * </ul>
-     * 
-     * <p>
-     * Patch releases are not reported.
-     * </p>
-     * <p>
-     * This method is package private instead of private to support unit test invocation.
-     * </p>
-     * 
-     * @return the version, for example 131 for Java 1.3.1
-     */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+    static int toJavaVersionInt(String version) {
+        if (version == null || version.isEmpty()) {
+            return 0;
+        }
+        version = version.replaceAll("[^0-9.]", "");
+        String[] parts = version.split("\\.");
+        int result = 0;
+        for (int i = 0; i < Math.min(parts.length, 3); i++) {
+            result = result * 10 + Integer.parseInt(parts[i]);
+        }
+        return result;
     }
\ No newline at end of file
