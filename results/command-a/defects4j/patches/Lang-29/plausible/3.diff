diff --git a/tmp/9b1c3b60-cb7c-4813-a57c-5b655c8f9947_buggy.java b/tmp/cc6e28d8-3520-4330-982f-d45b247de0e6_fixed.java
index 3ec995f..3b2931a 100644
--- a/tmp/9b1c3b60-cb7c-4813-a57c-5b655c8f9947_buggy.java
+++ b/tmp/cc6e28d8-3520-4330-982f-d45b247de0e6_fixed.java
@@ -1,26 +1,51 @@
     /**
      * <p>
      * Converts the given Java version string to an <code>int</code>.
      * </p>
      * 
      * <p>
      * Example return values:
      * </p>
      * <ul>
      * <li><code>120</code> for Java 1.2</li>
      * <li><code>131</code> for Java 1.3.1</li>
      * <li><code>160</code> for Java 1.6.0_20</li>
      * </ul>
      * 
      * <p>
      * Patch releases are not reported.
      * </p>
      * <p>
      * This method is package private instead of private to support unit test invocation.
      * </p>
      * 
-     * @return the version, for example 131 for Java 1.3.1
+     * @return the version, for example 131 for Java 1.3.1, or 0 if the input is invalid
      */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+    static int toJavaVersionInt(String version) {
+        if (version == null || version.isEmpty()) {
+            return 0;
+        }
+        String[] parts = version.split("\\.");
+        int major = 0, minor = 0, patch = 0;
+        if (parts.length > 0) {
+            major = parseInt(parts[0].replaceAll("\\D", ""), 0);
+            if (major == 0 && parts[0].startsWith("1.")) {
+                major = 1;
+            }
+        }
+        if (parts.length > 1) {
+            minor = parseInt(parts[1].replaceAll("\\D", ""), 0);
+        }
+        if (parts.length > 2) {
+            patch = parseInt(parts[2].replaceAll("\\D", ""), 0);
+        }
+        return major * 100 + minor * 10 + patch;
+    }
+
+    private static int parseInt(String value, int defaultValue) {
+        try {
+            return Integer.parseInt(value);
+        } catch (NumberFormatException e) {
+            return defaultValue;
+        }
     }
\ No newline at end of file
