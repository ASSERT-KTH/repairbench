diff --git a/tmp/c8b3c06c-7bff-4b16-97db-33dc64de3d69_buggy.java b/tmp/dc41e592-5d46-44a4-8a2f-6792973056ee_fixed.java
index 00914da..e905176 100644
--- a/tmp/c8b3c06c-7bff-4b16-97db-33dc64de3d69_buggy.java
+++ b/tmp/dc41e592-5d46-44a4-8a2f-6792973056ee_fixed.java
@@ -1,17 +1,19 @@
-    // does not recurse.
+    // fixed to correctly move non-blank text nodes to the body, preserving order.
     private void normalise(Element element) {
-        List<Node> toMove = new ArrayList<Node>();
-        for (Node node: element.childNodes) {
+        List<Node> toMove = new ArrayList<>();
+        List<Node> preservedOrder = new ArrayList<>(element.childNodes); // Preserve original order
+        
+        for (Node node : preservedOrder) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+                if (!tn.isBlank()) {
                     toMove.add(tn);
+                    element.removeChild(tn); // Remove immediately after identifying
+                }
             }
         }
 
         for (Node node : toMove) {
-            element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            body().appendChild(node); // Append in original order
         }
     }
\ No newline at end of file
