diff --git a/tmp/8ce3fbe8-a0e9-4325-ac27-776ffa0ef22d_buggy.java b/tmp/74289d22-5ffd-4830-857c-c48d99b971cc_fixed.java
index 00914da..b6ced81 100644
--- a/tmp/8ce3fbe8-a0e9-4325-ac27-776ffa0ef22d_buggy.java
+++ b/tmp/74289d22-5ffd-4830-857c-c48d99b971cc_fixed.java
@@ -1,17 +1,30 @@
-    // does not recurse.
+    // Fixed version of the normalise function
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node : element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
                 if (!tn.isBlank())
                     toMove.add(tn);
             }
         }
 
+        // Move nodes to the beginning of the body to maintain correct order
         for (Node node : toMove) {
             element.removeChild(node);
+        }
+
+        // Prepend the moved nodes to the body in the correct order
+        for (int i = toMove.size() - 1; i >= 0; i--) {
+            body().prependChild(toMove.get(i));
+        }
+
+        // Add a space between each text node if necessary
+        Node lastNode = null;
+        for (Node node : body().childNodes) {
+            if (node instanceof TextNode && lastNode instanceof TextNode) {
                 body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            }
+            lastNode = node;
         }
     }
\ No newline at end of file
