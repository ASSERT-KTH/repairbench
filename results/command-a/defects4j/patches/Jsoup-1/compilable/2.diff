diff --git a/tmp/95a37377-7f03-470f-aeab-406f78c8ab44_buggy.java b/tmp/8442f9d1-b314-4a51-a785-bab8a86443dd_fixed.java
index 00914da..79f3d28 100644
--- a/tmp/95a37377-7f03-470f-aeab-406f78c8ab44_buggy.java
+++ b/tmp/8442f9d1-b314-4a51-a785-bab8a86443dd_fixed.java
@@ -1,17 +1,27 @@
-    // does not recurse.
+    // Recursively normalizes the element's children, moving non-blank text nodes to the body.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node : element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+                if (!tn.isBlank()) {
                     toMove.add(tn);
                 }
+            } else if (node instanceof Element) {
+                normalise((Element) node); // Recurse into child elements
+            }
         }
 
+        // Move non-blank text nodes to the body
         for (Node node : toMove) {
             element.removeChild(node);
+            body().appendChild(node); // Directly append without adding extra space
+        }
+
+        // Add a space between text nodes if there are multiple
+        if (toMove.size() > 1) {
+            for (int i = 1; i < toMove.size(); i++) {
                 body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            }
         }
     }
\ No newline at end of file
