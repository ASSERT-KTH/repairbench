diff --git a/tmp/0360a7c3-4146-4528-b101-8ce8c4872bbf_buggy.java b/tmp/cc30fc48-48fa-4cf2-8804-f8815f003f02_fixed.java
index c9da1b7..44b9c9c 100644
--- a/tmp/0360a7c3-4146-4528-b101-8ce8c4872bbf_buggy.java
+++ b/tmp/cc30fc48-48fa-4cf2-8804-f8815f003f02_fixed.java
@@ -1,33 +1,39 @@
-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
-    {
+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
+    
+    // Check if there's already a creator for this type
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+        // If the existing creator is explicitly marked, and the new one isn't, skip
+        if ((_explicitCreators & mask) != 0 && !explicit) {
             return;
         }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
         
-            // one more thing: ok to override in sub-class
+        // If both are explicit or neither is explicit, check for conflicts
+        if ((explicit && (_explicitCreators & mask) != 0) || (!explicit && (_explicitCreators & mask) == 0)) {
+            // Check if the new creator is of the same class as the old one
             if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+                // If they are the same class, check if they are equal (e.g., same constructor)
+                if (oldOne.equals(newOne)) {
+                    // If they are equal, it's not a conflict, so we can replace the old one
+                    _creators[typeIndex] = _fixAccess(newOne);
+                    if (explicit) {
+                        _explicitCreators |= mask;
+                    }
+                    return;
+                } else {
+                    // If they are not equal, it's a conflict
                     throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                             + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
                 }
             }
+        }
+    }
+    
+    // If no conflict or the new one is more specific, update the creator
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
