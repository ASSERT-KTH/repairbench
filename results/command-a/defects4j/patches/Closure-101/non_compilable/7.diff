diff --git a/tmp/265ca358-507d-4cf2-867c-cda9ca20c855_buggy.java b/tmp/66f356dd-ea3c-4e3c-a380-ff787c288033_fixed.java
index 8afddc6..cd9d376 100644
--- a/tmp/265ca358-507d-4cf2-867c-cda9ca20c855_buggy.java
+++ b/tmp/66f356dd-ea3c-4e3c-a380-ff787c288033_fixed.java
@@ -1,22 +1,28 @@
 @Override
 protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
         level.setDebugOptionsForCompilationLevel(options);
     }
 
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
         formattingOption.applyToOptions(options);
     }
-    if (flags.process_closure_primitives) {
-      options.closurePass = true;
+
+    // Set closurePass based on the flag, but only if it's explicitly set.
+    // This allows the default behavior to be determined by the CompilationLevel.
+    if (flags.process_closure_primitives != null) {
+        options.closurePass = flags.process_closure_primitives;
+    } else {
+        // If the flag is not set, use the default behavior based on the CompilationLevel.
+        options.closurePass = level.shouldRunClosurePass();
     }
 
     initOptionsFromFlags(options);
     return options;
 }
\ No newline at end of file
