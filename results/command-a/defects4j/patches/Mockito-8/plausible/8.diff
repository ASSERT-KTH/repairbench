diff --git a/tmp/ce1040cc-961f-4f8b-893d-553ab75157f5_buggy.java b/tmp/ee786731-35d1-4f75-ac6d-3c810afd7085_fixed.java
index 42b58d0..99bba7b 100644
--- a/tmp/ce1040cc-961f-4f8b-893d-553ab75157f5_buggy.java
+++ b/tmp/ee786731-35d1-4f75-ac6d-3c810afd7085_fixed.java
@@ -1,19 +1,26 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    if (rawType instanceof Class) {
+        TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
+            // Avoid infinite recursion by checking if the actual type argument is the same as the type parameter
+            if (actualTypeArgument.equals(typeParameter)) {
+                continue;
+            }
+
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+        }
     }
 }
\ No newline at end of file
