diff --git a/tmp/07d902dd-5ce4-4612-8ce1-8ed799cedf78_buggy.java b/tmp/809c14e0-8f9d-4bfa-a4d0-2e677470ef98_fixed.java
index 42b58d0..e566c0d 100644
--- a/tmp/07d902dd-5ce4-4612-8ce1-8ed799cedf78_buggy.java
+++ b/tmp/809c14e0-8f9d-4bfa-a4d0-2e677470ef98_fixed.java
@@ -1,19 +1,27 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    
+    // Avoid processing types that have already been registered to prevent infinite recursion
+    Set<Type> processedTypes = new HashSet<>();
+    
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        if (processedTypes.contains(actualTypeArgument)) {
+            continue; // Skip already processed types to prevent stack overflow
+        }
+        processedTypes.add(actualTypeArgument);
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
