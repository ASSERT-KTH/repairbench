diff --git a/tmp/bf9a93d9-d942-4636-bbbb-8661937e9f29_buggy.java b/tmp/a951c13b-ece3-4f0c-8507-26bd2326e028_fixed.java
index 0f439b3..37ec1a4 100644
--- a/tmp/bf9a93d9-d942-4636-bbbb-8661937e9f29_buggy.java
+++ b/tmp/a951c13b-ece3-4f0c-8507-26bd2326e028_fixed.java
@@ -1,38 +1,46 @@
     /**
      * Reads bytes from the current tar archive entry.
      *
      * This method is aware of the boundaries of the current
      * entry in the archive and will deal with them as if they
      * were this stream's start and EOF.
      *
      * @param buf The buffer into which to place bytes read.
      * @param offset The offset at which to place bytes read.
      * @param numToRead The number of bytes to read.
      * @return The number of bytes read, or -1 at EOF.
      * @throws IOException on error
      */
     @Override
     public int read(byte[] buf, int offset, int numToRead) throws IOException {
         int totalRead = 0;
 
         if (hasHitEOF || entryOffset >= entrySize) {
             return -1;
         }
 
         if (currEntry == null) {
             throw new IllegalStateException("No current tar entry");
         }
 
         numToRead = Math.min(numToRead, available());
         
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
+        // Read bytes from the underlying stream
+        int read = is.read(buf, offset, numToRead);
         
-        if (totalRead == -1) {
+        // If the read returns -1, it means EOF is reached
+        if (read == -1) {
+            // If we haven't read all the expected bytes for the current entry, throw an IOException
+            if (entryOffset < entrySize) {
+                throw new IOException("Truncated TAR entry: expected " + entrySize + " bytes, but only " + entryOffset + " bytes read.");
+            }
             hasHitEOF = true;
-        } else {
+            return -1;
+        }
+        
+        totalRead = read;
+        count(totalRead);
         entryOffset += totalRead;
-        }
 
         return totalRead;
     }
\ No newline at end of file
