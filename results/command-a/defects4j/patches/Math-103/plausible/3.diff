diff --git a/tmp/c2f2b3bf-60bf-4d36-b5d0-30a182fc988c_buggy.java b/tmp/cdbb9e2d-6f7d-42d2-81ba-41a7ec593b84_fixed.java
index 6cfa79b..5429d89 100644
--- a/tmp/c2f2b3bf-60bf-4d36-b5d0-30a182fc988c_buggy.java
+++ b/tmp/cdbb9e2d-6f7d-42d2-81ba-41a7ec593b84_fixed.java
@@ -1,12 +1,26 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+        if (dev < -20) {
+            return 0.0;
+        } else if (dev > 20) {
+            return 1.0;
+        } else {
+            try {
+                return 0.5 * (1.0 + Erf.erf(dev));
+            } catch (MaxIterationsExceededException ex) {
+                throw ex;
+            } catch (MathException ex) {
+                // Only catch the MathException if it's due to the argument being out of bounds,
+                // which should not happen given the above checks.
+                throw new MathException(ex);
+            }
+        }
     }
\ No newline at end of file
