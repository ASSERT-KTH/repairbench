diff --git a/tmp/fee58fae-96a4-44c4-a56c-e1c6c2e83b75_buggy.java b/tmp/af421e72-9783-4362-b226-8c6ee0c3cad2_fixed.java
index 6cfa79b..2884d62 100644
--- a/tmp/fee58fae-96a4-44c4-a56c-e1c6c2e83b75_buggy.java
+++ b/tmp/af421e72-9783-4362-b226-8c6ee0c3cad2_fixed.java
@@ -1,12 +1,23 @@
 /**
  * For this disbution, X, this method returns P(X &lt; <code>x</code>).
  * @param x the value at which the CDF is evaluated.
  * @return CDF evaluted at <code>x</code>. 
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
+    double ret;
+    try {
+        ret = 0.5 * (1.0 + Erf.erf((x - mean) /
                 (standardDeviation * Math.sqrt(2.0))));
+    } catch (MaxIterationsExceededException ex) {
+        double abs = Math.abs((x - mean) / standardDeviation);
+        if (abs > 20.0) {
+            ret = (x - mean) < 0 ? 0 : 1;
+        } else {
+            throw ex;
+        }
+    }
+    return ret;
 }
\ No newline at end of file
