diff --git a/tmp/1ed7c2e9-445b-4e39-bb98-a1f5d33fdbf4_buggy.java b/tmp/d72e36f0-d153-4cbd-877c-ba0d87a79e84_fixed.java
index 6cfa79b..8a85c3d 100644
--- a/tmp/1ed7c2e9-445b-4e39-bb98-a1f5d33fdbf4_buggy.java
+++ b/tmp/d72e36f0-d153-4cbd-877c-ba0d87a79e84_fixed.java
@@ -1,12 +1,21 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>.
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
-    public double cumulativeProbability(double x) throws MathException {
+public double cumulativeProbability(double x) {
+    try {
         return 0.5 * (1.0 + Erf.erf((x - mean) /
                 (standardDeviation * Math.sqrt(2.0))));
+    } catch (MaxIterationsExceededException e) {
+        // Check if x is more than 20 standard deviations from the mean
+        if (Math.abs(x - mean) > 20 * standardDeviation) {
+            return (x - mean) < 0 ? 0 : 1;
+        } else {
+            throw new MathException(e);
+        }
+    }
 }
\ No newline at end of file
