diff --git a/tmp/282e94ac-3ed7-4114-ba6c-281f8a2dbdd6_buggy.java b/tmp/d9a7bf98-45d7-413d-863c-b48d760d5168_fixed.java
index fa6828a..7c76ebb 100644
--- a/tmp/282e94ac-3ed7-4114-ba6c-281f8a2dbdd6_buggy.java
+++ b/tmp/d9a7bf98-45d7-413d-863c-b48d760d5168_fixed.java
@@ -1,5 +1,26 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
+    List<MockCandidateFilter.MockCandidate> mockCandidates = new ArrayList<>();
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+        MockCandidateFilter.MockCandidate candidate = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);
+        if (candidate != null) {
+            mockCandidates.add(candidate);
         }
     }
+    // Inject the best matching candidate first
+    mockCandidates.stream()
+            .sorted((c1, c2) -> {
+                Class<?> type1 = c1.getField().getType();
+                Class<?> type2 = c2.getField().getType();
+                if (type1.equals(type2)) {
+                    return 0;
+                } else if (type1.isAssignableFrom(type2)) {
+                    return 1;
+                } else if (type2.isAssignableFrom(type1)) {
+                    return -1;
+                } else {
+                    return 0;
+                }
+            })
+            .findFirst()
+            .ifPresent(MockCandidateFilter.MockCandidate::thenInject);
+}
\ No newline at end of file
