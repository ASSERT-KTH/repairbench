diff --git a/tmp/764c677a-3b90-4d2e-98e5-b27d9ce8f56e_buggy.java b/tmp/4185c289-8127-4000-8e94-11a41ff8d6aa_fixed.java
index 0dbce00..982145a 100644
--- a/tmp/764c677a-3b90-4d2e-98e5-b27d9ce8f56e_buggy.java
+++ b/tmp/4185c289-8127-4000-8e94-11a41ff8d6aa_fixed.java
@@ -1,33 +1,45 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
             	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
+                // If shape is not explicitly set, check global configuration
+                if (shape == JsonFormat.Shape.ANY) {
+                    if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                        return withFormat(Boolean.TRUE, null);
+                    }
+                }
+
                 if (format.getShape() == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
+            } else {
+                // If no @JsonFormat annotation, use global configuration
+                if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                    return withFormat(Boolean.TRUE, null);
+                }
             }
         }
         return this;
     }
\ No newline at end of file
