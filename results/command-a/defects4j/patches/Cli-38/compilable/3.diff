diff --git a/tmp/6ce452ee-b303-43fb-9dd5-fa701134391e_buggy.java b/tmp/c6dd3a2d-93b9-4139-866f-e5f93e2c434a_fixed.java
index 81a6e8b..714f145 100644
--- a/tmp/6ce452ee-b303-43fb-9dd5-fa701134391e_buggy.java
+++ b/tmp/c6dd3a2d-93b9-4139-866f-e5f93e2c434a_fixed.java
@@ -1,19 +1,37 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
+        // remove leading "-"
+        String optName = token.substring(1);
+
+        // if the next character is not an option, it's not a short option
+        if (optName.length() > 1 && !options.hasShortOption(optName.substring(0, 1))) {
+            return false;
+        }
+
+        // check if the token contains several concatenated short options
+        for (int i = 0; i < optName.length(); i++) {
+            String singleOpt = optName.substring(i, i + 1);
+            if (!options.hasShortOption(singleOpt)) {
+                return false;
+            }
+        }
+
+        // remove "=value" if present
         int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        if (pos != -1) {
+            optName = token.substring(1, pos);
+        }
+
+        return options.hasShortOption(optName.substring(0, 1));
     }
\ No newline at end of file
