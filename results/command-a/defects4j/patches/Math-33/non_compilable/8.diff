diff --git a/tmp/d94483dc-7df3-412b-bb5c-56c517249ad9_buggy.java b/tmp/430e5e84-32f5-42ee-a1d5-6b8f37d2d120_fixed.java
index 56b2d66..f83c1e3 100644
--- a/tmp/d94483dc-7df3-412b-bb5c-56c517249ad9_buggy.java
+++ b/tmp/430e5e84-32f5-42ee-a1d5-6b8f37d2d120_fixed.java
@@ -1,45 +1,64 @@
 /**
      * Removes the phase 1 objective function, positive cost non-artificial variables,
      * and the non-basic artificial variables from this tableau.
      */
     protected void dropPhase1Objective() {
         if (getNumObjectiveFunctions() == 1) {
             return;
         }
 
         List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+        columnsToDrop.add(0); // Drop the phase 1 objective function
 
-        // positive cost non-artificial variables
+        // Drop positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                 columnsToDrop.add(i);
             }
         }
 
-        // non-basic artificial variables
+        // Drop non-basic artificial variables
         for (int i = 0; i < getNumArtificialVariables(); i++) {
             int col = i + getArtificialVariableOffset();
             if (getBasicRow(col) == null) {
                 columnsToDrop.add(col);
             }
         }
 
+        // Create a new matrix excluding the columns to drop
         double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
         for (int i = 1; i < getHeight(); i++) {
             int col = 0;
             for (int j = 0; j < getWidth(); j++) {
                 if (!columnsToDrop.contains(j)) {
                     matrix[i - 1][col++] = tableau.getEntry(i, j);
                 }
             }
         }
 
-        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
-          columnLabels.remove((int) columnsToDrop.get(i));
+        // Adjust column labels by removing dropped columns
+        Collections.sort(columnsToDrop, Collections.reverseOrder());
+        for (int col : columnsToDrop) {
+            columnLabels.remove(col);
         }
 
+        // Update the tableau and reset the number of artificial variables
         this.tableau = new Array2DRowRealMatrix(matrix);
         this.numArtificialVariables = 0;
+
+        // Reassign basic variables after dropping columns
+        reassignmentOfBasicVariables();
+    }
+
+    private void reassignmentOfBasicVariables() {
+        for (int i = 0; i < getHeight() - 1; i++) {
+            for (int j = 0; j < getWidth() - 1; j++) {
+                if (Precision.compareTo(tableau.getEntry(i, j), 1d, maxUlps) == 0 && 
+                    Precision.compareTo(tableau.getEntry(i, getWidth() - 1), 0d, maxUlps) == 0) {
+                    basicVars[i] = columnLabels.get(j);
+                    break;
+                }
+            }
+        }
     }
\ No newline at end of file
