diff --git a/tmp/d9abd6bb-7f67-40f3-bbd3-b0bbf8b84d87_buggy.java b/tmp/443cd5d3-d9d6-4357-b81e-5e83f8eb2a27_fixed.java
index fc8c302..22fd97f 100644
--- a/tmp/d9abd6bb-7f67-40f3-bbd3-b0bbf8b84d87_buggy.java
+++ b/tmp/443cd5d3-d9d6-4357-b81e-5e83f8eb2a27_fixed.java
@@ -1,23 +1,34 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+            if (n instanceof TextNode) {
+                // [databind#2096]: Need to handle TextNode with Base64 encoding
+                TextNode textNode = (TextNode) n;
+                String base64Text = textNode.asText();
+                if (base64Text != null) {
+                    try {
+                        return b64variant.decode(base64Text);
+                    } catch (IllegalArgumentException e) {
+                        throw new JsonParseException("Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), JsonLocation.NA, e);
                     }
-            if (n.isPojo()) {
+                }
+            } else if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
+            } else {
+                // Try to get binary value directly
+                byte[] data = n.binaryValue();
+                if (data != null) {
+                    return data;
+                }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
