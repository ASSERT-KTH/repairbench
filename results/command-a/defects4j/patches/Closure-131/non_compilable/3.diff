diff --git a/tmp/0113c7f9-4282-494a-9392-9e53cb68dc2e_buggy.java b/tmp/1e40367a-25fd-4330-abf3-5ebb1c5cdf32_fixed.java
index 19fe1b4..ababe6f 100644
--- a/tmp/0113c7f9-4282-494a-9392-9e53cb68dc2e_buggy.java
+++ b/tmp/1e40367a-25fd-4330-abf3-5ebb1c5cdf32_fixed.java
@@ -1,17 +1,30 @@
+import java.util.regex.Pattern;
+
 public static boolean isJSIdentifier(String s) {
     int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+    if (length == 0) {
         return false;
     }
 
+    // JavaScript identifier start character
+    if (!Character.isLetter(s.charAt(0)) && s.charAt(0) != '$' && s.charAt(0) != '_') {
+        return false;
+    }
+
+    // JavaScript identifier part character
     for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        char c = s.charAt(i);
+        if (!Character.isLetterOrDigit(c) && c != '$' && c != '_' && c != '\u200C' && c != '\u200D') {
             return false;
         }
     }
 
+    // Additional check for Unicode characters that are not allowed in JavaScript identifiers
+    String unicodePattern = "[^\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}\\p{Cf}]";
+    if (Pattern.compile(unicodePattern).matcher(s).find()) {
+        return false;
+    }
+
     return true;
 }
\ No newline at end of file
