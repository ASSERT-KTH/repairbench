diff --git a/tmp/bd7ddf2b-b6d6-4b0c-9461-c4ecc50d9ac5_buggy.java b/tmp/fc2e2e31-b147-4853-9d8b-7a0ce0a02378_fixed.java
index 21f64c6..315af77 100644
--- a/tmp/bd7ddf2b-b6d6-4b0c-9461-c4ecc50d9ac5_buggy.java
+++ b/tmp/fc2e2e31-b147-4853-9d8b-7a0ce0a02378_fixed.java
@@ -1,23 +1,24 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
+            if (startChar != input[offset]) {
                 while (++offset < length && startChar != input[offset]);
+                if (offset >= length) return -1; // not found
+            }
             int i = offset + 1;
             int last = i + seq.length() - 1;
-            if (offset < length) {
+            if (last >= length) return -1; // not found, don't have enough characters left
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
             if (i == last) // found full sequence
                 return offset - pos;
         }
-        }
         return -1;
     }
\ No newline at end of file
