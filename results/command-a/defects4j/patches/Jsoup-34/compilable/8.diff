diff --git a/tmp/da0e630f-f99a-4b25-9566-cdd7750b07af_buggy.java b/tmp/9606b76d-f247-46ac-96ab-af12b3a162ae_fixed.java
index 21f64c6..9f081c2 100644
--- a/tmp/da0e630f-f99a-4b25-9566-cdd7750b07af_buggy.java
+++ b/tmp/9606b76d-f247-46ac-96ab-af12b3a162ae_fixed.java
@@ -1,23 +1,24 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
     // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
-            if (startChar != input[offset])
+        if (startChar != input[offset]) {
             while (++offset < length && startChar != input[offset]);
+            if (offset >= length) break; // exit if end of input
+        }
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
+        if (last >= length) break; // exit if sequence goes beyond input length
         for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
         if (i == last) // found full sequence
             return offset - pos;
     }
-        }
     return -1;
 }
\ No newline at end of file
