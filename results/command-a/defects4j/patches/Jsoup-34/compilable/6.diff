diff --git a/tmp/d1fca4b4-495d-4947-9b86-bc2e96bf59cb_buggy.java b/tmp/2025c8bd-a00b-4b45-9cf5-acc76e12012c_fixed.java
index 21f64c6..ad8fb87 100644
--- a/tmp/d1fca4b4-495d-4947-9b86-bc2e96bf59cb_buggy.java
+++ b/tmp/2025c8bd-a00b-4b45-9cf5-acc76e12012c_fixed.java
@@ -1,23 +1,29 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
+            if (startChar != input[offset]) {
                 while (++offset < length && startChar != input[offset]);
+            }
+            if (offset >= length) {
+                return -1; // ensure we don't go out of bounds if startChar is not found
+            }
             int i = offset + 1;
             int last = i + seq.length() - 1;
-            if (offset < length) {
+            if (last >= length) {
+                return -1; // not enough characters left to match the sequence
+            }
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            if (i == last) { // found full sequence
                 return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
