diff --git a/tmp/d7f93d55-62fc-46d3-993b-512d3cf0546b_buggy.java b/tmp/685275bc-6c7d-47d9-98d2-63a865009c6b_fixed.java
index 21f64c6..3a1ecf3 100644
--- a/tmp/d7f93d55-62fc-46d3-993b-512d3cf0546b_buggy.java
+++ b/tmp/685275bc-6c7d-47d9-98d2-63a865009c6b_fixed.java
@@ -1,23 +1,25 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
+        if (seq.length() == 0) return -1; // empty string has no match
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            while (offset < length && startChar != input[offset])
+                offset++;
             int i = offset + 1;
             int last = i + seq.length() - 1;
-            if (offset < length) {
+            if (last >= length)
+                break; // not found, hit end of input
+            if (i > length || last > length) break; // search went past bounds (lenient)
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
             if (i == last) // found full sequence
                 return offset - pos;
         }
-        }
         return -1;
     }
\ No newline at end of file
