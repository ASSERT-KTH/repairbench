diff --git a/tmp/8a8cdb84-c4d8-4d45-9e29-60fae940baae_buggy.java b/tmp/40dacf7f-ef36-4b62-8041-eeeb510d5de2_fixed.java
index dc93be3..d2c01c9 100644
--- a/tmp/8a8cdb84-c4d8-4d45-9e29-60fae940baae_buggy.java
+++ b/tmp/40dacf7f-ef36-4b62-8041-eeeb510d5de2_fixed.java
@@ -1,14 +1,15 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+    if (startTag.isSelfClosing() || Tag.isKnownTag(startTag.name()) && Tag.valueOf(startTag.name()).isEmpty()) {
         Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        if (!startTag.isSelfClosing() && Tag.isKnownTag(startTag.name())) {
+            tokeniser.emit(new Token.EndTag(el.tagName())); // ensure we get out of whatever state we are in.
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
