diff --git a/tmp/84850c88-ed71-4e18-bec7-560268ad94b6_buggy.java b/tmp/e68e9fc5-6cf0-44fa-ba44-6b14e3b9f07c_fixed.java
index 544303b..454c01c 100644
--- a/tmp/84850c88-ed71-4e18-bec7-560268ad94b6_buggy.java
+++ b/tmp/e68e9fc5-6cf0-44fa-ba44-6b14e3b9f07c_fixed.java
@@ -1,29 +1,34 @@
     /**
      * Get the current solution.
      * <p>
      * {@link #solve} should be called first for this to be the optimal solution.
      * </p>
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
+                boolean found = false;
+                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + getOriginalNumDecisionVariables(); j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
+                        found = true;
+                        break;
+                    }
+                }
+                if (!found) {
                     coefficients[i] = 0;
                 }
             }
         }
-        }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
