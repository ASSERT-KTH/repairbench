diff --git a/tmp/33c3638e-1e3d-4852-9902-9642d45a7316_buggy.java b/tmp/72f8c67a-064a-43c4-9b4e-73bbccb8e7bb_fixed.java
index 57f69c5..72e0afd 100644
--- a/tmp/33c3638e-1e3d-4852-9902-9642d45a7316_buggy.java
+++ b/tmp/72f8c67a-064a-43c4-9b4e-73bbccb8e7bb_fixed.java
@@ -1,12 +1,27 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * labels) and it has a parent that requires explicit block wrapping.
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // Check if the node is a FUNCTION or DO
+    if (n.getType() != Token.FUNCTION && n.getType() != Token.DO) {
+        return false;
+    }
+
+    // Get the parent node
+    Node parent = n.getParent();
+
+    // If the parent is null, return false
+    if (parent == null) {
+        return false;
+    }
+
+    // Check if the parent is an IF or ELSE statement
+    if (parent.getType() == Token.IF || parent.getType() == Token.ELSE) {
+        // If the parent is an IF or ELSE, the current node needs explicit block wrapping
+        return true;
+    }
+
+    // For other cases, return false
+    return false;
 }
\ No newline at end of file
