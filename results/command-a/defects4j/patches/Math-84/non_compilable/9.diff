diff --git a/tmp/ce68ea61-1535-4e4f-82af-31af2d9b24b9_buggy.java b/tmp/73353454-000e-41f3-b932-4b9833f61e48_fixed.java
index 5f1dcf2..c511411 100644
--- a/tmp/ce68ea61-1535-4e4f-82af-31af2d9b24b9_buggy.java
+++ b/tmp/73353454-000e-41f3-b932-4b9833f61e48_fixed.java
@@ -1,41 +1,46 @@
 /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+        while (!isConverged(comparator)) {
 
             incrementIterationsCounter();
 
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
 
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
 
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
+                } else {
+                    // accept the expanded simplex
+                    simplex = evaluateNewSimplex(original, khi, comparator);
                 }
-
-                return;
-
-            }
+            } else {
 
                 // compute the contracted simplex
                 final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
                 if (comparator.compare(contracted, best) < 0) {
                     // accept the contracted simplex
+                    simplex = evaluateNewSimplex(original, gamma, comparator);
+                } else {
+                    // perform a shrink step
+                    simplex = shrinkSimplex(original, comparator);
+                }
+            }
 
             // check convergence
+            if (isConverged(comparator)) {
                 return;
             }
-
         }
-
     }
\ No newline at end of file
