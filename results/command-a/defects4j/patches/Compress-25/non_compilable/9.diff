diff --git a/tmp/ee1e0d33-74a3-4e2e-8fb4-5c89316dbf0b_buggy.java b/tmp/5484953d-4024-4436-9d8d-6812a85b91e0_fixed.java
index 6c0aa19..5164dcb 100644
--- a/tmp/ee1e0d33-74a3-4e2e-8fb4-5c89316dbf0b_buggy.java
+++ b/tmp/5484953d-4024-4436-9d8d-6812a85b91e0_fixed.java
@@ -1,20 +1,20 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+        in = new PushbackInputStream(inputStream, 512); // Increased buffer size to handle larger headers
+        this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
+        // Initialize buffer to handle reading
+        buf = new byte[512];
     }
\ No newline at end of file
