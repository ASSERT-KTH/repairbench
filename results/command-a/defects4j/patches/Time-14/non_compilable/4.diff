diff --git a/tmp/b9355dc9-7539-44fd-8376-ce6d298f9ba9_buggy.java b/tmp/aeb37e2c-12dc-47a8-b72e-0c256e0a76a6_fixed.java
index 10616db..9b399b3 100644
--- a/tmp/b9355dc9-7539-44fd-8376-ce6d298f9ba9_buggy.java
+++ b/tmp/aeb37e2c-12dc-47a8-b72e-0c256e0a76a6_fixed.java
@@ -1,19 +1,29 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+        // Adjust dayOfMonth if necessary to handle month length changes
+        if (partial.indexOf(DateTimeFieldType.dayOfMonth()) >= 0) {
+            int month = result[partial.indexOf(DateTimeFieldType.monthOfYear())];
+            int day = result[partial.indexOf(DateTimeFieldType.dayOfMonth())];
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(month);
+            if (day > maxDay) {
+                result[partial.indexOf(DateTimeFieldType.dayOfMonth())] = maxDay;
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
