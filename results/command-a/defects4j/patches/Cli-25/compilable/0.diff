diff --git a/tmp/abd4254c-7889-44ec-9665-24423fa278c1_buggy.java b/tmp/011ded48-7710-4152-b1b6-2c9d6085e45c_fixed.java
index 875b31b..be22027 100644
--- a/tmp/abd4254c-7889-44ec-9665-24423fa278c1_buggy.java
+++ b/tmp/011ded48-7710-4152-b1b6-2c9d6085e45c_fixed.java
@@ -1,54 +1,44 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         if (nextLineTabStop >= width)
         {
             // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
+        String textToWrap = padding + text.substring(pos).trim();
         while (true)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+            pos = findWrapPos(textToWrap, width, 0);
 
             if (pos == -1)
             {
-                sb.append(text);
+                sb.append(textToWrap);
 
                 return sb;
             }
             
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+            if ( (textToWrap.length() > width) && (pos == nextLineTabStop - 1) ) 
             {
                 pos = width;
             }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(rtrim(textToWrap.substring(0, pos))).append(defaultNewLine);
+            textToWrap = padding + textToWrap.substring(pos).trim();
         }
     }
\ No newline at end of file
