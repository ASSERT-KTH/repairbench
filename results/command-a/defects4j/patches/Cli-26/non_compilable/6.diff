diff --git a/tmp/47186463-3d34-4295-96d9-02e5a49400ab_buggy.java b/tmp/c4706808-5759-407a-bba8-454fcd5f1a92_fixed.java
index cc69d41..7433a68 100644
--- a/tmp/47186463-3d34-4295-96d9-02e5a49400ab_buggy.java
+++ b/tmp/c4706808-5759-407a-bba8-454fcd5f1a92_fixed.java
@@ -1,29 +1,26 @@
-    /**
-     * Create an Option using the current settings and with
-     * the specified Option <code>char</code>.
-     *
-     * @param opt the <code>java.lang.String</code> representation
-     * of the Option
-     * @return the Option instance
-     * @throws IllegalArgumentException if <code>opt</code> is not
-     * a valid character.  See Option.
-     */
     public static Option create(String opt) throws IllegalArgumentException
     {
+            // check that the option is valid
+            if (!isValidOpt(opt))
+            {
+                throw new IllegalArgumentException("illegal option representation: '" + opt + "'");
+            }
+
             // create the option
             Option option = new Option(opt, description);
 
             // set the option properties
             option.setLongOpt(longopt);
             option.setRequired(required);
             option.setOptionalArg(optionalArg);
             option.setArgs(numberOfArgs);
             option.setType(type);
             option.setValueSeparator(valuesep);
             option.setArgName(argName);
+
             // reset the OptionBuilder properties
             OptionBuilder.reset();
 
             // return the Option instance
             return option;
     }
\ No newline at end of file
