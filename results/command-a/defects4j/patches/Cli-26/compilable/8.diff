diff --git a/tmp/9d60b06f-026d-433c-8e0c-ffe91e15ae4e_buggy.java b/tmp/408796e1-4250-4716-8f1d-0e7486738b68_fixed.java
index cc69d41..eb1ae69 100644
--- a/tmp/9d60b06f-026d-433c-8e0c-ffe91e15ae4e_buggy.java
+++ b/tmp/408796e1-4250-4716-8f1d-0e7486738b68_fixed.java
@@ -1,29 +1,40 @@
     /**
      * Create an Option using the current settings and with
      * the specified Option <code>char</code>.
      *
      * @param opt the <code>java.lang.String</code> representation
      * of the Option
      * @return the Option instance
      * @throws IllegalArgumentException if <code>opt</code> is not
      * a valid character.  See Option.
      */
     public static Option create(String opt) throws IllegalArgumentException
     {
+            // validate the option character
+            if (!isValidOpt(opt))
+            {
+                throw new IllegalArgumentException("invalid option: '" + opt + "'");
+            }
+
             // create the option
         Option option = new Option(opt, description);
 
             // set the option properties
             option.setLongOpt(longopt);
             option.setRequired(required);
             option.setOptionalArg(optionalArg);
             option.setArgs(numberOfArgs);
             option.setType(type);
             option.setValueSeparator(valuesep);
             option.setArgName(argName);
+            
             // reset the OptionBuilder properties
             OptionBuilder.reset();
 
         // return the Option instance
         return option;
     }
+
+private static boolean isValidOpt(String opt) {
+    return opt.length() == 1 && Character.isJavaIdentifierPart(opt.charAt(0));
+}
\ No newline at end of file
