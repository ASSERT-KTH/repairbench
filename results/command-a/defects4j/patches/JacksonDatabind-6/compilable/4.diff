diff --git a/tmp/bc44f947-076b-4ffb-846c-6cd0b972118f_buggy.java b/tmp/c887ce7e-6b56-4f11-9f69-51ceba2d62b5_fixed.java
index cd412d2..0a4232a 100644
--- a/tmp/bc44f947-076b-4ffb-846c-6cd0b972118f_buggy.java
+++ b/tmp/c887ce7e-6b56-4f11-9f69-51ceba2d62b5_fixed.java
@@ -1,76 +1,75 @@
-    protected Date parseAsISO8601(String dateStr, ParsePosition pos)
-    {
-        /* 21-May-2009, tatu: DateFormat has very strict handling of
-         * timezone  modifiers for ISO-8601. So we need to do some scrubbing.
-         */
-
-        /* First: do we have "zulu" format ('Z' == "GMT")? If yes, that's
-         * quite simple because we already set date format timezone to be
-         * GMT, and hence can just strip out 'Z' altogether
-         */
+protected Date parseAsISO8601(String dateStr, ParsePosition pos) {
     int len = dateStr.length();
-        char c = dateStr.charAt(len-1);
     DateFormat df;
 
-        // [JACKSON-200]: need to support "plain" date...
-        if (len <= 10 && Character.isDigit(c)) {
+    // Handle plain date format
+    if (len <= 10 && Character.isDigit(dateStr.charAt(len - 1))) {
         df = _formatPlain;
         if (df == null) {
             df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);
         }
-        } else if (c == 'Z') {
+    } else if (dateStr.endsWith("Z")) {
         df = _formatISO8601_z;
         if (df == null) {
             df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
         }
-            // [JACKSON-334]: may be missing milliseconds... if so, add
+        // Handle missing milliseconds for 'Z' format
         if (dateStr.charAt(len - 4) == ':') {
             StringBuilder sb = new StringBuilder(dateStr);
             sb.insert(len - 1, ".000");
             dateStr = sb.toString();
         }
     } else {
-            // Let's see if we have timezone indicator or not...
+        // Handle timezones and partial/missing milliseconds
         if (hasTimeZone(dateStr)) {
-                c = dateStr.charAt(len-3);
-                if (c == ':') { // remove optional colon
-                    // remove colon
+            int tzStart = dateStr.lastIndexOf('+');
+            if (tzStart == -1) {
+                tzStart = dateStr.lastIndexOf('-');
+            }
+            int secondsStart = dateStr.lastIndexOf(':');
+
+            // Handle missing minutes in timezone
+            if (secondsStart == tzStart + 3) {
                 StringBuilder sb = new StringBuilder(dateStr);
-                    sb.delete(len-3, len-2);
+                sb.insert(tzStart + 3, "00");
                 dateStr = sb.toString();
-                } else if (c == '+' || c == '-') { // missing minutes
-                    // let's just append '00'
-                    dateStr += "00";
-                }
-                // Milliseconds partial or missing; and even seconds are optional
                 len = dateStr.length();
-                // remove 'T', '+'/'-' and 4-digit timezone-offset
-                c = dateStr.charAt(len-9);
-                if (Character.isDigit(c)) {
+            }
+
+            // Handle partial or missing milliseconds
+            int millisStart = dateStr.indexOf('.', secondsStart);
+            if (millisStart != -1 && millisStart + 4 < len) {
+                // Partial milliseconds, ensure 3 digits
+                StringBuilder sb = new StringBuilder(dateStr);
+                while (sb.length() - millisStart < 4) {
+                    sb.append('0');
+                }
+                dateStr = sb.toString();
+            } else if (millisStart == -1 && secondsStart != -1) {
+                // Missing milliseconds, append ".000"
                 StringBuilder sb = new StringBuilder(dateStr);
-                    sb.insert(len-5, ".000");
+                sb.insert(secondsStart + 3, ".000");
                 dateStr = sb.toString();
             }
+
             df = _formatISO8601;
-                if (_formatISO8601 == null) {
+            if (df == null) {
                 df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
             }
         } else {
-                // If not, plain date. Easiest to just patch 'Z' in the end?
+            // Add 'Z' and milliseconds if missing
             StringBuilder sb = new StringBuilder(dateStr);
-                // And possible also millisecond part if missing
             int timeLen = len - dateStr.lastIndexOf('T') - 1;
             if (timeLen <= 8) {
                 sb.append(".000");
             }
             sb.append('Z');
             dateStr = sb.toString();
             df = _formatISO8601_z;
             if (df == null) {
-                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,
-                            _timezone, _locale);
+                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
             }
         }
     }
     return df.parse(dateStr, pos);
 }
\ No newline at end of file
