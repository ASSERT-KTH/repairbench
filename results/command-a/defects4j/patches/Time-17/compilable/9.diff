diff --git a/tmp/5cdaedf4-c795-479b-98fd-65a9085c05c9_buggy.java b/tmp/10fec916-b5e5-4097-a1e6-99fb380ec351_fixed.java
index 03b03d7..3064a1f 100644
--- a/tmp/5cdaedf4-c795-479b-98fd-65a9085c05c9_buggy.java
+++ b/tmp/10fec916-b5e5-4097-a1e6-99fb380ec351_fixed.java
@@ -1,25 +1,34 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
         
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+        
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
         
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        long targetInstant = earlierOrLater ? instantAfter : instantBefore;
         
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // Determine the correct UTC instant that maps to the desired local time
+        long adjustedInstant = convertLocalToUTC(local, earlierOrLater, targetInstant);
+        
+        // Ensure the adjusted instant maps back to the correct local time
+        long checkLocal = convertUTCToLocal(adjustedInstant);
+        if (checkLocal != local) {
+            // If the local time does not match, adjust to the correct offset
+            adjustedInstant = convertLocalToUTC(local, !earlierOrLater, targetInstant);
+        }
+        
+        return adjustedInstant;
     }
\ No newline at end of file
