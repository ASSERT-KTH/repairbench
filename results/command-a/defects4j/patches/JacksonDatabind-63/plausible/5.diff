diff --git a/tmp/484402d5-c835-4c2b-95e2-1b67cf55950d_buggy.java b/tmp/300c4956-cf10-4b2c-9916-e14d0f91690d_fixed.java
index f955f47..fb44bb0 100644
--- a/tmp/484402d5-c835-4c2b-95e2-1b67cf55950d_buggy.java
+++ b/tmp/300c4956-cf10-4b2c-9916-e14d0f91690d_fixed.java
@@ -1,34 +1,32 @@
 public String getDescription() {
     if (_desc == null) {
         StringBuilder sb = new StringBuilder();
 
-                if (_from == null) { // can this ever occur?
+        if (_from == null) {
             sb.append("UNKNOWN");
         } else {
             Class<?> cls = (_from instanceof Class<?>) ? (Class<?>) _from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
             String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
+            String className = cls.getSimpleName();
+            // Fix: Use getCanonicalName() to include the enclosing class name for inner classes
+            if (cls.getEnclosingClass() != null) {
+                className = cls.getEnclosingClass().getSimpleName() + "$" + className;
+            }
             if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
+                sb.append(pkgName).append('.');
             }
-                    sb.append(cls.getSimpleName());
+            sb.append(className);
         }
         sb.append('[');
         if (_fieldName != null) {
-                    sb.append('"');
-                    sb.append(_fieldName);
-                    sb.append('"');
+            sb.append('"').append(_fieldName).append('"');
         } else if (_index >= 0) {
             sb.append(_index);
         } else {
             sb.append('?');
         }
         sb.append(']');
         _desc = sb.toString();
     }
     return _desc;
 }
\ No newline at end of file
