diff --git a/tmp/74a078dd-e8d8-4cbd-bade-91a9e8b4010e_buggy.java b/tmp/3eb3fb13-68ca-4ce6-84d7-632d89334c85_fixed.java
index 0b7c52e..15e28c6 100644
--- a/tmp/74a078dd-e8d8-4cbd-bade-91a9e8b4010e_buggy.java
+++ b/tmp/3eb3fb13-68ca-4ce6-84d7-632d89334c85_fixed.java
@@ -1,27 +1,22 @@
-    /**
-     * Processes a OBJECTLIT node.
-     */
 private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
-        // Maybe STRING, GET, SET
-
-        // We should never see a mix of numbers and strings.
+    for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
+        if (child.isStringKey()) {
             String name = child.getString();
             T type = typeSystem.getType(getScope(), n, name);
 
             Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
+            if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
                 if (propertiesToErrorFor.containsKey(name)) {
                     compiler.report(JSError.make(
                         t.getSourceName(), child, propertiesToErrorFor.get(name),
                         Warnings.INVALIDATION, name,
                         (type == null ? "null" : type.toString()), n.toString(), ""));
                 }
             }
+        } else if (child.isComputedProp()) {
+            // Handle computed properties separately
+            // For now, we do not process computed properties as they are not directly
+            // associated with a fixed property name in the type system.
+        }
     }
 }
\ No newline at end of file
