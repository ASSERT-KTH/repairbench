diff --git a/tmp/95c04177-0f9b-4a3b-a15b-4e396ffae15e_buggy.java b/tmp/872dac29-affb-4810-8981-270efe42a979_fixed.java
index 4bbd561..cafa3f9 100644
--- a/tmp/95c04177-0f9b-4a3b-a15b-4e396ffae15e_buggy.java
+++ b/tmp/872dac29-affb-4810-8981-270efe42a979_fixed.java
@@ -1,37 +1,55 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        if (index >= input.length() || input.charAt(index) != '&' || index + 1 >= input.length() || input.charAt(index + 1) != '#') {
+            return 0;
+        }
+
         int start = index + 2;
+        if (start >= input.length()) {
+            return 0;
+        }
+
         boolean isHex = false;
-
         char firstChar = input.charAt(start);
         if (firstChar == 'x' || firstChar == 'X') {
             start++;
+            if (start >= input.length()) {
+                return 0;
+            }
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if (end >= input.length() || input.charAt(end) != ';') {
+            return 0;
+        }
+
         int entityValue;
         try {
             if (isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch (NumberFormatException nfe) {
             return 0;
         }
 
+        if (entityValue > 0xFFFF) {
+            String highSurrogate = String.valueOf((char) ((entityValue - 0x10000) / 0x400 + 0xD800));
+            String lowSurrogate = String.valueOf((char) ((entityValue - 0x10000) % 0x400 + 0xDC00));
+            out.write(highSurrogate + lowSurrogate);
+        } else {
             out.write(entityValue);
+        }
+
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
\ No newline at end of file
-        return 0;
-    }
