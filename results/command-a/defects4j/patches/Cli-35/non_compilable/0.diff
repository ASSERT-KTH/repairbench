diff --git a/tmp/7f5973b6-a152-4c96-9295-027e197e9d7e_buggy.java b/tmp/7d2ace64-bb37-4b45-80ee-44da6b2dc78a_fixed.java
index c6b65da..e410307 100644
--- a/tmp/7f5973b6-a152-4c96-9295-027e197e9d7e_buggy.java
+++ b/tmp/7d2ace64-bb37-4b45-80ee-44da6b2dc78a_fixed.java
@@ -1,25 +1,39 @@
 /**
  * Returns the options with a long name starting with the name specified.
  * 
  * @param opt the partial name of the option
  * @return the options matching the partial name specified, or an empty list if none matches
  * @since 1.3
  */
 public List<String> getMatchingOptions(String opt)
 {
     opt = Util.stripLeadingHyphens(opt);
     
     List<String> matchingOpts = new ArrayList<String>();
 
-        // for a perfect match return the single option only
+    // Check for perfect match first
+    for (String longOpt : longOpts.keySet())
+    {
+        if (longOpt.equals(opt))
+        {
+            matchingOpts.add(longOpt);
+            return matchingOpts; // Return immediately if exact match found
+        }
+    }
 
+    // If no exact match, look for partial matches
     for (String longOpt : longOpts.keySet())
     {
-            if (longOpt.startsWith(opt))
+        if (longOpt.startsWith(opt) && !longOpt.equals(opt))
         {
             matchingOpts.add(longOpt);
         }
     }
     
+    // If more than one partial match, throw AmbiguousOptionException
+    if (matchingOpts.size() > 1) {
+        throw new AmbiguousOptionException("Ambiguous option: '" + opt + "' (could be: " + String.join(", ", matchingOpts) + ")");
+    }
+    
     return matchingOpts;
 }
\ No newline at end of file
