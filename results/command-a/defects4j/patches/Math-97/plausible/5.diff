diff --git a/tmp/97c4cce7-6ae2-4112-9db7-ab213e9ba792_buggy.java b/tmp/8a2f759c-aac3-4b7b-863c-2a6ab082e554_fixed.java
index 88647d1..5825789 100644
--- a/tmp/97c4cce7-6ae2-4112-9db7-ab213e9ba792_buggy.java
+++ b/tmp/8a2f759c-aac3-4b7b-863c-2a6ab082e554_fixed.java
@@ -1,44 +1,49 @@
 /**
      * Find a zero in the given interval.
      * <p>
      * Requires that the values of the function at the endpoints have opposite
-     * signs. An <code>IllegalArgumentException</code> is thrown if this is not
-     * the case.</p>
+     * signs or one of the endpoints is a root. An <code>IllegalArgumentException</code> 
+     * is thrown if this is not the case.</p>
      * 
      * @param min the lower bound for the interval.
      * @param max the upper bound for the interval.
      * @return the value where the function is zero
      * @throws MaxIterationsExceededException if the maximum iteration count is exceeded
      * @throws FunctionEvaluationException if an error occurs evaluating the
      * function 
      * @throws IllegalArgumentException if min is not less than max or the
-     * signs of the values of the function at the endpoints are not opposites
+     * signs of the values of the function at the endpoints are not opposites and 
+     * neither endpoint is a root
      */
     public double solve(double min, double max) throws MaxIterationsExceededException, 
         FunctionEvaluationException {
         
         clearResult();
         verifyInterval(min, max);
         
         double ret = Double.NaN;
         
         double yMin = f.value(min);
         double yMax = f.value(max);
         
+        // Check if either endpoint is a root
+        if (Math.abs(yMin) < functionValueAccuracy) {
+            return min;
+        } else if (Math.abs(yMax) < functionValueAccuracy) {
+            return max;
+        }
+        
         // Verify bracketing
         double sign = yMin * yMax;
         if (sign >= 0) {
-            // check if either value is close to a zero
-                // neither value is close to zero and min and max do not bracket root.
             throw new IllegalArgumentException
-                ("Function values at endpoints do not have different signs." +
-                        "  Endpoints: [" + min + "," + max + "]" + 
+                ("Function values at endpoints do not have different signs and " +
+                 "neither endpoint is a root.  Endpoints: [" + min + "," + max + "]" + 
                  "  Values: [" + yMin + "," + yMax + "]");
-        } else {
+        }
+        
         // solve using only the first endpoint as initial guess
         ret = solve(min, yMin, max, yMax, min, yMin);
-            // either min or max is a root
-        }
 
         return ret;
     }
\ No newline at end of file
