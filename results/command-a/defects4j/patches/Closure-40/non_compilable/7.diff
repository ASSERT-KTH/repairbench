diff --git a/tmp/ddd19ace-2ca5-410f-bcc3-eb858df7b8cc_buggy.java b/tmp/5e6ebe07-9b02-491b-8e6d-0299a319248c_fixed.java
index 670114d..1b2e388 100644
--- a/tmp/ddd19ace-2ca5-410f-bcc3-eb858df7b8cc_buggy.java
+++ b/tmp/5e6ebe07-9b02-491b-8e6d-0299a319248c_fixed.java
@@ -1,48 +1,56 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
-            recordSet(nameInfo.name, nameNode);
+        recordSet(nameInfo.name, n); // Fix: Record the function node, not the name node
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
-
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
-          if (name != null) {
-          refNodes.add(new ClassDefiningFunctionNode(
-              name, n, parent, parent.getParent()));
+      if (name != null && nameNode.isGetProp() && nameNode.getString().equals("inherits")) {
+        // Handle goog.inherits specifically
+        Node arg1 = n.getSecondChild();
+        if (arg1 != null && arg1.isQualifiedName()) {
+          String className = arg1.getString();
+          JsName classInfo = getName(className, false);
+          if (classInfo != null) {
+            refNodes.add(new ClassDefiningFunctionNode(classInfo, n, parent, parent.getParent()));
+          }
+        }
+      } else if (name != null) {
+        refNodes.add(new ClassDefiningFunctionNode(name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
