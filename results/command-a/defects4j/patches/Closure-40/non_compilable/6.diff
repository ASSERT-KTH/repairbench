diff --git a/tmp/926fc1de-f77d-462c-9985-137f54f4260d_buggy.java b/tmp/c1c56343-c23a-4067-bda8-478556a2fc3b_fixed.java
index 670114d..d99e840 100644
--- a/tmp/926fc1de-f77d-462c-9985-137f54f4260d_buggy.java
+++ b/tmp/c1c56343-c23a-4067-bda8-478556a2fc3b_fixed.java
@@ -1,48 +1,60 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
-      } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
+      } else if (n.isCall() && NodeUtil.isGet(n.getFirstChild())) {
+        Node nameNode = n.getFirstChild().getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
             refNodes.add(new ClassDefiningFunctionNode(
                 name, n, parent, parent.getParent()));
           }
         }
+      } else if (n.isCall() && n.getFirstChild().isName() &&
+                 n.getFirstChild().getString().equals("goog.inherits")) {
+        // Handle goog.inherits calls specifically
+        Node superclass = n.getSecondChild();
+        Node subclass = n.getFirstChild().getNext();
+        if (superclass != null && subclass != null && superclass.isQualifiedName() && subclass.isQualifiedName()) {
+          NameInformation superNs = createNameInformation(t, superclass, n);
+          NameInformation subNs = createNameInformation(t, subclass, n);
+          if (superNs != null && subNs != null) {
+            recordInheritance(subNs.name, superNs.name);
+          }
+        }
       }
     }
\ No newline at end of file
