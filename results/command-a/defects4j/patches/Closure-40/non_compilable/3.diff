diff --git a/tmp/a72ad666-55cb-4d30-afd0-a67107092b0c_buggy.java b/tmp/83ae4753-439c-4907-bf4d-8ea5cd52f2b4_fixed.java
index 670114d..aab8c83 100644
--- a/tmp/a72ad666-55cb-4d30-afd0-a67107092b0c_buggy.java
+++ b/tmp/83ae4753-439c-4907-bf4d-8ea5cd52f2b4_fixed.java
@@ -1,48 +1,58 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
-            recordSet(nameInfo.name, nameNode);
+        recordSet(nameInfo.name, n);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
-
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
+    Node callee = n.getFirstChild();
+    if (NodeUtil.isGetProp(callee)) {
+      String propertyName = callee.getLastChild().getString();
+      if (propertyName.equals("inherits") && callee.getFirstChild().matchesQualifiedName("goog")) {
+        Node superclassNode = n.getChildAtIndex(1);
+        NameInformation superNs = createNameInformation(t, superclassNode, n);
+        if (superNs != null) {
+          recordSet(superNs.name, superclassNode);
+        }
+      }
+    }
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
