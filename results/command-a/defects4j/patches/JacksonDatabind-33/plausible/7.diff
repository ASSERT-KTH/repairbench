diff --git a/tmp/5c3842bf-2df5-4894-b670-b3f95b318b06_buggy.java b/tmp/eb250a37-8c64-42bf-8bc4-1e57b3240f49_fixed.java
index 3cb9232..451abea 100644
--- a/tmp/5c3842bf-2df5-4894-b670-b3f95b318b06_buggy.java
+++ b/tmp/eb250a37-8c64-42bf-8bc4-1e57b3240f49_fixed.java
@@ -1,26 +1,32 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
 
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
+                if (pann.access().equals(JsonAutoDetect.Visibility.NONE)) {
+                    return null;
+                }
                 /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
                  *   it's actually bit tricky to do it more efficiently (meta-annotations
                  *   add more lookups; AnnotationMap costs etc)
                  */
+            } else if (_hasAnnotation(a, JsonUnwrapped.class)) {
+                // If @JsonUnwrapped is present, return an empty PropertyName to indicate unwrapped
+                return PropertyName.USE_DEFAULT;
             } else if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
                     || _hasAnnotation(a, JsonRawValue.class)) {
                 name = "";
             } else {
                 return null;
             }
         }
         return PropertyName.construct(name);
     }
\ No newline at end of file
