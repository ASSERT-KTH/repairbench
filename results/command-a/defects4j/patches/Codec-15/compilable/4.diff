diff --git a/tmp/dcb2a2b6-36cb-4842-958f-a254c51ebced_buggy.java b/tmp/e102ecb0-88fc-4639-9a1a-4dcbf804ddff_fixed.java
index b529d33..d8dc532 100644
--- a/tmp/dcb2a2b6-36cb-4842-958f-a254c51ebced_buggy.java
+++ b/tmp/e102ecb0-88fc-4639-9a1a-4dcbf804ddff_fixed.java
@@ -1,29 +1,19 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
 private char getMappingCode(final String str, final int index) {
     // map() throws IllegalArgumentException
     final char mappedChar = this.map(str.charAt(index));
     // HW rule check
     if (index > 1 && mappedChar != '0') {
         final char hwChar = str.charAt(index - 1);
         if ('H' == hwChar || 'W' == hwChar) {
             final char preHWChar = str.charAt(index - 2);
             final char firstCode = this.map(preHWChar);
             if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+                // Only return 0 if the current character is not part of a different code group
+                if (mappedChar == this.map(hwChar)) {
                     return 0;
                 }
             }
         }
+    }
     return mappedChar;
 }
\ No newline at end of file
