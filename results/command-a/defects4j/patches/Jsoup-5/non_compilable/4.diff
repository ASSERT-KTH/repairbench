diff --git a/tmp/815c7627-1e98-4d8a-8806-f7c357129fce_buggy.java b/tmp/402f3374-197d-48e9-90b2-e126eb82d860_fixed.java
index 39dd8e7..03d69c0 100644
--- a/tmp/815c7627-1e98-4d8a-8806-f7c357129fce_buggy.java
+++ b/tmp/402f3374-197d-48e9-90b2-e126eb82d860_fixed.java
@@ -1,30 +1,35 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
+                if (!tq.matchChomp(SQ)) { // if no closing ', take all as value
+                    value += tq.consumeToEnd();
+                }
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
+                if (!tq.matchChomp(DQ)) { // if no closing ", take all as value
+                    value += tq.consumeToEnd();
+                }
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
-        }
-        if (key.length() != 0)
-            return Attribute.createFromEncoded(key, value);
-        else {
+        } else if (key.length() > 0) { // boolean attribute with no value
+            value = "";
+        } else { // not a valid attribute, consume and return null
             tq.consume();
-                
             return null;
         }
+        return Attribute.createFromEncoded(key, value);
     }
\ No newline at end of file
