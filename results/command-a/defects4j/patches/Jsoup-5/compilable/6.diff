diff --git a/tmp/2bd967ae-d2da-4cc3-a823-65c8ddd911fc_buggy.java b/tmp/60955c43-a678-4ecc-9440-a00b6357b878_fixed.java
index 39dd8e7..72f970f 100644
--- a/tmp/2bd967ae-d2da-4cc3-a823-65c8ddd911fc_buggy.java
+++ b/tmp/60955c43-a678-4ecc-9440-a00b6357b878_fixed.java
@@ -1,30 +1,33 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
+        if (key.isEmpty()) {
+            return null; // Immediate return if key is empty
+        }
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
+                tq.consumeWhitespace();
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
+                tq.consumeWhitespace();
             } else {
                 StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
+                // Scan to end tag, space, or end of stream, handling invalid cases
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+                    if (tq.matchesAny("!", ".")) {
+                        // Skip invalid characters to prevent unexpected termination
+                        tq.consume();
+                        continue;
+                    }
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
-            tq.consumeWhitespace();
         }
-        if (key.length() != 0)
         return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
-            return null;
-        }
     }
\ No newline at end of file
