diff --git a/tmp/548dd45f-bdb5-4cce-b249-b826080bc58f_buggy.java b/tmp/5b36beea-8956-4405-ade9-f560a17c4ec2_fixed.java
index 39dd8e7..7cb68a1 100644
--- a/tmp/548dd45f-bdb5-4cce-b249-b826080bc58f_buggy.java
+++ b/tmp/5b36beea-8956-4405-ade9-f560a17c4ec2_fixed.java
@@ -1,30 +1,34 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
-        if (tq.matchChomp("=")) {
+    if (tq.matches("=")) {
+        tq.consume(); // consume equals
         tq.consumeWhitespace();
-
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+                if (tq.matches("!")) {
+                    // handle unexpected '!' by consuming it and breaking the loop
+                    tq.consume();
+                    break;
+                }
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    if (key.length() != 0) {
         return Attribute.createFromEncoded(key, value);
-        else {
+    } else {
+        // if key is empty, consume the next character to prevent infinite loop
         tq.consume();
-                
         return null;
     }
 }
\ No newline at end of file
