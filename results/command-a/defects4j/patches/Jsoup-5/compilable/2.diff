diff --git a/tmp/9478a1b9-070a-4d77-8535-c154f1e1f601_buggy.java b/tmp/f5e89c58-74c2-4d4d-9081-c82430dbfebd_fixed.java
index 39dd8e7..cc8b09b 100644
--- a/tmp/9478a1b9-070a-4d77-8535-c154f1e1f601_buggy.java
+++ b/tmp/f5e89c58-74c2-4d4d-9081-c82430dbfebd_fixed.java
@@ -1,30 +1,45 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
+                if (!tq.matchChomp(SQ)) { // if unclosed, seek to end of attr key
+                    tq.chompTo("<");
+                    tq.consume(); // throws away the '<'
+                }
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
+                if (!tq.matchChomp(DQ)) { // if unclosed, seek to end of attr key
+                    tq.chompTo("<");
+                    tq.consume(); // throws away the '<'
+                }
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
+        } else if (key.length() != 0) { // unquoted value
+            tq.consumeWhitespace();
+            StringBuilder valueAccum = new StringBuilder();
+            while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+                valueAccum.append(tq.consume());
+            }
+            value = valueAccum.toString();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
                 
             return null;
         }
     }
\ No newline at end of file
