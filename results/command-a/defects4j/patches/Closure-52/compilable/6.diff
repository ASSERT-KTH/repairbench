diff --git a/tmp/46716ed7-b77b-405a-93ac-0f0fa426c41a_buggy.java b/tmp/f27d8c6c-3a1c-4ec3-9f7a-014bb032a9ff_fixed.java
index 4b7f469..5ea1920 100644
--- a/tmp/46716ed7-b77b-405a-93ac-0f0fa426c41a_buggy.java
+++ b/tmp/f27d8c6c-3a1c-4ec3-9f7a-014bb032a9ff_fixed.java
@@ -1,10 +1,42 @@
   static boolean isSimpleNumber(String s) {
     int len = s.length();
-    for (int index = 0; index < len; index++) {
-      char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+    if (len == 0) return false;
+    
+    // Check for leading zeros
+    if (len > 1 && s.charAt(0) == '0') {
+      if (s.charAt(1) == 'x' || s.charAt(1) == 'X') { // Hexadecimal
+        for (int i = 2; i < len; i++) {
+          char c = s.charAt(i);
+          if (!(c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F')) {
             return false;
           }
         }
-    return len > 0;
+        return true;
+      } else if (s.charAt(1) >= '0' && s.charAt(1) <= '7') { // Octal
+        for (int i = 1; i < len; i++) {
+          char c = s.charAt(i);
+          if (c < '0' || c > '7') {
+            return false;
+          }
+        }
+        return true;
+      } else {
+        return false;
+      }
+    }
+    
+    // Check for regular decimal numbers
+    for (int i = 0; i < len; i++) {
+      char c = s.charAt(i);
+      if (!(c >= '0' && c <= '9' || (i == 0 && c == '-') || (i > 0 && c == '.'))) {
+        return false;
+      }
+      if (c == '.') {
+        if (i == len - 1 || s.charAt(i + 1) < '0' || s.charAt(i + 1) > '9') {
+          return false;
+        }
+        break;
+      }
+    }
+    return true;
   }
\ No newline at end of file
