diff --git a/tmp/c1d2ce34-378f-483f-a307-0921528f1ed2_buggy.java b/tmp/97c89836-149e-40aa-bd79-0de26a82169e_fixed.java
index 4b7f469..6650372 100644
--- a/tmp/c1d2ce34-378f-483f-a307-0921528f1ed2_buggy.java
+++ b/tmp/97c89836-149e-40aa-bd79-0de26a82169e_fixed.java
@@ -1,10 +1,42 @@
 static boolean isSimpleNumber(String s) {
     int len = s.length();
+    if (len == 0) return false;
+    
+    // Check for leading zeros in octal literals
+    if (len > 1 && s.charAt(0) == '0' && s.charAt(1) != '.') {
+        for (int i = 1; i < len; i++) {
+            char c = s.charAt(i);
+            if (c < '0' || c > '7') {
+                return false;
+            }
+        }
+        return true;
+    }
+    
+    // Check for hexadecimal literals
+    if (len > 2 && s.startsWith("0x")) {
+        for (int i = 2; i < len; i++) {
+            char c = s.charAt(i);
+            if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {
+                return false;
+            }
+        }
+        return true;
+    }
+    
+    // Check for floating point numbers
+    if (s.indexOf('.') != -1) {
+        String[] parts = s.split("\\.");
+        if (parts.length != 2) return false;
+        return isSimpleNumber(parts[0]) && isSimpleNumber(parts[1]);
+    }
+    
+    // Check for simple integers
     for (int index = 0; index < len; index++) {
       char c = s.charAt(index);
       if (c < '0' || c > '9') {
         return false;
       }
     }
-    return len > 0;
+    return true;
 }
\ No newline at end of file
