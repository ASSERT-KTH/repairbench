diff --git a/tmp/7af529fb-51e8-4f74-951a-c4fdbbc02a80_buggy.java b/tmp/551ea768-ea58-4bec-b749-e95c17d5579e_fixed.java
index 4b7f469..58f63a0 100644
--- a/tmp/7af529fb-51e8-4f74-951a-c4fdbbc02a80_buggy.java
+++ b/tmp/551ea768-ea58-4bec-b749-e95c17d5579e_fixed.java
@@ -1,10 +1,50 @@
   static boolean isSimpleNumber(String s) {
     int len = s.length();
+    if (len == 0) {
+      return false;
+    }
+    if (s.charAt(0) == '0' && len > 1) {
+      if (s.charAt(1) == 'x' || s.charAt(1) == 'X') {
+        // Hexadecimal number
+        for (int index = 2; index < len; index++) {
+          char c = s.charAt(index);
+          if (!(c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F')) {
+            return false;
+          }
+        }
+        return true;
+      } else if (s.charAt(1) >= '0' && s.charAt(1) <= '7') {
+        // Octal number
+        for (int index = 1; index < len; index++) {
+          char c = s.charAt(index);
+          if (c < '0' || c > '7') {
+            return false;
+          }
+        }
+        return true;
+      }
+    }
+    // Decimal number
     for (int index = 0; index < len; index++) {
       char c = s.charAt(index);
       if (c < '0' || c > '9') {
+        if (index == 0 && (c == '+' || c == '-')) {
+          continue;
+        }
+        if (c == '.' && index != len - 1) {
+          int dotCount = 0;
+          for (int i = 0; i < len; i++) {
+            if (s.charAt(i) == '.') {
+              dotCount++;
+              if (dotCount > 1) {
+                return false;
+              }
+            }
+          }
+          continue;
+        }
         return false;
       }
     }
-    return len > 0;
+    return true;
   }
\ No newline at end of file
