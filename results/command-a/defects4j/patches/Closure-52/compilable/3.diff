diff --git a/tmp/89667845-7176-4638-b2b3-2ac8295aa3d6_buggy.java b/tmp/0d82d08e-4915-42f2-b241-b356d78a9362_fixed.java
index 4b7f469..bb53e45 100644
--- a/tmp/89667845-7176-4638-b2b3-2ac8295aa3d6_buggy.java
+++ b/tmp/0d82d08e-4915-42f2-b241-b356d78a9362_fixed.java
@@ -1,10 +1,54 @@
   static boolean isSimpleNumber(String s) {
-    int len = s.length();
-    for (int index = 0; index < len; index++) {
+    if (s.length() == 0) {
+      return false;
+    }
+    if (s.charAt(0) == '0') {
+      if (s.length() > 1 && (s.charAt(1) == 'x' || s.charAt(1) == 'X')) {
+        // Hexadecimal
+        for (int index = 2; index < s.length(); index++) {
+          char c = s.charAt(index);
+          if (!(c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F')) {
+            return false;
+          }
+        }
+        return true;
+      } else if (s.length() > 1 && Character.isDigit(s.charAt(1))) {
+        // Octal
+        for (int index = 1; index < s.length(); index++) {
           char c = s.charAt(index);
+          if (c < '0' || c > '7') {
+            return false;
+          }
+        }
+        return true;
+      } else {
+        // Decimal with leading zero
+        return false;
+      }
+    } else if (s.indexOf('.') != -1) {
+      // Floating point number
+      String[] parts = s.split("\\.");
+      if (parts.length != 2 || parts[0].length() == 0 || parts[1].length() == 0) {
+        return false;
+      }
+      for (char c : parts[0].toCharArray()) {
+        if (c < '0' || c > '9') {
+          return false;
+        }
+      }
+      for (char c : parts[1].toCharArray()) {
         if (c < '0' || c > '9') {
           return false;
         }
       }
-    return len > 0;
+      return true;
+    } else {
+      // Simple integer
+      for (char c : s.toCharArray()) {
+        if (c < '0' || c > '9') {
+          return false;
+        }
+      }
+      return true;
+    }
   }
\ No newline at end of file
