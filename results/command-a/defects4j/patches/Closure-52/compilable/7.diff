diff --git a/tmp/5ec8fc32-7f09-4c5a-a3a3-0531d4d53ebd_buggy.java b/tmp/9c74ec26-d781-4d46-a91e-e00654774fa7_fixed.java
index 4b7f469..6835391 100644
--- a/tmp/5ec8fc32-7f09-4c5a-a3a3-0531d4d53ebd_buggy.java
+++ b/tmp/9c74ec26-d781-4d46-a91e-e00654774fa7_fixed.java
@@ -1,10 +1,48 @@
 static boolean isSimpleNumber(String s) {
     int len = s.length();
+    if (len == 0) return false;
+    if (s.charAt(0) == '0' && len > 1) {
+        // Handle special cases like "010", "0x10", "0.2", etc.
+        if (s.charAt(1) == 'x' || s.charAt(1) == 'X') {
+            // Hexadecimal number
+            for (int index = 2; index < len; index++) {
+                char c = s.charAt(index);
+                if (!(c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F')) {
+                    return false;
+                }
+            }
+            return true;
+        } else if (s.charAt(1) == '.') {
+            // Floating point number
+            int dotCount = 0;
+            for (int index = 1; index < len; index++) {
+                char c = s.charAt(index);
+                if (c == '.') {
+                    dotCount++;
+                    if (dotCount > 1) return false;
+                } else if (!(c >= '0' && c <= '9')) {
+                    return false;
+                }
+            }
+            return true;
+        } else {
+            // Octal number
+            for (int index = 1; index < len; index++) {
+                char c = s.charAt(index);
+                if (c < '0' || c > '7') {
+                    return false;
+                }
+            }
+            return true;
+        }
+    } else {
+        // Regular decimal number
         for (int index = 0; index < len; index++) {
             char c = s.charAt(index);
             if (c < '0' || c > '9') {
                 return false;
             }
         }
-    return len > 0;
+        return true;
+    }
 }
\ No newline at end of file
