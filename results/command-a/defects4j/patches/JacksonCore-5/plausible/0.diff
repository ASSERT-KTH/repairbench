diff --git a/tmp/6e3fea26-c8bd-4066-8dd1-6f32cf2205df_buggy.java b/tmp/862fadeb-29ef-4b08-9dec-74255f17b357_fixed.java
index 39c4220..960bd51 100644
--- a/tmp/6e3fea26-c8bd-4066-8dd1-6f32cf2205df_buggy.java
+++ b/tmp/862fadeb-29ef-4b08-9dec-74255f17b357_fixed.java
@@ -1,21 +1,25 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
+            char c = str.charAt(i); // Fixed: removed the increment inside charAt
+            if (c < '0' || c > '9') { // Fixed: swapped the condition to correctly check for non-digit characters
                 return -1;
             }
         }
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
+        try {
             return NumberInput.parseInt(str);
+        } catch (NumberFormatException e) { // Added exception handling to catch NumberFormatException
+            return -1; // Return -1 if parsing fails
+        }
     }
\ No newline at end of file
