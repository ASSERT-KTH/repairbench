diff --git a/tmp/603334da-5acb-44f3-ad54-07e14b911d99_buggy.java b/tmp/6fdec67d-1f02-4222-a01e-2f0ecab67f59_fixed.java
index e69de29..3e28afb 100644
--- a/tmp/603334da-5acb-44f3-ad54-07e14b911d99_buggy.java
+++ b/tmp/6fdec67d-1f02-4222-a01e-2f0ecab67f59_fixed.java
@@ -0,0 +1,29 @@
+public void _testFieldNameQuotingEnabled(JsonFactory jsonF, boolean useStream, boolean quoteFieldNames, String expJson) throws IOException
+{
+    ByteArrayOutputStream bytes = new ByteArrayOutputStream();
+    ObjectWriter writer;
+
+    if (useStream) {
+        JsonGenerator gen = quoteFieldNames ? 
+                jsonF.createGenerator(bytes) :
+                jsonF.createGenerator(bytes)
+                     .disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+        gen.writeStartObject();
+        gen.writeFieldName("foo");
+        gen.writeNumber(1);
+        gen.writeEndObject();
+        gen.close();
+    } else {
+        writer = quoteFieldNames ?
+                jsonF.createGenerator(bytes).createObjectWriter() :
+                jsonF.createGenerator(bytes)
+                     .disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES)
+                     .createObjectWriter();
+        writer.writeValue(bytes, new Object() { 
+            @JsonProperty("foo")
+            public int getFoo() { return 1; }
+        });
+    }
+    String result = bytes.toString("UTF-8");
+    assertEquals(expJson, result);
+}
\ No newline at end of file
