diff --git a/tmp/84b78d6a-96d3-4dfb-9b81-2781d861c8e1_buggy.java b/tmp/14773ba6-4657-4964-8f0e-07be51663b9b_fixed.java
index a6f008f..3c58ab9 100644
--- a/tmp/84b78d6a-96d3-4dfb-9b81-2781d861c8e1_buggy.java
+++ b/tmp/14773ba6-4657-4964-8f0e-07be51663b9b_fixed.java
@@ -1,11 +1,33 @@
     /**
      * Method that can be called on backends that support passing opaque datatypes of
-     * non-JSON formats
+     * non-JSON formats, such as raw binary content, or Base64 encoded String with
+     * optional {@link JsonToken#VALUE_EMBEDDED_OBJECT} token.
+     *
+     * @param object Content to write out; to handle binary, should be either
+     *   byte[], ByteBuffer or Base64Variant; null will produce
+     *   JsonToken#VALUE_NULL.
      *
      * @since 2.8
      */
     public void writeEmbeddedObject(Object object) throws IOException {
         // 01-Sep-2016, tatu: As per [core#318], handle small number of cases
-        throw new JsonGenerationException("No native support for writing embedded objects",
-                this);
+        if (object == null) {
+            writeNull();
+            return;
+        }
+        if (object instanceof byte[]) {
+            writeBinary((byte[]) object);
+            return;
+        }
+        if (object instanceof ByteBuffer) {
+            writeBinary((ByteBuffer) object);
+            return;
+        }
+        if (object instanceof Base64Variant) {
+            writeString(((Base64Variant) object).getName());
+            return;
+        }
+        // Anything else?
+        throw new JsonGenerationException("No native support for writing embedded objects ("
+                + object.getClass().getName() + ")", this);
     }
\ No newline at end of file
