diff --git a/tmp/6fa50884-aef2-4ea8-be57-6c752f583db0_buggy.java b/tmp/a91155d0-f28a-48fb-baee-c58f24a1c9a5_fixed.java
index 373b1e8..c469605 100644
--- a/tmp/6fa50884-aef2-4ea8-be57-6c752f583db0_buggy.java
+++ b/tmp/a91155d0-f28a-48fb-baee-c58f24a1c9a5_fixed.java
@@ -1,37 +1,46 @@
         private static boolean looksLikeUtf8(byte[] input) {
             int i = 0;
             // BOM:
             if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+                && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
                 i = 3;
             }
 
-            int end;
             for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+                int o = input[i] & 0xFF; // Ensure unsigned byte value
                 if ((o & 0x80) == 0) {
                     continue; // ASCII
                 }
 
-                // UTF-8 leading:
+                // UTF-8 leading byte checks
+                int end;
                 if ((o & 0xE0) == 0xC0) {
                     end = i + 1;
                 } else if ((o & 0xF0) == 0xE0) {
                     end = i + 2;
                 } else if ((o & 0xF8) == 0xF0) {
                     end = i + 3;
                 } else {
+                    return false; // Invalid leading byte
+                }
+
+                // Ensure sequence does not exceed array bounds
+                if (end > input.length) {
                     return false;
                 }
 
-
+                // Validate continuation bytes
                 while (i < end) {
                     i++;
-                    o = input[i];
-                    if ((o & 0xC0) != 0x80) {
-                        return false;
+                    if (i >= input.length) {
+                        return false; // Incomplete sequence
                     }
+                    int continuationByte = input[i] & 0xFF;
+                    if ((continuationByte & 0xC0) != 0x80) {
+                        return false; // Invalid continuation byte
                     }
                 }
+                i = end - 1; // Adjust i to avoid skipping the next byte
+            }
             return true;
         }
\ No newline at end of file
