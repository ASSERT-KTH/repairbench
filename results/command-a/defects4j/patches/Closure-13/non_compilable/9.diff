diff --git a/tmp/7669d178-7f01-4050-989b-1396b446b2fe_buggy.java b/tmp/137c1bc8-95c7-4777-9d10-3efa6facec7a_fixed.java
index b5d94e0..d5016fc 100644
--- a/tmp/7669d178-7f01-4050-989b-1396b446b2fe_buggy.java
+++ b/tmp/137c1bc8-95c7-4777-9d10-3efa6facec7a_fixed.java
@@ -1,26 +1,26 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
-    int visits = 0;
-    do {
+    boolean changed = true;
+    while (changed) {
+      changed = false;
+
       Node c = node.getFirstChild();
       while (c != null) {
-        traverse(c);
+        boolean childChanged = traverse(c);
+        changed |= childChanged;
+
         Node next = c.getNext();
         c = next;
       }
 
-      visit(node);
-      visits++;
+      boolean nodeChanged = visit(node);
+      changed |= nodeChanged;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+      Preconditions.checkState(!changed || visits < 10000, "too many iterations");
+    }
 
     exitNode(node);
   }
\ No newline at end of file
