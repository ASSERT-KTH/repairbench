diff --git a/tmp/ecf86a80-0fa7-4eef-b814-2a68c9588f6b_buggy.java b/tmp/c6204711-ff76-4a9e-86a9-d6baa941c178_fixed.java
index b5d94e0..38e998c 100644
--- a/tmp/ecf86a80-0fa7-4eef-b814-2a68c9588f6b_buggy.java
+++ b/tmp/c6204711-ff76-4a9e-86a9-d6baa941c178_fixed.java
@@ -1,26 +1,33 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
+    boolean isFirstVisit = true;
     do {
+      if (!isFirstVisit) {
+        // Re-establish child relationships after a retraverse
+        node.normalize();
+      }
+      isFirstVisit = false;
+
       Node c = node.getFirstChild();
       while (c != null) {
-        traverse(c);
         Node next = c.getNext();
+        traverse(c);
         c = next;
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
