diff --git a/tmp/fd0098d0-bafc-47ad-84b3-abf8acbe320e_buggy.java b/tmp/0323f2f1-b4da-4672-92b3-5eaba827ca11_fixed.java
index b5d94e0..77cdb1c 100644
--- a/tmp/fd0098d0-bafc-47ad-84b3-abf8acbe320e_buggy.java
+++ b/tmp/0323f2f1-b4da-4672-92b3-5eaba827ca11_fixed.java
@@ -1,26 +1,27 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
+    boolean changed = true;
     int visits = 0;
-    do {
+    while (changed && visits < 10000) {
+      changed = false;
       Node c = node.getFirstChild();
       while (c != null) {
-        traverse(c);
+        boolean childChanged = traverse(c);
+        changed |= childChanged;
         Node next = c.getNext();
         c = next;
       }
 
-      visit(node);
+      if (visit(node)) {
+        changed = true;
+      }
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+      Preconditions.checkState(visits < 10000, "too many iterations");
+    }
 
     exitNode(node);
   }
\ No newline at end of file
