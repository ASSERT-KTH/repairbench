diff --git a/tmp/aca5c8e6-a150-4e90-8e7f-0d09c2fdc768_buggy.java b/tmp/b06cb376-d556-4eac-aa7a-beb9124cbc1f_fixed.java
index b5d94e0..af1dd4e 100644
--- a/tmp/aca5c8e6-a150-4e90-8e7f-0d09c2fdc768_buggy.java
+++ b/tmp/b06cb376-d556-4eac-aa7a-beb9124cbc1f_fixed.java
@@ -1,26 +1,25 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
-    int visits = 0;
+    traverseChildren(node);
+    visit(node);
+
+    if (shouldRetraverse(node)) {
       do {
+        traverseChildren(node);
+        Preconditions.checkState(visits < 10000, "too many iterations");
+      } while (shouldRetraverse(node));
+    }
+
+    exitNode(node);
+  }
+
+  private void traverseChildren(Node node) {
     Node c = node.getFirstChild();
     while (c != null) {
       traverse(c);
-        Node next = c.getNext();
-        c = next;
+      c = c.getNext();
     }
-
-      visit(node);
-      visits++;
-
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
-
-    exitNode(node);
   }
\ No newline at end of file
