diff --git a/tmp/ffb439b1-cac4-4cfa-8a30-8e88aa02fdbc_buggy.java b/tmp/d4f7a480-7c42-4961-82b7-43b5b9a73376_fixed.java
index b5d94e0..55b1682 100644
--- a/tmp/ffb439b1-cac4-4cfa-8a30-8e88aa02fdbc_buggy.java
+++ b/tmp/d4f7a480-7c42-4961-82b7-43b5b9a73376_fixed.java
@@ -1,26 +1,32 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
       Node c = node.getFirstChild();
+      Node prev = null;
       while(c != null) {
-        traverse(c);
         Node next = c.getNext();
+        traverse(c);
+        if (prev != null && prev.getNext() != c) {
+          // If the child was removed or replaced, adjust the pointer
+          prev.setNext(c);
+        }
+        prev = c;
         c = next;
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      Preconditions.checkState(visits < 10000, "too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
