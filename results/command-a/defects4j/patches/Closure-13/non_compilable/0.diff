diff --git a/tmp/fa3a4dc4-0ece-42cc-a531-a7a18c6b43c4_buggy.java b/tmp/86c860d6-1a01-4a80-ae85-765a94f68be6_fixed.java
index b5d94e0..1dc5e38 100644
--- a/tmp/fa3a4dc4-0ece-42cc-a531-a7a18c6b43c4_buggy.java
+++ b/tmp/86c860d6-1a01-4a80-ae85-765a94f68be6_fixed.java
@@ -1,26 +1,24 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
-    int visits = 0;
-    do {
+    boolean changed = true;
+    while (changed) {
+      changed = false;
+      
       Node c = node.getFirstChild();
       while(c != null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
 
-      visit(node);
-      visits++;
+      changed |= visit(node);
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+      Preconditions.checkState(!changed || shouldRetraverse(node), 
+                               "Unexpected change without retracing");
+    }
 
     exitNode(node);
   }
\ No newline at end of file
