diff --git a/tmp/ae88a368-d2a4-4801-b4ad-883f69c9f5ac_buggy.java b/tmp/2f00d967-a502-4589-ba30-c5ff79242bdd_fixed.java
index 62e8ec8..002eeed 100644
--- a/tmp/ae88a368-d2a4-4801-b4ad-883f69c9f5ac_buggy.java
+++ b/tmp/2f00d967-a502-4589-ba30-c5ff79242bdd_fixed.java
@@ -1,26 +1,28 @@
 /**
  * <p>If an {@link Option} exists for <code>token</code> then
  * set the current option and add the token to the processed 
  * list.</p>
  *
  * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
  * is set then ignore the current token and add the remaining tokens
  * to the processed tokens list directly.</p>
  *
+ * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
+ * is not set, then throw an {@link UnrecognizedOptionException}.</p>
+ *
  * @param token The current option token
  * @param stopAtNonOption Specifies whether flattening should halt
  * at the first non option.
+ * @throws UnrecognizedOptionException if the token is not a recognized option and stopAtNonOption is false
  */
-    private void processOptionToken(String token, boolean stopAtNonOption)
-    {
-        if (options.hasOption(token))
-        {
+private void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException {
+    if (options.hasOption(token)) {
         currentOption = options.getOption(token);
         tokens.add(token);
-        }
-        else if (stopAtNonOption)
-        {
+    } else if (stopAtNonOption) {
         eatTheRest = true;
         tokens.add(token);
+    } else {
+        throw new UnrecognizedOptionException("Unrecognized option: " + token, token);
     }
 }
\ No newline at end of file
