diff --git a/tmp/65302a79-d773-4506-876d-c3e98e30de88_buggy.java b/tmp/ac7611c0-0964-40a4-8bdb-474f74d4e2c6_fixed.java
index 822447c..384f823 100644
--- a/tmp/65302a79-d773-4506-876d-c3e98e30de88_buggy.java
+++ b/tmp/ac7611c0-0964-40a4-8bdb-474f74d4e2c6_fixed.java
@@ -1,37 +1,55 @@
     /**
      * <p>
      * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
      * passed.
      * </p>
      * 
      * @param writer
      *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
      * @param str
      *            The <code>String</code> to escape. Assumed to be a non-null value.
      * @throws IOException
      *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
      *             methods.
      * 
      * @see #escape(String)
      * @see Writer
      */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
         for (int i = 0; i < len; i++) {
             char c = str.charAt(i);
             String entityName = this.entityName(c);
             if (entityName == null) {
                 if (c > 0x7F) {
                     writer.write("&#");
                     writer.write(Integer.toString(c, 10));
                     writer.write(';');
                 } else {
                     writer.write(c);
                 }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
         }
     }
+
+    // Helper method to correctly handle high Unicode characters
+    private String entityName(char c) {
+        if (c < 128) {
+            // Handle standard HTML entities
+            switch (c) {
+                case '"': return "quot";
+                case '&': return "amp";
+                case '\'': return "apos";
+                case '<': return "lt";
+                case '>': return "gt";
+                default: return null;
+            }
+        } else {
+            // For high Unicode characters, return null to ensure they are encoded as numeric entities
+            return null;
+        }
+    }
\ No newline at end of file
