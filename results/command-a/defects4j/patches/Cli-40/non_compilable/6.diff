diff --git a/tmp/2721868e-6ecf-4548-ba27-fee02d5aa4ed_buggy.java b/tmp/3eed34f5-d1da-4538-bab6-a11e9754902f_fixed.java
index a7d0787..315f46d 100644
--- a/tmp/2721868e-6ecf-4548-ba27-fee02d5aa4ed_buggy.java
+++ b/tmp/3eed34f5-d1da-4538-bab6-a11e9754902f_fixed.java
@@ -1,54 +1,38 @@
     /**
      * Returns the <code>Object</code> of type <code>clazz</code>
      * with the value of <code>str</code>.
      *
      * @param str the command line value
      * @param clazz the type of argument
      * @return The instance of <code>clazz</code> initialised with
      * the value of <code>str</code>.
      * @throws ParseException if the value creation for the given class failed
      */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+        if (PatternOptionBuilder.STRING_VALUE == clazz) {
             return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
             return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
+            try {
                 return (T) createNumber(str);
+            } catch (NumberFormatException e) {
+                throw new ParseException("Could not create Number from '" + str + "'", e);
             }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.DATE_VALUE == clazz) {
             return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
             return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILE_VALUE == clazz) {
             return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
             return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILES_VALUE == clazz) {
             return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.URL_VALUE == clazz) {
             return (T) createURL(str);
-        }
-        else
-        {
-            return null;
+        } else {
+            throw new ParseException("Unsupported class type: " + clazz.getName());
         }
     }
\ No newline at end of file
