diff --git a/tmp/dd5e767f-7cde-4d52-9802-2f6d9d973249_buggy.java b/tmp/67dbd922-3f31-4f06-a577-5da191d74f79_fixed.java
index 46817a7..6210987 100644
--- a/tmp/dd5e767f-7cde-4d52-9802-2f6d9d973249_buggy.java
+++ b/tmp/67dbd922-3f31-4f06-a577-5da191d74f79_fixed.java
@@ -1,16 +1,38 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    RecordType thisRecord = this.toMaybeRecordType();
+    RecordType thatRecord = that.toMaybeRecordType();
+    
+    // Get all unique properties from both records
+    Set<String> allProperties = new HashSet<>(thisRecord.properties.keySet());
+    allProperties.addAll(thatRecord.properties.keySet());
+    
+    for (String property : allProperties) {
+        JSType thisPropertyType = thisRecord.properties.get(property);
+        JSType thatPropertyType = thatRecord.properties.get(property);
+        
+        if (thisRecord.properties.containsKey(property) && thatRecord.properties.containsKey(property)) {
+            if (thisPropertyType.isEquivalentTo(thatPropertyType)) {
+                builder.addProperty(property, thisPropertyType, thisRecord.getPropertyNode(property));
+            } else {
+                // If property types are not equivalent, use the least supertype of the property types
+                builder.addProperty(property, thisPropertyType.getLeastSupertype(thatPropertyType), null);
             }
+        } else if (thisRecord.properties.containsKey(property)) {
+            builder.addProperty(property, thisPropertyType, thisRecord.getPropertyNode(property));
+        } else if (thatRecord.properties.containsKey(property)) {
+            builder.addProperty(property, thatPropertyType, thatRecord.getPropertyNode(property));
         }
-    return builder.build();
+    }
+    
+    JSType result = builder.build();
+    if (result.getProperties().isEmpty()) {
+        // If no common properties, return the union of the two record types
+        return registry.createUnionType(this, that);
+    }
+    return result;
 }
\ No newline at end of file
