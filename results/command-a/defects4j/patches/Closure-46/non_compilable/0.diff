diff --git a/tmp/4f283a21-c4bd-4e17-b88e-d06e81db9cc3_buggy.java b/tmp/9ad73997-3728-4153-a9a0-e16070ef1bd7_fixed.java
index 46817a7..2b8f230 100644
--- a/tmp/4f283a21-c4bd-4e17-b88e-d06e81db9cc3_buggy.java
+++ b/tmp/9ad73997-3728-4153-a9a0-e16070ef1bd7_fixed.java
@@ -1,16 +1,30 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    RecordType thatRecord = that.toMaybeRecordType();
+    Set<String> allProperties = new HashSet<>(properties.keySet());
+    allProperties.addAll(thatRecord.properties.keySet());
+    for (String property : allProperties) {
+      if (properties.containsKey(property) && thatRecord.hasProperty(property)) {
+        JSType thisPropertyType = getPropertyType(property);
+        JSType thatPropertyType = thatRecord.getPropertyType(property);
+        if (thisPropertyType.isEquivalentTo(thatPropertyType)) {
+          builder.addProperty(property, thisPropertyType, getPropertyNode(property));
+        } else {
+          builder.addProperty(property, registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));
         }
+      } else if (properties.containsKey(property)) {
+        builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
+      } else if (thatRecord.hasProperty(property)) {
+        builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));
       }
-    return builder.build();
+    }
+    JSType result = builder.build();
+    if (result.getProperties().isEmpty()) {
+      return registry.getNativeType(JSTypeNative.UNKNOWN_TYPE);
+    }
+    return registry.createUnionType(this, that);
   }
\ No newline at end of file
