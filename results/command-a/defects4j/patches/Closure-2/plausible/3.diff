diff --git a/tmp/e9afd26a-ec70-47b2-9c25-5f3d49a8f47d_buggy.java b/tmp/c2d08c27-23da-4046-ba36-4170b94e3d3e_fixed.java
index 8ff679b..b146d25 100644
--- a/tmp/e9afd26a-ec70-47b2-9c25-5f3d49a8f47d_buggy.java
+++ b/tmp/c2d08c27-23da-4046-ba36-4170b94e3d3e_fixed.java
@@ -1,39 +1,42 @@
 /**
  * Check whether there's any property conflict for for a particular super
  * interface
  * @param t The node traversal object that supplies context
  * @param n The node being visited
  * @param functionName The function name being checked
  * @param properties The property names in the super interfaces that have
  * been visited
  * @param currentProperties The property names in the super interface
  * that have been visited
  * @param interfaceType The super interface that is being visited
  */
 private void checkInterfaceConflictProperties(NodeTraversal t, Node n,
     String functionName, HashMap<String, ObjectType> properties,
     HashMap<String, ObjectType> currentProperties,
     ObjectType interfaceType) {
   ObjectType implicitProto = interfaceType.getImplicitPrototype();
   Set<String> currentPropertyNames;
+  if (implicitProto == null) {
     // This can be the case if interfaceType is proxy to a non-existent
     // object (which is a bad type annotation, but shouldn't crash).
+    return;
+  }
   currentPropertyNames = implicitProto.getOwnPropertyNames();
   for (String name : currentPropertyNames) {
     ObjectType oType = properties.get(name);
     if (oType != null) {
       if (!interfaceType.getPropertyType(name).isEquivalentTo(
           oType.getPropertyType(name))) {
         compiler.report(
             t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
                 functionName, name, oType.toString(),
                 interfaceType.toString()));
       }
     }
     currentProperties.put(name, interfaceType);
   }
   for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
     checkInterfaceConflictProperties(t, n, functionName, properties,
         currentProperties, iType);
   }
 }
\ No newline at end of file
