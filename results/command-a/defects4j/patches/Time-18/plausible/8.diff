diff --git a/tmp/f092a81f-b4de-4fa3-b27d-5b17ffeeb7e2_buggy.java b/tmp/d6bc30cd-6427-4522-8721-6bb76845c3f8_fixed.java
index be2af16..75508a6 100644
--- a/tmp/f092a81f-b4de-4fa3-b27d-5b17ffeeb7e2_buggy.java
+++ b/tmp/d6bc30cd-6427-4522-8721-6bb76845c3f8_fixed.java
@@ -1,29 +1,40 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
         long instant;
+        try {
+            // First, try Gregorian
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+                // If the date is before the cutover, try Julian
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                 if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+                    // If Julian date is after or equal to cutover, it's in the illegal gap
+                    throw new IllegalArgumentException("Specified date does not exist");
+                }
+            }
+        } catch (IllegalFieldValueException e) {
+            // If Gregorian fails, try Julian
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant >= iCutoverMillis) {
+                // If Julian date is after or equal to cutover, it's in the illegal gap
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
\ No newline at end of file
