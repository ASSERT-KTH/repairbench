diff --git a/tmp/6fdee6ed-421a-4c7f-9fc5-cb14af3fa81e_buggy.java b/tmp/5f713a54-1dc0-483a-8e83-c58e27d9ecb0_fixed.java
index be2af16..017714f 100644
--- a/tmp/6fdee6ed-421a-4c7f-9fc5-cb14af3fa81e_buggy.java
+++ b/tmp/5f713a54-1dc0-483a-8e83-c58e27d9ecb0_fixed.java
@@ -1,29 +1,40 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
         long instant;
+        try {
+            // First, assume date is Gregorian.
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+                // If Gregorian date is before cutover, try Julian.
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                 if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+                    // If Julian date is after or equal to cutover, it's in the illegal gap.
+                    throw new IllegalArgumentException("Specified date does not exist");
+                }
+            }
+        } catch (IllegalFieldValueException e) {
+            // If Gregorian fails, try Julian.
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (instant >= iCutoverMillis) {
+                // If Julian date is after or equal to cutover, it's in the illegal gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
\ No newline at end of file
