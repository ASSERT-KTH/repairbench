diff --git a/tmp/6ddfa7a0-817b-41bf-b61c-79ac83d049bd_buggy.java b/tmp/e0db9972-6f6a-4dab-903d-1f8aa240f3fd_fixed.java
index a667cbe..c44cd1d 100644
--- a/tmp/6ddfa7a0-817b-41bf-b61c-79ac83d049bd_buggy.java
+++ b/tmp/e0db9972-6f6a-4dab-903d-1f8aa240f3fd_fixed.java
@@ -1,10 +1,16 @@
-    /**
-     * Recalculate the hash code after deserialization. The hash code of some
-     * keys might have change (hash codes based on the system hash code are
-     * only stable for the same process).
-     * @return the instance with recalculated hash code
-     */
     private Object readResolve() {
         calculateHashCode(keys);
+        if (this.getClass() != MultiKey.class) {
+            // If this instance is a subclass, ensure that the subclass's state is restored
+            // by calling its readResolve method. This assumes that the subclass's readResolve
+            // method is responsible for restoring its own state.
+            try {
+                return this.getClass().getMethod("readResolve").invoke(this);
+            } catch (Exception e) {
+                // If the subclass does not have a readResolve method or it throws an exception,
+                // fall back to returning this instance.
+                return this;
+            }
+        }
         return this;
     }
\ No newline at end of file
