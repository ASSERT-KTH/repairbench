diff --git a/tmp/de3af040-ac79-4ec0-9b4e-05631ce3f688_buggy.java b/tmp/c51aec80-a80f-4ca3-86fc-5a94092d0149_fixed.java
index b8e7fdb..ab86012 100644
--- a/tmp/de3af040-ac79-4ec0-9b4e-05631ce3f688_buggy.java
+++ b/tmp/c51aec80-a80f-4ca3-86fc-5a94092d0149_fixed.java
@@ -1,15 +1,22 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
+    if (data.length() < 2 || data.charAt(0) != '<' || data.charAt(data.length() - 1) != '>') {
+        return null; // Not a valid XML declaration
+    }
+    String content = data.substring(1, data.length() - 1);
+    Document doc = Jsoup.parse("<" + content + ">", baseUri(), Parser.xmlParser());
     XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
+    if (doc.childNodeSize() > 0 && doc.child(0) instanceof Element) {
         Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+        String tagName = NodeUtils.parser(doc).settings().normalizeTag(el.tagName());
+        if (tagName.equalsIgnoreCase("?xml")) {
+            decl = new XmlDeclaration(tagName, data.startsWith("<!"));
             decl.attributes().addAll(el.attributes());
         }
+    }
     return decl;
 }
\ No newline at end of file
