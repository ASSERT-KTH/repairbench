diff --git a/tmp/9f091ffb-4f1e-4398-89a2-6d5558c18b3c_buggy.java b/tmp/9b7a28e7-d24a-430c-aa86-5de0a6743d1c_fixed.java
index e69de29..5f4728e 100644
--- a/tmp/9f091ffb-4f1e-4398-89a2-6d5558c18b3c_buggy.java
+++ b/tmp/9b7a28e7-d24a-430c-aa86-5de0a6743d1c_fixed.java
@@ -0,0 +1,31 @@
+protected void doReadObject(final java.io.ObjectInputStream in) throws IOException, ClassNotFoundException {
+    in.defaultReadObject();
+    final int mapType = in.readInt();
+    switch (mapType) {
+        case 0:
+            map = new java.util.HashMap<>();
+            break;
+        case 1:
+            map = new java.util.IdentityHashMap<>();
+            break;
+        case 2:
+            map = new java.util.TreeMap<>();
+            break;
+        case 3:
+            map = new java.util.LinkedHashMap<>();
+            break;
+        default:
+            throw new StreamCorruptedException("Unknown map type: " + mapType);
+    }
+    final Class<?> clazz = (Class<?>) in.readObject();
+    if (clazz == null || !Collection.class.isAssignableFrom(clazz)) {
+        throw new UnsupportedOperationException("Unsafe collection class: " + clazz);
+    }
+    collectionClass = clazz;
+    for (final Map.Entry<?, ?> entry : (Set<? extends Map.Entry<?, ?>>) map.entrySet()) {
+        final Collection<Object> coll = (Collection<Object>) entry.getValue();
+        if (!clazz.isInstance(coll)) {
+            throw new UnsupportedOperationException("Collection class mismatch: expected " + clazz + ", got " + coll.getClass());
+        }
+    }
+}
\ No newline at end of file
