diff --git a/tmp/a4aa0e3f-e27e-4710-8f57-25693f8688f4_buggy.java b/tmp/5dfa7bf2-1192-42be-9efe-85df4f8bd7d6_fixed.java
index f650982..d826536 100644
--- a/tmp/a4aa0e3f-e27e-4710-8f57-25693f8688f4_buggy.java
+++ b/tmp/5dfa7bf2-1192-42be-9efe-85df4f8bd7d6_fixed.java
@@ -1,42 +1,52 @@
     /**
      * Compares two values
      */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
 
 //        System.err.println("COMPARING: " +
 //            (l == null ? "null" : l.getClass().getName()) + " " +
 //            (r == null ? "null" : r.getClass().getName()));
 
         if (l instanceof InitialContext || l instanceof SelfContext) {
             l = ((EvalContext) l).getSingleNodePointer();
         }
 
         if (r instanceof InitialContext || r instanceof SelfContext) {
             r = ((EvalContext) r).getSingleNodePointer();
         }
 
         if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
+            Iterator iterator = ((Collection) l).iterator();
+            if (iterator.hasNext()) {
+                l = iterator.next();
+            } else {
+                l = null; // If collection is empty, treat it as null
+            }
         }
 
         if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
+            Iterator iterator = ((Collection) r).iterator();
+            if (iterator.hasNext()) {
+                r = iterator.next();
+            } else {
+                r = null; // If collection is empty, treat it as null
+            }
         }
 
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
             return contains((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
             return contains((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
         return equal(l, r);
     }
\ No newline at end of file
