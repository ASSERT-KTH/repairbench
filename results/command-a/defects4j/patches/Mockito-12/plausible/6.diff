diff --git a/tmp/19c9c641-33ac-4fcc-9a06-19041abce7b5_buggy.java b/tmp/4a84cc3c-42cf-4ac2-b636-1e03e12e1b55_fixed.java
index bada2b6..c61a03b 100644
--- a/tmp/19c9c641-33ac-4fcc-9a06-19041abce7b5_buggy.java
+++ b/tmp/4a84cc3c-42cf-4ac2-b636-1e03e12e1b55_fixed.java
@@ -1,16 +1,20 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
+    public Class<?> getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            Type actualType = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            if (actualType instanceof Class) {
+                return (Class<?>) actualType;
+            } else if (actualType instanceof ParameterizedType) {
+                // Handle nested generics by returning the raw type
+                return (Class<?>) ((ParameterizedType) actualType).getRawType();
+            }
         }
         
         return Object.class;
     }
\ No newline at end of file
