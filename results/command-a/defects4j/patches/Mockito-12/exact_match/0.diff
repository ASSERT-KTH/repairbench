diff --git a/tmp/6aa25d1b-31b7-4f5a-8d32-f69a35cdc51c_buggy.java b/tmp/4ec72dff-1277-4452-9c44-4b12f3d818c0_fixed.java
index bada2b6..123d063 100644
--- a/tmp/6aa25d1b-31b7-4f5a-8d32-f69a35cdc51c_buggy.java
+++ b/tmp/4ec72dff-1277-4452-9c44-4b12f3d818c0_fixed.java
@@ -1,16 +1,20 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
+     * Handles nested generics by returning the raw class of the outermost generic type.
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            if (actual instanceof Class) {
                 return (Class) actual;
-                //in case of nested generics we don't go deep
+            } else if (actual instanceof ParameterizedType) {
+                return (Class) ((ParameterizedType) actual).getRawType();
+            }
         }
         
         return Object.class;
     }
\ No newline at end of file
