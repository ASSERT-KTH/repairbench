diff --git a/tmp/1fbe63f2-849d-458e-91bc-ab74d885fe9d_buggy.java b/tmp/8f8f027e-639a-4921-bd75-8225b4651571_fixed.java
index ad7255c..8ac434d 100644
--- a/tmp/1fbe63f2-849d-458e-91bc-ab74d885fe9d_buggy.java
+++ b/tmp/8f8f027e-639a-4921-bd75-8225b4651571_fixed.java
@@ -1,42 +1,37 @@
 /**
  * Tests two polygons for equality.  If both are <code>null</code> this
  * method returns <code>true</code>.
  *
  * @param p1  path 1 (<code>null</code> permitted).
  * @param p2  path 2 (<code>null</code> permitted).
  *
  * @return A boolean.
  */
 public static boolean equal(GeneralPath p1, GeneralPath p2) {
     if (p1 == null) {
         return (p2 == null);
     }
     if (p2 == null) {
         return false;
     }
     if (p1.getWindingRule() != p2.getWindingRule()) {
         return false;
     }
     PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+    PathIterator iterator2 = p2.getPathIterator(null); // Fixed: Use p2 instead of p1
     double[] d1 = new double[6];
     double[] d2 = new double[6];
-        boolean done = iterator1.isDone() && iterator2.isDone();
-        while (!done) {
-            if (iterator1.isDone() != iterator2.isDone()) {
-                return false;
-            }
+    while (!iterator1.isDone() && !iterator2.isDone()) {
         int seg1 = iterator1.currentSegment(d1);
         int seg2 = iterator2.currentSegment(d2);
         if (seg1 != seg2) {
             return false;
         }
         if (!Arrays.equals(d1, d2)) {
             return false;
         }
         iterator1.next();
         iterator2.next();
-            done = iterator1.isDone() && iterator2.isDone();
     }
-        return true;
+    return iterator1.isDone() == iterator2.isDone(); // Fixed: Check if both iterators are done
 }
\ No newline at end of file
