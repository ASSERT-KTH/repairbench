diff --git a/tmp/e77a659b-56a8-45dc-b14f-e998e8dd906a_buggy.java b/tmp/6e2d074e-28c9-4969-baf3-fd645f0609ba_fixed.java
index c51c8b1..39890ae 100644
--- a/tmp/e77a659b-56a8-45dc-b14f-e998e8dd906a_buggy.java
+++ b/tmp/6e2d074e-28c9-4969-baf3-fd645f0609ba_fixed.java
@@ -1,31 +1,33 @@
 private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {
     Node nameNode = n.getFirstChild();
     Node parent = n.getParent();
     NameInformation ns = createNameInformation(t, nameNode);
     if (ns != null) {
         if (parent.isFor() && !NodeUtil.isForIn(parent)) {
             // Patch for assignments that appear in the init,
             // condition or iteration part of a FOR loop.  Without
             // this change, all 3 of those parts try to claim the for
             // loop as their dependency scope.  The last assignment in
             // those three fields wins, which can result in incorrect
             // reference edges between referenced and assigned variables.
             //
             // TODO(user) revisit the dependency scope calculation
             // logic.
             if (parent.getFirstChild().getNext() != n) {
                 recordDepScope(recordNode, ns);
             } else {
                 recordDepScope(nameNode, ns);
             }
+        } else if (parent.isCall() && parent.getFirstChild() == n) {
+            // If the assignment is the callee of a call expression,
+            // the callee is not part of the dependency scope of the
+            // call expression. This fixes cases where the assignment
+            // is the caller expression.
+            recordDepScope(nameNode, ns);
         } else {
             // The rhs of the assignment is the caller, so it's used by the
             // context. Don't associate it w/ the lhs.
-          // FYI: this fixes only the specific case where the assignment is the
-          // caller expression, but it could be nested deeper in the caller and
-          // we would still get a bug.
-          // See testAssignWithCall2 for an example of this.
             recordDepScope(recordNode, ns);
         }
     }
 }
\ No newline at end of file
