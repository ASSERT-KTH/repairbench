diff --git a/tmp/75f58fae-1db8-49dc-a4e9-b692417a16e3_buggy.java b/tmp/41ece5d4-df12-45a4-9995-788b0c4682b6_fixed.java
index 442a001..46bada8 100644
--- a/tmp/75f58fae-1db8-49dc-a4e9-b692417a16e3_buggy.java
+++ b/tmp/41ece5d4-df12-45a4-9995-788b0c4682b6_fixed.java
@@ -1,39 +1,45 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
             String name = el.attr("name");
             if (name.length() == 0) continue;
-            String type = el.attr("type");
+            String type = el.attr("abstype"); // Use 'abstype' to get the actual type, bypassing any overrides
 
             if ("select".equals(el.tagName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
+                    if (!option.hasAttr("disabled")) { // Ensure the option is not disabled
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                         set = true;
                     }
+                }
                 if (!set) {
                     Element option = el.select("option").first();
-                    if (option != null)
+                    if (option != null && !option.hasAttr("disabled")) { // Ensure the first option is not disabled
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                     }
+                }
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
-                if (el.hasAttr("checked")) {
-                    final String val = el.val();
+                // only add checkbox or radio if they have the checked attribute and are not disabled
+                if (el.hasAttr("checked") && !el.hasAttr("disabled")) {
+                    String val = el.val();
+                    if (val.length() == 0 && "checkbox".equalsIgnoreCase(type)) {
+                        val = "on"; // default value for checkbox if not set
+                    }
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
-            } else {
+            } else if (!el.hasAttr("disabled")) { // Ensure other elements are not disabled
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }
\ No newline at end of file
