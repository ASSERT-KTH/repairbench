diff --git a/tmp/9d15da31-5560-4e20-93cc-0514c16d9446_buggy.java b/tmp/756aefc2-9e31-4974-8c99-dff146ba681c_fixed.java
index 0fc103a..a363963 100644
--- a/tmp/9d15da31-5560-4e20-93cc-0514c16d9446_buggy.java
+++ b/tmp/756aefc2-9e31-4974-8c99-dff146ba681c_fixed.java
@@ -1,23 +1,27 @@
 /**
  * Remove the leading and trailing quotes from <code>str</code>.
  * E.g. if str is '"one two"', then 'one two' is returned.
+ * If there are multiple leading or trailing quotes, only the outermost are removed.
+ * If there is a single quote at the start or end, it is removed only if it is the outermost.
  *
-     * @param str The string from which the leading and trailing quotes
-     * should be removed.
-     *
+ * @param str The string from which the leading and trailing quotes should be removed.
  * @return The string without the leading and trailing quotes.
  */
-    static String stripLeadingAndTrailingQuotes(String str)
-    {
-        if (str.startsWith("\""))
-        {
-            str = str.substring(1, str.length());
+static String stripLeadingAndTrailingQuotes(String str) {
+    // Check if the string starts with a quote and is not empty
+    if (str.length() > 0 && str.charAt(0) == '\"') {
+        // Check if the string ends with a quote
+        if (str.length() > 1 && str.charAt(str.length() - 1) == '\"') {
+            // Remove both leading and trailing quotes
+            return str.substring(1, str.length() - 1);
+        } else {
+            // Remove only the leading quote
+            return str.substring(1);
         }
-        int length = str.length();
-        if (str.endsWith("\""))
-        {
-            str = str.substring(0, length - 1);
+    } else if (str.length() > 0 && str.charAt(str.length() - 1) == '\"') {
+        // Remove only the trailing quote
+        return str.substring(0, str.length() - 1);
     }
-        
+    // If no quotes are found at the start or end, return the original string
     return str;
 }
\ No newline at end of file
