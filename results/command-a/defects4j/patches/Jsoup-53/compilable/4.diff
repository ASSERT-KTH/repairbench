diff --git a/tmp/2e0c5855-10bb-44c0-b853-7ddb1e90b073_buggy.java b/tmp/87b848a1-27d7-43c4-a5c0-a2eb0d825b10_fixed.java
index fecb896..e090518 100644
--- a/tmp/2e0c5855-10bb-44c0-b853-7ddb1e90b073_buggy.java
+++ b/tmp/87b848a1-27d7-43c4-a5c0-a2eb0d825b10_fixed.java
@@ -1,34 +1,49 @@
 /**
  * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
  * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
  * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
  * contains text strings; use unescape for that.
  * @param open opener
  * @param close closer
  * @return data matched from the queue
  */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    char quote = 0; // track quotes to ignore open/close chars in them
 
     do {
         if (isEmpty()) break;
         Character c = consume();
+        if (quote != 0 && c != quote) {
+            // inside a quote, just keep going
+            last = c;
+            continue;
+        }
+        else if (c.equals('\'') || c.equals('"')) {
+            // start of a quote
+            quote = c;
+        }
+        else if (quote != 0 && c.equals(quote)) {
+            // end of a quote
+            quote = 0;
+        }
+
         if (last == 0 || last != ESC) {
             if (c.equals(open)) {
                 depth++;
                 if (start == -1)
-                        start = pos;
+                    start = pos - 1; // include the opener in the return
             }
             else if (c.equals(close))
                 depth--;
         }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
     } while (depth > 0);
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
