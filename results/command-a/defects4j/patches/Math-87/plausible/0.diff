diff --git a/tmp/cd260dc8-f56e-45af-a19d-52202a7ce5a0_buggy.java b/tmp/fede46e8-d718-4cdf-9b0d-e17fa645db44_fixed.java
index 70cafe0..863506c 100644
--- a/tmp/cd260dc8-f56e-45af-a19d-52202a7ce5a0_buggy.java
+++ b/tmp/fede46e8-d718-4cdf-9b0d-e17fa645db44_fixed.java
@@ -1,18 +1,20 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
     for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
             if (row == null) {
                 row = i;
             } else {
+                // If another non-zero entry is found in the same column, it's not basic
                 return null;
             }
         }
     }
-        return row;
+    // Return the row if exactly one non-zero entry was found, otherwise null
+    return row != null && MathUtils.equals(getEntry(row, col), 1.0, epsilon) ? row : null;
 }
\ No newline at end of file
