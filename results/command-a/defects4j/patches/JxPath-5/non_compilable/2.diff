diff --git a/tmp/efe8efe3-4c8f-4e33-961f-219340850a83_buggy.java b/tmp/d2b719b7-a6b7-4f6e-94e4-4a81c2318616_fixed.java
index 5f8ac1a..81d8926 100644
--- a/tmp/efe8efe3-4c8f-4e33-961f-219340850a83_buggy.java
+++ b/tmp/d2b719b7-a6b7-4f6e-94e4-4a81c2318616_fixed.java
@@ -1,34 +1,39 @@
 private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
 {
     if (depth1 < depth2) {
-            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
+        int r = compareNodePointers(p1, depth1, p2.getParent(), depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
-            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
+        int r = compareNodePointers(p1.getParent(), depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
+    // Handle the case where one pointer is a variable and the other is a node
+    if ((p1 != null && p1.isContainer()) || (p2 != null && p2.isContainer())) {
+        return p1 == null ? -1 : (p2 == null ? 1 : 0);
+    }
+
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
-        if (depth1 == 1) {
+    if (depth1 == 1 && (p1 == null || p2 == null || !p1.getRootNodePointer().equals(p2.getRootNodePointer()))) {
         throw new JXPathException(
                 "Cannot compare pointers that do not belong to the same tree: '"
                         + p1 + "' and '" + p2 + "'");
     }
-        int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
+    int r = compareNodePointers(p1 != null ? p1.getParent() : null, depth1 - 1, p2 != null ? p2.getParent() : null, depth2 - 1);
     if (r != 0) {
         return r;
     }
 
-        return p1.parent.compareChildNodePointers(p1, p2);
+    return p1 != null && p2 != null ? p1.getParent().compareChildNodePointers(p1, p2) : 0;
 }
\ No newline at end of file
