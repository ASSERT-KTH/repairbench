diff --git a/tmp/9142e310-4a33-454b-9783-7c88f861d4b2_buggy.java b/tmp/e6aa9fc8-adf6-497b-bcfb-620a3e1b26c4_fixed.java
index 5f8ac1a..21fc0bc 100644
--- a/tmp/9142e310-4a33-454b-9783-7c88f861d4b2_buggy.java
+++ b/tmp/e6aa9fc8-adf6-497b-bcfb-620a3e1b26c4_fixed.java
@@ -1,34 +1,42 @@
 private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
 {
     if (depth1 < depth2) {
-            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
+        if (p2.isContainer()) {
+            int r = compareNodePointers(p1, depth1, p2.getImmediateParent(), depth2 - 1);
             return r == 0 ? -1 : r;
         }
+        return -1;
+    }
     if (depth1 > depth2) {
-            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
+        if (p1.isContainer()) {
+            int r = compareNodePointers(p1.getImmediateParent(), depth1 - 1, p2, depth2);
             return r == 0 ? 1 : r;
         }
+        return 1;
+    }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
     if (depth1 == 1) {
+        if (p1 == null || p2 == null || !p1.getContext().equals(p2.getContext())) {
             throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
         }
-        int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
+    }
+    int r = compareNodePointers(p1.getImmediateParent(), depth1 - 1, p2.getImmediateParent(), depth2 - 1);
     if (r != 0) {
         return r;
     }
 
-        return p1.parent.compareChildNodePointers(p1, p2);
+    return p1.getImmediateParent().compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
