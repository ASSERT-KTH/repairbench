diff --git a/tmp/63477d09-897a-4d73-9ee0-3304dcfbfc9e_buggy.java b/tmp/792b7418-d091-4d13-aec0-fc223eea87d2_fixed.java
index 2573d30..42ceb29 100644
--- a/tmp/63477d09-897a-4d73-9ee0-3304dcfbfc9e_buggy.java
+++ b/tmp/792b7418-d091-4d13-aec0-fc223eea87d2_fixed.java
@@ -1,20 +1,29 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
+
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  Node currentNode = node.getFirstChild();
+  while (currentNode != null) {
+    if (currentNode.isName() && isNameAssignedTo(currentNode.getString(), replacement)) {
       return false;
     }
+    if (currentNode.isGetProp()) {
+      // Recursively check nested properties
+      if (!isSafeReplacement(currentNode, replacement)) {
+        return false;
+      }
+    }
+    currentNode = currentNode.getNext();
+  }
 
   return true;
 }
\ No newline at end of file
