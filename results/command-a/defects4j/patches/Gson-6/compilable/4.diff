diff --git a/tmp/f141a755-14d6-42bb-b1d9-7d6e03d5b09a_buggy.java b/tmp/8c91cf08-49be-4968-8fd7-52b7bc7b141e_fixed.java
index 1c53d31..93a768e 100644
--- a/tmp/f141a755-14d6-42bb-b1d9-7d6e03d5b09a_buggy.java
+++ b/tmp/8c91cf08-49be-4968-8fd7-52b7bc7b141e_fixed.java
@@ -1,20 +1,25 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
           .construct()
           .create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+    // Ensure typeAdapter is not null before calling nullSafe()
+    if (typeAdapter != null) {
       typeAdapter = typeAdapter.nullSafe();
+    } else {
+      throw new NullPointerException("TypeAdapter cannot be null");
+    }
     return typeAdapter;
 }
\ No newline at end of file
