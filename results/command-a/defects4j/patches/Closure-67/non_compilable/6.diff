diff --git a/tmp/94250030-d178-4cbb-8c78-190a7ce47cbc_buggy.java b/tmp/fba61d1f-f5e8-47d7-83ea-6229832ab795_fixed.java
index 939f49b..562f9fd 100644
--- a/tmp/94250030-d178-4cbb-8c78-190a7ce47cbc_buggy.java
+++ b/tmp/fba61d1f-f5e8-47d7-83ea-6229832ab795_fixed.java
@@ -1,21 +1,19 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && (n.getType() == Token.GETPROP || n.getType() == Token.STRING_KEY)) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        n.getType() == Token.GETPROP && n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      if (child.getType() == Token.STRING && child.getString().equals("prototype")) {
         return true;
       }
+    } else if (n.getType() == Token.STRING_KEY && n.getString().equals("prototype")) {
+      return true;
     }
   }
-
   return false;
 }
\ No newline at end of file
