diff --git a/tmp/2319d569-0b31-447e-a88e-69a3bf932c2b_buggy.java b/tmp/320851bd-0452-4230-a016-6277b9f5dbd4_fixed.java
index 939f49b..e076bed 100644
--- a/tmp/2319d569-0b31-447e-a88e-69a3bf932c2b_buggy.java
+++ b/tmp/320851bd-0452-4230-a016-6277b9f5dbd4_fixed.java
@@ -1,21 +1,28 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
+        // Also check if the assigned value is a function that references 'this'
+        Node value = assign.getLastChild();
+        if (value != null && value.getType() == Token.FUNCTION) {
+          Node functionBody = NodeUtil.getFunctionBody(value);
+          if (functionBody != null && NodeUtil.referencesThis(functionBody)) {
             return true;
           }
         }
       }
+    }
+  }
 
   return false;
 }
\ No newline at end of file
