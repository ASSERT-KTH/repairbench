diff --git a/tmp/cb5bfdb3-4744-4155-bf5a-3463804ef786_buggy.java b/tmp/b07a3161-7d49-4b49-a110-d75cafae2494_fixed.java
index b86c1ea..a118d9a 100644
--- a/tmp/cb5bfdb3-4744-4155-bf5a-3463804ef786_buggy.java
+++ b/tmp/b07a3161-7d49-4b49-a110-d75cafae2494_fixed.java
@@ -1,38 +1,27 @@
     /**
      * Translate an input onto a Writer. This is intentionally final as its algorithm is 
      * tightly coupled with the abstract method of this class. 
      *
      * @param input CharSequence that is being translated
      * @param out Writer to translate the text to
      * @throws IOException if and only if the Writer produces an IOException
      */
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
-        int len = Character.codePointCount(input, 0, input.length());
+        int len = input.length();
         while (pos < len) {
-            int consumed = translate(input, pos, out);
-            if (consumed == 0) {
-                char[] c = Character.toChars(Character.codePointAt(input, pos));
-                out.write(c);
+            int codePoint = Character.codePointAt(input, pos);
+            int consumed = Character.charCount(codePoint);
+            int translated = translate(input, pos, out);
+            if (translated == 0) {
+                out.write(Character.toChars(codePoint));
             }
-            else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
-                    } else {
-                        pos++;
-                    }
-                }
-                pos--;
-            }
-            pos++;
+            pos += consumed;
         }
     }
\ No newline at end of file
