diff --git a/tmp/89b4ced4-7211-47bd-8121-d8ee45dcbcce_buggy.java b/tmp/b0c557a7-7c01-4074-9ca7-b7e0fe935b70_fixed.java
index 7e43c1c..a228b94 100644
--- a/tmp/89b4ced4-7211-47bd-8121-d8ee45dcbcce_buggy.java
+++ b/tmp/b0c557a7-7c01-4074-9ca7-b7e0fe935b70_fixed.java
@@ -1,19 +1,27 @@
   /**
    * Visits a NEW node.
    */
   private void visitNew(NodeTraversal t, Node n) {
     Node constructor = n.getFirstChild();
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
       FunctionType fnType = type.toMaybeFunctionType();
       if (fnType != null) {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
+      } else if (type.isUnionType()) {
+        // Handle union types by ensuring the result is typed as the union of instance types
+        UnionType unionType = (UnionType) type;
+        JSType instanceType = unionType.getRestrictedUnion(
+            alternate -> alternate.toMaybeFunctionType() != null ? 
+                alternate.toMaybeFunctionType().getInstanceType() : 
+                null).restrictByNotNullOrUndefined();
+        ensureTyped(t, n, instanceType);
       } else {
         ensureTyped(t, n);
       }
     } else {
       report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);
     }
   }
\ No newline at end of file
