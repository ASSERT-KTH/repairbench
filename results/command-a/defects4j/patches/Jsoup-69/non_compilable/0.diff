diff --git a/tmp/83f9575c-fd87-4c45-893a-52eff4343a2e_buggy.java b/tmp/80756698-3223-4909-965b-a58ed6f3bcf4_fixed.java
index e69de29..5a28f85 100644
--- a/tmp/83f9575c-fd87-4c45-893a-52eff4343a2e_buggy.java
+++ b/tmp/80756698-3223-4909-965b-a58ed6f3bcf4_fixed.java
@@ -0,0 +1,34 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+
+    for (Element el : elements) {
+        if (!el.tagName().equals("input") || 
+            (!el.hasAttr("name") && !el.hasAttr("id"))) continue; // skip elements without name or id
+
+        String name = el.attr("name");
+        String id = el.id();
+        if (name.isEmpty() && id.isEmpty()) continue; // skip elements without name or id
+
+        String type = el.attr("type");
+        if (type.equalsIgnoreCase("checkbox") && !el.hasAttr("checked")) continue; // skip unchecked checkboxes
+        if (type.equalsIgnoreCase("radio") && !el.hasAttr("checked")) continue; // skip unchecked radio buttons
+
+        String value = el.val();
+        if (name.isEmpty()) {
+            data.add(new Connection.KeyVal(id, value));
+        } else {
+            data.add(new Connection.KeyVal(name, value));
+        }
+    }
+
+    // Remove deleted elements from the form data
+    data.removeIf(keyVal -> {
+        if (keyVal.key().isEmpty()) {
+            return !doc().getElementById(keyVal.key()) != null;
+        } else {
+            return !doc().getElementById(keyVal.key()) != null && doc().getElementsByAttributeValue("name", keyVal.key()).isEmpty();
+        }
+    });
+
+    return data;
+}
\ No newline at end of file
