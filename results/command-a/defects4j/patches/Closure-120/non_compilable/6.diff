diff --git a/tmp/c8db1757-e05a-4c35-821d-43fd4c2f6041_buggy.java b/tmp/8622ba5d-1ebb-46b9-ad1e-36b07ee36104_fixed.java
index 07b0792..9907acd 100644
--- a/tmp/c8db1757-e05a-4c35-821d-43fd4c2f6041_buggy.java
+++ b/tmp/8622ba5d-1ebb-46b9-ad1e-36b07ee36104_fixed.java
@@ -1,22 +1,45 @@
 /**
  * @return Whether the variable is only assigned a value once for its
-     *     lifetime.
+ *     lifetime, considering only assignments within the same function scope.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
-      // Make sure this assignment is not in a loop.
-      for (BasicBlock block = ref.getBasicBlock();
-           block != null; block = block.getParent()) {
-        if (block.isFunction) {
-          break;
-        } else if (block.isLoop) {
+  // Ensure the assignment is within the same function scope and not in a loop.
+  BasicBlock assignmentBlock = ref.getBasicBlock();
+  BasicBlock currentFunctionBlock = assignmentBlock;
+  while (currentFunctionBlock != null && !currentFunctionBlock.isFunction) {
+    currentFunctionBlock = currentFunctionBlock.getParent();
+  }
+
+  if (currentFunctionBlock == null) {
+    return false; // Assignment is not within a function scope.
+  }
+
+  for (BasicBlock block = assignmentBlock;
+       block != null && block != currentFunctionBlock; 
+       block = block.getParent()) {
+    if (block.isLoop) {
       return false;
     }
   }
 
+  // Check for other assignments within the same function scope.
+  for (Reference otherRef : getReferences()) {
+    if (otherRef != ref && otherRef.isAssignment()) {
+      BasicBlock otherBlock = otherRef.getBasicBlock();
+      BasicBlock otherFunctionBlock = otherBlock;
+      while (otherFunctionBlock != null && !otherFunctionBlock.isFunction) {
+        otherFunctionBlock = otherFunctionBlock.getParent();
+      }
+      if (otherFunctionBlock == currentFunctionBlock) {
+        return false;
+      }
+    }
+  }
+
   return true;
 }
\ No newline at end of file
