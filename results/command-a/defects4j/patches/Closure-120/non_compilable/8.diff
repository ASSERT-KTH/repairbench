diff --git a/tmp/996be580-39c3-4da1-9b1f-0fa5cbb2ee83_buggy.java b/tmp/fcec12f5-6a2f-4f08-87f2-f913bd0bf81e_fixed.java
index 07b0792..f5c388d 100644
--- a/tmp/996be580-39c3-4da1-9b1f-0fa5cbb2ee83_buggy.java
+++ b/tmp/fcec12f5-6a2f-4f08-87f2-f913bd0bf81e_fixed.java
@@ -1,22 +1,35 @@
 /**
  * @return Whether the variable is only assigned a value once for its
-     *     lifetime.
+ *     lifetime, considering reassignments in nested functions.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
-      // Make sure this assignment is not in a loop.
+  // Make sure this assignment is not in a loop and consider nested functions.
   for (BasicBlock block = ref.getBasicBlock();
        block != null; block = block.getParent()) {
     if (block.isFunction) {
-          break;
+      // Check if the variable is reassigned in the nested function.
+      if (isReassignedInNestedFunction(block)) {
+        return false;
+      }
     } else if (block.isLoop) {
       return false;
     }
   }
 
   return true;
 }
+
+private boolean isReassignedInNestedFunction(BasicBlock functionBlock) {
+  // Check if the variable is reassigned in the nested function body.
+  for (Reference reference : getReferences()) {
+    if (reference.getBasicBlock().getParent() == functionBlock && reference.isAssignment()) {
+      return true;
+    }
+  }
+  return false;
+}
\ No newline at end of file
