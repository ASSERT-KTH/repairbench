diff --git a/tmp/add94568-9676-457f-984a-6d73872a59fe_buggy.java b/tmp/4a111a8b-f314-43f9-816d-14f2ed740499_fixed.java
index 40f74f7..f90224c 100644
--- a/tmp/add94568-9676-457f-984a-6d73872a59fe_buggy.java
+++ b/tmp/4a111a8b-f314-43f9-816d-14f2ed740499_fixed.java
@@ -1,50 +1,58 @@
     public static boolean testNode(Node node, NodeTest test) {
         if (test == null) {
             return true;
         }
         if (test instanceof NodeNameTest) {
             if (node.getNodeType() != Node.ELEMENT_NODE) {
                 return false;
             }
 
             NodeNameTest nodeNameTest = (NodeNameTest) test;
             QName testName = nodeNameTest.getNodeName();
             String namespaceURI = nodeNameTest.getNamespaceURI();
             boolean wildcard = nodeNameTest.isWildcard();
             String testPrefix = testName.getPrefix();
-            if (wildcard && testPrefix == null) {
+            String testLocalName = testName.getLocalPart();
+
+            if (wildcard && testPrefix == null && testLocalName == null) {
                 return true;
             }
-            if (wildcard
-                || testName.getName()
-                        .equals(DOMNodePointer.getLocalName(node))) {
-                String nodeNS = DOMNodePointer.getNamespaceURI(node);
+
+            String nodeLocalName = node.getLocalName();
+            String nodeNS = node.getNamespaceURI();
+
+            if (wildcard && (testPrefix == null || testPrefix.equals(node.getPrefix()))) {
+                return testLocalName == null || testLocalName.equals(nodeLocalName);
+            }
+
+            if (testLocalName != null && testLocalName.equals(nodeLocalName)) {
                 return equalStrings(namespaceURI, nodeNS);
             }
+
             return false;
         }
         if (test instanceof NodeTypeTest) {
             int nodeType = node.getNodeType();
             switch (((NodeTypeTest) test).getNodeType()) {
                 case Compiler.NODE_TYPE_NODE:
                     return nodeType == Node.ELEMENT_NODE
                             || nodeType == Node.DOCUMENT_NODE;
                 case Compiler.NODE_TYPE_TEXT:
                     return nodeType == Node.CDATA_SECTION_NODE
                             || nodeType == Node.TEXT_NODE;
                 case Compiler.NODE_TYPE_COMMENT:
                     return nodeType == Node.COMMENT_NODE;
                 case Compiler.NODE_TYPE_PI:
                     return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
             }
             return false;
         }
         if (test instanceof ProcessingInstructionTest) {
             if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
                 String testPI = ((ProcessingInstructionTest) test).getTarget();
                 String nodePI = ((ProcessingInstruction) node).getTarget();
                 return testPI.equals(nodePI);
             }
         }
         return false;
     }
\ No newline at end of file
