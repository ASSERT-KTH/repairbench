diff --git a/tmp/e47c9044-849a-4e03-ad01-4c393a493188_buggy.java b/tmp/4f489dad-4269-49ab-b310-068bf1a0c82c_fixed.java
index 19fd63e..4611a47 100644
--- a/tmp/e47c9044-849a-4e03-ad01-4c393a493188_buggy.java
+++ b/tmp/4f489dad-4269-49ab-b310-068bf1a0c82c_fixed.java
@@ -1,24 +1,32 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
-
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          // Check if the expression is a call to an event handler method
+          if (maybeExpr.getType() == Token.CALL) {
+            Node callee = maybeExpr.getFirstChild();
+            if (callee.getType() == Token.GETPROP) {
+              String propName = callee.getLastChild().getString();
+              if (propName.endsWith("change") || propName.endsWith("click") || 
+                  propName.endsWith("focus") || propName.endsWith("blur") ||
+                  propName.endsWith("load") || propName.endsWith("unload") ||
+                  propName.endsWith("submit") || propName.endsWith("reset")) {
+                return false;
+              }
+            }
+          }
+          return true;
+        }
       }
     }
-
     return false;
   }
\ No newline at end of file
