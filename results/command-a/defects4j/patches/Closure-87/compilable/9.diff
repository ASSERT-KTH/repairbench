diff --git a/tmp/0dfb8985-debf-472c-9355-f7e2be75be3e_buggy.java b/tmp/033a3dc9-f61a-45dc-b096-190ce92f30c0_fixed.java
index 19fd63e..a9f8fc4 100644
--- a/tmp/0dfb8985-debf-472c-9355-f7e2be75be3e_buggy.java
+++ b/tmp/033a3dc9-f61a-45dc-b096-190ce92f30c0_fixed.java
@@ -1,24 +1,34 @@
   /**
    * @return Whether the node is a block with a single statement that is
-   *     an expression.
+   *     an expression, and that expression is not a call to a property named
+   *     'onchange'.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
+          // We try to detect this case, and not fold EXPR_RESULTS
           // into other expressions.
 
           // We only have to worry about methods with an implicit 'this'
           // param, or this doesn't happen.
 
-          return NodeUtil.isExpressionNode(maybeExpr);
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          if (maybeExpr.getType() == Token.CALL) {
+            Node callTarget = maybeExpr.getFirstChild();
+            if (callTarget.getType() == Token.GETPROP &&
+                callTarget.getLastChild().getString().equals("onchange")) {
+              return false;
+            }
+          }
+          return true;
+        }
       }
     }
 
     return false;
   }
\ No newline at end of file
