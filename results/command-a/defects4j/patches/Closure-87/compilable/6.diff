diff --git a/tmp/581cf711-a993-4b06-bddb-0b5166c5bc04_buggy.java b/tmp/673e3217-c6b5-45d7-9fe3-cec9cc423c0f_fixed.java
index 19fd63e..e3ddfbc 100644
--- a/tmp/581cf711-a993-4b06-bddb-0b5166c5bc04_buggy.java
+++ b/tmp/673e3217-c6b5-45d7-9fe3-cec9cc423c0f_fixed.java
@@ -1,24 +1,36 @@
 /**
  * @return Whether the node is a block with a single statement that is
-   *     an expression.
+ *     an expression, and not an event handler method call.
  */
 private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
         if (n.hasOneChild()) {
             Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+            if (NodeUtil.isExpressionNode(maybeExpr)) {
+                // Check if the expression is an event handler method call
+                if (maybeExpr.getType() == Token.CALL &&
+                    maybeExpr.getFirstChild().getType() == Token.GETPROP &&
+                    isEventHandlerMethod(maybeExpr.getFirstChild().getString())) {
+                    return false;
+                }
+                return true;
+            }
         }
     }
+    return false;
+}
 
+private boolean isEventHandlerMethod(String methodName) {
+    // List of common event handler methods
+    String[] eventHandlerMethods = {
+        "onchange", "onclick", "onkeydown", "onkeyup", "onkeypress",
+        "onload", "onmousedown", "onmousemove", "onmouseout", "onmouseover",
+        "onmouseup", "onreset", "onselect", "onsubmit", "onunload"
+    };
+    for (String method : eventHandlerMethods) {
+        if (method.equals(methodName)) {
+            return true;
+        }
+    }
     return false;
 }
\ No newline at end of file
