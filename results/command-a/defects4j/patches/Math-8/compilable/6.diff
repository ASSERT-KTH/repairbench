diff --git a/tmp/26c88d4b-a0af-4a64-8101-7e1214a85da4_buggy.java b/tmp/15ab30b0-6832-4e34-ae42-12874f0a70de_fixed.java
index bfa2423..2ce738b 100644
--- a/tmp/26c88d4b-a0af-4a64-8101-7e1214a85da4_buggy.java
+++ b/tmp/15ab30b0-6832-4e34-ae42-12874f0a70de_fixed.java
@@ -1,23 +1,34 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
  * @return an array representing the random sample.
  * @throws NotStrictlyPositiveException if {@code sampleSize} is not
  * positive.
  */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                 sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(getComponentType(), sampleSize);
 
     for (int i = 0; i < sampleSize; i++) {
         out[i] = sample();
     }
 
     return out;
+}
 
+/**
+ * Gets the component type of the distribution.
+ *
+ * @return the component type.
+ */
+private Class<?> getComponentType() {
+    if (singletons.isEmpty()) {
+        return Object.class;
+    }
+    return singletons.get(0).getClass();
 }
\ No newline at end of file
