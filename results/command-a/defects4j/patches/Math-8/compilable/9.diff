diff --git a/tmp/15946599-3e9e-41aa-aeb9-c30a00d00ced_buggy.java b/tmp/479fbf65-70e6-40fd-820c-298a8eb85c6c_fixed.java
index bfa2423..ac1ee61 100644
--- a/tmp/15946599-3e9e-41aa-aeb9-c30a00d00ced_buggy.java
+++ b/tmp/479fbf65-70e6-40fd-820c-298a8eb85c6c_fixed.java
@@ -1,23 +1,28 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
  * @return an array representing the random sample.
  * @throws NotStrictlyPositiveException if {@code sampleSize} is not
  * positive.
  */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                 sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    // Use the class of the first singleton to create the array
+    Class<?> clazz = singletons.get(0).getClass();
+    if (clazz.isArray()) {
+        clazz = clazz.getComponentType();
+    }
+
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(clazz, sampleSize);
 
     for (int i = 0; i < sampleSize; i++) {
         out[i] = sample();
     }
 
     return out;
-
 }
\ No newline at end of file
