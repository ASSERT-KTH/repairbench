diff --git a/tmp/6c232bee-ad3d-402e-9c39-8c61db84cef0_buggy.java b/tmp/d4856d41-fe1a-4cf2-9df1-29e7e8f72ad7_fixed.java
index 25c13b3..c3ae56b 100644
--- a/tmp/6c232bee-ad3d-402e-9c39-8c61db84cef0_buggy.java
+++ b/tmp/d4856d41-fe1a-4cf2-9df1-29e7e8f72ad7_fixed.java
@@ -1,15 +1,10 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+        if (d <= 2.0) {
+            ret = 0.0; // When denominator degrees of freedom is less than or equal to 2, the F-distribution is undefined for negative values, so we start at 0.
+        } else {
+            ret = d / (d - 2.0); // Original calculation for when denominator degrees of freedom is greater than 2
+        }
         return ret;
     }
\ No newline at end of file
