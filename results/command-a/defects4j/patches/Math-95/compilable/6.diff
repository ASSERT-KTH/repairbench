diff --git a/tmp/dea657c3-ed11-43b5-8c0e-f7010bb82dc4_buggy.java b/tmp/98d00626-a79f-4a79-ab2d-22574938b82e_fixed.java
index 25c13b3..640daa5 100644
--- a/tmp/dea657c3-ed11-43b5-8c0e-f7010bb82dc4_buggy.java
+++ b/tmp/98d00626-a79f-4a79-ab2d-22574938b82e_fixed.java
@@ -1,15 +1,13 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        if (d < 2.0) {
+            // Handle the case where denominator degrees of freedom is less than 2
+            // to avoid division by zero and ensure a valid initial domain value.
+            ret = Double.POSITIVE_INFINITY; // or another appropriate value
+        } else {
+            // Use mean for degrees of freedom greater than or equal to 2
             ret = d / (d - 2.0);
+        }
         return ret;
     }
\ No newline at end of file
