diff --git a/tmp/cb0b520f-1582-40ae-bf74-f95a441a637a_buggy.java b/tmp/79c65aa0-5540-4923-9f36-3a1e3cba3c07_fixed.java
index e69de29..d25a61b 100644
--- a/tmp/cb0b520f-1582-40ae-bf74-f95a441a637a_buggy.java
+++ b/tmp/79c65aa0-5540-4923-9f36-3a1e3cba3c07_fixed.java
@@ -0,0 +1,37 @@
+import com.fasterxml.jackson.databind.JavaType;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.type.TypeFactory;
+
+public class FixedTypeFactory {
+
+    private static final ObjectMapper objectMapper = new ObjectMapper();
+
+    public static JavaType constructType(Class<?> clazz) {
+        TypeFactory tf = objectMapper.getTypeFactory();
+        if (tf.hasRecursiveType(clazz)) {
+            JavaType type = tf.constructType(clazz);
+            if (type.getSuperClass() != null && type.getSuperClass().isTypeOrSubTypeOf(clazz)) {
+                // Ensure the super class is fully resolved before returning the type
+                tf.constructType(type.getSuperClass());
+            }
+            return type;
+        }
+        return tf.constructType(clazz);
+    }
+
+    public static void main(String[] args) {
+        // Example usage
+        TypeFactory tf = objectMapper.getTypeFactory();
+        tf.constructType(Base.class); // Ensure base class is constructed first
+        JavaType subType = constructType(Sub.class);
+        System.out.println(subType);
+    }
+
+    static class Base {
+        public int base = 1;
+    }
+
+    static class Sub extends Base {
+        public int sub = 2;
+    }
+}
\ No newline at end of file
