diff --git a/tmp/c8bac22a-dc50-4aca-8eaf-32dde156d878_buggy.java b/tmp/afce459a-6617-4114-86ea-c4b8efe4a77a_fixed.java
index ec6c9ee..fa4381c 100644
--- a/tmp/c8bac22a-dc50-4aca-8eaf-32dde156d878_buggy.java
+++ b/tmp/afce459a-6617-4114-86ea-c4b8efe4a77a_fixed.java
@@ -1,21 +1,26 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
+            // Ensure the separator is only applied if there are elements to separate
+            if (size > 2) {
                 return new PeriodFormatter(sep, sep);
+            } else {
+                return f;
+            }
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
