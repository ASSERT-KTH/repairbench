diff --git a/tmp/158b3b78-08c3-4659-b708-eceb46792a18_buggy.java b/tmp/174a2af2-c8ab-42bd-922b-4daa4873e99b_fixed.java
index 8e93a5e..911b393 100644
--- a/tmp/158b3b78-08c3-4659-b708-eceb46792a18_buggy.java
+++ b/tmp/174a2af2-c8ab-42bd-922b-4daa4873e99b_fixed.java
@@ -1,43 +1,35 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
+        
+        // Append the first line without padding
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
+        text = text.substring(pos).trim(); // Trim the remaining text once
+        
         while (true)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            pos = findWrapPos(text, width - nextLineTabStop, 0); // Adjust width for padding
 
             if (pos == -1)
             {
-                sb.append(text);
-
+                sb.append(padding).append(text); // Append padding before the last line
                 return sb;
             }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(padding).append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            text = text.substring(pos).trim(); // Trim the remaining text
         }
     }
\ No newline at end of file
