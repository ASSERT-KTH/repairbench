diff --git a/tmp/ee5c21b8-db64-4cfd-80c2-ff1a2538a7cc_buggy.java b/tmp/af67137e-b6c9-4a50-976a-0d0d767986b7_fixed.java
index 8e93a5e..7d3f897 100644
--- a/tmp/ee5c21b8-db64-4cfd-80c2-ff1a2538a7cc_buggy.java
+++ b/tmp/af67137e-b6c9-4a50-976a-0d0d767986b7_fixed.java
@@ -1,43 +1,37 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
+        String textToWrap = text.substring(pos).trim();
+        if (textToWrap.length() > 0) {
+            textToWrap = padding + textToWrap;
+        }
+
         while (true)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            pos = findWrapPos(textToWrap, width, nextLineTabStop);
 
             if (pos == -1)
             {
-                sb.append(text);
+                sb.append(rtrim(textToWrap));
 
                 return sb;
             }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(rtrim(textToWrap.substring(0, pos))).append(defaultNewLine);
+            textToWrap = padding + textToWrap.substring(pos).trim();
         }
     }
\ No newline at end of file
