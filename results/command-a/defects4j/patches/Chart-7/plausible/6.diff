diff --git a/tmp/2e5c6a42-a8c3-4741-8c28-e90aae386408_buggy.java b/tmp/4764fb3e-15b7-4d54-b88a-9ab7b6163618_fixed.java
index eb0c9a2..fd2bbab 100644
--- a/tmp/2e5c6a42-a8c3-4741-8c28-e90aae386408_buggy.java
+++ b/tmp/4764fb3e-15b7-4d54-b88a-9ab7b6163618_fixed.java
@@ -1,85 +1,83 @@
 /**
  * Update the index values for the maximum and minimum bounds.
  * 
  * @param period  the time period.
  * @param index  the index of the time period.
  */
 private void updateBounds(TimePeriod period, int index) {
     
     long start = period.getStart().getTime();
     long end = period.getEnd().getTime();
     long middle = start + ((end - start) / 2);
 
     if (this.minStartIndex >= 0) {
         long minStart = getDataItem(this.minStartIndex).getPeriod()
             .getStart().getTime();
         if (start < minStart) {
             this.minStartIndex = index;           
         }
     }
     else {
         this.minStartIndex = index;
     }
     
     if (this.maxStartIndex >= 0) {
         long maxStart = getDataItem(this.maxStartIndex).getPeriod()
             .getStart().getTime();
         if (start > maxStart) {
             this.maxStartIndex = index;           
         }
     }
     else {
         this.maxStartIndex = index;
     }
     
     if (this.minMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long minMiddle = s + (e - s) / 2;
+        long minMiddle = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            .getTime() + (getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            .getTime() - getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            .getTime()) / 2;
         if (middle < minMiddle) {
             this.minMiddleIndex = index;           
         }
     }
     else {
         this.minMiddleIndex = index;
     }
     
     if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long maxMiddle = s + (e - s) / 2;
+        long maxMiddle = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
+            .getTime() + (getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
+            .getTime() - getDataItem(this.maxMiddleIndex).getPeriod().getStart()
+            .getTime()) / 2;
         if (middle > maxMiddle) {
             this.maxMiddleIndex = index;           
         }
     }
     else {
         this.maxMiddleIndex = index;
     }
     
     if (this.minEndIndex >= 0) {
         long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
             .getTime();
         if (end < minEnd) {
             this.minEndIndex = index;           
         }
     }
     else {
         this.minEndIndex = index;
     }
    
     if (this.maxEndIndex >= 0) {
         long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
             .getTime();
         if (end > maxEnd) {
             this.maxEndIndex = index;           
         }
     }
     else {
         this.maxEndIndex = index;
     }
     
 }
\ No newline at end of file
