diff --git a/tmp/ec450a9e-2473-46b6-ac5d-e485dd439d51_buggy.java b/tmp/72fe3561-1cb4-41ce-a8b8-911fe1a7efd3_fixed.java
index 800e6e1..3c1156c 100644
--- a/tmp/ec450a9e-2473-46b6-ac5d-e485dd439d51_buggy.java
+++ b/tmp/72fe3561-1cb4-41ce-a8b8-911fe1a7efd3_fixed.java
@@ -1,32 +1,36 @@
 /**
  * Visit a node in a local scope, and add any local variables or catch
  * parameters into the local symbol table.
  *
  * @param t The node traversal.
  * @param n The node being visited.
  * @param parent The parent of n
  */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
-          if (parent.getType() == Token.NAME) {
+      if (n.getParent().getType() == Token.NAME && n.getGrandparent().getType() == Token.ASSIGN) {
+        // Handle namespaced function declarations, e.g., `goog.foo = function...`
+        defineDeclaredFunction(n, n.getGrandparent().getFirstChild());
+      } else if (parent.getType() == Token.NAME) {
         return;
-          }
+      } else {
         defineDeclaredFunction(n, parent);
+      }
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file
