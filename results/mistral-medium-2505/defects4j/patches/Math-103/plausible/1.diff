diff --git a/tmp/6c2ec10e-c529-4d5f-a113-1d2e9e2cecb7_buggy.java b/tmp/ddd47bdd-479d-45b2-b774-7fc52a45342f_fixed.java
index 6cfa79b..e2f0c90 100644
--- a/tmp/6c2ec10e-c529-4d5f-a113-1d2e9e2cecb7_buggy.java
+++ b/tmp/ddd47bdd-479d-45b2-b774-7fc52a45342f_fixed.java
@@ -1,12 +1,22 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        try {
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MaxIterationsExceededException e) {
+            if (x < mean - 20 * standardDeviation) {
+                return 0.0;
+            } else if (x > mean + 20 * standardDeviation) {
+                return 1.0;
+            } else {
+                throw new MathException(e);
+            }
+        }
     }
\ No newline at end of file
