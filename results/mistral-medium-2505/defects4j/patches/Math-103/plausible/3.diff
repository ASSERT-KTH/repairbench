diff --git a/tmp/f86c1be3-f569-43c4-87e6-669ed9b7dc96_buggy.java b/tmp/cda8e805-6324-42fc-9591-a957d7f5601a_fixed.java
index 6cfa79b..1766b20 100644
--- a/tmp/f86c1be3-f569-43c4-87e6-669ed9b7dc96_buggy.java
+++ b/tmp/cda8e805-6324-42fc-9591-a957d7f5601a_fixed.java
@@ -1,12 +1,21 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        try {
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MathException ex) {
+            if (x - mean > 20 * standardDeviation) {
+                return 1.0;
+            } else if (x - mean < -20 * standardDeviation) {
+                return 0.0;
+            }
+            throw ex;
+        }
     }
\ No newline at end of file
