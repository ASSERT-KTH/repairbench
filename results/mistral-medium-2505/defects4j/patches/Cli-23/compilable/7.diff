diff --git a/tmp/e39d2107-5f96-40a7-9b6b-a28fa55eee96_buggy.java b/tmp/0685c429-430f-4ce1-bbc5-b071fb9f1be7_fixed.java
index 227a4ef..20da62b 100644
--- a/tmp/e39d2107-5f96-40a7-9b6b-a28fa55eee96_buggy.java
+++ b/tmp/0685c429-430f-4ce1-bbc5-b071fb9f1be7_fixed.java
@@ -1,48 +1,70 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             int lastPos = pos;
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
-            } else
-            if (pos == lastPos)
+            }
+
+            // Check if we're making progress (pos > lastPos)
+            if (pos <= lastPos)
+            {
+                // If not, try to find a better wrap position by looking for the last space before width
+                int forcedPos = width;
+                while (forcedPos > 0 && !Character.isWhitespace(text.charAt(forcedPos - 1)))
+                {
+                    forcedPos--;
+                }
+
+                if (forcedPos == 0)
                 {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+                    // No space found, force a break at width
+                    forcedPos = width;
+                }
+
+                sb.append(rtrim(text.substring(0, forcedPos))).append(defaultNewLine);
+                text = padding + text.substring(forcedPos).trim();
+                pos = findWrapPos(text, width, 0);
+
+                if (pos == -1)
+                {
+                    sb.append(text);
+                    return sb;
+                }
+                continue;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
