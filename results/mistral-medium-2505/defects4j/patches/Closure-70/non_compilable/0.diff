diff --git a/tmp/7ec2f140-1f5f-4162-8e6d-132c36e00dc5_buggy.java b/tmp/5b71ada8-0626-4132-99d8-4a9b8451a159_fixed.java
index 1530b34..46406b5 100644
--- a/tmp/7ec2f140-1f5f-4162-8e6d-132c36e00dc5_buggy.java
+++ b/tmp/5b71ada8-0626-4132-99d8-4a9b8451a159_fixed.java
@@ -1,23 +1,33 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
+            String paramName = astParameter.getString();
+            // Check if the parameter is already defined in the scope
+            if (functionNode.getScope().isDeclared(paramName, true)) {
+              // Report error about redeclaration
+              report(JSError.make(functionNode.getSourceFileName(),
+                  astParameter, TypeCheck.DUP_VAR_DECLARATION,
+                  paramName, "parameter"));
+            } else {
+              // Define the parameter slot
               if (jsDocParameter != null) {
                 defineSlot(astParameter, functionNode,
                     jsDocParameter.getJSType(), true);
                 jsDocParameter = jsDocParameter.getNext();
               } else {
                 defineSlot(astParameter, functionNode, null, true);
               }
             }
           }
         }
+      }
     } // end declareArguments
\ No newline at end of file
