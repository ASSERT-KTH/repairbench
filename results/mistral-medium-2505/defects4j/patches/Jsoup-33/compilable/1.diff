diff --git a/tmp/7804469d-1d8c-4e83-ae9a-d0cccdf9fda3_buggy.java b/tmp/ee7d95f6-34c6-4ff1-b8c8-04be2e63df22_fixed.java
index dc93be3..510277e 100644
--- a/tmp/7804469d-1d8c-4e83-ae9a-d0cccdf9fda3_buggy.java
+++ b/tmp/ee7d95f6-34c6-4ff1-b8c8-04be2e63df22_fixed.java
@@ -1,14 +1,16 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
+            if (!el.tag().isKnownTag()) {  // Only emit end tag for unknown self-closing tags
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            }
             return el;
         }
 
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
