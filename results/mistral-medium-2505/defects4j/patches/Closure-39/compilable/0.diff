diff --git a/tmp/5ede35fb-4014-4323-a3aa-5959d364723a_buggy.java b/tmp/d7989172-3a0a-4bdb-8a32-03b8a39412e4_fixed.java
index e4d90e7..4047672 100644
--- a/tmp/5ede35fb-4014-4323-a3aa-5959d364723a_buggy.java
+++ b/tmp/d7989172-3a0a-4bdb-8a32-03b8a39412e4_fixed.java
@@ -1,45 +1,48 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
   } else if (prettyPrint) {
     // Don't pretty print recursively.
     prettyPrint = false;
 
     // Use a tree set so that the properties are sorted.
     Set<String> propertyNames = Sets.newTreeSet();
     for (ObjectType current = this;
          current != null && !current.isNativeObjectType() &&
              propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
 
     StringBuilder sb = new StringBuilder();
     sb.append("{");
 
     int i = 0;
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
 
       sb.append(property);
       sb.append(": ");
-        sb.append(getPropertyType(property).toString());
+      // Use toStringHelper instead of toString to maintain consistency
+      sb.append(getPropertyType(property).toStringHelper(forAnnotations));
 
       ++i;
       if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+        if (!forAnnotations) {
           sb.append(", ...");
+        }
         break;
       }
     }
 
     sb.append("}");
 
     prettyPrint = true;
     return sb.toString();
   } else {
     return "{...}";
   }
 }
\ No newline at end of file
