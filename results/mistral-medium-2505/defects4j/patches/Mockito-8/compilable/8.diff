diff --git a/tmp/54da85da-bb78-4d54-bf5d-cee6f6ae4cce_buggy.java b/tmp/a50acac8-2349-4e46-96a1-6202dec5e875_fixed.java
index 42b58d0..739f227 100644
--- a/tmp/54da85da-bb78-4d54-bf5d-cee6f6ae4cce_buggy.java
+++ b/tmp/a50acac8-2349-4e46-96a1-6202dec5e875_fixed.java
@@ -1,19 +1,22 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Type rawType = parameterizedType.getRawType();
+        if (rawType instanceof Class && contextualActualTypeParameters.containsKey(rawType)) {
+            return; // Prevent infinite recursion for self-referential types
+        }
+        TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
