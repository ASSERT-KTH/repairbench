diff --git a/tmp/1949c77d-1288-4c79-8ba3-43b63dc9daeb_buggy.java b/tmp/1e3c23d9-daa9-4c29-8290-f965a172e006_fixed.java
index 42b58d0..ba493ac 100644
--- a/tmp/1949c77d-1288-4c79-8ba3-43b63dc9daeb_buggy.java
+++ b/tmp/1e3c23d9-daa9-4c29-8290-f965a172e006_fixed.java
@@ -1,19 +1,29 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Type rawType = parameterizedType.getRawType();
+        if (!(rawType instanceof Class)) {
+            return;
+        }
+
+        TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
+        // Check if we've already processed this type to avoid infinite recursion
+        if (contextualActualTypeParameters.containsKey(classType)) {
+            return;
+        }
+
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
