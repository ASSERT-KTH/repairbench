diff --git a/tmp/514fc954-3cba-4e5e-b4e6-4cc317a4fbf9_buggy.java b/tmp/51b8ed5d-294d-4d9a-ace9-98bb01d0692c_fixed.java
index be2af16..8876fe7 100644
--- a/tmp/514fc954-3cba-4e5e-b4e6-4cc317a4fbf9_buggy.java
+++ b/tmp/51b8ed5d-294d-4d9a-ace9-98bb01d0692c_fixed.java
@@ -1,29 +1,34 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
+    // First try Julian calendar for dates before cutover
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+    if (year < 1582 || (year == 1582 && monthOfYear < 10) || (year == 1582 && monthOfYear == 10 && dayOfMonth < 15)) {
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        if (instant < iCutoverMillis) {
+            return instant;
+        }
+    }
+
+    // Then try Gregorian calendar
+    instant = iGregorianChronology.getDateTimeMillis
+        (year, monthOfYear, dayOfMonth,
+         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        return instant;
+    }
+
+    // If we get here, it's in the illegal cutover gap
     throw new IllegalArgumentException("Specified date does not exist");
 }
\ No newline at end of file
-        }
-        return instant;
-    }
