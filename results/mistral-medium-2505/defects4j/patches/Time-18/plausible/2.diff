diff --git a/tmp/fa759609-7f92-4c21-9aa4-1a2545017370_buggy.java b/tmp/f0b26825-cc20-408e-99ae-1222499e3570_fixed.java
index be2af16..94edd7e 100644
--- a/tmp/fa759609-7f92-4c21-9aa4-1a2545017370_buggy.java
+++ b/tmp/f0b26825-cc20-408e-99ae-1222499e3570_fixed.java
@@ -1,29 +1,45 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        } catch (IllegalArgumentException e) {
+            // If Gregorian fails, try Julian
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            return instant;
+        }
+
+        if (instant < iCutoverMillis) {
+            // Maybe it's Julian.
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (julianInstant < iCutoverMillis) {
+                return julianInstant;
+            }
+            if (julianInstant >= iCutoverMillis) {
+                // Okay, it's in the illegal cutover gap.
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
         }
         return instant;
     }
\ No newline at end of file
