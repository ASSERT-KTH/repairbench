diff --git a/tmp/ef1d463b-63d0-472b-bd00-aaa05cec291e_buggy.java b/tmp/da4147bb-14d3-4fa6-b63b-505e86716b18_fixed.java
index 5f96616..1972ed1 100644
--- a/tmp/ef1d463b-63d0-472b-bd00-aaa05cec291e_buggy.java
+++ b/tmp/da4147bb-14d3-4fa6-b63b-505e86716b18_fixed.java
@@ -1,20 +1,27 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint.isUnionType()) {
+      // Handle union types by matching each alternative
+      for (JSType type : constraint.toUnionType().getAlternates()) {
+        if (type.isRecordType()) {
+          matchRecordTypeConstraint(type.toObjectType());
+        }
+      }
     }
   }
\ No newline at end of file
