diff --git a/tmp/b47b537d-d97d-4ba3-a331-1d83ce431439_buggy.java b/tmp/c648ecaa-a95f-49e9-b4c5-08198aca7e54_fixed.java
index f955f47..554e0a5 100644
--- a/tmp/b47b537d-d97d-4ba3-a331-1d83ce431439_buggy.java
+++ b/tmp/c648ecaa-a95f-49e9-b4c5-08198aca7e54_fixed.java
@@ -1,34 +1,38 @@
 public String getDescription() {
     if (_desc == null) {
         StringBuilder sb = new StringBuilder();
 
         if (_from == null) { // can this ever occur?
             sb.append("UNKNOWN");
         } else {
             Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
+            // Use getName() instead of getSimpleName() to properly handle inner classes
+            String className = cls.getName();
+            // For inner classes, we want to keep the full name including enclosing class
+            if (className.contains("$")) {
+                sb.append(className);
+            } else {
+                // For non-inner classes, use the original logic
                 String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
                 if (pkgName != null) {
                     sb.append(pkgName);
                     sb.append('.');
                 }
                 sb.append(cls.getSimpleName());
             }
+        }
         sb.append('[');
         if (_fieldName != null) {
             sb.append('"');
             sb.append(_fieldName);
             sb.append('"');
         } else if (_index >= 0) {
             sb.append(_index);
         } else {
             sb.append('?');
         }
         sb.append(']');
         _desc = sb.toString();
     }
     return _desc;
 }
\ No newline at end of file
