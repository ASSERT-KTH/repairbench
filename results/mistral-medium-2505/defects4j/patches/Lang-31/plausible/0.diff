diff --git a/tmp/a944d7fb-15b7-4722-b8f4-59aaaf534cef_buggy.java b/tmp/58d263c1-13d1-4d7e-9a31-7de9c16ce2d4_fixed.java
index eea9e73..da7a613 100644
--- a/tmp/a944d7fb-15b7-4722-b8f4-59aaaf534cef_buggy.java
+++ b/tmp/58d263c1-13d1-4d7e-9a31-7de9c16ce2d4_fixed.java
@@ -1,41 +1,19 @@
-    /**
-     * <p>Checks if the CharSequence contains any character in the given
-     * set of characters.</p>
-     *
-     * <p>A <code>null</code> CharSequence will return <code>false</code>.
-     * A <code>null</code> or zero length search array will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.containsAny(null, *)                = false
-     * StringUtils.containsAny("", *)                  = false
-     * StringUtils.containsAny(*, null)                = false
-     * StringUtils.containsAny(*, [])                  = false
-     * StringUtils.containsAny("zzabyycdxx",['z','a']) = true
-     * StringUtils.containsAny("zzabyycdxx",['b','y']) = true
-     * StringUtils.containsAny("aba", ['z'])           = false
-     * </pre>
-     *
-     * @param cs  the CharSequence to check, may be null
-     * @param searchChars  the chars to search for, may be null
-     * @return the <code>true</code> if any of the chars are found,
-     * <code>false</code> if no match or null input
-     * @since 2.4
-     */
     public static boolean containsAny(CharSequence cs, char[] searchChars) {
         if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
             return false;
         }
         int csLength = cs.length();
         int searchLength = searchChars.length;
-		for (int i = 0; i < csLength; i++) {
-			char ch = cs.charAt(i);
-			for (int j = 0; j < searchLength; j++) {
-				if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+        for (int i = 0; i < csLength; ) {
+            final int codePoint = Character.codePointAt(cs, i);
+            for (int j = 0; j < searchLength; ) {
+                final int searchCodePoint = Character.codePointAt(searchChars, j);
+                if (codePoint == searchCodePoint) {
                     return true;
                 }
+                j += Character.charCount(searchCodePoint);
             }
+            i += Character.charCount(codePoint);
         }
         return false;
     }
\ No newline at end of file
