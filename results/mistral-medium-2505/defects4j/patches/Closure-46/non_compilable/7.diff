diff --git a/tmp/80f6ec88-6c9f-48c7-a14d-2b9d791dfc70_buggy.java b/tmp/7acd98c1-3f67-40ac-9793-b4427ac467ca_fixed.java
index 46817a7..84c22ba 100644
--- a/tmp/80f6ec88-6c9f-48c7-a14d-2b9d791dfc70_buggy.java
+++ b/tmp/7acd98c1-3f67-40ac-9793-b4427ac467ca_fixed.java
@@ -1,16 +1,25 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+
+  // If either type is empty, return the other type
+  if (properties.isEmpty()) {
+    return that;
   }
+  if (that.toMaybeRecordType().getProperties().isEmpty()) {
+    return this;
   }
-    return builder.build();
+
+  // Check if one type is a subtype of the other
+  if (isSubtype(that)) {
+    return that;
+  }
+  if (that.isSubtype(this)) {
+    return this;
+  }
+
+  // Otherwise, create a union type
+  return registry.createUnionType(this, that);
 }
\ No newline at end of file
