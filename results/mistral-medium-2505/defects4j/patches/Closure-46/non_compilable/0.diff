diff --git a/tmp/aa10266e-bcaf-487b-8afa-a62c054816ec_buggy.java b/tmp/ad0ac6c3-e167-41ae-9f05-de6f78395c02_fixed.java
index 46817a7..449b7f1 100644
--- a/tmp/aa10266e-bcaf-487b-8afa-a62c054816ec_buggy.java
+++ b/tmp/ad0ac6c3-e167-41ae-9f05-de6f78395c02_fixed.java
@@ -1,16 +1,28 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+
+    RecordType thatRecord = that.toMaybeRecordType();
+    RecordTypeBuilder commonPropertiesBuilder = new RecordTypeBuilder(registry);
+
+    // Find common properties with equivalent types
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+        if (thatRecord.hasProperty(property) &&
+            thatRecord.getPropertyType(property).isEquivalentTo(
                 getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+            commonPropertiesBuilder.addProperty(property, getPropertyType(property),
                 getPropertyNode(property));
         }
     }
-    return builder.build();
+
+    // If all properties match, return the common type
+    if (commonPropertiesBuilder.getPropertyCount() == properties.size() &&
+        commonPropertiesBuilder.getPropertyCount() == thatRecord.getPropertyCount()) {
+        return commonPropertiesBuilder.build();
+    }
+
+    // Otherwise return the union of both types
+    return registry.createUnionType(this, that);
 }
\ No newline at end of file
