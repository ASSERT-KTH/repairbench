diff --git a/tmp/ef8904f8-ef87-4bbb-81a3-bb96ea6dd085_buggy.java b/tmp/ca9dcf48-5be4-4ad3-9591-83116b5c28c3_fixed.java
index e69de29..d3667f0 100644
--- a/tmp/ef8904f8-ef87-4bbb-81a3-bb96ea6dd085_buggy.java
+++ b/tmp/ca9dcf48-5be4-4ad3-9591-83116b5c28c3_fixed.java
@@ -0,0 +1,36 @@
+@Override
+public SortedMap<K, V> prefixMap(final K key) {
+    if (key == null) {
+        return new UnmodifiableSortedMap<>(this);
+    }
+
+    final PatriciaTrie<K, V> prefixMap = new PatriciaTrie<>(this);
+    prefixMap.root = getKeyNode(key);
+    if (prefixMap.root == null) {
+        prefixMap.root = new PatriciaTrieNode<>(null, null, 0);
+    }
+
+    return new PrefixRangeMap(prefixMap, key);
+}
+
+private static class PrefixRangeMap<K, V> extends AbstractSortedMap<K, V> {
+    private final PatriciaTrie<K, V> trie;
+    private final K prefix;
+
+    PrefixRangeMap(PatriciaTrie<K, V> trie, K prefix) {
+        this.trie = trie;
+        this.prefix = prefix;
+    }
+
+    @Override
+    public void clear() {
+        // Get all keys that start with the prefix
+        Set<K> keysToRemove = new HashSet<>(keySet());
+        // Remove them from the underlying trie
+        for (K key : keysToRemove) {
+            trie.remove(key);
+        }
+    }
+
+    // ... rest of the PrefixRangeMap implementation ...
+}
\ No newline at end of file
