diff --git a/tmp/4cae0650-1506-423a-9d03-9fc68e8514c0_buggy.java b/tmp/78a9df0b-0a95-4334-a84e-245fd36cc12c_fixed.java
index a7e6997..cf02433 100644
--- a/tmp/4cae0650-1506-423a-9d03-9fc68e8514c0_buggy.java
+++ b/tmp/78a9df0b-0a95-4334-a84e-245fd36cc12c_fixed.java
@@ -1,12 +1,34 @@
     /**
      * Tells if the token looks like a short option.
      *
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        if (!token.startsWith("-") || token.length() < 2) {
+            return false;
+        }
+
+        // Check if the first character after '-' is a valid short option
+        String firstChar = token.substring(1, 2);
+        if (!options.hasShortOption(firstChar)) {
+            return false;
+        }
 
-        // remove leading "-" and "=value"
+        // If there's more content after the first option, check if it's another option or a value
+        if (token.length() > 2) {
+            // If the next character is '=', it's an option with value
+            if (token.charAt(2) == '=') {
+                return true;
+            }
+            // Otherwise, check if the remaining characters are all valid options
+            for (int i = 2; i < token.length(); i++) {
+                String currentChar = token.substring(i, i + 1);
+                if (!options.hasShortOption(currentChar)) {
+                    return false;
+                }
+            }
+        }
+        return true;
     }
\ No newline at end of file
