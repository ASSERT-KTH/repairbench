diff --git a/tmp/795ab711-742b-4109-88b7-8498aedfe373_buggy.java b/tmp/eb0b174c-824d-4f2b-b615-6506866d3793_fixed.java
index 03b03d7..2bc6863 100644
--- a/tmp/795ab711-742b-4109-88b7-8498aedfe373_buggy.java
+++ b/tmp/eb0b174c-824d-4f2b-b615-6506866d3793_fixed.java
@@ -1,25 +1,28 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      *
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
         // a bit messy, but will work in all non-pathological cases
 
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
 
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        long adjustedInstant = convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // If the adjusted instant is the same as the original, try the other way
+        if (adjustedInstant == instant) {
+            adjustedInstant = convertLocalToUTC(local, false, earlierOrLater ? instantBefore : instantAfter);
+        }
+
+        return adjustedInstant;
     }
\ No newline at end of file
