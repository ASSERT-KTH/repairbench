diff --git a/tmp/ab5c8deb-0dc6-4133-b4ee-565d7a9e4eb5_buggy.java b/tmp/805f299b-bcee-4251-8f12-b670da5bbede_fixed.java
index 10616db..aa6581d 100644
--- a/tmp/ab5c8deb-0dc6-4133-b4ee-565d7a9e4eb5_buggy.java
+++ b/tmp/805f299b-bcee-4251-8f12-b670da5bbede_fixed.java
@@ -1,19 +1,35 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] result = iChronology.get(partial, instant);
+
+            // Handle leap day adjustment
+            if (partial instanceof MonthDay) {
+                int month = result[0];
+                int day = result[1];
+                if (month == 2 && day == 29) {
+                    // Check if the resulting date is valid
+                    try {
+                        iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth()).set(instant, day);
+                    } catch (IllegalFieldValueException e) {
+                        // If not valid, adjust to last day of month
+                        result[1] = iChronology.getDateTimeField(DateTimeFieldType.dayOfMonth()).getMaximumValue(instant);
+                    }
+                }
+            }
+            return result;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
