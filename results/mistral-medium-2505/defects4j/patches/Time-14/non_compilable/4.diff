diff --git a/tmp/8c9a8bbf-75aa-49e2-a8ca-52ee081c2129_buggy.java b/tmp/c8d5b67b-15ba-471a-9e65-2783c0eae0a2_fixed.java
index 10616db..34e7614 100644
--- a/tmp/8c9a8bbf-75aa-49e2-a8ca-52ee081c2129_buggy.java
+++ b/tmp/c8d5b67b-15ba-471a-9e65-2783c0eae0a2_fixed.java
@@ -1,19 +1,24 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] result = iChronology.get(partial, instant);
+            // Handle leap day cases
+            if (result[1] == 29 && result[0] == 2 && !iChronology.isLeapYear(instant)) {
+                result[1] = 28;  // Adjust to last day of February for non-leap years
+            }
+            return result;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
