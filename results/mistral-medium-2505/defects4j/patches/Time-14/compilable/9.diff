diff --git a/tmp/d7e5a505-7eca-430f-9c7b-2a431c235063_buggy.java b/tmp/a4d1b515-11e7-4ae6-b821-ac695723a932_fixed.java
index 10616db..4f96222 100644
--- a/tmp/d7e5a505-7eca-430f-9c7b-2a431c235063_buggy.java
+++ b/tmp/a4d1b515-11e7-4ae6-b821-ac695723a932_fixed.java
@@ -1,19 +1,31 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] newValues = iChronology.get(partial, instant);
+
+            // Handle the case where the day of month is invalid for the new month
+            if (partial.getFieldType(0).equals(DateTimeFieldType.dayOfMonth())) {
+                int month = newValues[0];
+                int day = newValues[1];
+                int maxDay = iChronology.getDaysInMonthMax(month);
+                if (day > maxDay) {
+                    newValues[1] = maxDay;
+                }
+            }
+
+            return newValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
