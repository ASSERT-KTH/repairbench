diff --git a/tmp/e4bf8541-cb9f-4119-9be3-878b7171aab3_buggy.java b/tmp/1bfeb5e1-d460-48d4-9769-48a8093d2384_fixed.java
index a7d0787..8ce400a 100644
--- a/tmp/e4bf8541-cb9f-4119-9be3-878b7171aab3_buggy.java
+++ b/tmp/1bfeb5e1-d460-48d4-9769-48a8093d2384_fixed.java
@@ -1,54 +1,58 @@
     /**
      * Returns the <code>Object</code> of type <code>clazz</code>
      * with the value of <code>str</code>.
      *
      * @param str the command line value
      * @param clazz the type of argument
      * @return The instance of <code>clazz</code> initialised with
      * the value of <code>str</code>.
      * @throws ParseException if the value creation for the given class failed
      */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
+        try {
             if (PatternOptionBuilder.STRING_VALUE == clazz)
             {
                 return (T) str;
             }
             else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
             {
                 return (T) createObject(str);
             }
             else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
             {
                 return (T) createNumber(str);
             }
             else if (PatternOptionBuilder.DATE_VALUE == clazz)
             {
                 return (T) createDate(str);
             }
             else if (PatternOptionBuilder.CLASS_VALUE == clazz)
             {
                 return (T) createClass(str);
             }
             else if (PatternOptionBuilder.FILE_VALUE == clazz)
             {
                 return (T) createFile(str);
             }
             else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
             {
                 return (T) openFile(str);
             }
             else if (PatternOptionBuilder.FILES_VALUE == clazz)
             {
                 return (T) createFiles(str);
             }
             else if (PatternOptionBuilder.URL_VALUE == clazz)
             {
                 return (T) createURL(str);
             }
             else
             {
-            return null;
+                throw new ParseException("Unable to create value of type " + clazz.getName() + " from string " + str);
+            }
+        } catch (Exception e) {
+            throw new ParseException("Unable to create value of type " + clazz.getName() + " from string " + str);
         }
     }
\ No newline at end of file
