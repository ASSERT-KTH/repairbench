diff --git a/tmp/aff926b0-3097-4530-ad7a-6f70d1a239da_buggy.java b/tmp/2f4637a4-f0a6-44d6-a361-15667d5f208b_fixed.java
index 21f64c6..560d23a 100644
--- a/tmp/aff926b0-3097-4530-ad7a-6f70d1a239da_buggy.java
+++ b/tmp/2f4637a4-f0a6-44d6-a361-15667d5f208b_fixed.java
@@ -1,23 +1,19 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
     // doesn't handle scanning for surrogates
+    if (seq.length() == 0) return 0; // handle empty sequence case
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
-            if (startChar != input[offset])
+        if (startChar != input[offset]) {
             while (++offset < length && startChar != input[offset]);
+            if (offset >= length) break; // reached end without finding startChar
+        }
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
+        if (last > length) continue; // not enough characters left for full match
         for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
         if (i == last) // found full sequence
             return offset - pos;
     }
-        }
     return -1;
 }
\ No newline at end of file
