diff --git a/tmp/b310b8c6-c3dd-48d7-93be-16021466f0dd_buggy.java b/tmp/5f661896-d5dc-4650-9269-9ecea791b349_fixed.java
index 21f64c6..45a5edb 100644
--- a/tmp/b310b8c6-c3dd-48d7-93be-16021466f0dd_buggy.java
+++ b/tmp/5f661896-d5dc-4650-9269-9ecea791b349_fixed.java
@@ -1,23 +1,27 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
+        if (seq.length() == 0) return 0; // handle empty sequence case
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
-            if (startChar != input[offset])
+            if (startChar != input[offset]) {
                 while (++offset < length && startChar != input[offset]);
+                if (offset >= length) break; // prevent out of bounds
+            }
             int i = offset + 1;
             int last = i + seq.length() - 1;
+            if (last > length) continue; // prevent out of bounds
             if (offset < length) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
