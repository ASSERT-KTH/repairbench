diff --git a/tmp/470ebf17-846c-45b4-af69-a2743eefffc8_buggy.java b/tmp/d9c376f0-ba38-4382-87fa-869eafeee7fe_fixed.java
index 21f64c6..4048e69 100644
--- a/tmp/470ebf17-846c-45b4-af69-a2743eefffc8_buggy.java
+++ b/tmp/d9c376f0-ba38-4382-87fa-869eafeee7fe_fixed.java
@@ -1,23 +1,18 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
+        if (seq.length() == 0) return 0; // handle empty sequence case
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
+            if (offset >= length) break; // prevent array out of bounds
             int i = offset + 1;
             int last = i + seq.length()-1;
-            if (offset < length) {
+            if (last > length) continue; // prevent array out of bounds
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
             if (i == last) // found full sequence
                 return offset - pos;
         }
-        }
         return -1;
     }
\ No newline at end of file
