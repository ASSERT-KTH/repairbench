diff --git a/tmp/81d9ec49-03c6-4ae1-aaf5-371f201f9e14_buggy.java b/tmp/113227d8-1870-4b8d-8e45-339919f1b4e0_fixed.java
index e69de29..5264708 100644
--- a/tmp/81d9ec49-03c6-4ae1-aaf5-371f201f9e14_buggy.java
+++ b/tmp/113227d8-1870-4b8d-8e45-339919f1b4e0_fixed.java
@@ -0,0 +1,31 @@
+private void _testFieldNameQuotingEnabled(JsonFactory f, boolean enableQuoting, boolean expectedQuoted,
+        String expected) throws IOException
+{
+    StringWriter sw = new StringWriter();
+    JsonGenerator jg = f.createGenerator(sw);
+
+    if (enableQuoting) {
+        jg.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    } else {
+        jg.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    }
+
+    jg.writeStartObject();
+    jg.writeNumberField("foo", 1);
+    jg.writeEndObject();
+    jg.close();
+
+    String result = sw.toString();
+    if (expectedQuoted) {
+        assertEquals(expected, result);
+    } else {
+        // If not expected to be quoted, we might need to handle both cases
+        // depending on the factory's default settings
+        if (expected.equals(result)) {
+            // This is fine
+        } else {
+            // Alternative check for unquoted case
+            assertEquals(expected, result);
+        }
+    }
+}
\ No newline at end of file
