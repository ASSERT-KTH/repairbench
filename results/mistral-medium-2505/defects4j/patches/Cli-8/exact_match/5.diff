diff --git a/tmp/780bc0db-5de3-4e76-8fce-4f960fc6f83c_buggy.java b/tmp/9007497b-90bc-40bd-b63a-cd8b947e0210_fixed.java
index 8e93a5e..c366d42 100644
--- a/tmp/780bc0db-5de3-4e76-8fce-4f960fc6f83c_buggy.java
+++ b/tmp/9007497b-90bc-40bd-b63a-cd8b947e0210_fixed.java
@@ -1,43 +1,30 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            pos = findWrapPos(text, width, 0);  // Fixed: changed nextLineTabStop to 0
 
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
