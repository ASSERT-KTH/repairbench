diff --git a/tmp/2820aaef-076d-4906-84b0-835398994863_buggy.java b/tmp/0e2a42b6-0f04-4d4c-acec-cdc7ceb0bdb6_fixed.java
index 220820e..0153f6f 100644
--- a/tmp/2820aaef-076d-4906-84b0-835398994863_buggy.java
+++ b/tmp/0e2a42b6-0f04-4d4c-acec-cdc7ceb0bdb6_fixed.java
@@ -1,22 +1,22 @@
     /**
      * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
      * @param tableau simple tableau for the problem
      * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
         double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {  // Changed >= to >
                 final double ratio = rhs / entry;
-                if (ratio < minRatio) {
+                if (MathUtils.compareTo(ratio, minRatio, epsilon) < 0) {  // Changed < to compareTo
                     minRatio = ratio;
                     minRatioPos = i;
                 }
             }
         }
         return minRatioPos;
     }
\ No newline at end of file
