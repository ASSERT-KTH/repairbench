diff --git a/tmp/39dc37c3-6672-4fcd-8444-ac5c3196b19b_buggy.java b/tmp/63646744-28f5-4aea-ab8c-f3ad624ff608_fixed.java
index 939f49b..5c74501 100644
--- a/tmp/39dc37c3-6672-4fcd-8444-ac5c3196b19b_buggy.java
+++ b/tmp/63646744-28f5-4aea-ab8c-f3ad624ff608_fixed.java
@@ -1,21 +1,28 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+          && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
+          Node child = n.getFirstChild();
+          while (child != null) {
+            if (child.getType() == Token.STRING &&
+                child.getString().equals("prototype")) {
+              return true;
+            }
+            child = child.getFirstChild();
+          }
+        } else {
+          // Check for direct prototype property assignment
+          Node child = n.getLastChild();
           if (child.getType() == Token.STRING &&
               child.getString().equals("prototype")) {
             return true;
           }
         }
       }
-
       return false;
     }
\ No newline at end of file
