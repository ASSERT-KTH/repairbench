diff --git a/tmp/f356f5c9-4b63-4d05-ba14-741679ff584b_buggy.java b/tmp/a8e61caa-594e-4691-89fc-377e8166ea53_fixed.java
index 4e8b037..3c983a5 100644
--- a/tmp/f356f5c9-4b63-4d05-ba14-741679ff584b_buggy.java
+++ b/tmp/a8e61caa-594e-4691-89fc-377e8166ea53_fixed.java
@@ -1,20 +1,31 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+        // augment the list with the default values if we have fewer values than expected
+        if (valueList != null && !valueList.isEmpty()) {
+            List optionDefaults = (List) this.defaultValues.get(option);
+            if (optionDefaults != null && !optionDefaults.isEmpty()) {
+                // Create a new list to avoid modifying the original
+                List combinedList = new ArrayList(valueList);
+                // Add remaining default values if we have fewer values than the maximum
+                int maxArgs = option.getArgument().getMaximum();
+                if (maxArgs > valueList.size()) {
+                    for (int i = valueList.size(); i < maxArgs; i++) {
+                        if (i < optionDefaults.size()) {
+                            combinedList.add(optionDefaults.get(i));
+                        }
+                    }
+                }
+                valueList = combinedList;
+            }
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
\ No newline at end of file
