diff --git a/tmp/1b006a4b-7b6f-4ac8-8034-aea523dd11ee_buggy.java b/tmp/206358c6-b31d-47c5-8509-8bd79c30a0d8_fixed.java
index 4e8b037..33955f5 100644
--- a/tmp/1b006a4b-7b6f-4ac8-8034-aea523dd11ee_buggy.java
+++ b/tmp/206358c6-b31d-47c5-8509-8bd79c30a0d8_fixed.java
@@ -1,20 +1,31 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
 
         // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+        if (valueList != null && !valueList.isEmpty()) {
+            List optionDefaults = (List) this.defaultValues.get(option);
+            if (optionDefaults != null && !optionDefaults.isEmpty()) {
+                // Only add default values if we have fewer than maximum arguments
+                Argument argument = option.getArgument();
+                if (argument != null && argument.getMaximum() > valueList.size()) {
+                    // Create a new list to avoid modifying the original
+                    List newList = new ArrayList(valueList);
+                    // Add only the needed default values
+                    int defaultsToAdd = argument.getMaximum() - valueList.size();
+                    for (int i = 0; i < defaultsToAdd && i < optionDefaults.size(); i++) {
+                        newList.add(optionDefaults.get(i));
+                    }
+                    valueList = newList;
+                }
+            }
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
\ No newline at end of file
