diff --git a/tmp/c0bb728e-951b-45e0-acb6-9a73ce108ca2_buggy.java b/tmp/250376f1-e36a-4c7a-a1e2-cb97dc579f79_fixed.java
index 4e8b037..5810a6b 100644
--- a/tmp/c0bb728e-951b-45e0-acb6-9a73ce108ca2_buggy.java
+++ b/tmp/250376f1-e36a-4c7a-a1e2-cb97dc579f79_fixed.java
@@ -1,20 +1,32 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
 
         // augment the list with the default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = (List) this.defaultValues.get(option);
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+
+        // if there are more default values as specified, add them to the list
+        if (valueList != null && !valueList.isEmpty() && defaultValues != null) {
+            // Only add default values if we haven't reached the maximum number of arguments
+            Argument argument = option.getArgument();
+            if (argument != null && argument.getMaximum() > valueList.size()) {
+                // Create a new list to avoid modifying the original
+                valueList = new ArrayList(valueList);
+                // Add remaining default values up to the maximum
+                int remaining = argument.getMaximum() - valueList.size();
+                for (int i = 0; i < remaining && i < defaultValues.size(); i++) {
+                    valueList.add(defaultValues.get(i));
+                }
+            }
+        }
 
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
\ No newline at end of file
