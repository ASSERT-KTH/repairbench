diff --git a/tmp/a80fac7c-1a88-42e1-a43a-42104903bb5a_buggy.java b/tmp/b221a391-16fb-4475-9c48-82eb047f2f56_fixed.java
index 4e8b037..2ecfa05 100644
--- a/tmp/a80fac7c-1a88-42e1-a43a-42104903bb5a_buggy.java
+++ b/tmp/b221a391-16fb-4475-9c48-82eb047f2f56_fixed.java
@@ -1,20 +1,28 @@
 public List getValues(final Option option,
                       List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
     // grab the correct default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
     // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
+    if (valueList != null && !valueList.isEmpty()) {
+        List optionDefaults = (List) this.defaultValues.get(option);
+        if (optionDefaults != null && !optionDefaults.isEmpty()) {
+            // Create a new list to avoid modifying the original
+            valueList = new ArrayList(valueList);
+            // Add only the remaining default values needed
+            int remainingDefaults = optionDefaults.size() - valueList.size();
+            if (remainingDefaults > 0) {
+                valueList.addAll(optionDefaults.subList(valueList.size(), valueList.size() + remainingDefaults));
+            }
+        }
+    } else {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
     return valueList == null ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
