diff --git a/tmp/77d6a050-efeb-40e4-a79f-bb50b341eff9_buggy.java b/tmp/b6bc5f43-3eb2-4110-ab8c-5d5b45478ab0_fixed.java
index 4e8b037..03c979d 100644
--- a/tmp/77d6a050-efeb-40e4-a79f-bb50b341eff9_buggy.java
+++ b/tmp/b6bc5f43-3eb2-4110-ab8c-5d5b45478ab0_fixed.java
@@ -1,20 +1,35 @@
     public List getValues(final Option option,
                           List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
         // grab the correct default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = defaultValues;
         }
 
         // augment the list with the default values
         if ((valueList == null) || valueList.isEmpty()) {
             valueList = (List) this.defaultValues.get(option);
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
+
+        // if there are more default values as specified, add them to the list
+        if (valueList != null && !valueList.isEmpty()) {
+            List defaults = (List) this.defaultValues.get(option);
+            if (defaults != null && !defaults.isEmpty()) {
+                // Only add defaults that weren't already provided
+                int providedCount = valueList.size();
+                int defaultCount = defaults.size();
+                if (providedCount < defaultCount) {
+                    // Copy the list first to avoid modifying the original
+                    valueList = new ArrayList(valueList);
+                    // Add remaining defaults
+                    for (int i = providedCount; i < defaultCount; i++) {
+                        valueList.add(defaults.get(i));
+                    }
+                }
+            }
+        }
 
         return valueList == null ? Collections.EMPTY_LIST : valueList;
     }
\ No newline at end of file
