diff --git a/tmp/1065d04a-673b-43b0-951d-a6c32a5f8dd5_buggy.java b/tmp/7a835648-efb6-4cfa-88a0-84482eeb96fe_fixed.java
index 111ba5e..dcb70c4 100644
--- a/tmp/1065d04a-673b-43b0-951d-a6c32a5f8dd5_buggy.java
+++ b/tmp/7a835648-efb6-4cfa-88a0-84482eeb96fe_fixed.java
@@ -1,9 +1,34 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
         } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+            if (!isArray(o2)) {
+                return false;
+            }
+            if (o1.getClass() != o2.getClass()) {
+                return false;
+            }
+            if (o1 instanceof Object[] && o2 instanceof Object[]) {
+                return Arrays.equals((Object[]) o1, (Object[]) o2);
+            } else if (o1 instanceof boolean[] && o2 instanceof boolean[]) {
+                return Arrays.equals((boolean[]) o1, (boolean[]) o2);
+            } else if (o1 instanceof char[] && o2 instanceof char[]) {
+                return Arrays.equals((char[]) o1, (char[]) o2);
+            } else if (o1 instanceof byte[] && o2 instanceof byte[]) {
+                return Arrays.equals((byte[]) o1, (byte[]) o2);
+            } else if (o1 instanceof short[] && o2 instanceof short[]) {
+                return Arrays.equals((short[]) o1, (short[]) o2);
+            } else if (o1 instanceof int[] && o2 instanceof int[]) {
+                return Arrays.equals((int[]) o1, (int[]) o2);
+            } else if (o1 instanceof long[] && o2 instanceof long[]) {
+                return Arrays.equals((long[]) o1, (long[]) o2);
+            } else if (o1 instanceof float[] && o2 instanceof float[]) {
+                return Arrays.equals((float[]) o1, (float[]) o2);
+            } else if (o1 instanceof double[] && o2 instanceof double[]) {
+                return Arrays.equals((double[]) o1, (double[]) o2);
+            }
+            return false;
         } else {
             return o1.equals(o2);
         }
     }
\ No newline at end of file
