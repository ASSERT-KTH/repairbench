diff --git a/tmp/93c3f729-5289-4f6b-b3b1-bac7a17828f5_buggy.java b/tmp/50ca30c7-eede-46d6-973a-591801f7d3aa_fixed.java
index 4b7f469..36fca1b 100644
--- a/tmp/93c3f729-5289-4f6b-b3b1-bac7a17828f5_buggy.java
+++ b/tmp/50ca30c7-eede-46d6-973a-591801f7d3aa_fixed.java
@@ -1,10 +1,47 @@
 static boolean isSimpleNumber(String s) {
+    if (s.isEmpty()) {
+        return false;
+    }
+
     int len = s.length();
-    for (int index = 0; index < len; index++) {
+    int start = 0;
+
+    // Check for leading sign
+    if (s.charAt(0) == '+' || s.charAt(0) == '-') {
+        if (len == 1) {
+            return false;
+        }
+        start = 1;
+    }
+
+    boolean hasDigits = false;
+    boolean hasDecimal = false;
+    boolean hasExponent = false;
+
+    for (int index = start; index < len; index++) {
         char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+
+        if (c >= '0' && c <= '9') {
+            hasDigits = true;
+        } else if (c == '.') {
+            if (hasDecimal || hasExponent) {
+                return false;
+            }
+            hasDecimal = true;
+        } else if (c == 'e' || c == 'E') {
+            if (hasExponent || !hasDigits) {
+                return false;
+            }
+            hasExponent = true;
+            hasDigits = false; // Need digits after exponent
+        } else if (c == '+' || c == '-') {
+            if (index != start + 1 || s.charAt(index - 1) != 'e' && s.charAt(index - 1) != 'E') {
+                return false;
+            }
+        } else {
             return false;
         }
     }
-    return len > 0;
+
+    return hasDigits;
 }
\ No newline at end of file
