diff --git a/tmp/f28bda80-126f-4b41-8980-db1696829790_buggy.java b/tmp/42570fff-e7e2-4412-a360-21a0d9a5fdd7_fixed.java
index 19fd63e..d1e6680 100644
--- a/tmp/f28bda80-126f-4b41-8980-db1696829790_buggy.java
+++ b/tmp/42570fff-e7e2-4412-a360-21a0d9a5fdd7_fixed.java
@@ -1,24 +1,31 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
+        if (maybeExpr.isCall() &&
+            maybeExpr.getFirstChild().getType() == Token.GETPROP) {
+          String propName = maybeExpr.getFirstChild().getLastChild().getString();
+          if (propName != null && propName.startsWith("on")) {
+            return false;
+          }
+        }
 
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
\ No newline at end of file
