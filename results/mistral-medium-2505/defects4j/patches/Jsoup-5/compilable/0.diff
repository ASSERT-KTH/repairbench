diff --git a/tmp/ce6c8c9c-ad16-4575-815f-f1d1273ce4a5_buggy.java b/tmp/a4860b6f-5131-423b-84b1-0f02ce7ba4ca_fixed.java
index 39dd8e7..73302b0 100644
--- a/tmp/ce6c8c9c-ad16-4575-815f-f1d1273ce4a5_buggy.java
+++ b/tmp/a4860b6f-5131-423b-84b1-0f02ce7ba4ca_fixed.java
@@ -1,30 +1,37 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
+        } else {
+            // if no '=' after attribute key, we need to consume the key and return null
+            if (key.length() != 0) {
+                return Attribute.createFromEncoded(key, "");
+            } else {
+                tq.consume();
+                return null;
+            }
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
-                
             return null;
         }
     }
\ No newline at end of file
