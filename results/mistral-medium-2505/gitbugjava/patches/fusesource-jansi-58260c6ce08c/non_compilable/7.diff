diff --git a/tmp/1951803a-5bad-4dff-9399-d2b850afa12f_buggy.java b/tmp/4ec5bd3f-5dc4-40da-b24c-2f9d90a64260_fixed.java
index 712f277..5166e68 100644
--- a/tmp/1951803a-5bad-4dff-9399-d2b850afa12f_buggy.java
+++ b/tmp/4ec5bd3f-5dc4-40da-b24c-2f9d90a64260_fixed.java
@@ -1,48 +1,43 @@
-    /**
-     * Renders the given input to the target Appendable.
-     *
-     * @param input
-     *            source to render
-     * @param target
-     *            render onto this target Appendable.
-     * @return the given Appendable
-     * @throws IOException
-     *             If an I/O error occurs
-     */
     public static Appendable render(final String input, Appendable target) throws IOException {
-
         int i = 0;
         int j, k;
 
         while (true) {
             j = input.indexOf(BEGIN_TOKEN, i);
             if (j == -1) {
                 if (i == 0) {
                     target.append(input);
                     return target;
                 }
                 target.append(input.substring(i));
                 return target;
             }
+
+            // Check if end token appears before begin token
+            int endBeforeStart = input.indexOf(END_TOKEN, i);
+            if (endBeforeStart != -1 && endBeforeStart < j) {
+                throw new IllegalArgumentException("Invalid format: end token before begin token");
+            }
+
             target.append(input.substring(i, j));
             k = input.indexOf(END_TOKEN, j);
 
             if (k == -1) {
                 target.append(input);
                 return target;
             }
             j += BEGIN_TOKEN_LEN;
             String spec = input.substring(j, k);
 
             String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
             if (items.length == 1) {
                 target.append(input);
                 return target;
             }
             String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
 
             target.append(replacement);
 
             i = k + END_TOKEN_LEN;
         }
     }
\ No newline at end of file
