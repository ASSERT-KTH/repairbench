diff --git a/tmp/b6ccb7d3-e57e-4e60-a8bd-4ce7468b73fa_buggy.java b/tmp/99fd46f7-1aea-4644-a7e2-89c60560a2cd_fixed.java
index d87dd79..5ee5df7 100644
--- a/tmp/b6ccb7d3-e57e-4e60-a8bd-4ce7468b73fa_buggy.java
+++ b/tmp/99fd46f7-1aea-4644-a7e2-89c60560a2cd_fixed.java
@@ -1,47 +1,55 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
         ByteBuf frame = Unpooled.buffer();
+        int originalReaderIndex = buf.readerIndex();
+        try {
             while (buf.readerIndex() < endIndex) {
                 byte b1 = buf.readByte();
                 if (b1 == '}') {
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
                 } else {
                     frame.writeByte(b1);
                 }
             }
             return frame;
+        } finally {
+            // Reset reader index if we didn't consume the entire buffer
+            if (buf.readerIndex() != endIndex) {
+                buf.readerIndex(originalReaderIndex);
+            }
+        }
     }
 
     return null;
 }
\ No newline at end of file
