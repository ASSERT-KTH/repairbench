diff --git a/tmp/225515b1-3b06-4c46-b929-de1a6f469a7e_buggy.java b/tmp/df71076d-d67d-40c6-8420-e633f98f5eb0_fixed.java
index c84c989..26d3be6 100644
--- a/tmp/225515b1-3b06-4c46-b929-de1a6f469a7e_buggy.java
+++ b/tmp/df71076d-d67d-40c6-8420-e633f98f5eb0_fixed.java
@@ -1,27 +1,42 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
         buf.readUnsignedShortLE(); // length
 
         buf.skipBytes(3); // identification header
         buf.readUnsignedIntLE(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+        // Parse date and time (4 bytes)
+        int dateTime = buf.readUnsignedIntLE();
+        if (dateTime != 0) {
+            // Extract date components (format might vary, adjust as needed)
+            int day = (dateTime >> 26) & 0x1F;
+            int month = (dateTime >> 22) & 0x0F;
+            int year = 2000 + ((dateTime >> 16) & 0x3F);
+            int hour = (dateTime >> 11) & 0x1F;
+            int minute = (dateTime >> 5) & 0x3F;
+            int second = (dateTime << 1) & 0x3E;
+
+            Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+            calendar.set(year, month - 1, day, hour, minute, second);
+            position.setTime(calendar.getTime());
+        }
 
         buf.skipBytes(23); // coordinates block
 
         buf.skipBytes(3); // data tag header
         decodeMinimalDataSet(position, buf);
 
         return position;
     }
\ No newline at end of file
