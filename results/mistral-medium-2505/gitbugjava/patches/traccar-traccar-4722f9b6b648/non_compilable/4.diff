diff --git a/tmp/f4e1d3be-cba6-4687-a9a3-e692b085cfae_buggy.java b/tmp/d05eeab4-a054-4912-8509-04c25ca9861f_fixed.java
index c84c989..30c134c 100644
--- a/tmp/f4e1d3be-cba6-4687-a9a3-e692b085cfae_buggy.java
+++ b/tmp/d05eeab4-a054-4912-8509-04c25ca9861f_fixed.java
@@ -1,27 +1,38 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
         buf.readUnsignedShortLE(); // length
 
         buf.skipBytes(3); // identification header
         buf.readUnsignedIntLE(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+        long dateTime = buf.readUnsignedIntLE(); // date and time
+
+        // Convert dateTime to Date object
+        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
+        calendar.set(Calendar.YEAR, 2000 + (int)((dateTime >> 26) & 0x3F));
+        calendar.set(Calendar.MONTH, (int)((dateTime >> 22) & 0x0F) - 1);
+        calendar.set(Calendar.DAY_OF_MONTH, (int)((dateTime >> 17) & 0x1F));
+        calendar.set(Calendar.HOUR_OF_DAY, (int)((dateTime >> 12) & 0x1F));
+        calendar.set(Calendar.MINUTE, (int)((dateTime >> 6) & 0x3F));
+        calendar.set(Calendar.SECOND, (int)(dateTime & 0x3F));
+        calendar.set(Calendar.MILLISECOND, 0);
+        position.setTime(calendar.getTime());
 
         buf.skipBytes(23); // coordinates block
 
         buf.skipBytes(3); // data tag header
         decodeMinimalDataSet(position, buf);
 
         return position;
     }
\ No newline at end of file
