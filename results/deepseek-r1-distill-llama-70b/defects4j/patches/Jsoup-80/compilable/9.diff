diff --git a/tmp/db5ca694-c3f7-4e19-8f04-c85746b80d95_buggy.java b/tmp/d5be57f5-510e-4e43-824e-afd0ba7177f0_fixed.java
index cbfa753..72d4e92 100644
--- a/tmp/db5ca694-c3f7-4e19-8f04-c85746b80d95_buggy.java
+++ b/tmp/d5be57f5-510e-4e43-824e-afd0ba7177f0_fixed.java
@@ -1,15 +1,24 @@
 void insert(Token.Comment commentToken) {
     Comment comment = new Comment(commentToken.getData());
     Node insert = comment;
-        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)
-            // so we do a bit of a hack and parse the data as an element to pull the attributes out
+    if (commentToken.bogus) { // xml declarations are emitted as bogus comments
         String data = comment.getData();
         if (data.length() > 1 && (data.startsWith("!") || data.startsWith("?"))) {
+            if (data.length() >= 2) { // Ensure we have enough characters to avoid substring exceptions
+                try {
                     Document doc = Jsoup.parse("<" + data.substring(1, data.length() - 1) + ">", baseUri, Parser.xmlParser());
+                    if (doc != null && doc.hasText() && !doc.select("*>").isEmpty()) { // Check if valid
                         Element el = doc.child(0);
+                        if (el != null && el.tagName().equals("xml")) {
                             insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));
                             insert.attributes().addAll(el.attributes());
                         }
                     }
+                } catch (Exception e) {
+                    // Parsing failed, use original comment
+                }
+            }
+        }
+    }
     insertNode(insert);
 }
\ No newline at end of file
