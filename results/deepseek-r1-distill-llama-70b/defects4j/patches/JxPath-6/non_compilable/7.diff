diff --git a/tmp/5b9a95e8-872f-4d4d-bd46-59a70482f363_buggy.java b/tmp/6c2be907-94b8-4276-a79e-8abbfac5c5d8_fixed.java
index f650982..44a1b4b 100644
--- a/tmp/5b9a95e8-872f-4d4d-bd46-59a70482f363_buggy.java
+++ b/tmp/6c2be907-94b8-4276-a79e-8abbfac5c5d8_fixed.java
@@ -1,42 +1 @@
-    /**
-     * Compares two values
-     */
-    protected boolean equal(
-        EvalContext context,
-        Expression left,
-        Expression right) 
-    {
-        Object l = left.compute(context);
-        Object r = right.compute(context);
-
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
-        if (l instanceof InitialContext || l instanceof SelfContext) {
-            l = ((EvalContext) l).getSingleNodePointer();
-        }
-
-        if (r instanceof InitialContext || r instanceof SelfContext) {
-            r = ((EvalContext) r).getSingleNodePointer();
-        }
-
-        if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
-        }
-
-        if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
-        }
-
-        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
-        }
-        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
-        }
-        if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
-        }
-        return equal(l, r);
-    }
+return iterator.next().equals(value) || iterator.hasNext() && contains(iterator, value);
\ No newline at end of file
