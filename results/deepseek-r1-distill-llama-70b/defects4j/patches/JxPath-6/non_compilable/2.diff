diff --git a/tmp/a3ccf1ea-d424-4330-a979-580c872a26f8_buggy.java b/tmp/79e7d8df-21af-4ada-863b-b243428d0dc2_fixed.java
index f650982..686b6d5 100644
--- a/tmp/a3ccf1ea-d424-4330-a979-580c872a26f8_buggy.java
+++ b/tmp/79e7d8df-21af-4ada-863b-b243428d0dc2_fixed.java
@@ -1,42 +1,25 @@
-    /**
-     * Compares two values
-     */
-    protected boolean equal(
-        EvalContext context,
-        Expression left,
-        Expression right) 
-    {
-        Object l = left.compute(context);
-        Object r = right.compute(context);
-
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
-        if (l instanceof InitialContext || l instanceof SelfContext) {
-            l = ((EvalContext) l).getSingleNodePointer();
-        }
-
-        if (r instanceof InitialContext || r instanceof SelfContext) {
-            r = ((EvalContext) r).getSingleNodePointer();
-        }
-
-        if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
-        }
-
-        if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
-        }
-
 if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
+    Iterator<?> iter = (Iterator<?>) l;
+    while (iter.hasNext()) {
+        Object elem = iter.next();
+        String elemStr = elem == null ? "null" : elem.toString();
+        String rStr = r == null ? "null" : r.toString();
+        if (elemStr.equals(rStr)) {
+            return true;
         }
+    }
+    return false;
+}
+
 if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
+    Iterator<?> iter = (Iterator<?>) r;
+    while (iter.hasNext()) {
+        Object elem = iter.next();
+        String elemStr = elem == null ? "null" : elem.toString();
+        String rStr = l == null ? "null" : l.toString();
+        if (elemStr.equals(rStr)) {
+            return true;
         }
-        if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
     }
-        return equal(l, r);
+    return false;
 }
\ No newline at end of file
