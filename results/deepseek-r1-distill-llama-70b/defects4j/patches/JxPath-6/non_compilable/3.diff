diff --git a/tmp/8358c737-0803-4f17-819a-3298ec3d703d_buggy.java b/tmp/e0ebabba-6489-4889-8f78-b27c0dd5931c_fixed.java
index f650982..e8f86cf 100644
--- a/tmp/8358c737-0803-4f17-819a-3298ec3d703d_buggy.java
+++ b/tmp/e0ebabba-6489-4889-8f78-b27c0dd5931c_fixed.java
@@ -1,42 +1,36 @@
-    /**
-     * Compares two values
-     */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right)
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
     }
 
-        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
+    if (l instanceof Iterator && !(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
-        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
+    if (!(l instanceof Iterator) && r instanceof Iterator) {
         return contains((Iterator) r, l);
     }
     if (l instanceof Iterator && r instanceof Iterator) {
         return findMatch((Iterator) l, (Iterator) r);
     }
-        return equal(l, r);
+    return Objects.equals(l, r);
 }
+</Fixed>
\ No newline at end of file
