diff --git a/tmp/a3e1d12f-9213-48da-abbb-4e530b6596d8_buggy.java b/tmp/57931b46-d256-4741-b7a0-d70130d0a0da_fixed.java
index 139579d..e4664c7 100644
--- a/tmp/a3e1d12f-9213-48da-abbb-4e530b6596d8_buggy.java
+++ b/tmp/57931b46-d256-4741-b7a0-d70130d0a0da_fixed.java
@@ -1,43 +1,18 @@
     // performance sensitive
     public boolean hasClass(String className) {
         final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
+        if (classAttr == null) {
             return false;
         }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
+        String[] classes = classAttr.split("\\s+");
+        String lowerClassName = className.toLowerCase();
 
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+        for (String clazz : classes) {
+            if (clazz.toLowerCase().equals(lowerClassName)) {
                 return true;
             }
-                    inClass = false;
-                }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
         }
 
         return false;
     }
\ No newline at end of file
