diff --git a/tmp/58ab0a87-740e-48da-b979-78919aa3e56a_buggy.java b/tmp/7c24c93a-c6eb-4fbf-87b0-c11cad2e4ff3_fixed.java
index 139579d..8785eb3 100644
--- a/tmp/58ab0a87-740e-48da-b979-78919aa3e56a_buggy.java
+++ b/tmp/7c24c93a-c6eb-4fbf-87b0-c11cad2e4ff3_fixed.java
@@ -1,43 +1,39 @@
     // performance sensitive
     public boolean hasClass(String className) {
         final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
+        if (classAttr == null) {
             return false;
         }
 
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
+        final String lowerClassName = className.toLowerCase();
+        final String lowerClassAttr = classAttr.toLowerCase();
+        final int wantLen = lowerClassName.length();
+
+        if (lowerClassAttr.length() < wantLen) {
+            return false;
         }
 
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
         boolean inClass = false;
         int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
+        for (int i = 0; i < lowerClassAttr.length(); i++) {
+            if (Character.isWhitespace(lowerClassAttr.charAt(i))) {
                 if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                    if (i - start == wantLen && lowerClassAttr.regionMatches(start, lowerClassName, 0, wantLen)) {
                         return true;
                     }
                     inClass = false;
                 }
             } else {
                 if (!inClass) {
-                    // we're in a class name : keep the start of the substring
                     inClass = true;
                     start = i;
                 }
             }
         }
 
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
+        if (inClass && lowerClassAttr.length() - start >= wantLen && lowerClassAttr.regionMatches(start, lowerClassName, 0, wantLen)) {
+            return true;
         }
 
         return false;
     }
\ No newline at end of file
