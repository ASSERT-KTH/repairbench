diff --git a/tmp/77c078f9-4204-4a1b-b1a8-7a7f3650d590_buggy.java b/tmp/d30f6b61-9a4d-4ca1-a5b3-6d98762a0d9e_fixed.java
index cfdcd9c..3f3ec76 100644
--- a/tmp/77c078f9-4204-4a1b-b1a8-7a7f3650d590_buggy.java
+++ b/tmp/d30f6b61-9a4d-4ca1-a5b3-6d98762a0d9e_fixed.java
@@ -1,51 +1,48 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
     if (isAssignmentTarget(n)) {
         return n;
     }
 
     if (!right.isNumber()) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
         return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
         error(INVALID_GETELEM_INDEX_ERROR, right);
         return n;
     }
 
     if (intIndex < 0) {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
     }
 
     Node current = left.getFirstChild();
     Node elem = null;
-    for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
+    for (int i = 0; i < intIndex; i++) {
+        if (current == null) {
+            elem = null;
+            break;
+        }
         current = current.getNext();
     }
+    elem = current;
 
     if (elem == null) {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
     }
 
     if (elem.isEmpty()) {
         elem = NodeUtil.newUndefinedNode(elem);
     } else {
         left.removeChild(elem);
     }
 
-    // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
 }
\ No newline at end of file
