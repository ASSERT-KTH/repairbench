diff --git a/tmp/f219e172-88a8-463b-b64b-068808102c9a_buggy.java b/tmp/0948e975-d79d-4d0d-914c-dd91a009639d_fixed.java
index 1650d36..9e1f861 100644
--- a/tmp/f219e172-88a8-463b-b64b-068808102c9a_buggy.java
+++ b/tmp/0948e975-d79d-4d0d-914c-dd91a009639d_fixed.java
@@ -1,25 +1,22 @@
-    /**
-     * <p>Checks if two calendar objects represent the same local time.</p>
-     *
-     * <p>This method compares the values of the fields of the two objects.
-     * In addition, both calendars must be the same of the same type.</p>
-     * 
-     * @param cal1  the first calendar, not altered, not null
-     * @param cal2  the second calendar, not altered, not null
-     * @return true if they represent the same millisecond instant
-     * @throws IllegalArgumentException if either date is <code>null</code>
-     * @since 2.1
-     */
     public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
         if (cal1 == null || cal2 == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
-        return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
+        TimeZone tz1 = cal1.getTimeZone();
+        TimeZone tz2 = cal2.getTimeZone();
+        // Temporarily set both calendars to the same time zone to compare local times
+        cal1.setTimeZone(TimeZone.getTimeZone("UTC"));
+        cal2.setTimeZone(TimeZone.getTimeZone("UTC"));
+        boolean result = (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
                 cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
                 cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
                 cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
                 cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
                 cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                 cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
                 cal1.getClass() == cal2.getClass());
+        // Restore original time zones
+        cal1.setTimeZone(tz1);
+        cal2.setTimeZone(tz2);
+        return result;
     }
\ No newline at end of file
