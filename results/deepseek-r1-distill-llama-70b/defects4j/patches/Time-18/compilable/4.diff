diff --git a/tmp/2a669fce-a52b-4ab6-9aec-287123f4e233_buggy.java b/tmp/0a1b9b26-ffea-47af-9276-136e165e1f7c_fixed.java
index be2af16..a9764c5 100644
--- a/tmp/2a669fce-a52b-4ab6-9aec-287123f4e233_buggy.java
+++ b/tmp/0a1b9b26-ffea-47af-9276-136e165e1f7c_fixed.java
@@ -1,29 +1,46 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    // Try using Julian chronology first
+    long instantJulian;
+    try {
+        instantJulian = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+    } catch (IllegalArgumentException e) {
+        // Date is invalid in Julian, proceed to try Gregorian
+        try {
+            instantJulian = -1; // Indicate failure
+        } catch (IllegalArgumentException ex) {
+            throw ex;
+        }
+    }
+    if (instantJulian != -1 && instantJulian < iCutoverMillis) {
+        return instantJulian;
+    }
+
+    // Try using Gregorian chronology
+    long instantGregorian;
+    try {
+        instantGregorian = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+    } catch (IllegalArgumentException e) {
         throw new IllegalArgumentException("Specified date does not exist");
     }
+    if (instantGregorian >= iCutoverMillis) {
+        return instantGregorian;
     }
-        return instant;
+
+    // Date is either invalid or in the cutover gap
+    throw new IllegalArgumentException("Specified date does not exist");
 }
\ No newline at end of file
