diff --git a/tmp/c7b89985-5041-4830-9e5b-9f7a8ecaa8db_buggy.java b/tmp/a5c84c10-cb41-4698-8a37-41320f14a74d_fixed.java
index be2af16..1de43ae 100644
--- a/tmp/c7b89985-5041-4830-9e5b-9f7a8ecaa8db_buggy.java
+++ b/tmp/a5c84c10-cb41-4698-8a37-41320f14a74d_fixed.java
@@ -1,29 +1,31 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    // First, construct using Julian rules, assuming input is Julian.
+    long instant = iJulianChronology.getDateTimeMillis(
+        year, monthOfYear, dayOfMonth,
+        hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond
+    );
+
+    // Now, verify if the date is valid in Gregorian
+    iGregorianChronology.validate(instant, year, monthOfYear, dayOfMonth);
+    
+    // Check if we are in the Gregorian period
     if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
-                throw new IllegalArgumentException("Specified date does not exist");
-            }
+        // Use Gregorian
+        instant = iGregorianChronology.getDateTimeMillis(
+            year, monthOfYear, dayOfMonth,
+            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond
+        );
     }
     return instant;
 }
\ No newline at end of file
