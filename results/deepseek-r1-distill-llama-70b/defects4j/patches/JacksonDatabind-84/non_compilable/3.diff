diff --git a/tmp/e1c20260-eaa4-4199-a077-0da7ac5dc56c_buggy.java b/tmp/437433b9-6eea-4f63-83f6-0571ab291d5c_fixed.java
index e69de29..8da6ee2 100644
--- a/tmp/e1c20260-eaa4-4199-a077-0da7ac5dc56c_buggy.java
+++ b/tmp/437433b9-6eea-4f63-83f6-0571ab291d5c_fixed.java
@@ -0,0 +1,16 @@
+protected TypeReference<?> findSuperType(AnnotatedClass base)
+{
+    Class<?> superClass = base.getAnnotated().getSuperclass();
+    if (superClass == null || superClass == Object.class) {
+        return null;
+    }
+    if (superClass.getTypeParameters().length == 0) {
+        return new TypeReference<>(superClass);
+    }
+    // We need to construct parameterized type if type has type parameters
+    Type[] actualTypes = new Type[superClass.getTypeParameters().length];
+    for (int i = 0; i < actualTypes.length; i++) {
+        actualTypes[i] = new CType(base, superClass.getTypeParameters()[i]);
+    }
+    return new TypeReference<>(CTypes.constructParameterizedType(superClass, actualTypes, null));
+}
\ No newline at end of file
