diff --git a/tmp/cde00798-6302-44ea-8a85-ae5c4d2e7341_buggy.java b/tmp/412508f9-37ec-42af-a547-6a37f498be95_fixed.java
index 5f1dcf2..e7d524a 100644
--- a/tmp/cde00798-6302-44ea-8a85-ae5c4d2e7341_buggy.java
+++ b/tmp/412508f9-37ec-42af-a547-6a37f498be95_fixed.java
@@ -1,41 +1,52 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+        // Initialize iteration counter
+        int iteration = 0;
+
         while (true) {
 
             incrementIterationsCounter();
 
+            // Check for convergence and maximum iterations
+            if (isConverged(iteration, evaluationCounter, false, true)) {
+                return;
+            }
+            iteration++;
+            if (iteration >= getMaxIterations()) {
+                throw new MaxIterationsExceededException(getMaxIterations());
+            }
+
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
 
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
 
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
 
                 return;
 
             }
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
-
                 // check convergence
                 return;
             }
 
         }
 
     }
\ No newline at end of file
