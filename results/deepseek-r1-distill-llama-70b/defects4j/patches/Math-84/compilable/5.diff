diff --git a/tmp/e655cca1-ed88-41d4-983c-01d5b56a329d_buggy.java b/tmp/7cb3c350-5036-49e4-87cb-79e83029e8d0_fixed.java
index 5f1dcf2..517e9a2 100644
--- a/tmp/e655cca1-ed88-41d4-983c-01d5b56a329d_buggy.java
+++ b/tmp/7cb3c350-5036-49e4-87cb-79e83029e8d0_fixed.java
@@ -1,41 +1,36 @@
-    /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    while (getIterations() < getMaxIterations()) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
             return;
-
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
             return;
         }
 
     }
-
 }
\ No newline at end of file
