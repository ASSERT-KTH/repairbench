diff --git a/tmp/f06edac9-3683-47c7-af57-f775ad4fd0f7_buggy.java b/tmp/2fb761fb-a1ca-4a68-8f0d-76bbce3dd388_fixed.java
index 5f1dcf2..d62fe8a 100644
--- a/tmp/f06edac9-3683-47c7-af57-f775ad4fd0f7_buggy.java
+++ b/tmp/2fb761fb-a1ca-4a68-8f0d-76bbce3dd388_fixed.java
@@ -1,41 +1,61 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
         while (true) {
 
             incrementIterationsCounter();
 
+            // Check if the maximum number of iterations has been reached
+            if (getIterations() >= getMaxIterations()) {
+                return;
+            }
+
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
 
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
 
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
 
                 return;
 
             }
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                return;
+            }
 
-            // check convergence
+            // check for convergence (added a method to check simplex convergence)
+            if (isConverged(comparator)) {
                 return;
             }
 
         }
 
     }
+
+    // Added method to check convergence based on the simplex points
+    protected boolean isConverged(final Comparator<RealPointValuePair> comparator) {
+        final RealPointValuePair[] simplex = this.simplex;
+        final RealPointValuePair best = simplex[0];
+        for (int i = 1; i < simplex.length; i++) {
+            if (comparator.compare(simplex[i], best) < 0) {
+                return false;
+            }
+        }
+        return true;
+    }
\ No newline at end of file
