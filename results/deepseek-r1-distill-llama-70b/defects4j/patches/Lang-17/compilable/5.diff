diff --git a/tmp/37e15c2e-b9fc-45f5-9012-91e115b74037_buggy.java b/tmp/6b8bb2de-62c8-41d8-95d9-1487a174dafd_fixed.java
index b86c1ea..6fb3b88 100644
--- a/tmp/37e15c2e-b9fc-45f5-9012-91e115b74037_buggy.java
+++ b/tmp/6b8bb2de-62c8-41d8-95d9-1487a174dafd_fixed.java
@@ -1,38 +1,25 @@
-    /**
-     * Translate an input onto a Writer. This is intentionally final as its algorithm is 
-     * tightly coupled with the abstract method of this class. 
-     *
-     * @param input CharSequence that is being translated
-     * @param out Writer to translate the text to
-     * @throws IOException if and only if the Writer produces an IOException
-     */
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
         int len = Character.codePointCount(input, 0, input.length());
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
-            }
-            else {
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
-            for (int pt = 0; pt < consumed; pt++) {
-                    if (pos < len - 2) {
-                pos += Character.charCount(Character.codePointAt(input, pos));
+                pos++;
             } else {
-                        pos++;
+                int currentPos = pos;
+                for (int pt = 0; pt < consumed; pt++) {
+                    int codePoint = Character.codePointAt(input, currentPos);
+                    currentPos += Character.charCount(codePoint);
                 }
+                pos = currentPos;
             }
-                pos--;
-            }
-            pos++;
         }
     }
\ No newline at end of file
