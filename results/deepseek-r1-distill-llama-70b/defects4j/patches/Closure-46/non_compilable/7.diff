diff --git a/tmp/87a53908-f0b8-4193-b3fb-b15404af2b5d_buggy.java b/tmp/39f518b0-d17d-43af-b306-9b4902227bd9_fixed.java
index 46817a7..6c06ce6 100644
--- a/tmp/87a53908-f0b8-4193-b3fb-b15404af2b5d_buggy.java
+++ b/tmp/39f518b0-d17d-43af-b306-9b4902227bd9_fixed.java
@@ -1,16 +1,32 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+
+    RecordType thisRecord = this.toMaybeRecordType().orElseThrow();
+    RecordType thatRecord = that.toMaybeRecordType().orElseThrow();
+
+    if (isSupertype(thisRecord, thatRecord)) {
+        return this;
+    } else if (isSupertype(thatRecord, thisRecord)) {
+        return that;
+    } else {
+        return registry.createUnionType(this, that);
     }
 }
-    return builder.build();
+
+private boolean isSupertype(RecordType a, RecordType b) {
+    for (Map.Entry<String, JSType> entry : b.getPropertyMap().entrySet()) {
+        String prop = entry.getKey();
+        JSType bType = entry.getValue();
+        if (!a.hasProperty(prop)) {
+            return false;
+        }
+        JSType aType = a.getPropertyType(prop);
+        if (!aType.isSupertypeOf(bType)) {
+            return false;
+        }
+    }
+    return true;
 }
\ No newline at end of file
