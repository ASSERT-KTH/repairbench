diff --git a/tmp/0efe4e8e-7870-4786-80b8-a016e2da091e_buggy.java b/tmp/8ea2beb0-8cda-4590-b408-b33671b1c904_fixed.java
index 46817a7..b553581 100644
--- a/tmp/0efe4e8e-7870-4786-80b8-a016e2da091e_buggy.java
+++ b/tmp/8ea2beb0-8cda-4590-b408-b33671b1c904_fixed.java
@@ -1,16 +1,31 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
+  
+  RecordType thisRecord = this;
+  RecordType otherRecord = that.toMaybeRecordType().orElse(null);
+  
+  Set<String> allProperties = new HashSet<>();
+  allProperties.addAll(thisRecord.getProperties().keySet());
+  allProperties.addAll(otherRecord.getProperties().keySet());
+  
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+  for (String property : allProperties) {
+    JSType thisType = thisRecord.getProperties().getOrDefault(property, null);
+    JSType thatType = otherRecord.getProperties().getOrDefault(property, null);
+    
+    JSTypeèµ¶leastType = thisType != null && thatType != null 
+        ? thisType.getLeastSupertype(thatType)
+        : (thisType != null ? thisType : thatType);
+    
+    if (leastType == null) {
+      return registry.createUnionType(this, that);
     }
+    
+    builder.addProperty(property, leastType, null);
   }
+  
   return builder.build();
 }
\ No newline at end of file
