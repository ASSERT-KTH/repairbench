diff --git a/tmp/c9d120b1-e6b6-4211-8a65-f32a1b82f4fc_buggy.java b/tmp/41fe336d-c600-485a-9d39-a2b1332cf527_fixed.java
index 46817a7..cb0cb06 100644
--- a/tmp/c9d120b1-e6b6-4211-8a65-f32a1b82f4fc_buggy.java
+++ b/tmp/41fe336d-c600-485a-9d39-a2b1332cf527_fixed.java
@@ -1,16 +1,30 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    RecordType thisRecord = this.toMaybeRecordType().orElseThrow();
+    RecordType thatRecord = that.toMaybeRecordType().orElseThrow();
+
+    // Collect all unique property names from both records
+    Set<String> allProperties = new HashSet<>(thisRecord.getProperties());
+    allProperties.addAll(thatRecord.getProperties());
+
+    for (String property : allProperties) {
+        if (thisRecord.getProperties().containsKey(property) && thatRecord.getProperties().containsKey(property)) {
+            if (thisRecord.getPropertyType(property).isEquivalentTo(thatRecord.getPropertyType(property))) {
+                builder.addProperty(property, thisRecord.getPropertyType(property), thisRecord.getPropertyNode(property));
+            } else {
+                builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));
             }
+        } else if (thisRecord.getProperties().containsKey(property)) {
+            builder.addProperty(property, thisRecord.getPropertyType(property), thisRecord.getPropertyNode(property));
+        } else {
+            builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));
         }
+    }
+
     return builder.build();
 }
\ No newline at end of file
