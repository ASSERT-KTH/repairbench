diff --git a/tmp/39f65bba-2a62-4d25-aaff-8907dc1f585f_buggy.java b/tmp/76702918-ae2e-4370-86af-49e413e75ce5_fixed.java
index e8705ac..f299ec7 100644
--- a/tmp/39f65bba-2a62-4d25-aaff-8907dc1f585f_buggy.java
+++ b/tmp/76702918-ae2e-4370-86af-49e413e75ce5_fixed.java
@@ -1,24 +1,19 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
 private void annotateCalls(Node n) {
   Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
+  // Keep track of of the "this" context of a call. A call without an explicit
+  // "this" is a free call.
   Node first = n.getFirstChild();
 
-      // ignore cast nodes.
-
+  // A call is a free call if the first child is not a "get" property access.
   if (!NodeUtil.isGet(first)) {
     n.putBooleanProp(Node.FREE_CALL, true);
   }
 
-      // Keep track of the context in which eval is called. It is important
+  // Keep track of the context in which eval is called. It's important
   // to distinguish between "(0, eval)()" and "eval()".
   if (first.isName() &&
       "eval".equals(first.getString())) {
     first.putBooleanProp(Node.DIRECT_EVAL, true);
   }
 }
\ No newline at end of file
