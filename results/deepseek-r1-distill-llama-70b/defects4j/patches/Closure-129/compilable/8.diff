diff --git a/tmp/b1c22bf2-b634-4fd5-aff9-2d1b9459b464_buggy.java b/tmp/e523f0bd-119c-4623-9a73-30b62d6321ee_fixed.java
index e8705ac..ecd8aa8 100644
--- a/tmp/b1c22bf2-b634-4fd5-aff9-2d1b9459b464_buggy.java
+++ b/tmp/e523f0bd-119c-4623-9a73-30b62d6321ee_fixed.java
@@ -1,24 +1,15 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
     private void annotateCalls(Node n) {
         Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
-      // explicit "this" is a free call.
         Node first = n.getFirstChild();
 
-      // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+        // Ignore cast nodes
+        if (NodeUtil.isGet(first)) {
             n.putBooleanProp(Node.FREE_CALL, true);
         }
 
-      // Keep track of the context in which eval is called. It is important
-      // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+        // Check if the call is a direct eval
+        if (first.isName() && "eval".equals(first.getString())) {
             first.putBooleanProp(Node.DIRECT_EVAL, true);
         }
     }
\ No newline at end of file
