diff --git a/tmp/895590a8-6ea8-4435-9097-60cfc77bdd59_buggy.java b/tmp/97daa28e-e42e-4168-b2e9-a53e63a90e4d_fixed.java
index e69de29..823839e 100644
--- a/tmp/895590a8-6ea8-4435-9097-60cfc77bdd59_buggy.java
+++ b/tmp/97daa28e-e42e-4168-b2e9-a53e63a90e4d_fixed.java
@@ -0,0 +1,26 @@
+private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+    in.defaultReadObject();
+    Object values = in.readObject();
+    Class<?> clazz = (Class<?>) in.readObject();
+    
+    if (clazz == null || clazz.isInterface() || !(Collection.class.isAssignableFrom(clazz))) {
+        throw new UnsupportedOperationException("value must be a Collection");
+    }
+    
+    try {
+        Constructor<? extends Collection<?>> constructor = clazz.getConstructor();
+        Collection<?> newValues = constructor.newInstance();
+        if (values != null) {
+            newValues.addAll((Collection<?>) values);
+        }
+        this.map = MultiValueMap.multiValueMap(this.map, clazz);
+    } catch (NoSuchMethodException e) {
+        throw new IllegalArgumentException("Class must have a default constructor");
+    } catch (IllegalAccessException e) {
+        throw new IllegalArgumentException("Unable to access constructor");
+    } catch (InstantiationException e) {
+        throw new IllegalArgumentException("Unable to instantiate collection");
+    } catch (InvocationTargetException e) {
+        throw new IllegalArgumentException("Exception in constructor");
+    }
+}
\ No newline at end of file
