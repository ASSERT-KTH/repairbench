diff --git a/tmp/5907a297-cdde-45a4-9e4f-e5e4891c3be6_buggy.java b/tmp/ca6c504c-0d10-4fc1-aae0-29a2f16f137e_fixed.java
index fd8eae5..1a5baf2 100644
--- a/tmp/5907a297-cdde-45a4-9e4f-e5e4891c3be6_buggy.java
+++ b/tmp/ca6c504c-0d10-4fc1-aae0-29a2f16f137e_fixed.java
@@ -1,47 +1,39 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
 
-        // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
-        if (index >= 0 && !this.allowDuplicateXValues) {
+        if (index >= 0) {
+            if (!this.allowDuplicateXValues) {
                 XYDataItem existing = (XYDataItem) this.data.get(index);
                 try {
                     overwritten = (XYDataItem) existing.clone();
-            }
-            catch (CloneNotSupportedException e) {
+                } catch (CloneNotSupportedException e) {
                     throw new SeriesException("Couldn't clone XYDataItem!");
                 }
                 existing.setY(y);
-        }
-        else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+            } else {
                 if (this.autoSort) {
+                    index = Collections.binarySearch(this.xValues, x);
                     this.data.add(-index - 1, new XYDataItem(x, y));
+                } else {
+                    this.data.add(new XYDataItem(x, y));
+                }
             }
-            else {
+        } else {
+            if (this.autoSort) {
+                this.data.add(-index - 1, new XYDataItem(x, y));
+            } else {
                 this.data.add(new XYDataItem(x, y));
             }
-            // check if this addition will exceed the maximum item count...
+        }
+        
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
-        }
+        
         fireSeriesChanged();
         return overwritten;
     }
\ No newline at end of file
