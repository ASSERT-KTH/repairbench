diff --git a/tmp/964c97c3-78dd-42b5-a9ba-f7aa7f2cb2cb_buggy.java b/tmp/0283e786-e801-4156-a001-cb1a9c6d379c_fixed.java
index bc80637..27f253a 100644
--- a/tmp/964c97c3-78dd-42b5-a9ba-f7aa7f2cb2cb_buggy.java
+++ b/tmp/0283e786-e801-4156-a001-cb1a9c6d379c_fixed.java
@@ -1,33 +1,40 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
+
+    // First, check if type is Enum and whether a custom deserializer is available
+    if (type != null && type.isEnumType()) {
+        deser = _createEnumKeyDeserializer(ctxt, type);
+    }
+
+    // If not set yet, proceed with other deserializers
+    if (deser == null) {
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
+
+        // Fall back to standard string-based deserializer
         if (deser == null) {
-            if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+    }
+
+    // Apply deserializer modifiers
+    if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
             deser = mod.modifyKeyDeserializer(config, type, deser);
         }
     }
-        }
+
     return deser;
 }
\ No newline at end of file
