diff --git a/tmp/d0df86d9-75c1-4ce1-bcac-04e61380dd72_buggy.java b/tmp/72461676-ac25-412d-b032-310614f7e000_fixed.java
index bc80637..5d3d093 100644
--- a/tmp/d0df86d9-75c1-4ce1-bcac-04e61380dd72_buggy.java
+++ b/tmp/72461676-ac25-412d-b032-310614f7e000_fixed.java
@@ -1,33 +1,40 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
+
+        // Handle enum cases before falling back to standard deserializers
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
+                deser = _createEnumKeyDeserializer(ctxt, type);
             }
+        }
+
+        // If still null, attempt to find string-based deserializer
+        if (deser == null) {
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
+
+        // Apply modifiers after initial deserializer is determined
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
+
         return deser;
     }
\ No newline at end of file
