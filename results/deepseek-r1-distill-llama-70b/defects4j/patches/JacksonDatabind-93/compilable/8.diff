diff --git a/tmp/b5cd5078-0577-460f-abe8-7a1e37ef1ccc_buggy.java b/tmp/5a97b0d7-d5df-4327-b6e4-47eec46772db_fixed.java
index 2d9cf24..88e5502 100644
--- a/tmp/b5cd5078-0577-460f-abe8-7a1e37ef1ccc_buggy.java
+++ b/tmp/5a97b0d7-d5df-4327-b6e4-47eec46772db_fixed.java
@@ -1,33 +1,25 @@
     public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
     {
-        // There are certain nasty classes that could cause problems, mostly
-        // via default typing -- catch them here.
+        // There are certain classes that could cause problems, mostly via default typing
         final Class<?> raw = type.getRawClass();
         String full = raw.getName();
 
         main_check:
         do {
             if (_cfgIllegalClassNames.contains(full)) {
                 break;
             }
 
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
-                    String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
-                    if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
-                            || "AbstractApplicationContext".equals(name)) {
+            // Limit checks to classes, excluding interfaces and specific prefixes
+            if (raw.isInterface() || full.startsWith(PREFIX_STRING)) {
+                String name = raw.getSimpleName();
+                if (!raw.isInterface() && ("AbstractPointcutAdvisor".equals(name) || "AbstractApplicationContext".equals(name))) {
                     break main_check;
                 }
             }
-            }
             return;
         } while (false);
 
         throw JsonMappingException.from(ctxt,
                 String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
     }
\ No newline at end of file
