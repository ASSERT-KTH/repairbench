diff --git a/tmp/8d3fd88d-4d13-47e6-8ee6-c0afb36eb860_buggy.java b/tmp/9f0b5953-3a1a-4873-9ed2-6bf3994c5891_fixed.java
index 2d9cf24..15c0394 100644
--- a/tmp/8d3fd88d-4d13-47e6-8ee6-c0afb36eb860_buggy.java
+++ b/tmp/9f0b5953-3a1a-4873-9ed2-6bf3994c5891_fixed.java
@@ -1,33 +1,24 @@
 public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
 {
-        // There are certain nasty classes that could cause problems, mostly
-        // via default typing -- catch them here.
     final Class<?> raw = type.getRawClass();
     String full = raw.getName();
 
     main_check:
     do {
         if (_cfgIllegalClassNames.contains(full)) {
             break;
         }
 
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
         if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
-                    String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
+            String name = raw.getSimpleName();
             if ("AbstractPointcutAdvisor".equals(name) 
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                     || "AbstractApplicationContext".equals(name)) {
                 break main_check;
             }
         }
-            }
         return;
     } while (false);
 
     throw JsonMappingException.from(ctxt,
             String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
 }
\ No newline at end of file
