diff --git a/tmp/e2ba22e8-b528-4f27-860b-8565f2dde7db_buggy.java b/tmp/a6e84adc-ae12-4862-8a3b-78dff2805291_fixed.java
index 0b7c52e..4e173b3 100644
--- a/tmp/e2ba22e8-b528-4f27-860b-8565f2dde7db_buggy.java
+++ b/tmp/a6e84adc-ae12-4862-8a3b-78dff2805291_fixed.java
@@ -1,27 +1,18 @@
-    /**
-     * Processes a OBJECTLIT node.
-     */
   private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
-        // Maybe STRING, GET, SET
-
-        // We should never see a mix of numbers and strings.
+    for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
       String name = child.getString();
       T type = typeSystem.getType(getScope(), n, name);
       
       Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
+      type = prop != null ? prop.getType() : type;
+      
+      if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
         if (propertiesToErrorFor.containsKey(name)) {
           compiler.report(JSError.make(
               t.getSourceName(), child, propertiesToErrorFor.get(name),
               Warnings.INVALIDATION, name,
               (type == null ? "null" : type.toString()), n.toString(), ""));
         }
       }
     }
   }
\ No newline at end of file
