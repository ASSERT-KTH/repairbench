diff --git a/tmp/e9c3891e-62b4-4a0b-8a4a-beb26e2de318_buggy.java b/tmp/2ace55a4-6c78-436f-a2bb-ccccae5e08d8_fixed.java
index 939f49b..46a670c 100644
--- a/tmp/e9c3891e-62b4-4a0b-8a4a-beb26e2de318_buggy.java
+++ b/tmp/2ace55a4-6c78-436f-a2bb-ccccae5e08d8_fixed.java
@@ -1,21 +1,17 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      && n.getType() == Token.GETPROP) {
+    Node current = n;
+    while (current.getType() == Token.GETPROP) {
+      Node child = current.getFirstChild();
+      if (child.getType() == Token.STRING
+          && child.getString().equals("prototype")) {
         return true;
       }
+      current = child;
     }
   }
 
   return false;
 }
\ No newline at end of file
