diff --git a/tmp/a90a7274-35df-4a44-a1fa-4b100ed9648e_buggy.java b/tmp/0293fe73-9835-4ac8-b8e4-c9fe2470ba5d_fixed.java
index 939f49b..0a71450 100644
--- a/tmp/a90a7274-35df-4a44-a1fa-4b100ed9648e_buggy.java
+++ b/tmp/0293fe73-9835-4ac8-b8e4-c9fe2470ba5d_fixed.java
@@ -1,21 +1,18 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+      && n.getType() == Token.GETPROP) {
 
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    // Check if any part of the chain is assigning to 'prototype'
+    Node current = n;
+    while (current.getType() == Token.GETPROP) {
+      Node child = current.getFirstChild();
+      if (child.getType() == Token.STRING && child.getString().equals("prototype")) {
         return true;
       }
+      current = child;
     }
   }
 
   return false;
 }
\ No newline at end of file
