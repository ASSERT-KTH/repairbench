diff --git a/tmp/95af1ab5-b24b-4fda-b6d7-a25fa25432be_buggy.java b/tmp/f3a7f8ca-fa2b-43d9-9ba1-1556ed5d6289_fixed.java
index 800e6e1..e028c70 100644
--- a/tmp/95af1ab5-b24b-4fda-b6d7-a25fa25432be_buggy.java
+++ b/tmp/f3a7f8ca-fa2b-43d9-9ba1-1556ed5d6289_fixed.java
@@ -1,32 +1,28 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
-          if (parent.getType() == Token.NAME) {
-            return;
-          }
+      // Check if the function is assigned as a property (e.g., goog.foo = function...)
+      if (parent.getType() == Token.NAME && (parent.getParent().getType() == Token.VAR ||
+          parent.getParent().getType() == Token.PARAM ||
+          parent.getParent().getType() == Token.CATCH)) {
+        defineFunctionProperty(n, parent);
+      } else {
         defineDeclaredFunction(n, parent);
+      }
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file
