diff --git a/tmp/eff42cbf-411d-43ee-8eaf-4319fd23be92_buggy.java b/tmp/b1c2b699-b5ce-461d-8bd3-f7eeaa120dcc_fixed.java
index 800e6e1..44801c4 100644
--- a/tmp/eff42cbf-411d-43ee-8eaf-4319fd23be92_buggy.java
+++ b/tmp/b1c2b699-b5ce-461d-8bd3-f7eeaa120dcc_fixed.java
@@ -1,32 +1,22 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
   @Override public void visit(NodeTraversal t, Node n, Node parent) {
     if (n == scope.getRootNode()) return;
 
     if (n.getType() == Token.LP && parent == scope.getRootNode()) {
       handleFunctionInputs(parent);
       return;
     }
 
     attachLiteralTypes(n);
     switch (n.getType()) {
       case Token.FUNCTION:
-          if (parent.getType() == Token.NAME) {
-            return;
-          }
+        // Remove the condition that skips processing when parent is Token.NAME
         defineDeclaredFunction(n, parent);
         break;
       case Token.CATCH:
         defineCatch(n, parent);
         break;
       case Token.VAR:
         defineVar(n, parent);
         break;
     }
   }
\ No newline at end of file
