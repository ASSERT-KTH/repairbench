diff --git a/tmp/2ff2e5fa-dd1c-4920-b497-139907a88721_buggy.java b/tmp/142effe0-03b6-4f52-ae63-9c39c1000a2c_fixed.java
index 57c40b2..fe64076 100644
--- a/tmp/2ff2e5fa-dd1c-4920-b497-139907a88721_buggy.java
+++ b/tmp/142effe0-03b6-4f52-ae63-9c39c1000a2c_fixed.java
@@ -1,27 +1,17 @@
-  /**
-   * Visits a GETPROP node.
-   *
-   * @param t The node traversal object that supplies context, such as the
-   * scope chain to use in name lookups as well as error reporting.
-   * @param n The node being visited.
-   * @param parent The parent of <code>n</code>
-   */
 private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
 
     if (childType.isDict()) {
         report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
-    } else if (validator.expectNotNullOrUndefined(t, n, childType,
+    } else {
+        if (validator.expectNotNullOrUndefined(t, n, childType,
                 "No properties on this expression", getNativeType(OBJECT_TYPE))) {
+            // Error already reported; do not proceed to check property access.
+            return;
+        }
         checkPropertyAccess(childType, property.getString(), t, n);
     }
     ensureTyped(t, n);
 }
\ No newline at end of file
