diff --git a/tmp/54ef4af6-8768-46ef-93e0-54bb638abc49_buggy.java b/tmp/e8c146ee-b18d-4b60-ab30-916c3fe1e95b_fixed.java
index d926eea..2fc704c 100644
--- a/tmp/54ef4af6-8768-46ef-93e0-54bb638abc49_buggy.java
+++ b/tmp/e8c146ee-b18d-4b60-ab30-916c3fe1e95b_fixed.java
@@ -1,48 +1,47 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
             return this;
         }
         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
         if (format == null) {
             return this;
         }
         // Simple case first: serialize as numeric timestamp?
         JsonFormat.Shape shape = format.getShape();
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
 
-        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
-        // First: custom pattern will override things
+        // Check if a pattern is provided; if not, use a default without timezone
+        if (shape == JsonFormat.Shape.STRING) {
+            if (!format.hasPattern() && !format.hasLocale() && !format.hasTimeZone()) {
+                // Use the default date format without timezone
+                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd'X'HH:mm:ss");
+                return withFormat(Boolean.FALSE, df);
+            }
+        }
+
+        // Existing logic for handling custom patterns or additional format details
         if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                 || format.hasLocale() || format.hasTimeZone()) {
             TimeZone tz = format.getTimeZone();
             final String pattern = format.hasPattern()
                             ? format.getPattern()
                             : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                             ? format.getLocale()
                             : serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
 
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
+        // Otherwise, no changes needed
         return this;
     }
\ No newline at end of file
