diff --git a/tmp/27ab3404-83ce-4860-9399-af997450c99c_buggy.java b/tmp/3bd67c93-c717-4ed4-84b0-78b3788bd2d5_fixed.java
index d926eea..40014b3 100644
--- a/tmp/27ab3404-83ce-4860-9399-af997450c99c_buggy.java
+++ b/tmp/3bd67c93-c717-4ed4-84b0-78b3788bd2d5_fixed.java
@@ -1,48 +1,35 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
             return this;
         }
         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
         if (format == null) {
             return this;
         }
-        // Simple case first: serialize as numeric timestamp?
         JsonFormat.Shape shape = format.getShape();
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
 
-        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
-        // First: custom pattern will override things
         if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                 || format.hasLocale() || format.hasTimeZone()) {
             TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
+            String pattern = format.hasPattern()
                     ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-            final Locale loc = format.hasLocale()
+                    : "yyyy-MM-dd'X'HH:mm:ss.SSSXXX";
+            Locale loc = format.hasLocale()
                     ? format.getLocale()
                     : serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
 
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
-        return this;
+        return withFormat(Boolean.FALSE, new SimpleDateFormat("yyyy-MM-dd'X'HH:mm:ss.SSSXXX", serializers.getLocale()));
     }
\ No newline at end of file
