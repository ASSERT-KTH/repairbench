diff --git a/tmp/e98c5f5a-8e4a-4af5-aa2e-2f69c2d14c49_buggy.java b/tmp/b40c4601-5897-4654-b783-ddef2de35d33_fixed.java
index b5d94e0..742799d 100644
--- a/tmp/e98c5f5a-8e4a-4af5-aa2e-2f69c2d14c49_buggy.java
+++ b/tmp/b40c4601-5897-4654-b783-ddef2de35d33_fixed.java
@@ -1,26 +1,24 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
+      // Reset visits
       Node c = node.getFirstChild();
       while (c != null) {
         traverse(c);
+        // Always reset the parent to this node after traversing a child
+        c.setParent(node);
         Node next = c.getNext();
         c = next;
       }
 
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
