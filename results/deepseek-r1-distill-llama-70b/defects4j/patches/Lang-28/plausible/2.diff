diff --git a/tmp/ba1e7abf-6eff-424a-9353-9eacb33128a4_buggy.java b/tmp/a7f8704d-5c2a-41ef-b22d-1b1b052ea66d_fixed.java
index 4bbd561..fd90075 100644
--- a/tmp/ba1e7abf-6eff-424a-9353-9eacb33128a4_buggy.java
+++ b/tmp/a7f8704d-5c2a-41ef-b22d-1b1b052ea66d_fixed.java
@@ -1,37 +1,39 @@
-    /**
-     * {@inheritDoc}
-     */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
     if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
         char firstChar = input.charAt(start);
         if (firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if (end >= input.length()) {
+            return 0; // Not a valid entity
+        }
+
         int entityValue;
         try {
             if (isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch (NumberFormatException nfe) {
             return 0;
         }
 
-                out.write(entityValue);
+        char[] chars = Character.toChars(entityValue);
+        out.write(chars);
+
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
     return 0;
 }
\ No newline at end of file
