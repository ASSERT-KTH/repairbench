diff --git a/tmp/9d18cf0f-033e-4b19-bb6d-a2cabf258481_buggy.java b/tmp/f63050de-0460-46f5-a3f6-2124b6b30d66_fixed.java
index 1a63a66..76db4df 100644
--- a/tmp/9d18cf0f-033e-4b19-bb6d-a2cabf258481_buggy.java
+++ b/tmp/f63050de-0460-46f5-a3f6-2124b6b30d66_fixed.java
@@ -1,21 +1,21 @@
 @Override
 @Deprecated
-    protected JavaType _narrow(Class<?> subclass)
-    {
+protected JavaType _narrow(Class<?> subclass) {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+    if (subclass != null && (_class.isAssignableFrom(subclass) || _hasInterface(subclass, _superInterfaces))) {
+        return new SimpleType(subclass, _bindings, this, _superInterfaces, _valueHandler, _typeHandler, _asStatic);
+    }
+    throw new IllegalArgumentException("Class " + subclass.getName() + " not subtype of " + _class.getName());
+}
+
+private boolean _hasInterface(Class<?> cls, List<JavaType> interfaces) {
+    if (cls == null) return false;
+    for (JavaType type : interfaces) {
+        if (type.getRawClass().isAssignableFrom(cls)) {
+            return true;
+        }
+    }
+    return false;
 }
\ No newline at end of file
