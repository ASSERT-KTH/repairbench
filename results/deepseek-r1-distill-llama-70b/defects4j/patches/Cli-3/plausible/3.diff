diff --git a/tmp/a2fad4e1-8470-491d-baee-3efaf614ed66_buggy.java b/tmp/77a33953-dc0c-4148-833b-2b7bf9c53b6f_fixed.java
index d9b400d..50f556f 100644
--- a/tmp/a2fad4e1-8470-491d-baee-3efaf614ed66_buggy.java
+++ b/tmp/77a33953-dc0c-4148-833b-2b7bf9c53b6f_fixed.java
@@ -1,21 +1,51 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
-        }
-        catch (NumberFormatException nfe)
-        {
-            System.err.println(nfe.getMessage());
-        }
+        if (str == null)
+            return null;
         
+        if (str.contains("."))
+        {
+            try
+            {
+                return Double.parseDouble(str);
+            }
+            catch (NumberFormatException nfe)
+            {
+                // Trying as Double failed, maybe it's an integer with a dot, e.g., "4."
+                if (str.indexOf('.') == str.length() - 1)
+                {
+                    try
+                    {
+                        return Long.parseLong(str.replace(".", ""));
+                    }
+                    catch (NumberFormatException ex)
+                    {
+                        return null;
+                    }
+                }
+                else
+                {
+                    return null;
+                }
+            }
+        }
+        else
+        {
+            try
+            {
+                return Long.parseLong(str);
+            }
+            catch (NumberFormatException nfe)
+            {
                 return null;
             }
+        }
+    }
\ No newline at end of file
