diff --git a/tmp/8a000f3b-c861-44a1-8067-10a00743a406_buggy.java b/tmp/725c0b53-6bf5-4500-84ac-b6dc84ff0aa0_fixed.java
index 99141e0..56d7786 100644
--- a/tmp/8a000f3b-c861-44a1-8067-10a00743a406_buggy.java
+++ b/tmp/725c0b53-6bf5-4500-84ac-b6dc84ff0aa0_fixed.java
@@ -1,33 +1,37 @@
     static String unescape(String string) {
         if (!string.contains("&"))
             return string;
 
         Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
-        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
-        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
+        StringBuffer accum = new StringBuffer(string.length());
 
         while (m.find()) {
             int charval = -1;
             String num = m.group(3);
+            String hex = m.group(2);
             if (num != null) {
+                if (hex != null && hex.toLowerCase().equals("x")) {
+                    charval = Integer.parseInt(num, 16);
+                } else {
                     try {
-                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
-                    charval = Integer.valueOf(num, base);
+                        charval = Integer.parseInt(num, 8); // Treat as octal by default
                     } catch (NumberFormatException e) {
-                } // skip
+                        charval = -1;
+                    }
+                }
             } else {
                 String name = m.group(1);
                 if (full.containsKey(name))
                     charval = full.get(name);
             }
 
-            if (charval != -1 || charval > 0xFFFF) { // out of range
+            if (charval != -1) {
                 String c = Character.toString((char) charval);
                 m.appendReplacement(accum, c);
             } else {
                 m.appendReplacement(accum, m.group(0));
             }
         }
         m.appendTail(accum);
         return accum.toString();
     }
\ No newline at end of file
