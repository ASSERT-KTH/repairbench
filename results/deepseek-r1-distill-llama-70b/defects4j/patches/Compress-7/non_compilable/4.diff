diff --git a/tmp/66a8b2dd-85d7-493c-bf34-f6f88468ef92_buggy.java b/tmp/1557f532-8129-40e4-a3f7-f0bb2ca847cb_fixed.java
index d6662c7..05bd62d 100644
--- a/tmp/66a8b2dd-85d7-493c-bf34-f6f88468ef92_buggy.java
+++ b/tmp/1557f532-8129-40e4-a3f7-f0bb2ca847cb_fixed.java
@@ -1,23 +1,24 @@
-    /**
-     * Parse an entry name from a buffer.
-     * Parsing stops when a NUL is found
-     * or the buffer length is reached.
-     *
-     * @param buffer The buffer from which to parse.
-     * @param offset The offset into the buffer from which to parse.
-     * @param length The maximum number of bytes to parse.
-     * @return The entry name.
-     */
+import java.nio.charset.Charset;
+import java.nio.charset.CharsetDecoder;
+import java.nio.charset.CodingErrorAction;
+
 public static String parseName(byte[] buffer, final int offset, final int length) {
+    CharsetDecoder decoder = Charset.forName("ISO-8859-1").newDecoder();
+    decoder.reset();
     StringBuffer result = new StringBuffer(length);
     int end = offset + length;
 
-        for (int i = offset; i < end; ++i) {
-            if (buffer[i] == 0) {
+    for (int i = offset; i < end; i++) {
+        byte b = buffer[i];
+        if (b == 0) {
             break;
         }
-            result.append((char) buffer[i]);
+        try {
+            result.append(decoder.decode(ByteBuffer.wrap(new byte[]{b})).array()[0]);
+        } catch (CharacterDecodeException e) {
+            result.append('?');
+        }
     }
 
     return result.toString();
 }
\ No newline at end of file
