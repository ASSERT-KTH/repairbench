diff --git a/tmp/8b6f53e6-d620-4171-a6c4-bbb476656999_buggy.java b/tmp/ad03dfe6-a8c7-4d0a-867d-e73d25eb5388_fixed.java
index 98d89dc..ff3b1ea 100644
--- a/tmp/8b6f53e6-d620-4171-a6c4-bbb476656999_buggy.java
+++ b/tmp/ad03dfe6-a8c7-4d0a-867d-e73d25eb5388_fixed.java
@@ -1,23 +1,32 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
-        return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
+    
+    if (Double.isNaN(ld) && Double.isNaN(rd)) {
+        return evaluateCompare(0);
+    } else if (ld == rd) {
+        return evaluateCompare(0);
+    } else if (ld < rd) {
+        return evaluateCompare(-1);
+    } else {
+        return evaluateCompare(1);
+    }
 }
\ No newline at end of file
