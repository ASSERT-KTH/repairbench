diff --git a/tmp/4fb7c288-e3e3-489e-8073-13c492c898c7_buggy.java b/tmp/fffcb247-d51c-43de-b3a4-4e49310d7a6a_fixed.java
index 10616db..bdbb6f0 100644
--- a/tmp/4fb7c288-e3e3-489e-8073-13c492c898c7_buggy.java
+++ b/tmp/fffcb247-d51c-43de-b3a4-4e49310d7a6a_fixed.java
@@ -1,19 +1,37 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+        int[] newValues = super.add(partial, fieldIndex, values, valueToAdd);
+        if (newValues == null) {
+            return null;
         }
+        if (fieldIndex == 1) { // month is being changed (index 1 is month, 2 is day)
+            newValues[1] = adjustDayForMonthChange(partial.getChronology(), newValues);
+        }
+        return newValues;
+    }
+}
+
+private int adjustDayForMonthChange(Chronology chronology, int[] values) {
+    int year = values[0];
+    int month = values[1];
+    int day = values[2];
+    
+    int maxDays = chronology.monthDay().getMaximumDayForMonth(month, year);
+    if (day > maxDays) {
+        day = maxDays;
+    }
+    return day;
 }
\ No newline at end of file
