diff --git a/tmp/1ea3029f-2dcd-44ab-a232-e20af2f397e9_buggy.java b/tmp/3b43064d-6e46-4598-998d-528a59c61cfc_fixed.java
index 10616db..3255a9c 100644
--- a/tmp/1ea3029f-2dcd-44ab-a232-e20af2f397e9_buggy.java
+++ b/tmp/3b43064d-6e46-4598-998d-528a59c61cfc_fixed.java
@@ -1,19 +1,38 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] newValues = iChronology.get(partial, instant);
+            // Adjust days if necessary
+            if (newValues.length == 2 && newValues[1] == 0) {
+                newValues = adjust(newValues, partial);
+            }
+            return newValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
+
+    private int[] adjust(int[] values, ReadablePartial partial) {
+        if (partial.size() != 2) {
+            return values;
+        }
+        int year = values[0];
+        int month = values[1];
+        int day = partial.get(1);
+        int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);
+        if (day > maxDay) {
+            day = maxDay;
+        }
+        return new int[]{year, month, day};
+    }
\ No newline at end of file
