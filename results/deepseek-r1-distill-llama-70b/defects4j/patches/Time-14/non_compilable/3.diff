diff --git a/tmp/d05c07e3-a017-44ca-9aa5-51141e783923_buggy.java b/tmp/07ae2da4-d3f8-48ea-beac-c4d47463eb18_fixed.java
index 10616db..c48795c 100644
--- a/tmp/d05c07e3-a017-44ca-9aa5-51141e783923_buggy.java
+++ b/tmp/07ae2da4-d3f8-48ea-beac-c4d47463eb18_fixed.java
@@ -1,19 +1,29 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+        int[] newValues = new int[values.length];
+        System.arraycopy(values, 0, newValues, 0, values.length);
+        if (fieldIndex == MONTH_OF_YEAR) {
+            newValues[MONTH_OF_YEAR] += valueToAdd;
+            if (newValues[MONTH_OF_YEAR] < 1) {
+                newValues[MONTH_OF_YEAR] += 12;
+            }
+            newValues[MONTH_OF_YEAR] %= 12;
+        } else if (fieldIndex == DAY_OF_MONTH) {
+            newValues[DAY_OF_MONTH] += valueToAdd;
+        }
+        if (newValues[DAY_OF_MONTH] > iChronology.getMaximumDayOfMonth(newValues[MONTH_OF_YEAR])) {
+            newValues[DAY_OF_MONTH] = iChronology.getMaximumDayOfMonth(newValues[MONTH_OF_YEAR]);
+        }
+        return newValues;
     }
 }
\ No newline at end of file
