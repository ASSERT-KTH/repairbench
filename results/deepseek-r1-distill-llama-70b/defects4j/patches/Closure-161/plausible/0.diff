diff --git a/tmp/97080915-9aab-419f-9b3f-982c9aa312a2_buggy.java b/tmp/72181626-1ec5-4c2c-a05d-95139bed302b_fixed.java
index 1303a19..678b64e 100644
--- a/tmp/97080915-9aab-419f-9b3f-982c9aa312a2_buggy.java
+++ b/tmp/72181626-1ec5-4c2c-a05d-95139bed302b_fixed.java
@@ -1,45 +1,47 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
+
+    // Check if the node is part of an assignment (e.g., a = ...[index])
+    if (parent != null && parent.getType() == Token.ASSIGN && parent.getFirstChild() == n) {
+        return n;
+    }
 
     if (right.getType() != Token.NUMBER) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
+        // Sometimes people like to use complex expressions to index into arrays, or
+        // strings to index into array methods.
         return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
         error(INVALID_GETELEM_INDEX_ERROR, right);
         return n;
     }
 
     if (intIndex < 0) {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
     }
 
     Node elem = left.getFirstChild();
     for (int i = 0; elem != null && i < intIndex; i++) {
         elem = elem.getNext();
     }
 
     if (elem == null) {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
     }
 
     if (elem.getType() == Token.EMPTY) {
         elem = NodeUtil.newUndefinedNode(elem);
     } else {
         left.removeChild(elem);
     }
 
     // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
   }
\ No newline at end of file
