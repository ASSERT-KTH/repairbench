diff --git a/tmp/c0a91cc4-6e13-4e24-94f5-b94ef7f672e1_buggy.java b/tmp/f861028a-7b02-4d3b-a71f-3bca7b36d813_fixed.java
index 39dd8e7..da92106 100644
--- a/tmp/c0a91cc4-6e13-4e24-94f5-b94ef7f672e1_buggy.java
+++ b/tmp/f861028a-7b02-4d3b-a71f-3bca7b36d813_fixed.java
@@ -1,30 +1,31 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
+            // Read until we hit whitespace, <, >, /, or the end of the input
             StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
-                while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+            while (!tq.isEmpty() && 
+                   !tq.matchesAny("<", "/>", ">") && 
+                   !tq.matchesWhitespace()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
-            return Attribute.createFromEncoded(key, value);
-        else {
+
+    if (key.isEmpty()) {
         tq.consume();
-                
         return null;
     }
+    return Attribute.createFromEncoded(key, value);
 }
\ No newline at end of file
