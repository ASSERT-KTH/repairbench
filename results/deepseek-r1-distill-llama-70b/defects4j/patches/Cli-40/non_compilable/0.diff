diff --git a/tmp/52c5408e-907c-42b9-9d60-27a8434aab7d_buggy.java b/tmp/f6e0230b-26b4-411c-bad7-faa966eb2278_fixed.java
index a7d0787..47bb2ef 100644
--- a/tmp/52c5408e-907c-42b9-9d60-27a8434aab7d_buggy.java
+++ b/tmp/f6e0230b-26b4-411c-bad7-faa966eb2278_fixed.java
@@ -1,54 +1,29 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
+    @SuppressWarnings("unchecked")
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+        if (clazz.equals(PatternOptionBuilder.STRING_VALUE)) {
             return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.OBJECT_VALUE)) {
             return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.NUMBER_VALUE)) {
             return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.DATE_VALUE)) {
             return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.CLASS_VALUE)) {
             return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.FILE_VALUE)) {
             return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.EXISTING_FILE_VALUE)) {
             return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.FILES_VALUE)) {
             return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+        } else if (clazz.equals(PatternOptionBuilder.URL_VALUE)) {
             return (T) createURL(str);
+        } else {
+            try {
+                return clazz.getConstructor(String.class).newInstance(str);
+            } catch (Exception e) {
+                throw new ParseException("Could not create value for type " + clazz.getName() + " from str: '" + str + "'", 0);
             }
-        else
-        {
-            return null;
         }
     }
\ No newline at end of file
