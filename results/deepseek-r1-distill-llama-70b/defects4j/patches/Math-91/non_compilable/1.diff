diff --git a/tmp/f11d8f50-6080-4a04-b852-917052b6d97c_buggy.java b/tmp/4bffe5f3-bab5-4936-9d9b-b3228f951f3c_fixed.java
index 4cce784..ed843e5 100644
--- a/tmp/f11d8f50-6080-4a04-b852-917052b6d97c_buggy.java
+++ b/tmp/4bffe5f3-bab5-4936-9d9b-b3228f951f3c_fixed.java
@@ -1,11 +1,20 @@
-    /**
-     * Compares this object to another based on size.
-     * @param object the object to compare to
-     * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
-     *         than <tt>object</tt>, 0 if they are equal.
-     */
 public int compareTo(Fraction object) {
-        double nOd = doubleValue();
-        double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+    // Handle the case where either fraction is negative
+    if (equals(object)) {
+        return 0;
+    }
+    if (isNegative() != object.isNegative()) {
+        return isNegative() ? -1 : +1;
+    }
+    
+    // Use cross-multiplication to compare fractions without floating point error
+    int a        = numerator;
+    int b        = denominator;
+    int c        = object.numerator;
+    int d        = object.denominator;
+    
+    long lhs = (long)a * d;
+    long rhs = (long)c * b;
+    
+    return (lhs < rhs) ? -1 : ((lhs > rhs) ? +1 : 0);
 }
\ No newline at end of file
