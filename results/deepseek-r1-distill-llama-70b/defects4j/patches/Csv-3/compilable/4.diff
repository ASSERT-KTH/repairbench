diff --git a/tmp/25fb46c2-debe-439e-807e-d803140d036f_buggy.java b/tmp/14beec0b-a808-403b-a843-c2790dc4a111_fixed.java
index 1ad070d..205e055 100644
--- a/tmp/25fb46c2-debe-439e-807e-d803140d036f_buggy.java
+++ b/tmp/14beec0b-a808-403b-a843-c2790dc4a111_fixed.java
@@ -1,38 +1,28 @@
-    /**
-     * Handle an escape sequence.
-     * The current character must be the escape character.
-     * On return, the next character is available by calling {@link ExtendedBufferedReader#getLastChar()}
-     * on the input stream.
-     * 
-     * @return the unescaped character (as an int) or {@link END_OF_STREAM} if char following the escape is invalid. 
-     * @throws IOException if there is a problem reading the stream or the end of stream is detected: 
-     * the escape character is not allowed at end of strem
-     */
     int readEscape() throws IOException {
-        // the escape char has just been read (normally a backslash)
         final int c = in.read();
+        if (c == END_OF_STREAM) {
+            throw new IOException("EOF whilst processing escape sequence");
+        }
         switch (c) {
             case 'r':
                 return CR;
             case 'n':
                 return LF;
             case 't':
                 return TAB;
             case 'b':
                 return BACKSPACE;
             case 'f':
                 return FF;
+            case '\\':
+                return '\\';
             case CR:
             case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
+            case FF:
+            case TAB:
+            case BACKSPACE:
                 return c;
-        case END_OF_STREAM:
-            throw new IOException("EOF whilst processing escape sequence");
             default:
-            // Now check for meta-characters
-                return c;
-            // indicate unexpected char - available from in.getLastChar()
+                return c;  // Treat as literal when not a defined escape character
         }
     }
\ No newline at end of file
