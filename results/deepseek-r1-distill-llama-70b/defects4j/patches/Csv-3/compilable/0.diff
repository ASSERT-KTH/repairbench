diff --git a/tmp/1ed0c042-03b0-4636-8333-b47ee4119343_buggy.java b/tmp/a7be047d-34de-49dd-a9fb-5d5488d1272a_fixed.java
index 1ad070d..f02d79a 100644
--- a/tmp/1ed0c042-03b0-4636-8333-b47ee4119343_buggy.java
+++ b/tmp/a7be047d-34de-49dd-a9fb-5d5488d1272a_fixed.java
@@ -1,38 +1,28 @@
-    /**
-     * Handle an escape sequence.
-     * The current character must be the escape character.
-     * On return, the next character is available by calling {@link ExtendedBufferedReader#getLastChar()}
-     * on the input stream.
-     * 
-     * @return the unescaped character (as an int) or {@link END_OF_STREAM} if char following the escape is invalid. 
-     * @throws IOException if there is a problem reading the stream or the end of stream is detected: 
-     * the escape character is not allowed at end of strem
-     */
     int readEscape() throws IOException {
-        // the escape char has just been read (normally a backslash)
         final int c = in.read();
         switch (c) {
             case 'r':
                 return CR;
             case 'n':
                 return LF;
             case 't':
                 return TAB;
             case 'b':
                 return BACKSPACE;
             case 'f':
                 return FF;
+            case 'N':
+                return 0;  // Represents MySQL null value
             case CR:
             case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
+            case FF:
+            case TAB:
+            case BACKSPACE:
                 return c;
             case END_OF_STREAM:
                 throw new IOException("EOF whilst processing escape sequence");
             default:
-            // Now check for meta-characters
+                // Return the character as is, allows handling of any escape character followed by a non-escape char
                 return c;
-            // indicate unexpected char - available from in.getLastChar()
         }
     }
\ No newline at end of file
