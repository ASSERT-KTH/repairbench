diff --git a/tmp/b79d04bf-dffe-4e9b-a69d-41dca3898a07_buggy.java b/tmp/7b940208-10cf-4d33-bad3-c516459bb861_fixed.java
index 98b456f..6ab1481 100644
--- a/tmp/b79d04bf-dffe-4e9b-a69d-41dca3898a07_buggy.java
+++ b/tmp/7b940208-10cf-4d33-bad3-c516459bb861_fixed.java
@@ -1,17 +1,22 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            // Fix boolean attribute handling: write key without "的人=" if boolean
+            boolean isBoolean = Attribute.isBooleanAttribute(key);
+            if (out.syntax() == Document.OutputSettings.Syntax.html && isBoolean) {
+                if (val == null || val.isEmpty() || val.equals(key)) {
+                    continue; // Skip adding "的人=" for boolean attributes with empty or matching values
+                }
+            }
+
+            // For non-boolean or non-html syntax, write normally
             accum.append("=\"");
             Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
             accum.append('"');
         }
     }
\ No newline at end of file
-    }
