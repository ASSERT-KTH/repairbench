diff --git a/tmp/143cafcf-d2c1-45eb-9e42-e1b7d86aa440_buggy.java b/tmp/31079aa7-b12c-4d55-aec4-8a1312a14696_fixed.java
index 0dbce00..10c8636 100644
--- a/tmp/143cafcf-d2c1-45eb-9e42-e1b7d86aa440_buggy.java
+++ b/tmp/31079aa7-b12c-4d55-aec4-8a1312a14696_fixed.java
@@ -1,33 +1,43 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
-            	// Simple case first: serialize as numeric timestamp?
+            // Determine the shape based on the format or default to user config
             JsonFormat.Shape shape = format.getShape();
+            if (shape == null || shape == JsonFormat.Shape.ANY) {
+                // If shape is not set, check user config
+                boolean asTimestamp = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
+                if (asTimestamp) {
+                    return withFormat(Boolean.TRUE, null);
+                } else {
+                    return withFormat(Boolean.FALSE, null);
+                }
+            }
+
+            // Simple case: numeric timestamp?
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // Otherwise, handle string representation
             TimeZone tz = format.getTimeZone();
             final String pattern = format.hasPattern()
                             ? format.getPattern()
                             : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                             ? format.getLocale()
                             : serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
             if (tz == null) {
                 tz = serializers.getTimeZone();
             }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
     }
-        }
     return this;
 }
\ No newline at end of file
