diff --git a/tmp/2c232947-2891-4d38-b92b-1f7f60757dbd_buggy.java b/tmp/6a748d05-47f7-4bd4-93c1-7170682b8c51_fixed.java
index 43937f5..ab5a6af 100644
--- a/tmp/2c232947-2891-4d38-b92b-1f7f60757dbd_buggy.java
+++ b/tmp/6a748d05-47f7-4bd4-93c1-7170682b8c51_fixed.java
@@ -1,3 +1,34 @@
 private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    // Check if it's a function expression.
+    if (!NodeUtil.isFunctionExpression(n)) {
+        return false;
+    }
+
+    Node parent = n.getParent();
+    FunctionType fnType = n.getFunctionType();
+
+    // If it's a property getter or setter, it's not reducible.
+    if (parent instanceof PropertyDefinition && fnType == FunctionType.GETTER || fnType == FunctionType.SETTER) {
+        return false;
+    }
+
+    // Ensure it's not a method (as opposed to a function expression).
+    if (parent instanceof PropertyDefinitionMethods || parent instanceof PropertyDefinition) {
+        return false;
+    }
+
+    // Exclude constructor functions.
+    if (fnType == FunctionType.CONSTRUCTOR) {
+        return false;
+    }
+
+    // Check if the function is called immediately after definition.
+    if (parent instanceof ExprResult) {
+        ExprResult exprResult = (ExprResult) parent;
+        if (exprResult.get roadway() == n || exprResultConsumerSinglerun()) {
+            return false;
+        }
+    }
+
+    return true;
 }
\ No newline at end of file
