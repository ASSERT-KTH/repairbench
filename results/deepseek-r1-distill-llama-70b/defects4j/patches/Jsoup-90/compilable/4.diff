diff --git a/tmp/68dc97a9-1f3f-4819-8ba6-ddbe501b3fd6_buggy.java b/tmp/4673cef1-73eb-4c7e-bac2-df728e63497c_fixed.java
index 373b1e8..53aa38b 100644
--- a/tmp/68dc97a9-1f3f-4819-8ba6-ddbe501b3fd6_buggy.java
+++ b/tmp/4673cef1-73eb-4c7e-bac2-df728e63497c_fixed.java
@@ -1,37 +1,45 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
-            // BOM:
+    // Check for BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+            && (input[1] & 0xFF) == 0xBB
+            && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
-            int end;
-            for (int j = input.length; i < j; ++i) {
+    for (; i < input.length;) {
         int o = input[i];
         if ((o & 0x80) == 0) {
+            ++i;
             continue; // ASCII
         }
 
-                // UTF-8 leading:
+        // Determine the number of bytes in the UTF-8 sequence
+        int end;
         if ((o & 0xE0) == 0xC0) {
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
             end = i + 3;
         } else {
             return false;
         }
 
+        // Check if the remaining bytes are sufficient
+        if (end > input.length) {
+            return false;
+        }
 
-                while (i < end) {
-                    i++;
-                    o = input[i];
+        // Validate each following byte
+        for (int j = i + 1; j < end; j++) {
+            o = input[j];
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
+
+        i = end;
     }
     return true;
 }
\ No newline at end of file
