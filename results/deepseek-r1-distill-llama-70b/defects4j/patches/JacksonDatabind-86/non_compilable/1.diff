diff --git a/tmp/b7bb4872-b0b5-43cd-9428-020353df044b_buggy.java b/tmp/2734f969-6fac-4777-8161-a931674d6d2e_fixed.java
index e69de29..be07b43 100644
--- a/tmp/b7bb4872-b0b5-43cd-9428-020353df044b_buggy.java
+++ b/tmp/2734f969-6fac-4777-8161-a931674d6d2e_fixed.java
@@ -0,0 +1,39 @@
+package com.fasterxml.jackson.databind.type;
+
+import com.fasterxml.jackson.databind.JavaType;
+
+public class TypeFactory {
+    private final Map<Class<?>, JavaType> _constructedTypes = new HashMap<>();
+
+    public JavaType constructType(Class<?> clazz) {
+        JavaType type = findType(clazz);
+        if (type != null) {
+            return type;
+        }
+        
+        // Check if the class is already in the process of being constructed to prevent infinite loops
+        JavaType constructing = _currentlyConstructing.get();
+        if (constructing != null) {
+            if (_constructedTypes.containsKey(clazz)) {
+                return _constructedTypes.get(clazz);
+            }
+            return constructing;
+        }
+        _currentlyConstructing.set(constructing = _constructType(clazz));
+
+        JavaType constructedType = constructing;
+        if (constructedType != null) {
+            _constructedTypes.put(clazz, constructedType);
+            // After constructing, update any existing types that reference this class as their superclass
+            for (Map.Entry<Class<?>, JavaType> entry : _constructedTypes.entrySet()) {
+                JavaType t = entry.getValue();
+                if (clazz.isAssignableFrom(entry.getKey().getSuperclass())) {
+                    t.setSuperClass(constructedType);
+                }
+            }
+        }
+        return constructedType;
+    }
+
+    // ... other methods remain unchanged ...
+}
\ No newline at end of file
