diff --git a/tmp/f3b2ca66-da47-496a-a931-4bfaa66ec9d4_buggy.java b/tmp/d400db3f-ceec-4c38-ae2f-c7c750de5bf9_fixed.java
index 111ba5e..c12c61e 100644
--- a/tmp/f3b2ca66-da47-496a-a931-4bfaa66ec9d4_buggy.java
+++ b/tmp/d400db3f-ceec-4c38-ae2f-c7c750de5bf9_fixed.java
@@ -1,9 +1,51 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (isArray(o1) && isArray(o2)) {
+        return areArraysEqual(o1, o2);
     } else {
         return o1.equals(o2);
     }
 }
+
+private static boolean areArraysEqual(Object o1, Object o2) {
+    if (!o1.getClass().equals(o2.getClass())) {
+        return false;
+    }
+    int length = Array.getLength(o1);
+    if (length != Array.getLength(o2)) {
+        return false;
+    }
+    for (int i = 0; i < length; i++) {
+        Object e1 = Array.get(o1, i);
+        Object e2 = Array.get(o2, i);
+        if (e1 == null && e2 == null) {
+            continue;
+        }
+        if (e1 == null || e2 == null) {
+            return false;
+        }
+        if (areWrapperTypes(e1, e2)) {
+            if (e1 instanceof Number && e2 instanceof Number) {
+                return ((Number)e1).equals(e2);
+            }
+        }
+        if (!areEqual(e1, e2)) {
+            return false;
+        }
+    }
+    return true;
+}
+
+private static boolean areWrapperTypes(Object o1, Object o2) {
+    return (o1 instanceof Integer && o2 instanceof Integer)
+           || (o1 instanceof Double && o2 instanceof Double)
+           || (o1 instanceof Float && o2 instanceof Float)
+           || (o1 instanceof Long && o2 instanceof Long)
+           || (o1 instanceof Short && o2 instanceof Short)
+           || (o1 instanceof Byte && o2 instanceof Byte);
+}
+
+private static boolean isArray(Object o) {
+    return o != null && o.getClass().isArray();
+}
\ No newline at end of file
