diff --git a/tmp/6b1b1ad8-7902-4265-b903-9ef3ad211cd9_buggy.java b/tmp/a3aafa77-8f2d-4125-a6f0-f6e446db6435_fixed.java
index 0313249..5cad0d2 100644
--- a/tmp/6b1b1ad8-7902-4265-b903-9ef3ad211cd9_buggy.java
+++ b/tmp/a3aafa77-8f2d-4125-a6f0-f6e446db6435_fixed.java
@@ -1,32 +1,29 @@
-    /**
-     * Specialized method for removing specified existing entry.
-     * NOTE: entry MUST exist, otherwise an exception is thrown.
-     */
 public void remove(SettableBeanProperty propToRm)
 {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
     boolean found = false;
 
     for (int i = 1, end = _hashArea.length; i < end; i += 2) {
         SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
         if (prop == null) {
             continue;
         }
         if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+            if (key.equals(prop.getName())) {
+                found = true;
+            } else if (_hashCode.equals(prop.getValueInstantiator().getValueInstantiatorApi().getHash())) {
+                found = true;
+            }
             if (found) {
-                    // need to leave a hole here
                 _propsInOrder[_findFromOrdered(prop)] = null;
                 continue;
             }
         }
         props.add(prop);
     }
     if (!found) {
         throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
     }
     init(props);
 }
\ No newline at end of file
