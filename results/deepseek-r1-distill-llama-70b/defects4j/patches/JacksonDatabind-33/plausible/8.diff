diff --git a/tmp/991f86cb-4b4d-4eec-b7fb-1dd01768d952_buggy.java b/tmp/8d334f09-747c-40f3-b126-258654ec2364_fixed.java
index 3cb9232..fe1b030 100644
--- a/tmp/991f86cb-4b4d-4eec-b7fb-1dd01768d952_buggy.java
+++ b/tmp/8d334f09-747c-40f3-b126-258654ec2364_fixed.java
@@ -1,26 +1,34 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
+public PropertyName findNameForSerialization(Annotated a) {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
+        } else if (/* Check if the annotation is present */ 
+                 _hasAnnotation(a, JsonUnwrapped.class)) {
+            // For unwrapped properties, we need to get the name from possible JsonGetter or JsonProperty, or use default
+            // Let's attempt to find any of these that might exist on the annotated element
+            JsonGetter getter = _findAnnotation(a, JsonGetter.class);
+            if (getter != null) {
+                name = getter.value();
+            } else {
+                JsonProperty prop = _findAnnotation(a, JsonProperty.class);
+                if (prop != null) {
+                    name = prop.value();
+                }
+            }
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
         } else {
             return null;
         }
     }
     return PropertyName.construct(name);
 }
\ No newline at end of file
