diff --git a/tmp/647d0290-0ee4-4256-95f2-25bea092c69a_buggy.java b/tmp/3532a7d5-2efc-472f-8de8-848958a7fa44_fixed.java
index 21f64c6..a2dd45b 100644
--- a/tmp/647d0290-0ee4-4256-95f2-25bea092c69a_buggy.java
+++ b/tmp/3532a7d5-2efc-472f-8de8-848958a7fa44_fixed.java
@@ -1,23 +1,31 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
+        if (seq.length() == 0)
+            return -1;
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+            // Skip to the next occurrence of startChar
+            while (offset < length && input[offset] != startChar) {
+                offset++;
+            }
+            if (offset >= length) {
+                break; // No more startChar occurrences possible
+            }
+            // Check if the remaining input is sufficient to match the entire sequence
+            int remaining = length - offset - 1;
+            if (remaining < seq.length() - 1) {
+                continue; // Not enough characters left
+            }
+            // Check each subsequent character
             int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
+            int j = 1;
+            for (; j < seq.length(); j++, i++) {
+                if (i >= length || input[i] != seq.charAt(j)) {
+                    break;
+                }
+            }
+            if (j == seq.length()) {
+                return offset - pos; // Found match
             }
         }
         return -1;
     }
\ No newline at end of file
