diff --git a/tmp/a361fefe-f5fe-4711-a4cc-dc8b22879344_buggy.java b/tmp/c055603c-3563-4731-bc04-27c024660641_fixed.java
index c9da1b7..c3b2650 100644
--- a/tmp/a361fefe-f5fe-4711-a4cc-dc8b22879344_buggy.java
+++ b/tmp/c055603c-3563-4731-bc04-27c024660641_fixed.java
@@ -1,33 +1,28 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
+    
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+        if ((_explicitCreators & mask) != 0) {
             if (!explicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
         }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+        // Check if types have same root class and same number of parameters
+        Class<?> newType = newOne.getClass();
+        Class<?> oldType = oldOne.getClass();
+        if (newType.getTypeParameters().length == oldType.getTypeParameters().length &&
+            newType.getRawType().equals(oldType.getRawType()))
+        {
             throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex] 
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+                    + " creators: already had " + (oldOne.explicit ? "explicitly " : "") 
+                    + "marked " + oldOne + ", encountered " + newOne);
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
