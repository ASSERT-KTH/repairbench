diff --git a/tmp/48c619f9-1021-4b7a-8c05-fe492a707f69_buggy.java b/tmp/b7c8e89b-d1bc-4c7f-8085-611534675350_fixed.java
index c9da1b7..8f93a69 100644
--- a/tmp/48c619f9-1021-4b7a-8c05-fe492a707f69_buggy.java
+++ b/tmp/b7c8e89b-d1bc-4c7f-8085-611534675350_fixed.java
@@ -1,33 +1,20 @@
-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
-    {
+protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit) {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
+
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
-                    return;
-                }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
-            }
-        }
+        if ((_explicitCreators & mask) != 0) { // oldOne is explicitly marked
             if (explicit) {
-            _explicitCreators |= mask;
+                throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex] 
+                        + " creators: already had explicitly marked " + oldOne 
+                        + ", encountered " + newOne);
+            } else {
+                return; // newOne is not explicit, skip
+            }
+        } else if (explicit) {
+            _explicitCreators |= mask; // newOne is explicit, update the flag
+        }
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
