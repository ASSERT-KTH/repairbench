diff --git a/tmp/0bcf80d8-1dec-47c2-974f-299ca2a2c767_buggy.java b/tmp/b1e77c63-a957-44bb-877c-32de866289d5_fixed.java
index e4d90e7..ae8f2d9 100644
--- a/tmp/0bcf80d8-1dec-47c2-974f-299ca2a2c767_buggy.java
+++ b/tmp/b1e77c63-a957-44bb-877c-32de866289d5_fixed.java
@@ -1,45 +1,64 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
   } else if (prettyPrint) {
-      // Don't pretty print recursively.
     prettyPrint = false;
 
-      // Use a tree set so that the properties are sorted.
+    try {
       Set<String> propertyNames = Sets.newTreeSet();
+      int count = 0;
       for (ObjectType current = this;
-           current != null && !current.isNativeObjectType() &&
-               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
+           current != null && !current.isNativeObjectType();
            current = current.getImplicitPrototype()) {
-        propertyNames.addAll(current.getOwnPropertyNames());
+        for (String property : current.getOwnPropertyNames()) {
+          if (count >= MAX_PRETTY_PRINTED_PROPERTIES) {
+            break;
+          }
+          propertyNames.add(property);
+          count++;
+        }
       }
 
       StringBuilder sb = new StringBuilder();
       sb.append("{");
 
+      boolean truncated = false;
       int i = 0;
       for (String property : propertyNames) {
         if (i > 0) {
           sb.append(", ");
         }
 
         sb.append(property);
         sb.append(": ");
-        sb.append(getPropertyType(property).toString());
+        Object.peType type = getPropertyType(property);
+        sb.append(type.toString());
 
-        ++i;
-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+        i++;
+        if (i == MAX_PRETTY_PRINTED_PROPERTIES - 1) {
+          // Check if there are more properties not added yet
+          if (count > MAX_PRETTY_PRINTED_PROPERTIES - 1) {
             sb.append(", ...");
+            truncated = true;
+          }
           break;
         }
       }
 
+      if (!truncated && propertyNames.size() >= MAX_PRETTY_PRINTED_PROPERTIES) {
+        sb.append("...");
+      }
+
       sb.append("}");
-
-      prettyPrint = true;
       return sb.toString();
+    } finally {
+      prettyPrint = true;
+    }
   } else {
+    if (forAnnotations) {
+      return "{...}";
+    }
     return "{...}";
   }
 }
\ No newline at end of file
