diff --git a/tmp/414a65cc-7e70-42db-9d59-47c6c17a1faa_buggy.java b/tmp/4b5c05dc-d2e4-434d-a244-db6be1461b88_fixed.java
index e4d90e7..088c9da 100644
--- a/tmp/414a65cc-7e70-42db-9d59-47c6c17a1faa_buggy.java
+++ b/tmp/4b5c05dc-d2e4-434d-a244-db6be1461b88_fixed.java
@@ -1,45 +1,70 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
         return getReferenceName();
+    } else if (forAnnotations) {
+        // For annotations, do not truncate, include all properties.
+        Set<String> propertyNames = Sets.newTreeSet();
+        for (ObjectType current = this;
+             current != null && !current.isNativeObjectType();
+             current = current.getImplicitPrototype()) {
+            propertyNames.addAll(current.getOwnPropertyNames());
+        }
+
+        StringBuilder sb = new StringBuilder();
+        sb.append("{");
+        boolean first = true;
+        for (String property : propertyNames) {
+            if (!first) {
+                sb.append(", ");
+            } else {
+                first = false;
+            }
+            sb.append(property).append(": ").append(getPropertyType(property).toString());
+        }
+        sb.append("}");
+        return sb.toString();
     } else if (prettyPrint) {
         // Don't pretty print recursively.
+        boolean originalPrettyPrint = prettyPrint;
+        try {
             prettyPrint = false;
 
             // Use a tree set so that the properties are sorted.
             Set<String> propertyNames = Sets.newTreeSet();
             for (ObjectType current = this;
                  current != null && !current.isNativeObjectType() &&
                      propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
                  current = current.getImplicitPrototype()) {
                 propertyNames.addAll(current.getOwnPropertyNames());
             }
 
             StringBuilder sb = new StringBuilder();
             sb.append("{");
 
             int i = 0;
             for (String property : propertyNames) {
                 if (i > 0) {
                     sb.append(", ");
                 }
 
                 sb.append(property);
                 sb.append(": ");
                 sb.append(getPropertyType(property).toString());
 
                 ++i;
                 if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
                     sb.append(", ...");
                     break;
                 }
             }
 
             sb.append("}");
-
-      prettyPrint = true;
             return sb.toString();
+        } finally {
+            prettyPrint = originalPrettyPrint;
+        }
     } else {
         return "{...}";
     }
 }
\ No newline at end of file
