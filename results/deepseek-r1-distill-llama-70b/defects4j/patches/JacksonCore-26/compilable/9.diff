diff --git a/tmp/e40e936b-d800-4956-8c3b-db7c84c065bc_buggy.java b/tmp/51fe22fc-b754-4e48-bacb-ca2199ab6b9e_fixed.java
index 0722547..9ed5849 100644
--- a/tmp/e40e936b-d800-4956-8c3b-db7c84c065bc_buggy.java
+++ b/tmp/51fe22fc-b754-4e48-bacb-ca2199ab6b9e_fixed.java
@@ -1,26 +1,25 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
-        // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
-        // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
+
+        // Update pointers
         _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        // Calculate the new row start based on how much of the previous buffer was processed
+        int totalProcessed = _inputEnd - _currInputRowStart;
+        _currInputRowStart = start + totalProcessed;
 
-        // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
     }
\ No newline at end of file
