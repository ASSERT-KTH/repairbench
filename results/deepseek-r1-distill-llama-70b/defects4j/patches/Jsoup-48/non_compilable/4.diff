diff --git a/tmp/dddd19ee-8d30-4dd9-9032-94a542aafba8_buggy.java b/tmp/f8065a04-463f-4310-8311-18c4e1bbb9a3_fixed.java
index bcd80aa..11b978c 100644
--- a/tmp/dddd19ee-8d30-4dd9-9032-94a542aafba8_buggy.java
+++ b/tmp/f8065a04-463f-4310-8311-18c4e1bbb9a3_fixed.java
@@ -1,25 +1,32 @@
 void processResponseHeaders(Map<String, List<String>> resHeaders) {
     for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
         String name = entry.getKey();
         if (name == null)
-                    continue; // http/1.1 line
+            continue;
 
         List<String> values = entry.getValue();
         if (name.equalsIgnoreCase("Set-Cookie")) {
             for (String value : values) {
                 if (value == null)
                     continue;
                 TokenQueue cd = new TokenQueue(value);
                 String cookieName = cd.chompTo("=").trim();
                 String cookieVal = cd.consumeTo(";").trim();
                 // ignores path, date, domain, validateTLSCertificates et al. req'd?
-                        // name not blank, value not null
-                        if (cookieName.length() > 0)
+                if (!cookieName.isEmpty())
                     cookie(cookieName, cookieVal);
             }
-                } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
-                    if (!values.isEmpty())
-                        header(name, values.get(0));
+        } else {
+            List<String> nonNullValues = new ArrayList<>();
+            for (String value : values) {
+                if (value != null) {
+                    nonNullValues.add(value);
+                }
+            }
+            if (!nonNullValues.isEmpty()) {
+                String combinedValue = String.join(", ", nonNullValues);
+                header(name, combinedValue);
+            }
         }
     }
 }
\ No newline at end of file
