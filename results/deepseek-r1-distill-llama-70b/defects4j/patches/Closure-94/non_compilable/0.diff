diff --git a/tmp/0a2d4bfe-5b72-4c45-be81-4b62a0aa888e_buggy.java b/tmp/a2c7ee77-a5b3-4db2-9a6f-f3c39d6753bf_fixed.java
index 66e3d01..1853ed4 100644
--- a/tmp/0a2d4bfe-5b72-4c45-be81-4b62a0aa888e_buggy.java
+++ b/tmp/a2c7ee77-a5b3-4db2-9a6f-f3c39d6753bf_fixed.java
@@ -1,34 +1,38 @@
-  /**
-   * Determines whether the given value may be assigned to a define.
-   *
-   * @param val The value being assigned.
-   * @param defines The list of names of existing defines.
-   */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
         case Token.STRING:
         case Token.NUMBER:
         case Token.TRUE:
         case Token.FALSE:
+        case Token.NULL:
+        case Token.UNDEFINED:
             return true;
 
-      // Binary operators are only valid if both children are valid.
+        case Token.NOT:
+        case Token.NEG:
+            return isValidDefineValue(val.getFirstChild(), defines);
+
         case Token.BITAND:
         case Token.BITNOT:
         case Token.BITOR:
         case Token.BITXOR:
+        case Token.PLUS:
+        case Token.LOGICAL_AND:
+        case Token.LOGICAL_OR:
+            if (val.hasTwoChildren()) {
+                return isValidDefineValue(val.getFirstChild(), defines) &&
+                       isValidDefineValue(val.getSecondChild(), defines);
+            }
+            return false;
 
-      // Uniary operators are valid if the child is valid.
-      case Token.NOT:
-      case Token.NEG:
-        return isValidDefineValue(val.getFirstChild(), defines);
-
-      // Names are valid if and only if they are defines themselves.
         case Token.NAME:
         case Token.GETPROP:
             if (val.isQualifiedName()) {
                 return defines.contains(val.getQualifiedName());
             }
-    }
             return false;
+
+        default:
+            return false;
+    }
 }
\ No newline at end of file
