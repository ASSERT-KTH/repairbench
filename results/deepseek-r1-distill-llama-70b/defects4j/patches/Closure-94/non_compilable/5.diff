diff --git a/tmp/488818c3-cff8-4ac7-97c2-30ac7ca38699_buggy.java b/tmp/69d58dae-70b8-40f8-8fd5-d2fb7ebc2998_fixed.java
index 66e3d01..8d80ff4 100644
--- a/tmp/488818c3-cff8-4ac7-97c2-30ac7ca38699_buggy.java
+++ b/tmp/69d58dae-70b8-40f8-8fd5-d2fb7ebc2998_fixed.java
@@ -1,34 +1,39 @@
-  /**
-   * Determines whether the given value may be assigned to a define.
-   *
-   * @param val The value being assigned.
-   * @param defines The list of names of existing defines.
-   */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
-      // Binary operators are only valid if both children are valid.
+      // Binary operators are invalid for define values
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
+      case Token.ADD:
+      case Token.SUB:
+      case Token.MUL:
+      case Token.DIV:
+      case Token.MOD:
+      case Token.POW:
+      case Token.SHR:
+      case Token.SHL:
+      case Token.BITXOR:
+        return false;
 
-      // Uniary operators are valid if the child is valid.
+      // Unary operators are valid only if the child is a literal
       case Token.NOT:
       case Token.NEG:
-        return isValidDefineValue(val.getFirstChild(), defines);
+        return val.getFirstChild().getType() == Token.STRING ||
+               val.getFirstChild().getType() == Token.NUMBER ||
+               val.getFirstChild().getType() == Token.TRUE ||
+               val.getFirstChild().getType() == Token.FALSE;
 
-      // Names are valid if and only if they are defines themselves.
+      // Names and getprop are valid if they are defines
       case Token.NAME:
       case Token.GETPROP:
-        if (val.isQualifiedName()) {
-          return defines.contains(val.getQualifiedName());
-        }
+        return val.isQualifiedName() && defines.contains(val.getQualifiedName());
     }
     return false;
   }
\ No newline at end of file
