diff --git a/tmp/37d1321a-01f0-470a-b6fb-d1f9afd7c267_buggy.java b/tmp/cf6c206b-a5f1-4f3b-ae32-4369e3646196_fixed.java
index 1530b34..9a88cdf 100644
--- a/tmp/37d1321a-01f0-470a-b6fb-d1f9afd7c267_buggy.java
+++ b/tmp/cf6c206b-a5f1-4f3b-ae32-4369e3646196_fixed.java
@@ -1,23 +1,45 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
+              // Check if the parameter is already declared in the current scope
+              if (isVarDeclaredInScope(astParameter.getQualifiedName(), functionNode)) {
+                reportDuplicateDeclaration(astParameter);
+              }
               defineSlot(astParameter, functionNode,
                   jsDocParameter.getJSType(), true);
               jsDocParameter = jsDocParameter.getNext();
             } else {
+              if (isVarDeclaredInScope(astParameter.getQualifiedName(), functionNode)) {
+                reportDuplicateDeclaration(astParameter);
+              }
               defineSlot(astParameter, functionNode, null, true);
             }
           }
         }
       }
     } // end declareArguments
+
+    /**
+     * Checks if a variable is already declared in the current function scope.
+     */
+    private boolean isVarDeclaredInScope(String varName, Node functionNode) {
+      // Implementation to check if varName is already declared in the scope of functionNode
+      // Return true if already declared, false otherwise
+    }
+
+    /**
+     * Reports a duplicate variable declaration error.
+     */
+    private void reportDuplicateDeclaration(Node node) {
+      // Implementation to report the duplicate declaration error
+    }
\ No newline at end of file
