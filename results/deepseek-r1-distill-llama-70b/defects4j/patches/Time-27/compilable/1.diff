diff --git a/tmp/80d93a8f-2fe2-479d-9944-8c3a70eaf8dd_buggy.java b/tmp/7dca6d62-f973-4f84-abb8-9bee515d3050_fixed.java
index ec6c9ee..d920591 100644
--- a/tmp/80d93a8f-2fe2-479d-9944-8c3a70eaf8dd_buggy.java
+++ b/tmp/7dca6d62-f973-4f84-abb8-9bee515d3050_fixed.java
@@ -1,21 +1,27 @@
-    //-----------------------------------------------------------------------
+@SuppressWarnings("unchecked")
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+        PeriodFormatter f;
+        if (size > 2) { // Ensure that we have elements after the separator
+            f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+        } else {
+            // If there are no elements after the separator, create an empty formatter
+            f = new PeriodFormatter(sep, sep);
+        }
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
