diff --git a/tmp/532adb1b-a33e-4abe-9748-efc072501a92_buggy.java b/tmp/c1b910c6-e4f5-4f74-8b63-61f42aa42bd6_fixed.java
index ec6c9ee..a590055 100644
--- a/tmp/532adb1b-a33e-4abe-9748-efc072501a92_buggy.java
+++ b/tmp/c1b910c6-e4f5-4f74-8b63-61f42aa42bd6_fixed.java
@@ -1,21 +1,22 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+            int start = 1;  // Fixed: Start from index 1 to include the element after the separator
+            PeriodFormatter f = toFormatter(elementPairs.subList(start, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
