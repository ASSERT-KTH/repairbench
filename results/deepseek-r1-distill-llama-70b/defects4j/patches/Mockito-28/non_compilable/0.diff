diff --git a/tmp/dfbce9a6-9be9-412f-ac60-80f8579045f1_buggy.java b/tmp/45aca90a-3e4d-40c2-8256-ce42527935ff_fixed.java
index fa6828a..783816c 100644
--- a/tmp/dfbce9a6-9be9-412f-ac60-80f8579045f1_buggy.java
+++ b/tmp/45aca90a-3e4d-40c2-8256-ce42527935ff_fixed.java
@@ -1,5 +1,19 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
-        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+    List<Field> applicableFields = collectApplicableFields(awaitingInjectionClazz, fieldInstance.getClass());
+    applicableFields.sort(Comparator.comparing(f -> f.getType().equals(fieldInstance.getClass()) ? 0 : 1));
+    for (Field field : applicableFields) {
+        if (mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject()) {
+            break;
         }
     }
+}
+
+private List<Field> collectApplicableFields(Class<?> clazz, Class<?> mockType) {
+    List<Field> fields = new ArrayList<>();
+    do {
+        fields.addAll(Arrays.stream(clazz.getDeclaredFields())
+                .filter(field -> mockType.isAssignableFrom(field.getType()))
+                .collect(Collectors.toList()));
+    } while ((clazz = clazz.getSuperclass()) != Object.class);
+    return fields;
+}
\ No newline at end of file
