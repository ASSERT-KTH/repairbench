diff --git a/tmp/b23ff750-3676-4585-b4b6-ae63cf3c6c69_buggy.java b/tmp/5b945438-8ed1-4f94-9969-e3f084d0e937_fixed.java
index fa6828a..4874e00 100644
--- a/tmp/b23ff750-3676-4585-b4b6-ae63cf3c6c69_buggy.java
+++ b/tmp/5b945438-8ed1-4f94-9969-e3f084d0e937_fixed.java
@@ -1,5 +1,23 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
+    // First, process fields where the type exactly matches a mock type
+    List<Field> exactTypeFields = new ArrayList<>();
+    List<Field> ancestorTypeFields = new ArrayList<>();
+
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
+        if (fieldqsTypeMatchesExactly(mocks, field.getType())) {
+            exactTypeFields.add(field);
+        } else if (fieldTypeIsAncestorOfMock(mocks, field.getType())) {
+            ancestorTypeFields.add(field);
+        }
+    }
+
+    // First inject exact type matches
+    for (Field field : exactTypeFields) {
+        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+    }
+
+    // Then inject ancestor types if no exact matches were found
+    for (Field field : ancestorTypeFields) {
         mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
     }
 }
\ No newline at end of file
