diff --git a/tmp/929c8610-ca15-4b4c-a001-04129c937582_buggy.java b/tmp/52c67c7e-69eb-45e4-b4fd-0081365d830c_fixed.java
index 19fe1b4..df5e8d9 100644
--- a/tmp/929c8610-ca15-4b4c-a001-04129c937582_buggy.java
+++ b/tmp/52c67c7e-69eb-45e4-b4fd-0081365d830c_fixed.java
@@ -1,17 +1,59 @@
     public static boolean isJSIdentifier(String s) {
       int length = s.length();
+      if (length == 0) {
+        return false;
+      }
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+      if (!isJSIdentifierStart(s.charAt(0))) {
         return false;
       }
 
       for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        if (!isJSIdentifierPart(s.charAt(i))) {
           return false;
         }
       }
 
       return true;
     }
+
+    private static boolean isJSIdentifierStart(int c) {
+      return c == '_' || c == '$' ||
+          Character.isLetter(c) || isIdentifierStartUnicode(c);
+    }
+
+    private static boolean isJSIdentifierPart(int c) {
+      return c == '_' || c == '$' || Character.isLetterOrDigit(c) || isIdentifierPartUnicode(c);
+    }
+
+    private static boolean isIdentifierStartUnicode(int c) {
+      // Check for Unicode characters that can start an identifier
+      if (c < 0x10000) {
+        return false; // Handled by Character.isLetter()
+      }
+      // Using data from Unicode Standard Annex #31
+      return isIdentifierStartUnicodeAux(c);
+    }
+
+    private static boolean isIdentifierPartUnicode(int c) {
+      // Check for Unicode characters that can be part of an identifier
+      if (c < 0x10000) {
+        return false; // Handled by Character.isLetterOrDigit()
+      }
+      // Using data from Unicode Standard Annex #31
+      return isIdentifierPartUnicodeAux(c);
+    }
+
+    private static boolean isIdentifierStartUnicodeAux(int c) {
+      if (c >= 0x10000 && c <= 0x10FFFF) {
+        return Character.isIdentifierStart(c);
+      }
+      return false;
+    }
+
+    private static boolean isIdentifierPartUnicodeAux(int c) {
+      if (c >= 0x10000 && c <= 0x10FFFF) {
+        return Character.isIdentifierPart(c);
+      }
+      return false;
+    }
\ No newline at end of file
