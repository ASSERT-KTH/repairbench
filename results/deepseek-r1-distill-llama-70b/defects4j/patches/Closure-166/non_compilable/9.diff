diff --git a/tmp/830740e6-335f-4d33-8219-9cb395d1aa0f_buggy.java b/tmp/16074ad8-338a-4cbc-beb4-81fc90136aa7_fixed.java
index 5f96616..da31675 100644
--- a/tmp/830740e6-335f-4d33-8219-9cb395d1aa0f_buggy.java
+++ b/tmp/16074ad8-338a-4cbc-beb4-81fc90136aa7_fixed.java
@@ -1,20 +1,19 @@
 @Override
 public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
         return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
         matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint.isUnionType()) {
+        // Check each constituent of the union type
+        for (JSType constituent : constraint.toUnionType().getDottedTypes()) {
+            if (constituent.isRecordType()) {
+                matchRecordTypeConstraint(constituent.toObjectType());
+            }
+        }
     }
 }
\ No newline at end of file
