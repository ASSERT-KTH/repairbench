diff --git a/tmp/183bd2ed-650e-46e5-a0df-55717eb4c719_buggy.java b/tmp/7e604a91-3a49-4d62-ad3b-82bc8402b7f1_fixed.java
index 43fb5fd..1f1f742 100644
--- a/tmp/183bd2ed-650e-46e5-a0df-55717eb4c719_buggy.java
+++ b/tmp/7e604a91-3a49-4d62-ad3b-82bc8402b7f1_fixed.java
@@ -1,55 +1,33 @@
-    /**
-     * <p>Breaks <code>token</code> into its constituent parts
-     * using the following algorithm.
-     * <ul>
-     *  <li>ignore the first character ("<b>-</b>")</li>
-     *  <li>foreach remaining character check if an {@link Option}
-     *  exists with that id.</li>
-     *  <li>if an {@link Option} does exist then add that character
-     *  prepended with "<b>-</b>" to the list of processed tokens.</li>
-     *  <li>if the {@link Option} can have an argument value and there 
-     *  are remaining characters in the token then add the remaining 
-     *  characters as a token to the list of processed tokens.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> 
-     *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
-     *  "<b>--</b>" followed by the remaining characters and also 
-     *  the remaining tokens directly to the processed tokens list.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
-     *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
-     *  character prepended with "<b>-</b>".</li>
-     * </ul>
-     * </p>
-     *
-     * @param token The current token to be <b>burst</b>
-     * @param stopAtNonOption Specifies whether to stop processing
-     * at the first non-Option encountered.
-     */
-    protected void burstToken(String token, boolean stopAtNonOption)
-    {
-        for (int i = 1; i < token.length(); i++)
-        {
-            String ch = String.valueOf(token.charAt(i));
+protected void burstToken(String token, boolean stopAtNonOption) {
+    String remaining = token;
+    while (remaining.length() > 0 && remaining.charAt(0) != '-') {
+        for (int i = 1; i < remaining.length(); i++) {
+            String ch = String.valueOf(remaining.charAt(i));
 
-            if (options.hasOption(ch))
-            {
+            if (options.hasOption(ch)) {
                 tokens.add("-" + ch);
                 currentOption = options.getOption(ch);
 
-                if (currentOption.hasArg() && (token.length() != (i + 1)))
-                {
-                    tokens.add(token.substring(i + 1));
-
+                if (currentOption.hasArg() && (i + 1) < remaining.length()) {
+                    tokens.add(remaining.substring(i + 1));
+                    remaining = "";
                     break;
                 }
+                remaining = remaining.substring(i + 1);
+                break;
+            } else if (stopAtNonOption) {
+                process(remaining.substring(i));
+                remaining = "";
+                break;
+            } else {
+                tokens.add(remaining);
+                remaining = "";
+                break;
             }
-            else if (stopAtNonOption)
-            {
-                process(token.substring(i));
         }
-            else
-            {
-                tokens.add(token);
-                break;
+        if (!remaining.startsWith("-")) {
+            tokens.add(remaining);
+            remaining = "";
         }
     }
 }
\ No newline at end of file
