diff --git a/tmp/32a4fd6f-c4d3-43d5-bf66-fcbe55f11d66_buggy.java b/tmp/239de50d-eb03-42d8-994f-e4d5c3e71476_fixed.java
index 9c4508f..c10d7c5 100644
--- a/tmp/32a4fd6f-c4d3-43d5-bf66-fcbe55f11d66_buggy.java
+++ b/tmp/239de50d-eb03-42d8-994f-e4d5c3e71476_fixed.java
@@ -1,13 +1,22 @@
-    public char[] getTextBuffer()
-    {
-        // Are we just using shared input buffer?
-        if (_inputStart >= 0) return _inputBuffer;
-        if (_resultArray != null)  return _resultArray;
+public char[] getTextBuffer() {
+    // Check if the buffer is empty
+    if (_inputStart >= 0) {
+        return _inputBuffer;
+    }
+    if (_resultArray != null) {
+        return _resultArray;
+    }
     if (_resultString != null) {
         return (_resultArray = _resultString.toCharArray());
     }
-        // Nope; but does it fit in just one segment?
-        if (!_hasSegments)  return _currentSegment;
-        // Nope, need to have/create a non-segmented array and return it
+    // Handle empty case by returning an empty array
+    if (_currentSegment == null || _currentSegment.length == 0) {
+        return new char[0];
+    }
+    // Ensure segments are handled correctly
+    if (!_hasSegments) {
+        return _currentSegment;
+    }
+    // Return the concatenated segments as an array
     return contentsAsArray();
 }
\ No newline at end of file
