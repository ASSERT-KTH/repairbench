diff --git a/tmp/da0a59f8-883b-48b0-99f6-7fadc03d820c_buggy.java b/tmp/8079397f-50f3-44bb-955b-9745f264a0a3_fixed.java
index c53ca2a..c7c9517 100644
--- a/tmp/da0a59f8-883b-48b0-99f6-7fadc03d820c_buggy.java
+++ b/tmp/8079397f-50f3-44bb-955b-9745f264a0a3_fixed.java
@@ -1,54 +1,60 @@
-    /** {@inheritDoc} */
     @Override
     protected void computeGeometricalProperties() {
 
         final Vector2D[][] v = getVertices();
 
         if (v.length == 0) {
             final BSPTree<Euclidean2D> tree = getTree(false);
-            if ((Boolean) tree.getAttribute()) {
-                // the instance covers the whole space
-                setSize(Double.POSITIVE_INFINITY);
-                setBarycenter(Vector2D.NaN);
-            } else {
+            final Object attribute = tree.getAttribute();
+            if (attribute instanceof BoundaryAttribute<?>) {
+                final BoundaryAttribute<?> attr = (BoundaryAttribute<?>) attribute;
+                final Region.Location inside = attr.getCut().getPlusInside();
+                final Region.Location outside = attr.getCut().getMinusInside();
+                if (inside == Region.Location.INSIDE && outside == Region.Location.INSIDE) {
+                    // the instance is empty
                     setSize(0);
                     setBarycenter(new Vector2D(0, 0));
+                } else if (inside == Region.Location.INSIDE && outside == Region.Location.OUTSIDE) {
+                    // the instance covers the whole space
+                    setSize(Double.POSITIVE_INFINITY);
+                    setBarycenter(Vector2D.NaN);
+                }
             }
         } else if (v[0][0] == null) {
             // there is at least one open-loop: the polygon is infinite
             setSize(Double.POSITIVE_INFINITY);
             setBarycenter(Vector2D.NaN);
         } else {
             // all loops are closed, we compute some integrals around the shape
 
             double sum  = 0;
             double sumX = 0;
             double sumY = 0;
 
             for (Vector2D[] loop : v) {
                 double x1 = loop[loop.length - 1].getX();
                 double y1 = loop[loop.length - 1].getY();
                 for (final Vector2D point : loop) {
                     final double x0 = x1;
                     final double y0 = y1;
                     x1 = point.getX();
                     y1 = point.getY();
                     final double factor = x0 * y1 - y0 * x1;
                     sum  += factor;
                     sumX += factor * (x0 + x1);
                     sumY += factor * (y0 + y1);
                 }
             }
 
             if (sum < 0) {
                 // the polygon as a finite outside surrounded by an infinite inside
                 setSize(Double.POSITIVE_INFINITY);
                 setBarycenter(Vector2D.NaN);
             } else {
                 setSize(sum / 2);
                 setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum)));
             }
 
         }
 
     }
\ No newline at end of file
