diff --git a/tmp/98b900ac-2417-4606-90d5-02d068605abe_buggy.java b/tmp/95b42c07-88eb-40df-b717-90a2c0be5cff_fixed.java
index 81a6e8b..0f34d07 100644
--- a/tmp/98b900ac-2417-4606-90d5-02d068605abe_buggy.java
+++ b/tmp/95b42c07-88eb-40df-b717-90a2c0be5cff_fixed.java
@@ -1,19 +1,30 @@
     /**
      * Tells if the token looks like a short option.
      *
      * @param token
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
+        // Check if the token starts with a hyphen and has more than one character
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        // Extract the part of the token after the hyphen, excluding any =value part
+        String optionsPart = token.substring(1);
+        int eqPos = optionsPart.indexOf('=');
+        String optNames = (eqPos == -1) ? optionsPart : optionsPart.substring(0, eqPos);
+
+        // Check each individual option character
+        for (int i = 0; i < optNames.length(); i++)
+        {
+            String opt = optNames.substring(i, i + 1);
+            if (!options.hasShortOption(opt))
+            {
+                return false;
+            }
+        }
+
+        return true;
     }
\ No newline at end of file
