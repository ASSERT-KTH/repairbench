diff --git a/tmp/c837b694-315a-4164-8f2f-9a2d5becbff2_buggy.java b/tmp/8e7c2659-255a-43ed-9228-dcfd1fbb4c33_fixed.java
index 6c0aa19..49f7b22 100644
--- a/tmp/c837b694-315a-4164-8f2f-9a2d5becbff2_buggy.java
+++ b/tmp/8e7c2659-255a-43ed-9228-dcfd1fbb4c33_fixed.java
@@ -1,20 +1,21 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
+        super(inputStream);
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
         in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
+        this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
+        closed = false; // Fixed the initialization of the 'closed' flag
         // haven't read anything so far
     }
\ No newline at end of file
