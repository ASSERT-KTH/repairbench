diff --git a/tmp/a60363bb-22c9-46b5-a6b9-d611624b11d4_buggy.java b/tmp/b4b2e0b9-c54d-4c8f-9a56-3372b84bda08_fixed.java
index 6c0aa19..8b75c92 100644
--- a/tmp/a60363bb-22c9-46b5-a6b9-d611624b11d4_buggy.java
+++ b/tmp/b4b2e0b9-c54d-4c8f-9a56-3372b84bda08_fixed.java
@@ -1,20 +1,14 @@
-    /**
-     * @param encoding the encoding to use for file names, use null
-     * for the platform's default encoding
-     * @param useUnicodeExtraFields whether to use InfoZIP Unicode
-     * Extra Fields (if present) to set the file names.
-     * @param allowStoredEntriesWithDataDescriptor whether the stream
-     * will try to read STORED entries that use a data descriptor
-     * @since 1.1
-     */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
+    // Initialize the ZipArchiveInputStream first
+    in = new ZipArchiveInputStream(new PushbackInputStream(inputStream, buf.capacity()));
+    // Now create the buffered input stream
+    bufferedInputStream = new BufferedInputStream(in);
     // haven't read anything so far
 }
\ No newline at end of file
