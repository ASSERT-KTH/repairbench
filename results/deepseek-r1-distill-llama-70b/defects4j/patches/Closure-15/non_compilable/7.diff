diff --git a/tmp/3d048578-3df4-4441-a608-bdeb1cc44d4d_buggy.java b/tmp/04d4c2d7-7ee6-4f84-bd72-080266613c25_fixed.java
index b56897c..53795fd 100644
--- a/tmp/3d048578-3df4-4441-a608-bdeb1cc44d4d_buggy.java
+++ b/tmp/04d4c2d7-7ee6-4f84-bd72-080266613c25_fixed.java
@@ -1,27 +1,30 @@
       @Override
       public boolean apply(Node n) {
         // When the node is null it means, we reached the implicit return
         // where the function returns (possibly without an return statement)
         if (n == null) {
           return false;
         }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+        // Check for function calls with side effects
         if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
           return true;
         }
 
+        // Check for constructor calls with side effects
         if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
           return true;
         }
 
+        // Check for unary delete operations which have side effects
+        if (n.isUnaryOperation() && n.getToken() == Token.UNARY_DELETE) {
+          return true;
+        }
 
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
           }
         }
         return false;
       }
\ No newline at end of file
