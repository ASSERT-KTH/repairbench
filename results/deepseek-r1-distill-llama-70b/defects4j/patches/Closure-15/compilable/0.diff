diff --git a/tmp/d13b3cd3-d0f4-44c4-8140-db96d3383893_buggy.java b/tmp/0bdd8147-bd86-4f6f-9d7c-83e667b25c5a_fixed.java
index b56897c..cc5bbda 100644
--- a/tmp/d13b3cd3-d0f4-44c4-8140-db96d3383893_buggy.java
+++ b/tmp/0bdd8147-bd86-4f6f-9d7c-83e667b25c5a_fixed.java
@@ -1,27 +1,24 @@
 @Override
 public boolean apply(Node n) {
   // When the node is null it means, we reached the implicit return
   // where the function returns (possibly without an return statement)
   if (n == null) {
     return false;
   }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+  // Check if the node is a call or constructor with side effects
   if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
     return true;
   }
-
   if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
     return true;
   }
 
-
+  // Process all child nodes without skipping any based on CFG
   for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
-          if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
+    if (apply(c)) {
       return true;
     }
   }
   return false;
 }
\ No newline at end of file
