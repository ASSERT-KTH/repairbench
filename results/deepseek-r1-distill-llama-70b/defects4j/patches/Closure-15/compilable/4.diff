diff --git a/tmp/e77c8099-0d6c-4e9c-a5bf-4f88b01a311a_buggy.java b/tmp/9c5b38c2-e76d-4ec4-919c-7077c5c04118_fixed.java
index b56897c..86c55f5 100644
--- a/tmp/e77c8099-0d6c-4e9c-a5bf-4f88b01a311a_buggy.java
+++ b/tmp/9c5b38c2-e76d-4ec4-919c-7077c5c04118_fixed.java
@@ -1,27 +1,25 @@
 @Override
 public boolean apply(Node n) {
     // When the node is null it means, we reached the implicit return
     // where the function returns (possibly without an return statement)
     if (n == null) {
         return false;
     }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+    // Check if the node is a call or new instance with side effects
     if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
         return true;
     }
 
     if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
         return true;
     }
 
-
+    // Recursively check all child nodes for side effects
     for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
-          if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
+        if (apply(c)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
