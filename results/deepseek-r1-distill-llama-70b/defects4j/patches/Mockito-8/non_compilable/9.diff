diff --git a/tmp/a975ad52-0d26-4e54-b656-acff45f79c2e_buggy.java b/tmp/34da8a3f-4e74-43df-9b4f-db9597cdfeeb_fixed.java
index 42b58d0..7a27a76 100644
--- a/tmp/a975ad52-0d26-4e54-b656-acff45f79c2e_buggy.java
+++ b/tmp/34da8a3f-4e74-43df-9b4f-db9597cdfeeb_fixed.java
@@ -1,19 +1,31 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
+
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+
+    if (rawType instanceof Class) {
+        Class<?> rawClass = (Class<?>) rawType;
+        if (contextualActualTypeParameters.containsKey(rawClass)) {
+            return;
+        }
+        contextualActualTypeParameters.put(rawClass, null);
+    }
+
+    TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+        } else if (!(actualTypeArgument instanceof ParameterizedType)) {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+        // Omit or comment out the logging statement to avoid memory leak issues
     }
 }
\ No newline at end of file
