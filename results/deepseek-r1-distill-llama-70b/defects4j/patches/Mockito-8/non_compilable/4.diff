diff --git a/tmp/d24b4a57-9c7a-4ab2-873a-b8f6f65bc801_buggy.java b/tmp/31984747-a814-47c6-a878-0bf2e7d06652_fixed.java
index 42b58d0..6749a0d 100644
--- a/tmp/d24b4a57-9c7a-4ab2-873a-b8f6f65bc801_buggy.java
+++ b/tmp/31984747-a814-47c6-a878-0bf2e7d06652_fixed.java
@@ -1,19 +1,31 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    if (rawType instanceof Class) {
+        Class<?> rawClass = (Class<?>) rawType;
+        if (rawClass.getTypeParameters().length > 0) {
+            for (Type actualTypeArgument : parameterizedType.getActualTypeArguments()) {
+                if (actualTypeArgument.equals(rawClass)) {
+                    return;
+                }
+            }
+        }
+    }
+
+    TypeVariable[] typeParameters = rawClass.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
