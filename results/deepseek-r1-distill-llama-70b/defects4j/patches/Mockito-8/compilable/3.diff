diff --git a/tmp/74d355e2-1e48-4770-b285-491432de0b59_buggy.java b/tmp/209f8049-48d0-4650-afd6-f20fcfb404c7_fixed.java
index 42b58d0..18795b1 100644
--- a/tmp/74d355e2-1e48-4770-b285-491432de0b59_buggy.java
+++ b/tmp/209f8049-48d0-4650-afd6-f20fcfb404c7_fixed.java
@@ -1,19 +1,22 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Class<?> rawType = (Class<?>) parameterizedType.getRawType();
+    TypeVariable[] typeParameters = rawType.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
+        // Check if the type variable's declaring class is the same as the raw type of the parameterized type
+        if (typeParameter.getGenericDeclaration() == rawType) {
+            continue;  // Skip processing to avoid StackOverflowError in self-referential cases
+        }
         Type actualTypeArgument = actualTypeArguments[i];
-
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
