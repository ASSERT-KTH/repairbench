diff --git a/tmp/35cb31f1-a81d-4cce-b5d3-d78c23067024_buggy.java b/tmp/57f5ef1e-fb6d-4594-a1a8-80aeef48c42c_fixed.java
index 42b58d0..ef0e57b 100644
--- a/tmp/35cb31f1-a81d-4cce-b5d3-d78c23067024_buggy.java
+++ b/tmp/57f5ef1e-fb6d-4594-a1a8-80aeef48c42c_fixed.java
@@ -1,19 +1,32 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        if (isSameParameterizedType(actualTypeArgument, parameterizedType)) {
+            continue; // Prevent potential infinite recursion
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
+
+private boolean isSameParameterizedType(Type actualTypeArgument, ParameterizedType parameterizedType) {
+    if (actualTypeArgument instanceof ParameterizedType) {
+        ParameterizedType other = (ParameterizedType) actualTypeArgument;
+        if (other.getRawType().equals(parameterizedType.getRawType())) {
+            return true;
+        }
+    }
+    return false;
+}
\ No newline at end of file
