diff --git a/tmp/ad85d0e3-5934-452e-927f-6fdc4ac1803a_buggy.java b/tmp/21716bdb-c536-46f3-b5c1-eeb3ad402051_fixed.java
index addeb8d..2e76913 100644
--- a/tmp/ad85d0e3-5934-452e-927f-6fdc4ac1803a_buggy.java
+++ b/tmp/21716bdb-c536-46f3-b5c1-eeb3ad402051_fixed.java
@@ -1,38 +1,28 @@
-    /**
-     * Searches the string builder to find the first reference to the specified
-     * string starting searching from the given index.
-     * <p>
-     * Note that a null input string will return -1, whereas the JDK throws an exception.
-     * 
-     * @param str  the string to find, null returns -1
-     * @param startIndex  the index to start at, invalid index rounded to edge
-     * @return the first index of the string, or -1 if not found
-     */
 public int indexOf(String str, int startIndex) {
-        startIndex = (startIndex < 0 ? 0 : startIndex);
-        if (str == null || startIndex >= size) {
+    if (str == null) {
+        return -1;
+    }
+    int len = buffer.length;
+    if (startIndex < 0) {
+        startIndex = 0;
+    } else if (startIndex >= len) {
         return -1;
     }
     int strLen = str.length();
-        if (strLen == 1) {
-            return indexOf(str.charAt(0), startIndex);
-        }
     if (strLen == 0) {
         return startIndex;
     }
-        if (strLen > size) {
+    if (strLen > len) {
         return -1;
     }
-        char[] thisBuf = buffer;
-        int len = thisBuf.length - strLen;
     outer:
-        for (int i = startIndex; i < len; i++) {
+    for (int i = startIndex; i <= len - strLen; i++) {
         for (int j = 0; j < strLen; j++) {
-                if (str.charAt(j) != thisBuf[i + j]) {
+            if (str.charAt(j) != buffer[i + j]) {
                 continue outer;
             }
         }
         return i;
     }
     return -1;
 }
\ No newline at end of file
