diff --git a/tmp/c01acc89-9611-497b-bad0-50db12bba184_buggy.java b/tmp/ed4f0b1e-b4ec-42d4-8184-7c8ab19b3527_fixed.java
index b6b11b6..1cc2c7b 100644
--- a/tmp/c01acc89-9611-497b-bad0-50db12bba184_buggy.java
+++ b/tmp/ed4f0b1e-b4ec-42d4-8184-7c8ab19b3527_fixed.java
@@ -1,38 +1,44 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
+
         if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+            if (appendTo != null) {
+                appendTo.append(QUOTE);
             }
-        int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+            return appendTo;
+        }
+
+        int lastHold = pos.getIndex();
+
+        while (pos.getIndex() < pattern.length()) {
+            char currentChar = c[pos.getIndex()];
+
+            if (escapingOn && currentChar == ESCAPE) {
+                // Check if the next character is a quote to handle escaped quote
+                if (pos.getIndex() + 1 < pattern.length() && c[pos.getIndex() + 1] == QUOTE) {
+                    if (appendTo != null) {
+                        appendTo.append(c, lastHold, pos.getIndex() - lastHold);
+                        appendTo.append(QUOTE);
+                    }
+                    pos.setIndex(pos.getIndex() + 2);
                     lastHold = pos.getIndex();
                     continue;
                 }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
+            }
+
+            if (currentChar == QUOTE) {
                 next(pos);
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, pos.getIndex() - lastHold - 1);
+                }
+                return appendTo;
             }
+
+            pos.setIndex(pos.getIndex() + 1);
         }
+
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
