diff --git a/tmp/8b0c6aea-a7c7-4da3-9bc1-4447c2a73418_buggy.java b/tmp/c8d0d422-e70c-498b-bc6c-816453768822_fixed.java
index b6b11b6..f513214 100644
--- a/tmp/8b0c6aea-a7c7-4da3-9bc1-4447c2a73418_buggy.java
+++ b/tmp/c8d0d422-e70c-498b-bc6c-816453768822_fixed.java
@@ -1,38 +1,30 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
     if (escapingOn && c[start] == QUOTE) {
         return appendTo == null ? null : appendTo.append(QUOTE);
     }
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+        if (escapingOn && i <= pattern.length() - ESCAPED_QUOTE.length()
+                && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
+            appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
             pos.setIndex(i + ESCAPED_QUOTE.length());
             lastHold = pos.getIndex();
+            i = lastHold; // Update 'i' to the new position
             continue;
         }
         switch (c[pos.getIndex()]) {
         case QUOTE:
             next(pos);
             return appendTo == null ? null : appendTo.append(c, lastHold,
                     pos.getIndex() - lastHold);
         default:
             next(pos);
+            break;
         }
     }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
