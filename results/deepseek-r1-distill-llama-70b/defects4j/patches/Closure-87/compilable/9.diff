diff --git a/tmp/b3b5a285-d042-4ba7-aee0-a8e0cd2a1679_buggy.java b/tmp/fa7099c5-e351-49fc-ac36-2d26fb184aa2_fixed.java
index 19fd63e..db0c3c5 100644
--- a/tmp/b3b5a285-d042-4ba7-aee0-a8e0cd2a1679_buggy.java
+++ b/tmp/fa7099c5-e351-49fc-ac36-2d26fb184aa2_fixed.java
@@ -1,24 +1,12 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
-        Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+        Node maybeExprResult = n.getFirstChild();
+        if (maybeExprResult.getType() == Token.EXPR_RESULT && maybeExprResult.hasOneChild()) {
+          Node maybeExpr = maybeExprResult.getFirstChild();
           return NodeUtil.isExpressionNode(maybeExpr);
         }
       }
-
+    }
     return false;
   }
\ No newline at end of file
