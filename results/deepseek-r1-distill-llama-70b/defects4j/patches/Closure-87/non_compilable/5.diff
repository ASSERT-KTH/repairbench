diff --git a/tmp/9f4bb497-0189-47d5-9063-e57c8d1955ad_buggy.java b/tmp/093c21c4-9aa0-4e68-945e-077c8e08865a_fixed.java
index 19fd63e..08cb5d9 100644
--- a/tmp/9f4bb497-0189-47d5-9063-e57c8d1955ad_buggy.java
+++ b/tmp/093c21c4-9aa0-4e68-945e-077c8e08865a_fixed.java
@@ -1,24 +1,15 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        return (maybeExpr.isExpression() || maybeExpr.getType() == Token.EXPR_RESULT)
+            || (maybeExpr.getType() == Token.FUNCTION_CALL
+                && maybeExpr.getFirstChild().getType() == Token.FUNCTION);
       }
     }
-
     return false;
   }
\ No newline at end of file
