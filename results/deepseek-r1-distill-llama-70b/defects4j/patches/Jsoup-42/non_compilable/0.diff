diff --git a/tmp/fa21f673-b756-4a3f-b923-71c9f61c87fe_buggy.java b/tmp/402839b1-b2a2-45d6-a8f9-39aee1c78fb4_fixed.java
index 442a001..24a7b09 100644
--- a/tmp/fa21f673-b756-4a3f-b923-71c9f61c87fe_buggy.java
+++ b/tmp/402839b1-b2a2-45d6-a8f9-39aee1c78fb4_fixed.java
@@ -1,39 +1,37 @@
-    /**
-     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
-     * list will not be reflected in the DOM.
-     * @return a list of key vals
-     */
 public List<Connection.KeyVal> formData() {
     ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
-        // iterate the form control elements and accumulate their values
     for (Element el : elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+        if (!el.tag().isFormSubmittable()) continue;
         String name = el.attr("name");
-            if (name.length() == 0) continue;
-            String type = el.attr("type");
+        if (name.isEmpty()) continue;
 
         if ("select".equals(el.tagName())) {
             Elements options = el.select("option[selected]");
-                boolean set = false;
-                for (Element option: options) {
-                    data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
-                }
-                if (!set) {
+            if (options.isEmpty()) {
+                // If no options are selected, take the first option
                 Element option = el.select("option").first();
-                    if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
+                if (option != null) {
+                    data.add(Connection.KeyVal.create(name, option.val()));
                 }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
+            } else {
+                for (Element option : options) {
+                    data.add(Connection.KeyVal.create(name, option.val()));
+                }
+            }
+        } else if ("checkbox".equalsIgnoreCase(el.attr("type")) || "radio".equalsIgnoreCase(el.attr("type"))) {
             if (el.hasAttr("checked")) {
-                    final String val = el.val();
-                    data.add(HttpConnection.KeyVal.create(name, val));
+                String value = el.attr("value");
+                // If value is not set, default to 'on' for checkboxes
+                if (value.isEmpty() && "checkbox".equalsIgnoreCase(el.attr("type"))) {
+                    value = "on";
+                }
+                data.add(Connection.KeyVal.create(name, value));
             }
         } else {
-                data.add(HttpConnection.KeyVal.create(name, el.val()));
+            // For other input types, include the value
+            data.add(Connection.KeyVal.create(name, el.val()));
         }
     }
     return data;
 }
\ No newline at end of file
