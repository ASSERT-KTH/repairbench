diff --git a/tmp/cd93aea7-3ca0-45ed-82e2-eb135e8bfab9_buggy.java b/tmp/1a65587b-e7ab-4b0f-9486-b3f03e1ec1c1_fixed.java
index 4b163f6..e9db097 100644
--- a/tmp/cd93aea7-3ca0-45ed-82e2-eb135e8bfab9_buggy.java
+++ b/tmp/1a65587b-e7ab-4b0f-9486-b3f03e1ec1c1_fixed.java
@@ -1,28 +1,33 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
 public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
-        while (numToSkip > 0) {
-            long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
+    long skipped = 0;
+    long toSkip = numToSkip;
+
+    while (toSkip > 0) {
+        long currentSkip = input.skip(toSkip);
+        if (currentSkip > 0) {
+            skipped += currentSkip;
+            toSkip -= currentSkip;
+            continue;
+        }
+
+        // If skip returns 0, try to read the bytes
+        int bufferSize = 4096;
+        byte[] buffer = new byte[bufferSize];
+        while (toSkip > 0) {
+            int bytesToRead = Math.min(bufferSize, (int) toSkip);
+            int read = input.read(buffer, 0, bytesToRead);
+            if (read == -1) {
+                break;
+            }
+            skipped += read;
+            toSkip -= read;
+        }
+
+        if (toSkip > 0) {
+            // End of stream, exit the loop
             break;
         }
-            numToSkip -= skipped;
     }
 
-        return available - numToSkip;
+    return skipped;
 }
\ No newline at end of file
