diff --git a/tmp/5573a4fe-36d1-4b1d-9288-152601143b39_buggy.java b/tmp/aead0b36-d9dc-411c-9f1c-bb97c6e5a8ce_fixed.java
index 3c69e10..67dbe01 100644
--- a/tmp/5573a4fe-36d1-4b1d-9288-152601143b39_buggy.java
+++ b/tmp/aead0b36-d9dc-411c-9f1c-bb97c6e5a8ce_fixed.java
@@ -1,27 +1,21 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
     private double calculateAsymptoticPValue(final double Umin,
                                              final int n1,
                                              final int n2)
         throws ConvergenceException, MaxCountExceededException {
 
         final int n1n2prod = n1 * n2;
 
-        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
+        // Calculate the expected value (mean) of U
         final double EU = n1n2prod / 2.0;
+        // Calculate the variance of U
         final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
+        // Calculate the z-score
         final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
         final NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
-        return 2 * standardNormal.cumulativeProbability(z);
+        // Calculate the two-tailed p-value correctly for both z > 0 and z < 0
+        final double pValueOneTail = 1 - standardNormal.cumulativeProbability(Math.abs(z));
+        return 2 * pValueOneTail;
     }
\ No newline at end of file
