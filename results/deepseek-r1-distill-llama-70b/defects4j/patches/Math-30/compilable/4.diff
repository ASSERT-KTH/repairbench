diff --git a/tmp/a6fa9b8d-2b80-476f-bc5d-84e554640c93_buggy.java b/tmp/7fb7ecf7-cbc5-4651-a7e7-68a9608d0b0c_fixed.java
index 3c69e10..fab8079 100644
--- a/tmp/a6fa9b8d-2b80-476f-bc5d-84e554640c93_buggy.java
+++ b/tmp/7fb7ecf7-cbc5-4651-a7e7-68a9608d0b0c_fixed.java
@@ -1,27 +1,19 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
 private double calculateAsymptoticPValue(final double Umin,
                                          final int n1,
                                          final int n2)
     throws ConvergenceException, MaxCountExceededException {
 
     final int n1n2prod = n1 * n2;
 
-        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
     final double EU = n1n2prod / 2.0;
     final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
 
-        final double z = (Umin - EU) / FastMath.sqrt(VarU);
+    // Apply continuity correction
+    final double correction = 0.5;
+    final double z = (Umin - EU - correction) / FastMath.sqrt(VarU);
+    final double absZ = FastMath.abs(z);
 
     final NormalDistribution standardNormal = new NormalDistribution(0, 1);
 
-        return 2 * standardNormal.cumulativeProbability(z);
+    return 2 * standardNormal.cumulativeProbability(-absZ);
 }
\ No newline at end of file
