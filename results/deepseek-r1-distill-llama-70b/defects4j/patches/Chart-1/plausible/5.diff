diff --git a/tmp/c4bf16a0-1c3c-4b6c-a174-44fc15ca18b9_buggy.java b/tmp/eeb65b4f-5f71-4001-853e-95a41bcb990b_fixed.java
index 114ff20..0f459cc 100644
--- a/tmp/c4bf16a0-1c3c-4b6c-a174-44fc15ca18b9_buggy.java
+++ b/tmp/eeb65b4f-5f71-4001-853e-95a41bcb990b_fixed.java
@@ -1,41 +1,22 @@
-    /**
-     * Returns a (possibly empty) collection of legend items for the series
-     * that this renderer is responsible for drawing.
-     *
-     * @return The legend item collection (never <code>null</code>).
-     *
-     * @see #getLegendItem(int, int)
-     */
     public LegendItemCollection getLegendItems() {
         LegendItemCollection result = new LegendItemCollection();
         if (this.plot == null) {
             return result;
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
-        }
-        int seriesCount = dataset.getRowCount();
-        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
-            for (int i = 0; i < seriesCount; i++) {
+        int seriesCount = (dataset != null) ? dataset.getRowCount() : 0;
+        boolean ascending = this.plot.getRowRenderingOrder().equals(SortOrder.ASCENDING);
+        int start = ascending ? 0 : seriesCount - 1;
+        int end = ascending ? seriesCount : -1;
+        int step = ascending ? 1 : -1;
+        for (int i = start; i != end; i += step) {
             if (isSeriesVisibleInLegend(i)) {
                 LegendItem item = getLegendItem(index, i);
                 if (item != null) {
                     result.add(item);
                 }
             }
         }
-        }
-        else {
-            for (int i = seriesCount - 1; i >= 0; i--) {
-                if (isSeriesVisibleInLegend(i)) {
-                    LegendItem item = getLegendItem(index, i);
-                    if (item != null) {
-                        result.add(item);
-                    }
-                }
-            }
-        }
         return result;
     }
\ No newline at end of file
