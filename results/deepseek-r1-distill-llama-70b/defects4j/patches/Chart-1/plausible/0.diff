diff --git a/tmp/40aef4f4-9b87-4fa4-bc8b-17a5798e6f06_buggy.java b/tmp/00491d90-d610-43ec-b8af-a3e148aa83de_fixed.java
index 114ff20..a64485e 100644
--- a/tmp/40aef4f4-9b87-4fa4-bc8b-17a5798e6f06_buggy.java
+++ b/tmp/00491d90-d610-43ec-b8af-a3e148aa83de_fixed.java
@@ -1,41 +1,31 @@
-    /**
-     * Returns a (possibly empty) collection of legend items for the series
-     * that this renderer is responsible for drawing.
-     *
-     * @return The legend item collection (never <code>null</code>).
-     *
-     * @see #getLegendItem(int, int)
-     */
     public LegendItemCollection getLegendItems() {
         LegendItemCollection result = new LegendItemCollection();
         if (this.plot == null) {
             return result;
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
-        }
+        if (dataset != null && dataset.getRowCount() > 0) {
             int seriesCount = dataset.getRowCount();
-        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
+            if (this.plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
                 for (int i = 0; i < seriesCount; i++) {
                     if (isSeriesVisibleInLegend(i)) {
                         LegendItem item = getLegendItem(index, i);
                         if (item != null) {
                             result.add(item);
                         }
                     }
                 }
-        }
-        else {
+            } else {
                 for (int i = seriesCount - 1; i >= 0; i--) {
                     if (isSeriesVisibleInLegend(i)) {
                         LegendItem item = getLegendItem(index, i);
                         if (item != null) {
                             result.add(item);
                         }
                     }
                 }
             }
+        }
         return result;
     }
\ No newline at end of file
