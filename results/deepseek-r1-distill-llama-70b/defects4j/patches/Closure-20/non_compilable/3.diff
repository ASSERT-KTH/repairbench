diff --git a/tmp/ae4f866a-a4a4-48e5-bb1f-a8526dee3676_buggy.java b/tmp/9a1d443a-6b6f-4078-bd5d-20ec6b668934_fixed.java
index d4e6d48..da1d242 100644
--- a/tmp/ae4f866a-a4a4-48e5-bb1f-a8526dee3676_buggy.java
+++ b/tmp/9a1d443a-6b6f-4078-bd5d-20ec6b668934_fixed.java
@@ -1,23 +1,20 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
+      if (n.getChildren().size() != 2) {
+          return n;
+      }
       Node value = callTarget.getNext();
       if (value != null) {
           Node addition = IR.add(
               IR.string("").srcref(callTarget),
               value.detachFromParent());
           n.getParent().replaceChild(n, addition);
           reportCodeChange();
           return addition;
       }
     }
     return n;
 }
\ No newline at end of file
