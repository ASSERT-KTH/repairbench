diff --git a/tmp/eed70248-55e2-4fb8-b89e-eef1036c3995_buggy.java b/tmp/8402b94d-181d-4115-8e3f-9f20a98585d2_fixed.java
index 229b3e7..c448845 100644
--- a/tmp/eed70248-55e2-4fb8-b89e-eef1036c3995_buggy.java
+++ b/tmp/8402b94d-181d-4115-8e3f-9f20a98585d2_fixed.java
@@ -1,55 +1,33 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+    if (pos == -1) {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
+    while (true) {
         text = padding + text.substring(pos).trim();
+
+        // Adjust if the remaining text length is longer than the available width
+        if (text.length() > width) {
             pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
+            if (pos == -1) {
+                sb.append(rtrim(text));
                 return sb;
             }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
+            if ((text.length() > width) && (pos == nextLineTabStop - 1)) {
                 pos = width;
             }
-
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        } else {
+            sb.append(text);
+            return sb;
+        }
     }
 }
\ No newline at end of file
