diff --git a/tmp/a04ed3e4-bfa4-4c07-b630-970beafa716c_buggy.java b/tmp/90b43094-0d8d-4076-8ad1-826474572345_fixed.java
index 56b2d66..51ba0a5 100644
--- a/tmp/a04ed3e4-bfa4-4c07-b630-970beafa716c_buggy.java
+++ b/tmp/90b43094-0d8d-4076-8ad1-826474572345_fixed.java
@@ -1,45 +1,46 @@
-    /**
-     * Removes the phase 1 objective function, positive cost non-artificial variables,
-     * and the non-basic artificial variables from this tableau.
-     */
 protected void dropPhase1Objective() {
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
     List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+    columnsToDrop.add(0);  // remove phase 1 objective row
 
     // positive cost non-artificial variables
-        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
+    int firstNonSlackColumn = getNumObjectiveFunctions();
+    int lastNonSlackColumn = getArtificialVariableOffset() - 1;
+    for (int i = firstNonSlackColumn; i <= lastNonSlackColumn; i++) {
         final double entry = tableau.getEntry(0, i);
         if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
             columnsToDrop.add(i);
         }
     }
 
     // non-basic artificial variables
+    int firstArtificialVariable = getArtificialVariableOffset();
     for (int i = 0; i < getNumArtificialVariables(); i++) {
-          int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
+        int col = firstArtificialVariable + i;
+        if (!isBasic(col)) {
             columnsToDrop.add(col);
         }
     }
 
     double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
-          int col = 0;
-          for (int j = 0; j < getWidth(); j++) {
-            if (!columnsToDrop.contains(j)) {
-              matrix[i - 1][col++] = tableau.getEntry(i, j);
+    for (int i = 1; i < getHeight(); i++) {  // exclude the first row (phase 1 objective)
+        int targetCol = 0;
+        for (int sourceCol = 0; sourceCol < getWidth(); sourceCol++) {
+            if (!columnsToDrop.contains(sourceCol)) {
+                matrix[i - 1][targetCol++] = tableau.getEntry(i, sourceCol);
             }
         }
     }
 
-        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
-          columnLabels.remove((int) columnsToDrop.get(i));
+    // Remove the columns in reverse order to avoid index issues
+    Collections.sort(columnsToDrop, Collections.reverseOrder());
+    for (int col : columnsToDrop) {
+        columnLabels.remove(col);
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file
