diff --git a/tmp/ce8508ae-34fb-4c5b-b146-96b30d14b47c_buggy.java b/tmp/560148c9-79d1-48ed-8dc3-0ce847dcdb9b_fixed.java
index 388771b..ada3749 100644
--- a/tmp/ce8508ae-34fb-4c5b-b146-96b30d14b47c_buggy.java
+++ b/tmp/560148c9-79d1-48ed-8dc3-0ce847dcdb9b_fixed.java
@@ -1,37 +1,25 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
 public TimeSeries createCopy(int start, int end)
         throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
-        if (this.data.size() > 0) {
+    int dataSize = this.data.size();
+    if (dataSize == 0) {
+        return copy;
+    }
+    if (start >= dataSize) {
+        throw new IllegalArgumentException("Start index out of bounds.");
+    }
+    end = Math.min(end, dataSize - 1);
     for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
         TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
-                try {
         copy.add(clone);
     }
-                catch (SeriesException e) {
-                    e.printStackTrace();
-                }
-            }
-        }
     return copy;
 }
\ No newline at end of file
