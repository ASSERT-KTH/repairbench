diff --git a/tmp/0a46630c-f88e-45f6-a08b-48fbc491c21d_buggy.java b/tmp/458f9ba1-28a1-4fdb-8bc5-93f0650e68cb_fixed.java
index 388771b..62f99d9 100644
--- a/tmp/0a46630c-f88e-45f6-a08b-48fbc491c21d_buggy.java
+++ b/tmp/458f9ba1-28a1-4fdb-8bc5-93f0650e68cb_fixed.java
@@ -1,37 +1,41 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
 public TimeSeries createCopy(int start, int end)
         throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
     if (this.data.size() > 0) {
         for (int index = start; index <= end; index++) {
             TimeSeriesDataItem item
                     = (TimeSeriesDataItem) this.data.get(index);
             TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
             try {
                 copy.add(clone);
             }
             catch (SeriesException e) {
                 e.printStackTrace();
             }
         }
+        // Set initial min and max to the first item's value
+        if (copy.data.size() > 0) {
+            double minY = copy.data.get(0).getValue().doubleValue();
+            double maxY = copy.data.get(0).getValue().doubleValue();
+            for (int i = 1; i < copy.data.size(); i++) {
+                double value = copy.data.get(i).getValue().doubleValue();
+                if (value < minY) {
+                    minY = value;
+                }
+                if (value > maxY) {
+                    maxY = value;
+                }
+            }
+            copy.minY = minY;
+            copy.maxY = maxY;
+        }
     }
     return copy;
 }
\ No newline at end of file
