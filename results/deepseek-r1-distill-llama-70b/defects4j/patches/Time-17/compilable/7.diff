diff --git a/tmp/c4e22b17-fc3b-45a9-8c82-2ad7e312baf3_buggy.java b/tmp/806d8b5f-2860-403d-8d6a-cc1b56015149_fixed.java
index 03b03d7..a0ba36c 100644
--- a/tmp/c4e22b17-fc3b-45a9-8c82-2ad7e312baf3_buggy.java
+++ b/tmp/806d8b5f-2860-403d-8d6a-cc1b56015149_fixed.java
@@ -1,25 +1,9 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
-        }
-        
-        // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    long earlierUTC = convertLocalToUTC(local, false);
+    long laterUTC = convertLocalToUTC(local, true);
+    if (earlierUTC == laterUTC) {
+        return instant;
+    }
+    return earlierOrLater ? laterUTC : earlierUTC;
 }
\ No newline at end of file
