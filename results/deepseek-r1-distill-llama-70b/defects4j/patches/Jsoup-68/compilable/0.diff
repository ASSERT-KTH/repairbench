diff --git a/tmp/afb59416-92df-4d28-8460-5ffa4605ca4e_buggy.java b/tmp/d1ec115b-855b-4c64-ae04-e7fc2314c08d_fixed.java
index 511560e..47de0d4 100644
--- a/tmp/afb59416-92df-4d28-8460-5ffa4605ca4e_buggy.java
+++ b/tmp/d1ec115b-855b-4c64-ae04-e7fc2314c08d_fixed.java
@@ -1,21 +1,21 @@
 private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
-        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
-        int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
+    // Limit the number of elements to check based on MaxScopeSearchDepth
+    int levelsToCheck = Math.min(MaxScopeSearchDepth, stack.size());
+    for (int i = 1; i <= levelsToCheck; i++) {
+        int pos = stack.size() - 1 - i;
+        if (pos < 0) {
+            break;
         }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
-
-        for (int pos = bottom; pos >= top; pos--) {
         final String elName = stack.get(pos).nodeName();
-            if (inSorted(elName, targetNames))
+        if (inSorted(elName, targetNames)) {
             return true;
-            if (inSorted(elName, baseTypes))
+        }
+        if (inSorted(elName, baseTypes)) {
             return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
+        }
+        if (extraTypes != null && inSorted(elName, extraTypes)) {
             return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+    }
     return false;
 }
\ No newline at end of file
