diff --git a/tmp/45b63692-8527-4be8-9294-28bed344f3fb_buggy.java b/tmp/b31b4ba6-1b0f-4eca-ba95-0a168a7a530e_fixed.java
index e1fc51f..1851bf2 100644
--- a/tmp/45b63692-8527-4be8-9294-28bed344f3fb_buggy.java
+++ b/tmp/b31b4ba6-1b0f-4eca-ba95-0a168a7a530e_fixed.java
@@ -1,9 +1,35 @@
 public boolean hasSameMethod(Invocation candidate) {        
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
+    // Check if either method is a bridge of the other
+    if (m1.isBridge() || m2.isBridge()) {
         return m1.equals(m2);
     }
+    
+    // Check if methods are from same declaring class
+    if (!m1.getDeclaringClass().equals(m2.getDeclaringClass())) {
+        return false;
+    }
+    
+    // Check method names
+    if (!m1.getName().equals(m2.getName())) {
+        return false;
+    }
+    
+    // Check parameter types
+    Class<?>[] params1 = m1.getParameterTypes();
+    Class<?>[] params2 = m2.getParameterTypes();
+    
+    if (params1.length != params2.length) {
+        return false;
+    }
+    
+    for (int i = 0; i < params1.length; i++) {
+        if (!params1[i].equals(params2[i])) {
+            return false;
+        }
+    }
+    
+    return true;
+}
\ No newline at end of file
