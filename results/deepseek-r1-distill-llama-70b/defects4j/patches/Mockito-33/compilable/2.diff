diff --git a/tmp/c05ba191-dd85-417a-90ae-d12ba8b016e0_buggy.java b/tmp/44b0aa71-affb-437e-853c-35d26f876bb3_fixed.java
index e1fc51f..2951853 100644
--- a/tmp/c05ba191-dd85-417a-90ae-d12ba8b016e0_buggy.java
+++ b/tmp/44b0aa71-affb-437e-853c-35d26f876bb3_fixed.java
@@ -1,9 +1,35 @@
     public boolean hasSameMethod(Invocation candidate) {        
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
         Method m1 = invocation.getMethod();
         Method m2 = candidate.getMethod();
         
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+        return areMethodsEqual(m1, m2);
+    }
+
+    private boolean areMethodsEqual(Method m1, Method m2) {
+        if (m1 == null || m2 == null) {
+            return false;
+        }
+        
+        if (!m1.getName().equals(m2.getName())) {
+            return false;
+        }
+        
+        Class<?>[] params1 = m1.getParameterTypes();
+        Class<?>[] params2 = m2.getParameterTypes();
+        
+        if (params1.length != params2.length) {
+            return false;
+        }
+        
+        for (int i = 0; i < params1.length; i++) {
+            if (!params1[i].equals(params2[i])) {
+                return false;
+            }
+        }
+        
+        if (!m1.getDeclaringClass().equals(m2.getDeclaringClass())) {
+            return false;
+        }
+        
+        return true;
     }
\ No newline at end of file
