diff --git a/tmp/a1389cba-30e7-4380-9a45-82cc3037c8ca_buggy.java b/tmp/65436e66-0318-47a1-bf2b-7b1dd595a2a8_fixed.java
index b529d33..99bae68 100644
--- a/tmp/a1389cba-30e7-4380-9a45-82cc3037c8ca_buggy.java
+++ b/tmp/65436e66-0318-47a1-bf2b-7b1dd595a2a8_fixed.java
@@ -1,29 +1,13 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
 private char getMappingCode(final String str, final int index) {
-        // map() throws IllegalArgumentException
     final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
-        if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
-                final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
-                    return 0;
+    if (index > 0) {
+        final char prevChar = str.charAt(index - 1);
+        if (prevChar == 'H' || prevChar == 'W') {
+            final char prevMappedChar = this.map(prevChar);
+            if (prevMappedChar != '0' && prevMappedChar == mappedChar) {
+                return '0';
             }
         }
     }
     return mappedChar;
 }
\ No newline at end of file
