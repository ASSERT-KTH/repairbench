diff --git a/tmp/a48259a3-8089-4671-b510-5327b04c7716_buggy.java b/tmp/88a30710-6071-408d-b91b-5183231a3cbf_fixed.java
index 63641d0..babbfd0 100644
--- a/tmp/a48259a3-8089-4671-b510-5327b04c7716_buggy.java
+++ b/tmp/88a30710-6071-408d-b91b-5183231a3cbf_fixed.java
@@ -1,33 +1,29 @@
-  /**
-   * For functions with function(this: T, ...) and T as parameters, type
-   * inference will set the type of this on a function literal argument to the
-   * the actual type of T.
-   */
 private boolean inferTemplatedTypesForCall(
     Node n, FunctionType fnType) {
   final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
       .getTemplateKeys();
   if (keys.isEmpty()) {
     return false;
   }
 
   // Try to infer the template types
   Map<TemplateType, JSType> inferred =
       inferTemplateTypesFromParameters(fnType, n);
 
-
   // Replace all template types. If we couldn't find a replacement, we
   // replace it with UNKNOWN.
   TemplateTypeReplacer replacer = new TemplateTypeReplacer(
       registry, inferred);
   Node callTarget = n.getFirstChild();
 
-    FunctionType replacementFnType = fnType.visit(replacer)
-        .toMaybeFunctionType();
-    Preconditions.checkNotNull(replacementFnType);
+  // Ensure we're working with a proper function type
+  FunctionType newFnType = fnType.visit(replacer).toMaybeFunctionType();
+  if (newFnType == null) {
+    return false;
+  }
 
-    callTarget.setJSType(replacementFnType);
-    n.setJSType(replacementFnType.getReturnType());
+  callTarget.setJSType(newFnType);
+  n.setJSType(newFnType.getReturnType());
 
   return replacer.madeChanges;
 }
\ No newline at end of file
