diff --git a/tmp/73df97ec-f9fa-4107-8420-cebcb3bdf189_buggy.java b/tmp/74791f6b-4ddd-4f5d-95a7-b0379e5ad3f8_fixed.java
index fc8c302..93aee5a 100644
--- a/tmp/73df97ec-f9fa-4107-8420-cebcb3bdf189_buggy.java
+++ b/tmp/74791f6b-4ddd-4f5d-95a7-b0379e5ad3f8_fixed.java
@@ -1,23 +1,25 @@
 @Override
-    public byte[] getBinaryValue(Base64Variant b64variant)
-        throws IOException, JsonParseException
-    {
-        // Multiple possibilities...
+public byte[] getBinaryValue(Base64Variant b64variant) throws IOException, JsonParseException {
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n.isText()) {
+            String text = n.textValue();
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException e) {
+                throw new JsonParseException(n._parse.ViewGroup, "Cannot access TextNode as binary due to broken Base64 encoding: " + e.getMessage());
+            }
+        }
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
