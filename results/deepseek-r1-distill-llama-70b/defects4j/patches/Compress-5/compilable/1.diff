diff --git a/tmp/a77fbbb9-1f55-465d-82a6-e39301b96b96_buggy.java b/tmp/66ed9c41-97f3-4d58-81ac-0ef3b68d1e95_fixed.java
index d907b39..3f2d2da 100644
--- a/tmp/a77fbbb9-1f55-465d-82a6-e39301b96b96_buggy.java
+++ b/tmp/66ed9c41-97f3-4d58-81ac-0ef3b68d1e95_fixed.java
@@ -1,56 +1,65 @@
 public int read(byte[] buffer, int start, int length) throws IOException {
 	if (closed) {
 		throw new IOException("The stream is closed");
 	}
 	if (inf.finished() || current == null) {
 		return -1;
 	}
 
-        // avoid int overflow, check null buffer
 	if (start <= buffer.length && length >= 0 && start >= 0
 		&& buffer.length - start >= length) {
 		if (current.getMethod() == ZipArchiveOutputStream.STORED) {
 			int csize = (int) current.getSize();
 			if (readBytesOfEntry >= csize) {
 				return -1;
 			}
 			if (offsetInBuffer >= lengthOfLastRead) {
 				offsetInBuffer = 0;
 				if ((lengthOfLastRead = in.read(buf)) == -1) {
 					return -1;
 				}
 				count(lengthOfLastRead);
 				bytesReadFromStream += lengthOfLastRead;
 			}
 			int toRead = length > lengthOfLastRead
 				? lengthOfLastRead - offsetInBuffer
 				: length;
 			if ((csize - readBytesOfEntry) < toRead) {
 				toRead = csize - readBytesOfEntry;
 			}
+			if (toRead <= 0) {
+				if (readBytesOfEntry >= csize) {
+					return -1;
+				} else {
+					throw new IOException("Truncated ZIP file");
+				}
+			}
 			System.arraycopy(buf, offsetInBuffer, buffer, start, toRead);
 			offsetInBuffer += toRead;
 			readBytesOfEntry += toRead;
 			crc.update(buffer, start, toRead);
 			return toRead;
 		}
 		if (inf.needsInput()) {
 			fill();
 			if (lengthOfLastRead > 0) {
 				bytesReadFromStream += lengthOfLastRead;
 			}
 		}
 		int read = 0;
 		try {
 			read = inf.inflate(buffer, start, length);
 		} catch (DataFormatException e) {
 			throw new ZipException(e.getMessage());
 		}
 		if (read == 0 && inf.finished()) {
 			return -1;
 		}
+		if (read == 0 && length > 0) {
+			throw new IOException("Truncated ZIP file");
+		}
 		crc.update(buffer, start, read);
 		return read;
 	}
 	throw new ArrayIndexOutOfBoundsException();
 }
\ No newline at end of file
