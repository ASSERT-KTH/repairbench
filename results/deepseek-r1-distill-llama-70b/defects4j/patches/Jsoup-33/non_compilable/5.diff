diff --git a/tmp/8a1bbc09-14a8-4060-8a5b-356a8507e883_buggy.java b/tmp/5dbe67f7-fd35-4d1c-90c0-91933139a705_fixed.java
index dc93be3..e3e886e 100644
--- a/tmp/8a1bbc09-14a8-4060-8a5b-356a8507e883_buggy.java
+++ b/tmp/5dbe67f7-fd35-4d1c-90c0-91933139a705_fixed.java
@@ -1,14 +1,14 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
+        if (el instanceof Tag.SelfClosing) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));
             return el;
+        } else {
+            return insert(startTag);
+        }
+    } else {
+        return insert(startTag);
     }
-        
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
-        insert(el);
-        return el;
 }
\ No newline at end of file
