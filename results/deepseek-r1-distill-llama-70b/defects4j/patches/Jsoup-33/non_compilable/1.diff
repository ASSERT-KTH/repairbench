diff --git a/tmp/04b9846e-941d-4c2a-a44b-2e4e28606b29_buggy.java b/tmp/f26d455c-608f-45c0-b03e-df21cd340763_fixed.java
index dc93be3..28808b8 100644
--- a/tmp/04b9846e-941d-4c2a-a44b-2e4e28606b29_buggy.java
+++ b/tmp/f26d455c-608f-45c0-b03e-df21cd340763_fixed.java
@@ -1,14 +1,17 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            if (isKnownEmptyTag(startTag.name())) {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+                tokeniser.emit(new Token.EndTag(el.tagName()));
                 return el;
+            } else {
+                // For unknown tags, treat them as regular elements and let the parser handle them
+                insert(startTag);
+            }
         }
 
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
