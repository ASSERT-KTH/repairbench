diff --git a/tmp/d9a7e68f-c177-4beb-a94d-170e49d2966b_buggy.java b/tmp/d84b8fd2-aed7-4d4a-90b2-f9e026ef7809_fixed.java
index dc93be3..5861904 100644
--- a/tmp/d9a7e68f-c177-4beb-a94d-170e49d2966b_buggy.java
+++ b/tmp/d84b8fd2-aed7-4d4a-90b2-f9e026ef7809_fixed.java
@@ -1,14 +1,19 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            if (Tag.valueOf(startTag.name()).isSelfClosing()) {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
+            } else {
+                Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+                insert(el);
+                stack.add(el);
+                tokeniser.emit(new Token.EndTag(el.tagName()));
+                return el;
+            }
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
