diff --git a/tmp/60fb7c23-ed16-4724-ae15-2e2ee28f7080_buggy.java b/tmp/e8ce9235-7d2a-4722-8371-0a13bf6659b9_fixed.java
index de9af32..6c0840f 100644
--- a/tmp/60fb7c23-ed16-4724-ae15-2e2ee28f7080_buggy.java
+++ b/tmp/e8ce9235-7d2a-4722-8371-0a13bf6659b9_fixed.java
@@ -1,18 +1,27 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+      Node funcNode = node.getFirstChild();
+      String funcName = null;
+      if (funcNode.getType() == Token.NAME) {
+        funcName = funcNode.getString();
+      } else if (funcNode.getType() == Token.GETPROP) {
+        // Traverse to find the original function name
+        while (funcNode.getType() == Token.GETPROP) {
+          funcNode = funcNode.getFirstChild();
+        }
+        if (funcNode.getType() == Token.NAME) {
+          funcName = funcNode.getString();
+        }
+      }
+      if (funcName != null) {
+        changed.add(funcName);
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
