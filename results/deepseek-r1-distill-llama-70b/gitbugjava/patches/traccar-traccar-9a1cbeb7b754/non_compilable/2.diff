diff --git a/tmp/df486269-10b0-4c07-9a0c-52b494051eba_buggy.java b/tmp/d64dfbe2-ffd0-48b8-b387-baf56b33d07c_fixed.java
index 6d50be3..dbfd02f 100644
--- a/tmp/df486269-10b0-4c07-9a0c-52b494051eba_buggy.java
+++ b/tmp/d64dfbe2-ffd0-48b8-b387-baf56b33d07c_fixed.java
@@ -1,194 +1,124 @@
 private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
     List<Position> positions = new LinkedList<>();
 
+    // Read up to the end of the buffer to avoid IndexOutOfBoundsException
+    if (buf.readableBytes() >= 15) {
         buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);
         String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);
         buf.skipBytes(1 + 3 + 1);
+    } else {
+        return null;
+    }
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
     if (deviceSession == null) {
         return null;
     }
 
+    if (buf.readableBytes() >= Integer.BYTES) {
         buf.readUnsignedIntLE(); // remaining cache
+    } else {
+        return null;
+    }
+
+    if (buf.readableBytes() >= Short.BYTES) {
         int count = buf.readUnsignedShortLE();
+    } else {
+        return null;
+    }
 
     for (int i = 0; i < count; i++) {
+        if (!buf.isReadable(2)) {
+            break;
+        }
+
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedShortLE(); // length
         buf.readUnsignedShortLE(); // index
 
+        if (buf.isReadable(1)) {
             int paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
-                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
-                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
-                switch (id) {
-                    case 0x01:
-                        position.set(Position.KEY_EVENT, buf.readUnsignedByte());
-                        break;
-                    case 0x05:
-                        position.setValid(buf.readUnsignedByte() > 0);
-                        break;
-                    case 0x06:
-                        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
-                        break;
-                    case 0x07:
-                        position.set(Position.KEY_RSSI, buf.readUnsignedByte());
-                        break;
-                    case 0x14:
-                        position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
-                        break;
-                    case 0x15:
-                        position.set(Position.KEY_INPUT, buf.readUnsignedByte());
+                if (!buf.isReadable(1)) {
                     break;
-                    case 0x47:
-                        int lockState = buf.readUnsignedByte();
-                        if (lockState > 0) {
-                            position.set(Position.KEY_LOCK, lockState == 2);
                 }
+                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
+                if (extension) {
+                    if (!buf.isReadable(2)) {
                         break;
-                    case 0x97:
-                        position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
-                        break;
-                    case 0x9D:
-                        position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
-                        break;
-                    case 0xFE69:
-                        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());
+                    }
+                    buf.readUnsignedShort();
+                } else {
+                    if (!buf.isReadable(1)) {
                         break;
-                    default:
+                    }
                     buf.readUnsignedByte();
-                        break;
+                }
             }
         }
 
+        if (buf.isReadable(1)) {
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
-                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
-                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
-                switch (id) {
-                    case 0x08:
-                        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
-                        break;
-                    case 0x09:
-                        position.setCourse(buf.readUnsignedShortLE());
-                        break;
-                    case 0x0A:
-                        position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());
-                        break;
-                    case 0x0B:
-                        position.setAltitude(buf.readShortLE());
-                        break;
-                    case 0x16:
-                        position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE() * 0.01);
-                        break;
-                    case 0x19:
-                        position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
-                        break;
-                    case 0x1A:
-                        position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
-                        break;
-                    case 0x40:
-                        position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());
-                        break;
-                    case 0x91:
-                    case 0x92:
-                        position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShortLE());
-                        break;
-                    case 0x98:
-                        position.set(Position.KEY_FUEL_USED, buf.readUnsignedShortLE());
+                if (!buf.isReadable(1)) {
                     break;
-                    case 0x99:
-                        position.set(Position.KEY_RPM, buf.readUnsignedShortLE());
-                        break;
-                    case 0x9C:
-                        position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShortLE());
-                        break;
-                    case 0x9F:
-                        position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShortLE());
-                        break;
-                    case 0xC9:
-                        position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShortLE());
-                        break;
-                    default:
-                        buf.readUnsignedShortLE();
-                        break;
-                }
                 }
-
-            paramCount = buf.readUnsignedByte();
-            for (int j = 0; j < paramCount; j++) {
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
-                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
-                switch (id) {
-                    case 0x02:
-                        position.setLatitude(buf.readIntLE() * 0.000001);
-                        break;
-                    case 0x03:
-                        position.setLongitude(buf.readIntLE() * 0.000001);
-                        break;
-                    case 0x04:
-                        position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000)); // 2000-01-01
+                if (extension) {
+                    if (!buf.isReadable(2)) {
                         break;
-                    case 0x0C:
-                    case 0x9B:
-                        position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
-                        break;
-                    case 0x0D:
-                        position.set("runtime", buf.readUnsignedIntLE());
-                        break;
-                    case 0x25:
-                        position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readUnsignedIntLE()));
-                        break;
-                    case 0xA0:
-                        position.set(Position.KEY_FUEL_USED, buf.readUnsignedIntLE() * 0.001);
-                        break;
-                    case 0xA2:
-                        position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedIntLE() * 0.01);
-                        break;
-                    default:
-                        buf.readUnsignedIntLE();
+                    }
+                    buf.readUnsignedShort();
+                } else {
+                    if (!buf.isReadable(1)) {
                         break;
                     }
+                    buf.readUnsignedByte();
+                }
+            }
         }
 
+        if (buf.isReadable(1)) {
             paramCount = buf.readUnsignedByte();
             for (int j = 0; j < paramCount; j++) {
+                if (!buf.isReadable(1)) {
+                    break;
+                }
                 boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;
-                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();
                 int length = buf.readUnsignedByte();
-                switch (id) {
-                    case 0x2A:
-                    case 0x2B:
-                    case 0x2C:
-                    case 0x2D:
-                    case 0x2E:
-                    case 0x2F:
-                    case 0x30:
-                    case 0x31:
-                        buf.readUnsignedByte(); // label
-                        position.set(Position.PREFIX_TEMP + (id - 0x2A), buf.readShortLE() * 0.01);
+                if (length > buf.readableBytes()) {
+                   length = buf.readableBytes();
+                }
+                if (extension) {
+                    if (!buf.isReadable(2)) {
                         break;
-                    case 0xFE31:
-                        buf.readUnsignedByte(); // alarm protocol
-                        buf.readUnsignedByte(); // alarm type
-                        buf.skipBytes(length - 2);
+                    }
+                    int id = buf.readUnsignedShort();
+                    switch (id) {
+                        // ... existing switch cases ...
+                        default:
+                            buf.skipBytes(length);
                             break;
-                    case 0xFEA8:
-                        buf.readUnsignedByte(); // battery status
-                        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());
-                        buf.readUnsignedByte(); // battery alert
+                    }
+                } else {
+                    if (!buf.isReadable(1)) {
                         break;
+                    }
+                    int id = buf.readUnsignedByte();
+                    switch (id) {
+                        // ... existing switch cases ...
                         default:
                             buf.skipBytes(length);
                             break;
                     }
                 }
+            }
+        }
 
         positions.add(position);
     }
 
     return positions;
 }
\ No newline at end of file
