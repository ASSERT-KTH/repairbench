diff --git a/tmp/984f4e02-1dcd-4e1f-bab6-2100b1fd8a55_buggy.java b/tmp/360a3389-0224-45de-991f-8eb564a2551b_fixed.java
index abd3198..f970f13 100644
--- a/tmp/984f4e02-1dcd-4e1f-bab6-2100b1fd8a55_buggy.java
+++ b/tmp/360a3389-0224-45de-991f-8eb564a2551b_fixed.java
@@ -1,28 +1,30 @@
     @Override
     protected Object encodeCommand(Command command) {
 
         ByteBuf content = Unpooled.buffer();
 
         switch (command.getType()) {
             case Command.TYPE_POSITION_SINGLE:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
             case Command.TYPE_ENGINE_STOP:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
             case Command.TYPE_ENGINE_RESUME:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
             case Command.TYPE_SET_SPEED_LIMIT:
                 content.writeByte(command.getInteger(Command.KEY_DATA));
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
             case Command.TYPE_SET_ODOMETER:
                 content.writeShort(command.getInteger(Command.KEY_DATA));
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
             case Command.TYPE_POSITION_PERIODIC:
                 String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
-                content.writeShort(Integer.valueOf(data[0]));
-                content.writeShort(Integer.valueOf(data[1]));
-                content.writeShort(Integer.valueOf(data[2]));
+                for (String s : data) {
+                    int value = Integer.parseInt(s);
+                    content.writeByte(value & 0xFF);
+                    content.writeByte((value >> 8) & 0xFF);
+                }
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);
             default:
                 return null;
         }
     }
\ No newline at end of file
