diff --git a/tmp/238ef2f9-decb-4ff4-9286-0f02ea542388_buggy.java b/tmp/b09ff82f-275b-4791-bd09-536f1ee860c2_fixed.java
index 855afa5..1caf343 100644
--- a/tmp/238ef2f9-decb-4ff4-9286-0f02ea542388_buggy.java
+++ b/tmp/b09ff82f-275b-4791-bd09-536f1ee860c2_fixed.java
@@ -1,13 +1,23 @@
 static URL encodeUrl(URL u) {
-	    u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
-            return u;
+        String urlS = u.toExternalForm();
+        // Split the URL into components
+        URI uri = new URI(urlS);
+        String scheme = uri.getScheme();
+        String authority = uri.getAuthority();
+        String path = uri.getPath();
+        String query = uri.getQuery();
+        String fragment = uri.getFragment();
+
+        // URL-encode each component
+        if (path != null) path = URLEncoder.encode(path, StandardCharsets.UTF_8.toString());
+        if (query != null) query = URLEncoder.encode(query, StandardCharsets.UTF_8.toString());
+        if (fragment != null) fragment = URLEncoder.encode(fragment, StandardCharsets.UTF_8.toString());
+
+        // Reassemble the URI
+        String encodedUrl = new URI(scheme, authority, path, query, fragment).toASCIIString();
+        return new URL(encodedUrl);
+    } catch (URISyntaxException | UnsupportedEncodingException | MalformedURLException e) {
+        return u;  // Return the original URL if encoding fails
     }
 }
\ No newline at end of file
