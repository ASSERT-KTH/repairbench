diff --git a/tmp/ab9e7e74-e610-44ef-bd18-b81f7f5b3efd_buggy.java b/tmp/e61c30fd-a602-4002-8804-a1913b04336f_fixed.java
index 855afa5..d75d06e 100644
--- a/tmp/ab9e7e74-e610-44ef-bd18-b81f7f5b3efd_buggy.java
+++ b/tmp/e61c30fd-a602-4002-8804-a1913b04336f_fixed.java
@@ -1,13 +1,30 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        String protocol = u.getProtocol();
+        String authority = u.getAuthority();
+        String path = u.getPath();
+        String query = u.getQuery();
+        String fragment = u.getRef();
+
+        String encodedPath = encodeComponent(path);
+        String encodedQuery = (query != null) ? encodeComponent(query) : null;
+        String encodedFragment = (fragment != null) ? encodeComponent(fragment) : null;
+
+        URI uri = new URI(protocol, authority, encodedPath, encodedQuery, encodedFragment);
         return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+    } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
         return u;
     }
 }
+
+private static String encodeComponent(String s) {
+    if (s == null) {
+        return null;
+    }
+    try {
+        return URLEncoder.encode(s, StandardCharsets.UTF_8.name()).replace("+", "%20");
+    } catch (UnsupportedEncodingException e) {
+        return s;
+    }
+}
\ No newline at end of file
