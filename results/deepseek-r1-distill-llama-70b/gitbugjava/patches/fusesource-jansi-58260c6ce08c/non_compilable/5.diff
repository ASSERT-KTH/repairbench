diff --git a/tmp/05c287dd-dd43-4b11-a3a1-1f21ef57e966_buggy.java b/tmp/fae26f32-7745-49ca-b674-4ac5a4229dd6_fixed.java
index 712f277..0efc29f 100644
--- a/tmp/05c287dd-dd43-4b11-a3a1-1f21ef57e966_buggy.java
+++ b/tmp/fae26f32-7745-49ca-b674-4ac5a4229dd6_fixed.java
@@ -1,48 +1,33 @@
-    /**
-     * Renders the given input to the target Appendable.
-     *
-     * @param input
-     *            source to render
-     * @param target
-     *            render onto this target Appendable.
-     * @return the given Appendable
-     * @throws IOException
-     *             If an I/O error occurs
-     */
 public static Appendable render(final String input, Appendable target) throws IOException {
-
     int i = 0;
-        int j, k;
-
     while (true) {
-            j = input.indexOf(BEGIN_TOKEN, i);
+        int j = input.indexOf(BEGIN_TOKEN, i);
         if (j == -1) {
-                if (i == 0) {
-                    target.append(input);
-                    return target;
-                }
             target.append(input.substring(i));
             return target;
         }
         target.append(input.substring(i, j));
-            k = input.indexOf(END_TOKEN, j);
 
+        int k = input.indexOf(END_TOKEN, j + BEGIN_TOKEN_LEN);
         if (k == -1) {
-                target.append(input);
-                return target;
+            throw new IllegalArgumentException("END_TOKEN missing");
         }
-            j += BEGIN_TOKEN_LEN;
-            String spec = input.substring(j, k);
 
+        String spec = input.substring(j + BEGIN_TOKEN_LEN, k);
         String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
         if (items.length == 1) {
-                target.append(input);
+            String code = spec;
+            String text = "";
+            if (items[0].isEmpty()) {
+                target.append(input.substring(i));
                 return target;
             }
-            String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
-
+        } else {
+            String code = items[0];
+            String text = items[1];
+            String replacement = render(text, code.split(CODE_LIST_SEPARATOR));
             target.append(replacement);
-
+        }
         i = k + END_TOKEN_LEN;
     }
 }
\ No newline at end of file
