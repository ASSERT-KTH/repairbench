diff --git a/tmp/4060f28a-a392-4993-9c3e-ddc48c1e0452_buggy.java b/tmp/a33de25a-7deb-4289-b2f4-80154fefbe4c_fixed.java
index 23f078d..0356397 100644
--- a/tmp/4060f28a-a392-4993-9c3e-ddc48c1e0452_buggy.java
+++ b/tmp/a33de25a-7deb-4289-b2f4-80154fefbe4c_fixed.java
@@ -1,14 +1,13 @@
-    private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
+    private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) {
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            } else if (c > 127) {
+                String hex = String.format("%04X", (char) c);
+                sb.append("%").append(hex).append("%").append(hex).append("'");
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file
