diff --git a/tmp/655b0f48-e859-4906-ad43-6f3a16bac2ce_buggy.java b/tmp/efddf4fd-71c5-4a81-8088-a9452ed2320a_fixed.java
index 23f078d..8a57005 100644
--- a/tmp/655b0f48-e859-4906-ad43-6f3a16bac2ce_buggy.java
+++ b/tmp/efddf4fd-71c5-4a81-8088-a9452ed2320a_fixed.java
@@ -1,14 +1,15 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+        int i = 0;
+        while (i < s.length()) {
             int c = s.codePointAt(i);
+            char[] chars = Character.toChars(c);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            } else if (c > 127) {
+                sb.append(URLEncoder.encode(new String(chars), UTF_8.name()));
             } else {
                 sb.append((char) c);
             }
+            i += chars.length;
         }
     }
\ No newline at end of file
