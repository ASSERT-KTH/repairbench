diff --git a/tmp/c60959f2-7a08-47a2-8985-376087b42ba5_buggy.java b/tmp/1dd6909e-a3d9-46c5-9a6f-ffaf9bcfa7cb_fixed.java
index 1bec4d6..1e874b6 100644
--- a/tmp/c60959f2-7a08-47a2-8985-376087b42ba5_buggy.java
+++ b/tmp/1dd6909e-a3d9-46c5-9a6f-ffaf9bcfa7cb_fixed.java
@@ -1,14 +1,18 @@
 private JavaType _mapType(Class<?> rawClass)
 {
-        // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    // Special handling for Properties, which is a Map<String, String>
+    if (rawClass == Properties.class) {
+        return MapType.construct(rawClass, getTypeFactory().constructType(String.class), getTypeFactory().constructType(String.class));
+    }
+
+    // Find type parameters for Map interface
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
-        // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
-        // but exactly 2 types if any found
+    // Ensure exactly two type parameters found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type " + rawClass.getName() + ": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
