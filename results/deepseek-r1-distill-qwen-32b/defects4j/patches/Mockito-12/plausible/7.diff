diff --git a/tmp/fb128b61-5c15-4711-b18c-262896b22e05_buggy.java b/tmp/2c66e3c3-8dc4-4db4-866e-3c0cd3028e5f_fixed.java
index bada2b6..3f6360b 100644
--- a/tmp/fb128b61-5c15-4711-b18c-262896b22e05_buggy.java
+++ b/tmp/2c66e3c3-8dc4-4db4-866e-3c0cd3028e5f_fixed.java
@@ -1,16 +1,25 @@
     /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
+     * Finds the generic type (parameterized type) of the field. If the field is not generic,
+     * it returns Object.class.
      *
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {
         Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (generic instanceof ParameterizedType) {
+            ParameterizedType parameterizedType = (ParameterizedType) generic;
+            Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+            if (actualTypeArguments.length > 0) {
+                Type actual = actualTypeArguments[0];
+                // Unwrap if the actual type is a ParameterizedType
+                if (actual instanceof ParameterizedType) {
+                    actual = ((ParameterizedType) actual).getRawType();
+                }
+                if (actual instanceof Class) {
                     return (Class) actual;
-                //in case of nested generics we don't go deep
                 }
-        
+            }
+        }
         return Object.class;
     }
\ No newline at end of file
