diff --git a/tmp/01c06c2a-8917-4b54-a96c-42da9f953a4a_buggy.java b/tmp/308225e2-04e4-4d1a-b55c-18ea6c584db6_fixed.java
index bada2b6..ab6233a 100644
--- a/tmp/01c06c2a-8917-4b54-a96c-42da9f953a4a_buggy.java
+++ b/tmp/308225e2-04e4-4d1a-b55c-18ea6c584db6_fixed.java
@@ -1,16 +1,21 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
     public Class getGenericType(Field field) {
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            return getRawClass(actual);
+        }
+        return Object.class;
     }
 
+    private Class getRawClass(Type type) {
+        if (type instanceof Class) {
+            return (Class) type;
+        } else if (type instanceof ParameterizedType) {
+            ParameterizedType pt = (ParameterizedType) type;
+            Type rawType = pt.getRawType();
+            if (rawType instanceof Class) {
+                return (Class) rawType;
+            }
+        }
         return Object.class;
     }
\ No newline at end of file
