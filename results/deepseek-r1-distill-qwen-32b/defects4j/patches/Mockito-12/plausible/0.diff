diff --git a/tmp/c7857ad9-b4dd-4840-9319-00a10a3990dd_buggy.java b/tmp/d3cedab5-17bc-4ffe-98e3-82659ab1eea8_fixed.java
index bada2b6..4f7a2c8 100644
--- a/tmp/c7857ad9-b4dd-4840-9319-00a10a3990dd_buggy.java
+++ b/tmp/d3cedab5-17bc-4ffe-98e3-82659ab1eea8_fixed.java
@@ -1,16 +1,19 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (generic instanceof ParameterizedType) {
+            ParameterizedType genericType = (ParameterizedType) generic;
+            Type[] actualTypeArgs = genericType.getActualTypeArguments();
+            if (actualTypeArgs.length == 0) {
+                return Object.class;
+            }
+            Type actualType = actualTypeArgs[0];
+            // Process nested generics to get the raw type
+            while (actualType instanceof ParameterizedType) {
+                actualType = ((ParameterizedType) actualType).getRawType();
+            }
+            if (actualType instanceof Class) {
+                return (Class<?>) actualType;
+            }
         }
-        
         return Object.class;
     }
\ No newline at end of file
