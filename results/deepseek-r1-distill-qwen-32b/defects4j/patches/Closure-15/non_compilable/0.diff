diff --git a/tmp/350f13f8-0d17-415d-95f1-14936a87a63c_buggy.java b/tmp/fe887d54-bfd0-4644-978c-be59920d4843_fixed.java
index b56897c..8dcf5c4 100644
--- a/tmp/350f13f8-0d17-415d-95f1-14936a87a63c_buggy.java
+++ b/tmp/fe887d54-bfd0-4644-978c-be59920d4843_fixed.java
@@ -1,27 +1,30 @@
 @Override
 public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
+    // When the node is null, return without inlining
     if (n == null) {
         return false;
     }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+    // Check for side effects in function calls
     if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
         return true;
     }
 
+    // Check for side effects in constructor calls
     if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
         return true;
     }
 
+    // Check for side effects due to delete operations
+    if (n.isUnaryOp() && n.getToken() == Token.DELETE) {
+        return true;
+    }
 
+    // Recursively check child nodes
     for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
         if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
