diff --git a/tmp/c4a6d4d0-0e92-4a69-a675-829b437bb104_buggy.java b/tmp/dbae5c71-614c-40be-9526-1a2359c77dd8_fixed.java
index d4e6d48..61a7865 100644
--- a/tmp/c4a6d4d0-0e92-4a69-a675-829b437bb104_buggy.java
+++ b/tmp/dbae5c71-614c-40be-9526-1a2359c77dd8_fixed.java
@@ -1,23 +1,21 @@
 private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
-      Node value = callTarget.getNext();
-      if (value != null) {
+        Node argumentList = callTarget.getNext();
+        if (argumentList != null && argumentList.getType() == Token.ARG_LIST &&
+              argumentList.getChildCount() == 1) {
+            Node value = argumentList.getFirstChild();
+            if (value != null && value.isLiteral()) {
                 Node addition = IR.add(
                     IR.string("").srcref(callTarget),
                     value.detachFromParent());
                 n.getParent().replaceChild(n, addition);
                 reportCodeChange();
                 return addition;
             }
         }
+    }
     return n;
 }
\ No newline at end of file
