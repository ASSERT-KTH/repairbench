diff --git a/tmp/46953730-f5fa-400e-b217-4266a4a2cc33_buggy.java b/tmp/8d51bc99-7810-479c-82cc-8d37fae517e7_fixed.java
index 670114d..882a0d8 100644
--- a/tmp/46953730-f5fa-400e-b217-4266a4a2cc33_buggy.java
+++ b/tmp/8d51bc99-7810-479c-82cc-8d37fae517e7_fixed.java
@@ -1,48 +1,67 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
+
         NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
+        if (ns != null) {
+          if (ns.onlyAffectsClassDef) {
             JsName name = getName(ns.name, false);
             if (name != null) {
               refNodes.add(new ClassDefiningFunctionNode(
                   name, n, parent, parent.getParent()));
             }
           }
         }
+
+        // Handle goog.inherits calls specifically to preserve constructor names
+        String functionName = nameNode.getString();
+        if ("goog.inherits".equals(functionName)) {
+          for (int i = 1; i < n.children.length; i++) {
+            Node argNode = n.children[i];
+            NameInformation argNs = createNameInformation(t, argNode, n);
+            if (argNs != null) {
+              JsName argName = getName(argNs.name, false);
+              if (argName != null) {
+                refNodes.add(new ClassDefiningFunctionNode(
+                    argName, argNode, n, parent));
+              }
+            }
+          }
+        }
+      }
     }
\ No newline at end of file
