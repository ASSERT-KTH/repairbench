diff --git a/tmp/a49e4130-5cce-485a-9e63-feb1ae52c2a4_buggy.java b/tmp/066e2bb3-51de-4105-80e9-7062c4fa5429_fixed.java
index c9da1b7..37a7b86 100644
--- a/tmp/a49e4130-5cce-485a-9e63-feb1ae52c2a4_buggy.java
+++ b/tmp/066e2bb3-51de-4105-80e9-7062c4fa5429_fixed.java
@@ -1,33 +1,30 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
     if (oldOne != null) {
 
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+        boolean oldExplicit = (_explicitCreators & mask) != 0;
+        boolean newExplicit = explicit;
+
+        if (oldExplicit) {
+            if (!newExplicit) {
                 return;
             }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
-
-            // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
                 throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                         + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+            }
+        } else if (newExplicit) {
+            if (oldOne.getClass() == newOne.getClass()) {
+                throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
+                        + " creators: already had " + oldOne + ", encountered explicitly marked " + newOne);
+            }
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
