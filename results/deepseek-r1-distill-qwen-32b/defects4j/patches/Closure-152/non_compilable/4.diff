diff --git a/tmp/7d44cf96-8c4e-4773-86d7-4845209323ef_buggy.java b/tmp/e9e9bf5d-383f-4e77-ad04-3d0ad9ffd9d5_fixed.java
index 58a1651..95ee536 100644
--- a/tmp/7d44cf96-8c4e-4773-86d7-4845209323ef_buggy.java
+++ b/tmp/e9e9bf5d-383f-4e77-ad04-3d0ad9ffd9d5_fixed.java
@@ -1,32 +1,36 @@
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope) {
     setResolvedTypeInternal(this);
 
     call = (ArrowType) safeResolve(call, t, scope);
     prototype = (FunctionPrototypeType) safeResolve(prototype, t, scope);
 
-    // Warning about typeOfThis if it doesn't resolve to an ObjectType
-    // is handled further upstream.
-    // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+    // Resolve 'typeOfThis' without casting to ObjectType immediately
+    JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);
+    if (resolvedTypeOfThis instanceof ObjectType) {
+        typeOfThis = (ObjectType) resolvedTypeOfThis;
+    } else {
+        // Report an error if 'typeOfThis' is not an object type
+        t.report(Errors.TYPE_MISMATCH_AT_THIS_PARAMETER,
+                "The 'this' type must be an object type but was '%s'", resolvedTypeOfThis.toString());
+    }
 
     boolean changed = false;
-    ImmutableList.Builder<ObjectType> resolvedInterfaces =
-        ImmutableList.builder();
+    ImmutableList.Builder<ObjectType> resolvedInterfaces = ImmutableList.builder();
     for (ObjectType iface : implementedInterfaces) {
         ObjectType resolvedIface = (ObjectType) iface.resolve(t, scope);
         resolvedInterfaces.add(resolvedIface);
         changed |= (resolvedIface != iface);
     }
     if (changed) {
         implementedInterfaces = resolvedInterfaces.build();
     }
 
     if (subTypes != null) {
         for (int i = 0; i < subTypes.size(); i++) {
             subTypes.set(i, (FunctionType) subTypes.get(i).resolve(t, scope));
         }
     }
 
     return super.resolveInternal(t, scope);
 }
\ No newline at end of file
