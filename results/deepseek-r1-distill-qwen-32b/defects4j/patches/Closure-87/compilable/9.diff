diff --git a/tmp/bde859d0-b907-4d2c-bdb9-41c1527400af_buggy.java b/tmp/ea709ba3-2909-424b-9973-06397c5f9ee7_fixed.java
index 19fd63e..dabfac5 100644
--- a/tmp/bde859d0-b907-4d2c-bdb9-41c1527400af_buggy.java
+++ b/tmp/ea709ba3-2909-424b-9973-06397c5f9ee7_fixed.java
@@ -1,24 +1,15 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          // Do not fold if the expression is in an EXPR_RESULT node.
+          if (maybeExpr.getType() == Token.EXPR_RESULT) {
+            return false;
+          }
+          return true;
+        }
       }
     }
-
     return false;
   }
\ No newline at end of file
