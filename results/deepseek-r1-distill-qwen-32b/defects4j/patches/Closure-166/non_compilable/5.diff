diff --git a/tmp/6fcf1619-a1bb-43fe-ad04-e41f69b0ff16_buggy.java b/tmp/c1c02127-7683-44c9-876d-32227f3ce25b_fixed.java
index 5f96616..b24cba1 100644
--- a/tmp/6fcf1619-a1bb-43fe-ad04-e41f69b0ff16_buggy.java
+++ b/tmp/c1c02127-7683-44c9-876d-32227f3ce25b_fixed.java
@@ -1,20 +1,13 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
-    if (constraint.isRecordType()) {
+    // This includes any object types that can be treated as records.
+    if (constraint.isObjectType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
     }
   }
\ No newline at end of file
