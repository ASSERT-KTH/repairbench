diff --git a/tmp/adb502f7-5c65-4cf3-88db-644423dc5227_buggy.java b/tmp/02d52a7b-69e3-430c-b1a0-2ea06b2136f2_fixed.java
index 5f96616..27d7b90 100644
--- a/tmp/adb502f7-5c65-4cf3-88db-644423dc5227_buggy.java
+++ b/tmp/02d52a7b-69e3-430c-b1a0-2ea06b2136f2_fixed.java
@@ -1,20 +1,16 @@
 @Override
 public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
         return;
     }
 
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
+    // If the constraint is a record, ensure we're working with an object type.
     if (constraint.isRecordType()) {
+        if (!(getType() instanceof ObjectType)) {
+            // Convert to an empty object if not already a record.
+            setType(new ObjectType());
+        }
         matchRecordTypeConstraint(constraint.toObjectType());
     }
 }
\ No newline at end of file
