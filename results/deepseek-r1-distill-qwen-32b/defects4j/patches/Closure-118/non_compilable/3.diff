diff --git a/tmp/d9e516bd-b70d-4dce-9dff-fb2b3cf7d212_buggy.java b/tmp/3432c9f3-8714-42b6-80cd-390d6bc0a30b_fixed.java
index 0b7c52e..b830719 100644
--- a/tmp/d9e516bd-b70d-4dce-9dff-fb2b3cf7d212_buggy.java
+++ b/tmp/3432c9f3-8714-42b6-80cd-390d6bc0a30b_fixed.java
@@ -1,27 +1,28 @@
-    /**
-     * Processes a OBJECTLIT node.
-     */
     private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
-        // Maybe STRING, GET, SET
+      for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
+        if (child.isProperty()) {
+          Node keyNode = child.getFirstChild();
+          String name;
+          if (keyNode.isId()) {
+            name = keyNode.getName();
+          } else if (keyNode.isString()) {
+            name = keyNode.getValue();
+          } else {
+            continue; // Skip unsupported key types
+          }
 
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
           T type = typeSystem.getType(getScope(), n, name);
 
           Property prop = getProperty(name);
           if (!prop.scheduleRenaming(child,
                                      processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
             if (propertiesToErrorFor.containsKey(name)) {
               compiler.report(JSError.make(
                   t.getSourceName(), child, propertiesToErrorFor.get(name),
                   Warnings.INVALIDATION, name,
                   (type == null ? "null" : type.toString()), n.toString(), ""));
             }
           }
         }
       }
+    }
\ No newline at end of file
