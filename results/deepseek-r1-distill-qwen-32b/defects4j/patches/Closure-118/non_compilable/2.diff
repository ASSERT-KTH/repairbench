diff --git a/tmp/f0bf3b99-f711-4e9a-b8d9-1ffc87a7c938_buggy.java b/tmp/00c18138-d343-4bef-8a91-95b86d4a1d99_fixed.java
index 0b7c52e..1842edc 100644
--- a/tmp/f0bf3b99-f711-4e9a-b8d9-1ffc87a7c938_buggy.java
+++ b/tmp/00c18138-d343-4bef-8a91-95b86d4a1d99_fixed.java
@@ -1,27 +1,26 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
-        // Maybe STRING, GET, SET
-
+        // Properties of an object literal can have several forms.
         // We should never see a mix of numbers and strings.
-        String name = child.getString();
+        String name = NodeUtil.getKeyName(child);
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
         if (!prop.scheduleRenaming(child,
                                    processProperty(t, prop, type, null))) {
           // TODO(user): It doesn't look like the user can do much in this
           // case right now.
           if (propertiesToErrorFor.containsKey(name)) {
             compiler.report(JSError.make(
                 t.getSourceName(), child, propertiesToErrorFor.get(name),
                 Warnings.INVALIDATION, name,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
       }
     }
\ No newline at end of file
