diff --git a/tmp/3c3fdf37-8c6b-4d95-8956-ef559431c5e7_buggy.java b/tmp/2ae308ab-b5fd-4247-b248-28f2ef5079a3_fixed.java
index fc8c302..733df0b 100644
--- a/tmp/3c3fdf37-8c6b-4d95-8956-ef559431c5e7_buggy.java
+++ b/tmp/2ae308ab-b5fd-4247-b248-28f2ef5079a3_fixed.java
@@ -1,23 +1,31 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
-        throws IOException, JsonParseException
-    {
-        // Multiple possibilities...
+        throws IOException, JsonParseException {
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // Check if it's a binary node
+        if (n.isValueNode() && n.isBinary()) {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+        }
+        // Check if it's a POJO node
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
+        // Handle TextNode with specified base64 variant
+        if (n.isTextual()) {
+            String text = ((TextNode) n).textValue();
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException e) {
+                return null; // Indicates invalid binary content as per requirements
+            }
+        }
     }
-        // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
