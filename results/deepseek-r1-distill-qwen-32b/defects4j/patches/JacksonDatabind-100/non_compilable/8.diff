diff --git a/tmp/ae0a16c4-36ef-406b-bb8e-95ca08abaabb_buggy.java b/tmp/3f57badc-56c5-420d-b1c0-b3894a4cabc9_fixed.java
index fc8c302..bc883ce 100644
--- a/tmp/ae0a16c4-36ef-406b-bb8e-95ca08abaabb_buggy.java
+++ b/tmp/3f57badc-56c5-420d-b1c0-b3894a4cabc9_fixed.java
@@ -1,23 +1,29 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // First try binaryValue(), which may handle POJOs correctly
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+        // Then check if it's a POJO node with byte array
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
+        // If it's a TextNode, attempt to decode using the specified variant
+        if (n instanceof TextNode) {
+            String encoded = ((TextNode) n).getValue();
+            if (encoded != null) {
+                return b64variant.decode(encoded);
             }
-        // otherwise return null to mark we have no binary content
+        }
+    }
+    // Otherwise return null
     return null;
 }
\ No newline at end of file
