diff --git a/tmp/389f5ed3-a4f9-42ef-98a4-fd60ee12faf3_buggy.java b/tmp/ed05b062-a062-42ec-a311-5deefbbc7e3d_fixed.java
index 822447c..3144c52 100644
--- a/tmp/389f5ed3-a4f9-42ef-98a4-fd60ee12faf3_buggy.java
+++ b/tmp/ed05b062-a062-42ec-a311-5deefbbc7e3d_fixed.java
@@ -1,37 +1,29 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            String entityName = this.entityName(c);
-            if (entityName == null) {
-                if (c > 0x7F) {
-                    writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
-                    writer.write(';');
-                } else {
-                    writer.write(c);
+    for (int i = 0; i < len; ) {
+        int codePoint = str.codePointAt(i);
+        String entityName = null;
+        if (codePoint <= 0xFFFF) {
+            char c = (char) codePoint;
+            entityName = this.entityName(c);
         }
-            } else {
+        if (entityName != null) {
             writer.write('&');
             writer.write(entityName);
             writer.write(';');
+        } else {
+            if (codePoint > 0x7F) {
+                writer.write("&#");
+                writer.write(Integer.toString(codePoint, 10));
+                writer.write(';');
+            } else {
+                writer.write((char) codePoint);
+            }
+        }
+        if (Character.isSupplementaryCodePoint(codePoint)) {
+            i += 2;
+        } else {
+            i += 1;
         }
     }
 }
\ No newline at end of file
