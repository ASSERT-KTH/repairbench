diff --git a/tmp/55aa972c-605c-455b-abb2-cea065c66f34_buggy.java b/tmp/cdfba811-bca3-4021-ba7f-cead07883e92_fixed.java
index 42b58d0..da17d6b 100644
--- a/tmp/55aa972c-605c-455b-abb2-cea065c66f34_buggy.java
+++ b/tmp/cdfba811-bca3-4021-ba7f-cead07883e92_fixed.java
@@ -1,19 +1,31 @@
 protected void registerTypeVariablesOn(Type classType) {
+    registerTypeVariablesOn(classType, new HashSet<>());
+}
+
+private void registerTypeVariablesOn(Type classType, Set<ParameterizedType> visited) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
+    if (visited.contains(parameterizedType)) {
+        return;
+    }
+    visited.add(parameterizedType);
+    
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument instanceof ParameterizedType) {
+            registerTypeVariablesOn(actualTypeArgument, visited);
+            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+        // logger.log(...);
     }
 }
\ No newline at end of file
