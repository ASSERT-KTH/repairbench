diff --git a/tmp/00bf8112-0905-49f7-aac7-5f1fa96bdb0a_buggy.java b/tmp/6d9da86e-37a9-42ed-b67f-858a7e3e0898_fixed.java
index 1c53d31..c80d783 100644
--- a/tmp/00bf8112-0905-49f7-aac7-5f1fa96bdb0a_buggy.java
+++ b/tmp/6d9da86e-37a9-42ed-b67f-858a7e3e0898_fixed.java
@@ -1,20 +1,29 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  // Check if the field type can accept null values before applying nullSafe
+  if (fieldType != null) {
+    Class<?> rawType = fieldType.getRawType();
+    if (rawType instanceof Class) {
+      rawType = (Class<?>) rawType;
+      if (!rawType.isPrimitive()) {
         typeAdapter = typeAdapter.nullSafe();
+      }
+    }
+  }
   return typeAdapter;
 }
\ No newline at end of file
