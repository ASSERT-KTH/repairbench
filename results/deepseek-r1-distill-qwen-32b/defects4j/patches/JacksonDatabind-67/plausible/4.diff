diff --git a/tmp/d923b4b9-9fd5-4542-bb24-a93c2180f7b1_buggy.java b/tmp/f8acd8c7-fcb7-4cde-a992-11cb81d01680_fixed.java
index bc80637..6c6343b 100644
--- a/tmp/d923b4b9-9fd5-4542-bb24-a93c2180f7b1_buggy.java
+++ b/tmp/f8acd8c7-fcb7-4cde-a992-11cb81d01680_fixed.java
@@ -1,33 +1,32 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
+        // Handle enums and default deserializers without immediate return
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+        }
+        // Apply deserializer modifiers
+        if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
-        }
         return deser;
     }
\ No newline at end of file
