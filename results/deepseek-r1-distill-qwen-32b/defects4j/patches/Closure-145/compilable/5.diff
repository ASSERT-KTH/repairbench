diff --git a/tmp/61f12c13-4241-42b1-8544-bd911f955a0d_buggy.java b/tmp/66e8e329-11d4-48cf-bc52-a1e11e1951d8_fixed.java
index 57f69c5..72afa00 100644
--- a/tmp/61f12c13-4241-42b1-8544-bd911f955a0d_buggy.java
+++ b/tmp/66e8e329-11d4-48cf-bc52-a1e11e1951d8_fixed.java
@@ -1,12 +1,20 @@
   /**
-   * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+   * @return Whether the Node is a DO or FUNCTION (with or without labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+      // Check if the node is directly a FUNCTION or DO.
+      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+          return true;
+      }
+      // Check if the node is a LABEL whose child is a FUNCTION or DO.
+      if (n.getType() == Token.LABEL) {
+          Node child = n.getFirstChild();
+          // Traverse through consecutive LABEL nodes to find the actual statement.
+          while (child != null && child.getType() == Token.LABEL) {
+              child = child.getFirstChild();
+          }
+          // Check if the non-LABEL child is a FUNCTION or DO.
+          return child != null && (child.getType() == Token.FUNCTION || child.getType() == Token.DO);
+      }
+      return false;
   }
\ No newline at end of file
