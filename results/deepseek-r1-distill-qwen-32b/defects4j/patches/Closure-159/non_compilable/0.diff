diff --git a/tmp/239c0c37-6a11-4135-9577-4d5b622d105b_buggy.java b/tmp/5f585299-6fec-44eb-8e81-afb55de4019a_fixed.java
index de9af32..94384ab 100644
--- a/tmp/239c0c37-6a11-4135-9577-4d5b622d105b_buggy.java
+++ b/tmp/5f585299-6fec-44eb-8e81-afb55de4019a_fixed.java
@@ -1,18 +1,26 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP) {
+        Node propNameNode = child.getSecondChild();
+        if (propNameNode.getType() == Token.STRING && "call".equals(propNameNode.getString())) {
+          Node funcNode = child.getFirstChild();
+          if (funcNode.getType() == Token.NAME) {
+            changed.add(funcNode.getString());
+          }
+        }
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
