diff --git a/tmp/d50fd7cc-f79c-4e87-a8e6-72d3f6ab6950_buggy.java b/tmp/598e0a34-54f5-4617-938d-071c536c38f9_fixed.java
index d6662c7..8f97853 100644
--- a/tmp/d50fd7cc-f79c-4e87-a8e6-72d3f6ab6950_buggy.java
+++ b/tmp/598e0a34-54f5-4617-938d-071c536c38f9_fixed.java
@@ -1,23 +1,26 @@
-    /**
-     * Parse an entry name from a buffer.
-     * Parsing stops when a NUL is found
-     * or the buffer length is reached.
-     *
-     * @param buffer The buffer from which to parse.
-     * @param offset The offset into the buffer from which to parse.
-     * @param length The maximum number of bytes to parse.
-     * @return The entry name.
-     */
 public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
     int end = offset + length;
+    int nulIndex = -1;
 
-        for (int i = offset; i < end; ++i) {
+    for (int i = offset; i < end; i++) {
         if (buffer[i] == 0) {
+            nulIndex = i;
             break;
         }
-            result.append((char) buffer[i]);
     }
 
-        return result.toString();
+    int nameLength;
+    if (nulIndex == -1) {
+        nameLength = end - offset;
+    } else {
+        nameLength = nulIndex - offset;
+    }
+
+    byte[] nameBytes = Arrays.copyOfRange(buffer, offset, offset + nameLength);
+
+    try {
+        return new String(nameBytes, "ISO-8859-1");
+    } catch (UnsupportedEncodingException e) {
+        throw new RuntimeException("ISO-8859-1 encoding not supported", e);
+    }
 }
\ No newline at end of file
