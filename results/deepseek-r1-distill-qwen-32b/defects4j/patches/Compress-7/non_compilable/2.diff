diff --git a/tmp/b948755e-aad2-4cd7-ac7f-3ac6abfb5c14_buggy.java b/tmp/61737c01-8718-4652-8230-6173981d417e_fixed.java
index d6662c7..0070af0 100644
--- a/tmp/b948755e-aad2-4cd7-ac7f-3ac6abfb5c14_buggy.java
+++ b/tmp/61737c01-8718-4652-8230-6173981d417e_fixed.java
@@ -1,23 +1,33 @@
     /**
      * Parse an entry name from a buffer.
      * Parsing stops when a NUL is found
      * or the buffer length is reached.
      *
      * @param buffer The buffer from which to parse.
      * @param offset The offset into the buffer from which to parse.
      * @param length The maximum number of bytes to parse.
      * @return The entry name.
      */
     public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
         int end = offset + length;
+        if (end > buffer.length) {
+            end = buffer.length;
+        }
 
-        for (int i = offset; i < end; ++i) {
+        int firstNull = -1;
+        for (int i = offset; i < end; i++) {
             if (buffer[i] == 0) {
+                firstNull = i;
                 break;
             }
-            result.append((char) buffer[i]);
         }
 
-        return result.toString();
+        int nameLength = (firstNull != -1) ? (firstNull - offset) : (end - offset);
+
+        try {
+            return new String(buffer, offset, nameLength, "ISO-8859-1");
+        } catch (UnsupportedEncodingException e) {
+            // ISO-8859-1 is a required encoding, so this should never happen
+            throw new RuntimeException(e);
+        }
     }
\ No newline at end of file
