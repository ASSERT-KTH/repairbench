diff --git a/tmp/27115d2a-c3a8-41e4-9038-e8a325c2e90d_buggy.java b/tmp/2a4efa5b-5b14-4c4a-afdc-45785aa02bac_fixed.java
index dc93be3..1bedfe3 100644
--- a/tmp/27115d2a-c3a8-41e4-9038-e8a325c2e90d_buggy.java
+++ b/tmp/2a4efa5b-5b14-4c4a-afdc-45785aa02bac_fixed.java
@@ -1,14 +1,15 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        // Only emit end tag if the element is not a void tag
+        if (!el.tag().isVoid()) {
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
