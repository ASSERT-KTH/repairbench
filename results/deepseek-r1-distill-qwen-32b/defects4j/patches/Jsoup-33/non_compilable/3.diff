diff --git a/tmp/ecf33168-4abe-4722-9466-c27ea2af1e93_buggy.java b/tmp/3567a604-548e-4167-9e64-50e794d66131_fixed.java
index dc93be3..4a72c69 100644
--- a/tmp/ecf33168-4abe-4722-9466-c27ea2af1e93_buggy.java
+++ b/tmp/3567a604-548e-4167-9e64-50e794d66131_fixed.java
@@ -1,14 +1,22 @@
+    private static final Set<String> VOID_TAGS = new HashSet<>(Arrays.asList(
+        "area", "base", "br", "col", "embed", "hr", "img", "input", "link", "meta", "param", "source", "track", "wbr"
+    ));
+
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            String tagName = startTag.name();
+            if (VOID_TAGS.contains(tagName)) {
+                Element el = insertEmpty(startTag);
+                return el;
+            } else {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+                tokeniser.emit(new Token.EndTag(el.tagName()));
                 return el;
             }
+        }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
