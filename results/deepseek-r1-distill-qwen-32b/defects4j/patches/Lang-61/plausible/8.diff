diff --git a/tmp/6749ae5a-f862-4cf7-b80f-e25e4480045e_buggy.java b/tmp/8fc76df0-491c-4d11-a09c-bd27ac52543e_fixed.java
index addeb8d..cf77878 100644
--- a/tmp/6749ae5a-f862-4cf7-b80f-e25e4480045e_buggy.java
+++ b/tmp/8fc76df0-491c-4d11-a09c-bd27ac52543e_fixed.java
@@ -1,38 +1,30 @@
-    /**
-     * Searches the string builder to find the first reference to the specified
-     * string starting searching from the given index.
-     * <p>
-     * Note that a null input string will return -1, whereas the JDK throws an exception.
-     * 
-     * @param str  the string to find, null returns -1
-     * @param startIndex  the index to start at, invalid index rounded to edge
-     * @return the first index of the string, or -1 if not found
-     */
 public int indexOf(String str, int startIndex) {
-        startIndex = (startIndex < 0 ? 0 : startIndex);
+    startIndex = (startIndex < 0) ? 0 : startIndex;
     if (str == null || startIndex >= size) {
         return -1;
     }
     int strLen = str.length();
     if (strLen == 1) {
         return indexOf(str.charAt(0), startIndex);
     }
     if (strLen == 0) {
         return startIndex;
     }
     if (strLen > size) {
         return -1;
     }
     char[] thisBuf = buffer;
-        int len = thisBuf.length - strLen;
-        outer:
-        for (int i = startIndex; i < len; i++) {
-            for (int j = 0; j < strLen; j++) {
+    int maxIndex = size - strLen;
+    for (int i = startIndex; i <= maxIndex; i++) {
+        int j;
+        for (j = 0; j < strLen; j++) {
             if (str.charAt(j) != thisBuf[i + j]) {
-                    continue outer;
+                break;
             }
         }
+        if (j == strLen) {
             return i;
         }
+    }
     return -1;
 }
\ No newline at end of file
