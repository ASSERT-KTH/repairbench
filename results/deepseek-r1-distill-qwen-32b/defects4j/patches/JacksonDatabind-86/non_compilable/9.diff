diff --git a/tmp/1fdd74e6-af31-4e7b-ae7b-d83dacf56eb9_buggy.java b/tmp/d3894824-902f-494b-8a8d-77b84eb8373c_fixed.java
index e69de29..187151b 100644
--- a/tmp/1fdd74e6-af31-4e7b-ae7b-d83dacf56eb9_buggy.java
+++ b/tmp/d3894824-902f-494b-8a8d-77b84eb8373c_fixed.java
@@ -0,0 +1,48 @@
+public JavaType constructType(Class<?> type) {
+    TypeBindings typeBindings = null;
+    if (_typeBindings == null) {
+        _typeBindings = new TypeBindings();
+    }
+    Class<?> erasedClass = type;
+    if (type instanceof Class<?>) {
+        erasedClass = (Class<?>) type;
+    } else {
+        erasedClass = type instanceof ParameterizedType ?
+                (Class<?>) ((ParameterizedType) type).getRawType() :
+                null;
+    }
+    if (erasedClass == null) {
+        return null;
+    }
+    JavaType superClassType = getType(erasedClass.getSuperclass());
+
+    // Merge bean properties from all superclasses
+    BeanPropertyMap beanProperties = buildBeanPropertyMap(erasedClass);
+    JavaType currentSuper = superClassType;
+    while (currentSuper != null && currentSuper != JavaType.OBJECT_TYPE) {
+        BeanPropertyMap superBeanProperties = currentSuper.getBeanProperties();
+        if (superBeanProperties != null) {
+            beanProperties.merge(superBeanProperties);
+        }
+        currentSuper = currentSuper.getSuperClass();
+    }
+
+    // Continue with constructing the type...
+    // (rest of the code for constructing the type)
+}
+
+// Helper method to build bean properties by traversing all superclasses
+private BeanPropertyMap buildBeanPropertyMap(Class<?> erasedClass) {
+    BeanPropertyMap properties = new BeanPropertyMap();
+    // Collect properties from this class and all superclasses
+    for (Class<?> cls = erasedClass; cls != Object.class; cls = cls.getSuperclass()) {
+        BeanInfo beanInfo = Introspector.getBeanInfo(cls);
+        for (PropertyDescriptor pd : beanInfo.getPropertyDescriptors()) {
+            String propName = pd.getName();
+            if (isAccessible(pd)) {
+                properties.put(propName, new BeanProperty(propName, pd));
+            }
+        }
+    }
+    return properties;
+}
\ No newline at end of file
