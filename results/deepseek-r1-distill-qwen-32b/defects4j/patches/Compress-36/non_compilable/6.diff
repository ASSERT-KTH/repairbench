diff --git a/tmp/3a43cec9-24c7-44fe-947d-9827f0c2f3b3_buggy.java b/tmp/493a6196-7fa8-4ee2-ad6e-c68be0c409db_fixed.java
index d357c7e..3b1916b 100644
--- a/tmp/3a43cec9-24c7-44fe-947d-9827f0c2f3b3_buggy.java
+++ b/tmp/493a6196-7fa8-4ee2-ad6e-c68be0c409db_fixed.java
@@ -1,16 +1,23 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
+        if (currentEntry == null) {
             throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        } else {
+            // Return an empty stream for zero-sized entries
+            return new InputStream() {
+                @Override
+                public int read() throws IOException {
+                    return -1;
+                }
+            };
+        }
     }
 
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
