diff --git a/tmp/7e26a455-ec54-474a-96e8-64165db67019_buggy.java b/tmp/af9fba81-d339-4cc9-8127-d924b374c3ed_fixed.java
index 23f078d..b305633 100644
--- a/tmp/7e26a455-ec54-474a-96e8-64165db67019_buggy.java
+++ b/tmp/af9fba81-d339-4cc9-8127-d924b374c3ed_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    int i = 0;
+    while (i < s.length()) {
         int c = s.codePointAt(i);
+        int charCount = Character.charCount(c);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            String codePointStr = new String(new int[]{c}, 0, 1);
+            sb.append(URLEncoder.encode(codePointStr, UTF_8.name()));
         } else {
             sb.append((char) c);
         }
+        i += charCount;
     }
 }
\ No newline at end of file
