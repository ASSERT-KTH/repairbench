diff --git a/tmp/0472a887-2ac1-4811-9bbb-0ef220bfc884_buggy.java b/tmp/599a80fe-912c-4f29-8b1f-b954068a8245_fixed.java
index 9739964..9088e9a 100644
--- a/tmp/0472a887-2ac1-4811-9bbb-0ef220bfc884_buggy.java
+++ b/tmp/599a80fe-912c-4f29-8b1f-b954068a8245_fixed.java
@@ -1,27 +1,29 @@
 public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
+    if (prices.length == 0) return spans;
     spans[0] = 1; // Span of first element is always 1
 
-    Stack<Integer> indexStack = new Stack<>();
+    java.util.Stack<Integer> indexStack = new java.util.Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+      // Change the condition to check for strict inequality
+      while (!indexStack.isEmpty() && prices[indexStack.peek()] < prices[i]) {
         indexStack.pop();
+      }
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
+      // If index stack is empty, span is i + 1
+      if (indexStack.isEmpty()) {
         spans[i] = i + 1;
-      else
+      } else {
         spans[i] = i - indexStack.peek();
+      }
 
       indexStack.push(i);
     }
 
     return spans;
 }
\ No newline at end of file
