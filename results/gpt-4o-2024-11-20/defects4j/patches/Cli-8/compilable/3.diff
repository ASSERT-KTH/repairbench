diff --git a/tmp/f82ec3f4-5212-4660-95f2-baee759be150_buggy.java b/tmp/a8ec8b2b-d854-4858-8b61-d2baec33cd6d_fixed.java
index 8e93a5e..4c2e906 100644
--- a/tmp/f82ec3f4-5212-4660-95f2-baee759be150_buggy.java
+++ b/tmp/a8ec8b2b-d854-4858-8b61-d2baec33cd6d_fixed.java
@@ -1,43 +1,41 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // Split text into lines to handle existing newlines in the input
+        String[] lines = text.split("\n");
         final String padding = createPadding(nextLineTabStop);
         
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
+        for (int i = 0; i < lines.length; i++) {
+            if (i > 0) {
+                sb.append(defaultNewLine); // add a newline between existing lines
+            }
+
+            String currentLine = lines[i];
+
+            // Wrap each line individually
+            int pos = findWrapPos(currentLine, width, 0);
+
+            if (pos == -1) {
+                sb.append(currentLine.trim());
+                continue;
+            }
+            sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);
+
+            // Process subsequent parts of the line with padding
+            currentLine = padding + currentLine.substring(pos).trim();
+
+            while (true) {
+                pos = findWrapPos(currentLine, width, nextLineTabStop);
+
+                if (pos == -1) {
+                    sb.append(currentLine);
+                    break;
+                }
+
+                sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);
+                currentLine = padding + currentLine.substring(pos).trim();
+            }
+        }
 
         return sb;
     }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
