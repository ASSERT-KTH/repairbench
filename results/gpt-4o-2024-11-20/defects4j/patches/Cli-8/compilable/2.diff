diff --git a/tmp/b8e3e029-8f37-4a1a-8da8-bd9c7190b904_buggy.java b/tmp/77f1bd0f-ae85-4b8c-9b92-a789410177d5_fixed.java
index 8e93a5e..6af09dd 100644
--- a/tmp/b8e3e029-8f37-4a1a-8da8-bd9c7190b904_buggy.java
+++ b/tmp/77f1bd0f-ae85-4b8c-9b92-a789410177d5_fixed.java
@@ -1,43 +1,48 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // Split the provided text into lines based on existing line breaks
+        String[] lines = text.split("\\r?\\n");
         final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
+        for (String line : lines) {
+            boolean firstLine = true;
+
+            while (!line.isEmpty()) {
+                int pos;
+
+                // Determine the wrap position based on width and whether it's the first line
+                if (firstLine) {
+                    pos = findWrapPos(line, width, 0);
+                } else {
+                    pos = findWrapPos(line, width, nextLineTabStop);
+                }
+
+                if (pos == -1) {
+                    // No wrap position found, append the rest of the line
+                    if (!firstLine) {
+                        sb.append(padding);
+                    }
+                    sb.append(rtrim(line));
+                    break;
+                }
+
+                // Append the wrapped line part
+                if (!firstLine) {
+                    sb.append(padding);
+                }
+                sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+
+                // Prepare the remaining text for the next iteration
+                line = line.substring(pos).trim();
+                firstLine = false;
+            }
+
+            // Add a line break if there are more unprocessed lines
+            if (!line.isEmpty()) {
+                sb.append(defaultNewLine);
+            }
+        }
 
         return sb;
     }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
