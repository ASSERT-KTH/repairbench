diff --git a/tmp/f85ca63a-37f1-44ea-b917-be57b904e6f4_buggy.java b/tmp/6964f849-8906-4ee9-bcef-c7c63794d760_fixed.java
index 8e93a5e..549030b 100644
--- a/tmp/f85ca63a-37f1-44ea-b917-be57b904e6f4_buggy.java
+++ b/tmp/6964f849-8906-4ee9-bcef-c7c63794d760_fixed.java
@@ -1,43 +1,35 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        String[] lines = text.split("\\r?\\n"); // Split input text by new lines
         final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
+        for (int i = 0; i < lines.length; i++) {
+            String line = lines[i].trim();
+            boolean isFirstLine = i == 0;
+
+            while (line.length() > 0) {
+                int pos = findWrapPos(line, width, isFirstLine ? 0 : nextLineTabStop);
+
+                if (pos == -1) {
+                    sb.append(line);
+                    break;
+                }
+
+                sb.append(line, 0, pos).append(defaultNewLine);
+                line = line.substring(pos).trim();
+
+                if (!isFirstLine) {
+                    sb.append(padding); // Add padding for continuation lines
+                }
+
+                isFirstLine = false;
+            }
+
+            if (i < lines.length - 1) {
+                sb.append(defaultNewLine).append(padding); // Add padding for new line, except on last line
+            }
+        }
 
         return sb;
     }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
