diff --git a/tmp/9ad21e67-9472-47f1-b4ad-3fca11211e33_buggy.java b/tmp/efbbe0d5-9824-4193-90b2-8015d95dd97a_fixed.java
index 1bd0d7e..af18a11 100644
--- a/tmp/9ad21e67-9472-47f1-b4ad-3fca11211e33_buggy.java
+++ b/tmp/efbbe0d5-9824-4193-90b2-8015d95dd97a_fixed.java
@@ -1,31 +1,38 @@
     /**
      * Get the ns uri of the specified node.
      * @param node Node to check
      * @return String ns uri
      */
     public static String getNamespaceURI(Node node) {
         if (node instanceof Document) {
             node = ((Document) node).getDocumentElement();
         }
 
+        if (!(node instanceof Element)) {
+            return null;
+        }
+
         Element element = (Element) node;
 
         String uri = element.getNamespaceURI();
         if (uri == null) {
             String prefix = getPrefix(node);
             String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
     
             Node aNode = node;
-            while (aNode != null) {
-                if (aNode.getNodeType() == Node.ELEMENT_NODE) {
-                    Attr attr = ((Element) aNode).getAttributeNode(qname);
-                    if (attr != null) {
+            while (aNode != null && aNode.getNodeType() == Node.ELEMENT_NODE) {
+                NamedNodeMap attributes = ((Element) aNode).getAttributes();
+                if (attributes != null) {
+                    for (int i = 0; i < attributes.getLength(); i++) {
+                        Attr attr = (Attr) attributes.item(i);
+                        if (qname.equals(attr.getName())) {
                             return attr.getValue();
                         }
                     }
+                }
                 aNode = aNode.getParentNode();
             }
-            return null;
+            return ""; // Return an empty string for empty namespace
         }
         return uri;
     }
\ No newline at end of file
