diff --git a/tmp/5a81b6d7-ed46-47ea-b7d5-9dccd61a1767_buggy.java b/tmp/20796414-ba15-401f-8302-30f908ab7b40_fixed.java
index a7e6997..a5066ad 100644
--- a/tmp/5a81b6d7-ed46-47ea-b7d5-9dccd61a1767_buggy.java
+++ b/tmp/20796414-ba15-401f-8302-30f908ab7b40_fixed.java
@@ -1,12 +1,32 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
+     * @return boolean indicating if the token is a valid short option
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        if (!token.startsWith("-") || token.length() < 2) {
+            return false;
+        }
+
+        String trimmedToken = token.substring(1);
+        // Check if the first character after "-" is a valid short option
+        String shortOpt = trimmedToken.substring(0, 1);
+
+        if (!options.hasShortOption(shortOpt)) {
+            return false;
+        }
+
+        // Ensure it does not confuse values such as "-last" as a short option
+        if (trimmedToken.length() > 1) {
+            char nextChar = trimmedToken.charAt(1);
+            // If it's not a digit/letter or '=' after the short option, it's invalid
+            if (!Character.isDigit(nextChar) && !Character.isLetter(nextChar) && nextChar != '=') {
+                return false;
+            }
+        }
 
-        // remove leading "-" and "=value"
+        return true;
     }
\ No newline at end of file
