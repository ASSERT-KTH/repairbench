diff --git a/tmp/e00337eb-da5c-49b4-b5ed-6013ba675da2_buggy.java b/tmp/b0b0b6d1-6271-44a7-bb65-f675c33a14ea_fixed.java
index 939f49b..e39669d 100644
--- a/tmp/e00337eb-da5c-49b4-b5ed-6013ba675da2_buggy.java
+++ b/tmp/b0b0b6d1-6271-44a7-bb65-f675c33a14ea_fixed.java
@@ -1,21 +1,18 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+          && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        Node obj = n.getFirstChild();
+        if (obj != null && obj.getType() == Token.GETPROP) {
+          Node property = obj.getNext();
           
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          if (property != null && property.getType() == Token.STRING && 
+              property.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
