diff --git a/tmp/ee5f6178-502a-4c6c-aebb-e414bc36eb41_buggy.java b/tmp/40dc54fb-521b-4be9-b3d4-d9f462204d4d_fixed.java
index 939f49b..edc0e61 100644
--- a/tmp/ee5f6178-502a-4c6c-aebb-e414bc36eb41_buggy.java
+++ b/tmp/40dc54fb-521b-4be9-b3d4-d9f462204d4d_fixed.java
@@ -1,21 +1,15 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          && n.getType() == Token.GETPROP) {
+        Node firstChild = n.getFirstChild();
+        if (firstChild != null && firstChild.getType() == Token.GETPROP) {
+          Node prop = firstChild.getNext();
+          if (prop != null && prop.getType() == Token.STRING &&
+              prop.getString().equals("prototype")) {
             return true;
           }
         }
       }
-
       return false;
     }
\ No newline at end of file
