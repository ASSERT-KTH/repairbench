diff --git a/tmp/643743ff-1e5e-4afa-b1ac-adcb5d765e74_buggy.java b/tmp/ece1b68c-0b57-4249-bc25-38bbc3f3a915_fixed.java
index 373b1e8..c5775df 100644
--- a/tmp/643743ff-1e5e-4afa-b1ac-adcb5d765e74_buggy.java
+++ b/tmp/ece1b68c-0b57-4249-bc25-38bbc3f3a915_fixed.java
@@ -1,37 +1,43 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
-            int end;
-            for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+    while (i < input.length) {
+        int o = input[i] & 0xFF; // Ensure unsigned interpretation
         if ((o & 0x80) == 0) {
-                    continue; // ASCII
+            i++; // ASCII character, continue to the next byte
+            continue;
         }
 
-                // UTF-8 leading:
+        int end;
+        // UTF-8 leading byte checks:
         if ((o & 0xE0) == 0xC0) {
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
             end = i + 3;
         } else {
-                    return false;
+            return false; // Not a valid UTF-8 leading byte
         }
 
+        if (end >= input.length) {
+            return false; // Not enough bytes remaining for a complete character
+        }
 
-                while (i < end) {
-                    i++;
-                    o = input[i];
-                    if ((o & 0xC0) != 0x80) {
-                        return false;
+        // Check continuation bytes:
+        for (int k = i + 1; k <= end; k++) {
+            if (k >= input.length || (input[k] & 0xC0) != 0x80) {
+                return false; // Invalid continuation byte
             }
         }
+
+        i = end + 1; // Move to the next character
     }
+
     return true;
 }
\ No newline at end of file
