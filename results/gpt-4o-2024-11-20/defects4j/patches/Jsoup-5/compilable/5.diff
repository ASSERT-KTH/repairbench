diff --git a/tmp/389fcc2e-ef61-4062-9a5a-13d8d2c44145_buggy.java b/tmp/a2e7e9e6-b216-4125-a943-4723cb8a742b_fixed.java
index 39dd8e7..0072d8c 100644
--- a/tmp/389fcc2e-ef61-4062-9a5a-13d8d2c44145_buggy.java
+++ b/tmp/a2e7e9e6-b216-4125-a943-4723cb8a742b_fixed.java
@@ -1,30 +1,33 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
+        if (key.length() > 0) { // Ensure key is not empty before matching "="
             if (tq.matchChomp("=")) {
                 tq.consumeWhitespace();
 
                 if (tq.matchChomp(SQ)) {
                     value = tq.chompTo(SQ);
                 } else if (tq.matchChomp(DQ)) {
                     value = tq.chompTo(DQ);
                 } else {
                     StringBuilder valueAccum = new StringBuilder();
                     // no ' or " to look for, so scan to end tag or space (or end of stream)
                     while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                         valueAccum.append(tq.consume());
                     }
                     value = valueAccum.toString();
                 }
                 tq.consumeWhitespace();
             }
+        } else { 
+            tq.consume(); // Key was empty, consume one character to avoid infinite loop
+            return null; // Return null for invalid attribute
+        }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
-            tq.consume();
-                
             return null;
         }
     }
\ No newline at end of file
