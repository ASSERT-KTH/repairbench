diff --git a/tmp/a3ec5876-f4e1-49ab-a2b5-1ed91e9dabc3_buggy.java b/tmp/9209e45c-a06f-4795-aac0-ebda4e864385_fixed.java
index 5f1dcf2..9116148 100644
--- a/tmp/a3ec5876-f4e1-49ab-a2b5-1ed91e9dabc3_buggy.java
+++ b/tmp/9209e45c-a06f-4795-aac0-ebda4e864385_fixed.java
@@ -1,41 +1,26 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
-
-            incrementIterationsCounter();
-
-            // save the original vertex
     final RealPointValuePair[] original = simplex;
     final RealPointValuePair best = original[0];
 
+    while (true) {
+
+        incrementIterationsCounter();
+
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
-
             // compute the expanded simplex
-                final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
-                    simplex = reflectedSimplex;
+                simplex = reflectedSimplex(original, 1.0);
+            } else {
+                // accept the expanded simplex
+                simplex = expandedSimplex(original, khi);
             }
+        else
                   
\ No newline at end of file
-                return;
-
-            }
-
-            // compute the contracted simplex
-            final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
-                return;
-            }
-
-        }
-
-    }
