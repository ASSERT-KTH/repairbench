diff --git a/tmp/9cd7f29c-9e1c-49b4-b511-855be6e05afa_buggy.java b/tmp/d9887213-e76a-4515-90c1-2cf5b890d1a4_fixed.java
index 0722547..410e61f 100644
--- a/tmp/9cd7f29c-9e1c-49b4-b511-855be6e05afa_buggy.java
+++ b/tmp/d9887213-e76a-4515-90c1-2cf5b890d1a4_fixed.java
@@ -1,26 +1,26 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
         _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        // Also need to adjust row start, taking into account the prior buffer length
+        _currInputRowStart = Math.max(0, _currInputRowStart - _origBufferLen);
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
     }
\ No newline at end of file
