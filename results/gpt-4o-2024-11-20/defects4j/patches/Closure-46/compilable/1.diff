diff --git a/tmp/ed470c3e-dcc9-455f-b4cd-19e0dd418759_buggy.java b/tmp/558830f6-9461-48f3-94c3-1f9178ebfbe5_fixed.java
index 46817a7..4ecd658 100644
--- a/tmp/ed470c3e-dcc9-455f-b4cd-19e0dd418759_buggy.java
+++ b/tmp/558830f6-9461-48f3-94c3-1f9178ebfbe5_fixed.java
@@ -1,16 +1,31 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    RecordType thisRecordType = this.toMaybeRecordType();
+    RecordType thatRecordType = that.toMaybeRecordType();
+
+    // Add all properties from this record type
+    for (String property : thisRecordType.getPropertyNames()) {
+        JSType thisPropertyType = thisRecordType.getPropertyType(property);
+        if (thatRecordType.hasProperty(property)) {
+            JSType thatPropertyType = thatRecordType.getPropertyType(property);
+            builder.addProperty(property,
+                JSType.getLeastSupertype(thisPropertyType, thatPropertyType),
+                thisRecordType.getPropertyNode(property));
+        } else {
+            builder.addProperty(property, thisPropertyType, thisRecordType.getPropertyNode(property));
         }
     }
+
+    // Add properties from the other record type that aren't in this record type
+    for (String property : thatRecordType.getPropertyNames()) {
+        if (!thisRecordType.hasProperty(property)) {
+            builder.addProperty(property, thatRecordType.getPropertyType(property), thatRecordType.getPropertyNode(property));
+        }
+    }
+
     return builder.build();
 }
\ No newline at end of file
