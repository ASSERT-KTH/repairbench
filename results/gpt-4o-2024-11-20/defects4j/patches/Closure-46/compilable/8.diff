diff --git a/tmp/9ce88dcd-4755-4826-83a3-910f6e4fcef6_buggy.java b/tmp/652952b1-c30a-46c4-bdb5-5b0e327e4218_fixed.java
index 46817a7..598c3b2 100644
--- a/tmp/9ce88dcd-4755-4826-83a3-910f6e4fcef6_buggy.java
+++ b/tmp/652952b1-c30a-46c4-bdb5-5b0e327e4218_fixed.java
@@ -1,16 +1,31 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
+
+  RecordType thisRecord = this.toMaybeRecordType();
+  RecordType otherRecord = that.toMaybeRecordType();
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
+
+  // Add all unique properties from both record types
+  for (String property : thisRecord.getOwnPropertyNames()) {
+    JSType thisPropertyType = thisRecord.getPropertyType(property);
+    if (otherRecord.hasProperty(property)) {
+      JSType otherPropertyType = otherRecord.getPropertyType(property);
+      builder.addProperty(property, 
+          thisPropertyType.getLeastSupertype(otherPropertyType),
           getPropertyNode(property));
+    } else {
+      builder.addProperty(property, thisPropertyType, getPropertyNode(property));
     }
   }
+
+  for (String property : otherRecord.getOwnPropertyNames()) {
+    if (!thisRecord.hasProperty(property)) {
+      builder.addProperty(property, otherRecord.getPropertyType(property), null);
+    }
+  }
+
   return builder.build();
 }
\ No newline at end of file
