diff --git a/tmp/3b91c04f-5590-4623-b6a8-669f2f7c92dc_buggy.java b/tmp/c562b4c8-b0ae-483d-a8f6-664fb620d66b_fixed.java
index c6cb157..b3b7159 100644
--- a/tmp/3b91c04f-5590-4623-b6a8-669f2f7c92dc_buggy.java
+++ b/tmp/c562b4c8-b0ae-483d-a8f6-664fb620d66b_fixed.java
@@ -1,14 +1,21 @@
     /**
      * Method called to expand size of the current segment, to
      * accommodate for more contiguous content. Usually only
      * used when parsing tokens like names if even then.
      */
     public char[] expandCurrentSegment()
     {
         final char[] curr = _currentSegment;
         // Let's grow by 50% by default
         final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        // Ensure the new length does not accidentally shrink or overflow
+        int newLen = len + (len >> 1); // Grow by 50%
+        if (newLen < len) { // Handle overflow
+            newLen = MAX_SEGMENT_LEN + 1;
+        }
+        if (newLen > MAX_SEGMENT_LEN) { 
+            // If exceeding max, cap at MAX_SEGMENT_LEN + 1 (to allow one extra character)
+            newLen = len == MAX_SEGMENT_LEN ? MAX_SEGMENT_LEN + 1 : MAX_SEGMENT_LEN;
+        }
         return (_currentSegment = Arrays.copyOf(curr, newLen));
     }
\ No newline at end of file
