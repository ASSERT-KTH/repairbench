diff --git a/tmp/85739c7d-58e9-4558-b9d1-e28208fe8992_buggy.java b/tmp/b758615a-7b20-43ed-9fbd-f4ca9d51d683_fixed.java
index c6cb157..958338a 100644
--- a/tmp/85739c7d-58e9-4558-b9d1-e28208fe8992_buggy.java
+++ b/tmp/b758615a-7b20-43ed-9fbd-f4ca9d51d683_fixed.java
@@ -1,14 +1,24 @@
-    /**
-     * Method called to expand size of the current segment, to
-     * accommodate for more contiguous content. Usually only
-     * used when parsing tokens like names if even then.
-     */
     public char[] expandCurrentSegment()
     {
         final char[] curr = _currentSegment;
         // Let's grow by 50% by default
         final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+        // Ensure we handle MAX_SEGMENT_LEN correctly
+        int newLen;
+        if (len >= MAX_SEGMENT_LEN) {
+            // Increment only by 25% of current length after reaching near max
+            newLen = len + (len >> 2);
+        } else {
+            // Until reaching the max, grow by 50%
+            newLen = len + (len >> 1);
+            // Ensure we don't exceed MAX_SEGMENT_LEN
+            if (newLen > MAX_SEGMENT_LEN) {
+                newLen = MAX_SEGMENT_LEN;
+            }
+        }
+        // Ensure new length is always greater than the current length
+        if (newLen <= len) {
+            newLen = len + 1;
+        }
         return (_currentSegment = Arrays.copyOf(curr, newLen));
     }
\ No newline at end of file
