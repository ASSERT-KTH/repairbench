diff --git a/tmp/8ee25fe1-a88e-4559-9c12-452d30b1c5e1_buggy.java b/tmp/b3ace969-1f4b-47b5-8193-3c591efd9c78_fixed.java
index 5f96616..74db84a 100644
--- a/tmp/8ee25fe1-a88e-4559-9c12-452d30b1c5e1_buggy.java
+++ b/tmp/b3ace969-1f4b-47b5-8193-3c591efd9c78_fixed.java
@@ -1,20 +1,30 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
-    if (hasReferenceName()) {
+    if (hasReferenceName() || constraint == null) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
+    // taking each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      ObjectType constraintObjType = constraint.toObjectType();
+      if (constraintObjType != null) {
+        matchRecordTypeConstraint(constraintObjType);
+      }
+    } else if (constraint.isUnionType()) {
+      // Handle the case where the constraint is a union type.
+      for (JSType alternate : constraint.toMaybeUnionType().getAlternates()) {
+        if (alternate.isRecordType()) {
+          matchRecordTypeConstraint(alternate.toObjectType());
+        }
+      }
     }
   }
\ No newline at end of file
