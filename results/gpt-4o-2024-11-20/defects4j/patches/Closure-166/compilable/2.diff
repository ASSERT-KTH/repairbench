diff --git a/tmp/65bf39f6-3f25-4c58-abd1-c408a680adae_buggy.java b/tmp/ca970b4d-b065-468b-a694-0e805999456d_fixed.java
index 5f96616..5759fb8 100644
--- a/tmp/65bf39f6-3f25-4c58-abd1-c408a680adae_buggy.java
+++ b/tmp/ca970b4d-b065-468b-a694-0e805999456d_fixed.java
@@ -1,20 +1,29 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
+  // taking each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+    ObjectType thisObject = toObjectType();
+    if (thisObject != null) {
+      ObjectType constraintObject = constraint.toObjectType();
+      for (String property : constraintObject.getOwnPropertyNames()) {
+        if (!thisObject.hasOwnProperty(property)) {
+          thisObject.defineInferredProperty(
+              property, constraintObject.getPropertyType(property), null);
+        }
+      }
+    }
   }
 }
\ No newline at end of file
