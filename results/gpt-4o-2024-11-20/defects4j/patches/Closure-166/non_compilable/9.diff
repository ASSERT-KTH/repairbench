diff --git a/tmp/5b38a8ba-1222-4aa4-9512-f0110b4e349f_buggy.java b/tmp/acf76ebe-de6a-443e-9dc5-3ab295ef74c6_fixed.java
index 5f96616..4c911cc 100644
--- a/tmp/5b38a8ba-1222-4aa4-9512-f0110b4e349f_buggy.java
+++ b/tmp/acf76ebe-de6a-443e-9dc5-3ab295ef74c6_fixed.java
@@ -1,20 +1,18 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
+    } else if (constraint.isObject()) {
+      // Handle the case where the constraint object is a more general object type.
+      ObjectType objectType = constraint.toObjectType();
+      if (objectType != null && objectType.isObjectLiteralType()) {
+        matchRecordTypeConstraint(objectType);
+      }
     }
   }
\ No newline at end of file
