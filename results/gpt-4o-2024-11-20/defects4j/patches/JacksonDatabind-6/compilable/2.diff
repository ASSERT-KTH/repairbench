diff --git a/tmp/e7bc3d40-157c-48ac-8213-0cd7cea888f8_buggy.java b/tmp/9f28a97f-cf29-46c2-806e-5fef147bf29f_fixed.java
index cd412d2..8e6f5fc 100644
--- a/tmp/e7bc3d40-157c-48ac-8213-0cd7cea888f8_buggy.java
+++ b/tmp/9f28a97f-cf29-46c2-806e-5fef147bf29f_fixed.java
@@ -1,76 +1,77 @@
-    protected Date parseAsISO8601(String dateStr, ParsePosition pos)
-    {
-        /* 21-May-2009, tatu: DateFormat has very strict handling of
-         * timezone  modifiers for ISO-8601. So we need to do some scrubbing.
-         */
-
-        /* First: do we have "zulu" format ('Z' == "GMT")? If yes, that's
-         * quite simple because we already set date format timezone to be
-         * GMT, and hence can just strip out 'Z' altogether
-         */
+protected Date parseAsISO8601(String dateStr, ParsePosition pos) {
     int len = dateStr.length();
     char c = dateStr.charAt(len - 1);
     DateFormat df;
 
-        // [JACKSON-200]: need to support "plain" date...
+    // Handle plain date (no time)
     if (len <= 10 && Character.isDigit(c)) {
         df = _formatPlain;
         if (df == null) {
             df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);
         }
     } else if (c == 'Z') {
+        // Handle "Z" timezone
         df = _formatISO8601_z;
         if (df == null) {
             df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
         }
-            // [JACKSON-334]: may be missing milliseconds... if so, add
+        // Ensure milliseconds if missing
         if (dateStr.charAt(len - 4) == ':') {
             StringBuilder sb = new StringBuilder(dateStr);
             sb.insert(len - 1, ".000");
             dateStr = sb.toString();
         }
     } else {
-            // Let's see if we have timezone indicator or not...
+        // Handle offset timezones or no explicit timezone
         if (hasTimeZone(dateStr)) {
             c = dateStr.charAt(len - 3);
-                if (c == ':') { // remove optional colon
-                    // remove colon
+            if (c == ':') {
+                // Remove colon in timezone offset
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.delete(len - 3, len - 2);
                 dateStr = sb.toString();
-                } else if (c == '+' || c == '-') { // missing minutes
-                    // let's just append '00'
+            } else if (c == '+' || c == '-') {
+                // Append missing minutes in timezone
                 dateStr += "00";
             }
-                // Milliseconds partial or missing; and even seconds are optional
-                len = dateStr.length();
-                // remove 'T', '+'/'-' and 4-digit timezone-offset
-                c = dateStr.charAt(len-9);
-                if (Character.isDigit(c)) {
+
+            // Handle partial milliseconds
+            int millisIndex = dateStr.lastIndexOf('.');
+            int timezoneIndex = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));
+            if (millisIndex > -1 && millisIndex < timezoneIndex) {
+                int millisLength = timezoneIndex - millisIndex - 1;
                 StringBuilder sb = new StringBuilder(dateStr);
-                    sb.insert(len-5, ".000");
+                if (millisLength == 1) {
+                    sb.insert(timezoneIndex, "00");
+                } else if (millisLength == 2) {
+                    sb.insert(timezoneIndex, "0");
+                }
+                dateStr = sb.toString();
+            } else if (millisIndex == -1) {
+                // Append missing milliseconds
+                StringBuilder sb = new StringBuilder(dateStr);
+                sb.insert(timezoneIndex, ".000");
                 dateStr = sb.toString();
             }
+
             df = _formatISO8601;
             if (_formatISO8601 == null) {
                 df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
             }
         } else {
-                // If not, plain date. Easiest to just patch 'Z' in the end?
+            // Assume 'Z' timezone and append if missing
             StringBuilder sb = new StringBuilder(dateStr);
-                // And possible also millisecond part if missing
-                int timeLen = len - dateStr.lastIndexOf('T') - 1;
-                if (timeLen <= 8) {
+            if (dateStr.lastIndexOf('T') > 0 && dateStr.indexOf('.') == -1) {
                 sb.append(".000");
             }
             sb.append('Z');
             dateStr = sb.toString();
+
             df = _formatISO8601_z;
             if (df == null) {
-                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,
-                            _timezone, _locale);
+                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);
             }
         }
     }
     return df.parse(dateStr, pos);
 }
\ No newline at end of file
