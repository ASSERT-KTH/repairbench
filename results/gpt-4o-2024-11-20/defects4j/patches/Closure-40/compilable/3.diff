diff --git a/tmp/fd2396e5-2bb0-4485-b780-038a79483084_buggy.java b/tmp/b3e1c4b6-9e40-4662-bbbe-3240f4916b52_fixed.java
index 670114d..53f9cbc 100644
--- a/tmp/fd2396e5-2bb0-4485-b780-038a79483084_buggy.java
+++ b/tmp/b3e1c4b6-9e40-4662-bbbe-3240f4916b52_fixed.java
@@ -1,48 +1,56 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
+      if (nameNode != null && nameNode.isName()) {
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           JsName nameInfo = getName(nameNode.getString(), true);
+          if (nameInfo != null) {
             recordSet(nameInfo.name, nameNode);
           }
+        }
+      }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
+        // Ensure parent and its grandparents exist to prevent NullPointerException
+        Node grandParent = parent != null ? parent.getParent() : null;
+        if (grandParent != null) {
           refNodes.add(new ClassDefiningFunctionNode(
-              name, n, parent, parent.getParent()));
+              name, n, parent, grandParent));
+        }
       }
     }
   }
 }
\ No newline at end of file
