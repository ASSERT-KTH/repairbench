diff --git a/tmp/6bad9554-388d-4da7-83fe-4a93b672f1f3_buggy.java b/tmp/5a2f31e8-4d65-4291-af4d-334f266d7e5e_fixed.java
index 670114d..9815dbe 100644
--- a/tmp/6bad9554-388d-4da7-83fe-4a93b672f1f3_buggy.java
+++ b/tmp/5a2f31e8-4d65-4291-af4d-334f266d7e5e_fixed.java
@@ -1,48 +1,62 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
+
+        // Fix: Properly handle inheritance calls specifically for goog.inherits
+        if (nameNode != null && nameNode.isGetProp() && "goog.inherits".equals(nameNode.getQualifiedName())) {
+          Node subclassNode = nameNode.getNext();
+          Node superclassNode = subclassNode != null ? subclassNode.getNext() : null;
+
+          if (subclassNode != null && superclassNode != null) {
+            NameInformation subclassInfo = createNameInformation(t, subclassNode, n);
+            NameInformation superclassInfo = createNameInformation(t, superclassNode, n);
+
+            if (subclassInfo != null && superclassInfo != null) {
+              recordInheritance(subclassInfo.name, superclassInfo.name, n);
+            }
+          }
+        } else if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
             refNodes.add(new ClassDefiningFunctionNode(
                 name, n, parent, parent.getParent()));
           }
         }
       }
     }
\ No newline at end of file
