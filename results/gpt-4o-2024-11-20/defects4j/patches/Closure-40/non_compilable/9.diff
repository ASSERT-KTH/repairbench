diff --git a/tmp/0cefe261-78d5-4712-93c0-91adc17e53c8_buggy.java b/tmp/28eee45b-a257-475d-baa5-798ebca3ea24_fixed.java
index 670114d..cf8005d 100644
--- a/tmp/0cefe261-78d5-4712-93c0-91adc17e53c8_buggy.java
+++ b/tmp/28eee45b-a257-475d-baa5-798ebca3ea24_fixed.java
@@ -1,48 +1,64 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
             refNodes.add(new ClassDefiningFunctionNode(
                 name, n, parent, parent.getParent()));
           }
+        } else {
+          // Handle "goog.inherits" calls for class relationships
+          if (nameNode.isName() && "goog.inherits".equals(nameNode.getString())
+              && n.hasTwoChildren()) {
+            Node subclassNode = n.getSecondChild();
+            Node superclassNode = subclassNode.getNext();
+
+            if (subclassNode != null && superclassNode != null &&
+                subclassNode.isQualifiedName() && superclassNode.isQualifiedName()) {
+              JsName subclassName = getName(subclassNode.getQualifiedName(), false);
+              JsName superclassName = getName(superclassNode.getQualifiedName(), false);
+              if (subclassName != null && superclassName != null) {
+                recordInheritance(subclassName, superclassName);
+              }
+            }
+          }
         }
       }
     }
\ No newline at end of file
