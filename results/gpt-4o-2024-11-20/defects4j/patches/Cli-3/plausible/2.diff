diff --git a/tmp/d5a42ba9-67ee-40f5-b325-848b8a966678_buggy.java b/tmp/05671367-b6d3-4ef5-a66e-d89e01832156_fixed.java
index d9b400d..3aabdbe 100644
--- a/tmp/d5a42ba9-67ee-40f5-b325-848b8a966678_buggy.java
+++ b/tmp/05671367-b6d3-4ef5-a66e-d89e01832156_fixed.java
@@ -1,21 +1,26 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
         try
         {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+            // Parse the input string as a Double if it contains a '.' or 'e'/'E' for scientific notation
+            if (str.contains(".") || str.contains("e") || str.contains("E")) {
+                return Double.valueOf(str);
+            } 
+            // Otherwise, parse it as a Long
+            return Long.valueOf(str);
         }
         catch (NumberFormatException nfe)
         {
             System.err.println(nfe.getMessage());
         }
 
         return null;
     }
\ No newline at end of file
