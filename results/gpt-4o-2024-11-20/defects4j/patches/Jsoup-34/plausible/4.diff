diff --git a/tmp/824bdd7e-e0ba-4989-be03-71af0f43ba3f_buggy.java b/tmp/b1a6e932-e81b-4790-be90-eed2f829ce32_fixed.java
index 21f64c6..fa2d1eb 100644
--- a/tmp/824bdd7e-e0ba-4989-be03-71af0f43ba3f_buggy.java
+++ b/tmp/b1a6e932-e81b-4790-be90-eed2f829ce32_fixed.java
@@ -1,23 +1,30 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
+        int seqLength = seq.length();
+
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
+            // scan to first instance of startChar:
             if (startChar != input[offset])
                 while (++offset < length && startChar != input[offset]);
+
+            // Ensure there is enough space remaining in the input to match the sequence
+            if (offset + seqLength > length)
+                return -1;
+
             int i = offset + 1;
             int last = i + seq.length() - 1;
             if (offset < length) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
