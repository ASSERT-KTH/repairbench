diff --git a/tmp/f182b8a0-491a-490a-b39c-f97cbbd6b172_buggy.java b/tmp/ae0ac7f8-8c22-47c7-b93b-96c373f78289_fixed.java
index 6cfa79b..5673545 100644
--- a/tmp/f182b8a0-491a-490a-b39c-f97cbbd6b172_buggy.java
+++ b/tmp/ae0ac7f8-8c22-47c7-b93b-96c373f78289_fixed.java
@@ -1,12 +1,22 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        try {
             return 0.5 * (1.0 + Erf.erf((x - mean) /
                     (standardDeviation * Math.sqrt(2.0))));
+        } catch (MaxIterationsExceededException ex) {
+            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
+                return 0.0d;
+            } else if (x > (mean + 20 * standardDeviation)) {
+                return 1.0d;
+            } else {
+                throw ex;
+            }
+        }
     }
