diff --git a/tmp/89ea5615-8d41-40d0-8cfe-3efca9602cfe_buggy.java b/tmp/1a6a4090-c8a0-4106-a2ed-fecdbce0cf2c_fixed.java
index 6cfa79b..01d459f 100644
--- a/tmp/89ea5615-8d41-40d0-8cfe-3efca9602cfe_buggy.java
+++ b/tmp/1a6a4090-c8a0-4106-a2ed-fecdbce0cf2c_fixed.java
@@ -1,12 +1,21 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X < <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+
+        // Handle extreme values to avoid convergence issues
+        if (dev < -20.0) {
+            return 0.0; // Extremely small tail probability
+        } else if (dev > 20.0) {
+            return 1.0; // Extremely large tail probability
+        } else {
+            // Normal evaluation when within reasonable bounds
+            return 0.5 * (1.0 + Erf.erf(dev));
+        }
     }
\ No newline at end of file
