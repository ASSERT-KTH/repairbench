diff --git a/tmp/1226866b-2163-4b36-9e4a-790ae0e4a289_buggy.java b/tmp/7e66cafb-9db3-4c03-a936-90cc7edbebc9_fixed.java
index 6cfa79b..1531f54 100644
--- a/tmp/1226866b-2163-4b36-9e4a-790ae0e4a289_buggy.java
+++ b/tmp/7e66cafb-9db3-4c03-a936-90cc7edbebc9_fixed.java
@@ -1,12 +1,23 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X < <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        int maxDeviation = 20;
+        double dev = (x - mean) / standardDeviation;
+        
+        // Handle extreme values to prevent convergence exceptions
+        if (dev < -maxDeviation) {
+            return 0.0; // Very far in the left tail
+        }
+        if (dev > maxDeviation) {
+            return 1.0; // Very far in the right tail
+        }
+        
+        // Perform normal calculation for cumulative probability
+        return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));
     }
\ No newline at end of file
