diff --git a/tmp/93d994cb-8a10-44cc-8fa1-ae1c36607fc8_buggy.java b/tmp/d1a9ef1a-1a9c-456e-948d-de2527dcd08c_fixed.java
index 7de6748..b75758b 100644
--- a/tmp/93d994cb-8a10-44cc-8fa1-ae1c36607fc8_buggy.java
+++ b/tmp/d1a9ef1a-1a9c-456e-948d-de2527dcd08c_fixed.java
@@ -1,23 +1,38 @@
 final void newAttribute() {
     if (attributes == null)
         attributes = new Attributes();
 
     if (pendingAttributeName != null) {
-                // the tokeniser has skipped whitespace control chars, but trimming could collapse to empty for other control codes, so verify here
+        // Sanitize the attribute name by trimming and removing any control characters
         pendingAttributeName = pendingAttributeName.trim();
+        if (pendingAttributeName.isEmpty() || containsControlCharacter(pendingAttributeName)) {
+            pendingAttributeName = null;
+        } else {
             Attribute attribute;
-                    if (hasPendingAttributeValue)
+            if (hasPendingAttributeValue) {
                 attribute = new Attribute(pendingAttributeName,
                     pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS);
-                    else if (hasEmptyAttributeValue)
+            } else if (hasEmptyAttributeValue) {
                 attribute = new Attribute(pendingAttributeName, "");
-                    else
+            } else {
                 attribute = new BooleanAttribute(pendingAttributeName);
+            }
             attributes.put(attribute);
         }
+    }
     pendingAttributeName = null;
     hasEmptyAttributeValue = false;
     hasPendingAttributeValue = false;
     reset(pendingAttributeValue);
     pendingAttributeValueS = null;
 }
+
+private boolean containsControlCharacter(String value) {
+    for (int i = 0; i < value.length(); i++) {
+        char c = value.charAt(i);
+        if (c < 0x20 || c == 0x7F) { // ASCII control characters
+            return true;
+        }
+    }
+    return false;
+}
\ No newline at end of file
