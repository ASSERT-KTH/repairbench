diff --git a/tmp/367b869b-7a3b-4637-830c-19086eadb07d_buggy.java b/tmp/0bc926b9-efc1-40e4-9135-aa352c13aba3_fixed.java
index f674e52..7ee61c4 100644
--- a/tmp/367b869b-7a3b-4637-830c-19086eadb07d_buggy.java
+++ b/tmp/0bc926b9-efc1-40e4-9135-aa352c13aba3_fixed.java
@@ -1,41 +1,19 @@
-    /**
-     * Test for the equality of two Complex objects.
-     * <p>
-     * If both the real and imaginary parts of two Complex numbers
-     * are exactly the same, and neither is <code>Double.NaN</code>, the two
-     * Complex objects are considered to be equal.</p>
-     * <p>
-     * All <code>NaN</code> values are considered to be equal - i.e, if either
-     * (or both) real and imaginary parts of the complex number are equal
-     * to <code>Double.NaN</code>, the complex number is equal to 
-     * <code>Complex.NaN</code>.</p>
-     *
-     * @param other Object to test for equality to this
-     * @return true if two Complex objects are equal, false if
-     *         object is null, not an instance of Complex, or
-     *         not equal to this Complex instance
-     * 
-     */
     public boolean equals(Object other) {
-        boolean ret;
-        
         if (this == other) { 
-            ret = true;
-        } else if (other == null) {
-            ret = false;
-        } else  {
-            try {
+            return true;
+        } 
+        
+        if (other == null || !(other instanceof Complex)) {
+            return false;
+        } 
+        
         Complex rhs = (Complex) other;
-                if (rhs.isNaN()) {
-                    ret = this.isNaN();
-                } else {
-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
-                }
-            } catch (ClassCastException ex) {
-                // ignore exception
-                ret = false;
-            }
+        
+        if (this.isNaN() || rhs.isNaN()) {
+            // If either this or the other Complex number is NaN, both must be NaN to be considered equal
+            return this.isNaN() && rhs.isNaN();
         }
         
-        return ret;
+        return (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) 
+            && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
     }
\ No newline at end of file
