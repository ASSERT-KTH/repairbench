diff --git a/tmp/9e3291f9-bef9-450f-b601-799fbaa13183_buggy.java b/tmp/52e01a5c-2365-401f-a6b0-0dbdc4e7004e_fixed.java
index cbfa753..02f9d7b 100644
--- a/tmp/9e3291f9-bef9-450f-b601-799fbaa13183_buggy.java
+++ b/tmp/52e01a5c-2365-401f-a6b0-0dbdc4e7004e_fixed.java
@@ -1,15 +1,26 @@
     void insert(Token.Comment commentToken) {
         Comment comment = new Comment(commentToken.getData());
         Node insert = comment;
         if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)
             // so we do a bit of a hack and parse the data as an element to pull the attributes out
             String data = comment.getData();
             if (data.length() > 1 && (data.startsWith("!") || data.startsWith("?"))) {
-                Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri, Parser.xmlParser());
+                String elementData = data.substring(1, data.length() - 1).trim();
+                // Prevent parsing if the elementData is malformed or empty
+                if (!elementData.isEmpty() && isValidXmlDeclaration(elementData)) {
+                    Document doc = Jsoup.parse("<" + elementData + ">", baseUri, Parser.xmlParser());
+                    if (!doc.children().isEmpty()) {
                         Element el = doc.child(0);
                         insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));
                         insert.attributes().addAll(el.attributes());
                     }
                 }
+            }
+        }
         insertNode(insert);
     }
+
+    private boolean isValidXmlDeclaration(String data) {
+        // Simple validation to check if the XML declaration is likely to be valid
+        return data.matches("[a-zA-Z_:][a-zA-Z0-9\\-_.:]*.*");
+    }
\ No newline at end of file
