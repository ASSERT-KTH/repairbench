diff --git a/tmp/59c22634-7fdf-4cd5-a0f8-c2b1985c91b8_buggy.java b/tmp/15ad30cb-518a-4ecc-b69f-5860fd855b35_fixed.java
index 70cafe0..581bc60 100644
--- a/tmp/59c22634-7fdf-4cd5-a0f8-c2b1985c91b8_buggy.java
+++ b/tmp/15ad30cb-518a-4ecc-b69f-5860fd855b35_fixed.java
@@ -1,18 +1,20 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in. null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon)) { // Check if the entry is exactly 1.0
                 if (row == null) {
-                row = i;
+                    row = i; // Found a potential basic row
                 } else {
-                return null;
+                    return null; // More than one row has 1.0 in this column
                 }
+            } else if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+                return null; // If any entry other than 1.0 or 0.0 exists, it's not a basic column
             }
         }
         return row;
     }
\ No newline at end of file
