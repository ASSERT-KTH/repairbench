diff --git a/tmp/262a8712-5551-4030-8c3b-0ab6e99ed3c6_buggy.java b/tmp/aa932513-f634-46a1-a52d-ed807473bfca_fixed.java
index b6b11b6..e24f4b8 100644
--- a/tmp/262a8712-5551-4030-8c3b-0ab6e99ed3c6_buggy.java
+++ b/tmp/aa932513-f634-46a1-a52d-ed807473bfca_fixed.java
@@ -1,38 +1,49 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
+            next(pos); // move past the initial quote
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
+
         int lastHold = start;
+
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+            if (escapingOn && pattern.regionMatches(i, ESCAPED_QUOTE, 0, ESCAPED_QUOTE.length())) {
+                // Append up to this point and the single quote
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+                }
+                i += ESCAPED_QUOTE.length() - 1; // Skip past the escaped quote
+                pos.setIndex(i + 1);
                 lastHold = pos.getIndex();
                 continue;
             }
-            switch (c[pos.getIndex()]) {
+
+            switch (c[i]) {
             case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                // Append up to this point and move past the end quote
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, i - lastHold);
+                }
+                pos.setIndex(i + 1); // Move past the closing quote
+                return appendTo;
             default:
-                next(pos);
+                break;
             }
         }
+
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
