diff --git a/tmp/42768a96-fcfd-45df-987a-a385a86b2ba5_buggy.java b/tmp/268deb77-8d1a-49d3-a635-fa06b98a64b6_fixed.java
index b6b11b6..2f7067e 100644
--- a/tmp/42768a96-fcfd-45df-987a-a385a86b2ba5_buggy.java
+++ b/tmp/268deb77-8d1a-49d3-a635-fa06b98a64b6_fixed.java
@@ -1,38 +1,54 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
-        }
         int lastHold = start;
+
+        // Move the position index forward
+        next(pos);
+
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+            char currentChar = c[pos.getIndex()];
+            
+            if (escapingOn && currentChar == QUOTE) {
+                if (pos.getIndex() + 1 < pattern.length() && pattern.charAt(pos.getIndex() + 1) == QUOTE) {
+                    // Handle escaped quote ('')
+                    if (appendTo != null) {
+                        appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);
+                    }
+                    pos.setIndex(pos.getIndex() + 2); // Skip two single quotes
                     lastHold = pos.getIndex();
-                continue;
+                } else {
+                    // End of quoted string
+                    next(pos);
+                    if (appendTo != null) {
+                        appendTo.append(c, lastHold, pos.getIndex() - lastHold - 1);
+                    }
+                    return appendTo;
                 }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
+            } else if (!escapingOn && currentChar == QUOTE) {
+                // End of quoted string without escaping
                 next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, pos.getIndex() - lastHold - 1);
+                }
+                return appendTo;
+            } else {
+                // Regular character, move to the next
                 next(pos);
             }
         }
+
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
