diff --git a/tmp/91f2c75c-ed69-436f-ac46-11ceaa110f36_buggy.java b/tmp/9004dbcb-ffe5-495a-98b6-201ccdbcf979_fixed.java
index b6b11b6..95a9aa9 100644
--- a/tmp/91f2c75c-ed69-436f-ac46-11ceaa110f36_buggy.java
+++ b/tmp/9004dbcb-ffe5-495a-98b6-201ccdbcf979_fixed.java
@@ -1,38 +1,30 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
-        }
         int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
-                lastHold = pos.getIndex();
-                continue;
+
+        for (int i = start; i < pattern.length(); i++) {
+            pos.setIndex(i);
+            if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, i)) {
+                // Process escaped quote
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
                 }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+                i += ESCAPED_QUOTE.length() - 1; // Move index past escaped quote
+                lastHold = i + 1;
+            } else {
+                if (c[i] == QUOTE) {
+                    // Handle end of quoted string
+                    if (appendTo != null) {
+                        appendTo.append(c, lastHold, i - lastHold);
                     }
+                    pos.setIndex(i + 1); // Move past closing quote
+                    return appendTo;
                 }
+            }
+        }
+
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file
