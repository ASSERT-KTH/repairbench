diff --git a/tmp/7a6e5dd4-14c1-4cb2-bfd2-fd7608e4ea81_buggy.java b/tmp/6b30d21b-b47d-4134-8db4-3074ffa8decd_fixed.java
index d357c7e..3a992ca 100644
--- a/tmp/7a6e5dd4-14c1-4cb2-bfd2-fd7608e4ea81_buggy.java
+++ b/tmp/6b30d21b-b47d-4134-8db4-3074ffa8decd_fixed.java
@@ -1,16 +1,24 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
 
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
+        // In solid compression mode we need to decompress all leading folder's
         // streams to get access to an entry. We defer this until really needed
         // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
-            IOUtils.skip(stream, Long.MAX_VALUE);
+        IOUtils.skipFully(stream, Long.MAX_VALUE); // ensures full skip
         stream.close();
     }
 
-        return deferredBlockStreams.get(0);
+    InputStream currentStream = deferredBlockStreams.get(0);
+    if (currentStream.available() == 0) {
+        // If the current stream is exhausted, close it and remove it from the list
+        currentStream.close();
+        deferredBlockStreams.remove(0);
+        throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+    }
+
+    return currentStream;
 }
\ No newline at end of file
