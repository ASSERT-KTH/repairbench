diff --git a/tmp/f7a6f89c-e73e-408b-946a-8fa247f21f36_buggy.java b/tmp/ca056b71-f6ab-4262-a1e1-3931f9bd9d76_fixed.java
index 1530b34..6bb094b 100644
--- a/tmp/f7a6f89c-e73e-408b-946a-8fa247f21f36_buggy.java
+++ b/tmp/ca056b71-f6ab-4262-a1e1-3931f9bd9d76_fixed.java
@@ -1,23 +1,27 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
+            // Ensure the parameter is not redefined with a type incompatible with its known type
+            JSType existingType = astParameter.getJSType();
+            JSType newType = jsDocParameter != null ? jsDocParameter.getJSType() : null;
+            if (existingType != null && newType != null && !existingType.equals(newType)) {
+              reportTypeMismatch(astParameter, existingType, newType);
+            } else {
+              defineSlot(astParameter, functionNode, newType, true);
+            }
             if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
               jsDocParameter = jsDocParameter.getNext();
-            } else {
-              defineSlot(astParameter, functionNode, null, true);
             }
           }
         }
       }
     } // end declareArguments
\ No newline at end of file
