diff --git a/tmp/4ef450ee-ddbf-4ac5-b03f-eda77e07f920_buggy.java b/tmp/2326268e-41fb-4554-99d9-764310f524f7_fixed.java
index 1530b34..dba9436 100644
--- a/tmp/4ef450ee-ddbf-4ac5-b03f-eda77e07f920_buggy.java
+++ b/tmp/2326268e-41fb-4554-99d9-764310f524f7_fixed.java
@@ -1,23 +1,32 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
       Node body = astParameters.getNext();
       FunctionType functionType = (FunctionType) functionNode.getJSType();
+      
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
               defineSlot(astParameter, functionNode,
                   jsDocParameter.getJSType(), true);
               jsDocParameter = jsDocParameter.getNext();
             } else {
               defineSlot(astParameter, functionNode, null, true);
             }
+            // Ensure function arguments behave like dynamically scoped variables to avoid issues.
+            defineDeclaredInScope(astParameter, functionNode);
           }
         }
+      } else {
+        // Even when function type is null, declare slots for all parameters to avoid duplicates.
+        for (Node astParameter : astParameters.children()) {
+          defineSlot(astParameter, functionNode, null, true);
+          defineDeclaredInScope(astParameter, functionNode);
+        }
       }
     } // end declareArguments
\ No newline at end of file
