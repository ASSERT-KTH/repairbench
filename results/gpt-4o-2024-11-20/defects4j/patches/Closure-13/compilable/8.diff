diff --git a/tmp/d470a2bd-e322-4ffb-a7c1-0fd3a6392b16_buggy.java b/tmp/b0b01843-6fff-42ad-af25-21b2e859b1c1_fixed.java
index b5d94e0..9947d1d 100644
--- a/tmp/d470a2bd-e322-4ffb-a7c1-0fd3a6392b16_buggy.java
+++ b/tmp/b0b01843-6fff-42ad-af25-21b2e859b1c1_fixed.java
@@ -1,26 +1,35 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
+    boolean revisit;
     do {
       Node c = node.getFirstChild();
       while (c != null) {
         traverse(c);
-        Node next = c.getNext();
-        c = next;
+        c = c.getNext();
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+      Preconditions.checkState(visits < 10000, "too many iterations");
+
+      revisit = shouldRetraverse(node);
+      if (revisit) {
+        // Ensure in case of retraverse, we handle any modifications.
+        node = node.getParent();
+        if (node == null) {
+          break; // Avoid issues when parent node is null.
+        }
+      }
+    } while (revisit);
 
     exitNode(node);
   }
\ No newline at end of file
