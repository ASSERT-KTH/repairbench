diff --git a/tmp/25880df8-e2c4-49ca-871d-b176b9602920_buggy.java b/tmp/d0362676-8c10-4eec-934c-08fc897fd314_fixed.java
index b5d94e0..4359759 100644
--- a/tmp/25880df8-e2c4-49ca-871d-b176b9602920_buggy.java
+++ b/tmp/d0362676-8c10-4eec-934c-08fc897fd314_fixed.java
@@ -1,26 +1,29 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
+    boolean shouldRetry;
     do {
       Node c = node.getFirstChild();
       while (c != null) {
+        Node next = c.getNext(); // Capture the next node before traversal to avoid unintended modifications during recursion.
         traverse(c);
-        Node next = c.getNext();
         c = next;
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+      Preconditions.checkState(visits < 10000, "too many iterations");
+
+      shouldRetry = shouldRetraverse(node);
+    } while (shouldRetry);
 
     exitNode(node);
   }
\ No newline at end of file
