diff --git a/tmp/8275dcc1-377a-4ef2-857a-b5699c007f20_buggy.java b/tmp/ab21029b-856c-4f48-beb5-b11cd91bae77_fixed.java
index b86b44d..68bcc4b 100644
--- a/tmp/8275dcc1-377a-4ef2-857a-b5699c007f20_buggy.java
+++ b/tmp/ab21029b-856c-4f48-beb5-b11cd91bae77_fixed.java
@@ -1,4 +1,18 @@
     public final Object computeValue(EvalContext context) {
-        return compute(args[0].computeValue(context), args[1].computeValue(context))
-                ? Boolean.TRUE : Boolean.FALSE;
+        Object leftValue = args[0].computeValue(context);
+        Object rightValue = args[1].computeValue(context);
+        
+        // Check if either of the computed values is null or represent an empty node set
+        if (leftValue == null || rightValue == null 
+                || isEmptyNodeSet(leftValue) || isEmptyNodeSet(rightValue)) {
+            return Boolean.FALSE;
+        }
+
+        return compute(leftValue, rightValue) ? Boolean.TRUE : Boolean.FALSE;
+    }
+
+    private boolean isEmptyNodeSet(Object value) {
+        // Helper method to check for empty node sets
+        // Adjust the condition appropriately based on the actual representation
+        return value instanceof NodeSet && ((NodeSet) value).isEmpty();
     }
\ No newline at end of file
