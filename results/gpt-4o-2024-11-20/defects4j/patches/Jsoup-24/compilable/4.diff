diff --git a/tmp/80dd79ad-df86-48d9-bcd9-b3a2928993bd_buggy.java b/tmp/83ef9a4d-3be6-4969-b4a7-b49a0d465348_fixed.java
index b2d53db..5ba0221 100644
--- a/tmp/80dd79ad-df86-48d9-bcd9-b3a2928993bd_buggy.java
+++ b/tmp/83ef9a4d-3be6-4969-b4a7-b49a0d465348_fixed.java
@@ -1,34 +1,40 @@
         void read(Tokeniser t, CharacterReader r) {
             if (r.matchesLetter()) {
                 String name = r.consumeLetterSequence();
                 t.tagPending.appendTagName(name.toLowerCase());
                 t.dataBuffer.append(name);
                 r.advance();
                 return;
             }
 
             if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
                 char c = r.consume();
                 switch (c) {
                     case '\t':
                     case '\n':
                     case '\f':
                     case ' ':
                         t.transition(BeforeAttributeName);
                         break;
                     case '/':
                         t.transition(SelfClosingStartTag);
                         break;
                     case '>':
                         t.emitTagPending();
                         t.transition(Data);
                         break;
                     default:
                         t.dataBuffer.append(c);
+                        if (c == '\'' || c == '\"') {
+                            // Handle quotes properly to avoid breaking parsing inside a script or comment
+                            String quotedString = r.consumeTo(c);
+                            t.dataBuffer.append(quotedString).append(c);
+                        } else {
                             anythingElse(t, r);
+                        }
                         break;
                 }
             } else {
                 anythingElse(t, r);
             }
         }
\ No newline at end of file
