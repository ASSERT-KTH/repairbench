diff --git a/tmp/531eaae6-6d4f-4d3e-8a97-4949acda5eed_buggy.java b/tmp/6636b30b-8ae7-4dc4-b7d3-c44aaf3f79df_fixed.java
index 227a4ef..ea9ea20 100644
--- a/tmp/531eaae6-6d4f-4d3e-8a97-4949acda5eed_buggy.java
+++ b/tmp/6636b30b-8ae7-4dc4-b7d3-c44aaf3f79df_fixed.java
@@ -1,48 +1,52 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+                                         int nextLineTabStop, String text) {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+    if (pos == -1) {
         sb.append(rtrim(text));
-
         return sb;
     }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
+    while (true) {
         int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+        text = text.substring(lastPos).trim();
+
+        // if text becomes empty after trimming, break to avoid infinite loop
+        if (text.isEmpty()) {
+            break;
+        }
+
+        text = padding + text;
         pos = findWrapPos(text, width, 0);
 
-            if (pos == -1)
-            {
+        if (pos == -1) {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+        } else if (pos == lastPos) {
+            // append the rest of the text and exit safely if no further progress can be made
+            sb.append(text);
+            break;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
+
+    return sb;
 }
\ No newline at end of file
