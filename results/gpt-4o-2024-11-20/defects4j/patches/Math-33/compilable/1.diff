diff --git a/tmp/def45bfc-1181-4942-a2a6-126c0da92eed_buggy.java b/tmp/8d64378c-7b77-45db-8d87-8684c953d84b_fixed.java
index 56b2d66..82f22a1 100644
--- a/tmp/def45bfc-1181-4942-a2a6-126c0da92eed_buggy.java
+++ b/tmp/8d64378c-7b77-45db-8d87-8684c953d84b_fixed.java
@@ -1,45 +1,50 @@
     /**
      * Removes the phase 1 objective function, positive cost non-artificial variables,
      * and the non-basic artificial variables from this tableau.
      */
     protected void dropPhase1Objective() {
         if (getNumObjectiveFunctions() == 1) {
             return;
         }
 
         List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
+        columnsToDrop.add(0); // Always drop phase 1 objective function column
 
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                 columnsToDrop.add(i);
             }
         }
 
         // non-basic artificial variables
         for (int i = 0; i < getNumArtificialVariables(); i++) {
             int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
+            if (getBasicRow(col) == null) { // Check if the artificial variable is non-basic
                 columnsToDrop.add(col);
             }
         }
 
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
+        int newHeight = getHeight() - 1; // Exclude the phase 1 objective row
+        int newWidth = getWidth() - columnsToDrop.size(); // Exclude the columns to drop
+
+        double[][] matrix = new double[newHeight][newWidth];
+        for (int i = 1; i < getHeight(); i++) { // Start from row 1 to skip phase 1 objective row
             int col = 0;
             for (int j = 0; j < getWidth(); j++) {
-            if (!columnsToDrop.contains(j)) {
+                if (!columnsToDrop.contains(j)) { // Only include columns not in columnsToDrop
                     matrix[i - 1][col++] = tableau.getEntry(i, j);
                 }
             }
         }
 
+        // Drop columns from columnLabels starting from the back to preserve indices
         for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
             columnLabels.remove((int) columnsToDrop.get(i));
         }
 
+        // Update the tableau with the new matrix
         this.tableau = new Array2DRowRealMatrix(matrix);
-        this.numArtificialVariables = 0;
+        this.numArtificialVariables = 0; // Phase 1 is complete, no more artificial variables
     }
\ No newline at end of file
