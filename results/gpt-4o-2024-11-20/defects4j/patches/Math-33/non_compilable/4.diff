diff --git a/tmp/016cff5a-bedc-4a56-8e67-368aba19727b_buggy.java b/tmp/5be4ff99-3d79-4d33-8e7f-cec9e84933cf_fixed.java
index 56b2d66..7c32da4 100644
--- a/tmp/016cff5a-bedc-4a56-8e67-368aba19727b_buggy.java
+++ b/tmp/5be4ff99-3d79-4d33-8e7f-cec9e84933cf_fixed.java
@@ -1,45 +1,48 @@
     /**
      * Removes the phase 1 objective function, positive cost non-artificial variables,
      * and the non-basic artificial variables from this tableau.
      */
     protected void dropPhase1Objective() {
         if (getNumObjectiveFunctions() == 1) {
             return;
         }
 
-        List<Integer> columnsToDrop = new ArrayList<Integer>();
+        List<Integer> columnsToDrop = new ArrayList<>();
         columnsToDrop.add(0);
 
-        // positive cost non-artificial variables
+        // Positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
             if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
                 columnsToDrop.add(i);
             }
         }
 
-        // non-basic artificial variables
+        // Non-basic artificial variables
         for (int i = 0; i < getNumArtificialVariables(); i++) {
             int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
+            if (getBasicRow(col) == null && !columnsToDrop.contains(col)) {
                 columnsToDrop.add(col);
             }
         }
 
+        // Create new matrix with the phase 1 objective and selected columns removed
         double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
+        for (int i = 1; i < getHeight(); i++) { // Start from row 1 to exclude phase 1 objective row
             int col = 0;
             for (int j = 0; j < getWidth(); j++) {
                 if (!columnsToDrop.contains(j)) {
                     matrix[i - 1][col++] = tableau.getEntry(i, j);
                 }
             }
         }
 
+        // Remove column labels corresponding to dropped columns
         for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
             columnLabels.remove((int) columnsToDrop.get(i));
         }
 
-        this.tableau = new Array2DRowRealMatrix(matrix);
+        // Update tableau and reset the count of artificial variables
+        this.tableau = new Array2DRowRealMatrix(matrix, false);
         this.numArtificialVariables = 0;
     }
\ No newline at end of file
