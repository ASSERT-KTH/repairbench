diff --git a/tmp/7303c35b-edd4-4dec-9550-925211ae2092_buggy.java b/tmp/9c2482c7-6013-4911-b8a7-862393e811d6_fixed.java
index 56b2d66..33e9629 100644
--- a/tmp/7303c35b-edd4-4dec-9550-925211ae2092_buggy.java
+++ b/tmp/9c2482c7-6013-4911-b8a7-862393e811d6_fixed.java
@@ -1,45 +1,47 @@
     /**
      * Removes the phase 1 objective function, positive cost non-artificial variables,
      * and the non-basic artificial variables from this tableau.
      */
     protected void dropPhase1Objective() {
         if (getNumObjectiveFunctions() == 1) {
             return;
         }
 
-        List<Integer> columnsToDrop = new ArrayList<Integer>();
+        List<Integer> columnsToDrop = new ArrayList<>();
         columnsToDrop.add(0);
 
         // positive cost non-artificial variables
         for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
             final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
+            if (Precision.compareTo(entry, 0d, maxUlps) > 0 && getBasicRow(i) == null) { // Only drop if non-basic
                 columnsToDrop.add(i);
             }
         }
 
         // non-basic artificial variables
         for (int i = 0; i < getNumArtificialVariables(); i++) {
             int col = i + getArtificialVariableOffset();
             if (getBasicRow(col) == null) {
                 columnsToDrop.add(col);
             }
         }
 
         double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
         for (int i = 1; i < getHeight(); i++) {
             int col = 0;
             for (int j = 0; j < getWidth(); j++) {
                 if (!columnsToDrop.contains(j)) {
                     matrix[i - 1][col++] = tableau.getEntry(i, j);
                 }
             }
         }
 
-        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
-          columnLabels.remove((int) columnsToDrop.get(i));
+        // Remove columns from columnLabels in reverse order
+        columnsToDrop.sort(Collections.reverseOrder());
+        for (int colIndex : columnsToDrop) {
+            columnLabels.remove(colIndex);
         }
 
         this.tableau = new Array2DRowRealMatrix(matrix);
         this.numArtificialVariables = 0;
     }
\ No newline at end of file
