diff --git a/tmp/6a1de784-48ce-4566-b383-f164ad0b6e7f_buggy.java b/tmp/e67b6c44-1b37-4e67-b158-cb3655b0070c_fixed.java
index cfdcd9c..4f5bf77 100644
--- a/tmp/6a1de784-48ce-4566-b383-f164ad0b6e7f_buggy.java
+++ b/tmp/e67b6c44-1b37-4e67-b158-cb3655b0070c_fixed.java
@@ -1,51 +1,51 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
     if (isAssignmentTarget(n)) {
         return n;
     }
 
     if (!right.isNumber()) {
         // Sometimes people like to use complex expressions to index into
         // arrays, or strings to index into array methods.
         return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
         error(INVALID_GETELEM_INDEX_ERROR, right);
         return n;
     }
 
     if (intIndex < 0) {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
     }
 
     Node current = left.getFirstChild();
-    Node elem = null;
-    for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
+    for (int i = 0; i < intIndex; i++) {
+        if (current == null) {
+            error(INDEX_OUT_OF_BOUNDS_ERROR, right);
+            return n;
+        }
         current = current.getNext();
     }
 
-    if (elem == null) {
+    if (current == null) {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
     }
 
+    Node elem = current;
     if (elem.isEmpty()) {
         elem = NodeUtil.newUndefinedNode(elem);
-    } else {
-      left.removeChild(elem);
     }
 
     // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
+    parent.replaceChild(n, elem.cloneTree());
     reportCodeChange();
-    return elem;
+    return elem.cloneTree();
 }
\ No newline at end of file
