diff --git a/tmp/becd22d2-38b2-4bba-b90d-647bcfa2a270_buggy.java b/tmp/69ad293d-8f9e-404d-a7a0-0e6766afb2c1_fixed.java
index d6a560a..753c6da 100644
--- a/tmp/becd22d2-38b2-4bba-b90d-647bcfa2a270_buggy.java
+++ b/tmp/69ad293d-8f9e-404d-a7a0-0e6766afb2c1_fixed.java
@@ -1,33 +1,34 @@
 /**
  * Resolve the referenced type within the enclosing scope.
  */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
+    // Resolve the type using the registry.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
+        handleTypeCycle(t); // Handle implicit prototype cycle if detected.
+        return getReferencedType(); // Avoid further processing on type cycles.
     }
 
+    // If resolved via registry, complete resolution and return.
     if (resolved) {
         super.resolveInternal(t, enclosing);
         finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+        return registry.isLastGeneration() ? getReferencedType() : this;
     }
 
+    // Resolve the type via properties as a fallback.
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
+        handleTypeCycle(t); // Handle implicit prototype cycle if detected.
+        return getReferencedType(); // Avoid further processing on type cycles.
     }
 
+    // Complete the resolution process.
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
         finishPropertyContinuations();
     }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+
+    return registry.isLastGeneration() ? getReferencedType() : this;
 }
\ No newline at end of file
