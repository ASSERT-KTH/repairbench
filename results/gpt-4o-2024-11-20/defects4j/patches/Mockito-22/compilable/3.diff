diff --git a/tmp/2bf2d4f4-9f39-48a6-9858-64823ad2c8e9_buggy.java b/tmp/f49888f1-2063-4b5d-a42d-aa3156f1e451_fixed.java
index 111ba5e..35c0132 100644
--- a/tmp/2bf2d4f4-9f39-48a6-9858-64823ad2c8e9_buggy.java
+++ b/tmp/f49888f1-2063-4b5d-a42d-aa3156f1e451_fixed.java
@@ -1,9 +1,26 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (o1.getClass().isArray()) { // Fix: Use getClass().isArray() to check for arrays
+        if (!o2.getClass().isArray()) {
+            return false; // If one is an array and the other isn't, they are not equal
+        }
+
+        int length1 = java.lang.reflect.Array.getLength(o1);
+        int length2 = java.lang.reflect.Array.getLength(o2);
+        if (length1 != length2) {
+            return false; // Arrays of different lengths cannot be equal
+        }
+
+        for (int i = 0; i < length1; i++) {
+            Object e1 = java.lang.reflect.Array.get(o1, i);
+            Object e2 = java.lang.reflect.Array.get(o2, i);
+            if (!areEqual(e1, e2)) {
+                return false; // Recursively compare array elements
+            }
+        }
+        return true; // Arrays are equal if all elements are equal
     } else {
         return o1.equals(o2);
     }
 }
\ No newline at end of file
