diff --git a/tmp/fde9ae03-5445-42b5-bbf2-d5a895b7e35f_buggy.java b/tmp/9e5e1039-61f3-4843-84cd-fdcbeb8f61bb_fixed.java
index 111ba5e..ca19cd3 100644
--- a/tmp/fde9ae03-5445-42b5-bbf2-d5a895b7e35f_buggy.java
+++ b/tmp/9e5e1039-61f3-4843-84cd-fdcbeb8f61bb_fixed.java
@@ -1,9 +1,27 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+        if (o1 instanceof int[] && o2 instanceof int[]) {
+            return java.util.Arrays.equals((int[]) o1, (int[]) o2);
+        } else if (o1 instanceof long[] && o2 instanceof long[]) {
+            return java.util.Arrays.equals((long[]) o1, (long[]) o2);
+        } else if (o1 instanceof double[] && o2 instanceof double[]) {
+            return java.util.Arrays.equals((double[]) o1, (double[]) o2);
+        } else if (o1 instanceof float[] && o2 instanceof float[]) {
+            return java.util.Arrays.equals((float[]) o1, (float[]) o2);
+        } else if (o1 instanceof char[] && o2 instanceof char[]) {
+            return java.util.Arrays.equals((char[]) o1, (char[]) o2);
+        } else if (o1 instanceof byte[] && o2 instanceof byte[]) {
+            return java.util.Arrays.equals((byte[]) o1, (byte[]) o2);
+        } else if (o1 instanceof boolean[] && o2 instanceof boolean[]) {
+            return java.util.Arrays.equals((boolean[]) o1, (boolean[]) o2);
+        } else if (o1 instanceof short[] && o2 instanceof short[]) {
+            return java.util.Arrays.equals((short[]) o1, (short[]) o2);
+        } else {
+            return java.util.Arrays.equals((Object[]) o1, (Object[]) o2);
+        }
     } else {
         return o1.equals(o2);
     }
 }
\ No newline at end of file
