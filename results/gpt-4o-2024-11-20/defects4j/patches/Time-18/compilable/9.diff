diff --git a/tmp/6f2204f5-ede1-4134-bacf-355803250442_buggy.java b/tmp/73f1b5c8-1adf-4df1-8a52-934efcb9ec98_fixed.java
index be2af16..e2e5bc4 100644
--- a/tmp/6f2204f5-ede1-4134-bacf-355803250442_buggy.java
+++ b/tmp/73f1b5c8-1adf-4df1-8a52-934efcb9ec98_fixed.java
@@ -1,29 +1,43 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        } catch (IllegalArgumentException e) {
+            // Try the Julian calendar in case the date is invalid in Gregorian
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            return instant;
+        }
+
+        if (instant < iCutoverMillis) {
+            // Maybe it's Julian.
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (julianInstant < iCutoverMillis) {
+                // Use Julian instant if it's valid and before the cutover.
+                return julianInstant;
+            }
         }
+
         return instant;
     }
\ No newline at end of file
