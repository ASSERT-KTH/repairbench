diff --git a/tmp/15102730-74ab-47a6-9fbe-bb3df5a325cf_buggy.java b/tmp/5251c5a4-ed0a-4387-9432-220103faa64d_fixed.java
index be2af16..28b2c0a 100644
--- a/tmp/15102730-74ab-47a6-9fbe-bb3df5a325cf_buggy.java
+++ b/tmp/5251c5a4-ed0a-4387-9432-220103faa64d_fixed.java
@@ -1,29 +1,42 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        } catch (IllegalArgumentException e) {
+            // If Gregorian fails, it's possible that Julian is valid.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            // Check if it falls into the cutover gap.
             if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            return instant;
+        }
+
+        if (instant < iCutoverMillis) {
+            // Try Julian only if the instant is before the cutover.
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (julianInstant < iCutoverMillis) {
+                instant = julianInstant;
+            }
         }
+
         return instant;
     }
\ No newline at end of file
