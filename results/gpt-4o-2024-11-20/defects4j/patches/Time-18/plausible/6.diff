diff --git a/tmp/f9af17be-df17-44f0-aa16-d45141295706_buggy.java b/tmp/150a26a2-e90d-4e2c-b194-f659cec9c87b_fixed.java
index be2af16..c5bbfe3 100644
--- a/tmp/f9af17be-df17-44f0-aa16-d45141295706_buggy.java
+++ b/tmp/150a26a2-e90d-4e2c-b194-f659cec9c87b_fixed.java
@@ -1,29 +1,45 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // Handle day of month being invalid in Gregorian context but valid in Julian
+            if (monthOfYear == 2 && dayOfMonth == 29 && !iGregorianChronology.isLeapYear(year)) {
+                instant = iJulianChronology.getDateTimeMillis
+                    (year, monthOfYear, dayOfMonth,
+                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+                if (instant >= iCutoverMillis) {
+                    // Okay, it's in the illegal cutover gap.
+                    throw new IllegalArgumentException("Specified date does not exist");
+                }
+                return instant;
+            }
+            throw e;
+        }
+        
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
\ No newline at end of file
