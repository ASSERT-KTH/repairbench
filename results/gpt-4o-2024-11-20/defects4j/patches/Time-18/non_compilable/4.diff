diff --git a/tmp/98dc9b21-4607-4706-9db5-be6c7a2ed576_buggy.java b/tmp/73320038-5f55-44f1-8693-91885d410cd3_fixed.java
index be2af16..b007447 100644
--- a/tmp/98dc9b21-4607-4706-9db5-be6c7a2ed576_buggy.java
+++ b/tmp/73320038-5f55-44f1-8693-91885d410cd3_fixed.java
@@ -1,29 +1,42 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
+        // Assume date is Gregorian unless proven Julian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        } catch (IllegalArgumentException e) {
+            // If Gregorian fails, try Julian for earlier dates.
+            if (year < 0 || year <= iCutoverYear) {
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            } else {
+                throw e; // Re-throw exception if date is after cutover.
+            }
+        }
+
+        if (instant < iCutoverMillis) {
+            // Check if Julian date needs validation after cutover.
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (julianInstant >= iCutoverMillis) {
+                // Date falls in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            instant = julianInstant;
         }
         return instant;
     }
\ No newline at end of file
