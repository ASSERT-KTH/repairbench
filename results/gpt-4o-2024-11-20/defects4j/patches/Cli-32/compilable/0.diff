diff --git a/tmp/4ce52022-75a3-4847-b2f2-8a4cbb7d7591_buggy.java b/tmp/11df8aab-cc4e-4cc2-bf79-af1dd88f5b84_fixed.java
index 14b78fb..279fec7 100644
--- a/tmp/4ce52022-75a3-4847-b2f2-8a4cbb7d7591_buggy.java
+++ b/tmp/11df8aab-cc4e-4cc2-bf79-af1dd88f5b84_fixed.java
@@ -1,56 +1,43 @@
-    /**
-     * Finds the next text wrap position after <code>startPos</code> for the
-     * text in <code>text</code> with the column width <code>width</code>.
-     * The wrap point is the last position before startPos+width having a 
-     * whitespace character (space, \n, \r). If there is no whitespace character
-     * before startPos+width, it will return startPos+width.
-     *
-     * @param text The text being searched for the wrap position
-     * @param width width of the wrapped text
-     * @param startPos position from which to start the lookup whitespace
-     * character
-     * @return postion on which the text must be wrapped or -1 if the wrap
-     * position is at the end of the text
-     */
     protected int findWrapPos(String text, int width, int startPos)
     {
         int pos;
 
-        // the line ends before the max wrap pos or a new line char found
-        if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)
-                || ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))
+        // Check for newlines or tabs within the width constraints
+        if (((pos = text.indexOf('\n', startPos)) != -1 && pos < startPos + width)
+                || ((pos = text.indexOf('\t', startPos)) != -1 && pos < startPos + width))
         {
             return pos + 1;
         }
         else if (startPos + width >= text.length())
         {
-            return -1;
+            return -1; // No wrap needed if the end of the text is within width
         }
 
-
-        // look for the last whitespace character before startPos+width
-        pos = startPos + width;
-
+        // Look for the last whitespace character before startPos + width
+        pos = startPos + width - 1; // Corrected to check within valid bounds
         char c;
 
-        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
-                && (c != '\n') && (c != '\r'))
+        while (pos >= startPos)
         {
+            c = text.charAt(pos);
+            if (c == ' ' || c == '\n' || c == '\r')
+            {
+                return pos; // Valid wrap position found
+            }
             --pos;
         }
 
-        // if we found it - just return
-        if (pos > startPos)
+        // If no whitespace found, chop at startPos + width
+        pos = startPos + width; // Start checking after the initial block
+        while (pos < text.length())
         {
-            return pos;
+            c = text.charAt(pos);
+            if (c == ' ' || c == '\n' || c == '\r')
+            {
+                return pos; // Return position of immediate whitespace found
             }
-        
-        // if we didn't find one, simply chop at startPos+width
-        pos = startPos + width;
-        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
-               && (c != '\n') && (c != '\r'))
-        {
             ++pos;
         }
-        return pos == text.length() ? -1 : pos;
+
+        return -1; // If no whitespace at all, return -1
     }
\ No newline at end of file
