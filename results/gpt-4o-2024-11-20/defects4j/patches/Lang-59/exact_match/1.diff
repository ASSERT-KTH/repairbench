diff --git a/tmp/ba0d2457-0666-4bda-a4af-2d87913a33bd_buggy.java b/tmp/76ec01e8-a01e-44b8-88af-615b6af5a554_fixed.java
index 735a993..877fd40 100644
--- a/tmp/ba0d2457-0666-4bda-a4af-2d87913a33bd_buggy.java
+++ b/tmp/76ec01e8-a01e-44b8-88af-615b6af5a554_fixed.java
@@ -1,29 +1,19 @@
-    /**
-     * Appends an object to the builder padding on the right to a fixed length.
-     * The <code>toString</code> of the object is used.
-     * If the object is larger than the length, the right hand side is lost.
-     * If the object is null, null text value is used.
-     * 
-     * @param obj  the object to append, null uses null text
-     * @param width  the fixed field width, zero or negative has no effect
-     * @param padChar  the pad character to use
-     * @return this, to enable chaining
-     */
     public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
         if (width > 0) {
             ensureCapacity(size + width);
             String str = (obj == null ? getNullText() : obj.toString());
             int strLen = str.length();
             if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+                // Fix: Ensure not to write out of bounds for the given width
+                str.getChars(0, width, buffer, size);
             } else {
                 int padLen = width - strLen;
                 str.getChars(0, strLen, buffer, size);
                 for (int i = 0; i < padLen; i++) {
                     buffer[size + strLen + i] = padChar;
                 }
             }
             size += width;
         }
         return this;
     }
\ No newline at end of file
