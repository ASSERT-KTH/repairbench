diff --git a/tmp/7b7a8c71-c605-4124-a670-7282f49b020f_buggy.java b/tmp/324515bb-1550-4d9c-bbba-f2a7cc53d535_fixed.java
index e69de29..7419513 100644
--- a/tmp/7b7a8c71-c605-4124-a670-7282f49b020f_buggy.java
+++ b/tmp/324515bb-1550-4d9c-bbba-f2a7cc53d535_fixed.java
@@ -0,0 +1,36 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+
+    // Iterate through the child elements and collect form data
+    for (Element el : elements.select("input, textarea, select")) {
+        if (!el.hasAttr("name")) continue; // Skip elements without a name
+
+        if (el.tagName().equals("input")) {
+            String type = el.attr("type");
+
+            // Check for supported input types
+            if (!(type.equals("button") || type.equals("submit") || type.equals("reset") || type.equals("hidden") || type.equals("text") || type.equals("password") || type.equals("radio") || type.equals("checkbox"))) {
+                continue;
+            }
+
+            if (type.equalsIgnoreCase("checkbox") || type.equalsIgnoreCase("radio")) {
+                if (!el.hasAttr("checked")) continue; // Include only checked checkboxes/radios
+            }
+
+            data.add(HttpConnection.KeyVal.create(el.attr("name"), el.val()));
+        } else if (el.tagName().equals("textarea")) {
+            data.add(HttpConnection.KeyVal.create(el.attr("name"), el.text()));
+        } else if (el.tagName().equals("select")) {
+            Elements options = el.select("option[selected]");
+            boolean multiple = el.hasAttr("multiple");
+
+            for (Element option : options) {
+                data.add(HttpConnection.KeyVal.create(el.attr("name"), option.val()));
+                if (!multiple) break; // If not multiple, add only first selected option
+            }
+        }
+    }
+
+    return data;
+}
\ No newline at end of file
