diff --git a/tmp/a6c22480-446d-4060-b46f-87d0a23a1eba_buggy.java b/tmp/27881fbb-b9f7-4297-8f8e-84e99b0190e1_fixed.java
index e69de29..7915573 100644
--- a/tmp/a6c22480-446d-4060-b46f-87d0a23a1eba_buggy.java
+++ b/tmp/27881fbb-b9f7-4297-8f8e-84e99b0190e1_fixed.java
@@ -0,0 +1,45 @@
+@Override
+public void writeFieldName(String name) throws IOException {
+    if (_cfgPrettyPrinter != null) {
+        _cfgPrettyPrinter.writeObjectFieldValueSeparator(this);
+    }
+
+    if (_cfgNumbersAsStrings) {
+        writeString(name);
+        return;
+    }
+    
+    boolean quoteFieldNames = isEnabled(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+
+    if (quoteFieldNames) {
+        writeString(name);
+    } else {
+        if (!_isValidUnquotedFieldName(name)) {
+            throw new JsonGenerationException("Attempted to write a field name '" + name + "' as unquoted, but it is not a valid unquoted name", this);
+        }
+        _writeUnquotedFieldName(name);
+    }
+}
+
+private boolean _isValidUnquotedFieldName(String name) {
+    if (name.isEmpty()) {
+        return false;
+    }
+    int len = name.length();
+    for (int i = 0; i < len; ++i) {
+        char c = name.charAt(i);
+        if (!Character.isLetterOrDigit(c) && c != '_') {
+            return false;
+        }
+    }
+    return true;
+}
+
+private void _writeUnquotedFieldName(String name) throws IOException {
+    if (_outputTail + name.length() > _outputEnd) {
+        _flushBuffer();
+    }
+
+    name.getChars(0, name.length(), _outputBuffer, _outputTail);
+    _outputTail += name.length();
+}
\ No newline at end of file
