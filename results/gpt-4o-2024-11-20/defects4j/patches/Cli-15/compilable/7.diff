diff --git a/tmp/2a11d19d-0c7f-4ed0-83da-4599dc905d00_buggy.java b/tmp/6487232e-ab54-42f0-a5cd-a4cb13b97f8d_fixed.java
index 4e8b037..71ef3ce 100644
--- a/tmp/2a11d19d-0c7f-4ed0-83da-4599dc905d00_buggy.java
+++ b/tmp/6487232e-ab54-42f0-a5cd-a4cb13b97f8d_fixed.java
@@ -1,20 +1,21 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+    public List getValues(final Option option, List defaultValues) {
         // initialize the return list
         List valueList = (List) values.get(option);
 
-        // grab the correct default values
+        // grab the correct default values if valueList is empty or null
         if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+            valueList = (defaultValues != null) ? new ArrayList<>(defaultValues) : new ArrayList<>();
         }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+        // augment the list with additional default values if valueList is still empty
+        List additionalDefaults = (List) this.defaultValues.get(option);
+        if (additionalDefaults != null && !additionalDefaults.isEmpty()) {
+            for (Object defaultValue : additionalDefaults) {
+                if (!valueList.contains(defaultValue)) {
+                    valueList.add(defaultValue);
+                }
+            }
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
         
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+        return valueList;
     }
\ No newline at end of file
