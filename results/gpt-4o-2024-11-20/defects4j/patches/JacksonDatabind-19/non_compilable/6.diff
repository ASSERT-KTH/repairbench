diff --git a/tmp/1bd5cf63-7856-486e-871a-428a394d7366_buggy.java b/tmp/2bc8ef10-f653-4db5-b181-eccaee2a003b_fixed.java
index 1bec4d6..7bf13bc 100644
--- a/tmp/1bd5cf63-7856-486e-871a-428a394d7366_buggy.java
+++ b/tmp/2bc8ef10-f653-4db5-b181-eccaee2a003b_fixed.java
@@ -1,14 +1,20 @@
     private JavaType _mapType(Class<?> rawClass)
     {
-        // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        // Special handling for java.util.Properties as per [databind#810]
+        if (rawClass == Properties.class) {
+            // Treat Properties as a Map<String, String>
+            return MapType.construct(rawClass, _constructType(String.class), _constructType(String.class));
+        }
+        
+        // General handling for other Map types
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type " + rawClass.getName() + ": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
