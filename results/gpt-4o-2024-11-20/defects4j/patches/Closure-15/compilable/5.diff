diff --git a/tmp/97a2458e-d8df-427e-bbce-5f96b634b071_buggy.java b/tmp/8666b885-0e44-4aa7-9e77-c8f3a402ebae_fixed.java
index b56897c..8634e07 100644
--- a/tmp/97a2458e-d8df-427e-bbce-5f96b634b071_buggy.java
+++ b/tmp/8666b885-0e44-4aa7-9e77-c8f3a402ebae_fixed.java
@@ -1,27 +1,32 @@
       @Override
       public boolean apply(Node n) {
         // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
+        // where the function returns (possibly without a return statement)
         if (n == null) {
           return false;
         }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
+        // TODO: We only care about calls to functions that
+        // pass one of the dependent variable to a non-side-effect-free
         // function.
         if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
           return true;
         }
 
         if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
           return true;
         }
 
+        if (n.isIn() || n.isInstanceOf()) {
+          // 'in' and 'instanceof' operators are side-effect-free, 
+          // so we return false to avoid wrongly flagging them.
+          return false;
+        }
 
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
           }
         }
         return false;
       }
\ No newline at end of file
