diff --git a/tmp/fdf94588-e476-42d4-a7a4-afba026f00c6_buggy.java b/tmp/87be672d-a620-409d-877d-66efd31c4167_fixed.java
index 0dbce00..bacfe5c 100644
--- a/tmp/fdf94588-e476-42d4-a7a4-afba026f00c6_buggy.java
+++ b/tmp/87be672d-a620-409d-877d-66efd31c4167_fixed.java
@@ -1,33 +1,44 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException 
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
         if (format != null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
+            if (shape == JsonFormat.Shape.NUMBER || shape == JsonFormat.Shape.NUMBER_INT || shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // If the shape is STRING or pattern/locale/timezone are explicitly set, use a custom formatter
+            if (shape == JsonFormat.Shape.STRING || 
+                format.hasPattern() || 
+                format.hasLocale() || 
+                format.hasTimeZone()) {
+                
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
-        return this;
+
+    // Default behavior: align with global WRITE_DATES_AS_TIMESTAMPS setting
+    if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        return withFormat(Boolean.TRUE, null);
+    } else {
+        return withFormat(Boolean.FALSE, null);
+    }
 }
\ No newline at end of file
