diff --git a/tmp/b473c26e-b1c2-4427-9858-b594494eeeba_buggy.java b/tmp/a5a508e4-ac6b-4f41-9bb7-c60f8e36b82f_fixed.java
index 42b58d0..465116a 100644
--- a/tmp/b473c26e-b1c2-4427-9858-b594494eeeba_buggy.java
+++ b/tmp/a5a508e4-ac6b-4f41-9bb7-c60f8e36b82f_fixed.java
@@ -1,19 +1,24 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+
+        // Prevent infinite recursion or StackOverflowError
+        if (contextualActualTypeParameters.containsKey(parameterizedType)) {
+            return;
+        }
+
+        TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+            TypeVariable<?> typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
