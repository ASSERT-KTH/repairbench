diff --git a/tmp/c841aedc-5500-4213-b7d6-97cc98b154d5_buggy.java b/tmp/c9a3f7fc-0ef3-4769-a58a-9edfd89ef04e_fixed.java
index 66bb99f..4b121c4 100644
--- a/tmp/c841aedc-5500-4213-b7d6-97cc98b154d5_buggy.java
+++ b/tmp/c9a3f7fc-0ef3-4769-a58a-9edfd89ef04e_fixed.java
@@ -1,14 +1,16 @@
 @Override
-        public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
-        {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    JsonToken token = p.getCurrentToken();
+    if (token == JsonToken.START_OBJECT) {
         p.nextToken();
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+    // Handle empty object case (END_OBJECT directly after START_OBJECT)
+    if (token == JsonToken.END_OBJECT) {
+        return ctxt.getNodeFactory().objectNode();
+    }
+    if (token == JsonToken.FIELD_NAME) {
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
     throw ctxt.mappingException(ObjectNode.class);
 }
\ No newline at end of file
