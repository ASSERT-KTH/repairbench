diff --git a/tmp/6af470eb-7bcb-4290-9d0f-cf5426388f1a_buggy.java b/tmp/432ca54b-1119-412c-a192-eec3dba0038b_fixed.java
index b2db1d6..60f5cda 100644
--- a/tmp/6af470eb-7bcb-4290-9d0f-cf5426388f1a_buggy.java
+++ b/tmp/432ca54b-1119-412c-a192-eec3dba0038b_fixed.java
@@ -1,29 +1,24 @@
     protected void _addMethodMixIns(Class<?> targetClass, AnnotatedMethodMap methods,
             Class<?> mixInCls, AnnotatedMethodMap mixIns)
     {
         List<Class<?>> parents = new ArrayList<Class<?>>();
         parents.add(mixInCls);
         ClassUtil.findSuperTypes(mixInCls, targetClass, parents);
         for (Class<?> mixin : parents) {
             for (Method m : mixin.getDeclaredMethods()) {
                 if (!_isIncludableMemberMethod(m)) {
                     continue;
                 }
-                AnnotatedMethod am = methods.find(m);
-                /* Do we already have a method to augment (from sub-class
-                 * that will mask this mixIn)? If so, add if visible
-                 * without masking (no such annotation)
-                 */
-                if (am != null) {
-                    _addMixUnders(m, am);
-                    /* Otherwise will have precedence, but must wait
-                     * until we find the real method (mixIn methods are
-                     * just placeholder, can't be called)
-                     */
+                AnnotatedMethod existingMethod = methods.find(m);
+                if (existingMethod != null) {
+                    _addMixUnders(m, existingMethod);
                 } else {
-                    // Well, or, as per [Issue#515], multi-level merge within mixins...
+                    // Prevent overshadowing of existing mix-ins from parent classes (fix for [Issue#515])
+                    AnnotatedMethod mixinMethod = mixIns.find(m);
+                    if (mixinMethod == null) {
                         mixIns.add(_constructMethod(m));
                     }
                 }
             }
         }
+    }
\ No newline at end of file
