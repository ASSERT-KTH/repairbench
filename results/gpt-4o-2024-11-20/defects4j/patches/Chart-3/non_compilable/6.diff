diff --git a/tmp/c576a78f-ddf1-4ed7-9f60-96cab93959b2_buggy.java b/tmp/6a1f875b-8479-48f9-b040-c40e894099d9_fixed.java
index 388771b..b8d4f38 100644
--- a/tmp/c576a78f-ddf1-4ed7-9f60-96cab93959b2_buggy.java
+++ b/tmp/6a1f875b-8479-48f9-b040-c40e894099d9_fixed.java
@@ -1,37 +1,47 @@
     /**
      * Creates a new timeseries by copying a subset of the data in this time
      * series.
      *
      * @param start  the index of the first time period to copy.
      * @param end  the index of the last time period to copy.
      *
      * @return A series containing a copy of this times series from start until
      *         end.
      *
      * @throws CloneNotSupportedException if there is a cloning problem.
      */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
-        copy.data = new java.util.ArrayList();
+        copy.data = new java.util.ArrayList<>();
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+                TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
                 TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
-                try {
-                    copy.add(clone);
+                copy.data.add(clone);
             }
-                catch (SeriesException e) {
-                    e.printStackTrace();
+        }
+        // Update minY and maxY for the new copy based on the data subset
+        copy.minY = Double.MAX_VALUE;
+        copy.maxY = -Double.MAX_VALUE;
+        for (int index = 0; index < copy.data.size(); index++) {
+            TimeSeriesDataItem item = (TimeSeriesDataItem) copy.data.get(index);
+            Number value = item.getValue();
+            if (value != null) {
+                double v = value.doubleValue();
+                if (v < copy.minY) {
+                    copy.minY = v;
+                }
+                if (v > copy.maxY) {
+                    copy.maxY = v;
                 }
             }
         }
         return copy;
     }
\ No newline at end of file
