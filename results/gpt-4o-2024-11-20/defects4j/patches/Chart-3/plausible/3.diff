diff --git a/tmp/46d8eac4-0a95-4850-aed5-0419ed59aba0_buggy.java b/tmp/2e9eaf46-e289-4738-bc02-66c9e2f2a6e5_fixed.java
index 388771b..62b0953 100644
--- a/tmp/46d8eac4-0a95-4850-aed5-0419ed59aba0_buggy.java
+++ b/tmp/2e9eaf46-e289-4738-bc02-66c9e2f2a6e5_fixed.java
@@ -1,37 +1,30 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
+        copy.minY = Double.POSITIVE_INFINITY; // Reset minY
+        copy.maxY = Double.NEGATIVE_INFINITY; // Reset maxY
         if (this.data.size() > 0) {
             for (int index = start; index <= end; index++) {
                 TimeSeriesDataItem item
                         = (TimeSeriesDataItem) this.data.get(index);
                 TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
-                try {
-                    copy.add(clone);
+                copy.data.add(clone); // Add directly to the data list
+                // Update minY and maxY for the copied series
+                double yValue = clone.getValue().doubleValue();
+                if (yValue < copy.minY) {
+                    copy.minY = yValue;
                 }
-                catch (SeriesException e) {
-                    e.printStackTrace();
+                if (yValue > copy.maxY) {
+                    copy.maxY = yValue;
                 }
             }
         }
         return copy;
     }
\ No newline at end of file
