diff --git a/tmp/b144c1ba-d16b-46fd-9279-3efcae0e7427_buggy.java b/tmp/d053d1d2-9024-4832-a0cd-93edb4f4c505_fixed.java
index 10616db..38a7bf2 100644
--- a/tmp/b144c1ba-d16b-46fd-9279-3efcae0e7427_buggy.java
+++ b/tmp/d053d1d2-9024-4832-a0cd-93edb4f4c505_fixed.java
@@ -1,19 +1,31 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        // Handle special case for day-of-month overflow, such as 2004-02-29 + N months
+        int[] result = iChronology.get(partial, instant);
+        if (partial.getFieldType(fieldIndex).getName().equals("monthOfYear")) {
+            int dayOfMonthIndex = partial.indexOf(DateTimeFieldType.dayOfMonth());
+            if (dayOfMonthIndex != -1) {
+                int maxDay = iChronology.dayOfMonth().getMaximumValue(instant);
+                if (result[dayOfMonthIndex] > maxDay) {
+                    result[dayOfMonthIndex] = maxDay;
+                }
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
