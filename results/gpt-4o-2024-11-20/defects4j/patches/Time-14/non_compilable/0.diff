diff --git a/tmp/e97cb463-cea2-4d2a-9d9a-428cdd7b7ff5_buggy.java b/tmp/77969884-1530-4604-a169-199f58769fb3_fixed.java
index 10616db..5e7a00f 100644
--- a/tmp/e97cb463-cea2-4d2a-9d9a-428cdd7b7ff5_buggy.java
+++ b/tmp/77969884-1530-4604-a169-199f58769fb3_fixed.java
@@ -1,19 +1,31 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        // Correct the day-of-month if invalid in the resulting month
+        int[] result = iChronology.get(partial, instant);
+        DateTimeField dayField = partial.getFieldType(fieldIndex).getField(iChronology);
+        if (fieldIndex < result.length) {
+            int maxAllowedValue = dayField.getMaximumValue(instant);
+
+            if (result[fieldIndex] > maxAllowedValue) {
+                result[fieldIndex] = maxAllowedValue;
+            }
+        }
+
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
