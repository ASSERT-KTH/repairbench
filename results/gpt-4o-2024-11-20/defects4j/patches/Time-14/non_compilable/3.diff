diff --git a/tmp/320c6e66-f539-4a88-8274-054fcabcb386_buggy.java b/tmp/2ce90781-9c5b-4308-8439-aea6e45b3044_fixed.java
index 10616db..83ec4bc 100644
--- a/tmp/320c6e66-f539-4a88-8274-054fcabcb386_buggy.java
+++ b/tmp/2ce90781-9c5b-4308-8439-aea6e45b3044_fixed.java
@@ -1,19 +1,32 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
+
+        // Adjust for end-of-month scenarios
+        if (partial.getFieldType(fieldIndex).equals(DateTimeFieldType.monthOfYear())) {
+            int year = iChronology.year().get(instant);
+            int month = iChronology.monthOfYear().get(instant);
+            int day = values[partial.indexOf(DateTimeFieldType.dayOfMonth())];
+            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);
+
+            if (day > maxDay) {
+                instant = iChronology.dayOfMonth().set(instant, maxDay);
+            }
+        }
+
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
