diff --git a/tmp/f6cb0050-b1bf-4fe0-a357-4a1103b8437e_buggy.java b/tmp/69da0c09-fb66-49a5-a49d-e78d06b532e1_fixed.java
index ec6c9ee..2d6eb02 100644
--- a/tmp/f6cb0050-b1bf-4fe0-a357-4a1103b8437e_buggy.java
+++ b/tmp/69da0c09-fb66-49a5-a49d-e78d06b532e1_fixed.java
@@ -1,21 +1,21 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
-            Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+        if (size >= 2 && elementPairs.get(size - 2) instanceof Separator) {
+            Separator sep = (Separator) elementPairs.get(size - 2);
+            PeriodFormatter f = toFormatter(elementPairs.subList(0, size - 2), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+            return new PeriodFormatter(f.getPrinter(), sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
