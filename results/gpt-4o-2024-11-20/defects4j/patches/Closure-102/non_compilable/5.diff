diff --git a/tmp/781400fd-939f-4e38-9270-411c32300c18_buggy.java b/tmp/5d1f4475-7fde-439f-a064-e72209d31439_fixed.java
index f47d784..ed37ed1 100644
--- a/tmp/781400fd-939f-4e38-9270-411c32300c18_buggy.java
+++ b/tmp/5d1f4475-7fde-439f-a064-e72209d31439_fixed.java
@@ -1,12 +1,25 @@
   @Override
   public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
       MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
       NodeTraversal t = new NodeTraversal(compiler, renamer);
       t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
+    renameArgumentsIfNecessary(root); // Fix added to handle re-declaration of arguments
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
   }
+
+  private void renameArgumentsIfNecessary(Node root) {
+    NodeTraversal.traverse(compiler, root, new NodeTraversal.AbstractPostOrderCallback() {
+      @Override
+      public void visit(NodeTraversal t, Node n, Node parent) {
+        if (n.isVar() && n.hasOneChild() && "arguments".equals(n.getFirstChild().getString())) {
+          n.getFirstChild().setString("arguments$");
+          compiler.reportCodeChange();
+        }
+      }
+    });
+  }
\ No newline at end of file
