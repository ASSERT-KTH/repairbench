diff --git a/tmp/7a952d4b-7d34-469d-866c-13d7fc832f09_buggy.java b/tmp/83dbd82c-f6a9-4ef8-b598-71ba12190ef4_fixed.java
index 57f69c5..43a4b08 100644
--- a/tmp/7a952d4b-7d34-469d-866c-13d7fc832f09_buggy.java
+++ b/tmp/83dbd82c-f6a9-4ef8-b598-71ba12190ef4_fixed.java
@@ -1,12 +1,18 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+   * labels), but not when surrounded by extraneous BLOCKs.
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+        // Ensure the node is either FUNCTION or DO and not part of an 
+        // unnecessary or extraneous BLOCK structure.
+        if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+            // Check if the parent node is a BLOCK and ensure that this FUNCTION or DO 
+            // is not the only direct child of the BLOCK, which could cause issues.
+            Node parent = n.getParent();
+            if (parent != null && parent.getType() == Token.BLOCK) {
+                return parent.hasOneChild();
+            }
+            return true;
+        }
+        return false;
   }
\ No newline at end of file
