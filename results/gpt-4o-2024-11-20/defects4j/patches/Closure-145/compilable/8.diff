diff --git a/tmp/53178150-f43c-43e2-a3c8-2906e770fd46_buggy.java b/tmp/2936cb15-8e30-4277-97c0-8eb664d70a59_fixed.java
index 57f69c5..3f15f50 100644
--- a/tmp/53178150-f43c-43e2-a3c8-2906e770fd46_buggy.java
+++ b/tmp/2936cb15-8e30-4277-97c0-8eb664d70a59_fixed.java
@@ -1,12 +1,23 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
       // For labels with block children, we need to ensure that a
       // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
       // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+      // Check if the node is a FUNCTION or DO, but only if it is not labeled
+      // or correctly nested inside its parent context.
+      
+      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+          Node parent = n.getParent();
+          // Ensure it's not part of a label or nested context that makes it invalid.
+          if (parent != null && parent.getType() == Token.LABEL) {
+              // Check if the label properly wraps the FUNCTION or DO within a block.
+              Node labelChild = parent.getLastChild();
+              return labelChild != null && labelChild == n;
+          }
+          return true;
+      }
+      return false;
   }
\ No newline at end of file
