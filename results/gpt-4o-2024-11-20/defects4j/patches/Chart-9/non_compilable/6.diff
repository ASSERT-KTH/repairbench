diff --git a/tmp/29df869b-7a29-4c1d-8e0a-4931174ba5f0_buggy.java b/tmp/128271a6-5783-4a8f-acae-08002d389bd2_fixed.java
index b4af58a..71fe92d 100644
--- a/tmp/29df869b-7a29-4c1d-8e0a-4931174ba5f0_buggy.java
+++ b/tmp/128271a6-5783-4a8f-acae-08002d389bd2_fixed.java
@@ -1,53 +1,27 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the first time period to copy (<code>null</code> not
-     *         permitted).
-     * @param end  the last time period to copy (<code>null</code> not
-     *         permitted).
-     *
-     * @return A time series containing a copy of this time series from start
-     *         until end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
     public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
         throws CloneNotSupportedException {
 
         if (start == null) {
             throw new IllegalArgumentException("Null 'start' argument.");
         }
         if (end == null) {
             throw new IllegalArgumentException("Null 'end' argument.");
         }
-        if (start.compareTo(end) > 0) {
-            throw new IllegalArgumentException(
-                    "Requires start on or before end.");
-        }
-        boolean emptyRange = false;
+
         int startIndex = getIndex(start);
-        if (startIndex < 0) {
-            startIndex = -(startIndex + 1);
-            if (startIndex == this.data.size()) {
-                emptyRange = true;  // start is after last data item
-            }
-        }
         int endIndex = getIndex(end);
-        if (endIndex < 0) {             // end period is not in original series
-            endIndex = -(endIndex + 1); // this is first item AFTER end period
-            endIndex = endIndex - 1;    // so this is last item BEFORE end
+
+        if (startIndex < 0) {
+            startIndex = -(startIndex + 1); // First item after 'start' if 'start' is not found
         }
         if (endIndex < 0) {
-            emptyRange = true;
+            endIndex = -(endIndex + 1) - 1; // Last item before 'end' if 'end' is not found
         }
-        if (emptyRange) {
-            TimeSeries copy = (TimeSeries) super.clone();
-            copy.data = new java.util.ArrayList();
-            return copy;
+
+        // Adjusting the range to account for cases where end is before start
+        if (startIndex > endIndex) {
+            return new TimeSeries(getKey(), getDomainDescription(), getRangeDescription());
         }
-        else {
+
         return createCopy(startIndex, endIndex);
     }
\ No newline at end of file
-
-    }
