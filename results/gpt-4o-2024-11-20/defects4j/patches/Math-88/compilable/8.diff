diff --git a/tmp/01bd6c7f-f57f-46da-82af-efe99ede77db_buggy.java b/tmp/ff7b7878-727d-46d8-aa51-7ad39b7dd0d5_fixed.java
index 544303b..2433407 100644
--- a/tmp/01bd6c7f-f57f-46da-82af-efe99ede77db_buggy.java
+++ b/tmp/ff7b7878-727d-46d8-aa51-7ad39b7dd0d5_fixed.java
@@ -1,29 +1,24 @@
     /**
      * Get the current solution.
      * <p>
      * {@link #solve} should be called first for this to be the optimal solution.
      * </p>
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Integer basicRow;
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+            // if a variable is basic, retrieve its value from the tableau
             if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                coefficients[i] = getEntry(basicRow, getRhsOffset());
+            } else {
+                // if a variable is non-basic, its value is 0
                 coefficients[i] = 0;
             }
         }
-            }
-        }
-        return new RealPointValuePair(coefficients, f.getValue(coefficients));
+        // calculate the value of the objective function
+        double value = f.getValue(coefficients);
+        return new RealPointValuePair(coefficients, value);
     }
\ No newline at end of file
