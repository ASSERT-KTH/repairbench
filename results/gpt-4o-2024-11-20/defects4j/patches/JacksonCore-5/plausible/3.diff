diff --git a/tmp/16a8b9bd-5967-45af-80db-2eccb051823d_buggy.java b/tmp/5757e2b8-ecbb-486d-87fc-fea3c385238a_fixed.java
index 39c4220..50b1f95 100644
--- a/tmp/16a8b9bd-5967-45af-80db-2eccb051823d_buggy.java
+++ b/tmp/5757e2b8-ecbb-486d-87fc-fea3c385238a_fixed.java
@@ -1,21 +1,25 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
+            char c = str.charAt(i);
+            if (c > '9' || c < '0') { // Fix: removed extra increment (++i) to correctly check all characters
                 return -1;
             }
         }
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
-        return NumberInput.parseInt(str);
+        try {
+            return NumberInput.parseInt(str); // Ensure invalid formats like "1e0" throw properly
+        } catch (NumberFormatException e) {
+            return -1; // Return -1 for invalid numbers
+        }
     }
\ No newline at end of file
