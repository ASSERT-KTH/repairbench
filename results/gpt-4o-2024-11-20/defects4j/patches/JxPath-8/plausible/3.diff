diff --git a/tmp/31ff4bd1-a3e9-41e8-a236-6e6203f649b4_buggy.java b/tmp/26fc43b1-4d4f-4db7-8968-9730eed4077c_fixed.java
index 98d89dc..13938d0 100644
--- a/tmp/31ff4bd1-a3e9-41e8-a236-6e6203f649b4_buggy.java
+++ b/tmp/26fc43b1-4d4f-4db7-8968-9730eed4077c_fixed.java
@@ -1,23 +1,30 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
+    
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    // Handle NaN comparisons as per IEEE 754 rules
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        return false; // NaN is not equal to, less than, or greater than any value, including itself
+    }
+
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
