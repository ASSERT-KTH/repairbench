diff --git a/tmp/9f846847-b58e-4d89-b30c-d1b6e87d871e_buggy.java b/tmp/a2a63316-900b-4d10-a511-4f55076aac6d_fixed.java
index 800e6e1..88e6838 100644
--- a/tmp/9f846847-b58e-4d89-b30c-d1b6e87d871e_buggy.java
+++ b/tmp/a2a63316-900b-4d10-a511-4f55076aac6d_fixed.java
@@ -1,32 +1,29 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
-    @Override public void visit(NodeTraversal t, Node n, Node parent) {
+@Override
+public void visit(NodeTraversal t, Node n, Node parent) {
     if (n == scope.getRootNode()) return;
 
     if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
     }
 
     attachLiteralTypes(n);
     switch (n.getType()) {
         case Token.FUNCTION:
             if (parent.getType() == Token.NAME) {
+                defineNamespaceProperty(parent, n);
                 return;
             }
             defineDeclaredFunction(n, parent);
             break;
         case Token.CATCH:
             defineCatch(n, parent);
             break;
         case Token.VAR:
             defineVar(n, parent);
             break;
+        case Token.EXPR_RESULT:
+            maybeDefineStubDeclaration(n);
+            break;
     }
 }
\ No newline at end of file
