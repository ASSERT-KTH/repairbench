diff --git a/tmp/9ff064b2-1791-44b0-a8b7-6b479bf00710_buggy.java b/tmp/07c06e8c-aa6b-4912-b45c-fe5f8e0d8542_fixed.java
index dc93be3..59774d6 100644
--- a/tmp/9ff064b2-1791-44b0-a8b7-6b479bf00710_buggy.java
+++ b/tmp/07c06e8c-aa6b-4912-b45c-fe5f8e0d8542_fixed.java
@@ -1,14 +1,13 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+    if (startTag.isSelfClosing() && startTag.isKnownTag()) { // ensure self-closing is for known tags
         Element el = insertEmpty(startTag);
-            stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName())); // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
