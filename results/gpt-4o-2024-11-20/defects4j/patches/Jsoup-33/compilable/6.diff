diff --git a/tmp/33e2be49-7444-4fa0-ae24-79c0ceede1a4_buggy.java b/tmp/908b1e93-eec2-40de-b0a3-44a88e31c608_fixed.java
index dc93be3..0bfa06b 100644
--- a/tmp/33e2be49-7444-4fa0-ae24-79c0ceede1a4_buggy.java
+++ b/tmp/908b1e93-eec2-40de-b0a3-44a88e31c608_fixed.java
@@ -1,14 +1,12 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
-            return el;
+            return el; // Do not add to stack or emit an EndTag since it's already self-closing.
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
