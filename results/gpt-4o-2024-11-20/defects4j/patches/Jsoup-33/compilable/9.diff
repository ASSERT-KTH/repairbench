diff --git a/tmp/252b4434-d811-4212-8176-c519287f39c9_buggy.java b/tmp/30e314e3-6708-47e4-a9ae-672f013c5426_fixed.java
index dc93be3..624e6fa 100644
--- a/tmp/252b4434-d811-4212-8176-c519287f39c9_buggy.java
+++ b/tmp/30e314e3-6708-47e4-a9ae-672f013c5426_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            // Don't add self-closing empty tag to the stack, spec doesn't require it
+            tokeniser.emit(new Token.EndTag(el.tagName())); // Ensure end tag for processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        stack.add(el); // Add to the stack since it's not self-closing
         insert(el);
         return el;
     }
\ No newline at end of file
