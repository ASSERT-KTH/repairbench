diff --git a/tmp/4f162d26-f331-4997-82de-82c08a0e23fb_buggy.java b/tmp/420a3386-aece-4544-9f6f-4535c2827a97_fixed.java
index 877a1a1..4315e29 100644
--- a/tmp/4f162d26-f331-4997-82de-82c08a0e23fb_buggy.java
+++ b/tmp/420a3386-aece-4544-9f6f-4535c2827a97_fixed.java
@@ -1,14 +1,24 @@
     /**
       * Returns the percentage of values that are equal to v
      * (as a proportion between 0 and 1).
      * <p>
      * Returns <code>Double.NaN</code> if no values have been added.</p>
      *
      * @param v the value to lookup
      * @return the proportion of values equal to v
      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        if (v == null) {
+            return 0.0; // Return 0 if the input value is null, as it can't match any value in the dataset.
+        }
+
+        if (!(v instanceof Comparable)) {
+            return 0.0; // Return 0 if the input value is not comparable, as it can't be looked up.
+        }
+
+        Comparable<?> comparableValue = (Comparable<?>) v;
+        // Call getPct(Comparable) instead of getCumPct(Comparable) for correct proportional calculation.
+        return getPct(comparableValue);
     }
\ No newline at end of file
