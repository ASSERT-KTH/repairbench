diff --git a/tmp/9cdd5f52-8a29-44e2-a845-2552c8947e36_buggy.java b/tmp/2309ee45-bfb0-4f00-98cf-148986b095c6_fixed.java
index b8e7fdb..7aaa5f8 100644
--- a/tmp/9cdd5f52-8a29-44e2-a845-2552c8947e36_buggy.java
+++ b/tmp/2309ee45-bfb0-4f00-98cf-148986b095c6_fixed.java
@@ -1,15 +1,29 @@
     /**
      * Attempt to cast this comment to an XML Declaration note.
      * @return an XML declaration if it could be parsed as one, null otherwise.
      */
     public XmlDeclaration asXmlDeclaration() {
         String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
+        if (data.length() < 3 || !data.startsWith("<") || !(data.endsWith(">") || data.endsWith("/>"))) {
+            return null; // Ensure it's a valid-looking XML declaration
+        }
+
+        String trimmedData = data.substring(1, data.length() - 1).trim();
+        if (trimmedData.isEmpty()) {
+            return null; // Handle empty declaration properly
+        }
+
+        try {
+            Document doc = Jsoup.parse("<" + trimmedData + ">", baseUri(), Parser.xmlParser());
             if (doc.childNodeSize() > 0) {
                 Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+                XmlDeclaration decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
                 decl.attributes().addAll(el.attributes());
-        }
                 return decl;
             }
+        } catch (Exception e) {
+            // Parsing failed, return null
+        }
+
+        return null;
+    }
\ No newline at end of file
