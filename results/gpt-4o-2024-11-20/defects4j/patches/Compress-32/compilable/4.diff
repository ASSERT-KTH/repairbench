diff --git a/tmp/891c9c4a-e531-4e75-a926-49967ede0784_buggy.java b/tmp/6227cbff-51d4-4d6f-af83-0d09f055a6c1_fixed.java
index 711e87d..905e0d8 100644
--- a/tmp/891c9c4a-e531-4e75-a926-49967ede0784_buggy.java
+++ b/tmp/6227cbff-51d4-4d6f-af83-0d09f055a6c1_fixed.java
@@ -1,38 +1,43 @@
 private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
     /*
      * The following headers are defined for Pax.
      * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
      * mtime
      * comment
      * gid, gname
      * linkpath
      * size
      * uid,uname
      * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
      */
     for (Entry<String, String> ent : headers.entrySet()) {
         String key = ent.getKey();
         String val = ent.getValue();
+        try {
             if ("path".equals(key)) {
                 currEntry.setName(val);
             } else if ("linkpath".equals(key)) {
                 currEntry.setLinkName(val);
             } else if ("gid".equals(key)) {
-                currEntry.setGroupId(Integer.parseInt(val));
+                currEntry.setGroupId(Long.parseLong(val)); // Allow parsing large GIDs
             } else if ("gname".equals(key)) {
                 currEntry.setGroupName(val);
             } else if ("uid".equals(key)) {
-                currEntry.setUserId(Integer.parseInt(val));
+                currEntry.setUserId(Long.parseLong(val)); // Allow parsing large UIDs
             } else if ("uname".equals(key)) {
                 currEntry.setUserName(val);
             } else if ("size".equals(key)) {
                 currEntry.setSize(Long.parseLong(val));
             } else if ("mtime".equals(key)) {
                 currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
             } else if ("SCHILY.devminor".equals(key)) {
                 currEntry.setDevMinor(Integer.parseInt(val));
             } else if ("SCHILY.devmajor".equals(key)) {
                 currEntry.setDevMajor(Integer.parseInt(val));
             }
+        } catch (NumberFormatException e) {
+            // Log or handle the error appropriately
+            throw new IllegalArgumentException("Failed to parse header value for key: " + key + ", value: " + val, e);
+        }
     }
 }
\ No newline at end of file
