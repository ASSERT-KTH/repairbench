diff --git a/tmp/5978e3e6-2e67-495e-9711-632aadfd32cb_buggy.java b/tmp/269bb358-4958-44c5-8864-10dd3617c2ff_fixed.java
index 711e87d..4ddf0b0 100644
--- a/tmp/5978e3e6-2e67-495e-9711-632aadfd32cb_buggy.java
+++ b/tmp/269bb358-4958-44c5-8864-10dd3617c2ff_fixed.java
@@ -1,38 +1,51 @@
     private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
         /*
          * The following headers are defined for Pax.
          * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
          * mtime
          * comment
          * gid, gname
          * linkpath
          * size
          * uid,uname
          * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
          */
         for (Entry<String, String> ent : headers.entrySet()) {
             String key = ent.getKey();
             String val = ent.getValue();
+            try {
                 if ("path".equals(key)) {
                     currEntry.setName(val);
                 } else if ("linkpath".equals(key)) {
                     currEntry.setLinkName(val);
                 } else if ("gid".equals(key)) {
-                currEntry.setGroupId(Integer.parseInt(val));
+                    currEntry.setGroupId(parseLongOrDefault(val, 0)); // Use parseLongOrDefault for large values
                 } else if ("gname".equals(key)) {
                     currEntry.setGroupName(val);
                 } else if ("uid".equals(key)) {
-                currEntry.setUserId(Integer.parseInt(val));
+                    currEntry.setUserId(parseLongOrDefault(val, 0)); // Use parseLongOrDefault for large values
                 } else if ("uname".equals(key)) {
                     currEntry.setUserName(val);
                 } else if ("size".equals(key)) {
                     currEntry.setSize(Long.parseLong(val));
                 } else if ("mtime".equals(key)) {
                     currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
                 } else if ("SCHILY.devminor".equals(key)) {
                     currEntry.setDevMinor(Integer.parseInt(val));
                 } else if ("SCHILY.devmajor".equals(key)) {
                     currEntry.setDevMajor(Integer.parseInt(val));
                 }
+            } catch (NumberFormatException e) {
+                // Log or handle parsing error, if needed
+            }
+        }
+    }
+
+    private long parseLongOrDefault(String val, long defaultValue) {
+        try {
+            // Handles large numbers that might exceed Integer limits
+            return Long.parseLong(val);
+        } catch (NumberFormatException e) {
+            return defaultValue;
         }
     }
\ No newline at end of file
