diff --git a/tmp/119a3969-98cd-4a44-9dba-7dd61bb6b9be_buggy.java b/tmp/49049110-ca09-4ecf-8a44-87e6f328c5f0_fixed.java
index 711e87d..8e853d2 100644
--- a/tmp/119a3969-98cd-4a44-9dba-7dd61bb6b9be_buggy.java
+++ b/tmp/49049110-ca09-4ecf-8a44-87e6f328c5f0_fixed.java
@@ -1,38 +1,43 @@
     private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
         /*
-         * The following headers are defined for Pax.
+         * The following headers are defined for Pax:
          * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
          * mtime
          * comment
          * gid, gname
          * linkpath
          * size
          * uid, uname
          * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
          */
         for (Entry<String, String> ent : headers.entrySet()) {
             String key = ent.getKey();
             String val = ent.getValue();
+            try {
                 if ("path".equals(key)) {
                     currEntry.setName(val);
                 } else if ("linkpath".equals(key)) {
                     currEntry.setLinkName(val);
                 } else if ("gid".equals(key)) {
-                currEntry.setGroupId(Integer.parseInt(val));
+                    currEntry.setGroupId(Long.parseLong(val)); // Updated to handle large group IDs
                 } else if ("gname".equals(key)) {
                     currEntry.setGroupName(val);
                 } else if ("uid".equals(key)) {
-                currEntry.setUserId(Integer.parseInt(val));
+                    currEntry.setUserId(Long.parseLong(val)); // Updated to handle large user IDs
                 } else if ("uname".equals(key)) {
                     currEntry.setUserName(val);
                 } else if ("size".equals(key)) {
                     currEntry.setSize(Long.parseLong(val));
                 } else if ("mtime".equals(key)) {
                     currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
                 } else if ("SCHILY.devminor".equals(key)) {
                     currEntry.setDevMinor(Integer.parseInt(val));
                 } else if ("SCHILY.devmajor".equals(key)) {
                     currEntry.setDevMajor(Integer.parseInt(val));
                 }
+            } catch (NumberFormatException e) {
+                // Log or handle the exception as needed, skipping the value
+                System.err.println("Invalid number format for key " + key + ": " + val);
+            }
         }
     }
\ No newline at end of file
