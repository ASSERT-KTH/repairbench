diff --git a/tmp/be253271-be82-45dc-abb5-a3301eb83a49_buggy.java b/tmp/0d9484a2-1cf8-4ea3-a1a2-bc5fdec7f012_fixed.java
index 2573d30..ca09ade 100644
--- a/tmp/be253271-be82-45dc-abb5-a3301eb83a49_buggy.java
+++ b/tmp/0d9484a2-1cf8-4ea3-a1a2-bc5fdec7f012_fixed.java
@@ -1,20 +1,28 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
+    // Traverse the property chain to ensure all parent nodes are safely replaced.
+    while (node.isGetProp()) {
       node = node.getFirstChild();
       if (node.isName() 
           && isNameAssignedTo(node.getString(), replacement)) {
         return false;
       }
+    }
+
+    // Check the base case (e.g., a root name at the end of the property chain).
+    if (node.isName() && isNameAssignedTo(node.getString(), replacement)) {
+      return false;
+    }
 
     return true;
   }
