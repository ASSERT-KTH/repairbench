diff --git a/tmp/80f3d227-c4b1-42ff-b508-e4a3b09d9229_buggy.java b/tmp/2fb87835-eb62-478e-8ac0-5c739fd8b08c_fixed.java
index d87dd79..1fa716a 100644
--- a/tmp/80f3d227-c4b1-42ff-b508-e4a3b09d9229_buggy.java
+++ b/tmp/2fb87835-eb62-478e-8ac0-5c739fd8b08c_fixed.java
@@ -1,47 +1,62 @@
     @Override
     protected Object decode(
             ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
         int endIndex = -1;
         for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
             if (buf.getByte(i) == ']') {
                 endIndex = i + 1;
                 break;
             }
         }
 
-        if (endIndex > 0) {
+        if (endIndex > 0 && buf.readerIndex() < endIndex) {
             ByteBuf frame = Unpooled.buffer();
+            int originalReaderIndex = buf.readerIndex();
+            try {
                 while (buf.readerIndex() < endIndex) {
                     byte b1 = buf.readByte();
                     if (b1 == '}') {
+                        if (buf.readableBytes() < 1) {
+                            throw new IllegalArgumentException("Incomplete escape sequence");
+                        }
                         byte b2 = buf.readByte();
                         switch (b2) {
                             case 0x01:
                                 frame.writeByte('}');
                                 break;
                             case 0x02:
                                 frame.writeByte('[');
                                 break;
                             case 0x03:
                                 frame.writeByte(']');
                                 break;
                             case 0x04:
                                 frame.writeByte(',');
                                 break;
                             case 0x05:
                                 frame.writeByte('*');
                                 break;
                             default:
                                 throw new IllegalArgumentException(String.format(
                                         "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                         }
                     } else {
                         frame.writeByte(b1);
                     }
                 }
+
+                if (buf.readerIndex() == endIndex) {
                     return frame;
+                } else {
+                    buf.readerIndex(originalReaderIndex); // Restore the reader index if decoding is incomplete.
+                    return null;
+                }
+            } catch (Exception e) {
+                buf.readerIndex(originalReaderIndex); // Restore the reader index in case of an error.
+                throw e;
+            }
         }
 
         return null;
     }
\ No newline at end of file
