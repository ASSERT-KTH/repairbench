diff --git a/tmp/ba71fa8c-0432-4496-b007-9cbaee7798ef_buggy.java b/tmp/a68577bf-2725-4759-8b7d-d22d95b29b6f_fixed.java
index d87dd79..88c7d03 100644
--- a/tmp/ba71fa8c-0432-4496-b007-9cbaee7798ef_buggy.java
+++ b/tmp/a68577bf-2725-4759-8b7d-d22d95b29b6f_fixed.java
@@ -1,47 +1,52 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
-        if (endIndex > 0) {
+    if (endIndex > 0 && endIndex <= buf.writerIndex()) {
         ByteBuf frame = Unpooled.buffer();
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
+                if (buf.readableBytes() < 1) {
+                    throw new IllegalArgumentException("Incomplete escape sequence at the end of the buffer");
+                }
                 byte b2 = buf.readByte();
                 switch (b2) {
                     case 0x01:
                         frame.writeByte('}');
                         break;
                     case 0x02:
                         frame.writeByte('[');
                         break;
                     case 0x03:
                         frame.writeByte(']');
                         break;
                     case 0x04:
                         frame.writeByte(',');
                         break;
                     case 0x05:
                         frame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
                                 "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                 }
             } else {
                 frame.writeByte(b1);
             }
         }
+        // Adjust buffer reader index to the end of the processed frame
+        buf.readerIndex(endIndex);
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
