diff --git a/tmp/e5402c3d-8629-4986-ad49-4d84fe07bc2e_buggy.java b/tmp/2726519d-eade-4152-be83-60a20a701322_fixed.java
index 23f078d..04055b9 100644
--- a/tmp/e5402c3d-8629-4986-ad49-4d84fe07bc2e_buggy.java
+++ b/tmp/2726519d-eade-4152-be83-60a20a701322_fixed.java
@@ -1,14 +1,16 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
-            if (c == ' ') {
+            if (Character.isSupplementaryCodePoint(c)) {
+                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                i++; // skip the next code unit as it's part of the current supplementary character
+            } else if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+                sb.append(URLEncoder.encode(Character.toString((char) c), UTF_8.name()));
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file
