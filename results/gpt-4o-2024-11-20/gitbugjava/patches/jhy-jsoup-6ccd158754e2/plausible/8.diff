diff --git a/tmp/a8f5cbf7-ab8b-4e93-931b-60d9d60a9980_buggy.java b/tmp/690998c8-bb2e-4f6e-9acf-0f3ea113340e_fixed.java
index 23f078d..dbc738d 100644
--- a/tmp/a8f5cbf7-ab8b-4e93-931b-60d9d60a9980_buggy.java
+++ b/tmp/690998c8-bb2e-4f6e-9acf-0f3ea113340e_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
-            if (c == ' ') {
+        if (Character.isSupplementaryCodePoint(c)) {
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+            i++; // skip the low surrogate as we've already processed the full supplementary code point
+        } else if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            sb.append(URLEncoder.encode(Character.toString((char) c), UTF_8.name()));
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
