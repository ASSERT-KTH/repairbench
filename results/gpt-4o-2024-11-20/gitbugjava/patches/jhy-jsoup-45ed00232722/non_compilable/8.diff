diff --git a/tmp/39e38673-de4a-42a2-a02e-6c1d570396c3_buggy.java b/tmp/125e6412-b3ff-4551-8399-970d78ecd577_fixed.java
index 855afa5..faa7559 100644
--- a/tmp/39e38673-de4a-42a2-a02e-6c1d570396c3_buggy.java
+++ b/tmp/125e6412-b3ff-4551-8399-970d78ecd577_fixed.java
@@ -1,13 +1,24 @@
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+            // Parse URL components
+            String scheme = u.getProtocol();
+            String host = u.getHost();
+            int port = u.getPort();
+            String path = u.getPath();
+            String query = u.getQuery();
+            String fragment = u.getRef();
+            
+            // Encode individual components
+            String encodedPath = path != null ? new URI(null, null, path, null).getRawPath() : null;
+            String encodedQuery = query != null ? new URI(null, null, null, query, null).getRawQuery() : null;
+            String encodedFragment = fragment != null ? new URI(null, null, null, null, fragment).getRawFragment() : null;
+
+            // Construct encoded URL
+            URI uri = new URI(scheme, null, host, port, encodedPath, encodedQuery, encodedFragment);
+            return uri.toURL();
         } catch (URISyntaxException | MalformedURLException e) {
             // give up and return the original input
             return u;
         }
     }
\ No newline at end of file
