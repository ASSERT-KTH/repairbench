diff --git a/tmp/038cf334-ef8c-4c96-b8cd-c8340edcab1a_buggy.java b/tmp/7b8709ee-0009-4c82-b80a-b9d395a279a8_fixed.java
index a4ebaaa..913ce6a 100644
--- a/tmp/038cf334-ef8c-4c96-b8cd-c8340edcab1a_buggy.java
+++ b/tmp/7b8709ee-0009-4c82-b80a-b9d395a279a8_fixed.java
@@ -1,63 +1,88 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
+    if (buf.readableBytes() >= 1) {
         position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+    }
+
+    if (buf.readableBytes() >= 1) {
         position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
+    }
+
+    if (buf.readableBytes() >= 4) {
         position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
+    }
 
+    if (buf.readableBytes() >= 1) {
         int battery = buf.readUnsignedByte();
         if (battery <= 100) {
             position.set(Position.KEY_BATTERY_LEVEL, battery);
         } else if (battery == 0xAA) {
             position.set(Position.KEY_CHARGE, true);
         }
+    }
 
+    if (buf.readableBytes() >= 6) {
         position.setNetwork(new Network(CellTower.fromCidLac(
                 getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
+    }
 
+    if (buf.readableBytes() >= 1) {
         int product = buf.readUnsignedByte();
+        if (buf.readableBytes() >= 2) {
             int status = buf.readUnsignedShort();
+            if (buf.readableBytes() >= 2) {
                 int alarm = buf.readUnsignedShort();
 
                 if (product == 1 || product == 2) {
                     if (BitUtil.check(alarm, 0)) {
                         position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
                     }
                 } else if (product == 3) {
                     position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
                     if (BitUtil.check(alarm, 1)) {
                         position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
                     }
                     if (BitUtil.check(alarm, 2)) {
                         position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
                     }
                     if (BitUtil.check(alarm, 3)) {
                         position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
                     }
                 }
-
                 position.set(Position.KEY_STATUS, status);
+            }
+        }
+    }
 
     while (buf.readableBytes() > 2) {
         int id = buf.readUnsignedByte();
+        if (buf.readableBytes() >= 1) {
             int length = buf.readUnsignedByte();
+            if (buf.readableBytes() >= length) {
                 switch (id) {
                     case 0x02:
+                        if (length >= 2) {
                             position.setAltitude(buf.readShort());
+                        }
                         break;
                     case 0x0C:
-                    position.set("gyro", ByteBufUtil.hexDump(buf.readSlice(6)));
+                        position.set("gyro", ByteBufUtil.hexDump(buf.readSlice(length)));
                         break;
                     default:
                         buf.skipBytes(length);
                         break;
                 }
+            } else {
+                buf.skipBytes(buf.readableBytes());
+            }
+        }
     }
 
     return position;
 }
\ No newline at end of file
