diff --git a/tmp/d2fe22e8-7cf0-4b49-be76-d318595057ac_buggy.java b/tmp/d89090f8-5013-4a5e-a037-1ef809c82a4e_fixed.java
index 33e2e76..64d5f2e 100644
--- a/tmp/d2fe22e8-7cf0-4b49-be76-d318595057ac_buggy.java
+++ b/tmp/d89090f8-5013-4a5e-a037-1ef809c82a4e_fixed.java
@@ -1,126 +1,184 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
     CellTower cellTower = new CellTower();
     String[] keys = form.substring(1).split("%");
     for (String key : keys) {
         switch (key) {
             case "SA":
+                if (buf.readableBytes() >= 1) {
                     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
+                }
                 break;
             case "MV":
+                if (buf.readableBytes() >= 2) {
                     position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
+                }
                 break;
             case "BV":
+                if (buf.readableBytes() >= 2) {
                     position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
+                }
                 break;
             case "GQ":
+                if (buf.readableBytes() >= 1) {
                     cellTower.setSignalStrength((int) buf.readUnsignedByte());
+                }
                 break;
             case "CE":
+                if (buf.readableBytes() >= 4) {
                     cellTower.setCellId(buf.readUnsignedInt());
+                }
                 break;
             case "LC":
+                if (buf.readableBytes() >= 2) {
                     cellTower.setLocationAreaCode(buf.readUnsignedShort());
+                }
                 break;
             case "CN":
+                if (buf.readableBytes() >= 4) {
                     int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
                     cellTower.setMobileCountryCode(combinedMobileCodes / 100);
                     cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
+                }
                 break;
             case "RL":
+                if (buf.readableBytes() >= 1) {
                     buf.readUnsignedByte(); // rxlev
+                }
                 break;
             case "PC":
+                if (buf.readableBytes() >= 4) {
                     position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
+                }
                 break;
             case "AT":
+                if (buf.readableBytes() >= 4) {
                     position.setAltitude(buf.readUnsignedInt());
+                }
                 break;
             case "RP":
+                if (buf.readableBytes() >= 2) {
                     position.set(Position.KEY_RPM, buf.readUnsignedShort());
+                }
                 break;
             case "GS":
+                if (buf.readableBytes() >= 1) {
                     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+                }
                 break;
             case "DT":
+                if (buf.readableBytes() >= 1) {
                     position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
+                }
                 break;
             case "VN":
                 position.set(Position.KEY_VIN, readString(buf));
                 break;
             case "MF":
+                if (buf.readableBytes() >= 2) {
                     buf.readUnsignedShort(); // mass air flow rate
+                }
                 break;
             case "EL":
+                if (buf.readableBytes() >= 1) {
                     buf.readUnsignedByte(); // engine load
+                }
                 break;
             case "TR":
+                if (buf.readableBytes() >= 1) {
                     position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
+                }
                 break;
             case "ET":
+                if (buf.readableBytes() >= 2) {
                     position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
+                }
                 break;
             case "FL":
+                if (buf.readableBytes() >= 1) {
                     position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
+                }
                 break;
             case "ML":
+                if (buf.readableBytes() >= 1) {
                     buf.readUnsignedByte(); // mil status
+                }
                 break;
             case "FC":
+                if (buf.readableBytes() >= 4) {
                     position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
+                }
                 break;
             case "CI":
                 readString(buf); // format string
                 break;
             case "AV1":
+                if (buf.readableBytes() >= 2) {
                     position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
+                }
                 break;
             case "NC":
                 readString(buf); // gsm neighbor cell info
                 break;
             case "SM":
+                if (buf.readableBytes() >= 2) {
                     buf.readUnsignedShort(); // max speed between reports
+                }
                 break;
             case "GL":
                 readString(buf); // google link
                 break;
             case "MA":
                 readString(buf); // mac address
                 break;
             case "PD":
+                if (buf.readableBytes() >= 1) {
                     buf.readUnsignedByte(); // pending code status
+                }
                 break;
             case "CD":
                 position.set(Position.KEY_ICCID, readString(buf));
                 break;
             case "CM":
+                if (buf.readableBytes() >= 8) {
                     buf.readLong(); // imsi
+                }
                 break;
             case "GN":
+                if (buf.readableBytes() >= 60) {
                     buf.skipBytes(60); // g sensor data
+                }
                 break;
             case "GV":
+                if (buf.readableBytes() >= 6) {
                     buf.skipBytes(6); // maximum g force
+                }
                 break;
             case "ME":
+                if (buf.readableBytes() >= 8) {
                     buf.readLong(); // imei
+                }
                 break;
             case "IA":
+                if (buf.readableBytes() >= 1) {
                     buf.readUnsignedByte(); // intake air temperature
+                }
                 break;
             case "MP":
+                if (buf.readableBytes() >= 1) {
                     buf.readUnsignedByte(); // manifold absolute pressure
+                }
                 break;
             default:
                 break;
         }
     }
 
     if (cellTower.getMobileCountryCode() != null
             && cellTower.getMobileNetworkCode() != null
             && cellTower.getCellId() != null && cellTower.getCellId() != 0
             && cellTower.getLocationAreaCode() != null) {
         position.setNetwork(new Network(cellTower));
     } else if (cellTower.getSignalStrength() != null) {
         position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
     }
 }
\ No newline at end of file
