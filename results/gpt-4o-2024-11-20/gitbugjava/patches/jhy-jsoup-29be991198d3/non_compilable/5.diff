diff --git a/tmp/56d1cfb2-7c22-4bbf-b415-605ed0ea828d_buggy.java b/tmp/83b21aa5-3d5a-43f5-a68c-4fa1737a50dc_fixed.java
index 862c60c..800b02e 100644
--- a/tmp/56d1cfb2-7c22-4bbf-b415-605ed0ea828d_buggy.java
+++ b/tmp/83b21aa5-3d5a-43f5-a68c-4fa1737a50dc_fixed.java
@@ -1,25 +1,28 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
+            // Fix: Add condition to handle <br> tags explicitly for normalisation and indentation
             Node next = this.nextSibling();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+                || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
+                || (next instanceof Element && "br".equalsIgnoreCase(((Element) next).tagName())); // handle <br>
             if (couldSkip && isBlank()) return;
 
             if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+                (out.outline() && siblingNodes().size() > 0 && !isBlank()) ||
+                (parent != null && "br".equalsIgnoreCase(parent.tagName()))) { // Fix: Add proper indentation for <br>
                 indent(accum, depth, out);
             }
+        }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
