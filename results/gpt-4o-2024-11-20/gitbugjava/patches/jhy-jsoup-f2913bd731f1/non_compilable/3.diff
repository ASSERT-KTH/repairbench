diff --git a/tmp/8cc8716a-6342-441a-bcef-4b95b0c2eb85_buggy.java b/tmp/eb61b51c-b629-48dc-af7e-3fe131a5fc47_fixed.java
index 016a7f6..5e1566f 100644
--- a/tmp/8cc8716a-6342-441a-bcef-4b95b0c2eb85_buggy.java
+++ b/tmp/eb61b51c-b629-48dc-af7e-3fe131a5fc47_fixed.java
@@ -1,29 +1,37 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
         final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
         boolean trimLeading = false, trimTrailing = false;
 
         if (normaliseWhite) {
             trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
             trimTrailing = trimLikeBlock && nextSibling() == null;
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
             )
                 indent(accum, depth, out);
         }
 
+        // Fix: Only add a space if prettyPrint is enabled and the parent isn't formatting as a block
+        if (prettyPrint && parent != null && !parent.tag().formatAsBlock()
+                && siblingIndex > 0
+                && previousSibling() instanceof TextNode
+                && !((TextNode) previousSibling()).isBlank()) {
+            accum.append(' ');
+        }
+
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
