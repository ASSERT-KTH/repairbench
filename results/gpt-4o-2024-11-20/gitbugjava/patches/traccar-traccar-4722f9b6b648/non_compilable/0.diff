diff --git a/tmp/0d918d23-5d86-4834-a146-051ddc2c749d_buggy.java b/tmp/08f0460c-247b-406e-b714-71e97c9c3cf6_fixed.java
index c84c989..bca8bc1 100644
--- a/tmp/0d918d23-5d86-4834-a146-051ddc2c749d_buggy.java
+++ b/tmp/08f0460c-247b-406e-b714-71e97c9c3cf6_fixed.java
@@ -1,27 +1,33 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+
+    // Fix: Correctly parse and set the timestamp
+    long dateTime = buf.readUnsignedIntLE();
+    position.setTime(new DateBuilder(new Date())
+            .setDateReverse((int) (dateTime >> 16), (int) (dateTime >> 8) & 0xFF, (int) dateTime & 0xFF)
+            .setTime((int) (dateTime >> 24), 0, 0)
+            .getDate());
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
