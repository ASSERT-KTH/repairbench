diff --git a/tmp/2b2d36ca-f347-47fb-ac0a-5d27d866c299_buggy.java b/tmp/6b033aa1-6673-466f-9010-e8e668ec2a8a_fixed.java
index 03b03d7..9ea084d 100644
--- a/tmp/2b2d36ca-f347-47fb-ac0a-5d27d866c299_buggy.java
+++ b/tmp/6b033aa1-6673-466f-9010-e8e668ec2a8a_fixed.java
@@ -1,25 +1,24 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
         // evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
 
         // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
+        long localBefore = convertUTCToLocal(instant + (earlierOrLater ? -1 : 1));
+        long localAfter = convertUTCToLocal(instant + (earlierOrLater ? 1 : -1));
+
+        if (local == localBefore) {
             return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        }
+
+        if (local == localAfter) {
+            return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        }
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // If no overlap detected, return the original instant
+        return instant;
     }
\ No newline at end of file
