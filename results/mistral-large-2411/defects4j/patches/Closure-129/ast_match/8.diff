diff --git a/tmp/b30913ce-a402-4ccb-83b6-a2ebad16b1bf_buggy.java b/tmp/e30e56f9-a94e-4381-b237-db54a5eed069_fixed.java
index e8705ac..0e3a8db 100644
--- a/tmp/b30913ce-a402-4ccb-83b6-a2ebad16b1bf_buggy.java
+++ b/tmp/e30e56f9-a94e-4381-b237-db54a5eed069_fixed.java
@@ -1,24 +1,22 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
 private void annotateCalls(Node n) {
     Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
+    // Keep track of the "this" context of a call. A call without an
     // explicit "this" is a free call.
     Node first = n.getFirstChild();
 
-      // ignore cast nodes.
+    // Ignore cast nodes by skipping them.
+    while (first.isCast()) {
+        first = first.getFirstChild();
+    }
 
     if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);
     }
 
     // Keep track of the context in which eval is called. It is important
     // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+    if (first.isName() && "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
     }
 }
\ No newline at end of file
