diff --git a/tmp/cc6eccf0-f3b9-40ae-a7eb-c29f4bcaa43b_buggy.java b/tmp/9276a5ed-c277-4b99-986b-af7c7c2c816e_fixed.java
index e8705ac..8e235e6 100644
--- a/tmp/cc6eccf0-f3b9-40ae-a7eb-c29f4bcaa43b_buggy.java
+++ b/tmp/9276a5ed-c277-4b99-986b-af7c7c2c816e_fixed.java
@@ -1,24 +1,17 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
 private void annotateCalls(Node n) {
   Preconditions.checkState(n.isCall());
 
   // Keep track of of the "this" context of a call.  A call without an
   // explicit "this" is a free call.
   Node first = n.getFirstChild();
 
-      // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+  if (!NodeUtil.isGet(first) && !NodeUtil.isGetElem(first)) {
     n.putBooleanProp(Node.FREE_CALL, true);
   }
 
   // Keep track of the context in which eval is called. It is important
   // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+  if (first.isName() && "eval".equals(first.getString())) {
     first.putBooleanProp(Node.DIRECT_EVAL, true);
   }
 }
\ No newline at end of file
