diff --git a/tmp/92c3ac42-b8d9-49a9-b222-b2d23caf5e4a_buggy.java b/tmp/21855e83-e75f-4e6a-83ba-909a4d7fdeee_fixed.java
index 42b58d0..7510f21 100644
--- a/tmp/92c3ac42-b8d9-49a9-b222-b2d23caf5e4a_buggy.java
+++ b/tmp/21855e83-e75f-4e6a-83ba-909a4d7fdeee_fixed.java
@@ -1,19 +1,23 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Type[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+
+        // Ensure typeParameters and actualTypeArguments have the same length
+        int length = Math.min(typeParameters.length, actualTypeArguments.length);
+
+        for (int i = 0; i < length; i++) {
+            TypeVariable typeParameter = (TypeVariable) typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
