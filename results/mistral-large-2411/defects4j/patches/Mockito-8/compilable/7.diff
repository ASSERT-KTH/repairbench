diff --git a/tmp/5780360c-1ae6-4782-a610-238cb9f687ca_buggy.java b/tmp/e0444247-d4c0-455b-a71e-f18a611e16cd_fixed.java
index 42b58d0..f734927 100644
--- a/tmp/5780360c-1ae6-4782-a610-238cb9f687ca_buggy.java
+++ b/tmp/e0444247-d4c0-455b-a71e-f18a611e16cd_fixed.java
@@ -1,19 +1,20 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument == parameterizedType) { // Check against a self-referential ParameterizedType to prevent recursion
+            continue;
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
