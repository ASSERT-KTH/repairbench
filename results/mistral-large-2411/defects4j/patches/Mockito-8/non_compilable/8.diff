diff --git a/tmp/7fce9c6e-229a-4839-9f71-c9fc6aac43d8_buggy.java b/tmp/fe3d330d-e8e0-4ff3-8f6d-e530d83bf820_fixed.java
index 42b58d0..a2b931a 100644
--- a/tmp/7fce9c6e-229a-4839-9f71-c9fc6aac43d8_buggy.java
+++ b/tmp/fe3d330d-e8e0-4ff3-8f6d-e530d83bf820_fixed.java
@@ -1,19 +1,33 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+        Type rawType = parameterizedType.getRawType();
+        TypeVariable[] typeParameters;
+
+        // Fix for StackOverflowError: Recursive generics might cause stack overflow
+        if (rawType instanceof ParameterizedType) {
+            typeParameters = ((Class<?>) ((ParameterizedType) rawType).getRawType()).getTypeParameters();
+        } else {
+            typeParameters = ((Class<?>) rawType).getTypeParameters();
+        }
+
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+            } else if (!(actualTypeArguments[i] instanceof TypeVariable)) {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            } else {
+                Type enclosingType = ((TypeVariable) actualTypeArgument).getGenericDeclaration();
+                if (enclosingType instanceof Class) {
+                    contextualActualTypeParameters.put(typeParameter, boundsOf((TypeVariable) actualTypeArgument));
+                }
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
