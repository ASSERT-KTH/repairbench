diff --git a/tmp/2d3c5bd4-9b47-452b-a1cb-c7195d26b007_buggy.java b/tmp/b43baf0c-9ad9-4d08-95c7-f5c88281f5c1_fixed.java
index 6e45f80..95b7c56 100644
--- a/tmp/2d3c5bd4-9b47-452b-a1cb-c7195d26b007_buggy.java
+++ b/tmp/b43baf0c-9ad9-4d08-95c7-f5c88281f5c1_fixed.java
@@ -1,21 +1,24 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
 
+        final TypeAdapter<T1> castTypeAdapter = typeAdapter;
+        return (TypeAdapter<T2>) castTypeAdapter;
       }
-      @Override public String toString() {
+
+      @Override
+      public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
