diff --git a/tmp/ba61a167-b772-451f-ba81-2ce035da9367_buggy.java b/tmp/ff7083c3-5519-44b4-b7f5-f4c7768e3c9d_fixed.java
index c9da1b7..f78c1ec 100644
--- a/tmp/ba61a167-b772-451f-ba81-2ce035da9367_buggy.java
+++ b/tmp/ff7083c3-5519-44b4-b7f5-f4c7768e3c9d_fixed.java
@@ -1,33 +1,29 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
         // already had an explicitly marked one?
         if (oldOne != null) {
 
             if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+                // but skip, if new one is not annotated
                 if (!explicit) {
                     return;
                 }
                 // both explicit: verify
                 // otherwise only verify if neither explicitly annotated.
             }
 
             // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
+            if (oldOne.getRawType().equals(newOne.getRawType())) {
                 // [databind#667]: avoid one particular class of bogus problems
-
                 throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                         + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
\ No newline at end of file
