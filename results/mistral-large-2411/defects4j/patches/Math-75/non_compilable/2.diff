diff --git a/tmp/82e5353a-4b1f-4a00-b03c-a5c3c6f26b8c_buggy.java b/tmp/54a68b49-e2b8-4303-bd00-4bf6d81da201_fixed.java
index 877a1a1..6362248 100644
--- a/tmp/82e5353a-4b1f-4a00-b03c-a5c3c6f26b8c_buggy.java
+++ b/tmp/54a68b49-e2b8-4303-bd00-4bf6d81da201_fixed.java
@@ -1,14 +1,12 @@
-    /**
-      * Returns the percentage of values that are equal to v
-     * (as a proportion between 0 and 1).
-     * <p>
-     * Returns <code>Double.NaN</code> if no values have been added.</p>
-     *
-     * @param v the value to lookup
-     * @return the proportion of values equal to v
-     * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
-     */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        Frequency frequency = new Frequency();
+        double count = 0;
+        for (Object obj : this.values.keySet()) {
+            if (obj.equals(v)) {
+                count += this.values.get(obj);
+            }
+        }
+        double totalCount = this.values.values().stream().mapToDouble(Double::doubleValue).sum();
+        return totalCount == 0 ? Double.NaN : count / totalCount;
     }
\ No newline at end of file
