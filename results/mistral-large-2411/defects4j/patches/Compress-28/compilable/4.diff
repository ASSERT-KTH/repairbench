diff --git a/tmp/34b8ccd8-6654-4cb0-8910-848c8ad52271_buggy.java b/tmp/4021dc70-adbf-4921-9d9d-ed066ce53e54_fixed.java
index 0f439b3..fc30ee6 100644
--- a/tmp/34b8ccd8-6654-4cb0-8910-848c8ad52271_buggy.java
+++ b/tmp/4021dc70-adbf-4921-9d9d-ed066ce53e54_fixed.java
@@ -1,38 +1,32 @@
-    /**
-     * Reads bytes from the current tar archive entry.
-     *
-     * This method is aware of the boundaries of the current
-     * entry in the archive and will deal with them as if they
-     * were this stream's start and EOF.
-     *
-     * @param buf The buffer into which to place bytes read.
-     * @param offset The offset at which to place bytes read.
-     * @param numToRead The number of bytes to read.
-     * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
-     */
     @Override
     public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
         if (hasHitEOF || entryOffset >= entrySize) {
+            if (entryOffset == entrySize && !hasHitEOF) {
+                hasHitEOF = true;
+                return -1;
+            } else if (entryOffset > entrySize && entrySize != 0) {
+                throw new IOException("Entry is truncated");
+            }
             return -1;
         }
 
         if (currEntry == null) {
             throw new IllegalStateException("No current tar entry");
         }
 
         numToRead = Math.min(numToRead, available());
 
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
+        int bytesRead = is.read(buf, offset, numToRead);
+        count(bytesRead);
 
-        if (totalRead == -1) {
+        if (bytesRead == -1) {
             hasHitEOF = true;
         } else {
-            entryOffset += totalRead;
+            entryOffset += bytesRead;
+            if (entryOffset > entrySize) {
+                throw new IOException("Entry is truncated");
+            }
         }
 
-        return totalRead;
+        return bytesRead;
     }
\ No newline at end of file
