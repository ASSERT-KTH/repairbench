diff --git a/tmp/7f26ce62-3841-49db-8197-60e4043d2fbd_buggy.java b/tmp/bcb8aaa0-5154-497e-bdfa-d4da79acbb3d_fixed.java
index 0f439b3..3bd42a3 100644
--- a/tmp/7f26ce62-3841-49db-8197-60e4043d2fbd_buggy.java
+++ b/tmp/bcb8aaa0-5154-497e-bdfa-d4da79acbb3d_fixed.java
@@ -1,38 +1,36 @@
     /**
      * Reads bytes from the current tar archive entry.
      *
      * This method is aware of the boundaries of the current
      * entry in the archive and will deal with them as if they
      * were this stream's start and EOF.
      *
      * @param buf The buffer into which to place bytes read.
      * @param offset The offset at which to place bytes read.
      * @param numToRead The number of bytes to read.
      * @return The number of bytes read, or -1 at EOF.
      * @throws IOException on error
      */
     @Override
     public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
-        if (hasHitEOF || entryOffset >= entrySize) {
-            return -1;
-        }
-
         if (currEntry == null) {
             throw new IllegalStateException("No current tar entry");
         }
 
+        if (hasHitEOF || entryOffset >= entrySize) {
+            return -1;
+        }
+
         numToRead = Math.min(numToRead, available());
 
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
-        
-        if (totalRead == -1) {
+        int bytesRead = is.read(buf, offset, numToRead);
+        if (bytesRead == -1) {
             hasHitEOF = true;
+            throw new EOFException("Entry '"+ currEntry.getName() + "' ended prematurely at offset "
+                    + entryOffset);
         } else {
-            entryOffset += totalRead;
+            entryOffset += bytesRead;
         }
 
-        return totalRead;
+        return bytesRead;
     }
\ No newline at end of file
