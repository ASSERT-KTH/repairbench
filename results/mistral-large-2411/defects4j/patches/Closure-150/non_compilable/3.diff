diff --git a/tmp/817b30b1-460c-4427-9b07-e3e01629fd0c_buggy.java b/tmp/94527b23-d9ab-4893-bd52-7e061455fb73_fixed.java
index 800e6e1..d50c06e 100644
--- a/tmp/817b30b1-460c-4427-9b07-e3e01629fd0c_buggy.java
+++ b/tmp/94527b23-d9ab-4893-bd52-7e061455fb73_fixed.java
@@ -1,32 +1,38 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
-    @Override public void visit(NodeTraversal t, Node n, Node parent) {
+    @Override
+    public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
+      // Add namespaced and inferred function properties definition handling
+      if (NodeUtil.isFunction(n) && parent.getType() == Token.ASSIGN) {
+        handleNamespacedFunctionStubLocal(n, parent);
+      }
+
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
       }
     }
\ No newline at end of file
