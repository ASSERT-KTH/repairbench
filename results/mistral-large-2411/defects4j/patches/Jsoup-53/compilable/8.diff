diff --git a/tmp/93b6573a-dbd0-47b1-8925-a8fe374fc1c3_buggy.java b/tmp/528e8ccb-e5de-4b8e-92da-5476882e7613_fixed.java
index fecb896..64dfd68 100644
--- a/tmp/93b6573a-dbd0-47b1-8925-a8fe374fc1c3_buggy.java
+++ b/tmp/528e8ccb-e5de-4b8e-92da-5476882e7613_fixed.java
@@ -1,34 +1,26 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
     public String chompBalanced(char open, char close) {
         int start = -1;
         int end = -1;
         int depth = 0;
         char last = 0;
 
         do {
             if (isEmpty()) break;
             Character c = consume();
-            if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+            if (c == null) break; // handle the case where consume() might return null
+            if (last != ESC && (last != '\'' && last != '\"')) {
+                if (c == open) {
                     depth++;
                     if (start == -1)
-                        start = pos;
+                        start = pos - 1; // adjust start position to include the open character
                 }
-                else if (c.equals(close))
+                else if (c == close)
                     depth--;
             }
 
-            if (depth > 0 && last != 0)
-                end = pos; // don't include the outer match pair in the return
+            if (depth == 0 && start != -1)
+                end = pos; // include the outer match pair in the return
             last = c;
         } while (depth > 0);
         return (end >= 0) ? queue.substring(start, end) : "";
     }
\ No newline at end of file
