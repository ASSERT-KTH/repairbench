diff --git a/tmp/a40e9933-89d3-47e1-a560-f06ab21bcd56_buggy.java b/tmp/663a60ca-196c-4dba-8234-3f5b6e8e5787_fixed.java
index cc69d41..28beb29 100644
--- a/tmp/a40e9933-89d3-47e1-a560-f06ab21bcd56_buggy.java
+++ b/tmp/663a60ca-196c-4dba-8234-3f5b6e8e5787_fixed.java
@@ -1,29 +1,30 @@
     /**
      * Create an Option using the current settings and with
-     * the specified Option <code>char</code>.
+     * the specified Option <code>String</code>.
      *
      * @param opt the <code>java.lang.String</code> representation
      * of the Option
      * @return the Option instance
      * @throws IllegalArgumentException if <code>opt</code> is not
      * a valid character.  See Option.
      */
     public static Option create(String opt) throws IllegalArgumentException
     {
         // create the option
-        Option option = new Option(opt, description);
+        Option option = new Option(opt, OptionBuilder.description);
 
         // set the option properties
-            option.setLongOpt(longopt);
-            option.setRequired(required);
-            option.setOptionalArg(optionalArg);
-            option.setArgs(numberOfArgs);
-            option.setType(type);
-            option.setValueSeparator(valuesep);
-            option.setArgName(argName);
+        option.setLongOpt(OptionBuilder.longopt);
+        option.setRequired(OptionBuilder.required);
+        option.setOptionalArg(OptionBuilder.optionalArg);
+        option.setArgs(OptionBuilder.numberOfArgs);
+        option.setType(OptionBuilder.type);
+        option.setValueSeparator(OptionBuilder.valuesep);
+        option.setArgName(OptionBuilder.argName);
+
         // reset the OptionBuilder properties
         OptionBuilder.reset();
 
         // return the Option instance
         return option;
     }
\ No newline at end of file
