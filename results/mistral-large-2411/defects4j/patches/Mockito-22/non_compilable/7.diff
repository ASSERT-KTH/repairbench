diff --git a/tmp/828a8d22-5aaf-4a05-84ca-54bde4d997e1_buggy.java b/tmp/47c1bed7-3593-408f-b6ba-e51fc6f680f3_fixed.java
index 111ba5e..c55c35e 100644
--- a/tmp/828a8d22-5aaf-4a05-84ca-54bde4d997e1_buggy.java
+++ b/tmp/47c1bed7-3593-408f-b6ba-e51fc6f680f3_fixed.java
@@ -1,9 +1,45 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+        } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+            return areArraysEqual(o1, o2);
         } else {
             return o1.equals(o2);
         }
     }
+
+    private static boolean isArray(Object obj) {
+        return obj != null && obj.getClass().isArray();
+    }
+
+    private static boolean areArraysEqual(Object arr1, Object arr2) {
+        if (arr1 == null || arr2 == null) {
+            return arr1 == null && arr2 == null;
+        }
+
+        if (arr1.getClass() != arr2.getClass()) {
+            return false;
+        }
+
+        if (arr1 instanceof Object[]) {
+            return Arrays.deepEquals((Object[]) arr1, (Object[]) arr2);
+        } else if (arr1 instanceof int[]) {
+            return Arrays.equals((int[]) arr1, (int[]) arr2);
+        } else if (arr1 instanceof double[]) {
+            return Arrays.equals((double[]) arr1, (double[]) arr2);
+        } else if (arr1 instanceof byte[]) {
+            return Arrays.equals((byte[]) arr1, (byte[]) arr2);
+        } else if (arr1 instanceof short[]) {
+            return Arrays.equals((short[]) arr1, (short[]) arr2);
+        } else if (arr1 instanceof long[]) {
+            return Arrays.equals((long[]) arr1, (long[]) arr2);
+        } else if (arr1 instanceof float[]) {
+            return Arrays.equals((float[]) arr1, (float[]) arr2);
+        } else if (arr1 instanceof char[]) {
+            return Arrays.equals((char[]) arr1, (char[]) arr2);
+        } else if (arr1 instanceof boolean[]) {
+            return Arrays.equals((boolean[]) arr1, (boolean[]) arr2);
+        } else {
+            return false;
+        }
+    }
\ No newline at end of file
