diff --git a/tmp/bcb2c94e-20a3-45d8-9142-ef79a62eb59e_buggy.java b/tmp/800dca28-af3b-4c7f-8255-523463f4587c_fixed.java
index 111ba5e..299ab25 100644
--- a/tmp/bcb2c94e-20a3-45d8-9142-ef79a62eb59e_buggy.java
+++ b/tmp/800dca28-af3b-4c7f-8255-523463f4587c_fixed.java
@@ -1,9 +1,64 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+        } else if (o1 instanceof Object[] && o2 instanceof Object[]) {
+            return areArraysEqual((Object[]) o1, (Object[]) o2);
+        } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+            if (o1.getClass().equals(o2.getClass())) {
+                return arePrimitiveArraysEqual(o1, o2);
+            }
+        }
         return o1.equals(o2);
     }
+
+    private static boolean isArray(Object obj) {
+        return obj != null && obj.getClass().isArray();
+    }
+
+    private static boolean areArraysEqual(Object[] array1, Object[] array2) {
+        if (array1 == null || array2 == null) {
+            return array1 == null && array2 == null;
+        }
+
+        if (array1.length != array2.length) {
+            return false;
+        }
+
+        for (int i = 0; i < array1.length; i++) {
+            if (!areEqual(array1[i], array2[i])) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    private static boolean arePrimitiveArraysEqual(Object array1, Object array2) {
+        if (array1 == null || array2 == null) {
+            return array1 == null && array2 == null;
+        }
+
+        if (array1.getClass() != array2.getClass()) {
+            return false;
+        }
+
+        if (array1 instanceof int[]) {
+            return Arrays.equals((int[]) array1, (int[]) array2);
+        } else if (array1 instanceof long[]) {
+            return Arrays.equals((long[]) array1, (long[]) array2);
+        } else if (array1 instanceof double[]) {
+            return Arrays.equals((double[]) array1, (double[]) array2);
+        } else if (array1 instanceof boolean[]) {
+            return Arrays.equals((boolean[]) array1, (boolean[]) array2);
+        } else if (array1 instanceof byte[]) {
+            return Arrays.equals((byte[]) array1, (byte[]) array2);
+        } else if (array1 instanceof char[]) {
+            return Arrays.equals((char[]) array1, (char[]) array2);
+        } else if (array1 instanceof short[]) {
+            return Arrays.equals((short[]) array1, (short[]) array2);
+        } else if (array1 instanceof float[]) {
+            return Arrays.equals((float[]) array1, (float[]) array2);
+        }
+
+        return false;
     }
\ No newline at end of file
