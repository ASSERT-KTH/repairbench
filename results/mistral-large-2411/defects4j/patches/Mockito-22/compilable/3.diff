diff --git a/tmp/82f5ef46-e612-41e2-bffd-dc1f1e886156_buggy.java b/tmp/e3c30ba0-9067-4991-ad4e-56c5956fcf1d_fixed.java
index 111ba5e..59d2ddc 100644
--- a/tmp/82f5ef46-e612-41e2-bffd-dc1f1e886156_buggy.java
+++ b/tmp/e3c30ba0-9067-4991-ad4e-56c5956fcf1d_fixed.java
@@ -1,9 +1,30 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+        } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+            if (o1.getClass() != o2.getClass()) {
+                return false;
+            }
+            if (o1 instanceof int[]) {
+                return java.util.Arrays.equals((int[]) o1, (int[]) o2);
+            } else if (o1 instanceof double[]) {
+                return java.util.Arrays.equals((double[]) o1, (double[]) o2);
+            } else if (o1 instanceof boolean[]) {
+                return java.util.Arrays.equals((boolean[]) o1, (boolean[]) o2);
+            } else if (o1 instanceof char[]) {
+                return java.util.Arrays.equals((char[]) o1, (char[]) o2);
+            } else if (o1 instanceof byte[]) {
+                return java.util.Arrays.equals((byte[]) o1, (byte[]) o2);
+            } else if (o1 instanceof short[]) {
+                return java.util.Arrays.equals((short[]) o1, (short[]) o2);
+            } else if (o1 instanceof long[]) {
+                return java.util.Arrays.equals((long[]) o1, (long[]) o2);
+            } else if (o1 instanceof float[]) {
+                return java.util.Arrays.equals((float[]) o1, (float[]) o2);
+            } else {
+                return java.util.Arrays.deepEquals((Object[]) o1, (Object[]) o2);
+            }
         } else {
             return o1.equals(o2);
         }
     }
\ No newline at end of file
