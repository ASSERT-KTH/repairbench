diff --git a/tmp/a4c36d85-9cb2-41a1-ba02-e1e3f07a02a4_buggy.java b/tmp/fc0b860d-1228-4e8d-90a5-e6270a0029c3_fixed.java
index 5f96616..872e04a 100644
--- a/tmp/a4c36d85-9cb2-41a1-ba02-e1e3f07a02a4_buggy.java
+++ b/tmp/fc0b860d-1228-4e8d-90a5-e6270a0029c3_fixed.java
@@ -1,20 +1,24 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
+      // Ensure the object includes properties from the constraint
+      for (String property : constraint.toMaybeRecordType().getProperties().keySet()) {
+        this.defineProperty(property, constraint.toMaybeRecordType().getProperties().get(property), true);
+      }
       matchRecordTypeConstraint(constraint.toObjectType());
     }
   }
\ No newline at end of file
