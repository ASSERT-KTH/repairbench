diff --git a/tmp/a2494498-3860-47cf-a7c0-5c5ff378f0c4_buggy.java b/tmp/aa733be1-fc9d-4fd7-9afc-5ec21171b3b1_fixed.java
index 5f96616..2551ab5 100644
--- a/tmp/a2494498-3860-47cf-a7c0-5c5ff378f0c4_buggy.java
+++ b/tmp/aa733be1-fc9d-4fd7-9afc-5ec21171b3b1_fixed.java
@@ -1,20 +1,20 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      JSType recordType = constraint.toObjectType();
+      if (recordType.hasProperties()) {
+        for (String prop : recordType.getOwnPropertyNames()) {
+          this.addPropertyDecl("prop", recordType.getPropertyType(prop));
+        }
+      }
     }
   }
\ No newline at end of file
