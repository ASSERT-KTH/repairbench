diff --git a/tmp/fc7e3f0b-7388-455a-a5c8-3b294dd21a59_buggy.java b/tmp/61bd8b83-1cbd-4c58-900c-f9cffa6031fe_fixed.java
index a7d0787..f7697f4 100644
--- a/tmp/fc7e3f0b-7388-455a-a5c8-3b294dd21a59_buggy.java
+++ b/tmp/61bd8b83-1cbd-4c58-900c-f9cffa6031fe_fixed.java
@@ -1,54 +1,41 @@
 /**
  * Returns the <code>Object</code> of type <code>clazz</code>
  * with the value of <code>str</code>.
  *
  * @param str the command line value
  * @param clazz the type of argument
  * @return The instance of <code>clazz</code> initialised with
  * the value of <code>str</code>.
  * @throws ParseException if the value creation for the given class failed
  */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
 public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
 {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+    try {
+        if (PatternOptionBuilder.STRING_VALUE == clazz) {
             return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
             return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
             return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.DATE_VALUE == clazz) {
             return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
             return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILE_VALUE == clazz) {
             return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
             return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILES_VALUE == clazz) {
             return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.URL_VALUE == clazz) {
             return (T) createURL(str);
-        }
-        else
-        {
+        } else if (clazz == Integer.class) {
+            return (T) Integer.valueOf(str);
+        } else {
             return null;
         }
+    } catch (NumberFormatException e) {
+        throw new ParseException(e.getMessage());
+    }
 }
\ No newline at end of file
