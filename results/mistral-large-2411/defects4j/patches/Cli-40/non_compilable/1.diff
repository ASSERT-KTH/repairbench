diff --git a/tmp/00d3f79f-0374-4047-9806-cbebf939731f_buggy.java b/tmp/6fde5ae6-2226-4724-ac3c-52332767b069_fixed.java
index a7d0787..4cf3360 100644
--- a/tmp/00d3f79f-0374-4047-9806-cbebf939731f_buggy.java
+++ b/tmp/6fde5ae6-2226-4724-ac3c-52332767b069_fixed.java
@@ -1,54 +1,44 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
+        if (String.class == clazz)
         {
             return (T) str;
         }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
+        else if (Object.class == clazz)
         {
             return (T) createObject(str);
         }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
+        else if (Number.class.isAssignableFrom(clazz))
         {
             return (T) createNumber(str);
         }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
+        else if (Date.class == clazz)
         {
             return (T) createDate(str);
         }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
+        else if (Class.class == clazz)
         {
             return (T) createClass(str);
         }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
+        else if (File.class == clazz)
         {
             return (T) createFile(str);
         }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
+        else if (File.class == clazz)
         {
             return (T) openFile(str);
         }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
+        else if (Collection.class.isAssignableFrom(clazz))
         {
             return (T) createFiles(str);
         }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
+        else if (URL.class == clazz)
         {
             return (T) createURL(str);
         }
         else
         {
-            return null;
+            throw new ParseException("Unsupported type: " + clazz.getName());
         }
     }
\ No newline at end of file
