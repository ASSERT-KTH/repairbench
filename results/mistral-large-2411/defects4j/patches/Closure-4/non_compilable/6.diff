diff --git a/tmp/dfdff32b-aa80-4ec4-94f4-529d9499f447_buggy.java b/tmp/ee982cdb-a281-43b6-8717-8edc6f2c6d98_fixed.java
index d6a560a..b851fca 100644
--- a/tmp/dfdff32b-aa80-4ec4-94f4-529d9499f447_buggy.java
+++ b/tmp/ee982cdb-a281-43b6-8717-8edc6f2c6d98_fixed.java
@@ -1,33 +1,31 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
   // TODO(user): Investigate whether it is really necessary to keep two
   // different mechanisms for resolving named types, and if so, which order
   // makes more sense. Now, resolution via registry is first in order to
   // avoid triggering the warnings built into the resolution via properties.
   boolean resolved = resolveViaRegistry(t, enclosing);
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
   }
 
   if (resolved) {
     super.resolveInternal(t, enclosing);
     finishPropertyContinuations();
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
 
-    resolveViaProperties(t, enclosing);
+  resolved = resolveViaProperties(t, enclosing);
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
   }
 
+  if (resolved) {
     super.resolveInternal(t, enclosing);
-    if (isResolved()) {
     finishPropertyContinuations();
   }
+
   return registry.isLastGeneration() ?
       getReferencedType() : this;
 }
\ No newline at end of file
