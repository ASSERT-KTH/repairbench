diff --git a/tmp/dc6cebae-d447-4143-a935-811d9b46749f_buggy.java b/tmp/e1eefa5d-30e2-43ef-8cfd-1b0d01d41253_fixed.java
index 0ef85f2..597f275 100644
--- a/tmp/dc6cebae-d447-4143-a935-811d9b46749f_buggy.java
+++ b/tmp/e1eefa5d-30e2-43ef-8cfd-1b0d01d41253_fixed.java
@@ -1,50 +1,40 @@
-  /**
-   * Gets the source line for the indicated line number.
-   *
-   * @param lineNumber the line number, 1 being the first line of the file.
-   * @return The line indicated. Does not include the newline at the end
-   *     of the file. Returns {@code null} if it does not exist,
-   *     or if there was an IO exception.
-   */
 public String getLine(int lineNumber) {
     String js = "";
     try {
-      // NOTE(nicksantos): Right now, this is optimized for few warnings.
-      // This is probably the right trade-off, but will be slow if there
-      // are lots of warnings in one file.
         js = getCode();
     } catch (IOException e) {
         return null;
     }
 
     int pos = 0;
     int startLine = 1;
 
-    // If we've saved a previous offset and it's for a line less than the
-    // one we're searching for, then start at that point.
     if (lineNumber >= lastLine) {
         pos = lastOffset;
         startLine = lastLine;
     }
 
     for (int n = startLine; n < lineNumber; n++) {
         int nextpos = js.indexOf('\n', pos);
         if (nextpos == -1) {
             return null;
         }
         pos = nextpos + 1;
     }
 
-    // Remember this offset for the next search we do.
     lastOffset = pos;
     lastLine = lineNumber;
 
-    if (js.indexOf('\n', pos) == -1) {
-      // If next new line cannot be found, there are two cases
-      // 1. pos already reaches the end of file, then null should be returned
-      // 2. otherwise, return the contents between pos and the end of file.
+    int endPos = js.indexOf('\n', pos);
+    if (endPos == -1) {
+        // We reach the end of the content, return the remaining content.
+        if (pos < js.length()) {
+            return js.substring(pos);
+        } else {
+            // Position reached the end of the content and there is no more content.
             return null;
+        }
     } else {
-      return js.substring(pos, js.indexOf('\n', pos));
+        return js.substring(pos, endPos);
     }
 }
\ No newline at end of file
