diff --git a/tmp/00bd4107-2f7b-46cd-875e-cae25ffdbb36_buggy.java b/tmp/6e675ef2-5ffd-4f64-925b-acfc86e250e7_fixed.java
index 10616db..2942f28 100644
--- a/tmp/00bd4107-2f7b-46cd-875e-cae25ffdbb36_buggy.java
+++ b/tmp/6e675ef2-5ffd-4f64-925b-acfc86e250e7_fixed.java
@@ -1,19 +1,30 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] adjustedValues = iChronology.get(partial, instant);
+
+            // Adjust for end of month if necessary
+            if (partial.size() > 1) {
+                for (int i = 1; i < adjustedValues.length; i++) {
+                    int max = partial.getFieldType(i).getMaximumValue(partial, adjustedValues);
+                    if (adjustedValues[i] > max) {
+                        adjustedValues[i] = max;
+                    }
+                }
+            }
+            return adjustedValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
