diff --git a/tmp/bfe9dd04-86c1-4b4c-bacf-5419dab2e624_buggy.java b/tmp/2c56d9b5-788c-4941-91cc-21b7c3386e51_fixed.java
index 10616db..17b51fc 100644
--- a/tmp/bfe9dd04-86c1-4b4c-bacf-5419dab2e624_buggy.java
+++ b/tmp/2c56d9b5-788c-4941-91cc-21b7c3386e51_fixed.java
@@ -1,19 +1,25 @@
-    //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+            int[] newValues = Arrays.copyOf(values, values.length);
+            newValues[fieldIndex] += valueToAdd;
+            // adjust for any out of range values
+            int maxMonth = partial.getChronology().get(partial).getMaximumValue(partial.getFieldType(1));
+            if (newValues[1] > maxMonth) {
+                newValues[0] += newValues[1] / (maxMonth + 1);
+                newValues[1] = (newValues[1] - 1) % maxMonth + 1;
             }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            while (newValues[1] <= 0) {
+                newValues[0]--;
+                newValues[1] += maxMonth;
+            }
+            return newValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
