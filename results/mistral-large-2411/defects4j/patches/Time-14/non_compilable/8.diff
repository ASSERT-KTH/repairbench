diff --git a/tmp/90c8d5c6-0a91-4640-8c95-1a127236e7c0_buggy.java b/tmp/687af946-8562-4cef-ad1e-bbd9cd74f00e_fixed.java
index 10616db..f662c30 100644
--- a/tmp/90c8d5c6-0a91-4640-8c95-1a127236e7c0_buggy.java
+++ b/tmp/687af946-8562-4cef-ad1e-bbd9cd74f00e_fixed.java
@@ -1,19 +1,25 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            // Adjust for leap year and end of month
+            int[] newValues = iChronology.get(partial, instant);
+            if (partial.getFieldType(fieldIndex).getDurationType().equals(DurationFieldType.months()) &&
+                newValues[partial.indexOf(DateTimeFieldType.dayOfMonth())] > partial.getFieldType(partial.indexOf(DateTimeFieldType.dayOfMonth())).getMaximumValue(partial, newValues[partial.indexOf(DateTimeFieldType.monthOfYear())])) {
+                newValues[partial.indexOf(DateTimeFieldType.dayOfMonth())] = partial.getFieldType(partial.indexOf(DateTimeFieldType.dayOfMonth())).getMaximumValue(partial, newValues[partial.indexOf(DateTimeFieldType.monthOfYear())]);
+            }
+            return newValues;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
