diff --git a/tmp/8cf970e0-76a9-4a62-abb5-4784297f40b5_buggy.java b/tmp/7cfd87d4-cc38-4913-8d9a-a81cd28e908d_fixed.java
index 10616db..958d024 100644
--- a/tmp/8cf970e0-76a9-4a62-abb5-4784297f40b5_buggy.java
+++ b/tmp/7cfd87d4-cc38-4913-8d9a-a81cd28e908d_fixed.java
@@ -1,19 +1,26 @@
-    //-----------------------------------------------------------------------
+    @Override
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            return adjustForIllegalValues(partial, iChronology.get(partial, instant));
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
+
+    private int[] adjustForIllegalValues(ReadablePartial partial, int[] values) {
+        for (int i = 0, isize = partial.size(); i < isize; i++) {
+            int fieldValue = values[i];
+            if (!partial.getFieldType(i).getField(iChronology).isValid(partial.get(i), fieldValue)) {
+                values[i] = partial.getFieldType(i).getField(iChronology).getMaximumValue(partial.get(i));
+            }
+        }
+        return values;
+    }
\ No newline at end of file
