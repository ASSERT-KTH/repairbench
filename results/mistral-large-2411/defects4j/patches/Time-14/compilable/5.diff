diff --git a/tmp/12473b0e-7864-425e-bf20-cae8a04e2fc1_buggy.java b/tmp/2a8b0551-2fdb-4ff6-8c3e-812941d7e64c_fixed.java
index 10616db..c14a063 100644
--- a/tmp/12473b0e-7864-425e-bf20-cae8a04e2fc1_buggy.java
+++ b/tmp/2a8b0551-2fdb-4ff6-8c3e-812941d7e64c_fixed.java
@@ -1,19 +1,24 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        // Adjust the instant correctly for month and day addition
+        instant = partial.getFieldType(fieldIndex).getField(iChronology).add(instant, valueToAdd);
+        // Now we need to correct the values[] part of code after adding
+        int[] correctedValues = new int[values.length];
+        for (int i = 0; i < values.length; i++) {
+            correctedValues[i] = partial.getFieldType(i).getField(iChronology).get(instant);
+        }
+
+        return correctedValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
