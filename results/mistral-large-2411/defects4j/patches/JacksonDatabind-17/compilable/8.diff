diff --git a/tmp/713a1e77-e2b7-4777-a2da-142fd4c13857_buggy.java b/tmp/ecfb7ecb-9197-4a32-a97b-2c3dffb92a24_fixed.java
index 01967cc..0090d57 100644
--- a/tmp/713a1e77-e2b7-4777-a2da-142fd4c13857_buggy.java
+++ b/tmp/ecfb7ecb-9197-4a32-a97b-2c3dffb92a24_fixed.java
@@ -1,35 +1,28 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // fall through
     case OBJECT_AND_NON_CONCRETE:
 //                return t.isJavaLangObject() ||
         return (t.getRawClass() == Object.class)
                 || (!t.isConcrete()
                         // [databind#88] Should not apply to JSON tree models:
                         || TreeNode.class.isAssignableFrom(t.getRawClass()));
 
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // [Issue#88] Should not apply to JSON tree models:
         return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
+    case JAVA_LANG_OBJECT:
 //                return t.isJavaLangObject();
         return (t.getRawClass() == Object.class);
+    default:
+        return false;
     }
 }
\ No newline at end of file
