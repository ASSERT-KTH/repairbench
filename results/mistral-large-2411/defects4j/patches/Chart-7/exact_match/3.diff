diff --git a/tmp/cdd9a584-3083-44fc-ae63-335e43f279c1_buggy.java b/tmp/34c9f40c-7e9d-4c42-9439-4b21ef0e2f54_fixed.java
index eb0c9a2..2330575 100644
--- a/tmp/cdd9a584-3083-44fc-ae63-335e43f279c1_buggy.java
+++ b/tmp/34c9f40c-7e9d-4c42-9439-4b21ef0e2f54_fixed.java
@@ -1,85 +1,84 @@
     /**
      * Update the index values for the maximum and minimum bounds.
      *
      * @param period  the time period.
      * @param index  the index of the time period.
      */
     private void updateBounds(TimePeriod period, int index) {
 
         long start = period.getStart().getTime();
         long end = period.getEnd().getTime();
         long middle = start + ((end - start) / 2);
 
         if (this.minStartIndex >= 0) {
             long minStart = getDataItem(this.minStartIndex).getPeriod()
                 .getStart().getTime();
             if (start < minStart) {
                 this.minStartIndex = index;
             }
         }
         else {
             this.minStartIndex = index;
         }
 
         if (this.maxStartIndex >= 0) {
             long maxStart = getDataItem(this.maxStartIndex).getPeriod()
                 .getStart().getTime();
             if (start > maxStart) {
                 this.maxStartIndex = index;
             }
         }
         else {
             this.maxStartIndex = index;
         }
 
         if (this.minMiddleIndex >= 0) {
             long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
                 .getTime();
             long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
                 .getTime();
             long minMiddle = s + (e - s) / 2;
             if (middle < minMiddle) {
                 this.minMiddleIndex = index;
             }
         }
         else {
             this.minMiddleIndex = index;
         }
 
         if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
+            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()
                 .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
+            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()
                 .getTime();
             long maxMiddle = s + (e - s) / 2;
             if (middle > maxMiddle) {
                 this.maxMiddleIndex = index;
             }
         }
         else {
             this.maxMiddleIndex = index;
         }
 
         if (this.minEndIndex >= 0) {
             long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
                 .getTime();
             if (end < minEnd) {
                 this.minEndIndex = index;
             }
         }
         else {
             this.minEndIndex = index;
         }
 
         if (this.maxEndIndex >= 0) {
             long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
                 .getTime();
             if (end > maxEnd) {
                 this.maxEndIndex = index;
             }
         }
         else {
             this.maxEndIndex = index;
         }
-        
     }
\ No newline at end of file
