diff --git a/tmp/fe7851aa-77dd-4acb-ae8b-db6aa42fc2cd_buggy.java b/tmp/775b63b5-dee6-47e5-871a-5a8f9d617a10_fixed.java
index e1fc51f..7888ed8 100644
--- a/tmp/fe7851aa-77dd-4acb-ae8b-db6aa42fc2cd_buggy.java
+++ b/tmp/775b63b5-dee6-47e5-871a-5a8f9d617a10_fixed.java
@@ -1,9 +1,14 @@
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
+    // Not using method.equals() for one good reason:
+    // Sometimes Java generates forwarding methods when generics are in play, see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
 
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Enhanced method comparison
+    if (m1.equals(m2)) {
+        return true;
+    }
+    return m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass()) && m1.getName().equals(m2.getName())
+        && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())
+        && (m1.getReturnType().isAssignableFrom(m2.getReturnType()) || m2.getReturnType().isAssignableFrom(m1.getReturnType()));
 }
\ No newline at end of file
