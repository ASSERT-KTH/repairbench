diff --git a/tmp/06421a8f-f18b-437b-af80-389493f19426_buggy.java b/tmp/dfbe2beb-df84-4bee-b253-d76851d012fb_fixed.java
index 0e18f59..7bea704 100644
--- a/tmp/06421a8f-f18b-437b-af80-389493f19426_buggy.java
+++ b/tmp/dfbe2beb-df84-4bee-b253-d76851d012fb_fixed.java
@@ -1,13 +1,19 @@
         @Override
         InputStream decode(final InputStream in, final Coder coder,
                 byte[] password) throws IOException {
             byte propsByte = coder.properties[0];
             long dictSize = coder.properties[1];
             for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
+                dictSize |= (coder.properties[i + 1] & 0xFF) << (8 * i); // Ensure proper shifting by masking
             }
             if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
                 throw new IOException("Dictionary larger than 4GiB maximum size");
             }
+            // Use a try-catch block to handle the UnsupportedOptionsException
+            try {
                 return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
+            } catch (UnsupportedOptionsException e) {
+                // Re-throw as an IOException for consistency
+                throw new IOException("LZMA dictionary is too big for this implementation", e);
+            }
         }
\ No newline at end of file
