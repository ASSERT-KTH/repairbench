diff --git a/tmp/e3dfa8d0-b210-49e0-a84f-08cfef59b3f1_buggy.java b/tmp/9cbf5016-81a2-4743-ba40-bc95741052dd_fixed.java
index dc93be3..e1ca315 100644
--- a/tmp/e3dfa8d0-b210-49e0-a84f-08cfef59b3f1_buggy.java
+++ b/tmp/9cbf5016-81a2-4743-ba40-bc95741052dd_fixed.java
@@ -1,14 +1,21 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
+            String tagName = el.tagName();
+            boolean isKnownTag = tagName.equalsIgnoreCase("img") || tagName.equalsIgnoreCase("br") || tagName.equalsIgnoreCase("hr") ||
+                                tagName.equalsIgnoreCase("input") || tagName.equalsIgnoreCase("meta") || tagName.equalsIgnoreCase("link") ||
+                                tagName.equalsIgnoreCase("base") || tagName.equalsIgnoreCase("col") || tagName.equalsIgnoreCase("area") ||
+                                tagName.equalsIgnoreCase("embed") || tagName.equalsIgnoreCase("param") || tagName.equalsIgnoreCase("source") ||
+                                tagName.equalsIgnoreCase("track") || tagName.equalsIgnoreCase("wbr");
+            if (!isKnownTag)
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
 
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
