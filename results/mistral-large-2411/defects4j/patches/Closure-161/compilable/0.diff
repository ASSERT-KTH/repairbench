diff --git a/tmp/405a5be9-ee50-4bfb-82e3-ba512b038fa8_buggy.java b/tmp/33d0e9cf-0090-4d8e-ba4d-b00584aef521_fixed.java
index 1303a19..7e2c4c4 100644
--- a/tmp/405a5be9-ee50-4bfb-82e3-ba512b038fa8_buggy.java
+++ b/tmp/33d0e9cf-0090-4d8e-ba4d-b00584aef521_fixed.java
@@ -1,45 +1,37 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
 
     if (right.getType() != Token.NUMBER) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
       return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
       error(INVALID_GETELEM_INDEX_ERROR, right);
       return n;
     }
 
     if (intIndex < 0) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
     Node elem = left.getFirstChild();
     for (int i = 0; elem != null && i < intIndex; i++) {
       elem = elem.getNext();
     }
 
     if (elem == null) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
-    if (elem.getType() == Token.EMPTY) {
+      // Allow assignment to an out-of-bounds index in case of an array
+      // with no prior initialization. Instead of treating this as an error,
+      // we create a placeholder 'undefined' node.
       elem = NodeUtil.newUndefinedNode(elem);
     } else {
       left.removeChild(elem);
     }
 
-    // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
   }
\ No newline at end of file
