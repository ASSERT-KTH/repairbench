diff --git a/tmp/c558d2cd-71f4-4a34-a4e6-ab08902444b5_buggy.java b/tmp/0894b27e-fbf4-408a-a684-3df6462ea292_fixed.java
index 4bbd561..060920a 100644
--- a/tmp/c558d2cd-71f4-4a34-a4e6-ab08902444b5_buggy.java
+++ b/tmp/0894b27e-fbf4-408a-a684-3df6462ea292_fixed.java
@@ -1,37 +1,41 @@
-    /**
-     * {@inheritDoc}
-     */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
+    if (index < 0 || index >= input.length()) {
+        throw new ArrayIndexOutOfBoundsException();
+    }
+
     if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
+        if (start < input.length() && (input.charAt(start) == 'x' || input.charAt(start) == 'X')) {
             start++;
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if (end >= input.length() || input.charAt(end) != ';') {
+            // If ';' is not found, return 0 indicating failure
+            return 0;
+        }
+
         int entityValue;
         try {
             if (isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch (NumberFormatException nfe) {
             return 0;
         }
 
         out.write(entityValue);
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
     return 0;
 }
\ No newline at end of file
