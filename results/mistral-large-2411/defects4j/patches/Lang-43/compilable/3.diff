diff --git a/tmp/dfe3be86-baee-4253-a436-ef90e7778f41_buggy.java b/tmp/dd1dfaaa-562a-402d-ac64-c11edbc7e012_fixed.java
index b6b11b6..ab5152f 100644
--- a/tmp/dfe3be86-baee-4253-a436-ef90e7778f41_buggy.java
+++ b/tmp/dd1dfaaa-562a-402d-ac64-c11edbc7e012_fixed.java
@@ -1,38 +1,36 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      *
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);
                 pos.setIndex(i + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
+                i = pos.getIndex(); // Move i to the updated position to avoid infinite loop
                 continue;
             }
-            switch (c[pos.getIndex()]) {
+            switch (c[i]) {
             case QUOTE:
                 next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                return appendTo == null ? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);
             default:
                 next(pos);
             }
         }
-        throw new IllegalArgumentException(
-                "Unterminated quoted string at position " + start);
+        throw new IllegalArgumentException("Unterminated quoted string at position " + start);
     }
\ No newline at end of file
