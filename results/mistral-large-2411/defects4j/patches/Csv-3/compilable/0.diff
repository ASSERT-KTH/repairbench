diff --git a/tmp/e0a93ac8-4866-4f5b-bf4e-37a4557fb257_buggy.java b/tmp/6d6e9cf6-fe0d-4d8a-9e4d-f77c78a3d739_fixed.java
index 1ad070d..ebdda58 100644
--- a/tmp/e0a93ac8-4866-4f5b-bf4e-37a4557fb257_buggy.java
+++ b/tmp/6d6e9cf6-fe0d-4d8a-9e4d-f77c78a3d739_fixed.java
@@ -1,38 +1,45 @@
     /**
      * Handle an escape sequence.
      * The current character must be the escape character.
      * On return, the next character is available by calling {@link ExtendedBufferedReader#getLastChar()}
      * on the input stream.
      *
      * @return the unescaped character (as an int) or {@link END_OF_STREAM} if char following the escape is invalid.
      * @throws IOException if there is a problem reading the stream or the end of stream is detected:
      * the escape character is not allowed at end of strem
      */
     int readEscape() throws IOException {
         // the escape char has just been read (normally a backslash)
         final int c = in.read();
         switch (c) {
         case 'r':
             return CR;
         case 'n':
             return LF;
         case 't':
             return TAB;
         case 'b':
             return BACKSPACE;
         case 'f':
             return FF;
+        case '\\':
+            return '\\';
+        case '\'':
+            return '\'';
         case CR:
         case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
+        case FF: // Escape character for form feed
+        case TAB: // Escape character for tab
+        case BACKSPACE: // Escape character for backspace
             return c;
         case END_OF_STREAM:
             throw new IOException("EOF whilst processing escape sequence");
+        case 'N':
+            // Handle MySQL-specific \N for null values
+            return -1;
         default:
             // Now check for meta-characters
-                return c;
             // indicate unexpected char - available from in.getLastChar()
+            return c;
         }
     }
\ No newline at end of file
