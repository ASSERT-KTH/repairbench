diff --git a/tmp/3d28f2c2-fbff-42f0-aad9-2be7c3798f19_buggy.java b/tmp/720b90fb-11bc-43d7-9332-1f36a985738b_fixed.java
index e69de29..de35c0d 100644
--- a/tmp/3d28f2c2-fbff-42f0-aad9-2be7c3798f19_buggy.java
+++ b/tmp/720b90fb-11bc-43d7-9332-1f36a985738b_fixed.java
@@ -0,0 +1,53 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    Validate.notNull(this);
+    List<Connection.KeyVal> data = new ArrayList<>();
+    for (Element el : formElements) {
+        if (el.tagName().equals("input")) {
+            if ((!el.hasAttr("type") || el.attr("type").equalsIgnoreCase("text") ||
+                 el.attr("type").equalsIgnoreCase("password") ||
+                 el.attr("type").equalsIgnoreCase("hidden") ||
+                 el.attr("type").equalsIgnoreCase("color")||
+                 el.attr("type").equalsIgnoreCase("date")||
+                 el.attr("type").equalsIgnoreCase("datetime")||
+                 el.attr("type").equalsIgnoreCase("datetime-local")||
+                 el.attr("type").equalsIgnoreCase("email")||
+                 el.attr("type").equalsIgnoreCase("month")||
+                 el.attr("type").equalsIgnoreCase("number")||
+                 el.attr("type").equalsIgnoreCase("range")||
+                 el.attr("type").equalsIgnoreCase("search")||
+                 el.attr("type").equalsIgnoreCase("tel")||
+                 el.attr("type").equalsIgnoreCase("time")||
+                 el.attr("type").equalsIgnoreCase("url")||
+                 el.attr("type").equalsIgnoreCase("week")) &&
+                 el.hasAttr("name") && !el.hasAttr("disabled"))
+                data.add(Connection.KeyVal.create(el.attr("name"), el.val()));
+            else if (el.attr("type").equalsIgnoreCase("checkbox") && el.hasAttr("name") && el.hasAttr("checked") &&
+                     !el.hasAttr("disabled"))
+                data.add(Connection.KeyVal.create(el.attr("name"), "on"));
+            else if (el.attr("type").equalsIgnoreCase("radio") && el.hasAttr("name") && el.hasAttr("checked") &&
+                     !el.hasAttr("disabled"))
+                data.add(Connection.KeyVal.create(el.attr("name"), el.val()));
+            else if (el.attr("type").equalsIgnoreCase("submit") && el.hasAttr("name") && !el.hasAttr("disabled"))
+                data.add(Connection.KeyVal.create(el.attr("name"), el.val()));
+        } else if (el.tagName().equals("textarea")) {
+            if (el.hasAttr("name") && !el.hasAttr("disabled"))
+                data.add(Connection.KeyVal.create(el.attr("name"), el.text()));
+        } else if (el.tagName().equals("select")) {
+            if (el.hasAttr("name") && !el.hasAttr("disabled") && el.hasAttr("multiple"))
+                for (Element option : el.select("option[selected]"))
+                    data.add(Connection.KeyVal.create(el.attr("name"), option.val()));
+            else if (el.hasAttr("name") && !el.hasAttr("disabled")) {
+                Element one = el.selectFirst("option[selected]");
+                if (one == null) one = el.selectFirst("option");
+                if (one != null)
+                    data.add(Connection.KeyVal.create(el.attr("name"), one.val()));
+            }
+        } else if (el.tagName().equals("button") && el.hasAttr("name") &&
+                   !el.hasAttr("disabled") &&
+                   (el.attr("type").equals("") ||
+                    el.attr("type").equalsIgnoreCase("submit")))
+            data.add(Connection.KeyVal.create(el.attr("name"), el.attr("value")));
+    }
+    return data;
+}
\ No newline at end of file
