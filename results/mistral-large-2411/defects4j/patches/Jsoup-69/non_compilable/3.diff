diff --git a/tmp/6a073e4e-fd5c-4cfc-96c6-b6d9ca1133a8_buggy.java b/tmp/c663c6f4-fdb7-4d3a-994a-868b3f333b8b_fixed.java
index e69de29..6ae3d99 100644
--- a/tmp/6a073e4e-fd5c-4cfc-96c6-b6d9ca1133a8_buggy.java
+++ b/tmp/c663c6f4-fdb7-4d3a-994a-868b3f333b8b_fixed.java
@@ -0,0 +1,41 @@
+package org.jsoup.nodes;
+
+import org.jsoup.internal.StringUtil;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.*;
+
+public class FormElement extends Element {
+    private static final List<String> inputNames = Arrays.asList("button", "checkbox", "file", "hidden", "image",
+            "password", "radio", "reset", "submit", "text");
+
+    protected void aggregateFormData(Element element, List<Connection.KeyVal> formData) {
+        String name = element.attr("name");
+        if (name.length() > 0) {
+            if (name.contains("pass")) {
+                return; // Skip the password field if its input name contains "pass"
+            }
+            if (element.tagName().equals("input")) {
+                String type = element.attr("type").toLowerCase().trim();
+                boolean isCheckbox = type.equals("checkbox") || type.equals("radio");
+                boolean isFileInput = type.equals("file");
+
+                if (element.hasAttr("value") && !isFileInput && (!isCheckbox || element.hasAttr("checked"))) {
+                    String val = element.val();
+                    formData.add(Connection.KeyVal.create(name, val));
+                }
+            } else {
+                String val = element.attr("value");
+                formData.add(Connection.KeyVal.create(name, val));
+            }
+        }
+        if (element.children().isEmpty()) {
+            return;
+        }
+        for (Element el : element.children()) {
+            aggregateFormData(el, formData);
+        }
+    }
+
+    // Other methods...
+}
\ No newline at end of file
