diff --git a/tmp/97e5bdb9-dcef-4b68-96e0-fd85eaed9bcd_buggy.java b/tmp/56d7fe9c-c820-46b7-8b75-2af767a846ca_fixed.java
index be2af16..e569a96 100644
--- a/tmp/97e5bdb9-dcef-4b68-96e0-fd85eaed9bcd_buggy.java
+++ b/tmp/56d7fe9c-c820-46b7-8b75-2af767a846ca_fixed.java
@@ -1,29 +1,41 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (Exception e) {
+            // If Gregorian fails, then try Julian.
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        }
+
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+            // Verify Julian in the cutover context
+            try {
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                 if (instant >= iCutoverMillis) {
                     // Okay, it's in the illegal cutover gap.
                     throw new IllegalArgumentException("Specified date does not exist");
                 }
+            } catch (Exception e) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
         }
         return instant;
     }
\ No newline at end of file
