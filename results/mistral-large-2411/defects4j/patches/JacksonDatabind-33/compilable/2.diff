diff --git a/tmp/5c788390-51d3-4f65-b265-82f71bbe3a0a_buggy.java b/tmp/0dbd13fa-cbb8-4bde-8879-12872ebbb2dd_fixed.java
index 3cb9232..b08071b 100644
--- a/tmp/5c788390-51d3-4f65-b265-82f71bbe3a0a_buggy.java
+++ b/tmp/0dbd13fa-cbb8-4bde-8879-12872ebbb2dd_fixed.java
@@ -1,26 +1,22 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
 
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
             } else if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
                     || _hasAnnotation(a, JsonRawValue.class)) {
                 name = "";
-            } else {
-                return null;
             }
         }
-        return PropertyName.construct(name);
+
+        // Return a PropertyName with a fallback to the name of the annotated element if no explicit name was found
+        return name != null ? PropertyName.construct(name) : PropertyName.USE_DEFAULT;
     }
\ No newline at end of file
