diff --git a/tmp/d98ca18c-4ba6-4548-8c44-0b941bf39f9c_buggy.java b/tmp/b1767cf7-cab5-4858-98bf-b85796afb462_fixed.java
index 0dbce00..f158f0c 100644
--- a/tmp/d98ca18c-4ba6-4548-8c44-0b941bf39f9c_buggy.java
+++ b/tmp/b1767cf7-cab5-4858-98bf-b85796afb462_fixed.java
@@ -1,33 +1,35 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
             	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                if (format.getShape() == JsonFormat.Shape.STRING || shape == JsonFormat.Shape.ANY) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
         }
-        return this;
+
+        Boolean writeAsTimestamp = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
+        return withFormat(writeAsTimestamp, null);
     }
