diff --git a/tmp/16816d24-19b3-4310-bc46-d328ba4e74c8_buggy.java b/tmp/c1138216-0285-46b4-84eb-0c88892dea0d_fixed.java
index 19fd63e..7e0bbcd 100644
--- a/tmp/16816d24-19b3-4310-bc46-d328ba4e74c8_buggy.java
+++ b/tmp/c1138216-0285-46b4-84eb-0c88892dea0d_fixed.java
@@ -1,24 +1,39 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
             // We only have to worry about methods with an implicit 'this'
             // param, or this doesn't happen.
 
+          if (maybeExpr.getType() == Token.EXPR_RESULT) {
+            // Check if expr is a method call
+            Node expr = maybeExpr.getFirstChild();
+            if (expr.isCall() && isMethodWithImplicitThis(expr)) {
+              return false;
+            }
+          }
+
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
+
+  /**
+   * Check if the node is a method call with an implicit `this` parameter.
+   */
+  private boolean isMethodWithImplicitThis(Node node) {
+    return node.isGetProp() && node.getFirstChild().isThis();
+  }
\ No newline at end of file
