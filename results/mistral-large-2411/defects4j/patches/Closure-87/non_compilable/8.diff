diff --git a/tmp/274ab382-7ad2-4066-857f-33e1ce93373b_buggy.java b/tmp/4276565d-d018-4543-9a6d-dab177a9054e_fixed.java
index 19fd63e..8218a9a 100644
--- a/tmp/274ab382-7ad2-4066-857f-33e1ce93373b_buggy.java
+++ b/tmp/4276565d-d018-4543-9a6d-dab177a9054e_fixed.java
@@ -1,24 +1,32 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
           // We only have to worry about methods with an implicit 'this'
           // param, or this doesn't happen.
 
+          if (NodeUtil.isFunctionNode(n.getGrandparent()) &&
+              maybeExpr.isExprResult() &&
+              maybeExpr.getFirstChild().isCall() &&
+              !maybeExpr.getFirstChild().getFirstChild().isThis() &&
+              maybeExpr.getFirstChild().getFirstChild().stringLength() > 0) {
+            return false;
+          }
+
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
\ No newline at end of file
