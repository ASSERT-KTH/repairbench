diff --git a/tmp/c1a7aa69-99ba-4673-b459-54a3ae55c997_buggy.java b/tmp/4e3666a4-4fd5-43a0-b030-ef685160b8fc_fixed.java
index 19fd63e..29abbb5 100644
--- a/tmp/c1a7aa69-99ba-4673-b459-54a3ae55c997_buggy.java
+++ b/tmp/4e3666a4-4fd5-43a0-b030-ef685160b8fc_fixed.java
@@ -1,24 +1,28 @@
   /**
    * @return Whether the node is a block with a single statement that is
-   *     an expression.
+   *     an expression and it's not an event handler method with an implicit 'this'.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
+
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
-
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
 
+        if (!NodeUtil.isFunctionExpression(maybeExpr)) {
+          if (!NodeUtil.isEventNode(maybeExpr)) {
             return NodeUtil.isExpressionNode(maybeExpr);
           }
         }
+      }
+    }
 
     return false;
   }
\ No newline at end of file
