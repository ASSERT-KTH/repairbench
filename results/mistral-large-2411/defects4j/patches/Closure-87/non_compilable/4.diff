diff --git a/tmp/390a6aed-d4eb-4ca4-bdd7-8262ff831770_buggy.java b/tmp/d9fce64e-6a79-46c0-a5af-ff4d78b37ebf_fixed.java
index 19fd63e..5d34d63 100644
--- a/tmp/390a6aed-d4eb-4ca4-bdd7-8262ff831770_buggy.java
+++ b/tmp/d9fce64e-6a79-46c0-a5af-ff4d78b37ebf_fixed.java
@@ -1,24 +1,35 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
+
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
           // We only have to worry about methods with an implicit 'this'
           // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+          Node grandParent = n.getParent();
+          if (grandParent != null && grandParent.isFunction()) {
+            Node fnNameNode = grandParent.getFirstChild();
+            if (fnNameNode != null && fnNameNode.isGetterDef() && n.isExprResult()) {
+              // Skip folding if the block is inside an EXPR_RESULT
+              // and the parent is a function other than getter
+              return false;
+            }
+          }
+          return true;
+        }
       }
     }
 
     return false;
   }
\ No newline at end of file
