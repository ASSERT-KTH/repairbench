diff --git a/tmp/ef7560f8-ba50-4559-9cd1-6ecc557bdd5c_buggy.java b/tmp/218752d9-4613-48e6-89f8-f349ec4841ee_fixed.java
index 373b1e8..36d2656 100644
--- a/tmp/ef7560f8-ba50-4559-9cd1-6ecc557bdd5c_buggy.java
+++ b/tmp/218752d9-4613-48e6-89f8-f349ec4841ee_fixed.java
@@ -1,37 +1,37 @@
     private static boolean looksLikeUtf8(byte[] input) {
         int i = 0;
         // BOM:
         if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+            && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
             i = 3;
         }
 
         int end;
         for (int j = input.length; i < j; ++i) {
             int o = input[i];
             if ((o & 0x80) == 0) {
                 continue; // ASCII
             }
 
             // UTF-8 leading:
             if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
-                } else if ((o & 0xF0) == 0xE0) {
                 end = i + 2;
-                } else if ((o & 0xF8) == 0xF0) {
+            } else if ((o & 0xF0) == 0xE0) {
                 end = i + 3;
+            } else if ((o & 0xF8) == 0xF0) {
+                end = i + 4;
             } else {
                 return false;
             }
 
-
-                while (i < end) {
-                    i++;
+            while (++i < end) {
                 o = input[i];
                 if ((o & 0xC0) != 0x80) {
                     return false;
                 }
             }
+
+            --i; // Adjust i to be correct for the for loop increment
         }
         return true;
     }
\ No newline at end of file
