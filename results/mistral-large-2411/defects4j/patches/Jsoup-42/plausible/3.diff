diff --git a/tmp/6a3e05c1-e4ad-40ec-9141-64209e066e38_buggy.java b/tmp/d5a4539a-cb29-46a1-b4f3-eb8e40ef993e_fixed.java
index 442a001..6276151 100644
--- a/tmp/6a3e05c1-e4ad-40ec-9141-64209e066e38_buggy.java
+++ b/tmp/d5a4539a-cb29-46a1-b4f3-eb8e40ef993e_fixed.java
@@ -1,39 +1,41 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
 
+            if (!el.hasAttr("disabled") && !el.tagName().equals("fieldset")) {
                 if ("select".equals(el.tagName())) {
                     Elements options = el.select("option[selected]");
                     boolean set = false;
                     for (Element option: options) {
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                         set = true;
                     }
                     if (!set) {
                         Element option = el.select("option").first();
                         if (option != null)
                             data.add(HttpConnection.KeyVal.create(name, option.val()));
                     }
                 } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
                     // only add checkbox or radio if they have the checked attribute
                     if (el.hasAttr("checked")) {
-                    final String val = el.val();
+                        final String val = el.hasAttr("value") ? el.val() : "on";
                         data.add(HttpConnection.KeyVal.create(name, val));
                     }
                 } else {
                     data.add(HttpConnection.KeyVal.create(name, el.val()));
                 }
             }
+        }
         return data;
     }
\ No newline at end of file
