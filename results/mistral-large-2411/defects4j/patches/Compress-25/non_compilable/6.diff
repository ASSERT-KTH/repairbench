diff --git a/tmp/cb2e3011-03d5-42af-918e-1e1d35cd65cc_buggy.java b/tmp/954143c4-293b-4416-8b3f-ad00508b2124_fixed.java
index 6c0aa19..b868b2b 100644
--- a/tmp/cb2e3011-03d5-42af-918e-1e1d35cd65cc_buggy.java
+++ b/tmp/954143c4-293b-4416-8b3f-ad00508b2124_fixed.java
@@ -1,20 +1,22 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
-                                 boolean allowStoredEntriesWithDataDescriptor) {
+                                 boolean allowStoredEntriesWithDataDescriptor) throws IOException {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+        in = new PushbackInputStream(inputStream, 512);
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+        entries = new CurrentEntry();
+        // start with the first entry
+        readFully(in);
     }
\ No newline at end of file
