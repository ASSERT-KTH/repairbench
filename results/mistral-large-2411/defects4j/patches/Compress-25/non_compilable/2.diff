diff --git a/tmp/a0e9dfd7-bbf7-401a-9bb5-a9b936e5d836_buggy.java b/tmp/b58d866a-cb0b-4002-af5f-306596dd56de_fixed.java
index 6c0aa19..264f3f7 100644
--- a/tmp/a0e9dfd7-bbf7-401a-9bb5-a9b936e5d836_buggy.java
+++ b/tmp/b58d866a-cb0b-4002-af5f-306596dd56de_fixed.java
@@ -1,20 +1,12 @@
-    /**
-     * @param encoding the encoding to use for file names, use null
-     * for the platform's default encoding
-     * @param useUnicodeExtraFields whether to use InfoZIP Unicode
-     * Extra Fields (if present) to set the file names.
-     * @param allowStoredEntriesWithDataDescriptor whether the stream
-     * will try to read STORED entries that use a data descriptor
-     * @since 1.1
-     */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
-                                 boolean allowStoredEntriesWithDataDescriptor) {
+                             boolean allowStoredEntriesWithDataDescriptor) throws IOException {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
     in = new PushbackInputStream(inputStream, buf.capacity());
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+    // Start reading from the stream to initialize the first entry
+    init();
 }
\ No newline at end of file
