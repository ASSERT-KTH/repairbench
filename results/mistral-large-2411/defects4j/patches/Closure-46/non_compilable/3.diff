diff --git a/tmp/3ffbc8f7-5e6e-48f2-9593-d1bc72519e06_buggy.java b/tmp/fef6ecd2-0139-42be-8faf-becb696c576a_fixed.java
index 46817a7..2649950 100644
--- a/tmp/3ffbc8f7-5e6e-48f2-9593-d1bc72519e06_buggy.java
+++ b/tmp/fef6ecd2-0139-42be-8faf-becb696c576a_fixed.java
@@ -1,16 +1,19 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+    Set<String> commonProperties = new HashSet<>(properties.keySet());
+    commonProperties.retainAll(that.toMaybeRecordType().getProperties().keySet());
+
+    for (String property : commonProperties) {
+      if (that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
               getPropertyType(property))) {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
       }
     }
-    return builder.build();
+    RecordType commonRecordType = builder.build();
+    return registry.createUnionType(this, commonRecordType);
   }
\ No newline at end of file
