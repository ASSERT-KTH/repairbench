diff --git a/tmp/ff304634-7820-4814-b593-7d72037dcb20_buggy.java b/tmp/ed11cb61-8ce1-4e78-b227-a1cf9c9b88e0_fixed.java
index 46817a7..f403f51 100644
--- a/tmp/ff304634-7820-4814-b593-7d72037dcb20_buggy.java
+++ b/tmp/ed11cb61-8ce1-4e78-b227-a1cf9c9b88e0_fixed.java
@@ -1,16 +1,27 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    Map<String, JSType> commonProperties = new HashMap<>();
     for (String property : properties.keySet()) {
       if (that.toMaybeRecordType().hasProperty(property) &&
           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
               getPropertyType(property))) {
+        commonProperties.put(property, getPropertyType(property));
+      } else {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
       }
     }
-    return builder.build();
+    for (String property : that.toMaybeRecordType().getProperties().keySet()) {
+      if (!properties.containsKey(property)) {
+        builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property),
+            that.toMaybeRecordType().getPropertyNode(property));
+      }
+    }
+    JSType thisRecordType = builder.build();
+    JSType otherRecordType = that.toMaybeRecordType().buildWithoutProperties(commonProperties.keySet());
+    return registry.createUnionType(thisRecordType, otherRecordType);
   }
\ No newline at end of file
