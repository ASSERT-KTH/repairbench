diff --git a/tmp/062c9d79-3adf-4bb2-b259-8a574f664dc5_buggy.java b/tmp/63eca370-4904-4365-b9af-97982b73c219_fixed.java
index 46817a7..a12be37 100644
--- a/tmp/062c9d79-3adf-4bb2-b259-8a574f664dc5_buggy.java
+++ b/tmp/63eca370-4904-4365-b9af-97982b73c219_fixed.java
@@ -1,16 +1,36 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    RecordType otherRecordType = that.toMaybeRecordType();
+
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+      if (otherRecordType.hasProperty(property) &&
+          otherRecordType.getPropertyType(property).isEquivalentTo(
               getPropertyType(property))) {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
+      } else {
+        // Add properties that only exist in one of the types
+        if (!otherRecordType.hasProperty(property)) {
+          builder.addProperty(property, getPropertyType(property),
+              getPropertyNode(property));
+        } else if (!this.hasProperty(property)){
+          builder.addProperty(property, otherRecordType.getPropertyType(property),
+              otherRecordType.getPropertyNode(property));
         }
       }
+    }
+
+    for (String property : otherRecordType.getProperties().keySet()) {
+      if (!this.hasProperty(property)) {
+        builder.addProperty(property, otherRecordType.getPropertyType(property),
+            otherRecordType.getPropertyNode(property));
+      }
+    }
+
     return builder.build();
   }
\ No newline at end of file
