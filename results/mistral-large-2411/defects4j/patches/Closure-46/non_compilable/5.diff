diff --git a/tmp/e1d39ef5-188c-470d-afdf-58a669e2ea89_buggy.java b/tmp/25c89034-4cf2-499e-af93-6a57b793d372_fixed.java
index 46817a7..e7c987d 100644
--- a/tmp/e1d39ef5-188c-470d-afdf-58a669e2ea89_buggy.java
+++ b/tmp/25c89034-4cf2-499e-af93-6a57b793d372_fixed.java
@@ -1,16 +1,23 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+    Set<String> commonProperties = new HashSet<>(properties.keySet());
+    commonProperties.retainAll(that.toMaybeRecordType().getProperties().keySet());
+
+    for (String property : commonProperties) {
+      if (that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
           getPropertyType(property))) {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
       }
     }
-    return builder.build();
+
+    JSType commonType = builder.build();
+    if (commonType.isEmptyType()) {
+      return registry.createUnionType(this, that.toMaybeRecordType());
+    }
+    return commonType;
   }
\ No newline at end of file
