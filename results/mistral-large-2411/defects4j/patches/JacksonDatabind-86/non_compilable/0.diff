diff --git a/tmp/b9cba74f-49eb-4907-aaeb-b6b7544fa7b8_buggy.java b/tmp/51b92423-f942-407a-ab7a-cd2153b612d2_fixed.java
index e69de29..a12d88f 100644
--- a/tmp/b9cba74f-49eb-4907-aaeb-b6b7544fa7b8_buggy.java
+++ b/tmp/51b92423-f942-407a-ab7a-cd2153b612d2_fixed.java
@@ -0,0 +1,33 @@
+public class TypeFactory {
+    // ... other methods ...
+
+    public JavaType constructType(Class<?> rawType) {
+        // Ensure that the type construction properly handles hierarchical types
+        JavaType type = _typeCache.get(rawType);
+
+        if (type == null) {
+            type = _constructType(rawType);
+            _typeCache.add(rawType, type);
+        }
+
+        if (rawType.getSuperclass() != null) {
+            // Ensure the superclass is also constructed and cached
+            JavaType superClassType = constructType(rawType.getSuperclass());
+            type.setSuperClass(superClassType);
+        }
+
+        return type;
+    }
+
+    private JavaType _constructType(Class<?> rawType) {
+        // Implement the actual type construction logic
+        // ...
+    }
+
+    private final Map<Class<?>, JavaType> _typeCache = new ConcurrentHashMap<>();
+
+    // Add method to add types to the cache
+    private void add(Class<?> rawType, JavaType type) {
+        _typeCache.put(rawType, type);
+    }
+}
\ No newline at end of file
