diff --git a/tmp/619405f3-e1f4-4066-b6c3-719f8444ff0c_buggy.java b/tmp/d08be6bf-a43f-4993-a509-74b73afe87e1_fixed.java
index e69de29..2dd24f9 100644
--- a/tmp/619405f3-e1f4-4066-b6c3-719f8444ff0c_buggy.java
+++ b/tmp/d08be6bf-a43f-4993-a509-74b73afe87e1_fixed.java
@@ -0,0 +1,34 @@
+package com.fasterxml.jackson.databind.type;
+
+public class TypeFactory {
+    // ... other methods ...
+
+    public JavaType constructType(Class<?> cls) {
+        // Ensure the type is fully resolved and cached correctly
+        JavaType type = _fromClass(null, cls, TypeBindings.emptyBindings());
+        if (type instanceof ResolvedRecursiveType) {
+            ((ResolvedRecursiveType) type).resolveSelfReferences();
+        }
+        return type;
+    }
+
+    private JavaType _fromClass(TypeResolverBuilder<?> builder, Class<?> raw, TypeBindings bindings) {
+        // Existing implementation to construct the type
+        // Ensure the type is fully resolved and cached correctly
+        JavaType type = findType(raw);
+        if (type == null) {
+            type = _newType(raw);
+        }
+        return type;
+    }
+
+    private JavaType _newType(Class<?> raw) {
+        // Create a new type instance for the class
+        return new SimpleType(raw);
+    }
+
+    private JavaType findType(Class<?> raw) {
+        // Check the cache for the type
+        return _typeCache.get(raw);
+    }
+}
\ No newline at end of file
