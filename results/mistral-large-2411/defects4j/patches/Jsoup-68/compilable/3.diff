diff --git a/tmp/98747c0f-8911-40bf-8186-c7d14d8b2bc0_buggy.java b/tmp/ab22c9ef-6267-4c50-9a24-afe5ad26bacd_fixed.java
index 511560e..92d7f89 100644
--- a/tmp/98747c0f-8911-40bf-8186-c7d14d8b2bc0_buggy.java
+++ b/tmp/ab22c9ef-6267-4c50-9a24-afe5ad26bacd_fixed.java
@@ -1,21 +1,25 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
         int bottom = stack.size() - 1;
         if (bottom > MaxScopeSearchDepth) {
             bottom = MaxScopeSearchDepth;
         }
         final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
         // don't walk too far up the tree
 
         for (int pos = bottom; pos >= top; pos--) {
             final String elName = stack.get(pos).nodeName();
             if (inSorted(elName, targetNames))
                 return true;
-            if (inSorted(elName, baseTypes))
-                return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
-                return false;
+            if (inSorted(elName, baseTypes)) {
+                // If we encounter a base type, we should stop checking further up the stack
+                break;
+            }
+            if (extraTypes != null && inSorted(elName, extraTypes)) {
+                // If we encounter an extra type, we should stop checking further up the stack
+                break;
+            }
         }
         //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
         return false;
     }
\ No newline at end of file
