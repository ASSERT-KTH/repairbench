diff --git a/tmp/8ff6da18-aa51-4c32-9b82-a16a39bcfe2c_buggy.java b/tmp/9006e2e6-add4-4017-9ca0-3551186f8acc_fixed.java
index 1bec4d6..d721afd 100644
--- a/tmp/8ff6da18-aa51-4c32-9b82-a16a39bcfe2c_buggy.java
+++ b/tmp/9006e2e6-add4-4017-9ca0-3551186f8acc_fixed.java
@@ -1,14 +1,20 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        if (rawClass == Properties.class) {
+            // Properties should be treated as Map<String,String>
+            return MapType.construct(rawClass,
+                TypeFactory.defaultInstance().constructType(String.class),
+                TypeFactory.defaultInstance().constructType(String.class));
+        }
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
