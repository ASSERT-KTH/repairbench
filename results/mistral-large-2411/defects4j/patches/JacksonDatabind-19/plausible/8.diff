diff --git a/tmp/d0612aed-b282-48ad-b6e7-322ab2c69fab_buggy.java b/tmp/c98a7d66-5db1-477e-b1a9-1066b5d4626c_fixed.java
index 1bec4d6..bddbd1f 100644
--- a/tmp/d0612aed-b282-48ad-b6e7-322ab2c69fab_buggy.java
+++ b/tmp/c98a7d66-5db1-477e-b1a9-1066b5d4626c_fixed.java
@@ -1,14 +1,18 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
-        if (typeParams == null) {
+        if (typeParams == null && !Properties.class.isAssignableFrom(rawClass)) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
-        if (typeParams.length != 2) {
+        if (typeParams != null && typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
+        if (Properties.class.isAssignableFrom(rawClass)) {
+            return MapType.construct(rawClass, TypeFactory.defaultInstance().constructType(String.class),
+                TypeFactory.defaultInstance().constructType(String.class));
+        }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
