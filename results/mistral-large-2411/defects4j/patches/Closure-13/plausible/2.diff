diff --git a/tmp/f2a07dab-2dc2-4d45-8e72-454028174cbd_buggy.java b/tmp/a6c8295a-196d-420a-ae3d-9117956f890c_fixed.java
index b5d94e0..6bd7dab 100644
--- a/tmp/f2a07dab-2dc2-4d45-8e72-454028174cbd_buggy.java
+++ b/tmp/a6c8295a-196d-420a-ae3d-9117956f890c_fixed.java
@@ -1,26 +1,30 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
-      while(c != null) {
-        traverse(c);
+    if (c != null) {
       Node next = c.getNext();
+      while (next != null) {
+        traverse(c);
         c = next;
+        next = c.getNext();
+      }
+      traverse(c); // Traverse the last child node
     }
 
     visit(node);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+    Preconditions.checkState(visits < 10000, "too many iterations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
