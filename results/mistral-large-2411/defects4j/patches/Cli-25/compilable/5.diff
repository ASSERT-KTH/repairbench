diff --git a/tmp/94b767f0-3d42-4553-b9b4-371e1f3e2fc2_buggy.java b/tmp/9d7ae641-869f-4a74-97a0-0aaad3d21077_fixed.java
index 875b31b..79a2811 100644
--- a/tmp/94b767f0-3d42-4553-b9b4-371e1f3e2fc2_buggy.java
+++ b/tmp/9d7ae641-869f-4a74-97a0-0aaad3d21077_fixed.java
@@ -1,54 +1,27 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
+    while (true) {
         int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+        if (pos == -1) {
+            if (sb.length() > 0 && !text.trim().isEmpty()) {
+                sb.append(defaultNewLine);
+            }
             sb.append(rtrim(text));
-
             return sb;
         }
+
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
+        // Reset nextLineTabStop if it's greater than width to avoid infinite loop
         if (nextLineTabStop >= width)
         {
-            // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+        // All following lines must start after the tab stop page
         final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
-            }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        text = rtrim(padding + text.substring(pos));
     }
 }
\ No newline at end of file
