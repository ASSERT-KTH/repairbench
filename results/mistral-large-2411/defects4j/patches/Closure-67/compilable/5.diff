diff --git a/tmp/3f3d937c-c9ee-4271-8f50-d8de10e8ff26_buggy.java b/tmp/d653131a-f87e-4ad1-bdc8-f05e8cc1729b_fixed.java
index 939f49b..043bb06 100644
--- a/tmp/3f3d937c-c9ee-4271-8f50-d8de10e8ff26_buggy.java
+++ b/tmp/d653131a-f87e-4ad1-bdc8-f05e8cc1729b_fixed.java
@@ -1,21 +1,24 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+          && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+          // Check for chained GETPROP
+          Node firstChild = n.getFirstChild().getFirstChild().getNext();
+          Node secondChild = firstChild.getNext();
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+          if (firstChild.getType() == Token.STRING &&
+              firstChild.getString().equals("prototype") &&
+              secondChild != null &&
+              secondChild.getType() == Token.STRING) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
