diff --git a/tmp/5656f967-91c6-4e73-b7ef-3946ac863bfc_buggy.java b/tmp/04e81b72-24c9-4f41-bfc7-86247d2bf896_fixed.java
index 21f64c6..76b7563 100644
--- a/tmp/5656f967-91c6-4e73-b7ef-3946ac863bfc_buggy.java
+++ b/tmp/04e81b72-24c9-4f41-bfc7-86247d2bf896_fixed.java
@@ -1,23 +1,21 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
         if (startChar != input[offset])
             while (++offset < length && startChar != input[offset]);
+
+        if (offset >= length)
+            return -1;
+
         int i = offset + 1;
         int last = i + seq.length() - 1;
+
         if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            for (int j = 1; i < last && j < seq.length() && seq.charAt(j) == input[i]; i++, j++);
+            if (i == last && j == seq.length()) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
