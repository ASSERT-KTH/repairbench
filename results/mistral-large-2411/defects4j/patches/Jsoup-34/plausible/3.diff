diff --git a/tmp/13b11bfd-21cf-420a-a45f-38fc2f1c63b7_buggy.java b/tmp/b0b736a8-0a6c-4a10-8e32-02a8128c3d34_fixed.java
index 21f64c6..c2d2e72 100644
--- a/tmp/13b11bfd-21cf-420a-a45f-38fc2f1c63b7_buggy.java
+++ b/tmp/b0b736a8-0a6c-4a10-8e32-02a8128c3d34_fixed.java
@@ -1,23 +1,23 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
+        int seqLength = seq.length();
+        for (int offset = pos; offset <= length - seqLength; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+                while (++offset <= length - seqLength && startChar != input[offset]);
             int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
+            int last = i + seqLength - 1;
+            if (offset <= length - seqLength) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file
