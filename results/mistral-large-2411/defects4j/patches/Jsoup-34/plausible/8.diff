diff --git a/tmp/d592b2a7-d4c6-4aa0-ac35-e00e6fbc9bce_buggy.java b/tmp/29bbdd86-8b45-4ac7-bc8d-c6d8cb44b631_fixed.java
index 21f64c6..05820bc 100644
--- a/tmp/d592b2a7-d4c6-4aa0-ac35-e00e6fbc9bce_buggy.java
+++ b/tmp/29bbdd86-8b45-4ac7-bc8d-c6d8cb44b631_fixed.java
@@ -1,23 +1,16 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        if (startChar == input[offset]) {
             int i = offset + 1;
             int last = i + seq.length() - 1;
-            if (offset < length) {
+            if (last <= length) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                if (i == last) {
                     return offset - pos;
                 }
             }
+        }
+    }
     return -1;
 }
\ No newline at end of file
