diff --git a/tmp/abee58e1-dd18-48e9-9764-514532a2a03f_buggy.java b/tmp/5e0d5e20-8cc4-4123-bbb1-ba46d8180e2e_fixed.java
index 670114d..afac5bf 100644
--- a/tmp/abee58e1-dd18-48e9-9764-514532a2a03f_buggy.java
+++ b/tmp/5e0d5e20-8cc4-4123-bbb1-ba46d8180e2e_fixed.java
@@ -1,48 +1,49 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
-        Node nameNode = n.getFirstChild();
+        Node lhs = n.getFirstChild();
+        Node rhs = lhs.getNext();
 
-        NameInformation ns = createNameInformation(t, nameNode, n);
+        NameInformation ns = createNameInformation(t, lhs, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
-            recordSet(ns.name, nameNode);
+            recordSet(ns.name, lhs);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
             refNodes.add(new ClassDefiningFunctionNode(
                 name, n, parent, parent.getParent()));
           }
         }
       }
     }
\ No newline at end of file
