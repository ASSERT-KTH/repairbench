diff --git a/tmp/02507401-9738-4d70-8733-1f626cd76b0b_buggy.java b/tmp/86d12555-0889-48c7-acd1-537d304d691c_fixed.java
index 670114d..302cced 100644
--- a/tmp/02507401-9738-4d70-8733-1f626cd76b0b_buggy.java
+++ b/tmp/86d12555-0889-48c7-acd1-537d304d691c_fixed.java
@@ -1,48 +1,52 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
         // Record global variable and function declarations
         if (t.inGlobalScope()) {
             if (NodeUtil.isVarDeclaration(n)) {
                 NameInformation ns = createNameInformation(t, n, parent);
                 Preconditions.checkNotNull(ns);
                 recordSet(ns.name, n);
             } else if (NodeUtil.isFunctionDeclaration(n)) {
                 Node nameNode = n.getFirstChild();
                 NameInformation ns = createNameInformation(t, nameNode, n);
                 if (ns != null) {
                     JsName nameInfo = getName(nameNode.getString(), true);
                     recordSet(nameInfo.name, nameNode);
                 }
             } else if (NodeUtil.isObjectLitKey(n, parent)) {
                 NameInformation ns = createNameInformation(t, n, parent);
                 if (ns != null) {
                     recordSet(ns.name, n);
                 }
             }
         }
 
         // Record assignments and call sites
         if (n.isAssign()) {
             Node nameNode = n.getFirstChild();
-
             NameInformation ns = createNameInformation(t, nameNode, n);
             if (ns != null) {
                 if (ns.isPrototype) {
                     recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
                 } else {
                     recordSet(ns.name, nameNode);
                 }
             }
         } else if (n.isCall()) {
             Node nameNode = n.getFirstChild();
             NameInformation ns = createNameInformation(t, nameNode, n);
             if (ns != null && ns.onlyAffectsClassDef) {
                 JsName name = getName(ns.name, false);
                 if (name != null) {
+                    // Ensure we correctly handle nested constructors
+                    if (nameNode.hasChildren()) {
+                        recordSet(name.name, nameNode.getFirstChild());
+                    } else {
                         refNodes.add(new ClassDefiningFunctionNode(
                             name, n, parent, parent.getParent()));
                     }
                 }
             }
         }
+    }
\ No newline at end of file
