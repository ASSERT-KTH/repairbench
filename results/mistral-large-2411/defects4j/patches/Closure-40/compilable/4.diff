diff --git a/tmp/e1bff019-b0c9-467b-bf34-babe481089ee_buggy.java b/tmp/c40e15ca-236b-48a0-89ef-26fbde219b91_fixed.java
index 670114d..18a6ae2 100644
--- a/tmp/e1bff019-b0c9-467b-bf34-babe481089ee_buggy.java
+++ b/tmp/c40e15ca-236b-48a0-89ef-26fbde219b91_fixed.java
@@ -1,48 +1,56 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
+        if (nameInfo != null) {
           recordSet(nameInfo.name, nameNode);
         }
+      }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
-            recordSet(ns.name, n);
+        JsName nameInfo = getName(ns.name, true);
+        if (nameInfo != null) {
+          recordSet(nameInfo.name, n);
+        }
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
-            recordSet(ns.name, nameNode);
+        JsName nameInfo = getName(ns.name, true);
+        if (nameInfo != null) {
+          recordSet(nameInfo.name, nameNode);
+        }
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
