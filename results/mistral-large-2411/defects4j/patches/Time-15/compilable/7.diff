diff --git a/tmp/50e6f98a-4c7c-4c2d-9bf6-e291efbe8e8c_buggy.java b/tmp/30ff7ea1-48f7-4064-8837-f733b29ed838_fixed.java
index a9a5e27..80a2541 100644
--- a/tmp/50e6f98a-4c7c-4c2d-9bf6-e291efbe8e8c_buggy.java
+++ b/tmp/30ff7ea1-48f7-4064-8837-f733b29ed838_fixed.java
@@ -1,24 +1,21 @@
-    /**
-     * Multiply two values throwing an exception if overflow occurs.
-     * 
-     * @param val1  the first value
-     * @param val2  the second value
-     * @return the new total
-     * @throws ArithmeticException if the value is too big or too small
-     * @since 1.2
-     */
     public static long safeMultiply(long val1, int val2) {
         switch (val2) {
             case -1:
                 return -val1;
             case 0:
                 return 0L;
             case 1:
                 return val1;
         }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+
+        // Note: Integer.MIN_VALUE is a special case because -Integer.MIN_VALUE overflows and becomes Integer.MIN_VALUE again.
+        if (val2 == Integer.MIN_VALUE && val1 != 0) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        }
+
+        long total = val1 * (long) val2;
+        if (total / (long) val2 != val1) {
           throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
         }
         return total;
     }
\ No newline at end of file
