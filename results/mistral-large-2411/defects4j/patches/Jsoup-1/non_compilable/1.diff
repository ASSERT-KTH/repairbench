diff --git a/tmp/502e55b2-b326-463b-84dd-76f54a8e8586_buggy.java b/tmp/d7205206-c499-4b1c-bd19-e63b27dc5820_fixed.java
index 00914da..57a7699 100644
--- a/tmp/502e55b2-b326-463b-84dd-76f54a8e8586_buggy.java
+++ b/tmp/d7205206-c499-4b1c-bd19-e63b27dc5820_fixed.java
@@ -1,17 +1,25 @@
-    // does not recurse.
+    // Fixed to recurse and append text nodes correctly.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node : element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
                 if (!tn.isBlank())
                     toMove.add(tn);
+            } else if (node instanceof Element) {
+                normalise((Element) node); // Recurse into child elements
             }
         }
 
+        Node firstChild = element.childNode(0);
         for (Node node : toMove) {
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            if (firstChild == null) {
+                element.prependChild(new TextNode(" ", ""));
+                element.prependChild(node);
+            } else {
+                firstChild.before(new TextNode(" ", ""));
+                firstChild.before(node);
+            }
         }
     }
\ No newline at end of file
