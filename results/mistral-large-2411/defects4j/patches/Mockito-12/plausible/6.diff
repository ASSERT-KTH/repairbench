diff --git a/tmp/0911c5b0-a799-4f29-a781-795fd180eed1_buggy.java b/tmp/3dd70437-0c6c-46a8-a77c-c41a8a6ba0f2_fixed.java
index bada2b6..e6ab70d 100644
--- a/tmp/0911c5b0-a799-4f29-a781-795fd180eed1_buggy.java
+++ b/tmp/3dd70437-0c6c-46a8-a77c-c41a8a6ba0f2_fixed.java
@@ -1,16 +1,13 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
     }
 
     return Object.class;
 }
\ No newline at end of file
