diff --git a/tmp/fa345ed0-f4e3-4be1-83e4-3b7da757761c_buggy.java b/tmp/46b62263-2177-41e7-83d1-5512519620ba_fixed.java
index bada2b6..cb82a35 100644
--- a/tmp/fa345ed0-f4e3-4be1-83e4-3b7da757761c_buggy.java
+++ b/tmp/46b62263-2177-41e7-83d1-5512519620ba_fixed.java
@@ -1,16 +1,12 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic instanceof ParameterizedType) {
+        Type[] typeArgs = ((ParameterizedType) generic).getActualTypeArguments();
+        for (Type typeArg : typeArgs) {
+            if (typeArg instanceof Class) {
+                return (Class<?>) typeArg;
+            }
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
