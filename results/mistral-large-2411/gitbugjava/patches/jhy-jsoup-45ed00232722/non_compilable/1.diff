diff --git a/tmp/ac53b709-46a2-4d47-a586-65db5703f93e_buggy.java b/tmp/542581ad-9d9c-488a-8830-41c180f23294_fixed.java
index 855afa5..2c95a40 100644
--- a/tmp/ac53b709-46a2-4d47-a586-65db5703f93e_buggy.java
+++ b/tmp/542581ad-9d9c-488a-8830-41c180f23294_fixed.java
@@ -1,13 +1,25 @@
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
             //  odd way to encode urls, but it works!
             String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
+            // Encode spaces, square brackets, and any other characters that may need encoding
+            urlS = urlS.replace(" ", "%20").replace("[", "%5B").replace("]", "%5D");
+
+            // Prepare URI
             final URI uri = new URI(urlS);
+
+            // Additional encoding for query parameters because toASCIIString doesn't handle that
+            String query = uri.getRawQuery();
+            if (query != null) {
+                String encodedQuery = URLEncoder.encode(query, "UTF-8");
+                URI encodedUri = new URI(uri.getScheme(), uri.getAuthority(), uri.getPath(), encodedQuery, uri.getFragment());
+                return new URL(encodedUri.toASCIIString());
+            } else {
                 return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+            }
+        } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
             // give up and return the original input
             return u;
         }
     }
\ No newline at end of file
