diff --git a/tmp/e54b0295-f782-44ef-975d-8d5917f1ec1f_buggy.java b/tmp/5e93094f-357c-422f-87f7-d8a2432eed14_fixed.java
index 9739964..7ecbc92 100644
--- a/tmp/e54b0295-f782-44ef-975d-8d5917f1ec1f_buggy.java
+++ b/tmp/5e93094f-357c-422f-87f7-d8a2432eed14_fixed.java
@@ -1,27 +1,24 @@
   public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
-    spans[0] = 1; // Span of first element is always 1
+    spans[0] = 1; // Span of the first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
-    // Push the index of first element
+    // Push the index of the first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+      while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i]) {
         indexStack.pop();
+      }
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
-      if (indexStack.isEmpty())
-        spans[i] = i + 1;
-      else
-        spans[i] = i - indexStack.peek();
+      spans[i] = indexStack.isEmpty() ? i + 1 : i - indexStack.peek();
 
       indexStack.push(i);
     }
 
     return spans;
   }
\ No newline at end of file
