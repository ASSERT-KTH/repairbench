diff --git a/tmp/50a18e8c-08cc-4512-826b-44e49ef4c568_buggy.java b/tmp/690cfe67-406a-44d1-8b7d-e04c41f1e905_fixed.java
index 7b9216c..c580233 100644
--- a/tmp/50a18e8c-08cc-4512-826b-44e49ef4c568_buggy.java
+++ b/tmp/690cfe67-406a-44d1-8b7d-e04c41f1e905_fixed.java
@@ -1,47 +1,56 @@
 private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {
-
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);
     position.setValid(type != MSG_LOCATION_REPORT_BLIND);
 
     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
     position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);
 
     int battery = buf.readUnsignedByte();
     if (battery <= 100) {
         position.set(Position.KEY_BATTERY_LEVEL, battery);
     } else if (battery == 0xAA) {
         position.set(Position.KEY_CHARGE, true);
     }
 
     position.setNetwork(new Network(CellTower.fromCidLac(
             getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));
 
     int product = buf.readUnsignedByte();
     int status = buf.readUnsignedShort();
     int alarm = buf.readUnsignedShort();
 
-        if (product == 1 || product == 2) {
+    switch (product) {
+        case 1:
+        case 2:
             if (BitUtil.check(alarm, 0)) {
                 position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
             }
-        } else if (product == 3) {
+            break;
+        case 3:
             position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));
             if (BitUtil.check(alarm, 1)) {
                 position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);
             }
             if (BitUtil.check(alarm, 2)) {
+                if (position.hasAttribute(Position.KEY_ALARM)) {
+                    break; // Preserve the existing alarm attribute if set
+                }
                 position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);
             }
             if (BitUtil.check(alarm, 3)) {
+                if (position.hasAttribute(Position.KEY_ALARM)) {
+                    break; // Preserve the existing alarm attribute if set
+                }
                 position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);
             }
+            break;
     }
 
     position.set(Position.KEY_STATUS, status);
 
     return position;
 }
\ No newline at end of file
