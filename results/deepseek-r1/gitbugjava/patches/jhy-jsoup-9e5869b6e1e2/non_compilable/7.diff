diff --git a/tmp/4dacceb7-4912-439f-b7fa-9fcc2093e7bf_buggy.java b/tmp/fa8b2f4d-2904-4626-b8f9-f6148d87022c_fixed.java
index 0583946..4a6885b 100644
--- a/tmp/4dacceb7-4912-439f-b7fa-9fcc2093e7bf_buggy.java
+++ b/tmp/fa8b2f4d-2904-4626-b8f9-f6148d87022c_fixed.java
@@ -1,30 +1,38 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
+            // Additional check: trim trailing if blank and after a block element
+            if (isBlank()) {
+                Node prev = previousSibling();
+                if (prev instanceof Element && ((Element) prev).tag().isBlock()) {
+                    trimTrailing = true;
+                }
+            }
+
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
             )
                 indent(accum, depth, out);
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
