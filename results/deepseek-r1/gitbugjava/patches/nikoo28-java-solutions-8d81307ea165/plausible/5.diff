diff --git a/tmp/26279578-54f2-49a7-a9ec-7d4c5523973d_buggy.java b/tmp/27441f1c-4a36-4e75-94b2-6580e020a0b8_fixed.java
index 9739964..a653c46 100644
--- a/tmp/26279578-54f2-49a7-a9ec-7d4c5523973d_buggy.java
+++ b/tmp/27441f1c-4a36-4e75-94b2-6580e020a0b8_fixed.java
@@ -1,27 +1,27 @@
   public int[] calculateSpans(int[] prices) {
+    if (prices.length == 0) {
+      return new int[0];
+    }
 
     int[] spans = new int[prices.length];
-    spans[0] = 1; // Span of first element is always 1
+    spans[0] = 1;
 
     Stack<Integer> indexStack = new Stack<>();
-
-    // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+      while (!indexStack.isEmpty() && prices[indexStack.peek()] < prices[i]) {
         indexStack.pop();
+      }
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
+      if (indexStack.isEmpty()) {
         spans[i] = i + 1;
-      else
+      } else {
         spans[i] = i - indexStack.peek();
+      }
 
       indexStack.push(i);
     }
 
     return spans;
   }
\ No newline at end of file
