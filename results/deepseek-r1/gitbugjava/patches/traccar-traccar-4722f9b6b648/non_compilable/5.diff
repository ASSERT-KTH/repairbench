diff --git a/tmp/4e3d3e0b-df23-49f8-9f6c-59e717f5311c_buggy.java b/tmp/05dfc5f9-70f5-4abe-8eea-bf35dcabd208_fixed.java
index c84c989..5838d4b 100644
--- a/tmp/4e3d3e0b-df23-49f8-9f6c-59e717f5311c_buggy.java
+++ b/tmp/05dfc5f9-70f5-4abe-8eea-bf35dcabd208_fixed.java
@@ -1,27 +1,34 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
         buf.readUnsignedShortLE(); // length
 
         buf.skipBytes(3); // identification header
         buf.readUnsignedIntLE(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+        buf.skipBytes(4); // skip incorrect date and time
 
-        buf.skipBytes(23); // coordinates block
+        // Parse coordinates block
+        int fixStatus = buf.readUnsignedByte();
+        position.setValid(fixStatus > 0);
+        long timestamp = buf.readUnsignedIntLE() * 1000L;
+        position.setTime(new Date(timestamp));
+        position.setLatitude(buf.readDoubleLE());
+        position.setLongitude(buf.readDoubleLE());
+        position.setAltitude(buf.readShortLE());
 
         buf.skipBytes(3); // data tag header
         decodeMinimalDataSet(position, buf);
 
         return position;
     }
\ No newline at end of file
