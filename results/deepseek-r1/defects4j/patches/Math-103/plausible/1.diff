diff --git a/tmp/63761b79-baa0-4a79-b8d3-6dc1c5b29397_buggy.java b/tmp/320beaf5-7fd3-4308-8242-5dd43cb43fa2_fixed.java
index 6cfa79b..0e350d9 100644
--- a/tmp/63761b79-baa0-4a79-b8d3-6dc1c5b29397_buggy.java
+++ b/tmp/320beaf5-7fd3-4308-8242-5dd43cb43fa2_fixed.java
@@ -1,12 +1,19 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double z = (x - mean) / standardDeviation;
+        double arg = z / Math.sqrt(2.0);
+        if (arg >= 6.0) {
+            return 1.0;
+        } else if (arg <= -6.0) {
+            return 0.0;
+        } else {
+            return 0.5 * (1.0 + Erf.erf(arg));
+        }
     }
\ No newline at end of file
