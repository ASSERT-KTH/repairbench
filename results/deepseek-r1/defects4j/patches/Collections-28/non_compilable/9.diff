diff --git a/tmp/19b1992f-12d8-497a-9632-6bfe76f58b15_buggy.java b/tmp/5ba8b29d-6e2f-4f62-a57a-f7d7a05be1ac_fixed.java
index e69de29..3c75188 100644
--- a/tmp/19b1992f-12d8-497a-9632-6bfe76f58b15_buggy.java
+++ b/tmp/5ba8b29d-6e2f-4f62-a57a-f7d7a05be1ac_fixed.java
@@ -0,0 +1,38 @@
+private void removeEntry(TrieEntry<K, V> entry) {
+    if (entry.left != null && entry.right != null) {
+        // Node has two children, find the in-order successor
+        TrieEntry<K, V> successor = entry.right;
+        while (successor.left != null) {
+            successor = successor.left;
+        }
+        // Replace the entry with the successor's data
+        entry.key = successor.key;
+        entry.value = successor.value;
+        // Now remove the successor (which has at most one child)
+        entry = successor;
+    }
+
+    // Proceed with removal of the entry (now has at most one child)
+    TrieEntry<K, V> parent = entry.parent;
+    TrieEntry<K, V> child = (entry.left != null) ? entry.left : entry.right;
+
+    if (child != null) {
+        child.parent = parent;
+    }
+
+    if (parent == null) {
+        root = child;
+    } else {
+        if (parent.left == entry) {
+            parent.left = child;
+        } else {
+            parent.right = child;
+        }
+    }
+
+    // Perform any necessary trie maintenance here
+    fixupAfterRemoval(entry);
+
+    // Decrement size
+    size--;
+}
\ No newline at end of file
