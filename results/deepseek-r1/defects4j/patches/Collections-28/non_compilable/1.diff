diff --git a/tmp/4d79a22c-9cfa-41c3-bd4e-e336eeef5367_buggy.java b/tmp/9e63896c-0fe0-4298-8c49-528a8c01a724_fixed.java
index e69de29..05b454a 100644
--- a/tmp/4d79a22c-9cfa-41c3-bd4e-e336eeef5367_buggy.java
+++ b/tmp/9e63896c-0fe0-4298-8c49-528a8c01a724_fixed.java
@@ -0,0 +1,46 @@
+public SortedMap<String, Integer> prefixMap(String prefix) {
+    return new PrefixRangeMap(prefix);
+}
+
+private final class PrefixRangeMap extends RangeMap {
+    private final String prefix;
+    
+    PrefixRangeMap(String prefix) {
+        this.prefix = prefix;
+        this.fromInclusive = true;
+        this.toInclusive = false;
+        this.fromKey = prefix;
+        this.toKey = prefix + (char) (prefix.charAt(prefix.length() - 1) + 1);
+    }
+
+    @Override
+    protected Iterator<Map.Entry<String, Integer>> entryIterator() {
+        return new PrefixRangeEntryIterator(this);
+    }
+}
+
+private final class PrefixRangeEntryIterator extends EntryIterator {
+    private final String prefix;
+    private final int length;
+
+    PrefixRangeEntryIterator(PrefixRangeMap rangeMap) {
+        super(rangeMap.fromKey, rangeMap.fromInclusive, rangeMap.toKey, rangeMap.toInclusive);
+        this.prefix = rangeMap.prefix;
+        this.length = prefix.length();
+    }
+
+    @Override
+    protected boolean inRange(String key) {
+        return key.startsWith(prefix);
+    }
+
+    @Override
+    protected boolean inFromRange(String key, boolean includeInclusive) {
+        return key.startsWith(prefix);
+    }
+
+    @Override
+    protected boolean inToRange(String key, boolean includeInclusive) {
+        return key.startsWith(prefix);
+    }
+}
\ No newline at end of file
