diff --git a/tmp/8fb687b0-c398-49d9-a70e-a01b6a4511c3_buggy.java b/tmp/036506ed-39a3-415b-9f02-cf70b766bbd3_fixed.java
index 42b58d0..6ef2a71 100644
--- a/tmp/8fb687b0-c398-49d9-a70e-a01b6a4511c3_buggy.java
+++ b/tmp/036506ed-39a3-415b-9f02-cf70b766bbd3_fixed.java
@@ -1,19 +1,32 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+            TypeVariable<?> typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
+            // Check if the actual type argument is a self-referential type variable
+            if (actualTypeArgument instanceof TypeVariable) {
+                boolean isSelfType = false;
+                for (TypeVariable<?> tv : typeParameters) {
+                    if (tv.equals(actualTypeArgument)) {
+                        isSelfType = true;
+                        break;
+                    }
+                }
+                if (isSelfType) {
+                    continue; // Skip to prevent recursion
+                }
+            }
+
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
