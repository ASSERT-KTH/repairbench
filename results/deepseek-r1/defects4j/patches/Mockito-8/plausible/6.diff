diff --git a/tmp/a287819e-5e5e-4ec0-9d77-e639e57eafc5_buggy.java b/tmp/8a0550a7-0e3a-43d2-9248-6ddae24c5d7c_fixed.java
index 42b58d0..030156c 100644
--- a/tmp/a287819e-5e5e-4ec0-9d77-e639e57eafc5_buggy.java
+++ b/tmp/8a0550a7-0e3a-43d2-9248-6ddae24c5d7c_fixed.java
@@ -1,19 +1,28 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+            TypeVariable<?> typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
+            Type resolvedType;
             if (actualTypeArgument instanceof WildcardType) {
-                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+                resolvedType = boundsOf((WildcardType) actualTypeArgument);
             } else {
-                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+                resolvedType = actualTypeArgument;
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+
+            if (resolvedType instanceof TypeVariable) {
+                TypeVariable<?> resolvedTV = (TypeVariable<?>) resolvedType;
+                if (resolvedTV.equals(typeParameter)) {
+                    continue;
+                }
+            }
+
+            contextualActualTypeParameters.put(typeParameter, resolvedType);
         }
     }
\ No newline at end of file
