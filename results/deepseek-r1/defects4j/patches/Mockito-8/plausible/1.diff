diff --git a/tmp/40a4880f-2a5d-4205-806c-90a1af8e00f8_buggy.java b/tmp/e33c869e-cb0b-4be0-bbda-c55727d61800_fixed.java
index 42b58d0..f1814d9 100644
--- a/tmp/40a4880f-2a5d-4205-806c-90a1af8e00f8_buggy.java
+++ b/tmp/e33c869e-cb0b-4be0-bbda-c55727d61800_fixed.java
@@ -1,19 +1,22 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+            TypeVariable<?> typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
+                // Avoid adding the type parameter if the actual argument is the same to prevent recursion
+                if (actualTypeArgument != typeParameter) {
                     contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
                 }
+            }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
