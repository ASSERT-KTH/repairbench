diff --git a/tmp/d40bad06-4e38-4691-ae48-ff80264b78ad_buggy.java b/tmp/a55a89b4-3fee-48db-90f3-bd5be6e92477_fixed.java
index 544303b..4207b09 100644
--- a/tmp/d40bad06-4e38-4691-ae48-ff80264b78ad_buggy.java
+++ b/tmp/a55a89b4-3fee-48db-90f3-bd5be6e92477_fixed.java
@@ -1,29 +1,27 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
+                int currentColumn = getNumObjectiveFunctions() + i;
+                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + getOriginalNumDecisionVariables(); j++) {
+                    if (j == currentColumn) {
+                        continue; // Skip the current variable's column
+                    }
                     if (tableau.getEntry(basicRow, j) == 1) {
                          coefficients[i] = 0;
+                         break; // Exit loop once a 1 is found
                     }
                 }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
\ No newline at end of file
