diff --git a/tmp/cc323b4e-b4af-480e-bd0a-8c7a229dbc8b_buggy.java b/tmp/a97d2c98-34a9-4fc5-9720-d4af180727f4_fixed.java
index f650982..bd47f4d 100644
--- a/tmp/cc323b4e-b4af-480e-bd0a-8c7a229dbc8b_buggy.java
+++ b/tmp/a97d2c98-34a9-4fc5-9720-d4af180727f4_fixed.java
@@ -1,42 +1,47 @@
     /**
      * Compares two values
      */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
         if (l instanceof InitialContext || l instanceof SelfContext) {
             l = ((EvalContext) l).getSingleNodePointer();
         }
 
         if (r instanceof InitialContext || r instanceof SelfContext) {
             r = ((EvalContext) r).getSingleNodePointer();
         }
 
         if (l instanceof Collection) {
             l = ((Collection) l).iterator();
         }
 
         if (r instanceof Collection) {
             r = ((Collection) r).iterator();
         }
 
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
             return contains((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
             return contains((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
+
+        // Unwrap NodePointers to their values before final comparison
+        if (l instanceof NodePointer) {
+            l = ((NodePointer) l).getValue();
+        }
+        if (r instanceof NodePointer) {
+            r = ((NodePointer) r).getValue();
+        }
+
         return equal(l, r);
     }
\ No newline at end of file
