diff --git a/tmp/996b1dc5-dc3e-4f30-bcbb-c1705c29fe01_buggy.java b/tmp/3eaf8ef3-d08c-4f79-843f-2dff8b0ffb9b_fixed.java
index 1c53d31..1b07c6b 100644
--- a/tmp/996b1dc5-dc3e-4f30-bcbb-c1705c29fe01_buggy.java
+++ b/tmp/3eaf8ef3-d08c-4f79-843f-2dff8b0ffb9b_fixed.java
@@ -1,20 +1,26 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+      ObjectConstructor<? extends TypeAdapter<?>> constructor = constructorConstructor.get(TypeToken.get(typeAdapterClass));
+      typeAdapter = constructor.construct();
+      if (typeAdapter == null) {
+        throw new IllegalArgumentException("TypeAdapter " + value.getName() + " could not be constructed.");
+      }
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      Class<TypeAdapterFactory> typeAdapterFactoryClass = (Class<TypeAdapterFactory>) value;
+      TypeAdapterFactory factory = constructorConstructor.get(TypeToken.get(typeAdapterFactoryClass)).construct();
+      typeAdapter = factory.create(gson, fieldType);
+      if (typeAdapter == null) {
+        throw new IllegalArgumentException("TypeAdapterFactory " + value.getName() + " did not create a TypeAdapter for " + fieldType);
+      }
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
     typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
   }
\ No newline at end of file
