diff --git a/tmp/b705852b-5caa-42a1-a8da-819829ea518c_buggy.java b/tmp/6d57a436-a7ad-4949-849b-e2a7f8f8d505_fixed.java
index 822447c..eb558e4 100644
--- a/tmp/b705852b-5caa-42a1-a8da-819829ea518c_buggy.java
+++ b/tmp/6d57a436-a7ad-4949-849b-e2a7f8f8d505_fixed.java
@@ -1,37 +1,25 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            String entityName = this.entityName(c);
+        for (int i = 0; i < len; ) {
+            int codePoint = str.codePointAt(i);
+            int charCount = Character.charCount(codePoint);
+            String entityName = null;
+            if (codePoint <= 0xFFFF) {
+                entityName = this.entityName((char) codePoint);
+            }
             if (entityName == null) {
-                if (c > 0x7F) {
+                if (codePoint > 0x7F) {
                     writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
+                    writer.write(Integer.toString(codePoint, 10));
                     writer.write(';');
                 } else {
-                    writer.write(c);
+                    writer.write((char) codePoint);
                 }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
+            i += charCount;
         }
     }
\ No newline at end of file
