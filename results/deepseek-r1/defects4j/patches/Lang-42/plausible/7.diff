diff --git a/tmp/3d513f96-c083-4288-8bac-4e046878fba5_buggy.java b/tmp/bb75930e-bf83-40e5-a37d-43e7d54c69c8_fixed.java
index 822447c..bb351e2 100644
--- a/tmp/3d513f96-c083-4288-8bac-4e046878fba5_buggy.java
+++ b/tmp/bb75930e-bf83-40e5-a37d-43e7d54c69c8_fixed.java
@@ -1,37 +1,26 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            String entityName = this.entityName(c);
-            if (entityName == null) {
-                if (c > 0x7F) {
-                    writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
-                    writer.write(';');
-                } else {
-                    writer.write(c);
+        int i = 0;
+        while (i < len) {
+            int codePoint = str.codePointAt(i);
+            int charCount = Character.charCount(codePoint);
+            String entityName = null;
+            if (Character.isBmpCodePoint(codePoint)) {
+                entityName = this.entityName((char) codePoint);
             }
-            } else {
+            if (entityName != null) {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
+            } else {
+                if (codePoint > 0x7F) {
+                    writer.write("&#");
+                    writer.write(Integer.toString(codePoint, 10));
+                    writer.write(';');
+                } else {
+                    writer.write(codePoint);
                 }
             }
+            i += charCount;
+        }
     }
\ No newline at end of file
