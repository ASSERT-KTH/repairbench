diff --git a/tmp/7dfa0788-d540-4479-968f-d957ee8488ed_buggy.java b/tmp/0ac94971-821c-47f1-b065-5ce700224410_fixed.java
index e69de29..65705a8 100644
--- a/tmp/7dfa0788-d540-4479-968f-d957ee8488ed_buggy.java
+++ b/tmp/0ac94971-821c-47f1-b065-5ce700224410_fixed.java
@@ -0,0 +1,29 @@
+public JavaType constructType(Type type, TypeBindings context) {
+    // Existing code to determine the class and handle other cases
+    Class<?> rawClass = _classFromType(type, context);
+    ClassStack parentContext = context.getCurrentStack();
+    ClassStack currStack = new ClassStack(rawClass, parentContext);
+
+    if (_containsClassStack(currStack, rawClass)) {
+        return _handleRecursiveType(rawClass, currStack);
+    }
+
+    context = context.child(currStack);
+    JavaType superType = null;
+    Class<?> superClass = rawClass.getSuperclass();
+    if (superClass != null) {
+        superType = constructType(superClass, context);
+        // Resolve ResolvedRecursiveType if present
+        while (superType instanceof ResolvedRecursiveType) {
+            ResolvedRecursiveType rrt = (ResolvedRecursiveType) superType;
+            superType = rrt.getSelfReferencedType();
+        }
+    }
+
+    // Existing code to handle interfaces and build the JavaType
+    JavaType[] interfaceTypes = _constructInterfaces(rawClass, context);
+    JavaType result = new ClassJavaType(rawClass, _baseType, superType, interfaceTypes, _asStatic);
+
+    _cachedTypes.put(rawClass, result);
+    return result;
+}
\ No newline at end of file
