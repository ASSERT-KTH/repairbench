diff --git a/tmp/b733ec01-1257-4b21-af61-87712bfcf82e_buggy.java b/tmp/37257545-4692-4774-a30e-22825f499286_fixed.java
index be2af16..19c8d04 100644
--- a/tmp/b733ec01-1257-4b21-af61-87712bfcf82e_buggy.java
+++ b/tmp/37257545-4692-4774-a30e-22825f499286_fixed.java
@@ -1,29 +1,42 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException ex) {
+            // Gregorian date is invalid; check if Julian date is valid and before cutover
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (julianInstant >= iCutoverMillis) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+            return julianInstant;
+        }
+
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+            long julianInstant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            if (julianInstant >= iCutoverMillis) {
+                // Date falls in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            instant = julianInstant;
         }
         return instant;
     }
\ No newline at end of file
