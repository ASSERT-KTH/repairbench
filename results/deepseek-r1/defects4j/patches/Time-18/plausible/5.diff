diff --git a/tmp/e18c5cec-5cde-4633-8762-972e98b3fd13_buggy.java b/tmp/9c0d51a7-fda4-4c57-ba7e-2e3780dedcd0_fixed.java
index be2af16..39252da 100644
--- a/tmp/e18c5cec-5cde-4633-8762-972e98b3fd13_buggy.java
+++ b/tmp/9c0d51a7-fda4-4c57-ba7e-2e3780dedcd0_fixed.java
@@ -1,29 +1,39 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
         long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        try {
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
-                throw new IllegalArgumentException("Specified date does not exist");
+        } catch (IllegalArgumentException e) {
+            long gregorianInstant = iGregorianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (gregorianInstant < iCutoverMillis) {
+                throw new IllegalArgumentException("Specified date does not exist in Julian calendar");
             }
+            return gregorianInstant;
         }
+
+        if (instant < iCutoverMillis) {
             return instant;
+        } else {
+            long gregorianInstant = iGregorianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (gregorianInstant < iCutoverMillis) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+            return gregorianInstant;
+        }
     }
\ No newline at end of file
