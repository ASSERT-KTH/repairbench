diff --git a/tmp/2a2e282d-6fe6-4cbe-94f5-22cc694bc5db_buggy.java b/tmp/c2b10f4d-4a30-46f1-a4fc-256079a4fec9_fixed.java
index be2af16..6f60c16 100644
--- a/tmp/2a2e282d-6fe6-4cbe-94f5-22cc694bc5db_buggy.java
+++ b/tmp/c2b10f4d-4a30-46f1-a4fc-256079a4fec9_fixed.java
@@ -1,29 +1,41 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalFieldValueException e) {
+            // Date is invalid in Gregorian, try Julian.
+            long julianInstant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            if (julianInstant >= iCutoverMillis) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+            return julianInstant;
+        }
+
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+            long julianInstant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            if (julianInstant >= iCutoverMillis) {
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+            return julianInstant;
         }
         return instant;
     }
\ No newline at end of file
