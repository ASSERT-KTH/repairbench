diff --git a/tmp/6387a116-bb9b-44ab-bc30-30478a75dbeb_buggy.java b/tmp/ad6c94de-c862-43fd-8a8a-f117e1e9664e_fixed.java
index be2af16..f848714 100644
--- a/tmp/6387a116-bb9b-44ab-bc30-30478a75dbeb_buggy.java
+++ b/tmp/ad6c94de-c862-43fd-8a8a-f117e1e9664e_fixed.java
@@ -1,29 +1,55 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+        long julianInstant;
+        try {
+            julianInstant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+        } catch (IllegalArgumentException e) {
+            julianInstant = Long.MIN_VALUE;
+        }
+
+        if (julianInstant != Long.MIN_VALUE) {
+            if (julianInstant < iCutoverMillis) {
+                return julianInstant;
+            } else {
+                long gregorianInstant;
+                try {
+                    gregorianInstant = iGregorianChronology.getDateTimeMillis
+                        (year, monthOfYear, dayOfMonth,
+                         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+                } catch (IllegalArgumentException e) {
+                    throw new IllegalArgumentException("Specified date does not exist");
+                }
+                if (gregorianInstant >= iCutoverMillis) {
+                    return gregorianInstant;
+                } else {
+                    throw new IllegalArgumentException("Specified date does not exist");
+                }
+            }
+        } else {
+            long gregorianInstant;
+            try {
+                gregorianInstant = iGregorianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+            } catch (IllegalArgumentException e) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+            if (gregorianInstant >= iCutoverMillis) {
+                return gregorianInstant;
+            } else {
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
-        return instant;
     }
\ No newline at end of file
