diff --git a/tmp/29cb0a4c-e321-49c4-83f3-86941310e90e_buggy.java b/tmp/fd7113bc-67b5-4856-960c-ddea10a7ad30_fixed.java
index b2d53db..9b9205f 100644
--- a/tmp/29cb0a4c-e321-49c4-83f3-86941310e90e_buggy.java
+++ b/tmp/fd7113bc-67b5-4856-960c-ddea10a7ad30_fixed.java
@@ -1,34 +1,39 @@
         void read(Tokeniser t, CharacterReader r) {
             if (r.matchesLetter()) {
                 String name = r.consumeLetterSequence();
                 t.tagPending.appendTagName(name.toLowerCase());
                 t.dataBuffer.append(name);
                 r.advance();
                 return;
             }
 
             if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
                 char c = r.consume();
                 switch (c) {
                     case '\t':
                     case '\n':
                     case '\f':
                     case ' ':
                         t.transition(BeforeAttributeName);
                         break;
                     case '/':
                         t.transition(SelfClosingStartTag);
                         break;
                     case '>':
                         t.emitTagPending();
                         t.transition(Data);
                         break;
                     default:
                         t.dataBuffer.append(c);
                         anythingElse(t, r);
                         break;
                 }
             } else {
+                // Emit collected data as characters if any
+                if (t.dataBuffer.length() > 0) {
+                    t.emit(new Token.CharData().data(t.dataBuffer.toString()));
+                    t.dataBuffer.setLength(0);
+                }
                 anythingElse(t, r);
             }
         }
\ No newline at end of file
