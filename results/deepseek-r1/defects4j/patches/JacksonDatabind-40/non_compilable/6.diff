diff --git a/tmp/84e36fe4-5b0b-4e4c-9d8c-471474b32c3f_buggy.java b/tmp/b8ca448b-f1c0-4277-8737-61972c4c99f5_fixed.java
index e69de29..c268f55 100644
--- a/tmp/84e36fe4-5b0b-4e4c-9d8c-471474b32c3f_buggy.java
+++ b/tmp/b8ca448b-f1c0-4277-8737-61972c4c99f5_fixed.java
@@ -0,0 +1,25 @@
+public Integer deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    if (p.currentToken() == JsonToken.VALUE_STRING) {
+        String text = p.getText().trim();
+        if (text.isEmpty()) {
+            JavaType type = ctxt.getContextualType();
+            if (type != null && type.isPrimitive()) {
+                if (ctxt.isEnabled(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES)) {
+                    throw ctxt.mappingException(ctxt.getParser(), "Cannot coerce empty String to primitive int");
+                }
+                return 0;
+            } else {
+                if (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)) {
+                    return null;
+                }
+            }
+            throw ctxt.mappingException(ctxt.getParser(), "Cannot coerce empty String to Integer value");
+        }
+        try {
+            return Integer.parseInt(text);
+        } catch (NumberFormatException e) {
+            throw ctxt.mappingException(ctxt.getParser(), "Cannot parse int value from '%s'", text);
+        }
+    }
+    return super.deserialize(p, ctxt);
+}
\ No newline at end of file
