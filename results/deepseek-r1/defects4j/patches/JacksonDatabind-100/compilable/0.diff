diff --git a/tmp/c83f70bd-a33b-46a1-ada2-c5ea27ebf544_buggy.java b/tmp/cf53d3af-0447-4dd7-9351-43ae02dad8e1_fixed.java
index fc8c302..78ad7a2 100644
--- a/tmp/c83f70bd-a33b-46a1-ada2-c5ea27ebf544_buggy.java
+++ b/tmp/cf53d3af-0447-4dd7-9351-43ae02dad8e1_fixed.java
@@ -1,23 +1,32 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
+            // Handle TextNode specifically using the provided Base64 variant
+            if (n instanceof TextNode) {
+                String text = ((TextNode) n).asText();
+                try {
+                    return b64variant.decode(text);
+                } catch (IllegalArgumentException e) {
+                    throw new JsonParseException(null, "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), e);
+                }
+            }
             // [databind#2096]: although `binaryValue()` works for real binary node
             // and embedded "POJO" node, coercion from TextNode may require variant, so:
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
