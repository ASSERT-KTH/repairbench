diff --git a/tmp/1fb84265-f29f-4b66-ba1e-49235129ffd3_buggy.java b/tmp/6f5ae043-c00b-44c7-9e45-cf1b161a9bfd_fixed.java
index fc8c302..1b1f9d2 100644
--- a/tmp/1fb84265-f29f-4b66-ba1e-49235129ffd3_buggy.java
+++ b/tmp/6f5ae043-c00b-44c7-9e45-cf1b161a9bfd_fixed.java
@@ -1,23 +1,28 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+            if (n instanceof TextNode) {
+                String text = ((TextNode) n).textValue();
+                try {
+                    return b64variant.decode(text);
+                } catch (IllegalArgumentException e) {
+                    throw new JsonParseException(null, "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), e);
+                }
+            } else {
                 byte[] data = n.binaryValue();
                 if (data != null) {
                     return data;
                 }
                 if (n.isPojo()) {
                     Object ob = ((POJONode) n).getPojo();
                     if (ob instanceof byte[]) {
                         return (byte[]) ob;
                     }
                 }
             }
-        // otherwise return null to mark we have no binary content
+        }
         return null;
     }
\ No newline at end of file
