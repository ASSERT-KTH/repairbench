diff --git a/tmp/3f097833-7c9a-4ec7-887e-0cd1ebc84362_buggy.java b/tmp/baa665cc-1205-4b7f-9f34-430db37d79e6_fixed.java
index 5f8ac1a..cf49478 100644
--- a/tmp/3f097833-7c9a-4ec7-887e-0cd1ebc84362_buggy.java
+++ b/tmp/baa665cc-1205-4b7f-9f34-430db37d79e6_fixed.java
@@ -1,34 +1,53 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
+    NodePointer root1 = getRoot(p1);
+    NodePointer root2 = getRoot(p2);
+    if (root1 != root2) {
+        int h1 = System.identityHashCode(root1);
+        int h2 = System.identityHashCode(root2);
+        return Integer.compare(h1, h2);
+    }
+
     if (depth1 == 1) {
         throw new JXPathException(
                 "Cannot compare pointers that do not belong to the same tree: '"
                         + p1 + "' and '" + p2 + "'");
     }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
+
+private NodePointer getRoot(NodePointer p) {
+    if (p == null) {
+        return null;
+    }
+    NodePointer current = p;
+    while (current.parent != null) {
+        current = current.parent;
+    }
+    return current;
+}
\ No newline at end of file
