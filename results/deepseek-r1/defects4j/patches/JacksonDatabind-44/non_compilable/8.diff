diff --git a/tmp/b39598b7-9996-4bc3-a80d-2078ddc46819_buggy.java b/tmp/cfd4b29d-af9e-4edd-90c5-3f7a2a861bc4_fixed.java
index 1a63a66..825c031 100644
--- a/tmp/b39598b7-9996-4bc3-a80d-2078ddc46819_buggy.java
+++ b/tmp/cfd4b29d-af9e-4edd-90c5-3f7a2a861bc4_fixed.java
@@ -1,21 +1,17 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
+        // Compute super interfaces for the subclass
+        TypeFactory tf = getTypeFactory();
+        Class<?>[] interfaces = subclass.getInterfaces();
+        JavaType[] superInterfaces = new JavaType[interfaces.length];
+        for (int i = 0; i < interfaces.length; i++) {
+            superInterfaces[i] = tf.constructType(interfaces[i], _bindings);
+        }
+        return new SimpleType(subclass, _bindings, this, superInterfaces,
                 _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
     }
\ No newline at end of file
