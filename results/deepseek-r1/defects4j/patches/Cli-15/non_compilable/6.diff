diff --git a/tmp/5b26b93b-dfdb-4529-b095-e237104b26fc_buggy.java b/tmp/04067ce7-6ee5-4e3a-9c13-8a5bd08f8798_fixed.java
index 4e8b037..a27b734 100644
--- a/tmp/5b26b93b-dfdb-4529-b095-e237104b26fc_buggy.java
+++ b/tmp/04067ce7-6ee5-4e3a-9c13-8a5bd08f8798_fixed.java
@@ -1,20 +1,45 @@
 public List getValues(final Option option,
                       List defaultValues) {
-        // initialize the return list
+    // Initialize the return list with user's values
     List valueList = (List) values.get(option);
+    if (valueList == null) {
+        valueList = new ArrayList();
+    } else {
+        valueList = new ArrayList(valueList); // Create a mutable copy
+    }
+
+    Argument argument = option.getArgument();
+    int min = argument.getMinimum();
+    int max = argument.getMaximum();
+
+    // Collect all possible defaults, starting with parameter then this.defaultValues
+    List combinedDefaults = new ArrayList();
+    if (defaultValues != null) {
+        combinedDefaults.addAll(defaultValues);
+    }
+    List thisDef = (List) this.defaultValues.get(option);
+    if (thisDef != null) {
+        combinedDefaults.addAll(thisDef);
+    }
+
+    int currentSize = valueList.size();
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // Augment to meet minimum
+    if (currentSize < min) {
+        int needed = min - currentSize;
+        int fromIndex = Math.max(combinedDefaults.size() - needed, 0);
+        List toAdd = combinedDefaults.subList(fromIndex, combinedDefaults.size());
+        valueList.addAll(toAdd);
+        currentSize = valueList.size();
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // Augment to meet maximum if specified (max > 0)
+    if (max > 0 && currentSize < max) {
+        int allowed = max - currentSize;
+        int fromIndex = Math.max(combinedDefaults.size() - allowed, 0);
+        List toAdd = combinedDefaults.subList(fromIndex, combinedDefaults.size());
+        valueList.addAll(toAdd);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
