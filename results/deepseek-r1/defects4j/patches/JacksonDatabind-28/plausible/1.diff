diff --git a/tmp/ec91cebe-80ea-43e4-af02-1ba18e39547b_buggy.java b/tmp/53a2c86f-2fa9-4133-9051-8bf7f4e568af_fixed.java
index 66bb99f..7e64dad 100644
--- a/tmp/ec91cebe-80ea-43e4-af02-1ba18e39547b_buggy.java
+++ b/tmp/53a2c86f-2fa9-4133-9051-8bf7f4e568af_fixed.java
@@ -1,14 +1,19 @@
         @Override
         public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
         {
             if (p.getCurrentToken() == JsonToken.START_OBJECT) {
                 p.nextToken();
+                if (p.getCurrentToken() == JsonToken.END_OBJECT) {
+                    return ctxt.getNodeFactory().objectNode();
+                }
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
+            // Handle case where current token is FIELD_NAME or END_OBJECT (empty object)
             if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
+            if (p.getCurrentToken() == JsonToken.END_OBJECT) {
+                return ctxt.getNodeFactory().objectNode();
+            }
             throw ctxt.mappingException(ObjectNode.class);
          }
\ No newline at end of file
