diff --git a/tmp/0720578e-4f70-48da-a696-49f49ca14d27_buggy.java b/tmp/93894f24-cf45-408b-af7f-5b056a22542e_fixed.java
index e8705ac..f69ee66 100644
--- a/tmp/0720578e-4f70-48da-a696-49f49ca14d27_buggy.java
+++ b/tmp/93894f24-cf45-408b-af7f-5b056a22542e_fixed.java
@@ -1,24 +1,27 @@
     /**
      * There are two types of calls we are interested in calls without explicit
      * "this" values (what we are call "free" calls) and direct call to eval.
      */
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
 
       // Keep track of of the "this" context of a call.  A call without an
       // explicit "this" is a free call.
       Node first = n.getFirstChild();
 
       // ignore cast nodes.
+      while (first != null && first.isCast()) {
+          first = first.getFirstChild();
+      }
 
-      if (!NodeUtil.isGet(first)) {
+      if (first == null || !NodeUtil.isGet(first)) {
           n.putBooleanProp(Node.FREE_CALL, true);
       }
 
       // Keep track of the context in which eval is called. It is important
       // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
+      if (first != null && first.isName() &&
           "eval".equals(first.getString())) {
           first.putBooleanProp(Node.DIRECT_EVAL, true);
       }
     }
\ No newline at end of file
