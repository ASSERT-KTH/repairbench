diff --git a/tmp/bf6f7f84-263a-48af-953c-41c5f60c7023_buggy.java b/tmp/8f84543c-f2b9-4f9d-9f6f-42162dd27ffc_fixed.java
index 227a4ef..cee5837 100644
--- a/tmp/bf6f7f84-263a-48af-953c-41c5f60c7023_buggy.java
+++ b/tmp/8f84543c-f2b9-4f9d-9f6f-42162dd27ffc_fixed.java
@@ -1,48 +1,37 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             int lastPos = pos;
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
 
-            if (pos == -1)
-            {
-                sb.append(text);
-
+            if (pos == -1) {
+                if (text.length() > width) {
+                    pos = width;
+                } else {
+                    sb.append(rtrim(text));
                     return sb;
-            } else
+                }
+            }
+
             if (pos == lastPos)
             {
                 throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
