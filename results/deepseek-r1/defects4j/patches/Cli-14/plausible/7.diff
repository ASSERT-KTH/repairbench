diff --git a/tmp/02bacaa3-19c6-42c1-b5ec-e6681513ab0e_buggy.java b/tmp/06fa9ef6-c577-44eb-997e-6598c23aff2a_fixed.java
index 71189c3..bda04f0 100644
--- a/tmp/02bacaa3-19c6-42c1-b5ec-e6681513ab0e_buggy.java
+++ b/tmp/06fa9ef6-c577-44eb-997e-6598c23aff2a_fixed.java
@@ -1,46 +1,42 @@
     public void validate(final WriteableCommandLine commandLine)
         throws OptionException {
         // number of options found
         int present = 0;
 
         // reference to first unexpected option
         Option unexpected = null;
 
         for (final Iterator i = options.iterator(); i.hasNext();) {
             final Option option = (Option) i.next();
 
-            // needs validation?
-            boolean validate = option.isRequired() || option instanceof Group;
-            if (validate) {
+            // Validate if the option is required or present
+            boolean shouldValidate = option.isRequired() || commandLine.hasOption(option);
+            if (shouldValidate) {
                 option.validate(commandLine);
             }
 
-            // if the child option is present then validate it
             if (commandLine.hasOption(option)) {
                 if (++present > maximum) {
                     unexpected = option;
-
                     break;
                 }
-
-                option.validate(commandLine);
             }
         }
 
         // too many options
         if (unexpected != null) {
             throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
                                       unexpected.getPreferredName());
         }
 
-        // too few option
+        // too few options
         if (present < minimum) {
             throw new OptionException(this, ResourceConstants.MISSING_OPTION);
         }
 
         // validate each anonymous argument
         for (final Iterator i = anonymous.iterator(); i.hasNext();) {
             final Option option = (Option) i.next();
             option.validate(commandLine);
         }
     }
\ No newline at end of file
