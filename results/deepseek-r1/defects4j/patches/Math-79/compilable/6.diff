diff --git a/tmp/2de6f36c-6762-4609-9f4b-a8dafb877019_buggy.java b/tmp/9a1a00d8-ee67-45ef-8355-a3a5348b46c3_fixed.java
index 6e238e7..ea28ae8 100644
--- a/tmp/2de6f36c-6762-4609-9f4b-a8dafb877019_buggy.java
+++ b/tmp/9a1a00d8-ee67-45ef-8355-a3a5348b46c3_fixed.java
@@ -1,15 +1,22 @@
     /**
      * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
      *
      * @param p1 the first point
      * @param p2 the second point
      * @return the L<sub>2</sub> distance between the two points
+     * @throws IllegalArgumentException if the points are null or have different lengths
      */
     public static double distance(int[] p1, int[] p2) {
+      if (p1 == null || p2 == null) {
+          throw new IllegalArgumentException("Points must not be null");
+      }
+      if (p1.length != p2.length) {
+          throw new IllegalArgumentException("Points must have the same length");
+      }
       int sum = 0;
       for (int i = 0; i < p1.length; i++) {
           final int dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);
     }
\ No newline at end of file
