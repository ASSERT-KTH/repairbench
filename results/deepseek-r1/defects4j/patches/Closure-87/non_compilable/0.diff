diff --git a/tmp/9d531f89-2744-48b2-ab07-4519eb4702c9_buggy.java b/tmp/be887a35-25ad-4f10-aca5-7180d7b500ea_fixed.java
index 19fd63e..f463f2f 100644
--- a/tmp/9d531f89-2744-48b2-ab07-4519eb4702c9_buggy.java
+++ b/tmp/be887a35-25ad-4f10-aca5-7180d7b500ea_fixed.java
@@ -1,24 +1,28 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
-      }
-    }
-
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          Node parent = n.getParent();
+          if (parent != null && NodeUtil.isExpressionResultUsed(parent)) {
+            Node exprChild = maybeExpr.getFirstChild();
+            if (exprChild.getType() == Token.CALL) {
+              Node callee = exprChild.getFirstChild();
+              if (callee.getType() == Token.GETPROP) {
+                String propName = callee.getLastChild().getString();
+                if (propName.startsWith("on")) {
+                  return false;
+                }
+              }
+            }
+          }
+          return true;
+        }
+      }
+    }
     return false;
   }
\ No newline at end of file
