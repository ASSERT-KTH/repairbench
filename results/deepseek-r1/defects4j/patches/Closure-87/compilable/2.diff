diff --git a/tmp/8503188f-893f-4fa5-8e08-b59bf6e44ac3_buggy.java b/tmp/f3223c6a-e57d-47af-abd4-c8f7629f011f_fixed.java
index 19fd63e..b0d7c5a 100644
--- a/tmp/8503188f-893f-4fa5-8e08-b59bf6e44ac3_buggy.java
+++ b/tmp/f3223c6a-e57d-47af-abd4-c8f7629f011f_fixed.java
@@ -1,24 +1,25 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          Node expr = maybeExpr.getFirstChild();
+          // Check if the expression is a call to a method accessed via property or element.
+          if (expr != null && expr.getType() == Token.CALL) {
+            Node functionNode = expr.getFirstChild();
+            if (functionNode != null &&
+                (functionNode.getType() == Token.GETPROP ||
+                 functionNode.getType() == Token.GETELEM)) {
+              return false;
+            }
+          }
+          return true;
+        }
       }
     }
-
     return false;
   }
\ No newline at end of file
