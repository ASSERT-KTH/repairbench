diff --git a/tmp/f79e3f1f-6607-4b13-8699-8e9b46d1135f_buggy.java b/tmp/2edbd675-28a7-4f42-900c-dd3aa696254f_fixed.java
index 4bbd561..f1cc2e2 100644
--- a/tmp/f79e3f1f-6607-4b13-8699-8e9b46d1135f_buggy.java
+++ b/tmp/2edbd675-28a7-4f42-900c-dd3aa696254f_fixed.java
@@ -1,37 +1,48 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        if (index < 0 || index >= input.length()) {
+            return 0;
+        }
+        char firstChar = input.charAt(index);
+        if (firstChar != '&' || index + 1 >= input.length()) {
+            return 0;
+        }
+        char secondChar = input.charAt(index + 1);
+        if (secondChar != '#') {
+            return 0;
+        }
         int start = index + 2;
+        if (start >= input.length()) {
+            return 0;
+        }
         boolean isHex = false;
-
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
+        char thirdChar = input.charAt(start);
+        if (thirdChar == 'x' || thirdChar == 'X') {
             start++;
             isHex = true;
+            if (start >= input.length()) {
+                return 0;
+            }
         }
-
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
-
-            int entityValue;
+        if (end >= input.length() || input.charAt(end) != ';') {
+            return 0;
+        }
+        String numberStr = input.subSequence(start, end).toString();
         try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
-                }
-            } catch(NumberFormatException nfe) {
+            int entityValue = isHex ? Integer.parseInt(numberStr, 16) : Integer.parseInt(numberStr, 10);
+            if (entityValue < 0 || entityValue > Character.MAX_CODE_POINT) {
                 return 0;
             }
-
-                out.write(entityValue);
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
-        }
+            out.write(Character.toChars(entityValue));
+            return end - index + 1;
+        } catch (NumberFormatException e) {
             return 0;
         }
+    }
\ No newline at end of file
