diff --git a/tmp/b14a330b-b403-41c1-a2d3-79aec60b7958_buggy.java b/tmp/1ff5e8f1-83c3-4862-a5c4-6e444a6a9634_fixed.java
index b36b2a9..d524782 100644
--- a/tmp/b14a330b-b403-41c1-a2d3-79aec60b7958_buggy.java
+++ b/tmp/1ff5e8f1-83c3-4862-a5c4-6e444a6a9634_fixed.java
@@ -1,26 +1,48 @@
   JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
         }
       }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
     }
     JSType result = builder.build();
     if (result != null) {
       return result;
-    } else if (this.isObject() && that.isObject()) {
+    } else {
+      boolean thisAllObjects = true;
+      for (JSType alt : alternates) {
+        if (!alt.isObject()) {
+          thisAllObjects = false;
+          break;
+        }
+      }
+      boolean thatAllObjects;
+      if (that instanceof UnionType) {
+        thatAllObjects = true;
+        UnionType thatUnion = (UnionType) that;
+        for (JSType alt : thatUnion.alternates) {
+          if (!alt.isObject()) {
+            thatAllObjects = false;
+            break;
+          }
+        }
+      } else {
+        thatAllObjects = that.isObject();
+      }
+      if (thisAllObjects && thatAllObjects) {
         return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
       } else {
         return getNativeType(JSTypeNative.NO_TYPE);
       }
     }
+  }
\ No newline at end of file
