diff --git a/tmp/a8015ee0-cf68-4146-8571-ef10b87d77dc_buggy.java b/tmp/680e3b8a-599c-4d04-9592-0594588d0943_fixed.java
index fd8eae5..2f47457 100644
--- a/tmp/a8015ee0-cf68-4146-8571-ef10b87d77dc_buggy.java
+++ b/tmp/680e3b8a-599c-4d04-9592-0594588d0943_fixed.java
@@ -1,47 +1,50 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
 
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
-        int index = indexOf(x);
+    int index;
+    if (this.autoSort) {
+        XYDataItem key = new XYDataItem(x, null);
+        index = Collections.binarySearch(this.data, key);
+    } else {
+        index = indexOf(x);
+    }
+
     if (index >= 0 && !this.allowDuplicateXValues) {
         XYDataItem existing = (XYDataItem) this.data.get(index);
         try {
             overwritten = (XYDataItem) existing.clone();
-            }
-            catch (CloneNotSupportedException e) {
+        } catch (CloneNotSupportedException e) {
             throw new SeriesException("Couldn't clone XYDataItem!");
         }
         existing.setY(y);
-        }
-        else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+    } else {
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            int insertionPoint;
+            if (index >= 0) {
+                insertionPoint = index;
+                // Find the insertion point after all existing items with the same x
+                while (insertionPoint < this.data.size()) {
+                    XYDataItem item = (XYDataItem) this.data.get(insertionPoint);
+                    if (item.getX().compareTo(x) != 0) {
+                        break;
                     }
-            else {
+                    insertionPoint++;
+                }
+            } else {
+                insertionPoint = -index - 1;
+            }
+            this.data.add(insertionPoint, new XYDataItem(x, y));
+        } else {
             this.data.add(new XYDataItem(x, y));
         }
-            // check if this addition will exceed the maximum item count...
+        // Check if this addition will exceed the maximum item count...
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file
