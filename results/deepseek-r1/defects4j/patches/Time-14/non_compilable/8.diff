diff --git a/tmp/1ac886a7-dc48-4a91-a837-bf6cd133076b_buggy.java b/tmp/7ec2967b-a611-4f87-9376-1de3962ee20d_fixed.java
index 10616db..e3be247 100644
--- a/tmp/1ac886a7-dc48-4a91-a837-bf6cd133076b_buggy.java
+++ b/tmp/7ec2967b-a611-4f87-9376-1de3962ee20d_fixed.java
@@ -1,19 +1,21 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
             // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
+            // Start with a leap year to handle February 29 correctly
+            long instant = iChronology.year().set(0, 2000); // Set to year 2000 (a leap year)
             for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+                DateTimeField field = partial.getFieldType(i).getField(iChronology);
+                instant = field.set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
