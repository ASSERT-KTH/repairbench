diff --git a/tmp/2d935aab-4f56-4815-a9f6-4de540742ea2_buggy.java b/tmp/dab6ecab-092d-4bb7-adda-e3a681a45d82_fixed.java
index 10616db..b7126a4 100644
--- a/tmp/2d935aab-4f56-4815-a9f6-4de540742ea2_buggy.java
+++ b/tmp/dab6ecab-092d-4bb7-adda-e3a681a45d82_fixed.java
@@ -1,19 +1,33 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
+            // Check if the partial includes a year field
+            boolean hasYear = false;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+                if (partial.getFieldType(i) == DateTimeFieldType.year()) {
+                    hasYear = true;
+                    break;
+                }
+            }
+            // If no year, set to a leap year to handle February 29
+            if (!hasYear) {
+                DateTimeField yearField = DateTimeFieldType.year().getField(iChronology);
+                instant = yearField.set(instant, 2000); // Use a leap year
+            }
+            for (int i = 0, isize = partial.size(); i < isize; i++) {
+                DateTimeFieldType fieldType = partial.getFieldType(i);
+                DateTimeField field = fieldType.getField(iChronology);
+                instant = field.set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
