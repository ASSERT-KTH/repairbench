diff --git a/tmp/4fb2a9f9-86c8-4d9b-84fb-a8f5d824d352_buggy.java b/tmp/6c376639-dfbe-4db1-9a68-0b8b4ba46113_fixed.java
index 10616db..2bb0914 100644
--- a/tmp/4fb2a9f9-86c8-4d9b-84fb-a8f5d824d352_buggy.java
+++ b/tmp/6c376639-dfbe-4db1-9a68-0b8b4ba46113_fixed.java
@@ -1,19 +1,29 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
+            // Check if the partial contains a year field
+            boolean hasYear = false;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+                if (partial.getFieldType(i) == DateTimeFieldType.year()) {
+                    hasYear = true;
+                    break;
+                }
+            }
+            // If no year, set to a leap year to handle February 29
+            if (!hasYear) {
+                instant = iChronology.year().set(instant, 2000); // 2000 is a leap year
+            }
+            for (int i = 0, isize = partial.size(); i < isize; i++) {
+                DateTimeField field = partial.getFieldType(i).getField(iChronology);
+                instant = field.set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
