diff --git a/tmp/93a62a42-91ae-4b4d-b9c1-727f3fb82948_buggy.java b/tmp/6a5f058f-5234-4d98-9477-39bcd33c2069_fixed.java
index 51ebfca..0638c04 100644
--- a/tmp/93a62a42-91ae-4b4d-b9c1-727f3fb82948_buggy.java
+++ b/tmp/6a5f058f-5234-4d98-9477-39bcd33c2069_fixed.java
@@ -1,32 +1,18 @@
-    /**
-     * Encodes binary data using the base64 algorithm, optionally chunking the output into 76 character blocks.
-     * 
-     * @param binaryData
-     *            Array containing binary data to encode.
-     * @param isChunked
-     *            if <code>true</code> this encoder will chunk the base64 output into 76 character blocks
-     * @param urlSafe
-     *            if <code>true</code> this encoder will emit - and _ instead of the usual + and / characters.
-     * @param maxResultSize
-     *            The maximum result size to accept.
-     * @return Base64-encoded data.
-     * @throws IllegalArgumentException
-     *             Thrown when the input array needs an output array bigger than maxResultSize
-     * @since 1.4
-     */
     public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {
         if (binaryData == null || binaryData.length == 0) {
             return binaryData;
         }
 
-        long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
+        int lineLength = isChunked ? Base64.MIME_CHUNK_SIZE : 0;
+        byte[] separator = isChunked ? Base64.CHUNK_SEPARATOR : new byte[0];
+        long len = getEncodeLength(binaryData, lineLength, separator);
         if (len > maxResultSize) {
             throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
                 len +
                 ") than the specified maxium size of " +
                 maxResultSize);
         }
                 
-        Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);
+        Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, Base64.CHUNK_SEPARATOR, urlSafe);
         return b64.encode(binaryData);
     }
\ No newline at end of file
