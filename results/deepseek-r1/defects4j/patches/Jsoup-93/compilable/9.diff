diff --git a/tmp/f6a8527e-8238-44b3-9863-840954b937d6_buggy.java b/tmp/ce01d1a1-93b8-4c09-9b5b-2b179c11527a_fixed.java
index aa351ad..2466972 100644
--- a/tmp/f6a8527e-8238-44b3-9863-840954b937d6_buggy.java
+++ b/tmp/ce01d1a1-93b8-4c09-9b5b-2b179c11527a_fixed.java
@@ -1,41 +1,41 @@
-    /**
-     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
-     * list will not be reflected in the DOM.
-     * @return a list of key vals
-     */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
-        // iterate the form control elements and accumulate their values
         for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            if (el.hasAttr("disabled")) continue; // skip disabled form inputs
+            if (!el.tag().isFormSubmittable()) continue;
+            if (el.hasAttr("disabled")) continue;
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
 
+            // Skip input elements with type button or reset
+            if (el.tag().getName().equalsIgnoreCase("input")) {
+                String lowerType = type.toLowerCase();
+                if (lowerType.equals("button") || lowerType.equals("reset")) {
+                    continue;
+                }
+            }
 
             if ("select".equals(el.normalName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
                 if (!set) {
                     Element option = el.select("option").first();
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
                     final String val = el.val().length() >  0 ? el.val() : "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
             } else {
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }
\ No newline at end of file
