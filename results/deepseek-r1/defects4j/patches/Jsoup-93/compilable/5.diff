diff --git a/tmp/862af317-9f23-45cd-a9e3-01da6c2bdf19_buggy.java b/tmp/277b9b43-7d2e-46aa-9dae-3631a110d832_fixed.java
index aa351ad..6423d0b 100644
--- a/tmp/862af317-9f23-45cd-a9e3-01da6c2bdf19_buggy.java
+++ b/tmp/277b9b43-7d2e-46aa-9dae-3631a110d832_fixed.java
@@ -1,41 +1,47 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+            // filter out inputs that are not submittable
+            if (el.tag().getName().equals("input")) {
+                String type = el.attr("type").toLowerCase();
+                if (type.equals("button") || type.equals("submit") || type.equals("reset") || type.equals("image") || type.equals("file")) {
+                    continue;
+                }
+            }
             if (el.hasAttr("disabled")) continue; // skip disabled form inputs
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
 
-
             if ("select".equals(el.normalName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
                 if (!set) {
                     Element option = el.select("option").first();
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
                 // only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
                     final String val = el.val().length() >  0 ? el.val() : "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
             } else {
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }
\ No newline at end of file
