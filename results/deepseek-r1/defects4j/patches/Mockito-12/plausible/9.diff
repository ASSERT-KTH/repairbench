diff --git a/tmp/74a49f0f-6bab-410c-a10b-a49e3f3fc4a4_buggy.java b/tmp/ea372047-ef8d-42d5-acd6-55ae596b206f_fixed.java
index bada2b6..a4dd307 100644
--- a/tmp/74a49f0f-6bab-410c-a10b-a49e3f3fc4a4_buggy.java
+++ b/tmp/ea372047-ef8d-42d5-acd6-55ae596b206f_fixed.java
@@ -1,16 +1,26 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (generic instanceof ParameterizedType) {
+            Type[] actualTypes = ((ParameterizedType) generic).getActualTypeArguments();
+            if (actualTypes.length == 0) {
+                return Object.class;
+            }
+            Type firstTypeArg = actualTypes[0];
+            if (firstTypeArg instanceof Class) {
+                return (Class) firstTypeArg;
+            } else if (firstTypeArg instanceof ParameterizedType) {
+                Type rawType = ((ParameterizedType) firstTypeArg).getRawType();
+                if (rawType instanceof Class) {
+                    return (Class) rawType;
+                }
+            }
+            return Object.class;
         }
-        
         return Object.class;
     }
\ No newline at end of file
