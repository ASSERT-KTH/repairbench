diff --git a/tmp/250e567e-abad-42eb-8f97-f7144d3f242e_buggy.java b/tmp/6fc91302-9c27-41ef-8f86-6cb731fa737f_fixed.java
index bada2b6..c73ca86 100644
--- a/tmp/250e567e-abad-42eb-8f97-f7144d3f242e_buggy.java
+++ b/tmp/6fc91302-9c27-41ef-8f86-6cb731fa737f_fixed.java
@@ -1,16 +1,26 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (generic instanceof ParameterizedType) {
+            Type[] actualTypes = ((ParameterizedType) generic).getActualTypeArguments();
+            if (actualTypes.length == 0) {
+                return Object.class;
+            }
+            Type actual = actualTypes[0];
+            if (actual instanceof ParameterizedType) {
+                Type rawType = ((ParameterizedType) actual).getRawType();
+                if (rawType instanceof Class) {
+                    return (Class) rawType;
+                }
+            } else if (actual instanceof Class) {
                 return (Class) actual;
-                //in case of nested generics we don't go deep
             }
-        
+            return Object.class;
+        }
         return Object.class;
     }
\ No newline at end of file
