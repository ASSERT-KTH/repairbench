diff --git a/tmp/a5f7e1e3-9a90-4831-99e6-e815f751ac4e_buggy.java b/tmp/45b84351-82a4-4576-8d5b-125889bec1fe_fixed.java
index 670114d..0525fc1 100644
--- a/tmp/a5f7e1e3-9a90-4831-99e6-e815f751ac4e_buggy.java
+++ b/tmp/45b84351-82a4-4576-8d5b-125889bec1fe_fixed.java
@@ -1,48 +1,70 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
           }
         }
+
+        // Handle goog.inherits calls to record subclass and superclass references
+        String qualifiedName = NodeUtil.getQualifiedName(nameNode);
+        if ("goog.inherits".equals(qualifiedName)) {
+          Node subclassArg = nameNode.getNext();
+          if (subclassArg != null) {
+            NameInformation subclassNs = createNameInformation(t, subclassArg, n);
+            if (subclassNs != null) {
+              JsName subclassName = getName(subclassNs.name, true);
+              recordSet(subclassName.name, subclassArg);
+            }
+          }
+
+          Node superclassArg = subclassArg != null ? subclassArg.getNext() : null;
+          if (superclassArg != null) {
+            NameInformation superclassNs = createNameInformation(t, superclassArg, n);
+            if (superclassNs != null) {
+              JsName superclassName = getName(superclassNs.name, true);
+              recordSet(superclassName.name, superclassArg);
+            }
+          }
+        }
       }
     }
\ No newline at end of file
