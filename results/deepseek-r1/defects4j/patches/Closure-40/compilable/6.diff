diff --git a/tmp/8a901dca-55da-4b76-977f-f2b48096b9cd_buggy.java b/tmp/57dbefcd-a20f-4d92-a476-53c1ac193a95_fixed.java
index 670114d..44872ce 100644
--- a/tmp/8a901dca-55da-4b76-977f-f2b48096b9cd_buggy.java
+++ b/tmp/57dbefcd-a20f-4d92-a476-53c1ac193a95_fixed.java
@@ -1,48 +1,54 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
+        Node functionNode = n.getFirstChild();
+        NameInformation functionNs = createNameInformation(t, functionNode, n);
+        if (functionNs != null && functionNs.onlyAffectsClassDef) {
+          Node subclassNode = functionNode.getNext(); // First argument
+          if (subclassNode != null) {
+            NameInformation subclassNs = createNameInformation(t, subclassNode, n);
+            if (subclassNs != null) {
+              JsName name = getName(subclassNs.name, false);
               if (name != null) {
                 refNodes.add(new ClassDefiningFunctionNode(
                     name, n, parent, parent.getParent()));
               }
             }
           }
         }
+      }
+    }
\ No newline at end of file
