diff --git a/tmp/01211367-4732-455c-a2c1-6ea7f0d16079_buggy.java b/tmp/08ee61df-3e05-4fe9-847a-fef55f7bb7ad_fixed.java
index 670114d..75c2be2 100644
--- a/tmp/01211367-4732-455c-a2c1-6ea7f0d16079_buggy.java
+++ b/tmp/08ee61df-3e05-4fe9-847a-fef55f7bb7ad_fixed.java
@@ -1,48 +1,61 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
             refNodes.add(new ClassDefiningFunctionNode(
                 name, n, parent, parent.getParent()));
           }
+          // Process each argument of the call
+          Node arg = nameNode.getNext();
+          while (arg != null) {
+            NameInformation argNs = createNameInformation(t, arg, n);
+            if (argNs != null) {
+              if (argNs.isPrototype) {
+                recordPrototypeSet(argNs.prototypeClass, argNs.prototypeProperty, arg);
+              } else {
+                recordSet(argNs.name, arg);
+              }
+            }
+            arg = arg.getNext();
+          }
         }
       }
     }
\ No newline at end of file
