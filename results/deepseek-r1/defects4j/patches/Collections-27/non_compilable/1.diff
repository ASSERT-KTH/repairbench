diff --git a/tmp/9f82eac1-c25c-466c-b7d4-9139e067b5df_buggy.java b/tmp/7beff6d1-9ad3-4016-8fd1-7050aceac9a8_fixed.java
index e69de29..5ead27d 100644
--- a/tmp/9f82eac1-c25c-466c-b7d4-9139e067b5df_buggy.java
+++ b/tmp/7beff6d1-9ad3-4016-8fd1-7050aceac9a8_fixed.java
@@ -0,0 +1,30 @@
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.util.Collection;
+import java.util.HashMap;
+
+public class MultiValueMap extends AbstractMapDecorator {
+
+    protected Class<? extends Collection> collectionClass;
+
+    public static MultiValueMap multiValueMap(final Map map, final Class<? extends Collection> collectionClass) {
+        return new MultiValueMap(map, collectionClass);
+    }
+
+    protected MultiValueMap(final Map map, final Class<? extends Collection> collectionClass) {
+        super(map);
+        this.collectionClass = collectionClass;
+        if (collectionClass != null && !Collection.class.isAssignableFrom(collectionClass)) {
+            throw new IllegalArgumentException("Collection class is not a Collection subclass.");
+        }
+    }
+
+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject();
+        if (collectionClass != null && !Collection.class.isAssignableFrom(collectionClass)) {
+            throw new UnsupportedOperationException("The collection class is not a Collection type.");
+        }
+    }
+
+    // Other existing methods...
+}
\ No newline at end of file
