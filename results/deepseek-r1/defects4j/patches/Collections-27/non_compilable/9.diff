diff --git a/tmp/4f2fd0e3-59e6-4e75-8620-8dd78251bfa6_buggy.java b/tmp/74c8748d-5c8f-4023-b907-5726ff8459ea_fixed.java
index e69de29..b4f1703 100644
--- a/tmp/4f2fd0e3-59e6-4e75-8620-8dd78251bfa6_buggy.java
+++ b/tmp/74c8748d-5c8f-4023-b907-5726ff8459ea_fixed.java
@@ -0,0 +1,26 @@
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.util.Collection;
+import java.util.HashMap;
+
+public class MultiValueMap<K, V> extends AbstractMapDecorator<K, Object> {
+
+    private Class<? extends Collection> collectionClass;
+
+    private MultiValueMap(final Map<K, Object> map, final Class<? extends Collection> collectionClass) {
+        super(map);
+        this.collectionClass = collectionClass;
+    }
+
+    public static <K, V> MultiValueMap<K, V> multiValueMap(final Map<K, Object> map,
+                                                           final Class<? extends Collection> collectionClass) {
+        return new MultiValueMap<>(map, collectionClass);
+    }
+
+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject();
+        if (!Collection.class.isAssignableFrom(collectionClass)) {
+            throw new UnsupportedOperationException("Deserialization failed: collection class is not a valid Collection type.");
+        }
+    }
+}
\ No newline at end of file
