diff --git a/tmp/8be1be0b-d354-44a4-abfb-13f6630252a7_buggy.java b/tmp/18203417-6b80-4d31-9275-efc799ff0bd1_fixed.java
index b56897c..c3b6df9 100644
--- a/tmp/8be1be0b-d354-44a4-abfb-13f6630252a7_buggy.java
+++ b/tmp/18203417-6b80-4d31-9275-efc799ff0bd1_fixed.java
@@ -1,27 +1,21 @@
       @Override
       public boolean apply(Node n) {
         // When the node is null it means, we reached the implicit return
         // where the function returns (possibly without an return statement)
         if (n == null) {
           return false;
         }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
-        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
+        // Check if the current node has any side effects
+        if (NodeUtil.mayHaveSideEffects(n)) {
           return true;
         }
 
-        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
-          return true;
-        }
-
-
+        // Recursively check children
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
           }
         }
         return false;
       }
\ No newline at end of file
