diff --git a/tmp/09ae1a55-2ac3-4dba-9485-650db593fa48_buggy.java b/tmp/def81651-19df-45f1-846f-7dc0a44f263b_fixed.java
index bfa2423..0564c6c 100644
--- a/tmp/09ae1a55-2ac3-4dba-9485-650db593fa48_buggy.java
+++ b/tmp/def81651-19df-45f1-846f-7dc0a44f263b_fixed.java
@@ -1,23 +1,22 @@
-    /**
-     * Generate a random sample from the distribution.
-     *
-     * @param sampleSize the number of random values to generate.
-     * @return an array representing the random sample.
-     * @throws NotStrictlyPositiveException if {@code sampleSize} is not
-     * positive.
-     */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        Class<?> componentType = singletons.get(0).getClass();
+        for (T element : singletons) {
+            if (!componentType.isInstance(element)) {
+                componentType = Object.class;
+                break;
+            }
+        }
+
+        final T[] out = (T[]) java.lang.reflect.Array.newInstance(componentType, sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
 
         return out;
-
     }
\ No newline at end of file
