diff --git a/tmp/2663ef3f-8dc7-4f92-9165-f478ded7b558_buggy.java b/tmp/b6a89928-fe2f-4f67-9e55-ab8132a11d36_fixed.java
index 03b03d7..ba5335f 100644
--- a/tmp/2663ef3f-8dc7-4f92-9165-f478ded7b558_buggy.java
+++ b/tmp/b6a89928-fe2f-4f67-9e55-ab8132a11d36_fixed.java
@@ -1,25 +1,17 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
+        // Calculate UTC instants 3 hours before and after the given instant
+        long beforeUTC = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;
+        long afterUTC = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;
         
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+        // Convert these UTC instants to local times to check for overlaps
+        long instantBefore = convertUTCToLocal(beforeUTC);
+        long instantAfter = convertUTCToLocal(afterUTC);
         if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+            return instant;  // not an overlap
         }
         
-        // work out range of instants that have duplicate local times
+        // Determine the local time of the original instant
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // Use the UTC references (beforeUTC or afterUTC) to resolve the correct offset
+        return convertLocalToUTC(local, false, earlierOrLater ? afterUTC : beforeUTC);
     }
\ No newline at end of file
