diff --git a/tmp/bca1d513-a72d-45e0-9a5b-dfd644ebd6b3_buggy.java b/tmp/51f4a757-f03c-4335-80a6-39b69e6a19dc_fixed.java
index 4b163f6..c4a3a45 100644
--- a/tmp/bca1d513-a72d-45e0-9a5b-dfd644ebd6b3_buggy.java
+++ b/tmp/51f4a757-f03c-4335-80a6-39b69e6a19dc_fixed.java
@@ -1,28 +1,15 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
     public static long skip(InputStream input, long numToSkip) throws IOException {
         long available = numToSkip;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
+                // Check if we've reached EOF by attempting to read a single byte
+                if (input.read() == -1) {
                     break;
                 }
+                skipped = 1; // We read one byte, count it as skipped
+            }
             numToSkip -= skipped;
         }
-            
         return available - numToSkip;
     }
\ No newline at end of file
