diff --git a/tmp/9f538707-5681-4664-a8f5-c5bd2fefd4f2_buggy.java b/tmp/dc29a208-ae97-45d1-a3bb-054a2d3ed0d8_fixed.java
index dc93be3..b3d02f5 100644
--- a/tmp/9f538707-5681-4664-a8f5-c5bd2fefd4f2_buggy.java
+++ b/tmp/dc29a208-ae97-45d1-a3bb-054a2d3ed0d8_fixed.java
@@ -1,14 +1,19 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
+            Tag tag = Tag.valueOf(startTag.name());
+            if (tag.isEmpty()) {
+                return insertEmpty(startTag);
+            } else {
+                Element el = new Element(tag, baseUri, startTag.attributes);
+                insert(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
             }
+        }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
