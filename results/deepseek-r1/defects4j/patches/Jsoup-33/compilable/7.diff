diff --git a/tmp/d676d93d-b238-41e8-b286-0317cb773cb3_buggy.java b/tmp/6b749504-e1ef-48b8-abf4-5353c54e5172_fixed.java
index dc93be3..a1970f2 100644
--- a/tmp/d676d93d-b238-41e8-b286-0317cb773cb3_buggy.java
+++ b/tmp/6b749504-e1ef-48b8-abf4-5353c54e5172_fixed.java
@@ -1,14 +1,21 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            Tag tag = Tag.valueOf(startTag.name());
+            if (tag.isSelfClosing()) {
                 Element el = insertEmpty(startTag);
-            stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
+            } else {
+                Element el = new Element(tag, baseUri, startTag.attributes);
+                insert(el);
+                tokeniser.emit(new Token.EndTag(el.tagName()));
+                return el;
+            }
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
