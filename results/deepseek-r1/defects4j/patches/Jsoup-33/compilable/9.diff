diff --git a/tmp/f4b7dcab-0847-4993-a24e-4f3428897d7a_buggy.java b/tmp/6c75b167-76b4-4cdb-a6e6-ed38f0681f98_fixed.java
index dc93be3..96ce4cf 100644
--- a/tmp/f4b7dcab-0847-4993-a24e-4f3428897d7a_buggy.java
+++ b/tmp/6c75b167-76b4-4cdb-a6e6-ed38f0681f98_fixed.java
@@ -1,14 +1,23 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            String tagName = startTag.name();
+            Tag tag = Tag.valueOf(tagName);
+            if (tag.isEmpty()) {
                 Element el = insertEmpty(startTag);
-            stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
+            } else {
+                Element el = new Element(tag, baseUri, startTag.attributes);
+                insert(el);
+                stack.add(el);
+                tokeniser.emit(new Token.EndTag(el.tagName()));
+                return el;
+            }
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
