diff --git a/tmp/f8447f99-6a05-476d-adf1-01296612eb27_buggy.java b/tmp/8a4034f3-6c61-435d-8bc7-4d19f887849d_fixed.java
index dc93be3..6008113 100644
--- a/tmp/f8447f99-6a05-476d-adf1-01296612eb27_buggy.java
+++ b/tmp/8a4034f3-6c61-435d-8bc7-4d19f887849d_fixed.java
@@ -1,14 +1,19 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            Tag tag = Tag.valueOf(startTag.name());
+            if (tag.isVoid() || !tag.isKnown()) {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+                tokeniser.emit(new Token.EndTag(el.tagName()));
                 return el;
+            } else {
+                Element el = new Element(tag, baseUri, startTag.attributes);
+                insert(el);
+                return el;
+            }
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
