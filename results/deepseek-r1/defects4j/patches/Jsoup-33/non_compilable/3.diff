diff --git a/tmp/fb380753-200e-45aa-ab55-014271e5be2b_buggy.java b/tmp/929612e3-2b9e-4772-9a84-be42dbcd8593_fixed.java
index dc93be3..40ae3f3 100644
--- a/tmp/fb380753-200e-45aa-ab55-014271e5be2b_buggy.java
+++ b/tmp/929612e3-2b9e-4772-9a84-be42dbcd8593_fixed.java
@@ -1,14 +1,19 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
+            Tag tag = Tag.valueOf(startTag.name());
+            if (tag.isSelfClosing()) {
                 Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+                tokeniser.emit(new Token.EndTag(el.tagName()));
                 return el;
+            } else {
+                Element el = new Element(tag, baseUri, startTag.attributes);
+                insert(el);
+                tokeniser.emit(new Token.EndTag(tag.name()));
+                return el;
+            }
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file
