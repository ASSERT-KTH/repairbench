diff --git a/tmp/190f0b73-521a-44dc-8b63-0cff5c4dd4c0_buggy.java b/tmp/a2e4acf0-6b84-4ac9-abb0-54e6b8645838_fixed.java
index a7d4ff8..7bf58b8 100644
--- a/tmp/190f0b73-521a-44dc-8b63-0cff5c4dd4c0_buggy.java
+++ b/tmp/a2e4acf0-6b84-4ac9-abb0-54e6b8645838_fixed.java
@@ -1,28 +1,32 @@
   void addNumber(double x) {
-    // This is not pretty printing. This is to prevent misparsing of x- -4 as
-    // x--4 (which is a syntax error).
     char prev = getLastChar();
     boolean negativeZero = isNegativeZero(x);
-    if (x < 0 && prev == '-') {
-      add(" ");
-    }
+    String numberStr;
 
     if ((long) x == x && !negativeZero) {
       long value = (long) x;
       long mantissa = value;
       int exp = 0;
       if (Math.abs(x) >= 100) {
         while (mantissa / 10 * Math.pow(10, exp + 1) == value) {
           mantissa /= 10;
           exp++;
         }
       }
       if (exp > 2) {
-        add(Long.toString(mantissa) + "E" + Integer.toString(exp));
+        numberStr = Long.toString(mantissa) + "E" + Integer.toString(exp);
       } else {
-        add(Long.toString(value));
+        numberStr = Long.toString(value);
       }
     } else {
-      add(String.valueOf(x));
+      numberStr = String.valueOf(x);
     }
+
+    // Check if the formatted number starts with '-'
+    boolean isNegative = !numberStr.isEmpty() && numberStr.charAt(0) == '-';
+    if (isNegative && prev == '-') {
+      add(" ");
+    }
+
+    add(numberStr);
   }
\ No newline at end of file
