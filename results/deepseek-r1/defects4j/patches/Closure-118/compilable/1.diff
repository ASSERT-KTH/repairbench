diff --git a/tmp/5036ad83-fc2c-4ea5-9a94-ed07146f94cf_buggy.java b/tmp/a4e2d680-1190-4705-85e0-b28aaf722d9b_fixed.java
index 0b7c52e..b72f8f7 100644
--- a/tmp/5036ad83-fc2c-4ea5-9a94-ed07146f94cf_buggy.java
+++ b/tmp/a4e2d680-1190-4705-85e0-b28aaf722d9b_fixed.java
@@ -1,27 +1,38 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
+      Node parent = n.getParent();
+      Node lhs = null;
+      if (parent != null && parent.isAssign()) {
+        lhs = parent.getFirstChild();
+      }
+
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
         // We should never see a mix of numbers and strings.
         String name = child.getString();
-        T type = typeSystem.getType(getScope(), n, name);
+        T type;
+        if (lhs != null) {
+          type = typeSystem.getType(getScope(), lhs, name);
+        } else {
+          type = typeSystem.getType(getScope(), n, name);
+        }
 
         Property prop = getProperty(name);
         if (!prop.scheduleRenaming(child,
                                    processProperty(t, prop, type, null))) {
           // TODO(user): It doesn't look like the user can do much in this
           // case right now.
           if (propertiesToErrorFor.containsKey(name)) {
             compiler.report(JSError.make(
                 t.getSourceName(), child, propertiesToErrorFor.get(name),
                 Warnings.INVALIDATION, name,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
       }
     }
\ No newline at end of file
