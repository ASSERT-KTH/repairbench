diff --git a/tmp/98a993b2-37e2-45b3-a9e8-3b9de8c19d04_buggy.java b/tmp/c8d11679-2303-4d91-822d-428fdf662bd9_fixed.java
index e69de29..999b54b 100644
--- a/tmp/98a993b2-37e2-45b3-a9e8-3b9de8c19d04_buggy.java
+++ b/tmp/c8d11679-2303-4d91-822d-428fdf662bd9_fixed.java
@@ -0,0 +1,29 @@
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+
+    // Dynamically find all form elements each time
+    Elements elements = select("input, textarea, select, button");
+    for (Element el : elements) {
+        if (!el.tag().isFormSubmittable()) continue; // exclude non-submittable elements
+        if (el.hasAttr("disabled")) continue; // skip disabled form inputs
+        
+        String name = el.attr("name");
+        if (name.length() == 0) continue;
+        
+        String type = el.attr("type").toLowerCase();
+        
+        if ("select".equals(el.normalName())) {
+            Elements options = el.select("option[selected]");
+            for (Element option : options) {
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+            }
+        } else if ("checkbox".equals(type) || "radio".equals(type)) {
+            if (el.hasAttr("checked")) {
+                data.add(HttpConnection.KeyVal.create(name, el.val().length() > 0 ? el.val() : "on"));
+            }
+        } else {
+            data.add(HttpConnection.KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
