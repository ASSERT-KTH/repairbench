diff --git a/tmp/8de00ddd-53f0-423e-9839-e2dfba344ce2_buggy.java b/tmp/124c0f78-2725-4218-b5e0-2a4db41eddd4_fixed.java
index e69de29..a7959d9 100644
--- a/tmp/8de00ddd-53f0-423e-9839-e2dfba344ce2_buggy.java
+++ b/tmp/124c0f78-2725-4218-b5e0-2a4db41eddd4_fixed.java
@@ -0,0 +1,37 @@
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+
+    // Iterate through all form-associated elements dynamically each time
+    Elements elements = select("input, select, textarea, button");
+    for (Element el : elements) {
+        if (!el.tag().isFormSubmittable()) continue; // skip non-submittable elements
+        if (el.hasAttr("disabled")) continue; // skip disabled elements
+        String name = el.attr("name");
+        if (name.length() == 0) continue;
+        String type = el.attr("type");
+
+        if ("select".equals(el.normalName())) {
+            Element select = el;
+            Elements options = select.select("option[selected]");
+            boolean set = false;
+            for (Element option : options) {
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+                set = true;
+            }
+            if (!set) {
+                Element option = select.selectFirst("option");
+                if (option != null)
+                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+            }
+        } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            if (el.hasAttr("checked")) {
+                String value = el.val().length() > 0 ? el.val() : "on";
+                data.add(HttpConnection.KeyVal.create(name, value));
+            }
+        } else {
+            data.add(HttpConnection.KeyVal.create(name, el.val()));
+        }
+    }
+
+    return data;
+}
\ No newline at end of file
