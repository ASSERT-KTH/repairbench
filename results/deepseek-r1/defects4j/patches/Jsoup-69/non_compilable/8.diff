diff --git a/tmp/b86627f7-26c8-4750-8b7a-1b534bc1c567_buggy.java b/tmp/4456e3ea-7599-4351-9389-7cf9fdefa86d_fixed.java
index e69de29..2046f84 100644
--- a/tmp/b86627f7-26c8-4750-8b7a-1b534bc1c567_buggy.java
+++ b/tmp/4456e3ea-7599-4351-9389-7cf9fdefa86d_fixed.java
@@ -0,0 +1,36 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+
+    // iterate the form control elements again, in case any have been removed
+    Elements elements = this.select("input, select, textarea, button").forms();
+    for (Element el: elements) {
+        if (!el.tag().isFormSubmittable()) continue; // discard unsubmittable elements (e.g. disabled)
+        String name = el.attr("name");
+        if (name.length() == 0) continue;
+        String type = el.attr("type").toLowerCase();
+
+        if ("button".equalsIgnoreCase(el.tagName())) continue; // browsers don't submit buttons
+
+        if ("select".equals(el.tagName())) {
+            Elements options = el.select("option[selected]");
+            boolean set = false;
+            for (Element option: options) {
+                data.add(HttpConnection.KeyVal.create(name, option.val()));
+                set = true;
+            }
+            if (!set) {
+                Element option = el.selectFirst("option");
+                if (option != null)
+                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+            }
+        } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
+            if (el.hasAttr("checked")) {
+                String value = el.val().length() > 0 ? el.val() : "on";
+                data.add(HttpConnection.KeyVal.create(name, value));
+            }
+        } else {
+            data.add(HttpConnection.KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
