diff --git a/tmp/3287f834-ed41-4571-8d86-f6e9432e658f_buggy.java b/tmp/53e8347b-ef62-4be4-87cc-c50fe175ed8b_fixed.java
index 8e93a5e..9294ec3 100644
--- a/tmp/3287f834-ed41-4571-8d86-f6e9432e658f_buggy.java
+++ b/tmp/53e8347b-ef62-4be4-87cc-c50fe175ed8b_fixed.java
@@ -1,43 +1,38 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
+        String[] lines = text.split(defaultNewLine, -1); // Split into lines while preserving empty strings
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
+        for (int i = 0; i < lines.length; i++) {
+            String line = lines[i];
+            if (i > 0) {
+                sb.append(defaultNewLine);
+            }
+
+            int pos = findWrapPos(line, width, 0);
 
-            return sb;
+            if (pos == -1) {
+                sb.append(rtrim(line));
+                continue;
             }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+            sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
             final String padding = createPadding(nextLineTabStop);
+            String remaining = line.substring(pos).trim();
 
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            while (true) {
+                String currentLine = padding + remaining;
+                pos = findWrapPos(currentLine, width, 0);
 
-            if (pos == -1)
-            {
-                sb.append(text);
+                if (pos == -1) {
+                    sb.append(currentLine);
+                    break;
+                }
+
+                sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);
+                remaining = currentLine.substring(pos).trim();
+            }
+        }
 
         return sb;
     }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
