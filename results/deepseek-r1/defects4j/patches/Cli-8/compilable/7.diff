diff --git a/tmp/5380929e-734a-40e8-a3f8-a287478348f3_buggy.java b/tmp/efa46e36-698b-4d5d-982c-7d70f21f919c_fixed.java
index 8e93a5e..470cb7d 100644
--- a/tmp/5380929e-734a-40e8-a3f8-a287478348f3_buggy.java
+++ b/tmp/efa46e36-698b-4d5d-982c-7d70f21f919c_fixed.java
@@ -1,43 +1,32 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
+        String[] lines = text.split(defaultNewLine, -1);
+        for (int i = 0; i < lines.length; i++) {
+            String line = lines[i];
+            if (i > 0) {
+                sb.append(defaultNewLine);
+                line = createPadding(nextLineTabStop) + line;
+            }
+            int pos = findWrapPos(line, width, 0);
+            if (pos == -1) {
+                sb.append(rtrim(line));
+            } else {
+                sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+                String remaining = line.substring(pos).trim();
+                String padding = createPadding(nextLineTabStop);
+                while (true) {
+                    String currentLine = padding + remaining;
+                    pos = findWrapPos(currentLine, width, nextLineTabStop);
+                    if (pos == -1) {
+                        sb.append(currentLine);
+                        break;
+                    } else {
+                        sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);
+                        remaining = currentLine.substring(pos).trim();
                     }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
-                return sb;
                 }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
             }
         }
+        return sb;
+    }
\ No newline at end of file
