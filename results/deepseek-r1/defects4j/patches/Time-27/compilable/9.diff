diff --git a/tmp/be3199de-274f-43a6-ade6-82203dee35c1_buggy.java b/tmp/90d4ae12-bb18-4200-a6d2-4463dd22ee64_fixed.java
index ec6c9ee..6fc533e 100644
--- a/tmp/be3199de-274f-43a6-ade6-82203dee35c1_buggy.java
+++ b/tmp/90d4ae12-bb18-4200-a6d2-4463dd22ee64_fixed.java
@@ -1,21 +1,21 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
+        if (size >= 1 && elementPairs.get(0) instanceof Separator) { // Check size >=1 instead of 2
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+            PeriodFormatter f = toFormatter(elementPairs.subList(1, size), notPrinter, notParser); // Start sublist at index 1
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
