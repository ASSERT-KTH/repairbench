diff --git a/tmp/91b3ba8b-afe0-4595-bd7b-078ea1480f34_buggy.java b/tmp/4251e470-4c34-4d6f-b5ab-716dcf2893fa_fixed.java
index de9af32..4b77e94 100644
--- a/tmp/91b3ba8b-afe0-4595-bd7b-078ea1480f34_buggy.java
+++ b/tmp/4251e470-4c34-4d6f-b5ab-716dcf2893fa_fixed.java
@@ -1,18 +1,27 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP) {
+        Node owner = child.getFirstChild();
+        Node prop = child.getLastChild();
+        if (prop.getType() == Token.STRING && 
+            ("call".equals(prop.getString()) || "apply".equals(prop.getString()))) {
+          if (owner.getType() == Token.NAME) {
+            changed.add(owner.getString());
+          }
+        }
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
