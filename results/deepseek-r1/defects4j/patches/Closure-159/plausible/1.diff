diff --git a/tmp/12e38edb-22d3-4dcd-906b-b875890ce002_buggy.java b/tmp/ba084309-1de1-4783-a465-e8db6be1be52_fixed.java
index de9af32..ede4413 100644
--- a/tmp/12e38edb-22d3-4dcd-906b-b875890ce002_buggy.java
+++ b/tmp/ba084309-1de1-4783-a465-e8db6be1be52_fixed.java
@@ -1,18 +1,27 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP) {
+        // Check if the property is 'call' and add the owner if it's a NAME
+        String prop = child.getLastChild().getString();
+        if ("call".equals(prop)) {
+          Node owner = child.getFirstChild();
+          if (owner.getType() == Token.NAME) {
+            changed.add(owner.getString());
+          }
+        }
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
