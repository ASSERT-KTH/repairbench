diff --git a/tmp/ff0e17a2-56cc-4d4f-8102-68fb905a5d60_buggy.java b/tmp/df6aaae4-4bfc-40c1-a31c-82f53625665c_fixed.java
index de9af32..0f6f928 100644
--- a/tmp/ff0e17a2-56cc-4d4f-8102-68fb905a5d60_buggy.java
+++ b/tmp/df6aaae4-4bfc-40c1-a31c-82f53625665c_fixed.java
@@ -1,18 +1,23 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
+      } else if (child.getType() == Token.GETPROP) {
+        Node propNameNode = child.getSecondChild();
+        if (propNameNode != null && propNameNode.getType() == Token.STRING && "call".equals(propNameNode.getString())) {
+          Node target = child.getFirstChild();
+          if (target.getType() == Token.NAME) {
+            changed.add(target.getString());
+          }
+        }
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
