diff --git a/tmp/6f41cff7-8aa6-4c27-af9a-58065131a2a9_buggy.java b/tmp/7d8bed89-ce9f-40d2-84d9-7dc33696d5a4_fixed.java
index 46817a7..cb7f471 100644
--- a/tmp/6f41cff7-8aa6-4c27-af9a-58065131a2a9_buggy.java
+++ b/tmp/7d8bed89-ce9f-40d2-84d9-7dc33696d5a4_fixed.java
@@ -1,16 +1,25 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    RecordType thisRecord = this;
+    RecordType thatRecord = that.toMaybeRecordType();
+    for (String property : thisRecord.getOwnPropertyNames()) {
+        if (thatRecord.hasProperty(property) &&
+            thatRecord.getPropertyType(property).isEquivalentTo(
+                thisRecord.getPropertyType(property))) {
+            builder.addProperty(property, thisRecord.getPropertyType(property),
+                thisRecord.getPropertyNode(property));
         }
     }
-    return builder.build();
+    JSType merged = builder.build();
+    if (merged.isEquivalentTo(this)) {
+        return this;
+    } else if (merged.isEquivalentTo(that)) {
+        return that;
+    } else {
+        return registry.createUnionType(this, that);
+    }
 }
\ No newline at end of file
