diff --git a/tmp/e44a6b8c-f10b-45a7-a1b1-1192e01796a5_buggy.java b/tmp/bf4673ca-a8e4-47b0-94fa-2d309a57c7ab_fixed.java
index 14b78fb..ab8735b 100644
--- a/tmp/e44a6b8c-f10b-45a7-a1b1-1192e01796a5_buggy.java
+++ b/tmp/bf4673ca-a8e4-47b0-94fa-2d309a57c7ab_fixed.java
@@ -1,56 +1,39 @@
-    /**
-     * Finds the next text wrap position after <code>startPos</code> for the
-     * text in <code>text</code> with the column width <code>width</code>.
-     * The wrap point is the last position before startPos+width having a 
-     * whitespace character (space, \n, \r). If there is no whitespace character
-     * before startPos+width, it will return startPos+width.
-     *
-     * @param text The text being searched for the wrap position
-     * @param width width of the wrapped text
-     * @param startPos position from which to start the lookup whitespace
-     * character
-     * @return postion on which the text must be wrapped or -1 if the wrap
-     * position is at the end of the text
-     */
 protected int findWrapPos(String text, int width, int startPos)
 {
     int pos;
 
-        // the line ends before the max wrap pos or a new line char found
-        if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)
-                || ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))
+    // Check for new line or tab characters within the specified width
+    if (((pos = text.indexOf('\n', startPos)) != -1 && pos < startPos + width)
+            || ((pos = text.indexOf('\t', startPos)) != -1 && pos < startPos + width))
     {
         return pos + 1;
     }
     else if (startPos + width >= text.length())
     {
         return -1;
     }
 
-
-        // look for the last whitespace character before startPos+width
+    // Look for the last whitespace character before startPos+width
     pos = startPos + width;
 
     char c;
 
-        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
-                && (c != '\n') && (c != '\r'))
+    while (pos > startPos && ((c = text.charAt(pos - 1)) != ' ' && c != '\n' && c != '\r'))
     {
         --pos;
     }
 
-        // if we found it - just return
+    // If we found a whitespace character, return the position
     if (pos > startPos)
     {
         return pos;
     }
 
-        // if we didn't find one, simply chop at startPos+width
+    // If no whitespace character is found, return the position at the end of the width
     pos = startPos + width;
-        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
-               && (c != '\n') && (c != '\r'))
+    while (pos < text.length() && ((c = text.charAt(pos)) != ' ' && c != '\n' && c != '\r'))
     {
         ++pos;
     }
     return pos == text.length() ? -1 : pos;
 }
\ No newline at end of file
