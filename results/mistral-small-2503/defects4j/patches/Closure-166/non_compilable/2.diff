diff --git a/tmp/bab19b0c-956e-4399-97e3-5768acadc2b2_buggy.java b/tmp/d5ea0eae-da5c-4a09-942f-b7924697ec24_fixed.java
index 5f96616..ddc90ad 100644
--- a/tmp/bab19b0c-956e-4399-97e3-5768acadc2b2_buggy.java
+++ b/tmp/d5ea0eae-da5c-4a09-942f-b7924697ec24_fixed.java
@@ -1,20 +1,15 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      JSType objectType = constraint.toObjectType();
+      for (JSType propType : objectType.getProperties().values()) {
+        matchConstraint(propType);
+      }
     }
   }
\ No newline at end of file
