diff --git a/tmp/2a57ff84-e918-46cb-b822-5e6e1fe548db_buggy.java b/tmp/6c7c5345-b795-4b54-9284-f307eaabab10_fixed.java
index 0b7c52e..8750367 100644
--- a/tmp/2a57ff84-e918-46cb-b822-5e6e1fe548db_buggy.java
+++ b/tmp/6c7c5345-b795-4b54-9284-f307eaabab10_fixed.java
@@ -1,27 +1,28 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
         // We should never see a mix of numbers and strings.
         String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
+        if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
           if (propertiesToErrorFor.containsKey(name)) {
             compiler.report(JSError.make(
                 t.getSourceName(), child, propertiesToErrorFor.get(name),
                 Warnings.INVALIDATION, name,
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
+        } else {
+          // Ensure that the property is correctly processed and disambiguated
+          prop.setType(type);
+          prop.setName(name);
         }
       }
     }
\ No newline at end of file
