diff --git a/tmp/30fc12e5-df28-4156-9b85-57ea1b9513b1_buggy.java b/tmp/67775bac-fba1-4f5d-8600-0a38c5f21925_fixed.java
index 0b7c52e..93b1838 100644
--- a/tmp/30fc12e5-df28-4156-9b85-57ea1b9513b1_buggy.java
+++ b/tmp/67775bac-fba1-4f5d-8600-0a38c5f21925_fixed.java
@@ -1,27 +1,46 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
        child != null;
        child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
     String name = child.getString();
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
+    // Ensure that properties accessed via different notations are handled correctly
+    if (child.getType() == Token.BRACKET) {
+      // Handle bracket notation properties
+      Node key = child.getFirstChild();
+      if (key.getType() == Token.STRING) {
+        name = key.getString();
+        type = typeSystem.getType(getScope(), n, name);
+        prop = getProperty(name);
+        if (!prop.scheduleRenaming(child,
+                                   processProperty(t, prop, type, null))) {
+          if (propertiesToErrorFor.containsKey(name)) {
+            compiler.report(JSError.make(
+                t.getSourceName(), child, propertiesToErrorFor.get(name),
+                Warnings.INVALIDATION, name,
+                (type == null ? "null" : type.toString()), n.toString(), ""));
+          }
+        }
+      }
+    }
   }
 }
\ No newline at end of file
