diff --git a/tmp/38968e66-4a49-4328-ade2-eace7e3f7557_buggy.java b/tmp/65545264-b20c-40b5-859f-84660424d582_fixed.java
index 6e45f80..51c4754 100644
--- a/tmp/38968e66-4a49-4328-ade2-eace7e3f7557_buggy.java
+++ b/tmp/65545264-b20c-40b5-859f-84660424d582_fixed.java
@@ -1,21 +1,24 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Ensure the typeAdapter can adapt the requested type
+      if (typeAdapter instanceof TypeAdapterFactory) {
+        return ((TypeAdapterFactory) typeAdapter).create(gson, typeToken);
+      }
       return (TypeAdapter<T2>) typeAdapter;
-
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
