diff --git a/tmp/03e90686-3348-47a1-aed5-2bffb794f45c_buggy.java b/tmp/88cdc079-8caf-42b5-97fa-ee73f601f337_fixed.java
index 6e45f80..c791e2f 100644
--- a/tmp/03e90686-3348-47a1-aed5-2bffb794f45c_buggy.java
+++ b/tmp/88cdc079-8caf-42b5-97fa-ee73f601f337_fixed.java
@@ -1,21 +1,25 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Ensure that the type adapter is type-safe
+      if (typeAdapter instanceof TypeAdapterFactory) {
+        return (TypeAdapter<T2>) ((TypeAdapterFactory) typeAdapter).create(gson, typeToken);
+      }
       return (TypeAdapter<T2>) typeAdapter;
-
     }
-      @Override public String toString() {
+    @Override
+    public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
