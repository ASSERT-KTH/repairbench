diff --git a/tmp/d021b028-f1cb-4370-9962-3f556ae21be8_buggy.java b/tmp/1939de89-4e2a-40f3-9f39-1e2c728528dc_fixed.java
index 6e45f80..5710b30 100644
--- a/tmp/d021b028-f1cb-4370-9962-3f556ae21be8_buggy.java
+++ b/tmp/1939de89-4e2a-40f3-9f39-1e2c728528dc_fixed.java
@@ -1,21 +1,19 @@
-  /**
-   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
-   * that the deserialized type matches the type requested.
-   */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
+      // Use the Gson instance to get the correct TypeAdapter for the requested type
+      return (TypeAdapter<T2>) gson.getAdapter(TypeToken.get(requestedType));
+    }
 
-      }
-      @Override public String toString() {
+    @Override
+    public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
