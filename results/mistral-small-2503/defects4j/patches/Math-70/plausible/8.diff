diff --git a/tmp/6c49db30-dd8f-4b5e-bfba-6b90b204687c_buggy.java b/tmp/cf6543e6-d855-4d93-8298-9b49dc324ef1_fixed.java
index d931bce..c0aa985 100644
--- a/tmp/6c49db30-dd8f-4b5e-bfba-6b90b204687c_buggy.java
+++ b/tmp/cf6543e6-d855-4d93-8298-9b49dc324ef1_fixed.java
@@ -1,5 +1,31 @@
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        // Ensure the initial guess is within the bounds
+        if (initial < min || initial > max) {
+            throw new IllegalArgumentException("Initial guess must be within the bounds [min, max]");
+        }
+        // Implement the bisection solver logic here
+        // For simplicity, we will use a basic bisection method
+        double mid;
+        double fMid;
+        double fInitial = f.value(initial);
+
+        while ((max - min) > getAbsoluteAccuracy()) {
+            mid = (min + max) / 2;
+            fMid = f.value(mid);
+
+            if (fMid == 0.0) {
+                return mid;
+            }
+
+            if (fInitial * fMid < 0) {
+                max = mid;
+            } else {
+                min = mid;
+                fInitial = fMid;
+            }
+        }
+
+        return (min + max) / 2;
     }
\ No newline at end of file
