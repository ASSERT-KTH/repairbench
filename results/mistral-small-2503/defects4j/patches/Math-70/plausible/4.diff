diff --git a/tmp/6c1798c9-06c9-4158-a621-08ba87809fa8_buggy.java b/tmp/83abedd5-d4de-4a72-b70e-d735a0519217_fixed.java
index d931bce..f1274a4 100644
--- a/tmp/6c1798c9-06c9-4158-a621-08ba87809fa8_buggy.java
+++ b/tmp/83abedd5-d4de-4a72-b70e-d735a0519217_fixed.java
@@ -1,5 +1,36 @@
 /** {@inheritDoc} */
 public double solve(final UnivariateRealFunction f, double min, double max, double initial)
     throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+    // Ensure the initial guess is within the bounds
+    if (initial < min || initial > max) {
+        throw new IllegalArgumentException("Initial guess must be within the bounds [min, max]");
+    }
+
+    // Implement the bisection method to find the root
+    double midpoint;
+    double fa = f.value(min);
+    double fb = f.value(max);
+
+    if (fa * fb >= 0) {
+        throw new IllegalArgumentException("Function values at endpoints must have different signs");
+    }
+
+    while (max - min > getAbsoluteAccuracy()) {
+        midpoint = (min + max) / 2;
+        double fmid = f.value(midpoint);
+
+        if (fmid == 0) {
+            return midpoint;
+        }
+
+        if (fa * fmid < 0) {
+            max = midpoint;
+            fb = fmid;
+        } else {
+            min = midpoint;
+            fa = fmid;
+        }
+    }
+
+    return (min + max) / 2;
 }
\ No newline at end of file
