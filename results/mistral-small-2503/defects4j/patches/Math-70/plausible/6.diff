diff --git a/tmp/a558f11c-65f0-436a-8c25-62af0e92b5b2_buggy.java b/tmp/5fb57f76-947d-4892-890e-a6d8d8e8fe17_fixed.java
index d931bce..aea32be 100644
--- a/tmp/a558f11c-65f0-436a-8c25-62af0e92b5b2_buggy.java
+++ b/tmp/5fb57f76-947d-4892-890e-a6d8d8e8fe17_fixed.java
@@ -1,5 +1,35 @@
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        // Ensure the initial value is within the bounds
+        if (initial < min || initial > max) {
+            throw new IllegalArgumentException("Initial value must be within the bounds [min, max]");
+        }
+
+        // Implement the bisection method
+        double result = initial;
+        double fa = f.value(min);
+        double fb = f.value(max);
+
+        // Ensure the function changes sign between min and max
+        if (fa * fb >= 0) {
+            throw new IllegalArgumentException("Function must change sign over the interval [min, max]");
+        }
+
+        while (max - min > getAbsoluteAccuracy()) {
+            result = (min + max) / 2;
+            double fr = f.value(result);
+
+            if (fr == 0) {
+                return result;
+            } else if (fa * fr < 0) {
+                max = result;
+                fb = fr;
+            } else {
+                min = result;
+                fa = fr;
+            }
+        }
+
+        return result;
     }
\ No newline at end of file
