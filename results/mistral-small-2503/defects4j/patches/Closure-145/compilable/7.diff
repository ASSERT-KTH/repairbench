diff --git a/tmp/f3c8f3be-241e-473d-a3fb-4dd664bf0437_buggy.java b/tmp/2d6f5091-28ac-450e-8608-a7d3dda8794c_fixed.java
index 57f69c5..7fd5d26 100644
--- a/tmp/f3c8f3be-241e-473d-a3fb-4dd664bf0437_buggy.java
+++ b/tmp/2d6f5091-28ac-450e-8608-a7d3dda8794c_fixed.java
@@ -1,12 +1,17 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+      // Check if the node is either a FUNCTION or DO.
+      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+          // If the node is a FUNCTION or DO, check if it has a label or block.
+          if (n.getFirstChild() != null && n.getFirstChild().getType() == Token.LABEL) {
+              // If the first child is a label, ensure it is followed by a FUNCTION or DO.
+              Node labelChild = n.getFirstChild().getNext();
+              return labelChild != null && (labelChild.getType() == Token.FUNCTION || labelChild.getType() == Token.DO);
+          }
+          return true;
+      }
+      return false;
   }
\ No newline at end of file
