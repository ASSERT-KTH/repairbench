diff --git a/tmp/ad194e6e-35ee-4eb1-a4e8-b89927bc21a9_buggy.java b/tmp/540abf54-bb22-4379-8338-4fac8f2bf7ea_fixed.java
index 19fd63e..eb0e9a1 100644
--- a/tmp/ad194e6e-35ee-4eb1-a4e8-b89927bc21a9_buggy.java
+++ b/tmp/540abf54-bb22-4379-8338-4fac8f2bf7ea_fixed.java
@@ -1,24 +1,28 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
 
-          return NodeUtil.isExpressionNode(maybeExpr);
+        // Check if the child is an expression node
+        if (NodeUtil.isExpressionNode(maybeExpr)) {
+          // Additional check to ensure it's not an EXPR_RESULT
+          return maybeExpr.getType() != Token.EXPR_RESULT;
+        }
       }
     }
 
     return false;
   }
\ No newline at end of file
