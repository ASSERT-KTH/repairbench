diff --git a/tmp/2c859156-5542-40a8-b7db-b57383ebe2d5_buggy.java b/tmp/1c1672dc-eb56-4b56-ac2b-5e1037792397_fixed.java
index 5b8a4d2..ad2d660 100644
--- a/tmp/2c859156-5542-40a8-b7db-b57383ebe2d5_buggy.java
+++ b/tmp/1c1672dc-eb56-4b56-ac2b-5e1037792397_fixed.java
@@ -1,12 +1,15 @@
-    /**
-     * Creates a period from the given millisecond duration with the standard period type
-     * and ISO rules, ensuring that the calculation is performed with the time-only period type.
-     * <p>
-     * The calculation uses the hour, minute, second and millisecond fields.
-     *
-     * @param duration  the duration, in milliseconds
-     */
 protected BasePeriod(long duration) {
-        this(duration, null, null);
-        // bug [3264409]
+    this.duration = duration;
+    this.type = PeriodType.time();
+    this.chrono = ISOChronology.getInstance();
+    this.value = new long[]{
+        0,  // years
+        0,  // months
+        0,  // weeks
+        0,  // days
+        duration / DateTimeConstants.MILLIS_PER_HOUR,  // hours
+        (duration % DateTimeConstants.MILLIS_PER_HOUR) / DateTimeConstants.MILLIS_PER_MINUTE,  // minutes
+        ((duration % DateTimeConstants.MILLIS_PER_HOUR) % DateTimeConstants.MILLIS_PER_MINUTE) / DateTimeConstants.MILLIS_PER_SECOND,  // seconds
+        ((duration % DateTimeConstants.MILLIS_PER_HOUR) % DateTimeConstants.MILLIS_PER_MINUTE) % DateTimeConstants.MILLIS_PER_SECOND  // milliseconds
+    };
 }
\ No newline at end of file
