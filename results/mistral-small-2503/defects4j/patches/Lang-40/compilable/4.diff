diff --git a/tmp/7725f34e-375d-4b42-b569-c3d8da43a764_buggy.java b/tmp/a2962027-95a4-4725-81bf-4d70c2da62bc_fixed.java
index 562001a..ba5bb9b 100644
--- a/tmp/7725f34e-375d-4b42-b569-c3d8da43a764_buggy.java
+++ b/tmp/a2962027-95a4-4725-81bf-4d70c2da62bc_fixed.java
@@ -1,29 +1,6 @@
-    /**
-     * <p>Checks if String contains a search String irrespective of case,
-     * handling <code>null</code>. Case-insensitivity is defined as by
-     * {@link String#equalsIgnoreCase(String)}.
-     *
-     * <p>A <code>null</code> String will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.contains(null, *) = false
-     * StringUtils.contains(*, null) = false
-     * StringUtils.contains("", "") = true
-     * StringUtils.contains("abc", "") = true
-     * StringUtils.contains("abc", "a") = true
-     * StringUtils.contains("abc", "z") = false
-     * StringUtils.contains("abc", "A") = true
-     * StringUtils.contains("abc", "Z") = false
-     * </pre>
-     *
-     * @param str  the String to check, may be null
-     * @param searchStr  the String to find, may be null
-     * @return true if the String contains the search String irrespective of
-     * case or false if not or <code>null</code> string input
-     */
 public static boolean containsIgnoreCase(String str, String searchStr) {
     if (str == null || searchStr == null) {
         return false;
     }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+    return contains(str.toUpperCase(Locale.ROOT), searchStr.toUpperCase(Locale.ROOT));
 }
\ No newline at end of file
