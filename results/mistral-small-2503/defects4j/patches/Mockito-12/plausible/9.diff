diff --git a/tmp/c0679ddf-665e-4356-b1e1-e0b9a2b3d7af_buggy.java b/tmp/67d1a33a-bca6-42f7-b472-4b169f71e628_fixed.java
index bada2b6..f5cb051 100644
--- a/tmp/c0679ddf-665e-4356-b1e1-e0b9a2b3d7af_buggy.java
+++ b/tmp/67d1a33a-bca6-42f7-b472-4b169f71e628_fixed.java
@@ -1,16 +1,19 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
  *
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic instanceof ParameterizedType) {
+        ParameterizedType parameterizedType = (ParameterizedType) generic;
+        Type actual = parameterizedType.getActualTypeArguments()[0];
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
