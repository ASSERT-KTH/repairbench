diff --git a/tmp/9dacf44a-2684-43bc-93a1-3df0c4bbcd64_buggy.java b/tmp/fa53678e-3398-4117-8702-295a7da56038_fixed.java
index 4bbd561..199e0b7 100644
--- a/tmp/9dacf44a-2684-43bc-93a1-3df0c4bbcd64_buggy.java
+++ b/tmp/fa53678e-3398-4117-8702-295a7da56038_fixed.java
@@ -1,37 +1,46 @@
-    /**
-     * {@inheritDoc}
-     */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
     // TODO: Protect from ArrayIndexOutOfBounds
     if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
         char firstChar = input.charAt(start);
         if (firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if (end >= input.length()) {
+            return 0;
+        }
+
         int entityValue;
         try {
             if (isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch (NumberFormatException nfe) {
             return 0;
         }
 
+        if (entityValue > 0xFFFF) {
+            // Handle supplementary characters
+            entityValue -= 0x10000;
+            out.write(Character.highSurrogate(entityValue));
+            out.write(Character.lowSurrogate(entityValue));
+        } else {
             out.write(entityValue);
+        }
+
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
     return 0;
 }
\ No newline at end of file
