diff --git a/tmp/a9940ed0-a86f-4883-abbe-1e51ddbfac37_buggy.java b/tmp/a1fc2d8c-fdc9-40d6-8eb7-2fad11c6a050_fixed.java
index de9af32..1a33f2b 100644
--- a/tmp/a9940ed0-a86f-4883-abbe-1e51ddbfac37_buggy.java
+++ b/tmp/a1fc2d8c-fdc9-40d6-8eb7-2fad11c6a050_fixed.java
@@ -1,18 +1,30 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
       }
+    } else if (node.getType() == Token.GETPROP) {
+      Node obj = node.getFirstChild();
+      Node prop = obj.getNext();
+      if (prop.getType() == Token.NAME) {
+        changed.add(prop.getString());
+      }
+    } else if (node.getType() == Token.DOT) {
+      Node obj = node.getFirstChild();
+      Node prop = obj.getNext();
+      if (prop.getType() == Token.NAME) {
+        changed.add(prop.getString());
+      }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
