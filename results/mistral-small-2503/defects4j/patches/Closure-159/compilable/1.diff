diff --git a/tmp/1a40ed22-9b38-4e07-957d-54123881dffe_buggy.java b/tmp/e6450197-d8a4-44a0-b5d3-e30eedb54575_fixed.java
index de9af32..fe33ce2 100644
--- a/tmp/1a40ed22-9b38-4e07-957d-54123881dffe_buggy.java
+++ b/tmp/e6450197-d8a4-44a0-b5d3-e30eedb54575_fixed.java
@@ -1,18 +1,22 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
-    // For each referenced function, add a new reference
-    if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
-      }
-    }
 
+    // Recursively process each child node
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+      // Check if the current node is a function call
+      if (c.getType() == Token.CALL) {
+        // Get the first child of the call node, which should be the function being called
+        Node child = c.getFirstChild();
+        if (child != null && child.getType() == Token.NAME) {
+          // Add the function name to the changed set
+          changed.add(child.getString());
+        }
+      }
+      // Recursively process the child node
       findCalledFunctions(c, changed);
     }
   }
\ No newline at end of file
