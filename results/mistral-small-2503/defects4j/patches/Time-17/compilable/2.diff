diff --git a/tmp/9d92509f-c768-4028-832e-72332ceec09f_buggy.java b/tmp/62f88d7f-2e28-4844-b251-6026c5c98a39_fixed.java
index 03b03d7..9832d5b 100644
--- a/tmp/9d92509f-c768-4028-832e-72332ceec09f_buggy.java
+++ b/tmp/62f88d7f-2e28-4844-b251-6026c5c98a39_fixed.java
@@ -1,25 +1,34 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      *
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
+        // Evaluate 3 hours before and after to work out if anything is happening
         long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
         long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+
         if (instantBefore == instantAfter) {
             return instant;  // not an overlap (less than is a gap, equal is normal case)
         }
 
-        // work out range of instants that have duplicate local times
+        // Work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        // Check if the local time is ambiguous
+        long localBefore = convertUTCToLocal(instant - DateTimeConstants.MILLIS_PER_HOUR);
+        long localAfter = convertUTCToLocal(instant + DateTimeConstants.MILLIS_PER_HOUR);
+
+        if (localBefore == localAfter) {
+            // The local time is ambiguous
+            if (earlierOrLater) {
+                return convertLocalToUTC(local, false, instantAfter);
+            } else {
+                return convertLocalToUTC(local, false, instantBefore);
+            }
+        }
+
+        return instant;
     }
\ No newline at end of file
