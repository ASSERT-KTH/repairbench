diff --git a/tmp/64e145db-fd98-4b7f-84d8-83cc16301a06_buggy.java b/tmp/2398690c-7a06-4cf3-92a9-1095cc25374e_fixed.java
index 111ba5e..69ff43a 100644
--- a/tmp/64e145db-fd98-4b7f-84d8-83cc16301a06_buggy.java
+++ b/tmp/2398690c-7a06-4cf3-92a9-1095cc25374e_fixed.java
@@ -1,9 +1,39 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
     } else if (isArray(o1)) {
         return isArray(o2) && areArraysEqual(o1, o2);
     } else {
         return o1.equals(o2);
     }
 }
+
+private static boolean isArray(Object obj) {
+    return obj.getClass().isArray();
+}
+
+private static boolean areArraysEqual(Object arr1, Object arr2) {
+    if (arr1.getClass() != arr2.getClass()) {
+        return false;
+    }
+
+    if (arr1 instanceof int[]) {
+        return java.util.Arrays.equals((int[]) arr1, (int[]) arr2);
+    } else if (arr1 instanceof long[]) {
+        return java.util.Arrays.equals((long[]) arr1, (long[]) arr2);
+    } else if (arr1 instanceof short[]) {
+        return java.util.Arrays.equals((short[]) arr1, (short[]) arr2);
+    } else if (arr1 instanceof byte[]) {
+        return java.util.Arrays.equals((byte[]) arr1, (byte[]) arr2);
+    } else if (arr1 instanceof char[]) {
+        return java.util.Arrays.equals((char[]) arr1, (char[]) arr2);
+    } else if (arr1 instanceof float[]) {
+        return java.util.Arrays.equals((float[]) arr1, (float[]) arr2);
+    } else if (arr1 instanceof double[]) {
+        return java.util.Arrays.equals((double[]) arr1, (double[]) arr2);
+    } else if (arr1 instanceof boolean[]) {
+        return java.util.Arrays.equals((boolean[]) arr1, (boolean[]) arr2);
+    } else {
+        return java.util.Arrays.deepEquals((Object[]) arr1, (Object[]) arr2);
+    }
+}
\ No newline at end of file
