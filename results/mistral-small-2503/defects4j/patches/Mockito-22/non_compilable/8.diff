diff --git a/tmp/e52098ac-5962-44ba-85f5-f62a25099090_buggy.java b/tmp/eec485d4-a794-475e-b325-1ed127debecf_fixed.java
index 111ba5e..bdac81e 100644
--- a/tmp/e52098ac-5962-44ba-85f5-f62a25099090_buggy.java
+++ b/tmp/eec485d4-a794-475e-b325-1ed127debecf_fixed.java
@@ -1,9 +1,37 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+        return areArraysEqual(o1, o2);
     } else {
         return o1.equals(o2);
     }
 }
+
+private static boolean areArraysEqual(Object o1, Object o2) {
+    if (o1.getClass() != o2.getClass()) {
+        return false;
+    }
+
+    if (o1 instanceof Object[]) {
+        return java.util.Arrays.deepEquals((Object[]) o1, (Object[]) o2);
+    } else if (o1 instanceof int[]) {
+        return java.util.Arrays.equals((int[]) o1, (int[]) o2);
+    } else if (o1 instanceof long[]) {
+        return java.util.Arrays.equals((long[]) o1, (long[]) o2);
+    } else if (o1 instanceof short[]) {
+        return java.util.Arrays.equals((short[]) o1, (short[]) o2);
+    } else if (o1 instanceof byte[]) {
+        return java.util.Arrays.equals((byte[]) o1, (byte[]) o2);
+    } else if (o1 instanceof char[]) {
+        return java.util.Arrays.equals((char[]) o1, (char[]) o2);
+    } else if (o1 instanceof boolean[]) {
+        return java.util.Arrays.equals((boolean[]) o1, (boolean[]) o2);
+    } else if (o1 instanceof float[]) {
+        return java.util.Arrays.equals((float[]) o1, (float[]) o2);
+    } else if (o1 instanceof double[]) {
+        return java.util.Arrays.equals((double[]) o1, (double[]) o2);
+    } else {
+        return false;
+    }
+}
\ No newline at end of file
