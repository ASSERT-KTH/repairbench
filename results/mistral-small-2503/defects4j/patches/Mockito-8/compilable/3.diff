diff --git a/tmp/af55b7a2-c04b-4ae1-a06e-778df18a8376_buggy.java b/tmp/e96e9adb-d5de-42a4-a4e5-7b2ff49d07ce_fixed.java
index 42b58d0..047ad8b 100644
--- a/tmp/af55b7a2-c04b-4ae1-a06e-778df18a8376_buggy.java
+++ b/tmp/e96e9adb-d5de-42a4-a4e5-7b2ff49d07ce_fixed.java
@@ -1,19 +1,27 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    Type rawType = parameterizedType.getRawType();
+    if (!(rawType instanceof Class)) {
+        return;
+    }
+    Class<?> rawClass = (Class<?>) rawType;
+    TypeVariable<?>[] typeParameters = rawClass.getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+
+    // Ensure that the lengths of typeParameters and actualTypeArguments match
+    int minLength = Math.min(typeParameters.length, actualTypeArguments.length);
+    for (int i = 0; i < minLength; i++) {
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
