diff --git a/tmp/8c84706f-0d56-4cc2-845e-e8aaad717677_buggy.java b/tmp/3f95f191-b2ca-4844-b8a3-9fadfcbcca83_fixed.java
index b5d94e0..5c72762 100644
--- a/tmp/8c84706f-0d56-4cc2-845e-e8aaad717677_buggy.java
+++ b/tmp/3f95f191-b2ca-4844-b8a3-9fadfcbcca83_fixed.java
@@ -1,26 +1,31 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
     do {
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
             Node next = c.getNext();
             c = next;
         }
 
         visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+        Preconditions.checkState(visits < 10000, "too many iterations");
+
+        // Check if the node should be revisited
+        if (!shouldRetraverse(node)) {
+            break;
+        }
+    } while (true);
 
     exitNode(node);
 }
\ No newline at end of file
