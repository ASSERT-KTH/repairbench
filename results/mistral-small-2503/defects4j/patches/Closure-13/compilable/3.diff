diff --git a/tmp/242629f9-9487-4674-8a78-e90bb919023c_buggy.java b/tmp/4f31c15e-f3d2-43ec-ad63-42d168be50f5_fixed.java
index b5d94e0..420664c 100644
--- a/tmp/242629f9-9487-4674-8a78-e90bb919023c_buggy.java
+++ b/tmp/4f31c15e-f3d2-43ec-ad63-42d168be50f5_fixed.java
@@ -1,26 +1,31 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while (c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
     visit(node);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+    Preconditions.checkState(visits < 10000, "too many iterations");
+
+    // Break the loop if shouldRetraverse returns false to avoid infinite loop
+    if (!shouldRetraverse(node)) {
+      break;
+    }
+  } while (true);
 
   exitNode(node);
 }
\ No newline at end of file
