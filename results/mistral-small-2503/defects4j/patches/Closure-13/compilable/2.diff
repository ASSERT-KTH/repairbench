diff --git a/tmp/f45671e4-31fc-47e7-b3fd-7c5124f05307_buggy.java b/tmp/521e0e70-4740-49c5-8b2d-2d7a9a7497b4_fixed.java
index b5d94e0..ccb8a51 100644
--- a/tmp/f45671e4-31fc-47e7-b3fd-7c5124f05307_buggy.java
+++ b/tmp/521e0e70-4740-49c5-8b2d-2d7a9a7497b4_fixed.java
@@ -1,26 +1,30 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
         return;
     }
 
     int visits = 0;
     do {
         Node c = node.getFirstChild();
         while (c != null) {
             traverse(c);
             Node next = c.getNext();
             c = next;
         }
 
         visit(node);
         visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+        // Add a check to prevent excessive iterations
+        if (visits >= 10000) {
+            throw new IllegalStateException("Too many iterations");
+        }
+
     } while (shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
