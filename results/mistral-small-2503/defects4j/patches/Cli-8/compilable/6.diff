diff --git a/tmp/2cafb5db-d025-4f03-a66e-0d6f517a04f5_buggy.java b/tmp/f14aa897-c9aa-4484-bcad-71747a7f7b8c_fixed.java
index 8e93a5e..d87845f 100644
--- a/tmp/2cafb5db-d025-4f03-a66e-0d6f517a04f5_buggy.java
+++ b/tmp/f14aa897-c9aa-4484-bcad-71747a7f7b8c_fixed.java
@@ -1,43 +1,33 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // all following lines must be padded with nextLineTabStop space characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
+        // Trim the text from the current position and apply padding
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, nextLineTabStop);
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
         }
 
+        // Ensure the substring is trimmed correctly before appending
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
