diff --git a/tmp/4d4502c6-a033-4fbb-8219-a6bea7bd9f0d_buggy.java b/tmp/9ee2918f-c09b-423a-8b82-220a761e3caa_fixed.java
index dc93be3..215d490 100644
--- a/tmp/4d4502c6-a033-4fbb-8219-a6bea7bd9f0d_buggy.java
+++ b/tmp/9ee2918f-c09b-423a-8b82-220a761e3caa_fixed.java
@@ -1,14 +1,20 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
+
+    // Check if the tag is a known empty tag and force an end tag
+    if (Tag.isKnownEmptyTag(el.tagName())) {
+        tokeniser.emit(new Token.EndTag(el.tagName()));
+    }
+
     return el;
 }
\ No newline at end of file
