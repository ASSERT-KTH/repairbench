diff --git a/tmp/b30da3c4-8bb0-480e-8e71-a2b0bfb50244_buggy.java b/tmp/982ec13a-950e-40a2-872b-e7b89f75cf85_fixed.java
index dc93be3..40ceb63 100644
--- a/tmp/b30da3c4-8bb0-480e-8e71-a2b0bfb50244_buggy.java
+++ b/tmp/982ec13a-950e-40a2-872b-e7b89f75cf85_fixed.java
@@ -1,14 +1,20 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
 
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
+
+        // Ensure end tag is emitted for known empty tags
+        if (Tag.isKnownEmptyTag(el.tagName())) {
+            tokeniser.emit(new Token.EndTag(el.tagName()));
+        }
+
         return el;
     }
\ No newline at end of file
