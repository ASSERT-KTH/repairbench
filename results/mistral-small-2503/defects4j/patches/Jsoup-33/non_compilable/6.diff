diff --git a/tmp/c54ce539-55b7-4a1b-bf2b-b531c1648fc3_buggy.java b/tmp/ef7171af-0509-4f78-bc81-c0182edc4da7_fixed.java
index dc93be3..5c2f475 100644
--- a/tmp/c54ce539-55b7-4a1b-bf2b-b531c1648fc3_buggy.java
+++ b/tmp/ef7171af-0509-4f78-bc81-c0182edc4da7_fixed.java
@@ -1,14 +1,23 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
 
+    // Handle known empty blocks
+    Tag tag = Tag.valueOf(startTag.name(), Tag.Parser.HTML);
+    if (tag.isSelfClosing()) {
+        Element el = new Element(tag, baseUri, startTag.attributes);
+        insert(el);
+        tokeniser.emit(new Token.EndTag(tag.name()));  // Ensure end tag is emitted for known empty blocks
+        return el;
+    }
+
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
