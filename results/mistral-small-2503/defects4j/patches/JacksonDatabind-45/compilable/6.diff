diff --git a/tmp/d3f0d430-8a0c-4671-be18-df4f64e9706f_buggy.java b/tmp/522bda0c-72b6-49c2-b789-50306e995024_fixed.java
index 0dbce00..0433455 100644
--- a/tmp/d3f0d430-8a0c-4671-be18-df4f64e9706f_buggy.java
+++ b/tmp/522bda0c-72b6-49c2-b789-50306e995024_fixed.java
@@ -1,33 +1,37 @@
 @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
         if (format != null) {
-
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+        } else {
+            // Fallback to default behavior based on ObjectMapper configuration
+            if (serializers.getConfig().isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                return withFormat(Boolean.TRUE, null);
+            } else {
+                return withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601));
+            }
         }
     }
     return this;
 }
\ No newline at end of file
