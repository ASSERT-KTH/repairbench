diff --git a/tmp/0459f8bf-bd72-4184-ba03-543b52909822_buggy.java b/tmp/b4b2e167-d305-4a7e-b4e3-91503783b9cf_fixed.java
index 0dbce00..4802b0a 100644
--- a/tmp/0459f8bf-bd72-4184-ba03-543b52909822_buggy.java
+++ b/tmp/b4b2e167-d305-4a7e-b4e3-91503783b9cf_fixed.java
@@ -1,33 +1,33 @@
 @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
+public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
-
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
+                final String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
-        return this;
+
+    // Default behavior: use user configuration
+    if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        return withFormat(Boolean.TRUE, null);
+    } else {
+        return withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale()));
+    }
 }
\ No newline at end of file
