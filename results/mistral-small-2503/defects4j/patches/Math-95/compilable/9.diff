diff --git a/tmp/4d6c327d-3c6b-42c0-95d6-19c5a5321a4e_buggy.java b/tmp/f00ca99c-3d8f-496f-ae30-2a57fe031b5c_fixed.java
index 25c13b3..c1d01b6 100644
--- a/tmp/4d6c327d-3c6b-42c0-95d6-19c5a5321a4e_buggy.java
+++ b/tmp/f00ca99c-3d8f-496f-ae30-2a57fe031b5c_fixed.java
@@ -1,15 +1,21 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      *
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
+        if (d <= 2.0) {
+            // Handle special cases for d = 1 or d = 2
+            // For d = 2, a common approach is to use a large value or a different formula
+            ret = Double.POSITIVE_INFINITY; // or another appropriate value
+        } else {
             // use mean
             ret = d / (d - 2.0);
+        }
         return ret;
     }
\ No newline at end of file
