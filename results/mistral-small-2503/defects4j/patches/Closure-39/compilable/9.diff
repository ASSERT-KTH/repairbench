diff --git a/tmp/0013a48c-8f5f-4f14-8bc4-72d1caada3b0_buggy.java b/tmp/dce80147-258a-45a4-b916-89b92da385ab_fixed.java
index e4d90e7..1a71c88 100644
--- a/tmp/0013a48c-8f5f-4f14-8bc4-72d1caada3b0_buggy.java
+++ b/tmp/dce80147-258a-45a4-b916-89b92da385ab_fixed.java
@@ -1,45 +1,50 @@
   @Override
   String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
       return getReferenceName();
     } else if (prettyPrint) {
       // Don't pretty print recursively.
       prettyPrint = false;
 
       // Use a tree set so that the properties are sorted.
       Set<String> propertyNames = Sets.newTreeSet();
       for (ObjectType current = this;
            current != null && !current.isNativeObjectType() &&
                propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
            current = current.getImplicitPrototype()) {
         propertyNames.addAll(current.getOwnPropertyNames());
       }
 
       StringBuilder sb = new StringBuilder();
       sb.append("{");
 
       int i = 0;
       for (String property : propertyNames) {
         if (i > 0) {
           sb.append(", ");
         }
 
         sb.append(property);
         sb.append(": ");
         sb.append(getPropertyType(property).toString());
 
         ++i;
         if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
           sb.append(", ...");
           break;
         }
       }
 
+      // Ensure the closing brace is added even if properties are truncated
+      if (i >= MAX_PRETTY_PRINTED_PROPERTIES) {
         sb.append("}");
+      } else {
+        sb.append("}");
+      }
 
       prettyPrint = true;
       return sb.toString();
     } else {
       return "{...}";
     }
   }
\ No newline at end of file
