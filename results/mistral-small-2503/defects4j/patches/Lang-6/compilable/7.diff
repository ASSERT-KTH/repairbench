diff --git a/tmp/c8e122ba-935d-41f7-b415-81bb513b3479_buggy.java b/tmp/bde9e97d-2515-4be5-98d4-db10fc6b367e_fixed.java
index 4c1ed27..50acf5f 100644
--- a/tmp/c8e122ba-935d-41f7-b415-81bb513b3479_buggy.java
+++ b/tmp/bde9e97d-2515-4be5-98d4-db10fc6b367e_fixed.java
@@ -1,32 +1,32 @@
     /**
      * Translate an input onto a Writer. This is intentionally final as its algorithm is
      * tightly coupled with the abstract method of this class.
      *
      * @param input CharSequence that is being translated
      * @param out Writer to translate the text to
      * @throws IOException if and only if the Writer produces an IOException
      */
     public final void translate(CharSequence input, Writer out) throws IOException {
         if (out == null) {
             throw new IllegalArgumentException("The Writer must not be null");
         }
         if (input == null) {
             return;
         }
         int pos = 0;
         int len = input.length();
         while (pos < len) {
             int consumed = translate(input, pos, out);
             if (consumed == 0) {
                 char[] c = Character.toChars(Character.codePointAt(input, pos));
                 out.write(c);
                 pos += c.length;
                 continue;
             }
-//          // contract with translators is that they have to understand codepoints 
-//          // and they just took care of a surrogate pair
+            // contract with translators is that they have to understand codepoints
+            // and they just took care of a surrogate pair
             for (int pt = 0; pt < consumed; pt++) {
                 pos += Character.charCount(Character.codePointAt(input, pos));
             }
         }
     }
\ No newline at end of file
