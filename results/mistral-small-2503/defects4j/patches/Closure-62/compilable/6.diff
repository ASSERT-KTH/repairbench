diff --git a/tmp/2362cb99-805c-4408-bcd4-28ea3e5c4d5e_buggy.java b/tmp/8f1e186a-564f-43ae-9d4c-6198abafa59e_fixed.java
index 904dba7..b46f38c 100644
--- a/tmp/2362cb99-805c-4408-bcd4-28ea3e5c4d5e_buggy.java
+++ b/tmp/8f1e186a-564f-43ae-9d4c-6198abafa59e_fixed.java
@@ -1,46 +1,41 @@
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
         b.append(error.sourceName);
         if (error.lineNumber > 0) {
             b.append(':');
             b.append(error.lineNumber);
         }
         b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
         b.append(sourceExcerpt);
         b.append('\n');
         int charno = error.getCharno();
 
         // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
+        // charno == sourceExcerpt.length() means something is missing
         // at the end of the line
         if (excerpt.equals(LINE)
             && 0 <= charno && charno < sourceExcerpt.length()) {
             for (int i = 0; i < charno; i++) {
-          char c = sourceExcerpt.charAt(i);
-          if (Character.isWhitespace(c)) {
-            b.append(c);
-          } else {
-            b.append(' ');
-          }
+                b.append(sourceExcerpt.charAt(i));
             }
             b.append("^\n");
         }
     }
     return b.toString();
 }
\ No newline at end of file
