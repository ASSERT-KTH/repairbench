diff --git a/tmp/4f9140af-5e5d-4f1f-a5fb-302c7a5678fa_buggy.java b/tmp/9a156dbe-6286-4c92-aadf-0ea234c89bab_fixed.java
index 66e3d01..2a3ad01 100644
--- a/tmp/4f9140af-5e5d-4f1f-a5fb-302c7a5678fa_buggy.java
+++ b/tmp/9a156dbe-6286-4c92-aadf-0ea234c89bab_fixed.java
@@ -1,34 +1,39 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
-      case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
+      case Token.PLUS:
+        return val.getChildCount() == 2 &&
+               isValidDefineValue(val.getFirstChild(), defines) &&
+               isValidDefineValue(val.getLastChild(), defines);
 
-      // Uniary operators are valid if the child is valid.
-      case Token.NOT:
+      // Unary operators are valid if the child is valid.
       case Token.NEG:
-        return isValidDefineValue(val.getFirstChild(), defines);
+      case Token.NOT:
+        return val.getChildCount() == 1 && isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
+        } else {
+          return defines.contains(val.getName());
         }
     }
     return false;
   }
\ No newline at end of file
