diff --git a/tmp/52df73b4-a69a-4096-b4ae-c55a0232b373_buggy.java b/tmp/c605140f-3142-4825-b0df-6d20ce0130df_fixed.java
index 66e3d01..348f5d3 100644
--- a/tmp/52df73b4-a69a-4096-b4ae-c55a0232b373_buggy.java
+++ b/tmp/c605140f-3142-4825-b0df-6d20ce0130df_fixed.java
@@ -1,34 +1,34 @@
-  /**
-   * Determines whether the given value may be assigned to a define.
-   *
-   * @param val The value being assigned.
-   * @param defines The list of names of existing defines.
-   */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
-      case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
+        return val.getChildCount() == 2 &&
+               isValidDefineValue(val.getFirstChild(), defines) &&
+               isValidDefineValue(val.getLastChild(), defines);
 
-      // Uniary operators are valid if the child is valid.
+      // Unary operators are valid if the child is valid.
+      case Token.BITNOT:
       case Token.NOT:
       case Token.NEG:
-        return isValidDefineValue(val.getFirstChild(), defines);
+        return val.getChildCount() == 1 &&
+               isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
-      case Token.GETPROP:
-        if (val.isQualifiedName()) {
         return defines.contains(val.getQualifiedName());
-        }
+
+      case Token.GETPROP:
+        return val.getChildCount() == 2 &&
+               isValidDefineValue(val.getFirstChild(), defines) &&
+               isValidDefineValue(val.getLastChild(), defines);
     }
     return false;
   }
\ No newline at end of file
