diff --git a/tmp/63bc446f-f0ea-403a-86d7-0f88a2a5098e_buggy.java b/tmp/1f332f27-91bb-4151-adf6-78e80db42e8d_fixed.java
index 01967cc..9054ab9 100644
--- a/tmp/63bc446f-f0ea-403a-86d7-0f88a2a5098e_buggy.java
+++ b/tmp/1f332f27-91bb-4151-adf6-78e80db42e8d_fixed.java
@@ -1,35 +1,25 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
-        public boolean useForType(JavaType t)
-        {
+public boolean useForType(JavaType t) {
     switch (_appliesFor) {
         case NON_CONCRETE_AND_ARRAYS:
             while (t.isArrayType()) {
                 t = t.getContentType();
             }
             // fall through
         case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
             return (t.getRawClass() == Object.class)
                 || (!t.isConcrete()
                     // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                    && !TreeNode.class.isAssignableFrom(t.getRawClass()));
 
         case NON_FINAL:
             while (t.isArrayType()) {
                 t = t.getContentType();
             }
             // [Issue#88] Should not apply to JSON tree models:
             return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+
         default:
             //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
             return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file
