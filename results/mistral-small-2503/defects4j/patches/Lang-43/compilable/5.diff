diff --git a/tmp/4e05afc2-ec77-488d-944d-436bbd337951_buggy.java b/tmp/ba2eb472-fca4-4687-b07e-1062c744cb66_fixed.java
index b6b11b6..852ae75 100644
--- a/tmp/4e05afc2-ec77-488d-944d-436bbd337951_buggy.java
+++ b/tmp/ba2eb472-fca4-4687-b07e-1062c744cb66_fixed.java
@@ -1,38 +1,33 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
     if (escapingOn && c[start] == QUOTE) {
         return appendTo == null ? null : appendTo.append(QUOTE);
     }
     int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+    int i = pos.getIndex();
+    while (i < pattern.length()) {
+        if (escapingOn && i + 1 < pattern.length() && c[i] == '\\' && c[i + 1] == QUOTE) {
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+            }
+            pos.setIndex(i + 2);
             lastHold = pos.getIndex();
-                continue;
-            }
-            switch (c[pos.getIndex()]) {
+            i += 2;
+        } else {
+            switch (c[i]) {
                 case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                    if (appendTo != null) {
+                        appendTo.append(c, lastHold, i - lastHold);
+                    }
+                    pos.setIndex(i + 1);
+                    return appendTo;
                 default:
-                next(pos);
+                    pos.setIndex(i + 1);
+                    i++;
             }
         }
-        throw new IllegalArgumentException(
-                "Unterminated quoted string at position " + start);
+    }
+    throw new IllegalArgumentException("Unterminated quoted string at position " + start);
 }
\ No newline at end of file
