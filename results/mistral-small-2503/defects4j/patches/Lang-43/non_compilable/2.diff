diff --git a/tmp/41250c64-70cb-464d-9ae0-58e166f643b6_buggy.java b/tmp/02e0c534-5734-41d5-a4ee-bbee3870e42c_fixed.java
index b6b11b6..bd40cef 100644
--- a/tmp/41250c64-70cb-464d-9ae0-58e166f643b6_buggy.java
+++ b/tmp/02e0c534-5734-41d5-a4ee-bbee3870e42c_fixed.java
@@ -1,38 +1,32 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
-        char[] c = pattern.toCharArray();
-        if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+    if (escapingOn && pattern.charAt(start) == QUOTE) {
+        if (appendTo != null) {
+            appendTo.append(QUOTE);
         }
+        pos.setIndex(start + 1);
+        return appendTo;
+    }
+
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+        if (escapingOn && i + 1 < pattern.length() && pattern.charAt(i) == ESCAPE_CHAR && pattern.charAt(i + 1) == QUOTE) {
+            if (appendTo != null) {
+                appendTo.append(pattern, lastHold, i - lastHold).append(QUOTE);
+            }
+            pos.setIndex(i + 2);
             lastHold = pos.getIndex();
+            i++; // Skip the escaped quote character
             continue;
         }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+        if (pattern.charAt(i) == QUOTE) {
+            if (appendTo != null) {
+                appendTo.append(pattern, lastHold, i - lastHold);
             }
+            pos.setIndex(i + 1);
+            return appendTo;
         }
-        throw new IllegalArgumentException(
-                "Unterminated quoted string at position " + start);
+    }
+    throw new IllegalArgumentException("Unterminated quoted string at position " + start);
 }
\ No newline at end of file
