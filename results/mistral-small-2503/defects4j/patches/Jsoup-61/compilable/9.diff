diff --git a/tmp/93949d13-4e81-4f21-95e9-211967c4286e_buggy.java b/tmp/2b7daf3b-a5d5-486b-9025-4069a0153401_fixed.java
index 139579d..98e9eb4 100644
--- a/tmp/93949d13-4e81-4f21-95e9-211967c4286e_buggy.java
+++ b/tmp/2b7daf3b-a5d5-486b-9025-4069a0153401_fixed.java
@@ -1,43 +1,47 @@
-    // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
     // if both lengths are equal, only need compare the className with the attribute
     if (len == wantLen) {
         return className.equalsIgnoreCase(classAttr);
     }
 
     // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
         if (Character.isWhitespace(classAttr.charAt(i))) {
             if (inClass) {
                 // white space ends a class name, compare it with the requested one, ignore case
                 if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
             }
         } else {
             if (!inClass) {
                 // we're in a class name : keep the start of the substring
                 inClass = true;
                 start = i;
             }
         }
     }
 
     // check the last entry
     if (inClass && len - start == wantLen) {
         return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
 
+    // Check for the case where the class name is the last part of the attribute
+    if (inClass && classAttr.charAt(len - 1) != ' ' && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+        return true;
+    }
+
     return false;
 }
\ No newline at end of file
