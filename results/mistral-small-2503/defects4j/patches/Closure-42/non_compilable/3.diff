diff --git a/tmp/776cad67-40f7-492c-96d4-49d9c5f58802_buggy.java b/tmp/a23e7535-88e6-4d63-a311-2c0c2ae3afe6_fixed.java
index 4d0be80..7197110 100644
--- a/tmp/776cad67-40f7-492c-96d4-49d9c5f58802_buggy.java
+++ b/tmp/a23e7535-88e6-4d63-a311-2c0c2ae3afe6_fixed.java
@@ -1,10 +1,20 @@
     @Override
     Node processForInLoop(ForInLoop loopNode) {
+        // Check if the loop is a "for each" loop
+        if (loopNode.isForEach()) {
+            // Handle the "for each" loop by returning an error node or a specific transformation.
+            // This example assumes we return an error node for unsupported language extensions.
+            return newNode(
+                Token.ERROR,
+                new StringNode("unsupported language extension: for each")
+            );
+        }
 
-        // Return the bare minimum to put the AST in a valid state.
+        // Return the bare minimum to put the AST in a valid state for regular for-in loops.
         return newNode(
             Token.FOR,
             transform(loopNode.getIterator()),
             transform(loopNode.getIteratedObject()),
-          transformBlock(loopNode.getBody()));
+            transformBlock(loopNode.getBody())
+        );
     }
\ No newline at end of file
