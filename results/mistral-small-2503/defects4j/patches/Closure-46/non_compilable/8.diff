diff --git a/tmp/9610bb59-7128-4e30-83b6-32afcde2bf64_buggy.java b/tmp/613089db-90fc-41de-bd12-a19c1216a1c3_fixed.java
index 46817a7..6fd24cb 100644
--- a/tmp/9610bb59-7128-4e30-83b6-32afcde2bf64_buggy.java
+++ b/tmp/613089db-90fc-41de-bd12-a19c1216a1c3_fixed.java
@@ -1,16 +1,28 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+
+    // Add all properties from the current record type
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+      builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
     }
+
+    // Add properties from the other record type if they are not already present or have a compatible type
+    for (String property : that.toMaybeRecordType().getProperties().keySet()) {
+      if (!properties.containsKey(property)) {
+        builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property), null);
+      } else {
+        JSType currentType = getPropertyType(property);
+        JSType thatType = that.toMaybeRecordType().getPropertyType(property);
+        if (!currentType.isEquivalentTo(thatType)) {
+          builder.addProperty(property, registry.createUnionType(currentType, thatType), null);
         }
+      }
+    }
+
     return builder.build();
   }
\ No newline at end of file
