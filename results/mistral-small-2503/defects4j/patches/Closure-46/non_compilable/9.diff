diff --git a/tmp/1d7a8364-871b-41e1-85ac-615b7acdd1df_buggy.java b/tmp/31f274eb-c8ee-4810-8bdd-8721c0deeb36_fixed.java
index 46817a7..b51f612 100644
--- a/tmp/1d7a8364-871b-41e1-85ac-615b7acdd1df_buggy.java
+++ b/tmp/31f274eb-c8ee-4810-8bdd-8721c0deeb36_fixed.java
@@ -1,16 +1,21 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+
+  // Add all properties from the current record type
   for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
   }
+
+  // Add all properties from the other record type that are not already in the builder
+  for (String property : that.toMaybeRecordType().getProperties().keySet()) {
+    if (!properties.containsKey(property)) {
+      builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property), that.toMaybeRecordType().getPropertyNode(property));
     }
+  }
+
   return builder.build();
 }
\ No newline at end of file
