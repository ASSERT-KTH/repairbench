diff --git a/tmp/df1b34d0-d55a-44a8-894b-db0df2de48ab_buggy.java b/tmp/1e33a158-6c94-4ce0-8ca4-3334acf05345_fixed.java
index 46817a7..45aae05 100644
--- a/tmp/df1b34d0-d55a-44a8-894b-db0df2de48ab_buggy.java
+++ b/tmp/1e33a158-6c94-4ce0-8ca4-3334acf05345_fixed.java
@@ -1,16 +1,28 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
+
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+
+  // Add all properties from this record type
   for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
   }
+
+  // Add properties from the other record type if they are not already present or if they are equivalent
+  for (String property : that.toMaybeRecordType().getProperties().keySet()) {
+    if (!properties.containsKey(property)) {
+      builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property), that.toMaybeRecordType().getPropertyNode(property));
+    } else {
+      JSType thisType = getPropertyType(property);
+      JSType thatType = that.toMaybeRecordType().getPropertyType(property);
+      if (!thisType.isEquivalentTo(thatType)) {
+        builder.addProperty(property, registry.createUnionType(thisType, thatType), getPropertyNode(property));
       }
+    }
+  }
+
   return builder.build();
 }
\ No newline at end of file
