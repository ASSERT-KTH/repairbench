diff --git a/tmp/147d2b99-20e4-4c7d-ae77-6677fcd8359c_buggy.java b/tmp/4f6a1f4f-b39d-47d0-a67f-d8c8e630ec10_fixed.java
index 46817a7..baa8909 100644
--- a/tmp/147d2b99-20e4-4c7d-ae77-6677fcd8359c_buggy.java
+++ b/tmp/4f6a1f4f-b39d-47d0-a67f-d8c8e630ec10_fixed.java
@@ -1,16 +1,22 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    RecordType thatRecord = that.toMaybeRecordType();
+
+    // Add properties from the current record type
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+      builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
     }
+
+    // Add properties from the other record type
+    for (String property : thatRecord.getProperties().keySet()) {
+      if (!properties.containsKey(property)) {
+        builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));
       }
+    }
+
     return builder.build();
   }
\ No newline at end of file
