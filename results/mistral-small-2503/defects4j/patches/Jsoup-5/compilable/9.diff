diff --git a/tmp/2059ff6f-2df6-4340-a3fb-e7de9ac194c4_buggy.java b/tmp/4a2d7aa3-97b1-41ed-a886-e0e3612130d4_fixed.java
index 39dd8e7..1cbbd50 100644
--- a/tmp/2059ff6f-2df6-4340-a3fb-e7de9ac194c4_buggy.java
+++ b/tmp/4a2d7aa3-97b1-41ed-a886-e0e3612130d4_fixed.java
@@ -1,30 +1,32 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    if (key.length() != 0) {
         return Attribute.createFromEncoded(key, value);
-        else {
+    } else {
+        // Ensure that the token queue is properly managed and avoid out-of-bounds errors
+        if (!tq.isEmpty()) {
             tq.consume();
-                
+        }
         return null;
     }
 }
\ No newline at end of file
