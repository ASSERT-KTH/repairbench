diff --git a/tmp/23737a00-0ef8-4196-9aef-e3ff36b496c7_buggy.java b/tmp/2cb8c29b-25b0-4270-a721-e27226140526_fixed.java
index 351a97a..4b9b095 100644
--- a/tmp/23737a00-0ef8-4196-9aef-e3ff36b496c7_buggy.java
+++ b/tmp/2cb8c29b-25b0-4270-a721-e27226140526_fixed.java
@@ -1,18 +1,39 @@
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
+        ShapeList other = (ShapeList) obj;
 
+        // Assuming ShapeList has a method to get the list of shapes
+        List<Shape> thisShapes = this.getShapes();
+        List<Shape> otherShapes = other.getShapes();
+
+        if (thisShapes.size() != otherShapes.size()) {
+            return false;
+        }
+
+        for (int i = 0; i < thisShapes.size(); i++) {
+            Shape thisShape = thisShapes.get(i);
+            Shape otherShape = otherShapes.get(i);
+            if (thisShape == null) {
+                if (otherShape != null) {
+                    return false;
+                }
+            } else if (!thisShape.equals(otherShape)) {
+                return false;
+            }
+        }
+
+        return true;
     }
\ No newline at end of file
