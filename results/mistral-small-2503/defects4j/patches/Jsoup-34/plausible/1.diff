diff --git a/tmp/43ec183c-33a8-478b-8a04-0a6d948de8ce_buggy.java b/tmp/521680f7-80b7-4009-a43f-8f17771d3ffe_fixed.java
index 21f64c6..ebb0732 100644
--- a/tmp/43ec183c-33a8-478b-8a04-0a6d948de8ce_buggy.java
+++ b/tmp/521680f7-80b7-4009-a43f-8f17771d3ffe_fixed.java
@@ -1,23 +1,23 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
+        if (seq.length() == 0) return 0; // Empty sequence should return 0
         char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        for (int offset = pos; offset <= length - seq.length(); offset++) {
+            // scan to first instance of startChar:
+            if (input[offset] == startChar) {
                 int i = offset + 1;
                 int last = i + seq.length() - 1;
-            if (offset < length) {
+                if (last <= length) {
                     for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                     if (i == last) // found full sequence
                         return offset - pos;
                 }
             }
+        }
         return -1;
     }
\ No newline at end of file
