diff --git a/tmp/9a706a51-4c11-460b-958e-e10576246c10_buggy.java b/tmp/58db1032-5589-480d-a633-67e24988a88d_fixed.java
index 21f64c6..6b4c299 100644
--- a/tmp/9a706a51-4c11-460b-958e-e10576246c10_buggy.java
+++ b/tmp/58db1032-5589-480d-a633-67e24988a88d_fixed.java
@@ -1,23 +1,27 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
     // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
+    for (int offset = pos; offset <= length - seq.length(); offset++) {
         // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        if (input[offset] == startChar) {
             int i = offset + 1;
             int last = i + seq.length() - 1;
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                for (int j = 1; i < last && j < seq.length(); i++, j++) {
+                    if (seq.charAt(j) != input[i]) {
+                        break;
+                    }
+                }
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
+    }
     return -1;
 }
\ No newline at end of file
