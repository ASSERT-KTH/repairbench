diff --git a/tmp/9b846f8d-6aab-45ee-8c3e-bbcfc1e90259_buggy.java b/tmp/d97a2904-7299-4e7f-9a8e-c210168f6218_fixed.java
index 2608424..4648210 100644
--- a/tmp/9b846f8d-6aab-45ee-8c3e-bbcfc1e90259_buggy.java
+++ b/tmp/d97a2904-7299-4e7f-9a8e-c210168f6218_fixed.java
@@ -1,39 +1,26 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
-        if (index < 0 ||
-            index >= totalSize) {
+        if (index < 0 || index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
         int count = 0;
-        for (int i = 0; i < last; i++) {
-            int idx = 0;
+        for (int i = 0; i < dimension; i++) {
             final int offset = uniCounterOffset[i];
-            while (count <= index) {
+            while (count + offset <= index) {
                 count += offset;
-                ++idx;
+                indices[i]++;
             }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
         }
 
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
-
         return indices;
     }
\ No newline at end of file
