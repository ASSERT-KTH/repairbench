diff --git a/tmp/fbec11a1-2b0c-411e-a050-8b0d4ce1424a_buggy.java b/tmp/43485041-1151-487c-a4ff-12e70ac17202_fixed.java
index 1530b34..f5ed625 100644
--- a/tmp/fbec11a1-2b0c-411e-a050-8b0d4ce1424a_buggy.java
+++ b/tmp/43485041-1151-487c-a4ff-12e70ac17202_fixed.java
@@ -1,23 +1,36 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
         Node astParameters = functionNode.getFirstChild().getNext();
         Node body = astParameters.getNext();
         FunctionType functionType = (FunctionType) functionNode.getJSType();
         if (functionType != null) {
             Node jsDocParameters = functionType.getParametersNode();
             if (jsDocParameters != null) {
                 Node jsDocParameter = jsDocParameters.getFirstChild();
                 for (Node astParameter : astParameters.children()) {
                     if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                        defineSlot(astParameter, functionNode, jsDocParameter.getJSType(), true);
                         jsDocParameter = jsDocParameter.getNext();
                     } else {
                         defineSlot(astParameter, functionNode, null, true);
                     }
                 }
             }
         }
+
+        // Check for redefined variables within the function body
+        for (Node declaration : body.children()) {
+            if (declaration.isVar() || declaration.isConst() || declaration.isLet()) {
+                Node varNode = declaration.getFirstChild();
+                while (varNode != null) {
+                    String varName = varNode.getString();
+                    if (varName != null && astParameters.containsName(varName)) {
+                        report(JsError.DUP_VAR_DECLARATION, varNode);
+                    }
+                    varNode = varNode.getNext();
+                }
+            }
+        }
     } // end declareArguments
\ No newline at end of file
