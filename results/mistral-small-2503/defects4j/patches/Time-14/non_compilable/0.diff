diff --git a/tmp/6d9d7bf8-6c0f-412b-857a-2c54b58a4797_buggy.java b/tmp/775208d8-5052-47f1-a2df-8815e3152ef6_fixed.java
index 10616db..8981bc6 100644
--- a/tmp/6d9d7bf8-6c0f-412b-857a-2c54b58a4797_buggy.java
+++ b/tmp/775208d8-5052-47f1-a2df-8815e3152ef6_fixed.java
@@ -1,19 +1,38 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+            // Handle the case where the field is not contiguous
+            int[] newValues = new int[values.length];
+            System.arraycopy(values, 0, newValues, 0, values.length);
+
+            // Adjust the field value
+            newValues[fieldIndex] += valueToAdd;
+
+            // Handle end-of-month adjustments
+            if (fieldIndex == DateTimeFieldType.monthOfYear().getFieldIndex()) {
+                int month = newValues[fieldIndex];
+                int year = newValues[DateTimeFieldType.year().getFieldIndex()];
+                int dayOfMonth = newValues[DateTimeFieldType.dayOfMonth().getFieldIndex()];
+                int maxDayOfMonth = iChronology.monthLength(year, month);
+
+                if (dayOfMonth > maxDayOfMonth) {
+                    newValues[DateTimeFieldType.dayOfMonth().getFieldIndex()] = maxDayOfMonth;
+                }
+            }
+
+            return newValues;
         }
     }
\ No newline at end of file
