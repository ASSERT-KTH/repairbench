diff --git a/tmp/0e9ad73e-9d0b-4663-8ff6-9e705232640b_buggy.java b/tmp/be70f5ed-36ca-434b-b459-4758f304d9a4_fixed.java
index 10616db..5414dfc 100644
--- a/tmp/0e9ad73e-9d0b-4663-8ff6-9e705232640b_buggy.java
+++ b/tmp/be70f5ed-36ca-434b-b459-4758f304d9a4_fixed.java
@@ -1,19 +1,29 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+        // Adjust the day of the month if necessary
+        int month = iChronology.getMonthOfYear(instant);
+        int dayOfMonth = iChronology.getDayOfMonth(instant);
+        int maxDayOfMonth = iChronology.getMaximumValue(partial.getFieldType(partial.size() - 1).getField(iChronology));
+
+        if (dayOfMonth > maxDayOfMonth) {
+            dayOfMonth = maxDayOfMonth;
+        }
+
+        return iChronology.get(partial, iChronology.withMonthOfYear(instant, month).withDayOfMonth(instant, dayOfMonth));
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
