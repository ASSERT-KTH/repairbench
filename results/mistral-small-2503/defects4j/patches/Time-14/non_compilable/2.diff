diff --git a/tmp/5bfbb6b4-4865-4731-8ce3-4f34e7006df5_buggy.java b/tmp/d321f1eb-b31c-488b-a405-1b00bc381475_fixed.java
index 10616db..69e732b 100644
--- a/tmp/5bfbb6b4-4865-4731-8ce3-4f34e7006df5_buggy.java
+++ b/tmp/d321f1eb-b31c-488b-a405-1b00bc381475_fixed.java
@@ -1,19 +1,31 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
+
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+            int[] result = iChronology.get(partial, instant);
+
+            // Handle end-of-month adjustments
+            if (partial.isSupported(ISOField.DAY_OF_MONTH)) {
+                int dayOfMonth = partial.get(ISOField.DAY_OF_MONTH);
+                int maxDayOfMonth = iChronology.getMaximumValue(ISOField.DAY_OF_MONTH, instant);
+                if (dayOfMonth > maxDayOfMonth) {
+                    result[partial.indexOf(ISOField.DAY_OF_MONTH)] = maxDayOfMonth;
+                }
+            }
+
+            return result;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
