diff --git a/tmp/f96502bb-1d79-48a9-a17e-e76b5d40b3ac_buggy.java b/tmp/1d0dd11e-fc6f-4b0c-ae4d-fc190af20b6d_fixed.java
index 10616db..75d91cf 100644
--- a/tmp/f96502bb-1d79-48a9-a17e-e76b5d40b3ac_buggy.java
+++ b/tmp/1d0dd11e-fc6f-4b0c-ae4d-fc190af20b6d_fixed.java
@@ -1,19 +1,69 @@
-    //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
+
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+
+            // Adjust the instant correctly
+            int fieldType = partial.getFieldType(fieldIndex);
+            if (fieldType == DateTimeFieldType.monthOfYear()) {
+                // Handle month addition/subtraction
+                int month = partial.getMonthOfYear();
+                int year = partial.getYear();
+                int dayOfMonth = partial.getDayOfMonth();
+
+                // Calculate the new month and year
+                int newMonth = month + valueToAdd;
+                int newYear = year + (newMonth - 1) / 12;
+                newMonth = (newMonth - 1) % 12 + 1;
+
+                // Adjust the day of month if necessary
+                int maxDayOfMonth = iChronology.monthLength(newYear, newMonth);
+                if (dayOfMonth > maxDayOfMonth) {
+                    dayOfMonth = maxDayOfMonth;
+                }
+
+                values[partial.getFieldIndex(DateTimeFieldType.monthOfYear())] = newMonth;
+                values[partial.getFieldIndex(DateTimeFieldType.year())] = newYear;
+                values[partial.getFieldIndex(DateTimeFieldType.dayOfMonth())] = dayOfMonth;
+            } else if (fieldType == DateTimeFieldType.dayOfMonth()) {
+                // Handle day addition/subtraction
+                int dayOfMonth = partial.getDayOfMonth();
+                int month = partial.getMonthOfYear();
+                int year = partial.getYear();
+
+                // Calculate the new day of month
+                int newDayOfMonth = dayOfMonth + valueToAdd;
+
+                // Adjust the day of month if necessary
+                int maxDayOfMonth = iChronology.monthLength(year, month);
+                if (newDayOfMonth > maxDayOfMonth) {
+                    newDayOfMonth = maxDayOfMonth;
+                } else if (newDayOfMonth < 1) {
+                    month--;
+                    if (month < 1) {
+                        month = 12;
+                        year--;
+                    }
+                    maxDayOfMonth = iChronology.monthLength(year, month);
+                    newDayOfMonth = maxDayOfMonth + newDayOfMonth;
+                }
+
+                values[partial.getFieldIndex(DateTimeFieldType.dayOfMonth())] = newDayOfMonth;
+                values[partial.getFieldIndex(DateTimeFieldType.monthOfYear())] = month;
+                values[partial.getFieldIndex(DateTimeFieldType.year())] = year;
+            }
+
+            return values;
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
