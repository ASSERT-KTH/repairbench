diff --git a/tmp/a18cf975-0fb1-4077-a5bd-aba086ecca9a_buggy.java b/tmp/b63204e8-d020-48ab-9911-336be884c46f_fixed.java
index bfa2423..c1cfbe7 100644
--- a/tmp/a18cf975-0fb1-4077-a5bd-aba086ecca9a_buggy.java
+++ b/tmp/b63204e8-d020-48ab-9911-336be884c46f_fixed.java
@@ -1,23 +1,21 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
  * @return an array representing the random sample.
  * @throws NotStrictlyPositiveException if {@code sampleSize} is not
  * positive.
  */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
-            throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
-                    sampleSize);
+        throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES, sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    final List<T> out = new ArrayList<>(sampleSize);
 
     for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
+        out.add(sample());
     }
 
-        return out;
-
+    return out.toArray((T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize));
 }
\ No newline at end of file
