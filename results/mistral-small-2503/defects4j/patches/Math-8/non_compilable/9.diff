diff --git a/tmp/4f08ac80-a9f9-4814-bcac-26025ac627ac_buggy.java b/tmp/7a9df933-8a07-4fbd-8374-f2b5519c0d36_fixed.java
index bfa2423..b3b1523 100644
--- a/tmp/4f08ac80-a9f9-4814-bcac-26025ac627ac_buggy.java
+++ b/tmp/7a9df933-8a07-4fbd-8374-f2b5519c0d36_fixed.java
@@ -1,23 +1,24 @@
     /**
      * Generate a random sample from the distribution.
      *
      * @param sampleSize the number of random values to generate.
      * @return an array representing the random sample.
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        // Use an ArrayList to store the sample values
+        List<T> sampleList = new ArrayList<>(sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
+            sampleList.add(sample());
         }
 
-        return out;
-
+        // Convert the list to an array
+        return sampleList.toArray((T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize));
     }
\ No newline at end of file
