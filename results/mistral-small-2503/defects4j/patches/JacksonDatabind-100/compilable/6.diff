diff --git a/tmp/72f55840-3c6d-4da2-ae22-e4c8c412947e_buggy.java b/tmp/59f5f00b-2baa-4481-9843-b7ae8ec1308d_fixed.java
index fc8c302..4f8db05 100644
--- a/tmp/72f55840-3c6d-4da2-ae22-e4c8c412947e_buggy.java
+++ b/tmp/59f5f00b-2baa-4481-9843-b7ae8ec1308d_fixed.java
@@ -1,23 +1,33 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
     // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
         // [databind#2096]: although `binaryValue()` works for real binary node
         // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n instanceof TextNode) {
+            String text = ((TextNode) n).asText();
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException e) {
+                // Handle the case where the Base64 encoding is broken
+                throw new IOException("Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), e);
+            }
+        } else {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
+    }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file
