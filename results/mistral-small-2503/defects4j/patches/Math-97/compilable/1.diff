diff --git a/tmp/a85c5e9b-f6a3-4d2c-b217-60f7fe628bb0_buggy.java b/tmp/77d7fe1d-e234-434f-9cfb-0048eda57e13_fixed.java
index 88647d1..2a2b9b0 100644
--- a/tmp/a85c5e9b-f6a3-4d2c-b217-60f7fe628bb0_buggy.java
+++ b/tmp/77d7fe1d-e234-434f-9cfb-0048eda57e13_fixed.java
@@ -1,44 +1,40 @@
-    /**
-     * Find a zero in the given interval.
-     * <p>
-     * Requires that the values of the function at the endpoints have opposite
-     * signs. An <code>IllegalArgumentException</code> is thrown if this is not
-     * the case.</p>
-     * 
-     * @param min the lower bound for the interval.
-     * @param max the upper bound for the interval.
-     * @return the value where the function is zero
-     * @throws MaxIterationsExceededException if the maximum iteration count is exceeded
-     * @throws FunctionEvaluationException if an error occurs evaluating the
-     * function 
-     * @throws IllegalArgumentException if min is not less than max or the
-     * signs of the values of the function at the endpoints are not opposites
-     */
 public double solve(double min, double max) throws MaxIterationsExceededException,
         FunctionEvaluationException {
 
     clearResult();
     verifyInterval(min, max);
 
     double ret = Double.NaN;
 
     double yMin = f.value(min);
     double yMax = f.value(max);
 
     // Verify bracketing
     double sign = yMin * yMax;
-        if (sign >= 0) {
+    if (Math.abs(sign) < 1e-10) {  // Check if both values are close to zero
+        // neither value is close to zero and min and max do not bracket root.
+        throw new IllegalArgumentException
+        ("Function values at endpoints do not have different signs." +
+                "  Endpoints: [" + min + "," + max + "]" +
+                "  Values: [" + yMin + "," + yMax + "]");
+    } else if (sign >= 0) {
         // check if either value is close to a zero
+        if (Math.abs(yMin) < 1e-10) {
+            ret = min;
+        } else if (Math.abs(yMax) < 1e-10) {
+            ret = max;
+        } else {
             // neither value is close to zero and min and max do not bracket root.
             throw new IllegalArgumentException
             ("Function values at endpoints do not have different signs." +
                     "  Endpoints: [" + min + "," + max + "]" +
                     "  Values: [" + yMin + "," + yMax + "]");
+        }
     } else {
         // solve using only the first endpoint as initial guess
         ret = solve(min, yMin, max, yMax, min, yMin);
         // either min or max is a root
     }
 
     return ret;
 }
\ No newline at end of file
