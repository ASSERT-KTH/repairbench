diff --git a/tmp/167c1404-f2f0-485a-8515-27c3c93d0c08_buggy.java b/tmp/f9ccbb3e-10b2-45f8-b74e-39b07d5c7a06_fixed.java
index 939f49b..6e912d5 100644
--- a/tmp/167c1404-f2f0-485a-8515-27c3c93d0c08_buggy.java
+++ b/tmp/f9ccbb3e-10b2-45f8-b74e-39b07d5c7a06_fixed.java
@@ -1,21 +1,24 @@
 private boolean isPrototypePropertyAssign(Node assign) {
     Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+    if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign) && n.getType() == Token.GETPROP) {
         // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+        boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
             Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+            while (child != null) {
+                if (child.getType() == Token.STRING && child.getString().equals("prototype")) {
+                    return true;
+                }
+                child = child.getNext();
+            }
+        } else {
+            Node child = n.getFirstChild().getNext();
+            if (child.getType() == Token.STRING && child.getString().equals("prototype")) {
                 return true;
             }
         }
     }
 
     return false;
 }
\ No newline at end of file
