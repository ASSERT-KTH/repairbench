diff --git a/tmp/8979cfa9-c850-496f-a144-20cccfdf5118_buggy.java b/tmp/66ad82f1-1651-483b-81e1-1475b7ccc078_fixed.java
index 6cfa79b..2dc55ac 100644
--- a/tmp/8979cfa9-c850-496f-a144-20cccfdf5118_buggy.java
+++ b/tmp/66ad82f1-1651-483b-81e1-1475b7ccc078_fixed.java
@@ -1,12 +1,19 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X < <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double threshold = 20.0;
+        double deviation = (x - mean) / standardDeviation;
+        if (deviation > threshold) {
+            return 1.0;
+        } else if (deviation < -threshold) {
+            return 0.0;
+        } else {
+            return 0.5 * (1.0 + Erf.erf(deviation / Math.sqrt(2.0)));
+        }
     }
\ No newline at end of file
