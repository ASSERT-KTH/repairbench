diff --git a/tmp/5513d2d3-004b-4e69-8f3f-5dbc6e55e35c_buggy.java b/tmp/4d2c7d38-31c9-4ab0-8b61-57e1f048d9a6_fixed.java
index 6cfa79b..2eab744 100644
--- a/tmp/5513d2d3-004b-4e69-8f3f-5dbc6e55e35c_buggy.java
+++ b/tmp/4d2c7d38-31c9-4ab0-8b61-57e1f048d9a6_fixed.java
@@ -1,12 +1,17 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>.
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double z = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+    if (z > 20.0) {
+        return 1.0;
+    } else if (z < -20.0) {
+        return 0.0;
+    }
+    return 0.5 * (1.0 + Erf.erf(z));
 }
\ No newline at end of file
