diff --git a/tmp/c0b034d9-2d03-4ad5-a601-3129c402e61a_buggy.java b/tmp/70a24c3a-4122-48cf-a36a-db89964582de_fixed.java
index c9da1b7..8292bcb 100644
--- a/tmp/c0b034d9-2d03-4ad5-a601-3129c402e61a_buggy.java
+++ b/tmp/70a24c3a-4122-48cf-a36a-db89964582de_fixed.java
@@ -1,33 +1,33 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
-
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
-
+            if (!oldOne.equals(newOne)) {
                 throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                         + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
+            }
             // otherwise, which one to choose?
             // new type more generic, use old
             // new type more specific, use it
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
