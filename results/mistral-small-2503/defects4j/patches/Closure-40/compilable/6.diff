diff --git a/tmp/9b575867-d9dd-4542-8bb1-22f32a79a182_buggy.java b/tmp/35de7483-c7ea-41ee-aecf-bb320ef5ad49_fixed.java
index 670114d..68f1132 100644
--- a/tmp/9b575867-d9dd-4542-8bb1-22f32a79a182_buggy.java
+++ b/tmp/35de7483-c7ea-41ee-aecf-bb320ef5ad49_fixed.java
@@ -1,48 +1,63 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
+    Node callNode = n.getFirstChild();
+    if (callNode.isGetProp() && callNode.getFirstChild().getString().equals("goog.inherits")) {
+      Node arg0 = n.getChildAtIndex(1);
+      Node arg1 = n.getChildAtIndex(2);
+      if (arg0.isGetProp() && arg1.isGetProp()) {
+        String className = arg0.getFirstChild().getString();
+        String parentClassName = arg1.getFirstChild().getString();
+        JsName classNameInfo = getName(className, true);
+        JsName parentClassNameInfo = getName(parentClassName, true);
+        if (classNameInfo != null && parentClassNameInfo != null) {
+          recordPrototypeSet(classNameInfo.name, parentClassNameInfo.name, n);
+        }
+      }
+    } else {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null && ns.onlyAffectsClassDef) {
         JsName name = getName(ns.name, false);
         if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
         }
       }
     }
   }
+}
\ No newline at end of file
