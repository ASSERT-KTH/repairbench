diff --git a/tmp/1ed4f6aa-1503-441b-9263-f94280658f5a_buggy.java b/tmp/4089bd21-925b-4612-bbcb-567a6e1fe6b1_fixed.java
index 670114d..754f064 100644
--- a/tmp/1ed4f6aa-1503-441b-9263-f94280658f5a_buggy.java
+++ b/tmp/4089bd21-925b-4612-bbcb-567a6e1fe6b1_fixed.java
@@ -1,48 +1,62 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
-
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
+    if (nameNode != null && nameNode.isName() && "goog.inherits".equals(nameNode.getString())) {
+      Node child = n.getFirstChild().getNext();
+      if (child != null && child.isGetProp()) {
+        Node obj = child.getFirstChild();
+        Node prop = child.getLastChild();
+        if (obj.isName() && prop.isName()) {
+          JsName className = getName(obj.getString(), true);
+          JsName baseClassName = getName(prop.getString(), true);
+          if (className != null && baseClassName != null) {
+            recordInheritance(className, baseClassName);
+          }
+        }
+      }
+    } else {
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null && ns.onlyAffectsClassDef) {
         JsName name = getName(ns.name, false);
         if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
         }
       }
     }
   }
+}
\ No newline at end of file
