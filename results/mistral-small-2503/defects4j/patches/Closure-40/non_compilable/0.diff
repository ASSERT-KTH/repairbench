diff --git a/tmp/8a12c2c9-052d-44cc-ae31-eefff1023e86_buggy.java b/tmp/3b9789d6-193a-4e8b-8ce0-2c2e2d2723a2_fixed.java
index 670114d..2a828c3 100644
--- a/tmp/8a12c2c9-052d-44cc-ae31-eefff1023e86_buggy.java
+++ b/tmp/3b9789d6-193a-4e8b-8ce0-2c2e2d2723a2_fixed.java
@@ -1,48 +1,57 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
-          if (name != null) {
+          JsName nameInfo = getName(ns.name, false);
+          if (nameInfo != null) {
             refNodes.add(new ClassDefiningFunctionNode(
-              name, n, parent, parent.getParent()));
+                nameInfo, n, parent, parent.getParent()));
+          }
+        } else if (n.isName() && n.getString().equals("goog.inherits")) {
+          // Handle the special case for goog.inherits
+          Node arg0 = n.getChildAt(0);
+          Node arg1 = n.getChildAt(1);
+          if (arg0.isName() && arg1.isName()) {
+            String childClass = arg0.getString();
+            String parentClass = arg1.getString();
+            recordPrototypeSet(parentClass, childClass, n);
           }
         }
       }
     }
\ No newline at end of file
