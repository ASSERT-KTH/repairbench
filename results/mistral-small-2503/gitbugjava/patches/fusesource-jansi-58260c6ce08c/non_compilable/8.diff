diff --git a/tmp/46f885a0-efb1-4a90-abdb-848f9235b6e1_buggy.java b/tmp/95517131-e2c9-4012-9f4b-342927884429_fixed.java
index 712f277..b74183c 100644
--- a/tmp/46f885a0-efb1-4a90-abdb-848f9235b6e1_buggy.java
+++ b/tmp/95517131-e2c9-4012-9f4b-342927884429_fixed.java
@@ -1,48 +1,44 @@
-    /**
-     * Renders the given input to the target Appendable.
-     *
-     * @param input
-     *            source to render
-     * @param target
-     *            render onto this target Appendable.
-     * @return the given Appendable
-     * @throws IOException
-     *             If an I/O error occurs
-     */
 public static Appendable render(final String input, Appendable target) throws IOException {
-
     int i = 0;
     int j, k;
 
     while (true) {
         j = input.indexOf(BEGIN_TOKEN, i);
         if (j == -1) {
             if (i == 0) {
                 target.append(input);
                 return target;
             }
             target.append(input.substring(i));
             return target;
         }
+
+        // Check if there is an END_TOKEN before the BEGIN_TOKEN
+        if (j > 0 && input.indexOf(END_TOKEN, 0, j) != -1) {
+            throw new IllegalArgumentException("Invalid input: END_TOKEN appears before BEGIN_TOKEN");
+        }
+
         target.append(input.substring(i, j));
         k = input.indexOf(END_TOKEN, j);
 
         if (k == -1) {
-                target.append(input);
+            target.append(input.substring(j));
             return target;
         }
+
         j += BEGIN_TOKEN_LEN;
         String spec = input.substring(j, k);
 
         String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
         if (items.length == 1) {
-                target.append(input);
+            target.append(input.substring(j));
             return target;
         }
+
         String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
 
         target.append(replacement);
 
         i = k + END_TOKEN_LEN;
     }
 }
\ No newline at end of file
