diff --git a/tmp/2b930774-89d0-4e4e-9185-daa190ab29fd_buggy.java b/tmp/6de9d68a-5d46-4c82-b59f-78907dea4c50_fixed.java
index 23f078d..afa8f77 100644
--- a/tmp/2b930774-89d0-4e4e-9185-daa190ab29fd_buggy.java
+++ b/tmp/6de9d68a-5d46-4c82-b59f-78907dea4c50_fixed.java
@@ -1,14 +1,18 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
+        if (Character.charCount(c) == 2) {
+            i++; // Skip the next character as it is part of the surrogate pair
+        }
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), "UTF-8");
+            sb.append(encoded);
             // ^^ is a bit heavy-handed - if perf critical, we could optimize
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
