diff --git a/tmp/a8f48f81-f28c-4eae-964d-825dd96bcd2e_buggy.java b/tmp/08e047b8-809e-47d3-9190-007b5ca68270_fixed.java
index 23f078d..e5f5ed0 100644
--- a/tmp/a8f48f81-f28c-4eae-964d-825dd96bcd2e_buggy.java
+++ b/tmp/08e047b8-809e-47d3-9190-007b5ca68270_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
+        if (Character.charCount(c) == 2) {
+            i++; // Skip the second char of a surrogate pair
+        }
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), StandardCharsets.UTF_8.name()));
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
