diff --git a/tmp/06a73a89-0494-44b9-8689-e11a7a7e91f5_buggy.java b/tmp/6ce0d399-0ae5-458f-8485-51ccbd44f408_fixed.java
index 23f078d..a8c8bb4 100644
--- a/tmp/06a73a89-0494-44b9-8689-e11a7a7e91f5_buggy.java
+++ b/tmp/6ce0d399-0ae5-458f-8485-51ccbd44f408_fixed.java
@@ -1,14 +1,20 @@
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
+import java.nio.charset.StandardCharsets;
+
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    for (int i = 0; i < s.length(); ) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), StandardCharsets.UTF_8.name()));
             // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            i += Character.charCount(c);
         } else {
             sb.append((char) c);
+            i++;
         }
     }
 }
\ No newline at end of file
