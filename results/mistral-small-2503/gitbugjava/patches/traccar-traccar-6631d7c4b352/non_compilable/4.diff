diff --git a/tmp/8535e268-b9fc-43d9-b0d4-62a640b4a407_buggy.java b/tmp/5cdf9657-d73c-4eaf-9806-ead79f3ef081_fixed.java
index d87dd79..f879c86 100644
--- a/tmp/8535e268-b9fc-43d9-b0d4-62a640b4a407_buggy.java
+++ b/tmp/5cdf9657-d73c-4eaf-9806-ead79f3ef081_fixed.java
@@ -1,47 +1,49 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
         ByteBuf frame = Unpooled.buffer();
+        int startReaderIndex = buf.readerIndex();
         while (buf.readerIndex() < endIndex) {
             byte b1 = buf.readByte();
             if (b1 == '}') {
                 byte b2 = buf.readByte();
                 switch (b2) {
                     case 0x01:
                         frame.writeByte('}');
                         break;
                     case 0x02:
                         frame.writeByte('[');
                         break;
                     case 0x03:
                         frame.writeByte(']');
                         break;
                     case 0x04:
                         frame.writeByte(',');
                         break;
                     case 0x05:
                         frame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
                                 "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                 }
             } else {
                 frame.writeByte(b1);
             }
         }
+        buf.readerIndex(startReaderIndex + endIndex);
         return frame;
     }
 
     return null;
 }
\ No newline at end of file
