diff --git a/tmp/ca5ed7b8-a6fa-4035-890e-e7b141b14b46_buggy.java b/tmp/b20b427e-d67e-4fb7-b977-438c0b11fd3c_fixed.java
index dc93be3..23462f5 100644
--- a/tmp/ca5ed7b8-a6fa-4035-890e-e7b141b14b46_buggy.java
+++ b/tmp/b20b427e-d67e-4fb7-b977-438c0b11fd3c_fixed.java
@@ -1,14 +1,16 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+
+        // Fix the issue by preventing the emission of an EndTag after inserting an empty element.
+        // tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
 
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
