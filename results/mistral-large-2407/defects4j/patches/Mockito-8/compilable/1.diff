diff --git a/tmp/264a968d-b4e7-4341-8be7-53d8dfd64d91_buggy.java b/tmp/94df9719-e112-4b08-a0d6-ee6f07310e41_fixed.java
index 42b58d0..151d261 100644
--- a/tmp/264a968d-b4e7-4341-8be7-53d8dfd64d91_buggy.java
+++ b/tmp/94df9719-e112-4b08-a0d6-ee6f07310e41_fixed.java
@@ -1,19 +1,23 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
+
+        // Casting to Class can be problematic, we need to check the actual type
+        if (parameterizedType.getRawType() instanceof Class<?>) {
             TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
             Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
             for (int i = 0; i < actualTypeArguments.length; i++) {
                 TypeVariable typeParameter = typeParameters[i];
                 Type actualTypeArgument = actualTypeArguments[i];
 
                 if (actualTypeArgument instanceof WildcardType) {
                     contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
                 } else {
                     contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
                 }
                 // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
             }
         }
+    }
\ No newline at end of file
