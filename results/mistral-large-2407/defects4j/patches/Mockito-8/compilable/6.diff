diff --git a/tmp/39cecf62-a027-4afe-b4b9-d24363842f99_buggy.java b/tmp/ded62855-e686-4027-8486-276bb8657263_fixed.java
index 42b58d0..fcda089 100644
--- a/tmp/39cecf62-a027-4afe-b4b9-d24363842f99_buggy.java
+++ b/tmp/ded62855-e686-4027-8486-276bb8657263_fixed.java
@@ -1,19 +1,25 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+        Type rawType = parameterizedType.getRawType();
+        if (rawType instanceof Class) {
+            TypeVariable[] typeParameters = ((Class<?>) rawType).getTypeParameters();
             Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
             for (int i = 0; i < actualTypeArguments.length; i++) {
                 TypeVariable typeParameter = typeParameters[i];
                 Type actualTypeArgument = actualTypeArguments[i];
 
                 if (actualTypeArgument instanceof WildcardType) {
                     contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
                 } else {
                     contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
                 }
                 // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
             }
+        } else {
+            // Handle the case when rawType is not a Class
+            System.err.println("Raw type is not a Class: " + rawType);
+        }
     }
\ No newline at end of file
