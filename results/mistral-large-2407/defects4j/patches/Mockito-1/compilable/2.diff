diff --git a/tmp/2de16b22-5f5d-4aa1-9d44-850dfc6962a4_buggy.java b/tmp/6fdde4be-1f81-4f6c-9f20-4c2d8e1a603c_fixed.java
index 1c875ad..108b680 100644
--- a/tmp/2de16b22-5f5d-4aa1-9d44-850dfc6962a4_buggy.java
+++ b/tmp/6fdde4be-1f81-4f6c-9f20-4c2d8e1a603c_fixed.java
@@ -1,31 +1,27 @@
     public void captureArgumentsFrom(Invocation invocation) {
         if (invocation.getMethod().isVarArgs()) {
             int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
-
+            // Handle varargs arguments capture
+            for (int position = 0; position < matchers.size(); position++) {
+                Matcher m = matchers.get(position);
+                if (m instanceof CapturesArguments) {
+                    if (position == indexOfVararg && m instanceof VarargMatcher) {
+                        Object array = invocation.getRawArguments()[position];
+                        for (int i = 0; i < Array.getLength(array); i++) {
+                            ((CapturesArguments) m).captureFrom(Array.get(array, i));
+                        }
+                        return; // Skip processing further matchers after varargs
+                    } else {
+                        ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
+                    }
+                }
+            }
         } else {
             for (int position = 0; position < matchers.size(); position++) {
                 Matcher m = matchers.get(position);
                 if (m instanceof CapturesArguments) {
                     ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
                 }
             }
         }
-
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
     }
\ No newline at end of file
