diff --git a/tmp/3757a7b1-c72b-45b6-bf73-c85019e3ffba_buggy.java b/tmp/048416a6-4f5e-474d-bb9d-89fecbdf9282_fixed.java
index 3cb9232..c1ef48b 100644
--- a/tmp/3757a7b1-c72b-45b6-bf73-c85019e3ffba_buggy.java
+++ b/tmp/048416a6-4f5e-474d-bb9d-89fecbdf9282_fixed.java
@@ -1,26 +1,29 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
 
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
             } else if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
                     || _hasAnnotation(a, JsonRawValue.class)) {
                 name = "";
             } else {
                 return null;
             }
         }
+
+        // Ensure that properties marked with @JsonUnwrapped are considered as well
+        JsonUnwrapped unwrapped = _findAnnotation(a, JsonUnwrapped.class);
+        if (unwrapped != null) {
+            name = unwrapped.prefix();
+        }
+
         return PropertyName.construct(name);
     }
\ No newline at end of file
