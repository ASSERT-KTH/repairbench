diff --git a/tmp/51821e70-46f9-407f-97e6-6ff5197c9df1_buggy.java b/tmp/498fdc82-67d2-48f3-a819-13ca12776b07_fixed.java
index e8705ac..05dcc16 100644
--- a/tmp/51821e70-46f9-407f-97e6-6ff5197c9df1_buggy.java
+++ b/tmp/498fdc82-67d2-48f3-a819-13ca12776b07_fixed.java
@@ -1,24 +1,20 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
+      // Keep track of the "this" context of a call.  A call without an
       // explicit "this" is a free call.
       Node first = n.getFirstChild();
 
       // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+      if (NodeUtil.isNameOrGetProp(first)) {
+        n.putBooleanProp(Node.FREE_CALL, false);
+      } else {
         n.putBooleanProp(Node.FREE_CALL, true);
       }
 
       // Keep track of the context in which eval is called. It is important
       // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+      if (first.isName() && "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
       }
     }
\ No newline at end of file
