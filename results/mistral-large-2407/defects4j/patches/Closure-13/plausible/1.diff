diff --git a/tmp/93d7c5ba-1f3b-4bf9-a911-93bf63903c37_buggy.java b/tmp/8ccafad8-8a4e-4d75-a2b8-8b418ee061b4_fixed.java
index b5d94e0..9f8d750 100644
--- a/tmp/93d7c5ba-1f3b-4bf9-a911-93bf63903c37_buggy.java
+++ b/tmp/8ccafad8-8a4e-4d75-a2b8-8b418ee061b4_fixed.java
@@ -1,26 +1,27 @@
   private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
+    Node currentNode;
     do {
-      Node c = node.getFirstChild();
-      while(c != null) {
-        traverse(c);
-        Node next = c.getNext();
-        c = next;
+      currentNode = node.getFirstChild();
+      while (currentNode != null) {
+        Node nextChild = currentNode.getNext();
+        traverse(currentNode);
+        currentNode = nextChild;
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      Preconditions.checkState(visits < 10000, "Too many iterations");
     } while (shouldRetraverse(node));
 
     exitNode(node);
   }
\ No newline at end of file
