diff --git a/tmp/4589e383-d402-4d24-8c24-5fc32c09dd07_buggy.java b/tmp/6d82340e-061f-4be1-bfeb-74bf89ebc8ac_fixed.java
index e0ecec8..c3347f1 100644
--- a/tmp/4589e383-d402-4d24-8c24-5fc32c09dd07_buggy.java
+++ b/tmp/6d82340e-061f-4be1-bfeb-74bf89ebc8ac_fixed.java
@@ -1,35 +1,40 @@
 /**
  * Visits the parameters of a CALL or a NEW node.
  */
 private void visitParameterList(NodeTraversal t, Node call,
     FunctionType functionType) {
   Iterator<Node> arguments = call.children().iterator();
   arguments.next(); // skip the function name
 
   Iterator<Node> parameters = functionType.getParameters().iterator();
   int ordinal = 0;
   Node parameter = null;
   Node argument = null;
+
+  int numArgs = call.getChildCount() - 1; // Set numArgs before the loop
+
   while (arguments.hasNext() &&
-           parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
+         (parameters.hasNext() || functionType.isVariadic())) { // Check if variadic
+    if (parameters.hasNext()) {
       parameter = parameters.next();
+    } else if (functionType.isVariadic()) {
+      // If it's a variadic function, continue to check remaining arguments
+      parameter = functionType.getVariadicParameter();
+    }
     argument = arguments.next();
     ordinal++;
 
     validator.expectArgumentMatchesParameter(t, argument,
         getJSType(argument), getJSType(parameter), call, ordinal);
   }
 
-    int numArgs = call.getChildCount() - 1;
   int minArgs = functionType.getMinArguments();
   int maxArgs = functionType.getMaxArguments();
-    if (minArgs > numArgs || maxArgs < numArgs) {
+  if (minArgs > numArgs || (!functionType.isVariadic() && maxArgs < numArgs)) {
     report(t, call, WRONG_ARGUMENT_COUNT,
             validator.getReadableJSTypeName(call.getFirstChild(), false),
             String.valueOf(numArgs), String.valueOf(minArgs),
-              maxArgs != Integer.MAX_VALUE ?
+            (maxArgs != Integer.MAX_VALUE && !functionType.isVariadic()) ?
             " and no more than " + maxArgs + " argument(s)" : "");
   }
 }
\ No newline at end of file
