diff --git a/tmp/4c2d99d6-fcdc-4768-979a-0e8d83da30a0_buggy.java b/tmp/a30d97ff-7991-4698-9a59-1409d3025444_fixed.java
index 6cfa79b..b191111 100644
--- a/tmp/4c2d99d6-fcdc-4768-979a-0e8d83da30a0_buggy.java
+++ b/tmp/a30d97ff-7991-4698-9a59-1409d3025444_fixed.java
@@ -1,12 +1,21 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X < <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        try {
+            return 0.5 * (1.0 + Erf.erf((x - mean) / (standardDeviation * Math.sqrt(2.0))));
+        } catch (MathException e) {
+            if (x < mean - 20 * standardDeviation) {
+                return 0.0;
+            } else if (x > mean + 20 * standardDeviation) {
+                return 1.0;
+            } else {
+                throw e;
+            }
+        }
     }
\ No newline at end of file
