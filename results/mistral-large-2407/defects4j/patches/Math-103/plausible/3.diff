diff --git a/tmp/0284cdef-5960-4039-9f6b-2bde2930b3a4_buggy.java b/tmp/c714d6a3-4443-47a9-90d7-e72e4132b656_fixed.java
index 6cfa79b..98c1d96 100644
--- a/tmp/0284cdef-5960-4039-9f6b-2bde2930b3a4_buggy.java
+++ b/tmp/c714d6a3-4443-47a9-90d7-e72e4132b656_fixed.java
@@ -1,12 +1,19 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X < <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = (x - mean) / (standardDeviation * Math.sqrt(2.0));
+        if (Math.abs(dev) > 20.0) {
+            return dev < 0.0 ? 0.0 : 1.0;
+        }
+        try {
+            return 0.5 * (1.0 + Erf.erf(dev));
+        } catch (MathException ex) {
+            return dev < 0.0 ? 0.0 : 1.0;
+        }
     }
\ No newline at end of file
