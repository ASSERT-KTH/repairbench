diff --git a/tmp/212a3eeb-2ff4-40ba-9c6d-5591d0dc2750_buggy.java b/tmp/67e5a4e1-de21-4192-8026-3e13a0594751_fixed.java
index a7d0787..d545929 100644
--- a/tmp/212a3eeb-2ff4-40ba-9c6d-5591d0dc2750_buggy.java
+++ b/tmp/67e5a4e1-de21-4192-8026-3e13a0594751_fixed.java
@@ -1,54 +1,44 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
     @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
+        if (String.class.equals(clazz))
         {
             return (T) str;
         }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
+        else if (PatternOptionBuilder.OBJECT_VALUE.equals(clazz))
         {
             return (T) createObject(str);
         }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
+        else if (Number.class.isAssignableFrom(clazz))
         {
             return (T) createNumber(str);
         }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
+        else if (Date.class.equals(clazz))
         {
             return (T) createDate(str);
         }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
+        else if (PatternOptionBuilder.CLASS_VALUE.equals(clazz))
         {
             return (T) createClass(str);
         }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
+        else if (PatternOptionBuilder.FILE_VALUE.equals(clazz))
         {
             return (T) createFile(str);
         }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
+        else if (PatternOptionBuilder.EXISTING_FILE_VALUE.equals(clazz))
         {
             return (T) openFile(str);
         }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
+        else if (PatternOptionBuilder.FILES_VALUE.equals(clazz))
         {
             return (T) createFiles(str);
         }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
+        else if (PatternOptionBuilder.URL_VALUE.equals(clazz))
         {
             return (T) createURL(str);
         }
         else
         {
-            return null;
+            throw new ParseException("Unexpected type: " + clazz.getName());
         }
     }
\ No newline at end of file
