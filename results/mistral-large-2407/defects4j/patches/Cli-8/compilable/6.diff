diff --git a/tmp/75a2faf2-382d-49f8-ab80-bfc3862f841d_buggy.java b/tmp/319cfd92-1466-410b-b641-d9ff8c4bd2d4_fixed.java
index 8e93a5e..8e4b6fa 100644
--- a/tmp/75a2faf2-382d-49f8-ab80-bfc3862f841d_buggy.java
+++ b/tmp/319cfd92-1466-410b-b641-d9ff8c4bd2d4_fixed.java
@@ -1,43 +1,48 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, nextLineTabStop);
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
         }
 
+        // Ensure not to add padding to the last part of the text that will be appended directly
+        if (pos > nextLineTabStop) {
+            sb.append(rtrim(text.substring(nextLineTabStop, pos))).append(defaultNewLine);
+        } else {
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
+}
\ No newline at end of file
