diff --git a/tmp/6978ba75-665f-401a-a3f4-e968b78b976e_buggy.java b/tmp/d1d70fc9-498b-4c0a-82fc-25e47bc920b3_fixed.java
index bfa2423..c781c9d 100644
--- a/tmp/6978ba75-665f-401a-a3f4-e968b78b976e_buggy.java
+++ b/tmp/d1d70fc9-498b-4c0a-82fc-25e47bc920b3_fixed.java
@@ -1,23 +1,27 @@
     /**
      * Generate a random sample from the distribution.
      *
      * @param sampleSize the number of random values to generate.
      * @return an array representing the random sample.
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
+        // Check if singletons list is not empty to avoid ArrayStoreException
+        if (singletons.isEmpty()) {
+            throw new IllegalStateException("No singletons available to create sample array.");
+        }
+
         final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
         for (int i = 0; i < sampleSize; i++) {
             out[i] = sample();
         }
 
         return out;
-
     }
\ No newline at end of file
