diff --git a/tmp/798c5693-c5c7-4d69-9d15-aadc2f13e1f9_buggy.java b/tmp/5cba927c-f0da-4b19-9dee-42f66b3f51b0_fixed.java
index 6e45f80..f61236a 100644
--- a/tmp/798c5693-c5c7-4d69-9d15-aadc2f13e1f9_buggy.java
+++ b/tmp/5cba927c-f0da-4b19-9dee-42f66b3f51b0_fixed.java
@@ -1,21 +1,37 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
-        return (TypeAdapter<T2>) typeAdapter;
+        return new TypeAdapter<T2>() {
+          @Override
+          public void write(JsonWriter out, T2 value) throws IOException {
+            typeAdapter.write(out, (T1) value);
+          }
 
+          @Override
+          public T2 read(JsonReader in) throws IOException {
+            T1 adaptedValue = typeAdapter.read(in);
+            if (requestedType.isInstance(adaptedValue)) {
+              return (T2) adaptedValue;
+            }
+            throw new JsonSyntaxException("Expected a " + requestedType.getName()
+                + " but was " + adaptedValue.getClass().getName());
           }
-      @Override public String toString() {
+        };
+      }
+
+      @Override
+      public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file
