diff --git a/tmp/59d14410-4a60-44d0-85ed-f92b4c5a842e_buggy.java b/tmp/3b02d044-9f3a-4d0a-83f0-94a6343c524f_fixed.java
index 47915ed..bda71e4 100644
--- a/tmp/59d14410-4a60-44d0-85ed-f92b4c5a842e_buggy.java
+++ b/tmp/3b02d044-9f3a-4d0a-83f0-94a6343c524f_fixed.java
@@ -1,22 +1,21 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
+            Object[] args = invocation.getArguments();
+            if (args != null && args.length > 0 && invocation.getMock().equals(args[0])) {
+                return 0;
+            } else {
                 return 1;
             }
+        }
 
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
\ No newline at end of file
