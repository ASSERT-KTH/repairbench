diff --git a/tmp/912e8fb6-185f-4802-b3cd-8d5973cc46f7_buggy.java b/tmp/b5c4490d-3a5a-4e20-b6a7-f07549ef1be1_fixed.java
index 26a24c6..63d2c98 100644
--- a/tmp/912e8fb6-185f-4802-b3cd-8d5973cc46f7_buggy.java
+++ b/tmp/b5c4490d-3a5a-4e20-b6a7-f07549ef1be1_fixed.java
@@ -1,13 +1,24 @@
     @Override
     public Number read(JsonReader in) throws IOException {
       JsonToken jsonToken = in.peek();
       switch (jsonToken) {
       case NULL:
         in.nextNull();
         return null;
       case NUMBER:
         return new LazilyParsedNumber(in.nextString());
+      case STRING:
+        String numAsString = in.nextString();
+        try {
+          if (numAsString.contains(".")) {
+            return Double.valueOf(numAsString);
+          } else {
+            return Long.valueOf(numAsString);
+          }
+        } catch (NumberFormatException e) {
+          throw new JsonSyntaxException("Invalid numeric value: " + numAsString, e);
+        }
       default:
         throw new JsonSyntaxException("Expecting number, got: " + jsonToken);
       }
     }
\ No newline at end of file
