diff --git a/tmp/1089375e-00a4-4ee4-b4ec-08e4ceba0c64_buggy.java b/tmp/edfa85e8-be9c-4e2e-9974-97b1f7837ef6_fixed.java
index 21f64c6..1ea044e 100644
--- a/tmp/1089375e-00a4-4ee4-b4ec-08e4ceba0c64_buggy.java
+++ b/tmp/edfa85e8-be9c-4e2e-9974-97b1f7837ef6_fixed.java
@@ -1,23 +1,22 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
+    if (seq.length() == 0) return -1;
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        if (input[offset] != startChar) continue;
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
+        if (last <= length) {
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            if (i == last && seq.charAt(j) == input[i]) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
