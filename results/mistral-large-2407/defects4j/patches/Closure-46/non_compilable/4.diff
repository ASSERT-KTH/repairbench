diff --git a/tmp/ceeb80ec-6053-47d3-ae45-c6d7e194fa9d_buggy.java b/tmp/e6ce503e-6912-4ee0-a7ef-c444396d290a_fixed.java
index 46817a7..263c890 100644
--- a/tmp/ceeb80ec-6053-47d3-ae45-c6d7e194fa9d_buggy.java
+++ b/tmp/e6ce503e-6912-4ee0-a7ef-c444396d290a_fixed.java
@@ -1,16 +1,31 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    Set<String> thatProperties = that.toMaybeRecordType().getPropertyNames().keySet();
+
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
+      if (thatProperties.contains(property) &&
           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
               getPropertyType(property))) {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
+      } else {
+        builder.addProperty(property, getPropertyType(property),
+            getPropertyNode(property));
+        builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property),
+            that.toMaybeRecordType().getPropertyNode(property));
       }
     }
+
+    for (String property : thatProperties) {
+      if (!properties.keySet().contains(property)) {
+        builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property),
+            that.toMaybeRecordType().getPropertyNode(property));
+      }
+    }
+
     return builder.build();
   }
\ No newline at end of file
