diff --git a/tmp/6e42e572-a530-4b68-ab99-b375ca6d4d60_buggy.java b/tmp/19ae03d2-2050-48ab-80df-e881b323d9ca_fixed.java
index e69de29..2fc74d5 100644
--- a/tmp/6e42e572-a530-4b68-ab99-b375ca6d4d60_buggy.java
+++ b/tmp/19ae03d2-2050-48ab-80df-e881b323d9ca_fixed.java
@@ -0,0 +1,44 @@
+import java.util.SortedMap;
+import java.util.List;
+import java.util.ArrayList;
+
+public class PatriciaTrie<V> implements Trie<String, V> {
+    // Other methods and fields
+
+    @Override
+    public SortedMap<String, V> prefixMap(String prefix) {
+        SortedMap<String, V> result = new TreeMap<>();
+        for (Map.Entry<String, V> entry : entrySet()) {
+            if (entry.getKey().startsWith(prefix)) {
+                result.put(entry.getKey(), entry.getValue());
+            }
+        }
+        return new SubMap<>(result, prefix);
+    }
+
+    private static class SubMap<V> implements SortedMap<String, V> {
+        private final SortedMap<String, V> map;
+        private final String prefix;
+
+        public SubMap(SortedMap<String, V> map, String prefix) {
+            this.map = map;
+            this.prefix = prefix;
+        }
+
+        @Override
+        public void clear() {
+            List<String> keysToRemove = new ArrayList<>();
+            for (String key : map.keySet()) {
+                if (key.startsWith(prefix)) {
+                    keysToRemove.add(key);
+                }
+            }
+            for (String key : keysToRemove) {
+                map.remove(key);
+            }
+        }
+
+        // Implement other methods required by SortedMap interface
+        // such as get, put, remove, firstKey, lastKey, etc.
+    }
+}
\ No newline at end of file
