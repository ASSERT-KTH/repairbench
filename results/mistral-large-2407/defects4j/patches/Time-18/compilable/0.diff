diff --git a/tmp/09e80678-8a44-419c-91a9-ada81f0d5a0f_buggy.java b/tmp/19f23c79-083f-4903-b806-eaa5c31dcbf4_fixed.java
index be2af16..8f0890e 100644
--- a/tmp/09e80678-8a44-419c-91a9-ada81f0d5a0f_buggy.java
+++ b/tmp/19f23c79-083f-4903-b806-eaa5c31dcbf4_fixed.java
@@ -1,29 +1,50 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalArgumentException e) {
+            // Fallback to Julian if Gregorian fails
+            try {
+                instant = iJulianChronology.getDateTimeMillis
+                    (year, monthOfYear, dayOfMonth,
+                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+                if (instant >= iCutoverMillis) {
+                    // It's in the illegal cutover gap.
+                    throw new IllegalArgumentException("Specified date does not exist");
+                }
+            } catch (IllegalArgumentException ex) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
+        }
+
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
+            try {
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            } catch (IllegalArgumentException ex) {
+                throw new IllegalArgumentException("Specified date does not exist");
+            }
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
+
         return instant;
     }
\ No newline at end of file
