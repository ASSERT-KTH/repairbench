diff --git a/tmp/e94c0158-067e-4b87-812a-f8d607711af9_buggy.java b/tmp/1190ff34-9374-44b6-8a9c-a6103e5e2074_fixed.java
index 5f1dcf2..f7251d2 100644
--- a/tmp/e94c0158-067e-4b87-812a-f8d607711af9_buggy.java
+++ b/tmp/1190ff34-9374-44b6-8a9c-a6103e5e2074_fixed.java
@@ -1,41 +1,40 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+        while (!isConverged(simplex, comparator)) {
 
             incrementIterationsCounter();
 
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
 
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
 
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
 
                 return;
 
             }
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                simplex = contractedSimplex;
+            }
 
             // check convergence
             return;
         }
-
-        }
-
     }
\ No newline at end of file
