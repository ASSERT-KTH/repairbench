diff --git a/tmp/018d4844-eabb-48e7-9453-a8d6fb7e3acb_buggy.java b/tmp/41dfe629-bf6e-488e-9a48-bebde21600ec_fixed.java
index 5f1dcf2..120ad17 100644
--- a/tmp/018d4844-eabb-48e7-9453-a8d6fb7e3acb_buggy.java
+++ b/tmp/41dfe629-bf6e-488e-9a48-bebde21600ec_fixed.java
@@ -1,41 +1,47 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
             return;
 
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
-                return;
+            simplex = original.clone();
+            simplex[simplex.length - 1] = contracted;
+        } else {
+            // perform a reduction step
+            final RealPointValuePair[] reducedSimplex = evaluateNewSimplex(original, sigma, comparator);
+            if (comparator.compare(reducedSimplex[0], best) < 0) {
+                simplex = reducedSimplex;
+            } else {
+                throw new OptimizationException(
+                  new MaxIterationsExceededException(Iterator.MAX_ITERATIONS_EXCEEDED));
+            }
         }
-
     }
-
 }
\ No newline at end of file
