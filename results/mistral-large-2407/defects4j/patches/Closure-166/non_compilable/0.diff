diff --git a/tmp/0613c11f-7da4-4cc5-8656-9162fe543e75_buggy.java b/tmp/0ebaeea8-aae6-4ba6-9f81-e34167dfcbfd_fixed.java
index 5f96616..786769e 100644
--- a/tmp/0613c11f-7da4-4cc5-8656-9162fe543e75_buggy.java
+++ b/tmp/0ebaeea8-aae6-4ba6-9f81-e34167dfcbfd_fixed.java
@@ -1,20 +1,29 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      JSType recordType = constraint.toObjectType();
+      ObjectType objectType = this.toMaybeObjectType();
+      if (objectType != null) {
+        for (String property : recordType.getProperties()) {
+          JSType propertyType = recordType.getOwnPropertyType(property);
+          if (propertyType != null) {
+            objectType.defineDeclaredProperty(property, propertyType, null);
+          }
+        }
+      }
     }
   }
\ No newline at end of file
