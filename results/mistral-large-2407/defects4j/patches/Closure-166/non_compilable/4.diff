diff --git a/tmp/f35016a3-c532-47ad-b61f-1aaf792e9bcc_buggy.java b/tmp/ebbc282d-00b5-4e99-915b-8eca1deca670_fixed.java
index 5f96616..d2d5007 100644
--- a/tmp/f35016a3-c532-47ad-b61f-1aaf792e9bcc_buggy.java
+++ b/tmp/ebbc282d-00b5-4e99-915b-8eca1deca670_fixed.java
@@ -1,20 +1,26 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      matchRecordTypeConstraint(constraint.toMaybeRecordType());
+    } else if (constraint.isObject()) {
+      // Check if the constraint is an object type with optional properties.
+      ObjectType objConstraint = constraint.toMaybeObjectType();
+      if (objConstraint != null) {
+        matchRecordTypeConstraint(objConstraint);
+      }
     }
   }
\ No newline at end of file
