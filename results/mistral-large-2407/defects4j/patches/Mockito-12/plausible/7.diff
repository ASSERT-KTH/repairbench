diff --git a/tmp/684980f7-d4a6-437a-a240-c49842219c59_buggy.java b/tmp/bbd44250-b275-4dac-8c85-f83c7cc097fe_fixed.java
index bada2b6..5dbfc5d 100644
--- a/tmp/684980f7-d4a6-437a-a240-c49842219c59_buggy.java
+++ b/tmp/bbd44250-b275-4dac-8c85-f83c7cc097fe_fixed.java
@@ -1,16 +1,20 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
      *
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
+    public Class<?> getGenericType(Field field) {
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            if (actual instanceof Class) {
+                return (Class<?>) actual;
+            } else if (actual instanceof ParameterizedType) {
+                // Handle nested generics by returning the raw type
+                return (Class<?>) ((ParameterizedType) actual).getRawType();
+            }
         }
 
         return Object.class;
     }
\ No newline at end of file
