diff --git a/tmp/4eef5082-94b8-4a18-8f97-b18053db4b17_buggy.java b/tmp/d0ca767e-2d17-40d8-ba24-e639047f4b30_fixed.java
index bada2b6..6fdfb27 100644
--- a/tmp/4eef5082-94b8-4a18-8f97-b18053db4b17_buggy.java
+++ b/tmp/d0ca767e-2d17-40d8-ba24-e639047f4b30_fixed.java
@@ -1,16 +1,18 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class.
      *
      * @param field
      * @return
      */
-    public Class getGenericType(Field field) {        
+    public Class<?> getGenericType(Field field) {
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            if (actual instanceof Class) {
+                return (Class<?>) actual;
+            } else if (actual instanceof ParameterizedType) {
+                return (Class<?>) ((ParameterizedType) actual).getRawType();
+            }
         }
-        
         return Object.class;
     }
\ No newline at end of file
