diff --git a/tmp/bc68e914-66d2-4e46-9532-72cdc3f4ac69_buggy.java b/tmp/80fd7b97-d502-4b02-aadf-33ffc90a2e33_fixed.java
index 0dbce00..bb7cfb9 100644
--- a/tmp/bc68e914-66d2-4e46-9532-72cdc3f4ac69_buggy.java
+++ b/tmp/80fd7b97-d502-4b02-aadf-33ffc90a2e33_fixed.java
@@ -1,33 +1,51 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
 
             	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
                 if (format.getShape() == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
+
+                // Handle JsonFormat.Shape.ANY case
+                if (format.getShape() == JsonFormat.Shape.ANY) {
+                    if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                        return withFormat(Boolean.FALSE, null); // force STRING shape even when shape is ANY
                     }
+                    // otherwise, follow user configuration
+                    if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                        return withFormat(Boolean.TRUE, null);
+                    } else {
+                        return withFormat(Boolean.FALSE, null);
+                    }
+                }
+            }
+        }
+        // default case when no @JsonFormat annotation or shape not explicitly set
+        if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+            return withFormat(Boolean.TRUE, null);
+        } else {
+            return withFormat(Boolean.FALSE, null);
         }
-        return this;
     }
\ No newline at end of file
