diff --git a/tmp/0bd78339-6fa3-47ed-bfbf-804c796bb160_buggy.java b/tmp/bd805d17-7e37-46ea-baef-41478ef1df87_fixed.java
index b529d33..b8f8de2 100644
--- a/tmp/0bd78339-6fa3-47ed-bfbf-804c796bb160_buggy.java
+++ b/tmp/bd805d17-7e37-46ea-baef-41478ef1df87_fixed.java
@@ -1,29 +1,32 @@
     /**
      * Used internally by the Soundex algorithm.
      *
      * Consonants from the same code group separated by W or H are treated as one.
      *
      * @param str
      *                  the cleaned working string to encode (in upper case).
      * @param index
      *                  the character position to encode
      * @return Mapping code for a particular character
      * @throws IllegalArgumentException
      *                  if the character is not mapped
      */
     private char getMappingCode(final String str, final int index) {
         // map() throws IllegalArgumentException
         final char mappedChar = this.map(str.charAt(index));
+
         // HW rule check
         if (index > 1 && mappedChar != '0') {
             final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
             final char preHWChar = str.charAt(index - 2);
             final char firstCode = this.map(preHWChar);
+
+            if ('H' == hwChar || 'W' == hwChar) {
+                // Check if the character before 'H' or 'W' is the same group as the current character
                 if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
                     return 0;
                 }
             }
         }
         return mappedChar;
     }
