diff --git a/tmp/1d1045e6-2a1b-4414-a6d4-9ea584836c3e_buggy.java b/tmp/1ed19808-1c16-4292-bc20-4bc7fdd42711_fixed.java
index 01967cc..e0b8f40 100644
--- a/tmp/1d1045e6-2a1b-4414-a6d4-9ea584836c3e_buggy.java
+++ b/tmp/1ed19808-1c16-4292-bc20-4bc7fdd42711_fixed.java
@@ -1,35 +1,28 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // fall through
             case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
                 return (t.getRawClass() == Object.class)
                         || (!t.isConcrete()
                                 // [databind#88] Should not apply to JSON tree models:
                         || TreeNode.class.isAssignableFrom(t.getRawClass()));
 
             case NON_FINAL:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // [Issue#88] Should not apply to JSON tree models:
                 return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
+
+            case JAVA_LANG_OBJECT:
                 return (t.getRawClass() == Object.class);
+
+            default:
+                return false;
             }
         }
\ No newline at end of file
