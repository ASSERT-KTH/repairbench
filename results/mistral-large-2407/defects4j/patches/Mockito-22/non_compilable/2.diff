diff --git a/tmp/18839d7b-f14b-480b-b1e6-1d5cb1cb9627_buggy.java b/tmp/1f01892f-911d-467e-8221-e5ee9c022c86_fixed.java
index 111ba5e..d0535ed 100644
--- a/tmp/18839d7b-f14b-480b-b1e6-1d5cb1cb9627_buggy.java
+++ b/tmp/1f01892f-911d-467e-8221-e5ee9c022c86_fixed.java
@@ -1,9 +1,61 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
+        } else if (isPrimitiveArray(o1)) {
+            return isPrimitiveArray(o2) && arePrimitiveArraysEqual(o1, o2);
         } else if (isArray(o1)) {
             return isArray(o2) && areArraysEqual(o1, o2);
         } else {
             return o1.equals(o2);
         }
     }
+
+    private static boolean isArray(Object o) {
+        return o.getClass().isArray();
+    }
+
+    private static boolean isPrimitiveArray(Object o) {
+        return o.getClass().getComponentType().isPrimitive();
+    }
+
+    private static boolean arePrimitiveArraysEqual(Object arr1, Object arr2) {
+        if (arr1.getClass() != arr2.getClass()) {
+            return false;
+        }
+
+        int length1 = java.lang.reflect.Array.getLength(arr1);
+        int length2 = java.lang.reflect.Array.getLength(arr2);
+
+        if (length1 != length2) {
+            return false;
+        }
+
+        for (int i = 0; i < length1; i++) {
+            if (!java.lang.reflect.Array.get(arr1, i).equals(java.lang.reflect.Array.get(arr2, i))) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    private static boolean areArraysEqual(Object arr1, Object arr2) {
+        if (arr1.getClass() != arr2.getClass()) {
+            return false;
+        }
+
+        Object[] arr1Obj = (Object[]) arr1;
+        Object[] arr2Obj = (Object[]) arr2;
+
+        if (arr1Obj.length != arr2Obj.length) {
+            return false;
+        }
+
+        for (int i = 0; i < arr1Obj.length; i++) {
+            if (!areEqual(arr1Obj[i], arr2Obj[i])) {
+                return false;
+            }
+        }
+
+        return true;
+    }
\ No newline at end of file
