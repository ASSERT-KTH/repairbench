diff --git a/tmp/947b26f5-c138-418d-a87c-53b57711f951_buggy.java b/tmp/3ba467ca-6a0a-4d24-a3fe-a585002713a9_fixed.java
index 111ba5e..67f6a60 100644
--- a/tmp/947b26f5-c138-418d-a87c-53b57711f951_buggy.java
+++ b/tmp/3ba467ca-6a0a-4d24-a3fe-a585002713a9_fixed.java
@@ -1,9 +1,32 @@
     public static boolean areEqual(Object o1, Object o2) {
         if (o1 == null || o2 == null) {
             return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+        } else if (o1 instanceof Object[] && o2 instanceof Object[]) {
+            return areArraysEqual((Object[]) o1, (Object[]) o2);
+        } else if (isArray(o1) && isArray(o2)) {
+            if (o1 instanceof int[] && o2 instanceof int[]) {
+                return Arrays.equals((int[]) o1, (int[]) o2);
+            } else if (o1 instanceof double[] && o2 instanceof double[]) {
+                return Arrays.equals((double[]) o1, (double[]) o2);
+            } // Add more specific array type checks as needed
         } else {
             return o1.equals(o2);
         }
+        return false;
+    }
+
+    private static boolean isArray(Object obj) {
+        return obj != null && obj.getClass().isArray();
+    }
+
+    private static boolean areArraysEqual(Object[] o1, Object[] o2) {
+        if (o1.length != o2.length) {
+            return false;
+        }
+        for (int i = 0; i < o1.length; i++) {
+            if (!areEqual(o1[i], o2[i])) {
+                return false;
+            }
+        }
+        return true;
     }
\ No newline at end of file
