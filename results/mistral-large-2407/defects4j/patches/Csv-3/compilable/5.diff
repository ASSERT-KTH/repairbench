diff --git a/tmp/611388d9-de7f-4af3-96da-38a95dcc9d73_buggy.java b/tmp/8aa33462-69b6-4114-aabc-5a352e811cfc_fixed.java
index 1ad070d..06e936b 100644
--- a/tmp/611388d9-de7f-4af3-96da-38a95dcc9d73_buggy.java
+++ b/tmp/8aa33462-69b6-4114-aabc-5a352e811cfc_fixed.java
@@ -1,38 +1,42 @@
 /**
  * Handle an escape sequence.
  * The current character must be the escape character.
  * On return, the next character is available by calling {@link ExtendedBufferedReader#getLastChar()}
  * on the input stream.
  *
  * @return the unescaped character (as an int) or {@link END_OF_STREAM} if char following the escape is invalid.
  * @throws IOException if there is a problem reading the stream or the end of stream is detected:
-     * the escape character is not allowed at end of strem
+ * the escape character is not allowed at end of stream
  */
 int readEscape() throws IOException {
     // the escape char has just been read (normally a backslash)
     final int c = in.read();
     switch (c) {
     case 'r':
         return CR;
     case 'n':
         return LF;
     case 't':
         return TAB;
     case 'b':
         return BACKSPACE;
     case 'f':
         return FF;
     case CR:
     case LF:
-        case FF: // TODO is this correct?
-        case TAB: // TODO is this correct? Do tabs need to be escaped?
-        case BACKSPACE: // TODO is this correct?
+    case FF:
+    case TAB: // Allow these characters to be escaped
+    case BACKSPACE:
         return c;
     case END_OF_STREAM:
         throw new IOException("EOF whilst processing escape sequence");
     default:
-            // Now check for meta-characters
+        // Now handle escaped special sequences
+        if (c == 'N' && in.read() == '\\') {
+            // Continue to the next character after handling the special sequence
+            return in.read();
+        }
+        // For any other character, return the character itself
         return c;
-            // indicate unexpected char - available from in.getLastChar()
     }
 }
\ No newline at end of file
