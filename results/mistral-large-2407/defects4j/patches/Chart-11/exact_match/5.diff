diff --git a/tmp/73d52a53-4652-49ac-9193-951caeb39711_buggy.java b/tmp/3f466504-0363-4735-94f9-17e4f04d426f_fixed.java
index ad7255c..844f46d 100644
--- a/tmp/73d52a53-4652-49ac-9193-951caeb39711_buggy.java
+++ b/tmp/3f466504-0363-4735-94f9-17e4f04d426f_fixed.java
@@ -1,42 +1,42 @@
 /**
  * Tests two polygons for equality.  If both are <code>null</code> this
  * method returns <code>true</code>.
  *
  * @param p1  path 1 (<code>null</code> permitted).
  * @param p2  path 2 (<code>null</code> permitted).
  *
  * @return A boolean.
  */
 public static boolean equal(GeneralPath p1, GeneralPath p2) {
     if (p1 == null) {
         return (p2 == null);
     }
     if (p2 == null) {
         return false;
     }
     if (p1.getWindingRule() != p2.getWindingRule()) {
         return false;
     }
     PathIterator iterator1 = p1.getPathIterator(null);
-        PathIterator iterator2 = p1.getPathIterator(null);
+    PathIterator iterator2 = p2.getPathIterator(null); // Fix: Use p2 instead of p1 for the second iterator
     double[] d1 = new double[6];
     double[] d2 = new double[6];
     boolean done = iterator1.isDone() && iterator2.isDone();
     while (!done) {
         if (iterator1.isDone() != iterator2.isDone()) {
             return false;
         }
         int seg1 = iterator1.currentSegment(d1);
         int seg2 = iterator2.currentSegment(d2);
         if (seg1 != seg2) {
             return false;
         }
         if (!Arrays.equals(d1, d2)) {
             return false;
         }
         iterator1.next();
         iterator2.next();
         done = iterator1.isDone() && iterator2.isDone();
     }
     return true;
 }
\ No newline at end of file
