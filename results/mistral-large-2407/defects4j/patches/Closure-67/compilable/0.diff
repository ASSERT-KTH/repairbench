diff --git a/tmp/49300723-c08f-4d49-a119-815b614032a6_buggy.java b/tmp/1196ae39-3c26-4678-b2bc-e7258bbdac6e_fixed.java
index 939f49b..f26e619 100644
--- a/tmp/49300723-c08f-4d49-a119-815b614032a6_buggy.java
+++ b/tmp/1196ae39-3c26-4678-b2bc-e7258bbdac6e_fixed.java
@@ -1,21 +1,21 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+          && (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM)) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
+            n.getFirstChild().getType() == Token.GETPROP ||
+            n.getFirstChild().getType() == Token.GETELEM;
 
         if (isChainedProperty) {
           Node child = n.getFirstChild().getFirstChild().getNext();
 
-          if (child.getType() == Token.STRING &&
+          if ((child.getType() == Token.STRING || child.getType() == Token.GETELEM) &&
               child.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }
\ No newline at end of file
