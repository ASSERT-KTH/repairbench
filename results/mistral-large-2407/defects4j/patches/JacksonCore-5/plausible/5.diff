diff --git a/tmp/c855e47b-4e63-468c-915b-e24aeb9deec9_buggy.java b/tmp/156e9651-b81d-4c1e-b7bb-851c164bf113_fixed.java
index 39c4220..d600c7f 100644
--- a/tmp/c855e47b-4e63-468c-915b-e24aeb9deec9_buggy.java
+++ b/tmp/156e9651-b81d-4c1e-b7bb-851c164bf113_fixed.java
@@ -1,21 +1,27 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+            // Correcting increment issue to avoid skipping characters.
+            char c = str.charAt(i);
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
+        // Allow an extra check for length 10 only if the string is a valid integer.
         if (len == 10) {
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
+        try {
             return NumberInput.parseInt(str);
+        } catch (NumberFormatException e) {
+            return -1;
+        }
     }
\ No newline at end of file
