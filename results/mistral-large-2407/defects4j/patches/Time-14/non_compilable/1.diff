diff --git a/tmp/acfc69ed-13c8-4530-b998-a245fc92d64d_buggy.java b/tmp/d97565ea-4749-4ef7-a08c-35e2b816ad95_fixed.java
index 10616db..6f63257 100644
--- a/tmp/acfc69ed-13c8-4530-b998-a245fc92d64d_buggy.java
+++ b/tmp/d97565ea-4749-4ef7-a08c-35e2b816ad95_fixed.java
@@ -1,19 +1,31 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
         // overridden as superclass algorithm can't handle
         // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
         // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
             instant = add(instant, valueToAdd);
+
+            // Adjust for leap years and invalid dates
+            if (partial instanceof MonthDay) {
+                int newMonth = iChronology.get(instant).getMonthOfYear();
+                int newDay = iChronology.get(instant).getDayOfMonth();
+                int maxDay = iChronology.get(instant).dayOfMonth().getMaximumValue();
+                if (newDay > maxDay) {
+                    newDay = maxDay;
+                }
+                return new int[]{newMonth, newDay};
+            }
+
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file
