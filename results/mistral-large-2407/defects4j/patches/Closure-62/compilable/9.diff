diff --git a/tmp/71d91567-391b-4c44-97eb-df4690e14b74_buggy.java b/tmp/90c16ba8-e903-48e6-bd1f-da6eb3400e7c_fixed.java
index 904dba7..7f303d0 100644
--- a/tmp/71d91567-391b-4c44-97eb-df4690e14b74_buggy.java
+++ b/tmp/90c16ba8-e903-48e6-bd1f-da6eb3400e7c_fixed.java
@@ -1,46 +1,47 @@
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
         b.append(error.sourceName);
         if (error.lineNumber > 0) {
             b.append(':');
             b.append(error.lineNumber);
         }
         b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
         b.append(sourceExcerpt);
         b.append('\n');
         int charno = error.getCharno();
 
         // padding equal to the excerpt and arrow at the end
         // charno == sourceExpert.length() means something is missing
         // at the end of the line
         if (excerpt.equals(LINE)
             && 0 <= charno && charno < sourceExcerpt.length()) {
             for (int i = 0; i < charno; i++) {
                 char c = sourceExcerpt.charAt(i);
                 if (Character.isWhitespace(c)) {
                     b.append(c);
                 } else {
                     b.append(' ');
                 }
             }
-        b.append("^\n");
+            b.append('^');
+            b.append('\n');
         }
     }
     return b.toString();
 }
\ No newline at end of file
