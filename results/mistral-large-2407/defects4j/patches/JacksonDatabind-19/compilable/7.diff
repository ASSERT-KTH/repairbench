diff --git a/tmp/47c7feed-66b9-4d47-aa2d-b639837f0925_buggy.java b/tmp/529fd149-c774-43d3-95d8-a320e714ebf7_fixed.java
index 1bec4d6..544f3d9 100644
--- a/tmp/47c7feed-66b9-4d47-aa2d-b639837f0925_buggy.java
+++ b/tmp/529fd149-c774-43d3-95d8-a320e714ebf7_fixed.java
@@ -1,14 +1,23 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
-        if (typeParams == null) {
+        if (typeParams == null || typeParams.length == 0) {
+            // Handle Properties as a special case with String as key and value types
+            if (rawClass == Properties.class) {
+                return MapType.construct(rawClass, _constructTypeForClass(String.class), _constructTypeForClass(String.class));
+            }
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
+
+    // Helper method to construct JavaType for a given class
+    private JavaType _constructTypeForClass(Class<?> clazz) {
+        return TypeFactory.defaultInstance().constructType(clazz);
+    }
\ No newline at end of file
