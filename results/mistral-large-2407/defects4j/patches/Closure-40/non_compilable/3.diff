diff --git a/tmp/5e9651c7-dffb-4d2d-aef0-48925501e379_buggy.java b/tmp/c7b78917-34ed-41b9-8f5b-e1471b2501ec_fixed.java
index 670114d..be44785 100644
--- a/tmp/5e9651c7-dffb-4d2d-aef0-48925501e379_buggy.java
+++ b/tmp/c7b78917-34ed-41b9-8f5b-e1471b2501ec_fixed.java
@@ -1,48 +1,61 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
             refNodes.add(new ClassDefiningFunctionNode(
                 name, n, parent, parent.getParent()));
           }
         }
       }
+
+      // Handle function calls that are assignments
+      if (n.isCall() && n.hasParent() && n.getParent().isExprResult()) {
+        Node assignParent = n.getGrandparent();
+        if (assignParent != null && assignParent.isAssign()) {
+          Node lhs = assignParent.getFirstChild();
+          NameInformation ns = createNameInformation(t, lhs, assignParent);
+          if (ns != null) {
+            JsName nameInfo = getName(lhs.getString(), true);
+            recordSet(nameInfo.name, lhs);
+          }
+        }
+      }
     }
\ No newline at end of file
