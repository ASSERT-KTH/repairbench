diff --git a/tmp/ecb1c47b-9f8b-4844-a24e-ac229c513a11_buggy.java b/tmp/439ff84a-d3f1-4738-a0b3-226fda2a5492_fixed.java
index 4bbd561..72d4af3 100644
--- a/tmp/ecb1c47b-9f8b-4844-a24e-ac229c513a11_buggy.java
+++ b/tmp/439ff84a-d3f1-4738-a0b3-226fda2a5492_fixed.java
@@ -1,37 +1,42 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+        if (index >= input.length() || input.charAt(index) != '&') {
+            return 0;
+        }
+        if (input.length() <= index + 1 || input.charAt(index + 1) != '#') {
+            return 0;
+        }
+
         int start = index + 2;
         boolean isHex = false;
 
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
+        if (input.length() > start && (input.charAt(start) == 'x' || input.charAt(start) == 'X')) {
             start++;
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        int radix = isHex ? 16 : 10;
+
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
 
+        if (end >= input.length() || input.charAt(end) != ';') {
+            return 0;
+        }
+
         int entityValue;
         try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
-                }
+            entityValue = Integer.parseInt(input.subSequence(start, end).toString(), radix);
         } catch (NumberFormatException nfe) {
             return 0;
         }
 
-                out.write(entityValue);
+        out.write(new int[] { entityValue }, 0, 1);
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
\ No newline at end of file
-        return 0;
-    }
