diff --git a/tmp/b1bcd660-ce92-4c51-8731-6f5f435f8aaf_buggy.java b/tmp/7038d872-62e3-4fb0-8949-22b3655b9f2e_fixed.java
index bcd80aa..bc06984 100644
--- a/tmp/b1bcd660-ce92-4c51-8731-6f5f435f8aaf_buggy.java
+++ b/tmp/7038d872-62e3-4fb0-8949-22b3655b9f2e_fixed.java
@@ -1,25 +1,39 @@
         void processResponseHeaders(Map<String, List<String>> resHeaders) {
+            Map<String, StringBuilder> combinedHeaders = new HashMap<>();
             for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
                 String name = entry.getKey();
                 if (name == null)
                     continue; // http/1.1 line
 
                 List<String> values = entry.getValue();
                 if (name.equalsIgnoreCase("Set-Cookie")) {
                     for (String value : values) {
                         if (value == null)
                             continue;
                         TokenQueue cd = new TokenQueue(value);
                         String cookieName = cd.chompTo("=").trim();
                         String cookieVal = cd.consumeTo(";").trim();
                         // ignores path, date, domain, validateTLSCertificates et al. req'd?
                         // name not blank, value not null
                         if (cookieName.length() > 0)
                             cookie(cookieName, cookieVal);
                     }
                 } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
-                    if (!values.isEmpty())
-                        header(name, values.get(0));
+                    StringBuilder combinedValue = combinedHeaders.get(name);
+                    if (combinedValue == null) {
+                        combinedValue = new StringBuilder();
                     }
+                    for (String value : values) {
+                        if (combinedValue.length() > 0) {
+                            combinedValue.append(", ");
+                        }
+                        combinedValue.append(value);
+                    }
+                    combinedHeaders.put(name, combinedValue);
+                }
+            }
+
+            for (Map.Entry<String, StringBuilder> combinedEntry : combinedHeaders.entrySet()) {
+                header(combinedEntry.getKey(), combinedEntry.getValue().toString());
             }
         }
\ No newline at end of file
