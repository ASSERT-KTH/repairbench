diff --git a/tmp/1c9fa846-454a-45f0-9e26-83fad8be8189_buggy.java b/tmp/18298d8f-f41c-4bbd-b6ba-3462032468e5_fixed.java
index 1a63a66..45d0be9 100644
--- a/tmp/1c9fa846-454a-45f0-9e26-83fad8be8189_buggy.java
+++ b/tmp/18298d8f-f41c-4bbd-b6ba-3462032468e5_fixed.java
@@ -1,21 +1,22 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
+        // Ensure that subclass is actually a subtype of _class
+        if (!_class.isAssignableFrom(subclass)) {
             throw new IllegalArgumentException("Class " + subclass.getName() + " not sub-type of "
                     + _class.getName());
-                    */
+        }
+        // Check for complications with placeholder values (`Void`, `NoClass`)
+        if (subclass == Void.class || !subclass.isAnnotationPresent(NoClass.class)) {
             return new SimpleType(subclass, _bindings, this, _superInterfaces,
                     _valueHandler, _typeHandler, _asStatic);
+        }
         // Otherwise, stitch together the hierarchy. First, super-class
         // if not found, try a super-interface
         // should not get here but...
+        throw new IllegalStateException("Unexpected sub-class relationship: " + subclass.getName());
     }
\ No newline at end of file
