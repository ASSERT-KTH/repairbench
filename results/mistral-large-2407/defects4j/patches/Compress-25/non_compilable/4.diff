diff --git a/tmp/69893b11-4bbf-4d2e-9d83-13273603ac5d_buggy.java b/tmp/5b43abb8-5514-48eb-882d-ca9f49533148_fixed.java
index 6c0aa19..fb46211 100644
--- a/tmp/69893b11-4bbf-4d2e-9d83-13273603ac5d_buggy.java
+++ b/tmp/5b43abb8-5514-48eb-882d-ca9f49533148_fixed.java
@@ -1,20 +1,13 @@
-    /**
-     * @param encoding the encoding to use for file names, use null
-     * for the platform's default encoding
-     * @param useUnicodeExtraFields whether to use InfoZIP Unicode
-     * Extra Fields (if present) to set the file names.
-     * @param allowStoredEntriesWithDataDescriptor whether the stream
-     * will try to read STORED entries that use a data descriptor
-     * @since 1.1
-     */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
+    buf = ByteBuffer.allocate(BUFFER_SIZE); // Assuming BUFFER_SIZE is a constant
     in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
+    this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
+    // Reset the buffer position to the start
+    buf.clear();
     // haven't read anything so far
 }
\ No newline at end of file
