diff --git a/tmp/67a485ec-3821-4bf1-810c-b3d2560e25d1_buggy.java b/tmp/846c89ec-fd4a-4b7f-90da-ab14b062cce0_fixed.java
index 57f69c5..715c6e1 100644
--- a/tmp/67a485ec-3821-4bf1-810c-b3d2560e25d1_buggy.java
+++ b/tmp/846c89ec-fd4a-4b7f-90da-ab14b062cce0_fixed.java
@@ -1,12 +1,21 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
     // For labels with block children, we need to ensure that a
     // labeled FUNCTION or DO isn't generated when extraneous BLOCKs
     // are skipped.
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+      // Either an empty statement or a block with more than one child,
+      // it isn't a FUNCTION or DO.
+    boolean isFunctionOrDo = n.getType() == Token.FUNCTION || n.getType() == Token.DO;
+
+    if (isFunctionOrDo) {
+      Node parent = n.getParent();
+      if (parent.isLabel() && parent.getFirstChild().isBlock()) {
+        isFunctionOrDo = parent.getFirstChild().getChildCount() > 1 || parent.getFirstChild().isFunction() || parent.getFirstChild().isDo();
+      }
+    }
+
+    return isFunctionOrDo;
   }
\ No newline at end of file
