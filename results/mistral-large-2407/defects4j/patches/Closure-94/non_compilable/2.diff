diff --git a/tmp/0fcd7ac4-c516-4f53-b0df-855c38d2ac81_buggy.java b/tmp/859ab523-d73c-43f7-832f-0339cc07eee0_fixed.java
index 66e3d01..0edabb2 100644
--- a/tmp/0fcd7ac4-c516-4f53-b0df-855c38d2ac81_buggy.java
+++ b/tmp/859ab523-d73c-43f7-832f-0339cc07eee0_fixed.java
@@ -1,34 +1,41 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
 
       // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
-    }
+
+      // Additional check for operators with two children
+      case Token.ADD:
+          return isValidDefineValue(val.getFirstChild(), defines) &&
+                 isValidDefineValue(val.getSecondChild(), defines);
+
+      default:
         return false;
     }
+  }
\ No newline at end of file
