diff --git a/tmp/5c5ec4b7-30b1-4aac-a81d-ecf6665dc267_buggy.java b/tmp/74da3772-4eae-4684-a2d3-2b15d83bf096_fixed.java
index 66e3d01..797ab2c 100644
--- a/tmp/5c5ec4b7-30b1-4aac-a81d-ecf6665dc267_buggy.java
+++ b/tmp/74da3772-4eae-4684-a2d3-2b15d83bf096_fixed.java
@@ -1,34 +1,39 @@
-  /**
-   * Determines whether the given value may be assigned to a define.
-   *
-   * @param val The value being assigned.
-   * @param defines The list of names of existing defines.
-   */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
+      case Token.ADD:
+      case Token.SUB:
+      case Token.MUL:
+      case Token.DIV:
+      case Token.MOD:
+      case Token.LSH:
+      case Token.RSH:
+      case Token.URSH:
+      case Token.AND:
+      case Token.OR:
+        return isValidDefineValue(val.getFirstChild(), defines) && isValidDefineValue(val.getNext(), defines);
 
-      // Uniary operators are valid if the child is valid.
+      // Unary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }
\ No newline at end of file
