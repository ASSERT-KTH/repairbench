diff --git a/tmp/5232a1d3-0835-402e-8d49-0a770f3b7b34_buggy.java b/tmp/92bc9a72-2de5-40ef-8a78-c4a4029ea149_fixed.java
index fecb896..8c609f4 100644
--- a/tmp/5232a1d3-0835-402e-8d49-0a770f3b7b34_buggy.java
+++ b/tmp/92bc9a72-2de5-40ef-8a78-c4a4029ea149_fixed.java
@@ -1,34 +1,28 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
 
-        do {
-            if (isEmpty()) break;
+    while (!isEmpty()) {
         Character c = consume();
-            if (last == 0 || last != ESC) {
+        if (last != 0 && last != '\\') { // Fix: check if last char is escaped
             if (c.equals(open)) {
                 depth++;
                 if (start == -1)
                     start = pos;
-                }
-                else if (c.equals(close))
+            } else if (c.equals(close))
                 depth--;
         }
 
-            if (depth > 0 && last != 0)
+        if (depth > 0)
             end = pos; // don't include the outer match pair in the return
+
+        if (depth == 0 && start != -1 && end != -1)
+            break;
+
         last = c;
-        } while (depth > 0);
-        return (end >= 0) ? queue.substring(start, end) : "";
+    }
+
+    return (start >= 0 && end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file
