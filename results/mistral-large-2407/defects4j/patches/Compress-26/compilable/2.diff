diff --git a/tmp/6a72b7a1-1318-4749-8f1b-f9c67a41300c_buggy.java b/tmp/77b776f9-1f4d-4272-b155-29827f20b448_fixed.java
index 4b163f6..a4d400c 100644
--- a/tmp/6a72b7a1-1318-4749-8f1b-f9c67a41300c_buggy.java
+++ b/tmp/77b776f9-1f4d-4272-b155-29827f20b448_fixed.java
@@ -1,28 +1,17 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
     public static long skip(InputStream input, long numToSkip) throws IOException {
         long available = numToSkip;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
             if (skipped == 0) {
-                break;
+                // Fall back to read if skip returns 0
+                if (input.read() == -1) {
+                    break; // End of stream reached
                 }
+                numToSkip--;
+            } else {
                 numToSkip -= skipped;
             }
+        }
 
         return available - numToSkip;
     }
\ No newline at end of file
