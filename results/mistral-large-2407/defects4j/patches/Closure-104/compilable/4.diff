diff --git a/tmp/460747a0-1773-4e88-9f63-efcca8f831d9_buggy.java b/tmp/0a1bc82c-f635-49fd-a471-2936ed6ba47f_fixed.java
index b36b2a9..2ae70e6 100644
--- a/tmp/460747a0-1773-4e88-9f63-efcca8f831d9_buggy.java
+++ b/tmp/0a1bc82c-f635-49fd-a471-2936ed6ba47f_fixed.java
@@ -1,26 +1,37 @@
   JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
+    boolean addedFromCurrent = false;
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
+        addedFromCurrent = true;
       }
     }
 
     if (that instanceof UnionType) {
+      boolean addedFromOther = false;
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
+          addedFromOther = true;
         }
       }
+      if (!addedFromCurrent && !addedFromOther && this.isObject() && that.isObject()) {
+        return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
+      }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
+      if (!addedFromCurrent) {
+        return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
       }
+    }
+
     JSType result = builder.build();
     if (result != null) {
       return result;
-    } else if (this.isObject() && that.isObject()) {
+    } else if (!addedFromCurrent && this.isObject() && that.isObject()) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
       return getNativeType(JSTypeNative.NO_TYPE);
     }
   }
\ No newline at end of file
