diff --git a/tmp/8e1410f5-925e-4e58-a807-0bfcdd25f1c8_buggy.java b/tmp/b54b2521-bc51-45b8-a74d-0d8f49cfe101_fixed.java
index 875b31b..d93a505 100644
--- a/tmp/8e1410f5-925e-4e58-a807-0bfcdd25f1c8_buggy.java
+++ b/tmp/b54b2521-bc51-45b8-a74d-0d8f49cfe101_fixed.java
@@ -1,54 +1,55 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         if (nextLineTabStop >= width)
         {
             // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
 
         // all following lines must be padded with nextLineTabStop space
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+            text = text.substring(pos).trim();
+            pos = findWrapPos(text, width - nextLineTabStop, 0);
 
             if (pos == -1)
             {
-                sb.append(text);
-
-                return sb;
+                sb.append(padding).append(text);
+                break;
             }
 
             if ((text.length() > width) && (pos == nextLineTabStop - 1))
             {
                 pos = width;
             }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            sb.append(padding).append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
+
+        return sb;
     }
\ No newline at end of file
