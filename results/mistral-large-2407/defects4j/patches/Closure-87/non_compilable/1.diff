diff --git a/tmp/68921d95-056f-4813-b4b6-a6957e64170d_buggy.java b/tmp/eb7276a9-d6ee-4419-9496-5336580a8279_fixed.java
index 19fd63e..d01679d 100644
--- a/tmp/68921d95-056f-4813-b4b6-a6957e64170d_buggy.java
+++ b/tmp/eb7276a9-d6ee-4419-9496-5336580a8279_fixed.java
@@ -1,24 +1,26 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
         // IE has a bug where event handlers behave differently when
         // their return value is used vs. when their return value is in
         // an EXPR_RESULT. It's pretty freaking weird. See:
         // http://code.google.com/p/closure-compiler/issues/detail?id=291
         // We try to detect this case, and not fold EXPR_RESULTs
         // into other expressions.
 
         // We only have to worry about methods with an implicit 'this'
         // param, or this doesn't happen.
 
+        Node maybeMethodCall = maybeExpr.getFirstChild();
+        if (maybeMethodCall != null && maybeMethodCall.isGetProp() &&
+            maybeMethodCall.getString().startsWith("on")) {
+          return false;
+        }
+
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
\ No newline at end of file
