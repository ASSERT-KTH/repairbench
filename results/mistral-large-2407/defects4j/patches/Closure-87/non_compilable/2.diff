diff --git a/tmp/ea432253-5a40-497e-901f-86371928d73a_buggy.java b/tmp/147e7f8b-0cc1-4ffa-8fb9-80b5a5056187_fixed.java
index 19fd63e..97783b7 100644
--- a/tmp/ea432253-5a40-497e-901f-86371928d73a_buggy.java
+++ b/tmp/147e7f8b-0cc1-4ffa-8fb9-80b5a5056187_fixed.java
@@ -1,24 +1,28 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
+          // Check if the expression is a call and there is an event handler
+          if (maybeExpr.isCall() &&
+              !maybeExpr.getFirstChild().hasChildren() &&  // No implicit 'this' param
+              maybeExpr.matchesQualifiedName(Node.getAttributeName(maybeExpr))) {
+            return false;
+          }
 
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }
\ No newline at end of file
