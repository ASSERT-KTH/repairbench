diff --git a/tmp/5de851c1-8224-473b-8e0d-a7deb70e4d85_buggy.java b/tmp/2d519976-5b18-4abf-a37c-5a927f86b1cc_fixed.java
index 855afa5..7a5ffa2 100644
--- a/tmp/5de851c1-8224-473b-8e0d-a7deb70e4d85_buggy.java
+++ b/tmp/2d519976-5b18-4abf-a37c-5a927f86b1cc_fixed.java
@@ -1,13 +1,29 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        // properly encode url components
+        String protocol = u.getProtocol();
+        String authority = u.getAuthority();
+        String path = u.getPath();
+        String query = u.getQuery();
+        String ref = u.getRef();
+
+        String encodedPath = escapeComponent(path);
+        String encodedQuery = (query != null) ? escapeComponent(query) : null;
+        String encodedRef = (ref != null) ? escapeComponent(ref) : null;
+
+        URI uri = new URI(protocol, authority, encodedPath, encodedQuery, encodedRef);
         return new URL(uri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
+
+private static String escapeComponent(String component) {
+    try {
+        return URLEncoder.encode(component, "UTF-8").replace("+", "%20");
+    } catch (UnsupportedEncodingException e) {
+        throw new IllegalStateException("UTF-8 encoding not supported", e);
+    }
+}
\ No newline at end of file
