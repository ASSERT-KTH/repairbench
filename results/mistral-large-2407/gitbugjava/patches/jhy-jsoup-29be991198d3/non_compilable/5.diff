diff --git a/tmp/1597b310-fa7d-4322-8285-3b7e6fbe9f1d_buggy.java b/tmp/dc31f47e-2e1f-461d-8be7-86e4a55df6ef_fixed.java
index 862c60c..c57c98b 100644
--- a/tmp/1597b310-fa7d-4322-8285-3b7e6fbe9f1d_buggy.java
+++ b/tmp/dc31f47e-2e1f-461d-8be7-86e4a55df6ef_fixed.java
@@ -1,25 +1,33 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = ((next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
+            || (next instanceof TextNode && (((TextNode) next).isBlank()))); // next is blank text, from re-parenting
         if (couldSkip && isBlank()) return;
 
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank()))
             indent(accum, depth, out);
+
+        // Add additional condition to handle <br> properly
+        if (parentNode instanceof Element &&
+            ((Element) parentNode).tag().getName().equals("br") &&
+            siblingIndex() > 0 && prevSibling() instanceof Element &&
+            ((Element) prevSibling()).tag().getName().equals("br")) {
+            return;
+        }
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
