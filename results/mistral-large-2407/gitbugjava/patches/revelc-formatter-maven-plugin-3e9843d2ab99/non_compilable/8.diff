diff --git a/tmp/09b7fcae-9949-4a99-a0a9-74715123db44_buggy.java b/tmp/bbf5c728-f9dd-485f-907e-c49ca67f4952_fixed.java
index 1098336..4d7ff96 100644
--- a/tmp/09b7fcae-9949-4a99-a0a9-74715123db44_buggy.java
+++ b/tmp/bbf5c728-f9dd-485f-907e-c49ca67f4952_fixed.java
@@ -1,16 +1,26 @@
     @Override
     protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
         final var source = new InputSource(new StringReader(code));
         final var parser = new CSSOMParser(new SACParserCSS3());
         final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
         var formattedCode = sheet.getCssText(this.formatter);
 
         // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
         formattedCode = formattedCode.replace("\t;", "\\9;");
 
-        if (code.equals(formattedCode)) {
+        // Ensure formatted code matches the required line ending
+        if (ending == LineEnding.CRLF) {
+            formattedCode = formattedCode.replace("\n", "\r\n");
+        }
+
+        // Fix the comparison to handle different line endings
+        if (normalizeLineEndings(code).equals(normalizeLineEndings(formattedCode))) {
             return null;
         }
         return formattedCode;
     }
+
+    private String normalizeLineEndings(String code) {
+        return code.replace("\r\n", "\n").replace("\r", "\n");
+    }
\ No newline at end of file
