diff --git a/tmp/eaa457a8-146d-485c-b3ab-5b8e57bd86d4_buggy.java b/tmp/20955443-d953-42e0-9fd3-92e01bb39f20_fixed.java
index acd5eb5..4b984a4 100644
--- a/tmp/eaa457a8-146d-485c-b3ab-5b8e57bd86d4_buggy.java
+++ b/tmp/20955443-d953-42e0-9fd3-92e01bb39f20_fixed.java
@@ -1,32 +1,38 @@
     @Override
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
         final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
         boolean trimLeading = false, trimTrailing = false;
 
         if (normaliseWhite) {
             trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
             trimTrailing = trimLikeBlock && nextSibling() == null;
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             Node prev = previousSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
                 || (prev instanceof Element && ((Element) prev).isBlock())
                 ;
             if (couldSkip && isBlank) return;
 
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && isNode(prev, "br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+            ) {
                 indent(accum, depth, out);
             }
 
+            // Added for handling the '<br>' within a block formatting element
+            if (tag().getName().equals("br") && trimLikeBlock && !isBlank) {
+                indent(accum, depth, out);
+            }
+        }
+
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
