diff --git a/tmp/c81b0b57-b7b0-4f9f-b201-d193747011c3_buggy.java b/tmp/c3806566-5717-474d-b2d1-9d3337d07f6b_fixed.java
index abd3198..c45ec8e 100644
--- a/tmp/c81b0b57-b7b0-4f9f-b201-d193747011c3_buggy.java
+++ b/tmp/c3806566-5717-474d-b2d1-9d3337d07f6b_fixed.java
@@ -1,28 +1,33 @@
     @Override
     protected Object encodeCommand(Command command) {
 
         ByteBuf content = Unpooled.buffer();
 
         switch (command.getType()) {
             case Command.TYPE_POSITION_SINGLE:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
             case Command.TYPE_ENGINE_STOP:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
             case Command.TYPE_ENGINE_RESUME:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
             case Command.TYPE_SET_SPEED_LIMIT:
-                content.writeByte(command.getInteger(Command.KEY_DATA));
+                content.writeByte(command.getInteger(Command.KEY_DATA))
+                       .writeByte(0x78)
+                       .writeByte(command.getInteger(Command.KEY_DATA) == 0 ? 0 : 0);
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
             case Command.TYPE_SET_ODOMETER:
-                content.writeShort(command.getInteger(Command.KEY_DATA));
+                content.writeShort(command.getInteger(Command.KEY_DATA))
+                       .writeByte(0x1d);
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
             case Command.TYPE_POSITION_PERIODIC:
                 String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
-                content.writeShort(Integer.valueOf(data[0]));
-                content.writeShort(Integer.valueOf(data[1]));
-                content.writeShort(Integer.valueOf(data[2]));
+                content.writeShort(Integer.valueOf(data[0]))
+                       .writeShort(Integer.valueOf(data[1]))
+                       .writeShort(Integer.valueOf(data[2]))
+                       .writeByte(0x78)
+                       .writeByte(0x1d);
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);
             default:
                 return null;
         }
     }
\ No newline at end of file
