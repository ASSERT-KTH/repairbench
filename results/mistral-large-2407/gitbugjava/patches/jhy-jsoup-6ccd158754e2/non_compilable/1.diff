diff --git a/tmp/fd615d20-a114-45a8-aeaa-3388dd154b57_buggy.java b/tmp/96eba00c-291e-4302-8b86-7ed8e3e47206_fixed.java
index 23f078d..7151635 100644
--- a/tmp/fd615d20-a114-45a8-aeaa-3388dd154b57_buggy.java
+++ b/tmp/96eba00c-291e-4302-8b86-7ed8e3e47206_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
+                sb.append(URLEncoder.encode(new String(Character.toChars(c)), StandardCharsets.UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
+            // Move to the next position correctly considering UTF-16 surrogate pairs
+            if (Character.charCount(c) > 1) {
+                i++;
+            }
         }
     }
\ No newline at end of file
