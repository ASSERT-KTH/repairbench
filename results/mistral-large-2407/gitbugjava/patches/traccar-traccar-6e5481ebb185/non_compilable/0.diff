diff --git a/tmp/74cd22a7-d060-409f-a578-202c6d5b0954_buggy.java b/tmp/e3c65f6f-17e8-48f6-9515-55f1a194c39c_fixed.java
index ee599aa..29eba69 100644
--- a/tmp/74cd22a7-d060-409f-a578-202c6d5b0954_buggy.java
+++ b/tmp/e3c65f6f-17e8-48f6-9515-55f1a194c39c_fixed.java
@@ -1,50 +1,55 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
 
     int length = 0;
     if (hasLength) {
         length = buf.readUnsignedByte();
         if (length == 0) {
             boolean zeroedData = true;
-                for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
+            int startIndex = buf.readerIndex() + 9;
+            int endIndex = startIndex + 45;
+            if (endIndex > buf.writerIndex()) {
+                endIndex = buf.writerIndex();
+            }
+            for (int i = startIndex; i < endIndex; i++) {
                 if (buf.getByte(i) != 0) {
                     zeroedData = false;
                     break;
                 }
             }
             if (zeroedData) {
                 buf.skipBytes(Math.min(buf.readableBytes(), 45));
             }
             return false;
         }
     }
 
     int mcc = buf.readUnsignedShort();
     int mnc;
     if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
         mnc = buf.readUnsignedShort();
     } else {
         mnc = buf.readUnsignedByte();
     }
     int lac;
     if (type == MSG_LBS_ALARM) {
         lac = buf.readInt();
     } else {
         lac = buf.readUnsignedShort();
     }
     long cid;
     if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
         cid = buf.readLong();
     } else if (type == MSG_GPS_LBS_6) {
         cid = buf.readUnsignedInt();
     } else {
         cid = buf.readUnsignedMedium();
     }
 
     position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
     if (length > 9) {
         buf.skipBytes(length - 9);
     }
 
     return true;
 }
\ No newline at end of file
