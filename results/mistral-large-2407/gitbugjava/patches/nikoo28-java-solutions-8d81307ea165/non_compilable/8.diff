diff --git a/tmp/5793fe89-a12b-45a9-929c-ba8802d807d7_buggy.java b/tmp/4115fc4c-c103-4e9c-b091-a925359b6e49_fixed.java
index 9739964..77bdd34 100644
--- a/tmp/5793fe89-a12b-45a9-929c-ba8802d807d7_buggy.java
+++ b/tmp/4115fc4c-c103-4e9c-b091-a925359b6e49_fixed.java
@@ -1,27 +1,29 @@
   public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+      while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i]) {
         indexStack.pop();
+      }
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
       if (indexStack.isEmpty())
         spans[i] = i + 1;
-      else
-        spans[i] = i - indexStack.peek();
+      else {
+        int prevIndex = indexStack.peek();
+        spans[i] = spans[prevIndex] + (prices[i] > prices[prevIndex] ? i - prevIndex : 0);
+      }
 
       indexStack.push(i);
     }
 
     return spans;
   }
\ No newline at end of file
