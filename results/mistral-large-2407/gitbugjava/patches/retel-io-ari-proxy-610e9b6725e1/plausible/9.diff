diff --git a/tmp/67dd6b79-5c21-4737-91ea-7281808b283f_buggy.java b/tmp/a763e468-4716-4ffc-b011-2d0080fef36f_fixed.java
index eb0a5c8..9333c80 100644
--- a/tmp/67dd6b79-5c21-4737-91ea-7281808b283f_buggy.java
+++ b/tmp/a763e468-4716-4ffc-b011-2d0080fef36f_fixed.java
@@ -1,27 +1,30 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
     if (!ariCommand.extractCommandType().isCreationCommand()) {
       return Try.success(Done.done());
     }
 
     final Option<AriResource> maybeResource =
         ariCommand
             .extractResourceRelations()
             .find(AriResourceRelation::isCreated)
             .map(AriResourceRelation::getResource);
 
     if (maybeResource.isEmpty()) {
       return Try.failure(
           new RuntimeException(
               String.format(
                   "Failed to extract resourceId from command '%s'", ariCommand.toString())));
     }
 
     final AriResource resource = maybeResource.get();
 
+    // Ensure that delete commands do not register a call context
+    if (!"DELETE".equalsIgnoreCase(ariCommand.getMethod())) {
       callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
+    }
     return Try.success(Done.done());
   }
\ No newline at end of file
