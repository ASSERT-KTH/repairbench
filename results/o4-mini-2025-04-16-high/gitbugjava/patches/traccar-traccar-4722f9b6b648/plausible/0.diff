diff --git a/tmp/86dc5ee0-018e-4aa8-b6f5-bcd7c52d2fda_buggy.java b/tmp/1ef4de5a-2d83-4341-8f21-fe53ac6877e3_fixed.java
index c84c989..93df6e5 100644
--- a/tmp/86dc5ee0-018e-4aa8-b6f5-bcd7c52d2fda_buggy.java
+++ b/tmp/1ef4de5a-2d83-4341-8f21-fe53ac6877e3_fixed.java
@@ -1,27 +1,35 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
+    // skip SBD header
     buf.readUnsignedShortLE();       // length
-
     buf.skipBytes(3);                // identification header
     buf.readUnsignedIntLE();         // index
 
-        DeviceSession deviceSession = getDeviceSession(
-                channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
+    // read device id (IMEI)
+    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);
+    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
+    // skip session status/reserved/timestamp
     buf.readUnsignedByte();          // session status
     buf.skipBytes(4);                // reserved
-        buf.readUnsignedIntLE(); // date and time
+    buf.readUnsignedIntLE();         // device timestamp (ignored)
 
-        buf.skipBytes(23); // coordinates block
+    // skip the raw coordinate block
+    buf.skipBytes(23);
 
+    // enter the minimal data set
     buf.skipBytes(3);                // data tag header
     decodeMinimalDataSet(position, buf);
 
+    // for Iridium deliveries we do not trust the onboard time
+    // override position time to server receipt time
+    position.setTime(new Date());
+
     return position;
 }
\ No newline at end of file
