diff --git a/tmp/87c4933b-eac0-4ca3-9ee6-fc9336526041_buggy.java b/tmp/4b2f1223-f1d3-4280-a0a3-078bb88b8da2_fixed.java
index 23f078d..0006abc 100644
--- a/tmp/87c4933b-eac0-4ca3-9ee6-fc9336526041_buggy.java
+++ b/tmp/4b2f1223-f1d3-4280-a0a3-078bb88b8da2_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    int i = 0;
+    while (i < s.length()) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
+        } else if (c > 127) {
+            // handle all non-ASCII, including supplementary code points
             sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
         } else {
             sb.append((char) c);
         }
+        // skip the low-surrogate if this was a supplementary code point
+        i += Character.charCount(c);
     }
 }
\ No newline at end of file
