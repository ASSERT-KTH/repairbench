diff --git a/tmp/32d4ea56-ebce-46bb-807b-b33765fbbd64_buggy.java b/tmp/bb287534-e582-4f8f-ba88-0892deb4d079_fixed.java
index ee599aa..846013a 100644
--- a/tmp/32d4ea56-ebce-46bb-807b-b33765fbbd64_buggy.java
+++ b/tmp/bb287534-e582-4f8f-ba88-0892deb4d079_fixed.java
@@ -1,50 +1,59 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
 
     int length = 0;
     if (hasLength) {
         length = buf.readUnsignedByte();
         if (length == 0) {
+            // skip completely empty LBS block
             boolean zeroedData = true;
             for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
                 if (buf.getByte(i) != 0) {
                     zeroedData = false;
                     break;
                 }
             }
             if (zeroedData) {
                 buf.skipBytes(Math.min(buf.readableBytes(), 45));
             }
             return false;
         }
     }
 
+    // remember where the LBS data block starts
+    int startIndex = buf.readerIndex();
+
+    // read one cell tower record
     int mcc = buf.readUnsignedShort();
     int mnc;
+    // some variants encode MNC as two bytes
     if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
         mnc = buf.readUnsignedShort();
     } else {
         mnc = buf.readUnsignedByte();
     }
-        int lac;
-        if (type == MSG_LBS_ALARM) {
-            lac = buf.readInt();
-        } else {
-            lac = buf.readUnsignedShort();
-        }
+    int lac = (type == MSG_LBS_ALARM)
+            ? buf.readInt() : buf.readUnsignedShort();
     long cid;
     if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
         cid = buf.readLong();
     } else if (type == MSG_GPS_LBS_6) {
         cid = buf.readUnsignedInt();
     } else {
         cid = buf.readUnsignedMedium();
     }
 
-        position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
+    // store the first cell only
+    position.setNetwork(new Network(CellTower.from(
+            BitUtil.to(mcc, 15), mnc, lac, cid)));
 
-        if (length > 9) {
-            buf.skipBytes(length - 9);
+    // skip any remaining bytes in this LBS block
+    if (hasLength) {
+        int readBytes = buf.readerIndex() - startIndex;
+        int toSkip = length - readBytes;
+        if (toSkip > 0) {
+            buf.skipBytes(toSkip);
+        }
     }
 
     return true;
 }
\ No newline at end of file
