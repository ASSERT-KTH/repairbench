diff --git a/tmp/a8510ea6-4459-4715-96d0-cd1500b07e35_buggy.java b/tmp/3d23e7f6-11a4-4bb0-a3cc-717e093f605b_fixed.java
index ee599aa..a50a759 100644
--- a/tmp/a8510ea6-4459-4715-96d0-cd1500b07e35_buggy.java
+++ b/tmp/3d23e7f6-11a4-4bb0-a3cc-717e093f605b_fixed.java
@@ -1,50 +1,63 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
 
     int length = 0;
+    // mark where LBS‐block starts (after the length byte)
+    int startIndex = buf.readerIndex();
     if (hasLength) {
         length = buf.readUnsignedByte();
+        // no LBS data
         if (length == 0) {
-                boolean zeroedData = true;
-                for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
+            return false;
+        }
+        // if the entire block is zeroes, skip it and drop
+        boolean zeroed = true;
+        int endIndex = Math.min(buf.readerIndex() + length, buf.writerIndex());
+        for (int i = buf.readerIndex(); i < endIndex; i++) {
             if (buf.getByte(i) != 0) {
-                        zeroedData = false;
+                zeroed = false;
                 break;
             }
         }
-                if (zeroedData) {
-                    buf.skipBytes(Math.min(buf.readableBytes(), 45));
-                }
+        if (zeroed) {
+            buf.skipBytes(length);
             return false;
         }
     }
 
+    // read MCC
     int mcc = buf.readUnsignedShort();
+    // read MNC (2 bytes if high‐bit flag or type 6, otherwise 1 byte)
     int mnc;
     if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
         mnc = buf.readUnsignedShort();
     } else {
         mnc = buf.readUnsignedByte();
     }
-        int lac;
-        if (type == MSG_LBS_ALARM) {
-            lac = buf.readInt();
-        } else {
-            lac = buf.readUnsignedShort();
-        }
+    // read LAC
+    int lac = (type == MSG_LBS_ALARM)
+            ? buf.readInt()            // 4 bytes for alarm LBS
+            : buf.readUnsignedShort(); // 2 bytes otherwise
+    // read CID
     long cid;
     if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
-            cid = buf.readLong();
+        cid = buf.readLong();         // 8 bytes
     } else if (type == MSG_GPS_LBS_6) {
-            cid = buf.readUnsignedInt();
+        cid = buf.readUnsignedInt();  // 4 bytes
     } else {
-            cid = buf.readUnsignedMedium();
+        cid = buf.readUnsignedMedium(); // 3 bytes
     }
 
-        position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
+    position.setNetwork(new Network(
+            CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
-        if (length > 9) {
-            buf.skipBytes(length - 9);
+    // skip any remaining bytes in the LBS block
+    if (hasLength) {
+        int bytesRead = buf.readerIndex() - startIndex;
+        int toSkip = length - bytesRead;
+        if (toSkip > 0) {
+            buf.skipBytes(toSkip);
+        }
     }
 
     return true;
 }
\ No newline at end of file
