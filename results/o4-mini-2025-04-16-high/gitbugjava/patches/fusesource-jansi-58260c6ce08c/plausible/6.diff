diff --git a/tmp/db26cfaf-227c-42e6-9190-a8d790852b2f_buggy.java b/tmp/37ccc1c8-bf5c-45c4-820f-0d712cfeb760_fixed.java
index 712f277..2c5a899 100644
--- a/tmp/db26cfaf-227c-42e6-9190-a8d790852b2f_buggy.java
+++ b/tmp/37ccc1c8-bf5c-45c4-820f-0d712cfeb760_fixed.java
@@ -1,48 +1,55 @@
 /**
  * Renders the given input to the target Appendable.
  *
  * @param input
  *            source to render
  * @param target
  *            render onto this target Appendable.
  * @return the given Appendable
  * @throws IOException
  *             If an I/O error occurs
  */
 public static Appendable render(final String input, Appendable target) throws IOException {
-
     int i = 0;
     int j, k;
 
     while (true) {
         j = input.indexOf(BEGIN_TOKEN, i);
         if (j == -1) {
             if (i == 0) {
                 target.append(input);
-                    return target;
-                }
+            } else {
                 target.append(input.substring(i));
+            }
             return target;
         }
+
         target.append(input.substring(i, j));
         k = input.indexOf(END_TOKEN, j);
-
         if (k == -1) {
-                target.append(input);
+            // no matching end token -> append the tail and return
+            target.append(input.substring(i));
             return target;
         }
+
+        // invalid if end token appears before the spec even starts
+        if (k < j + BEGIN_TOKEN_LEN) {
+            throw new IllegalArgumentException("Invalid end token before start token");
+        }
+
         j += BEGIN_TOKEN_LEN;
         String spec = input.substring(j, k);
-
         String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
         if (items.length == 1) {
-                target.append(input);
+            // no separator -> treat as raw and return
+            target.append(input.substring(i));
             return target;
         }
+
+        // render the inner text with the given codes
         String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
-
         target.append(replacement);
 
         i = k + END_TOKEN_LEN;
     }
 }
\ No newline at end of file
