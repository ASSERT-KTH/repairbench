diff --git a/tmp/278276fa-5d88-446b-b9d0-20c8ff836dcc_buggy.java b/tmp/709192c3-4167-40b6-9564-ba3314f6ca51_fixed.java
index eb0a5c8..e8f72c6 100644
--- a/tmp/278276fa-5d88-446b-b9d0-20c8ff836dcc_buggy.java
+++ b/tmp/709192c3-4167-40b6-9564-ba3314f6ca51_fixed.java
@@ -1,27 +1,26 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
+  // don't register for deletes or any non‚Äêcreation commands
+  final AriCommandType type = ariCommand.extractCommandType();
+  if (!type.isCreationCommand() || type == AriCommandType.DELETE) {
     return Try.success(Done.done());
   }
 
   final Option<AriResource> maybeResource =
       ariCommand
         .extractResourceRelations()
         .find(AriResourceRelation::isCreated)
         .map(AriResourceRelation::getResource);
 
   if (maybeResource.isEmpty()) {
-      return Try.failure(
-          new RuntimeException(
-              String.format(
-                  "Failed to extract resourceId from command '%s'", ariCommand.toString())));
+    return Try.failure(new RuntimeException(
+      String.format("Failed to extract resourceId from command '%s'", ariCommand)));
   }
 
   final AriResource resource = maybeResource.get();
-
   callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
   return Try.success(Done.done());
 }
\ No newline at end of file
