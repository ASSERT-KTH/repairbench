diff --git a/tmp/4376805a-9923-4373-a1c0-581161da6e5c_buggy.java b/tmp/ab823021-32f0-4c5d-8f38-ab086f4a66fb_fixed.java
index eb0a5c8..f7d08a5 100644
--- a/tmp/4376805a-9923-4373-a1c0-581161da6e5c_buggy.java
+++ b/tmp/ab823021-32f0-4c5d-8f38-ab086f4a66fb_fixed.java
@@ -1,27 +1,28 @@
 public static Try<Done> registerCallContext(
     final ActorRef<CallContextProviderMessage> callContextProvider,
     final String callContext,
     final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
+  // only register for true creation commands; skip deletes and all non-creates
+  if (!ariCommand.extractCommandType().isCreationCommand()
+      || ariCommand.extractCommandType().isDeletionCommand()) {
     return Try.success(Done.done());
   }
 
   final Option<AriResource> maybeResource =
       ariCommand
           .extractResourceRelations()
           .find(AriResourceRelation::isCreated)
           .map(AriResourceRelation::getResource);
 
   if (maybeResource.isEmpty()) {
     return Try.failure(
         new RuntimeException(
             String.format(
-                  "Failed to extract resourceId from command '%s'", ariCommand.toString())));
+                "Failed to extract resourceId from command '%s'", ariCommand)));
   }
 
   final AriResource resource = maybeResource.get();
-
   callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
   return Try.success(Done.done());
 }
\ No newline at end of file
