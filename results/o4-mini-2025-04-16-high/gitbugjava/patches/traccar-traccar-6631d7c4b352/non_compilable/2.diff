diff --git a/tmp/c892bda9-3d71-4392-bc2c-4ba2eb9ed883_buggy.java b/tmp/38dac07f-9adf-48e7-a1ec-575946f3072b_fixed.java
index d87dd79..52004b4 100644
--- a/tmp/c892bda9-3d71-4392-bc2c-4ba2eb9ed883_buggy.java
+++ b/tmp/38dac07f-9adf-48e7-a1ec-575946f3072b_fixed.java
@@ -1,47 +1,58 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    // find the first closing bracket after readerIndex
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
+    if (endIndex < 0) {
+        // no complete frame yet
+        return null;
+    }
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
+    // extract and un‚Äêescape one frame
+    ByteBuf frame = Unpooled.buffer(endIndex - buf.readerIndex());
     while (buf.readerIndex() < endIndex) {
         byte b1 = buf.readByte();
         if (b1 == '}') {
+            // escape sequence
+            if (buf.readerIndex() >= endIndex) {
+                // incomplete escape, treat '}' as literal
+                frame.writeByte(b1);
+                break;
+            }
             byte b2 = buf.readByte();
             switch (b2) {
                 case 0x01:
                     frame.writeByte('}');
                     break;
                 case 0x02:
                     frame.writeByte('[');
                     break;
                 case 0x03:
                     frame.writeByte(']');
                     break;
                 case 0x04:
                     frame.writeByte(',');
                     break;
                 case 0x05:
                     frame.writeByte('*');
                     break;
                 default:
                     throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                            "unexpected escape code at %d: 0x%02x",
+                            buf.readerIndex() - 1, b2 & 0xFF));
             }
         } else {
+            // normal byte
             frame.writeByte(b1);
         }
     }
+
     return frame;
 }
\ No newline at end of file
-
-        return null;
-    }
