diff --git a/tmp/f7511184-44bf-4f5b-91c8-583e354bcd03_buggy.java b/tmp/4ddef034-2292-4421-bd46-87c03f6ae89e_fixed.java
index 862c60c..2e6b368 100644
--- a/tmp/f7511184-44bf-4f5b-91c8-583e354bcd03_buggy.java
+++ b/tmp/4ddef034-2292-4421-bd46-87c03f6ae89e_fixed.java
@@ -1,25 +1,28 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
+    final Element parent = parentNode instanceof Element ? (Element) parentNode : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock())
+            || parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && ((TextNode) next).isBlank());
         if (couldSkip && isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        // indent before writing text if it's the first in a block, in outline mode, or follows an indented element (e.g. <br>)
+        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank())
+            || (out.outline() && siblingNodes().size() > 0 && !isBlank())
+            || (previousSibling() instanceof Element && ((Element) previousSibling()).shouldIndent(out) && !isBlank())) {
             indent(accum, depth, out);
         }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
