diff --git a/tmp/8cbc6ea9-34fa-4c92-a18d-7d3ef74a0254_buggy.java b/tmp/358f7f24-6972-4088-a27a-da58297e2966_fixed.java
index 862c60c..ccdeb35 100644
--- a/tmp/8cbc6ea9-34fa-4c92-a18d-7d3ef74a0254_buggy.java
+++ b/tmp/358f7f24-6972-4088-a27a-da58297e2966_fixed.java
@@ -1,25 +1,35 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
+    final Element parent = parentNode instanceof Element ? (Element) parentNode : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock())
+            || parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
-            Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        Node next = nextSibling();
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && ((TextNode) next).isBlank());
         if (couldSkip && isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        // first-child or outline indent
+        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank())
+            || (out.outline() && siblingNodes().size() > 0 && !isBlank())) {
             indent(accum, depth, out);
         }
 
+        // special-case: indent text after a <br>
+        Node prev = previousSibling();
+        if (prev instanceof Element
+            && ((Element) prev).tagName().equals("br")
+            && !isBlank()) {
+            indent(accum, depth, out);
+        }
+    }
+
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
