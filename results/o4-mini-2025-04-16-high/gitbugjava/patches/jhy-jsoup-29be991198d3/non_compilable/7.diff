diff --git a/tmp/b2ffe38e-8273-45a2-b59c-063d0b3f5bcb_buggy.java b/tmp/5f054b83-7316-413b-8d32-7efd3ae817a6_fixed.java
index 862c60c..bc20d40 100644
--- a/tmp/b2ffe38e-8273-45a2-b59c-063d0b3f5bcb_buggy.java
+++ b/tmp/5f054b83-7316-413b-8d32-7efd3ae817a6_fixed.java
@@ -1,25 +1,36 @@
+@Override
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
+    final Element parent = parentNode instanceof Element ? (Element) parentNode : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock())
+                  || parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+                        || (next instanceof TextNode && ((TextNode) next).isBlank());
         if (couldSkip && isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        // Decide whether to indent before this text node:
+        boolean doIndent = !isBlank() && (
+             // first child of a block-format-as-block parent
+             (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock())
+             // outline mode with multiple siblings
+          || (out.outline() && siblingNodes().size() > 0)
+             // immediately after an element that should indent (e.g. <br>)
+          || (previousSibling() instanceof Element
+                 && ((Element) previousSibling()).shouldIndent(out))
+        );
+        if (doIndent) {
             indent(accum, depth, out);
         }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
