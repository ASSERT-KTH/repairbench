diff --git a/tmp/0d9228c8-eb27-4090-afcb-b9238982b188_buggy.java b/tmp/2d6aad75-4758-41de-982b-e32671c653e4_fixed.java
index 862c60c..413a587 100644
--- a/tmp/0d9228c8-eb27-4090-afcb-b9238982b188_buggy.java
+++ b/tmp/2d6aad75-4758-41de-982b-e32671c653e4_fixed.java
@@ -1,25 +1,40 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
+    final Element parent = parentNode instanceof Element ? (Element) parentNode : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock())
+            || parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out))
+            || (next instanceof TextNode && ((TextNode) next).isBlank());
         if (couldSkip && isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+        if (!isBlank()) {
+            boolean shouldIndent = false;
+            // first text in a block, or in outline mode
+            if (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock()) {
+                shouldIndent = true;
+            } else if (out.outline() && siblingNodes().size() > 0) {
+                shouldIndent = true;
+            } else {
+                // wrap text after a <br> with a newline+indent
+                Node prev = previousSibling();
+                if (prev instanceof Element && ((Element) prev).tagName().equals("br")) {
+                    shouldIndent = true;
+                }
+            }
+            if (shouldIndent) {
                 indent(accum, depth, out);
             }
+        }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
