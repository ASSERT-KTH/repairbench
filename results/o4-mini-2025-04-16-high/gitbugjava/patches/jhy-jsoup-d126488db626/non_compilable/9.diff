diff --git a/tmp/f8f52b15-7823-41ff-b51f-3b42da72e89c_buggy.java b/tmp/d3b6b6f2-44cc-4ea6-bb78-1d585e35069e_fixed.java
index 5bf31b1..7d2cfb2 100644
--- a/tmp/f8f52b15-7823-41ff-b51f-3b42da72e89c_buggy.java
+++ b/tmp/d3b6b6f2-44cc-4ea6-bb78-1d585e35069e_fixed.java
@@ -1,17 +1,24 @@
     private String consumeSubQuery() {
         StringBuilder sq = StringUtil.borrowBuilder();
+        // skip any leading spaces
+        while (!tq.isEmpty() && tq.matches(" ")) {
+            tq.consume();
+        }
+        // read until next combinator (space, ">", "+", "~", or comma)
         while (!tq.isEmpty()) {
-            if (tq.matches("("))
-                sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
-            else if (tq.matches("["))
-                sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
-            else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
+            if (tq.matches("(")) {
+                sq.append("(")
+                  .append(tq.chompBalanced('(', ')'))
+                  .append(")");
+            } else if (tq.matches("[")) {
+                sq.append("[")
+                  .append(tq.chompBalanced('[', ']'))
+                  .append("]");
+            } else if (tq.matchesAny(Combinators)) {
                 break;
-                else
-                    tq.consume();
-            else
+            } else {
                 sq.append(tq.consume());
             }
+        }
         return StringUtil.releaseBuilder(sq);
     }
\ No newline at end of file
