diff --git a/tmp/88c01d81-132a-49ae-a638-5a4f98299811_buggy.java b/tmp/0437806a-8d9e-44a7-8f98-da876ed1f234_fixed.java
index 5bf31b1..635f4fc 100644
--- a/tmp/88c01d81-132a-49ae-a638-5a4f98299811_buggy.java
+++ b/tmp/0437806a-8d9e-44a7-8f98-da876ed1f234_fixed.java
@@ -1,17 +1,25 @@
 private String consumeSubQuery() {
     StringBuilder sq = StringUtil.borrowBuilder();
     while (!tq.isEmpty()) {
-            if (tq.matches("("))
+        if (tq.matches("(")) {
             sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
-            else if (tq.matches("["))
+        } else if (tq.matches("[")) {
             sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
-            else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
+        } else if (tq.matchesAny(Combinators)) {
+            // if we've already read something, stop before this combinator;
+            // otherwise, skip leading combinators (e.g., initial '>', '+', '~', or space)
+            if (sq.length() > 0) {
                 break;
-                else
+            } else {
                 tq.consume();
-            else
+                continue;
+            }
+        } else {
+            // consume a chunk of chars that are not the start of a combinator,
+            // a bracket, or a parenthesis: this handles things like tag names,
+            // IDs, classes, attributes, pseudos, etc.
             sq.append(tq.consume());
         }
+    }
     return StringUtil.releaseBuilder(sq);
 }
\ No newline at end of file
