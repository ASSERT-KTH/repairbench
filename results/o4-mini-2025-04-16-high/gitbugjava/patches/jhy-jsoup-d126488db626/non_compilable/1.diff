diff --git a/tmp/26bf9e31-cff2-47c5-b438-4304b3784066_buggy.java b/tmp/3c57e368-5b7c-4822-85fe-6af78697b715_fixed.java
index 5bf31b1..24fd3e4 100644
--- a/tmp/26bf9e31-cff2-47c5-b438-4304b3784066_buggy.java
+++ b/tmp/3c57e368-5b7c-4822-85fe-6af78697b715_fixed.java
@@ -1,17 +1,26 @@
 private String consumeSubQuery() {
     StringBuilder sq = StringUtil.borrowBuilder();
     while (!tq.isEmpty()) {
-            if (tq.matches("("))
+        if (tq.matches("(")) {
             sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
-            else if (tq.matches("["))
+        } else if (tq.matches("[")) {
             sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
-            else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
+        } else if (tq.matchesAny(Combinators)) {
+            char c = tq.peek();
+            if (Character.isWhitespace(c)) {
+                // skip leading whitespace, but break on whitespace once we've started
+                if (sq.length() > 0) {
                     break;
-                else
+                } else {
                     tq.consume();
-            else
+                }
+            } else {
+                // on any other combinator (>, +, ~), always break and leave it
+                break;
+            }
+        } else {
             sq.append(tq.consume());
         }
+    }
     return StringUtil.releaseBuilder(sq);
 }
\ No newline at end of file
