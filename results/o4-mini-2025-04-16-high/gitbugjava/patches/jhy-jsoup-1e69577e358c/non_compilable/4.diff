diff --git a/tmp/16deca95-588e-44ac-8db8-49cfcd6df45b_buggy.java b/tmp/0e137250-9d0c-4c8c-a137-e11cbfc70897_fixed.java
index c9c77a4..b6a984b 100644
--- a/tmp/16deca95-588e-44ac-8db8-49cfcd6df45b_buggy.java
+++ b/tmp/0e137250-9d0c-4c8c-a137-e11cbfc70897_fixed.java
@@ -1,35 +1,36 @@
 URL build() {
     try {
-            // use the URI class to encode non-ascii in path
+        // use the URI class to encode non-ASCII in path, but preserve any existing % escapes
+        URI origUri = u.toURI();
+        String rawPath = origUri.getRawPath();
+
         URI uri = new URI(
             u.getProtocol(),
             u.getUserInfo(),
-                IDN.toASCII(decodePart(u.getHost())), // puny-code
+            IDN.toASCII(decodePart(u.getHost())), // punyâ€‘code for host
             u.getPort(),
-                decodePart(u.getPath()),
-                null, null // query and fragment appended later so as not to encode
+            rawPath,                              // preserve %2B, etc.
+            null, null                            // query and fragment appended later
         );
 
         String normUrl = uri.toASCIIString();
         if (q != null || u.getRef() != null) {
             StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
             if (q != null) {
                 sb.append('?');
                 appendToAscii(StringUtil.releaseBuilder(q), true, sb);
             }
             if (u.getRef() != null) {
                 sb.append('#');
                 appendToAscii(u.getRef(), false, sb);
             }
             normUrl = StringUtil.releaseBuilder(sb);
         }
         u = new URL(normUrl);
         return u;
     } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
-            // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
+        // on failure, fall back to the original URL
         assert Validate.assertFail(e.toString());
         return u;
     }
 }
\ No newline at end of file
