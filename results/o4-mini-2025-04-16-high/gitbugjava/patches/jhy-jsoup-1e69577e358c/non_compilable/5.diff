diff --git a/tmp/f0937acd-8f61-4558-9e6e-9b88d4ef2afb_buggy.java b/tmp/575c9374-0ebb-42de-ba00-a00fc670b788_fixed.java
index c9c77a4..143f119 100644
--- a/tmp/f0937acd-8f61-4558-9e6e-9b88d4ef2afb_buggy.java
+++ b/tmp/575c9374-0ebb-42de-ba00-a00fc670b788_fixed.java
@@ -1,35 +1,35 @@
 URL build() {
     try {
-            // use the URI class to encode non-ascii in path
+        // use the URI class to encode non-ascii in path, but preserve existing %‚Äêencodings
+        URI original = u.toURI();
+        String rawPath = original.getRawPath();  // e.g. "/%2B32"
         URI uri = new URI(
-                u.getProtocol(),
-                u.getUserInfo(),
-                IDN.toASCII(decodePart(u.getHost())), // puny-code
-                u.getPort(),
-                decodePart(u.getPath()),
+            original.getScheme(),
+            original.getUserInfo(),
+            IDN.toASCII(decodePart(original.getHost())), // punycode the host
+            original.getPort(),
+            rawPath,    // preserve any % sequences in the path
             null, null  // query and fragment appended later so as not to encode
         );
 
         String normUrl = uri.toASCIIString();
         if (q != null || u.getRef() != null) {
             StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
             if (q != null) {
                 sb.append('?');
                 appendToAscii(StringUtil.releaseBuilder(q), true, sb);
             }
             if (u.getRef() != null) {
                 sb.append('#');
                 appendToAscii(u.getRef(), false, sb);
             }
             normUrl = StringUtil.releaseBuilder(sb);
         }
         u = new URL(normUrl);
         return u;
     } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
-            // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
+        // on failure, fall back to the original URL
         assert Validate.assertFail(e.toString());
         return u;
     }
 }
\ No newline at end of file
