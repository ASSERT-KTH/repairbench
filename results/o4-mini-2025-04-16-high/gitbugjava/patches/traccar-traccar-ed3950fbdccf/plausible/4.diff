diff --git a/tmp/5021c391-3d7a-4aa1-a65c-e469412cd4cf_buggy.java b/tmp/f8de791f-402c-4717-9c86-d38d25e602fc_fixed.java
index abd3198..8ef972d 100644
--- a/tmp/5021c391-3d7a-4aa1-a65c-e469412cd4cf_buggy.java
+++ b/tmp/f8de791f-402c-4717-9c86-d38d25e602fc_fixed.java
@@ -1,28 +1,47 @@
 @Override
 protected Object encodeCommand(Command command) {
 
     ByteBuf content = Unpooled.buffer();
 
     switch (command.getType()) {
         case Command.TYPE_POSITION_SINGLE:
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
+            return encodeContent(
+                    command.getDeviceId(),
+                    GatorProtocolDecoder.MSG_POSITION_REQUEST,
+                    content);
         case Command.TYPE_ENGINE_STOP:
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
+            return encodeContent(
+                    command.getDeviceId(),
+                    GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT,
+                    content);
         case Command.TYPE_ENGINE_RESUME:
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
+            return encodeContent(
+                    command.getDeviceId(),
+                    GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT,
+                    content);
         case Command.TYPE_SET_SPEED_LIMIT:
             content.writeByte(command.getInteger(Command.KEY_DATA));
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
+            return encodeContent(
+                    command.getDeviceId(),
+                    GatorProtocolDecoder.MSG_SET_SPEED_LIMIT,
+                    content);
         case Command.TYPE_SET_ODOMETER:
             content.writeShort(command.getInteger(Command.KEY_DATA));
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
+            return encodeContent(
+                    command.getDeviceId(),
+                    GatorProtocolDecoder.MSG_SET_ODOMETER,
+                    content);
         case Command.TYPE_POSITION_PERIODIC:
             String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
-                content.writeShort(Integer.valueOf(data[0]));
-                content.writeShort(Integer.valueOf(data[1]));
-                content.writeShort(Integer.valueOf(data[2]));
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);
+            content.writeShort(Integer.parseInt(data[0]));
+            content.writeShort(Integer.parseInt(data[1]));
+            // third field is a single byte, not a short
+            content.writeByte(Integer.parseInt(data[2]));
+            return encodeContent(
+                    command.getDeviceId(),
+                    GatorProtocolDecoder.MSG_POSITION_PERIODIC,
+                    content);
         default:
             return null;
     }
 }
\ No newline at end of file
