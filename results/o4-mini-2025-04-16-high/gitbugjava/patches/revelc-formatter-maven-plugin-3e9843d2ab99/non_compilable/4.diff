diff --git a/tmp/de6c4194-64e3-49b0-ae19-9b6dd233c2d8_buggy.java b/tmp/104c6d04-749a-4b48-ac1e-59ec01709c71_fixed.java
index 1098336..6446538 100644
--- a/tmp/de6c4194-64e3-49b0-ae19-9b6dd233c2d8_buggy.java
+++ b/tmp/104c6d04-749a-4b48-ac1e-59ec01709c71_fixed.java
@@ -1,16 +1,22 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
-
     final var source = new InputSource(new StringReader(code));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
+
+    // Produce the formatted CSS
     var formattedCode = sheet.getCssText(this.formatter);
 
-        // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
+    // Patch converted 'tab' back to '\9' for IE 7, 8, and 9 hack. Cssparser switches it to a tab.
     formattedCode = formattedCode.replace("\t;", "\\9;");
 
+    // Normalize all EOL to \n, then inject the requested line ending
+    formattedCode = formattedCode.replace("\r\n", "\n").replace("\r", "\n");
+    formattedCode = formattedCode.replace("\n", ending.getChars());
+
+    // If nothing changed, signal no rewrite
     if (code.equals(formattedCode)) {
         return null;
     }
     return formattedCode;
 }
\ No newline at end of file
