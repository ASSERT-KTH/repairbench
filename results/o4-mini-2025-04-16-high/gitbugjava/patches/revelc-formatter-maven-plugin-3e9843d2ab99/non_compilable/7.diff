diff --git a/tmp/ae0387dd-c15c-402a-8a4b-8a34a24a8e4f_buggy.java b/tmp/f445ebd4-7afe-483a-b0cd-a87071107ad9_fixed.java
index 1098336..4b0fa4e 100644
--- a/tmp/ae0387dd-c15c-402a-8a4b-8a34a24a8e4f_buggy.java
+++ b/tmp/f445ebd4-7afe-483a-b0cd-a87071107ad9_fixed.java
@@ -1,16 +1,42 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
+    // preserve leading comments and whitespace
+    int prefixEnd = 0;
+    int len = code.length();
+    while (true) {
+        int idx = prefixEnd;
+        // skip any whitespace
+        while (idx < len && Character.isWhitespace(code.charAt(idx))) {
+            idx++;
+        }
+        // if we see a comment, include it in the prefix
+        if (idx + 1 < len && code.charAt(idx) == '/' && code.charAt(idx + 1) == '*') {
+            int endComment = code.indexOf("*/", idx + 2);
+            if (endComment < 0) {
+                // unterminated comment—stop here
+                break;
+            }
+            prefixEnd = endComment + 2;
+        } else {
+            break;
+        }
+    }
+    String prefix = code.substring(0, prefixEnd);
+    String body = code.substring(prefixEnd);
 
-        final var source = new InputSource(new StringReader(code));
+    // parse and re‐serialize the CSS body
+    final var source = new InputSource(new StringReader(body));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
-        var formattedCode = sheet.getCssText(this.formatter);
+    String formattedBody = sheet.getCssText(this.formatter);
 
-        // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
-        formattedCode = formattedCode.replace("\t;", "\\9;");
+    // Patch converted 'tab' back to '\9' for the IE 7,8,9 hack
+    formattedBody = formattedBody.replace("\t;", "\\9;");
 
-        if (code.equals(formattedCode)) {
+    String formatted = prefix + formattedBody;
+    // if nothing really changed, return null so caller knows it's already formatted
+    if (code.equals(formatted)) {
         return null;
     }
-        return formattedCode;
+    return formatted;
 }
\ No newline at end of file
