diff --git a/tmp/d8525cfa-0fa9-4546-ab48-810963c95c0c_buggy.java b/tmp/37457e79-95dd-4a54-94fb-378c15836964_fixed.java
index 1098336..e528fdc 100644
--- a/tmp/d8525cfa-0fa9-4546-ab48-810963c95c0c_buggy.java
+++ b/tmp/37457e79-95dd-4a54-94fb-378c15836964_fixed.java
@@ -1,16 +1,24 @@
 @Override
 protected String doFormat(final String code, final LineEnding ending) throws IOException {
-
     final var source = new InputSource(new StringReader(code));
     final var parser = new CSSOMParser(new SACParserCSS3());
     final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
     var formattedCode = sheet.getCssText(this.formatter);
 
     // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
     formattedCode = formattedCode.replace("\t;", "\\9;");
 
-        if (code.equals(formattedCode)) {
-            return null;
+    // Normalize all existing line‚Äêbreaks to '\n'
+    formattedCode = formattedCode.replace("\r\n", "\n").replace("\r", "\n");
+    // Then convert to the requested line ending
+    String eol = ending == LineEnding.CRLF ? "\r\n" : "\n";
+    formattedCode = formattedCode.replace("\n", eol);
+
+    // Ensure the output ends with a newline
+    if (!formattedCode.endsWith(eol)) {
+        formattedCode += eol;
     }
-        return formattedCode;
+
+    // If nothing changed, return null to signal idempotence
+    return code.equals(formattedCode) ? null : formattedCode;
 }
\ No newline at end of file
