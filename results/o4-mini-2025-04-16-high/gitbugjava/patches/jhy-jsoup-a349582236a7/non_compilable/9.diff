diff --git a/tmp/669f6689-f31f-4752-9a1d-498d1ed023d8_buggy.java b/tmp/8fe53cc0-2f92-4ece-a111-89a4aca12848_fixed.java
index 3ecd591..bace8c8 100644
--- a/tmp/669f6689-f31f-4752-9a1d-498d1ed023d8_buggy.java
+++ b/tmp/8fe53cc0-2f92-4ece-a111-89a4aca12848_fixed.java
@@ -1,6 +1,25 @@
+// In Element.java
 private boolean isInlineable(Document.OutputSettings out) {
-        return tag().isInline()
-            && (parent() == null || parent().isBlock())
-            && previousSibling() != null
-            && !out.outline();
+    // must be inline, a block-level parent (or no parent), and not in outline mode
+    if (!tag().isInline()
+            || !(parent() == null || parent().isBlock())
+            || out.outline()) {
+        return false;
+    }
+    // skip over any purely-whitespace text nodes
+    Node prev = previousSibling();
+    while (prev instanceof TextNode 
+            && ((TextNode) prev).getWholeText().trim().length() == 0) {
+        prev = prev.previousSibling();
+    }
+    // no real previous content => not inlineable
+    if (prev == null) {
+        return false;
+    }
+    // if the previous node is an element, it must itself be inline
+    if (prev instanceof Element) {
+        return ((Element) prev).tag().isInline();
+    }
+    // any non-whitespace text node counts as inlineable
+    return true;
 }
\ No newline at end of file
