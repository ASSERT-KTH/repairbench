diff --git a/tmp/b7b316dd-8366-4c39-a4ee-508228f00901_buggy.java b/tmp/fe12b278-a86e-44bb-ab92-1245372b8524_fixed.java
index 33e2e76..eaf328b 100644
--- a/tmp/b7b316dd-8366-4c39-a4ee-508228f00901_buggy.java
+++ b/tmp/fe12b278-a86e-44bb-ab92-1245372b8524_fixed.java
@@ -1,126 +1,144 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
+    // nothing to do if no custom form
+    if (form == null || form.isEmpty()) {
+        return;
+    }
     CellTower cellTower = new CellTower();
     String[] keys = form.substring(1).split("%");
     for (String key : keys) {
+        if (key.isEmpty()) {
+            continue;
+        }
         switch (key) {
             case "SA":
                 position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                 break;
             case "MV":
                 position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
                 break;
             case "BV":
                 position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
                 break;
             case "GQ":
                 cellTower.setSignalStrength((int) buf.readUnsignedByte());
                 break;
             case "CE":
                 cellTower.setCellId(buf.readUnsignedInt());
                 break;
             case "LC":
                 cellTower.setLocationAreaCode(buf.readUnsignedShort());
                 break;
             case "CN":
-                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
-                    cellTower.setMobileCountryCode(combinedMobileCodes / 100);
-                    cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
+                int combined = (int) (buf.readUnsignedInt() % 100000);
+                cellTower.setMobileCountryCode(combined / 100);
+                cellTower.setMobileNetworkCode(combined % 100);
                 break;
             case "RL":
-                    buf.readUnsignedByte(); // rxlev
+                buf.readUnsignedByte();
                 break;
             case "PC":
                 position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
                 break;
             case "AT":
                 position.setAltitude(buf.readUnsignedInt());
                 break;
             case "RP":
                 position.set(Position.KEY_RPM, buf.readUnsignedShort());
                 break;
             case "GS":
                 position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                 break;
             case "DT":
                 position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
                 break;
             case "VN":
                 position.set(Position.KEY_VIN, readString(buf));
                 break;
             case "MF":
-                    buf.readUnsignedShort(); // mass air flow rate
+                buf.readUnsignedShort();
                 break;
             case "EL":
-                    buf.readUnsignedByte(); // engine load
+                buf.readUnsignedByte();
                 break;
             case "TR":
                 position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                 break;
             case "ET":
                 position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
                 break;
             case "FL":
                 position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                 break;
             case "ML":
-                    buf.readUnsignedByte(); // mil status
+                buf.readUnsignedByte();
                 break;
             case "FC":
                 position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
                 break;
             case "CI":
-                    readString(buf); // format string
+                // format string
+                readString(buf);
+                break;
+            case "OD":
+                // odometer
+                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt());
                 break;
             case "AV1":
                 position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
                 break;
             case "NC":
-                    readString(buf); // gsm neighbor cell info
+                readString(buf);
                 break;
             case "SM":
-                    buf.readUnsignedShort(); // max speed between reports
+                buf.readUnsignedShort();
                 break;
             case "GL":
-                    readString(buf); // google link
+                readString(buf);
                 break;
             case "MA":
-                    readString(buf); // mac address
+                readString(buf);
                 break;
             case "PD":
-                    buf.readUnsignedByte(); // pending code status
+                buf.readUnsignedByte();
                 break;
             case "CD":
                 position.set(Position.KEY_ICCID, readString(buf));
                 break;
             case "CM":
-                    buf.readLong(); // imsi
+                buf.readLong();
                 break;
             case "GN":
-                    buf.skipBytes(60); // g sensor data
+                buf.skipBytes(60);
                 break;
             case "GV":
-                    buf.skipBytes(6); // maximum g force
+                buf.skipBytes(6);
                 break;
             case "ME":
-                    buf.readLong(); // imei
+                buf.readLong();
                 break;
             case "IA":
-                    buf.readUnsignedByte(); // intake air temperature
+                buf.readUnsignedByte();
                 break;
             case "MP":
-                    buf.readUnsignedByte(); // manifold absolute pressure
+                buf.readUnsignedByte();
+                break;
+            case "XS":
+            case "VS":
+                // extra/vehicle sensor data
+                buf.readUnsignedShort();
                 break;
             default:
+                // skip unknown 4â€‘byte field
+                buf.readUnsignedInt();
                 break;
         }
     }
-
     if (cellTower.getMobileCountryCode() != null
             && cellTower.getMobileNetworkCode() != null
             && cellTower.getCellId() != null && cellTower.getCellId() != 0
             && cellTower.getLocationAreaCode() != null) {
         position.setNetwork(new Network(cellTower));
     } else if (cellTower.getSignalStrength() != null) {
         position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
     }
 }
\ No newline at end of file
