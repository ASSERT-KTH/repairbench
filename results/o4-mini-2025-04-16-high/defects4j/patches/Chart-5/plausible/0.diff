diff --git a/tmp/452d0114-ef21-4230-965a-9833aa50deaf_buggy.java b/tmp/6c90bc64-528e-4cd0-8d2e-50497b717b93_fixed.java
index fd8eae5..2f35929 100644
--- a/tmp/452d0114-ef21-4230-965a-9833aa50deaf_buggy.java
+++ b/tmp/6c90bc64-528e-4cd0-8d2e-50497b717b93_fixed.java
@@ -1,47 +1,55 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
 
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
     int index = indexOf(x);
+
+    // existing X, and duplicates are not allowed --> update
     if (index >= 0 && !this.allowDuplicateXValues) {
         XYDataItem existing = (XYDataItem) this.data.get(index);
         try {
             overwritten = (XYDataItem) existing.clone();
         }
         catch (CloneNotSupportedException e) {
             throw new SeriesException("Couldn't clone XYDataItem!");
         }
         existing.setY(y);
     }
     else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+        // new item (either X not present, or duplicates allowed)
+        XYDataItem newItem = new XYDataItem(x, y);
+
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            int insertIndex;
+            if (index < 0) {
+                // standard binary‐search insertion point
+                insertIndex = -index - 1;
             }
             else {
-                this.data.add(new XYDataItem(x, y));
+                // duplicate X allowed: insert after any existing items with the same X
+                insertIndex = index + 1;
+                while (insertIndex < this.data.size()) {
+                    XYDataItem item = (XYDataItem) this.data.get(insertIndex);
+                    if (!item.getX().equals(x)) {
+                        break;
                     }
-            // check if this addition will exceed the maximum item count...
+                    insertIndex++;
+                }
+            }
+            this.data.add(insertIndex, newItem);
+        }
+        else {
+            this.data.add(newItem);
+        }
+
+        // enforce maximum item count
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
+
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file
