diff --git a/tmp/b7edad7b-d41d-4dbc-8f38-df1887e60a86_buggy.java b/tmp/3912c320-fc1a-481c-a5fe-b16e71c008f2_fixed.java
index fd8eae5..5cfdde7 100644
--- a/tmp/b7edad7b-d41d-4dbc-8f38-df1887e60a86_buggy.java
+++ b/tmp/3912c320-fc1a-481c-a5fe-b16e71c008f2_fixed.java
@@ -1,47 +1,47 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
 
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
     int index = indexOf(x);
+
+    // update an existing item if duplicates are not allowed
     if (index >= 0 && !this.allowDuplicateXValues) {
         XYDataItem existing = (XYDataItem) this.data.get(index);
         try {
             overwritten = (XYDataItem) existing.clone();
         }
         catch (CloneNotSupportedException e) {
             throw new SeriesException("Couldn't clone XYDataItem!");
         }
         existing.setY(y);
     }
     else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+        // add a new item
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            int insertionIndex;
+            if (index < 0) {
+                // no existing x, index is -(insertionPoint+1)
+                insertionIndex = -index - 1;
             }
             else {
+                // duplicate x but duplicates allowed,
+                // insert immediately after the existing item
+                insertionIndex = index + 1;
+            }
+            this.data.add(insertionIndex, new XYDataItem(x, y));
+        }
+        else {
+            // unsorted: just append
             this.data.add(new XYDataItem(x, y));
         }
-            // check if this addition will exceed the maximum item count...
+        // enforce maximum item count
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
+
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file
