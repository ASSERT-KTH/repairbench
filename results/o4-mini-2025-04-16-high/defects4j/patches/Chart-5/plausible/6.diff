diff --git a/tmp/6ed1f693-3239-4112-b56a-9d968238f0a1_buggy.java b/tmp/f06f59cc-297e-4036-be6b-8deb82c206a6_fixed.java
index fd8eae5..6d04a6d 100644
--- a/tmp/6ed1f693-3239-4112-b56a-9d968238f0a1_buggy.java
+++ b/tmp/f06f59cc-297e-4036-be6b-8deb82c206a6_fixed.java
@@ -1,47 +1,43 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
-
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
     int index = indexOf(x);
     if (index >= 0 && !this.allowDuplicateXValues) {
         XYDataItem existing = (XYDataItem) this.data.get(index);
         try {
             overwritten = (XYDataItem) existing.clone();
         }
         catch (CloneNotSupportedException e) {
             throw new SeriesException("Couldn't clone XYDataItem!");
         }
         existing.setY(y);
     }
     else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            int insertionIndex;
+            if (index < 0) {
+                // no existing key, use binary-search insertion point
+                insertionIndex = -index - 1;
+            }
+            else {
+                // duplicates allowed, insert after any existing items with the same x
+                insertionIndex = index + 1;
+                while (insertionIndex < this.data.size() &&
+                       ((XYDataItem) this.data.get(insertionIndex)).getX().equals(x)) {
+                    insertionIndex++;
+                }
+            }
+            this.data.add(insertionIndex, new XYDataItem(x, y));
         }
         else {
             this.data.add(new XYDataItem(x, y));
         }
-            // check if this addition will exceed the maximum item count...
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file
