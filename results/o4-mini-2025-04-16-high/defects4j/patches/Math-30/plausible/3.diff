diff --git a/tmp/a8d91272-a1e5-4a88-8a81-64357da2c78e_buggy.java b/tmp/0f6f4708-3d44-4c26-ad3d-e7ff36a72354_fixed.java
index 3c69e10..79bd544 100644
--- a/tmp/a8d91272-a1e5-4a88-8a81-64357da2c78e_buggy.java
+++ b/tmp/0f6f4708-3d44-4c26-ad3d-e7ff36a72354_fixed.java
@@ -1,27 +1,29 @@
 /**
  * @param Umin smallest Mann-Whitney U value
  * @param n1 number of subjects in first sample
  * @param n2 number of subjects in second sample
  * @return two-sided asymptotic p-value
  * @throws ConvergenceException if the p-value can not be computed
  * due to a convergence error
  * @throws MaxCountExceededException if the maximum number of
  * iterations is exceeded
  */
 private double calculateAsymptoticPValue(final double Umin,
                                          final int n1,
                                          final int n2)
     throws ConvergenceException, MaxCountExceededException {
 
-        final int n1n2prod = n1 * n2;
+    // promote to long (or double) to avoid int overflow for large n1/n2
+    final long n1n2 = (long) n1 * n2;
 
-        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
-        final double EU = n1n2prod / 2.0;
-        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
+    // expected value and variance under H0
+    final double EU   = n1n2 / 2.0;
+    final double VarU = n1n2 * (n1 + n2 + 1) / 12.0;
 
+    // z‐score
     final double z = (Umin - EU) / FastMath.sqrt(VarU);
 
+    // two‐sided p‐value from the standard normal
     final NormalDistribution standardNormal = new NormalDistribution(0, 1);
-
     return 2 * standardNormal.cumulativeProbability(z);
 }
\ No newline at end of file
