diff --git a/tmp/33c22a16-9a55-42ff-97cf-5084dce01f3d_buggy.java b/tmp/2bbbe190-6800-4277-b24e-4b237ad9413d_fixed.java
index 3002587..c818894 100644
--- a/tmp/33c22a16-9a55-42ff-97cf-5084dce01f3d_buggy.java
+++ b/tmp/2bbbe190-6800-4277-b24e-4b237ad9413d_fixed.java
@@ -1,10 +1,33 @@
 /**
  * Fits a Gaussian function to the observed points.
  *
  * @return the parameters of the Gaussian function that best fits the
  * observed points (in the same order as above).
  */
 public double[] fit() {
-        final double[] guess = (new ParameterGuesser(getObservations())).guess();
-        return fit(new Gaussian.Parametric(), guess);
+    final double[] guess = new ParameterGuesser(getObservations()).guess();
+    // wrap the Gaussian.Parametric so that any illegal (e.g. Ïƒ<=0) evaluations
+    // return NaN instead of throwing and aborting the optimization
+    return fit(new Gaussian.Parametric() {
+        @Override
+        public double value(double x, double... parameters) {
+            try {
+                return super.value(x, parameters);
+            } catch (RuntimeException e) {
+                return Double.NaN;
+            }
+        }
+        @Override
+        public double[] gradient(double x, double... parameters) {
+            try {
+                return super.gradient(x, parameters);
+            } catch (RuntimeException e) {
+                double[] nan = new double[parameters.length];
+                for (int i = 0; i < nan.length; i++) {
+                    nan[i] = Double.NaN;
+                }
+                return nan;
+            }
+        }
+    }, guess);
 }
\ No newline at end of file
