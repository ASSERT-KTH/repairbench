diff --git a/tmp/cfff5199-97c9-456a-a53c-520a8b55369e_buggy.java b/tmp/bef52d80-8caa-4036-ab2f-47219bca228a_fixed.java
index b529d33..54c3818 100644
--- a/tmp/cfff5199-97c9-456a-a53c-520a8b55369e_buggy.java
+++ b/tmp/bef52d80-8caa-4036-ab2f-47219bca228a_fixed.java
@@ -1,29 +1,31 @@
 /**
  * Used internally by the Soundex algorithm.
  *
  * Consonants from the same code group separated by W or H are treated as one.
  *
  * @param str
  *                  the cleaned working string to encode (in upper case).
  * @param index
  *                  the character position to encode
-     * @return Mapping code for a particular character
+ * @return Mapping code for a particular character, or 0 to skip
  * @throws IllegalArgumentException
  *                  if the character is not mapped
  */
 private char getMappingCode(final String str, final int index) {
     // map() throws IllegalArgumentException
     final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
+
+    // HW‐rule: if a consonant is preceded by H or W,
+    // and the code two positions back is the same, skip it
     if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
-                final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+        char hw = str.charAt(index - 1);
+        if (hw == 'H' || hw == 'W') {
+            char prev = str.charAt(index - 2);
+            if (this.map(prev) == mappedChar) {
                 return 0;
             }
         }
     }
+
     return mappedChar;
 }
\ No newline at end of file
