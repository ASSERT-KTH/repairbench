diff --git a/tmp/4d56d116-15e9-42a7-8b45-9daa91e86db1_buggy.java b/tmp/2de49318-dbcd-4d40-9e01-fa7437e6eaa7_fixed.java
index b529d33..cbc1b53 100644
--- a/tmp/4d56d116-15e9-42a7-8b45-9daa91e86db1_buggy.java
+++ b/tmp/2de49318-dbcd-4d40-9e01-fa7437e6eaa7_fixed.java
@@ -1,29 +1,18 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
 private char getMappingCode(final String str, final int index) {
     // map() throws IllegalArgumentException
     final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
+    // HW rule check: if this letter maps to a digit and is preceded by H or W,
+    // suppress it only when the character before the H/W maps to the same digit
     if (index > 1 && mappedChar != '0') {
         final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
+        if (hwChar == 'H' || hwChar == 'W') {
             final char preHWChar = str.charAt(index - 2);
             final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+            if (firstCode == mappedChar) {
+                // treat as already encoded (consonant + H/W + same-group consonant)
                 return 0;
             }
         }
     }
     return mappedChar;
 }
\ No newline at end of file
