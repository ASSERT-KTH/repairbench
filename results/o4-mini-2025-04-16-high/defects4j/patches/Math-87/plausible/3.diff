diff --git a/tmp/0af69648-67ad-49fe-bf0f-ddef339b84a1_buggy.java b/tmp/f992ae77-fa92-4e5d-bc31-0e9a30ff55fd_fixed.java
index 70cafe0..9ff20cb 100644
--- a/tmp/0af69648-67ad-49fe-bf0f-ddef339b84a1_buggy.java
+++ b/tmp/f992ae77-fa92-4e5d-bc31-0e9a30ff55fd_fixed.java
@@ -1,18 +1,26 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+            double entry = getEntry(i, col);
+            // if it's essentially zero, skip
+            if (MathUtils.equals(entry, 0.0, epsilon)) {
+                continue;
+            }
+            // if it's not 1, this column can't be a basic identity column
+            if (!MathUtils.equals(entry, 1.0, epsilon)) {
+                return null;
+            }
+            // we've seen a 1 â€“ record its row, but ensure it's unique
             if (row == null) {
                 row = i;
             } else {
                 return null;
             }
         }
-        }
         return row;
     }
\ No newline at end of file
