diff --git a/tmp/94fee8f0-b737-4128-a35c-ace4800f6f9a_buggy.java b/tmp/94097f5c-c95c-4017-aa20-88a6472d9b3e_fixed.java
index 70cafe0..4ff5e6c 100644
--- a/tmp/94fee8f0-b737-4128-a35c-ace4800f6f9a_buggy.java
+++ b/tmp/94097f5c-c95c-4017-aa20-88a6472d9b3e_fixed.java
@@ -1,18 +1,22 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
+    // scan all rows (including the objective row) so that columns
+    // with a non‐zero in the cost row (like free‐variable splits) are not
+    // wrongly seen as basic
+    for (int i = 0; i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
             if (row == null) {
                 row = i;
             } else {
+                // more than one non-zero ⇒ not a basic column
                 return null;
             }
         }
     }
     return row;
 }
\ No newline at end of file
