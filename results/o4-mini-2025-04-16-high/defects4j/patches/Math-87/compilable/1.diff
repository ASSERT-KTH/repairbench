diff --git a/tmp/dccc3342-f6bf-4d7a-a998-6ac476810c7b_buggy.java b/tmp/87ad1757-f235-45d0-b3eb-0f891c2df517_fixed.java
index 70cafe0..869d1d4 100644
--- a/tmp/dccc3342-f6bf-4d7a-a998-6ac476810c7b_buggy.java
+++ b/tmp/87ad1757-f235-45d0-b3eb-0f891c2df517_fixed.java
@@ -1,18 +1,20 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in.  null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
-        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
+    // include all rows (even objective rows) when testing for the identity pattern
+    for (int i = 0; i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
             if (row == null) {
                 row = i;
             } else {
+                // more than one non‐zero entry → not a basic column
                 return null;
             }
         }
     }
     return row;
 }
\ No newline at end of file
