diff --git a/tmp/81027969-a687-431e-b20b-c2cc5c0fe9b1_buggy.java b/tmp/4337d110-da8b-40a4-871b-f1fdf549ed73_fixed.java
index a7d0787..7358ce9 100644
--- a/tmp/81027969-a687-431e-b20b-c2cc5c0fe9b1_buggy.java
+++ b/tmp/4337d110-da8b-40a4-871b-f1fdf549ed73_fixed.java
@@ -1,54 +1,49 @@
 /**
  * Returns the <code>Object</code> of type <code>clazz</code>
  * with the value of <code>str</code>.
  *
  * @param str the command line value
  * @param clazz the type of argument
  * @return The instance of <code>clazz</code> initialised with
  * the value of <code>str</code>.
  * @throws ParseException if the value creation for the given class failed
  */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+    if (PatternOptionBuilder.STRING_VALUE == clazz) {
         return (T) str;
     }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+    else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
         return (T) createObject(str);
     }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+    else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
         return (T) createNumber(str);
     }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+    // support any subclass of Number (e.g. Integer, Double, etc.)
+    else if (PatternOptionBuilder.NUMBER_VALUE.isAssignableFrom(clazz)) {
+        return (T) createNumber(str, clazz);
+    }
+    else if (PatternOptionBuilder.DATE_VALUE == clazz) {
         return (T) createDate(str);
     }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+    else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
         return (T) createClass(str);
     }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+    else if (PatternOptionBuilder.FILE_VALUE == clazz) {
         return (T) createFile(str);
     }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+    else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
         return (T) openFile(str);
     }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+    else if (PatternOptionBuilder.FILES_VALUE == clazz) {
         return (T) createFiles(str);
     }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+    else if (PatternOptionBuilder.URL_VALUE == clazz) {
         return (T) createURL(str);
     }
-        else
-        {
-            return null;
+    else {
+        throw new ParseException(
+            "Cannot convert value '" + str + "' to class " + clazz.getName()
+        );
     }
 }
\ No newline at end of file
