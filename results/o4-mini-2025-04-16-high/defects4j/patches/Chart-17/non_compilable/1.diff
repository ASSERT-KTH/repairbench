diff --git a/tmp/81ae9173-20c8-4b54-8caa-306f3fa39e8e_buggy.java b/tmp/8b794aae-2775-4ab0-b3eb-e3e9f54cd8ca_fixed.java
index 55391e1..d783c45 100644
--- a/tmp/81ae9173-20c8-4b54-8caa-306f3fa39e8e_buggy.java
+++ b/tmp/8b794aae-2775-4ab0-b3eb-e3e9f54cd8ca_fixed.java
@@ -1,19 +1,12 @@
-    /**
-     * Returns a clone of the time series.
-     * <P>
-     * Notes:
-     * <ul>
-     *   <li>no need to clone the domain and range descriptions, since String 
-     *     object is immutable;</li>
-     *   <li>we pass over to the more general method clone(start, end).</li>
-     * </ul>
-     *
-     * @return A clone of the time series.
-     * 
-     * @throws CloneNotSupportedException not thrown by this class, but 
-     *         subclasses may differ.
-     */
+@Override
 public Object clone() throws CloneNotSupportedException {
-        Object clone = createCopy(0, getItemCount() - 1);
-        return clone;
+    // for non‐empty series we can delegate to createCopy,
+    // but createCopy(0, -1) will blow up on an empty series:
+    if (getItemCount() > 0) {
+        return createCopy(0, getItemCount() - 1);
+    }
+    // empty series: do a shallow clone of all fields, then reset the data list
+    TimeSeries copy = (TimeSeries) super.clone();
+    copy.data = new java.util.ArrayList();
+    return copy;
 }
\ No newline at end of file
