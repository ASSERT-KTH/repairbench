diff --git a/tmp/219c58e7-36ed-4ae3-a7d2-a59cac0e0f0f_buggy.java b/tmp/f505ef5a-7ded-42a0-97a5-fa6877ccdd89_fixed.java
index 6cfa79b..2411120 100644
--- a/tmp/219c58e7-36ed-4ae3-a7d2-a59cac0e0f0f_buggy.java
+++ b/tmp/f505ef5a-7ded-42a0-97a5-fa6877ccdd89_fixed.java
@@ -1,12 +1,12 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
+@Override
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double delta = x - mean;
+    // top‚Äêcode extreme values to avoid Erf convergence failures
+    if (delta <= -10.0 * standardDeviation) {
+        return 0.0;
+    }
+    if (delta >=  10.0 * standardDeviation) {
+        return 1.0;
+    }
+    return 0.5 * (1.0 + Erf.erf(delta / (standardDeviation * Math.sqrt(2.0))));
 }
\ No newline at end of file
