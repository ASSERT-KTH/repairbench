diff --git a/tmp/58037290-a225-411a-8941-289ab5a535cd_buggy.java b/tmp/6644c87e-4e8b-43a1-8221-940c299089b5_fixed.java
index 6cfa79b..d94c412 100644
--- a/tmp/58037290-a225-411a-8941-289ab5a535cd_buggy.java
+++ b/tmp/6644c87e-4e8b-43a1-8221-940c299089b5_fixed.java
@@ -1,12 +1,20 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
+ * For this distribution, X, this method returns P(X < x).
+ * If x is more than 20 standard deviations from the mean we
+ * "top‐code" to 0 or 1 rather than risk a convergence failure
+ * in the Erf approximation.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double dev = x - mean;
+    double sd  = standardDeviation;
+    double z   = dev / sd;
+    // top‐code extremes to avoid Erf convergence failures
+    if (z <= -20.0) {
+        return 0.0;
+    }
+    if (z >= 20.0) {
+        return 1.0;
+    }
+    // otherwise delegate to the standard Erf-based formula
+    return 0.5 * (1.0 + Erf.erf(dev / (sd * Math.sqrt(2.0))));
 }
\ No newline at end of file
