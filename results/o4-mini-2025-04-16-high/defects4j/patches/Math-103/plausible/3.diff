diff --git a/tmp/6bf927a6-2cc1-473c-b716-5bff8e860442_buggy.java b/tmp/f6dff4af-4334-4bce-95a9-71477a508b31_fixed.java
index 6cfa79b..e5be3d7 100644
--- a/tmp/6bf927a6-2cc1-473c-b716-5bff8e860442_buggy.java
+++ b/tmp/f6dff4af-4334-4bce-95a9-71477a508b31_fixed.java
@@ -1,12 +1,21 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X < x).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at x.
  * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
+ * x is more than 20 standard deviations from the mean, in which case
+ * 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double dev = x - mean;
+    double sd  = standardDeviation;
+    // top‚Äêcode extreme tails to avoid convergence errors
+    if (dev < -20.0 * sd) {
+        return 0.0;
+    }
+    if (dev >  20.0 * sd) {
+        return 1.0;
+    }
+    // safe to use the error function
+    return 0.5 * (1.0 + Erf.erf(dev / (sd * Math.sqrt(2.0))));
 }
\ No newline at end of file
