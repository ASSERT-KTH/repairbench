diff --git a/tmp/5f2fab8d-1b7c-415f-873d-7a4203700d02_buggy.java b/tmp/b3fdae86-f22e-4546-8154-49f850ab7fa5_fixed.java
index 6cfa79b..e3089ac 100644
--- a/tmp/5f2fab8d-1b7c-415f-873d-7a4203700d02_buggy.java
+++ b/tmp/b3fdae86-f22e-4546-8154-49f850ab7fa5_fixed.java
@@ -1,12 +1,18 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    // compute the normalized deviation from the mean
+    double dev = (x - mean) / standardDeviation;
+    // top‚Äêcode extreme values to avoid convergence problems in Erf
+    if (dev < -20.0) {
+        return 0.0;
+    }
+    if (dev > 20.0) {
+        return 1.0;
+    }
+    // otherwise delegate to the error function, catching any convergence exception
+    try {
+        return 0.5 * (1.0 + Erf.erf(dev / Math.sqrt(2.0)));
+    } catch (MathException ex) {
+        // if erf fails to converge, return the appropriate tail
+        return (dev < 0) ? 0.0 : 1.0;
+    }
 }
\ No newline at end of file
