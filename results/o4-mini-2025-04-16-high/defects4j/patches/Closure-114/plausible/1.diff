diff --git a/tmp/43348309-9159-4eb7-9713-527a3a452b1c_buggy.java b/tmp/773a5909-199a-4f1d-acdb-d41dced10fb0_fixed.java
index c51c8b1..9db87bd 100644
--- a/tmp/43348309-9159-4eb7-9713-527a3a452b1c_buggy.java
+++ b/tmp/773a5909-199a-4f1d-acdb-d41dced10fb0_fixed.java
@@ -1,31 +1,23 @@
 private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {
   Node nameNode = n.getFirstChild();
   Node parent = n.getParent();
   NameInformation ns = createNameInformation(t, nameNode);
   if (ns != null) {
     if (parent.isFor() && !NodeUtil.isForIn(parent)) {
       // Patch for assignments that appear in the init,
-          // condition or iteration part of a FOR loop.  Without
-          // this change, all 3 of those parts try to claim the for
-          // loop as their dependency scope.  The last assignment in
-          // those three fields wins, which can result in incorrect
-          // reference edges between referenced and assigned variables.
-          //
-          // TODO(user) revisit the dependency scope calculation
-          // logic.
+      // condition or iteration part of a FOR loop.
       if (parent.getFirstChild().getNext() != n) {
         recordDepScope(recordNode, ns);
       } else {
         recordDepScope(nameNode, ns);
       }
+    } else if (parent.isCall() && parent.getFirstChild() == n) {
+      // The assignment appears as the callee of a call,
+      // so we do NOT associate the call context with the LHS name.
+      // This fixes the direct "(fun = ... )()" case.
     } else {
-          // The rhs of the assignment is the caller, so it's used by the
-          // context. Don't associate it w/ the lhs.
-          // FYI: this fixes only the specific case where the assignment is the
-          // caller expression, but it could be nested deeper in the caller and
-          // we would still get a bug.
-          // See testAssignWithCall2 for an example of this.
+      // All other cases: record dependency on the current context.
       recordDepScope(recordNode, ns);
     }
   }
 }
\ No newline at end of file
