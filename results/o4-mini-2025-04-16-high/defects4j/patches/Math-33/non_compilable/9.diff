diff --git a/tmp/15ec805a-c339-4f27-b20f-1306def38451_buggy.java b/tmp/bcc9debe-4b09-4fb3-bf69-11dc5c484da2_fixed.java
index 56b2d66..8ea96c3 100644
--- a/tmp/15ec805a-c339-4f27-b20f-1306def38451_buggy.java
+++ b/tmp/bcc9debe-4b09-4fb3-bf69-11dc5c484da2_fixed.java
@@ -1,45 +1,50 @@
 /**
-     * Removes the phase 1 objective function, positive cost non-artificial variables,
-     * and the non-basic artificial variables from this tableau.
+ * Removes the phase 1 objective function and the non‐basic artificial variables
+ * from this tableau.
  */
+@Override
 protected void dropPhase1Objective() {
+    // if there is only one objective (no artificial vars were added), nothing to do
     if (getNumObjectiveFunctions() == 1) {
         return;
     }
 
+    // collect the columns to drop:
+    //   0 = the phase-1 RHS column
+    //   any non‐basic artificial variable columns
     List<Integer> columnsToDrop = new ArrayList<Integer>();
     columnsToDrop.add(0);
 
-        // positive cost non-artificial variables
-        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
-            final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
-                columnsToDrop.add(i);
-            }
-        }
-
-        // non-basic artificial variables
     for (int i = 0; i < getNumArtificialVariables(); i++) {
         int col = i + getArtificialVariableOffset();
         if (getBasicRow(col) == null) {
             columnsToDrop.add(col);
         }
     }
 
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
-        for (int i = 1; i < getHeight(); i++) {
-          int col = 0;
-          for (int j = 0; j < getWidth(); j++) {
+    // build a new matrix with one fewer row (drop the phase-1 objective row)
+    // and without the dropped columns
+    int oldHeight = getHeight();
+    int oldWidth  = getWidth();
+    int newHeight = oldHeight - 1;
+    int newWidth  = oldWidth  - columnsToDrop.size();
+    double[][] newData = new double[newHeight][newWidth];
+
+    for (int i = 1; i < oldHeight; i++) {
+        int newCol = 0;
+        for (int j = 0; j < oldWidth; j++) {
             if (!columnsToDrop.contains(j)) {
-              matrix[i - 1][col++] = tableau.getEntry(i, j);
+                newData[i - 1][newCol++] = tableau.getEntry(i, j);
             }
         }
     }
 
+    // remove the corresponding column labels in reverse order
     for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
-          columnLabels.remove((int) columnsToDrop.get(i));
+        columnLabels.remove(columnsToDrop.get(i).intValue());
     }
 
-        this.tableau = new Array2DRowRealMatrix(matrix);
+    // replace the tableau and clear out the artificial-variable count
+    this.tableau = new Array2DRowRealMatrix(newData);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file
