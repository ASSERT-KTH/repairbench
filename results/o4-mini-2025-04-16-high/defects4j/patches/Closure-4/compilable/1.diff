diff --git a/tmp/9744a4e3-dd65-4567-899b-a468a1734b0a_buggy.java b/tmp/252d9f2b-44ad-4ffa-be5e-4eaf18de7c15_fixed.java
index d6a560a..c495168 100644
--- a/tmp/9744a4e3-dd65-4567-899b-a468a1734b0a_buggy.java
+++ b/tmp/252d9f2b-44ad-4ffa-be5e-4eaf18de7c15_fixed.java
@@ -1,33 +1,39 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
 @Override
 JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
-    boolean resolved = resolveViaRegistry(t, enclosing);
+  // Bail out immediately on a prototype‐inheritance cycle to avoid
+  // infinite recursion and spurious "can only implement interfaces" warnings.
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
+    return registry.isLastGeneration()
+        ? getReferencedType()
+        : this;
   }
 
-    if (resolved) {
+  // First, try to resolve the name directly via the registry.
+  boolean viaRegistry = resolveViaRegistry(t, enclosing);
+  if (viaRegistry) {
     super.resolveInternal(t, enclosing);
     finishPropertyContinuations();
-      return registry.isLastGeneration() ?
-          getReferencedType() : this;
+    return registry.isLastGeneration()
+        ? getReferencedType()
+        : this;
   }
 
+  // Otherwise, fall back to resolving by walking properties.
   resolveViaProperties(t, enclosing);
   if (detectImplicitPrototypeCycle()) {
     handleTypeCycle(t);
+    return registry.isLastGeneration()
+        ? getReferencedType()
+        : this;
   }
 
+  // Final resolution and property fix‐ups.
   super.resolveInternal(t, enclosing);
   if (isResolved()) {
     finishPropertyContinuations();
   }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
+  return registry.isLastGeneration()
+      ? getReferencedType()
+      : this;
 }
\ No newline at end of file
