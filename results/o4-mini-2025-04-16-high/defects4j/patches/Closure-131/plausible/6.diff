diff --git a/tmp/7ac545b7-8377-4adb-9121-69f687022324_buggy.java b/tmp/e4a54e2d-e6cf-4b45-a2e3-46fbd49c76b9_fixed.java
index 19fe1b4..40f372f 100644
--- a/tmp/7ac545b7-8377-4adb-9121-69f687022324_buggy.java
+++ b/tmp/e4a54e2d-e6cf-4b45-a2e3-46fbd49c76b9_fixed.java
@@ -1,17 +1,42 @@
 public static boolean isJSIdentifier(String s) {
   int length = s.length();
-
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+  // must be non-empty
+  if (length == 0) {
     return false;
   }
-
+  // first char: $, _ or ASCII letter
+  char first = s.charAt(0);
+  if (!(first == '$' || first == '_' ||
+        (first >= 'A' && first <= 'Z') ||
+        (first >= 'a' && first <= 'z'))) {
+    return false;
+  }
+  // remaining chars: $, _, ASCII letter or digit
   for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+    char c = s.charAt(i);
+    if (!(c == '$' || c == '_' ||
+          (c >= 'A' && c <= 'Z') ||
+          (c >= 'a' && c <= 'z') ||
+          (c >= '0' && c <= '9'))) {
       return false;
     }
   }
-
+  // prohibit JavaScript reserved words
+  // ES5 keywords
+  if ("break".equals(s)    || "case".equals(s)       || "catch".equals(s)     ||
+      "continue".equals(s) || "debugger".equals(s)   || "default".equals(s)   ||
+      "delete".equals(s)   || "do".equals(s)         || "else".equals(s)      ||
+      "finally".equals(s)  || "for".equals(s)        || "function".equals(s)  ||
+      "if".equals(s)       || "in".equals(s)         || "instanceof".equals(s)||
+      "new".equals(s)      || "return".equals(s)     || "switch".equals(s)    ||
+      "this".equals(s)     || "throw".equals(s)      || "try".equals(s)       ||
+      "typeof".equals(s)   || "var".equals(s)        || "void".equals(s)      ||
+      "while".equals(s)    || "with".equals(s)       ||
+      // ES6+ future/reserved
+      "class".equals(s)    || "const".equals(s)      || "enum".equals(s)      ||
+      "export".equals(s)   || "extends".equals(s)    || "import".equals(s)    ||
+      "super".equals(s)    || "let".equals(s)        || "yield".equals(s)) {
+    return false;
+  }
   return true;
 }
\ No newline at end of file
