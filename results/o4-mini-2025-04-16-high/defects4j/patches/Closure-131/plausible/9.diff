diff --git a/tmp/091c011c-26b0-42a0-9829-77ee4e0040d4_buggy.java b/tmp/30f68d10-6df8-43b8-9f3f-e754eef78033_fixed.java
index 19fe1b4..69a9837 100644
--- a/tmp/091c011c-26b0-42a0-9829-77ee4e0040d4_buggy.java
+++ b/tmp/30f68d10-6df8-43b8-9f3f-e754eef78033_fixed.java
@@ -1,17 +1,43 @@
 public static boolean isJSIdentifier(String s) {
   int length = s.length();
-
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+  if (length == 0) {
     return false;
   }
-
+  // The first character must be $, _ or ASCII letter.
+  char c = s.charAt(0);
+  if (!(c == '$' ||
+        c == '_' ||
+        (c >= 'A' && c <= 'Z') ||
+        (c >= 'a' && c <= 'z'))) {
+    return false;
+  }
+  // Subsequent characters may also be ASCII digits.
   for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+    char ch = s.charAt(i);
+    if (!(ch == '$' ||
+          ch == '_' ||
+          (ch >= 'A' && ch <= 'Z') ||
+          (ch >= 'a' && ch <= 'z') ||
+          (ch >= '0' && ch <= '9'))) {
       return false;
     }
   }
-
+  // Make sure we don't treat a JS keyword (like "default") as a safe identifier
+  // for dot‐notation conversion.
+  if ("break".equals(s)    || "case".equals(s)    || "catch".equals(s)   ||
+      "class".equals(s)    || "const".equals(s)   || "continue".equals(s)||
+      "debugger".equals(s)|| "default".equals(s)  || "delete".equals(s)  ||
+      "do".equals(s)       || "else".equals(s)    || "enum".equals(s)    ||
+      "export".equals(s)   || "extends".equals(s) || "finally".equals(s) ||
+      "for".equals(s)      || "function".equals(s)|| "if".equals(s)      ||
+      "import".equals(s)   || "in".equals(s)      || "instanceof".equals(s) ||
+      "new".equals(s)      || "return".equals(s)  || "super".equals(s)  ||
+      "switch".equals(s)   || "this".equals(s)    || "throw".equals(s)   ||
+      "try".equals(s)      || "typeof".equals(s)  || "var".equals(s)     ||
+      "void".equals(s)     || "while".equals(s)   || "with".equals(s)    ||
+      "yield".equals(s)    || "null".equals(s)    || "true".equals(s)    ||
+      "false".equals(s)) {
+    return false;
+  }
   return true;
 }
\ No newline at end of file
