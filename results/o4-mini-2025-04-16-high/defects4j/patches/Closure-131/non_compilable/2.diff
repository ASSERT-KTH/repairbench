diff --git a/tmp/5fef7fbe-a46a-4bc1-9054-6e7a9cda52a8_buggy.java b/tmp/a2b03f54-9dae-4a1b-94a7-5a23bcaa533c_fixed.java
index 19fe1b4..2b0f34c 100644
--- a/tmp/5fef7fbe-a46a-4bc1-9054-6e7a9cda52a8_buggy.java
+++ b/tmp/a2b03f54-9dae-4a1b-94a7-5a23bcaa533c_fixed.java
@@ -1,17 +1,42 @@
 public static boolean isJSIdentifier(String s) {
   int length = s.length();
-
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+  if (length == 0) {
     return false;
   }
-
+  // Only allow ASCII letters, underscore or dollar as the first character
+  char first = s.charAt(0);
+  if (!(first == '$' || first == '_' ||
+        (first >= 'A' && first <= 'Z') ||
+        (first >= 'a' && first <= 'z'))) {
+    return false;
+  }
+  // Only allow ASCII letters, digits, underscore or dollar for the rest
   for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+    char c = s.charAt(i);
+    if (!(c == '$' || c == '_' ||
+          (c >= 'A' && c <= 'Z') ||
+          (c >= 'a' && c <= 'z') ||
+          (c >= '0' && c <= '9'))) {
       return false;
     }
   }
-
+  // Reject JavaScript reserved words and literals
+  switch (s) {
+    case "break": case "case": case "catch": case "class":
+    case "const": case "continue": case "debugger":
+    case "default": case "delete": case "do": case "else":
+    case "export": case "extends": case "finally": case "for":
+    case "function": case "if": case "import": case "in":
+    case "instanceof": case "new": case "return": case "super":
+    case "switch": case "this": case "throw": case "try":
+    case "typeof": case "var": case "void": case "while":
+    case "with": case "yield": case "enum": case "await":
+    case "implements": case "package": case "protected":
+    case "static": case "interface": case "private":
+    case "public": 
+    case "false": case "null": case "true":
+      return false;
+    default:
       return true;
   }
+}
\ No newline at end of file
