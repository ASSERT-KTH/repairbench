diff --git a/tmp/ef339f15-ac2f-4a57-b679-ec61173a771b_buggy.java b/tmp/fd3f6f99-1258-4397-965d-370230fe0081_fixed.java
index 0722547..3e1c1d8 100644
--- a/tmp/ef339f15-ac2f-4a57-b679-ec61173a771b_buggy.java
+++ b/tmp/fd3f6f99-1258-4397-965d-370230fe0081_fixed.java
@@ -1,26 +1,34 @@
 @Override
 public void feedInput(byte[] buf, int start, int end) throws IOException
 {
-        // Must not have remaining input
+    // Must not have any leftover from previous feed
     if (_inputPtr < _inputEnd) {
-            _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
+        _reportError("Still have %d undecoded bytes, should not call 'feedInput'",
+                     _inputEnd - _inputPtr);
     }
+    // Sanity
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
-        // and shouldn't have been marked as end-of-input
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
-        // Time to update pointers first
+
+    // First, update how many bytes we processed in the previous buffer
     _currInputProcessed += _origBufferLen;
+    // And shift the row‐start marker by that same amount
+    _currInputRowStart -= _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+    // Copy the new slice [start..end) into our working buffer at 0..len
+    int len = end - start;
+    if (_inputBuffer == null || _inputBuffer.length < len) {
+        _inputBuffer = new byte[len];
+    }
+    System.arraycopy(buf, start, _inputBuffer, 0, len);
 
-        // And then update buffer settings
-        _inputBuffer = buf;
-        _inputPtr = start;
-        _inputEnd = end;
-        _origBufferLen = end - start;
+    // Reset pointers to the start of the internal buffer
+    _inputPtr = 0;
+    _inputEnd = len;
+    // Remember this chunk's length for the next feed
+    _origBufferLen = len;
 }
\ No newline at end of file
