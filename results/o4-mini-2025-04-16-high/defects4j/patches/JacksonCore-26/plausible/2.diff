diff --git a/tmp/b5341ff8-353e-4d50-b8a8-91d35291fd9b_buggy.java b/tmp/5152a8b8-0f4d-4042-811e-9c3353c67762_fixed.java
index 0722547..5fd8a76 100644
--- a/tmp/b5341ff8-353e-4d50-b8a8-91d35291fd9b_buggy.java
+++ b/tmp/5152a8b8-0f4d-4042-811e-9c3353c67762_fixed.java
@@ -1,26 +1,35 @@
 @Override
 public void feedInput(byte[] buf, int start, int end) throws IOException
 {
     // Must not have remaining input
     if (_inputPtr < _inputEnd) {
-            _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
+        _reportError("Still have %d undecoded bytes, should not call 'feedInput'",
+                     _inputEnd - _inputPtr);
     }
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
-        // and shouldn't have been marked as end-of-input
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
-        // Time to update pointers first
+
+    // 1) Account for the bytes we fully processed in the previous buffer
     _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+    // 2) Compute how many bytes there were from the row‐start to the end
+    //    of the old buffer; in the new buffer (which we'll copy to index 0),
+    //    the row‐start pointer must be shifted to –that length.
+    int pastRow = _inputEnd - _currInputRowStart;
+    _currInputRowStart = -pastRow;
 
-        // And then update buffer settings
-        _inputBuffer = buf;
-        _inputPtr = start;
-        _inputEnd = end;
-        _origBufferLen = end - start;
+    // 3) Copy only the [start,end) slice into a fresh buffer that begins at 0
+    int len = end - start;
+    byte[] newBuf = new byte[len];
+    System.arraycopy(buf, start, newBuf, 0, len);
+
+    // 4) Install the new buffer
+    _inputBuffer = newBuf;
+    _inputPtr = 0;
+    _inputEnd = len;
+    _origBufferLen = len;
 }
\ No newline at end of file
