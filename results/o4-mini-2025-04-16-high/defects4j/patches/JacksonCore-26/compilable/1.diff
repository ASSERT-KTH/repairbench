diff --git a/tmp/9c89c6fe-83db-41fb-a00d-8d6dc48f3610_buggy.java b/tmp/6070c080-eba7-43e2-9b71-5cccc241e181_fixed.java
index 0722547..11a4967 100644
--- a/tmp/9c89c6fe-83db-41fb-a00d-8d6dc48f3610_buggy.java
+++ b/tmp/6070c080-eba7-43e2-9b71-5cccc241e181_fixed.java
@@ -1,26 +1,39 @@
 @Override
-    public void feedInput(byte[] buf, int start, int end) throws IOException
-    {
+public void feedInput(byte[] buf, int start, int end) throws IOException {
     // Must not have remaining input
     if (_inputPtr < _inputEnd) {
-            _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
+        _reportError("Still have %d undecoded bytes, should not call 'feedInput'",
+                     _inputEnd - _inputPtr);
     }
+    // sanity check on arguments
     if (end < start) {
         _reportError("Input end (%d) may not be before start (%d)", end, start);
     }
-        // and shouldn't have been marked as end-of-input
+    // must not have been closed already
     if (_endOfInput) {
         _reportError("Already closed, can not feed more input");
     }
-        // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+    // save old state for adjustments
+    int oldEnd = _inputEnd;
+    int oldRowStart = _currInputRowStart;
+    int oldBufLen = _origBufferLen;
 
-        // And then update buffer settings
+    // advance total processed by amount of last segment
+    _currInputProcessed += oldBufLen;
+
+    // install the new buffer/pointers
     _inputBuffer = buf;
     _inputPtr    = start;
     _inputEnd    = end;
     _origBufferLen = end - start;
+
+    // adjust row‐start so column counts carry across chunks
+    if (oldBufLen == 0) {
+        // first feed: row begins at the start of this segment
+        _currInputRowStart = start;
+    } else {
+        // continuing a line from previous buffer
+        _currInputRowStart = start - (oldEnd - oldRowStart);
+    }
 }
\ No newline at end of file
