diff --git a/tmp/e98e4895-1327-4b37-aad9-3f16ce4bdab3_buggy.java b/tmp/41ad988b-feba-43b5-ad6a-c7cc48a22f25_fixed.java
index fbd0884..a0b90a3 100644
--- a/tmp/e98e4895-1327-4b37-aad9-3f16ce4bdab3_buggy.java
+++ b/tmp/41ad988b-feba-43b5-ad6a-c7cc48a22f25_fixed.java
@@ -1,23 +1,29 @@
 /**
  * Flip qd array if warranted.
  * @param n number of rows in the block
  * @param step within the array (1 for flipping all elements, 2 for flipping
  * only every other element)
  * @return true if qd array was flipped
  */
 private boolean flipIfWarranted(final int n, final int step) {
-        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
-            int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
+    // compute the first and last index in the active ping‐pong slice
+    final int first = pingPong;
+    final int last  = 4 * (n - 1) + pingPong;
+    // test whether we should flip
+    if (1.5 * work[first] < work[last]) {
+        int i = first;
+        int j = last;
+        // swap blocks of size 4, stepping by "step" inside each block
+        while (i < j) {
             for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
+                double tmp       = work[i + k];
                 work[i + k]      = work[j - k];
                 work[j - k]      = tmp;
             }
+            i += 4;
             j -= 4;
         }
         return true;
     }
     return false;
 }
\ No newline at end of file
