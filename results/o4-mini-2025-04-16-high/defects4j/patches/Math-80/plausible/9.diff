diff --git a/tmp/d189741f-eb49-482e-96f6-efeef07447a0_buggy.java b/tmp/90fc76b6-bc74-4c17-8e76-ce55a125ea49_fixed.java
index fbd0884..45ce8e8 100644
--- a/tmp/d189741f-eb49-482e-96f6-efeef07447a0_buggy.java
+++ b/tmp/90fc76b6-bc74-4c17-8e76-ce55a125ea49_fixed.java
@@ -1,23 +1,26 @@
 /**
  * Flip qd array if warranted.
  * @param n number of rows in the block
  * @param step within the array (1 for flipping all elements, 2 for flipping
  * only every other element)
  * @return true if qd array was flipped
  */
 private boolean flipIfWarranted(final int n, final int step) {
-        if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
-            // flip array
-            int j = 4 * n - 1;
-            for (int i = 0; i < j; i += 4) {
+    // compute the first and last index of the active q-array in work[]
+    final int first = pingPong;
+    final int last  = 4 * (n - 1) + pingPong;
+    // if the last entry is significantly larger than the first, reverse
+    if (1.5 * work[first] < work[last]) {
+        // reverse the interleaved data (stride = 4), skipping elements
+        // according to 'step'
+        for (int i = first, j = last; i < j; i += 4, j -= 4) {
             for (int k = 0; k < 4; k += step) {
                 final double tmp    = work[i + k];
                 work[i + k]         = work[j - k];
                 work[j - k]         = tmp;
             }
-                j -= 4;
         }
         return true;
     }
     return false;
 }
\ No newline at end of file
