diff --git a/tmp/8a1ffef4-0cd4-4cf9-8860-158757ef4378_buggy.java b/tmp/52e91748-1b89-4fb3-900c-04c51890a04e_fixed.java
index 39dd8e7..5c9a26d 100644
--- a/tmp/8a1ffef4-0cd4-4cf9-8860-158757ef4378_buggy.java
+++ b/tmp/52e91748-1b89-4fb3-900c-04c51890a04e_fixed.java
@@ -1,30 +1,41 @@
 private Attribute parseAttribute() {
+    // skip any leading whitespace
     tq.consumeWhitespace();
+    // attempt to read a valid attribute key
     String key = tq.consumeAttributeKey();
+    // placeholder for the attribute value
     String value = "";
+
+    // if no key was read, skip the garbage up to whitespace or tag delimiter
+    if (key.length() == 0) {
+        while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+            tq.consume();
+        }
+        // also skip any trailing whitespace before returning
+        tq.consumeWhitespace();
+        return null;
+    }
+
+    // for a valid key, see if there's an '=' to read a value
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
-
         if (tq.matchChomp(SQ)) {
+            // single‐quoted value
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
+            // double‐quoted value
             value = tq.chompTo(DQ);
         } else {
-                StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
+            // unquoted value: read until whitespace or tag delimiter
+            StringBuilder accum = new StringBuilder();
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
-                    valueAccum.append(tq.consume());
+                accum.append(tq.consume());
             }
-                value = valueAccum.toString();
+            value = accum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+
     return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
-            return null;
-        }
 }
\ No newline at end of file
