diff --git a/tmp/bdf6fd94-94b9-4df3-9ba1-73c1577853e3_buggy.java b/tmp/49962e5c-74f2-4dde-b5a8-6ad1e1e0511c_fixed.java
index b56897c..4c89a8a 100644
--- a/tmp/bdf6fd94-94b9-4df3-9ba1-73c1577853e3_buggy.java
+++ b/tmp/49962e5c-74f2-4dde-b5a8-6ad1e1e0511c_fixed.java
@@ -1,27 +1,28 @@
 @Override
 public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
+  // When the node is null it means we reached the implicit return
   // where the function returns (possibly without an return statement)
   if (n == null) {
     return false;
   }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
+  // Calls with side‐effects block inlining
   if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
     return true;
   }
-
+  // Constructors with side‐effects block inlining
   if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
     return true;
   }
-
+  // Deleting a property or name is a side‐effect
+  if (n.isDelProp() || n.isDelName()) {
+    return true;
+  }
 
   for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
     if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
       return true;
     }
   }
   return false;
 }
\ No newline at end of file
