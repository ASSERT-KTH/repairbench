diff --git a/tmp/87621608-2b56-4c83-8f27-0d19d1392a69_buggy.java b/tmp/43d24d2e-c2ee-4b80-a3e6-797386d6999f_fixed.java
index 0dbce00..ad9ad3e 100644
--- a/tmp/87621608-2b56-4c83-8f27-0d19d1392a69_buggy.java
+++ b/tmp/43d24d2e-c2ee-4b80-a3e6-797386d6999f_fixed.java
@@ -1,33 +1,36 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+        JsonFormat.Value format = serializers.getAnnotationIntrospector()
+            .findFormat((Annotated) property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
+            // explicit numeric -> timestamp
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // explicit string, or any pattern/locale/timezone override -> formatted string
+            if (shape == JsonFormat.Shape.STRING
+                    || format.hasPattern()
+                    || format.hasLocale()
+                    || format.getTimeZone() != null) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
     return this;
 }
\ No newline at end of file
