diff --git a/tmp/d526bd8b-4bc8-4f7e-b1ef-2ffe6edc2df5_buggy.java b/tmp/1a756c67-10ad-4121-817e-636cc9be0bb5_fixed.java
index 0dbce00..107645f 100644
--- a/tmp/d526bd8b-4bc8-4f7e-b1ef-2ffe6edc2df5_buggy.java
+++ b/tmp/1a756c67-10ad-4121-817e-636cc9be0bb5_fixed.java
@@ -1,33 +1,46 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
+    // First, determine global setting for timestamps
+    boolean writeTimestamps = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
     if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+        JsonFormat.Value format = serializers.getAnnotationIntrospector()
+            .findFormat((Annotated) property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
+            boolean hasPattern  = format.hasPattern();
+            boolean hasLocale   = format.hasLocale();
+            boolean hasTimeZone = format.hasTimeZone();
+            // explicit numeric override
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
+            // explicit string shape or any format override (pattern/locale/timezone)
+            if (shape == JsonFormat.Shape.STRING
+                    || hasPattern
+                    || hasLocale
+                    || hasTimeZone) {
+                // pick or default the pattern
+                String pattern = hasPattern
                         ? format.getPattern()
                         : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
+                // pick or default the locale
+                Locale loc = hasLocale
                         ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+                // pick or default the time zone
+                TimeZone tz = hasTimeZone
+                        ? format.getTimeZone()
+                        : serializers.getTimeZone();
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+            // annotation present but no meaningful override: fall back to global setting
+            return withFormat(writeTimestamps, null);
         }
     }
-        return this;
+    // no annotation: fall back to global setting
+    return withFormat(writeTimestamps, null);
 }
\ No newline at end of file
