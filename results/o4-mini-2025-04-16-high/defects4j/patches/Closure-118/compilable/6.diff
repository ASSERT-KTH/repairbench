diff --git a/tmp/0440fccf-3f0a-45ff-bcf2-0f1424672dde_buggy.java b/tmp/373399f8-7434-4c96-9e87-51b5d4f6f7c5_fixed.java
index 0b7c52e..a01e427 100644
--- a/tmp/0440fccf-3f0a-45ff-bcf2-0f1424672dde_buggy.java
+++ b/tmp/373399f8-7434-4c96-9e87-51b5d4f6f7c5_fixed.java
@@ -1,27 +1,27 @@
 /**
-     * Processes a OBJECTLIT node.
+ * Processes an OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
-        // Maybe STRING, GET, SET
+  for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
+    // Skip quoted keys in object literals (they may be accessed dynamically).
+    if (child.isString() && child.isQuotedString()) {
+      continue;
+    }
 
-        // We should never see a mix of numbers and strings.
     String name = child.getString();
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
     if (!prop.scheduleRenaming(child,
                                processProperty(t, prop, type, null))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
             t.getSourceName(), child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null ? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
