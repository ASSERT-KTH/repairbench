diff --git a/tmp/46093c28-c933-4e27-92c6-0a616f9bfeb6_buggy.java b/tmp/e75d11ce-5206-46c6-ba2c-2ebd72826cc1_fixed.java
index 388771b..b80bcc0 100644
--- a/tmp/46093c28-c933-4e27-92c6-0a616f9bfeb6_buggy.java
+++ b/tmp/e75d11ce-5206-46c6-ba2c-2ebd72826cc1_fixed.java
@@ -1,37 +1,51 @@
 /**
  * Creates a new timeseries by copying a subset of the data in this time
  * series.
  *
  * @param start  the index of the first time period to copy.
  * @param end    the index of the last time period to copy.
  *
  * @return A series containing a copy of this times series from start until
  *         end.
  *
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
 public TimeSeries createCopy(int start, int end)
         throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
+    int itemCount = getItemCount();
+    if (end >= itemCount) {
+        throw new IllegalArgumentException("Requires end < " + itemCount + ".");
+    }
+
+    // clone the series (this copies all metadata, but also copies old data,
+    // so we must clear it and reset the bounds)
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
-        if (this.data.size() > 0) {
+
+    // reset the Y-value bounds and their indices
+    copy.minY = Double.NaN;
+    copy.maxY = Double.NaN;
+    copy.minYIndex = -1;
+    copy.maxYIndex = -1;
+
+    // copy the requested items
     for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
+        TimeSeriesDataItem clonedItem = (TimeSeriesDataItem) item.clone();
         try {
-                    copy.add(clone);
+            copy.add(clonedItem);
         }
         catch (SeriesException e) {
+            // this should not happen in a straight copy
             e.printStackTrace();
         }
     }
-        }
+
     return copy;
 }
\ No newline at end of file
