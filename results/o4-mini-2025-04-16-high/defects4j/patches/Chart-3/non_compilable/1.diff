diff --git a/tmp/0ae11d19-7a50-4480-9048-f0c88430c900_buggy.java b/tmp/b6405d56-a9fd-423a-b865-d8649949e723_fixed.java
index 388771b..4f15335 100644
--- a/tmp/0ae11d19-7a50-4480-9048-f0c88430c900_buggy.java
+++ b/tmp/b6405d56-a9fd-423a-b865-d8649949e723_fixed.java
@@ -1,37 +1,46 @@
 /**
  * Creates a new timeseries by copying a subset of the data in this time
  * series.
  *
  * @param start  the index of the first time period to copy.
  * @param end    the index of the last time period to copy.
  *
-     * @return A series containing a copy of this times series from start until
+ * @return A series containing a copy of this time series from start until
  *         end.
  *
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
 public TimeSeries createCopy(int start, int end)
         throws CloneNotSupportedException {
+
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
+
+    // clone the series (copies metadata and bounds, but we will reset data and value bounds)
     TimeSeries copy = (TimeSeries) super.clone();
+
+    // reset the data storage
     copy.data = new java.util.ArrayList();
-        if (this.data.size() > 0) {
+
+    // reset the stored y‚Äêbounds so they will be recalculated on add()
+    copy.minimumValue = Double.NaN;
+    copy.maximumValue = Double.NaN;
+
+    // copy the requested items
     for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
-                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
+        TimeSeriesDataItem clonedItem = (TimeSeriesDataItem) item.clone();
         try {
-                    copy.add(clone);
+            copy.add(clonedItem);
         }
         catch (SeriesException e) {
+            // should not happen in a straight copy
             e.printStackTrace();
         }
     }
-        }
     return copy;
 }
\ No newline at end of file
