diff --git a/tmp/9079a7fc-1744-4935-b2e3-9c8a1defc0dc_buggy.java b/tmp/864eda9e-2eb3-4ced-af9a-67e883950270_fixed.java
index e69de29..bbfcaaa 100644
--- a/tmp/9079a7fc-1744-4935-b2e3-9c8a1defc0dc_buggy.java
+++ b/tmp/864eda9e-2eb3-4ced-af9a-67e883950270_fixed.java
@@ -0,0 +1,41 @@
+public List<Connection.KeyVal> formData() {
+    Validate.isTrue(tagName().equals("form"),
+        "Form data only available on form elements");
+    List<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
+    for (Element el : elements) {
+        // Skip inputs/textareas/selects that have been removed from the form
+        if (el.parent() == null)
+            continue;
+        if (el.hasAttr("disabled") || !el.hasAttr("name"))
+            continue;
+
+        String key = el.attr("name");
+        String tag = el.tagName();
+
+        if ("input".equals(tag)) {
+            String type = el.attr("type");
+            // skip unchecked checkboxes/radios
+            if (("checkbox".equals(type) || "radio".equals(type)) && !el.hasAttr("checked"))
+                continue;
+            // for submit/image/button we include value if present
+            String val = el.hasAttr("value") ? el.attr("value") : "";
+            data.add(Connection.KeyVal.create(key, val));
+
+        } else if ("textarea".equals(tag)) {
+            data.add(Connection.KeyVal.create(key, el.text()));
+
+        } else if ("select".equals(tag)) {
+            boolean multiple = el.hasAttr("multiple");
+            for (Element option : el.select("option")) {
+                boolean selected = option.hasAttr("selected");
+                if (selected || (!multiple && !selected)) {
+                    String optVal = option.hasAttr("value")
+                        ? option.attr("value")
+                        : option.text();
+                    data.add(Connection.KeyVal.create(key, optVal));
+                }
+            }
+        }
+    }
+    return data;
+}
\ No newline at end of file
