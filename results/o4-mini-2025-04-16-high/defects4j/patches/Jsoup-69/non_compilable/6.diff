diff --git a/tmp/15d9952d-de85-4370-9e8b-18d91dc14ba7_buggy.java b/tmp/68cf2048-61c3-476c-9883-8c8776572140_fixed.java
index e69de29..d102596 100644
--- a/tmp/15d9952d-de85-4370-9e8b-18d91dc14ba7_buggy.java
+++ b/tmp/68cf2048-61c3-476c-9883-8c8776572140_fixed.java
@@ -0,0 +1,38 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    for (Element el : elements) {
+        // Skip elements that have been removed from the form
+        if (el.parent() == null)
+            continue;
+        if (el.hasAttr("disabled"))
+            continue;
+        String name = el.attr("name");
+        if (name.isEmpty())
+            continue;
+        String tag = el.tagName();
+        if ("select".equals(tag)) {
+            for (Element option : el.select("option[selected]")) {
+                if (option.hasAttr("value"))
+                    data.add(Connection.KeyVal.create(name, option.attr("value")));
+                else
+                    data.add(Connection.KeyVal.create(name, option.text()));
+            }
+        } else if ("textarea".equals(tag)) {
+            data.add(Connection.KeyVal.create(name, el.text()));
+        } else {
+            String type = el.hasAttr("type") ? el.attr("type").toLowerCase() : "";
+            // ignore submit/image/button/reset without a name, etc.
+            if (("submit".equals(type) || "image".equals(type) ||
+                 "button".equals(type) || "reset".equals(type))
+                && (!"submit".equals(type) || !el.hasAttr("name")))
+                continue;
+            // ignore unchecked checkboxes/radios
+            if (("checkbox".equals(type) || "radio".equals(type))
+                && !el.hasAttr("checked"))
+                continue;
+            data.add(Connection.KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
