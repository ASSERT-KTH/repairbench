diff --git a/tmp/6ac576fc-ed76-43fa-98bf-a1c8949af0cc_buggy.java b/tmp/0a69df60-0594-4b2c-90c2-8f585e044982_fixed.java
index e69de29..719d020 100644
--- a/tmp/6ac576fc-ed76-43fa-98bf-a1c8949af0cc_buggy.java
+++ b/tmp/0a69df60-0594-4b2c-90c2-8f585e044982_fixed.java
@@ -0,0 +1,46 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    for (Element el : elements) {
+        // skip if the element has been removed from this form
+        Node node = el;
+        boolean inForm = false;
+        while (node != null) {
+            if (node == this) {
+                inForm = true;
+                break;
+            }
+            node = node.parent();
+        }
+        if (!inForm)
+            continue;
+
+        String name = el.attr("name");
+        if (name.isEmpty() || el.hasAttr("disabled"))
+            continue;
+
+        String tag = el.tagName();
+        if (tag.equals("input")) {
+            String type = el.attr("type").toLowerCase();
+            // skip un‚Äêvalued buttons
+            if ((type.equals("submit") || type.equals("button") || type.equals("reset")) && !el.hasAttr("value"))
+                continue;
+            // skip unchecked checkboxes/radios
+            if ((type.equals("checkbox") || type.equals("radio")) && !el.hasAttr("checked"))
+                continue;
+            data.add(Connection.KeyVal.create(name, el.val()));
+
+        } else if (tag.equals("textarea")) {
+            data.add(Connection.KeyVal.create(name, el.text()));
+
+        } else if (tag.equals("select")) {
+            Elements options = el.select("option[selected]");
+            if (options.isEmpty())
+                options = el.select("option");
+            for (Element opt : options) {
+                data.add(Connection.KeyVal.create(name, opt.val()));
+            }
+        }
+    }
+    return data;
+}
\ No newline at end of file
