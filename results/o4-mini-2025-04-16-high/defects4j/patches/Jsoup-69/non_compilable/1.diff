diff --git a/tmp/5f9f8880-c03e-430d-a811-62b49b46ac00_buggy.java b/tmp/39e7fd45-49ba-4387-a1a7-50eab23c0361_fixed.java
index e69de29..f26aaf7 100644
--- a/tmp/5f9f8880-c03e-430d-a811-62b49b46ac00_buggy.java
+++ b/tmp/39e7fd45-49ba-4387-a1a7-50eab23c0361_fixed.java
@@ -0,0 +1,38 @@
+@Override
+public List<Connection.KeyVal> formData() {
+    List<Connection.KeyVal> data = new ArrayList<>();
+    // re-scan the current form children so removed inputs arenâ€™t returned
+    for (Element el : select("input,textarea,select,button")) {
+        if (!el.hasAttr("name") || el.hasAttr("disabled"))
+            continue;
+        String key = el.attr("name");
+        String tag = el.tagName();
+        if (tag.equals("input")) {
+            String type = el.attr("type").toLowerCase();
+            if (type.equals("checkbox") || type.equals("radio")) {
+                if (!el.hasAttr("checked"))
+                    continue;
+            } else if (type.equals("button") || type.equals("image")) {
+                continue;
+            }
+            data.add(Connection.KeyVal.create(key, el.attr("value")));
+        } else if (tag.equals("textarea")) {
+            data.add(Connection.KeyVal.create(key, el.text()));
+        } else if (tag.equals("select")) {
+            Elements options = el.select("option[selected]");
+            if (options.isEmpty()) {
+                Element firstOpt = el.selectFirst("option");
+                if (firstOpt != null) {
+                    options = new Elements(firstOpt);
+                }
+            }
+            for (Element opt : options) {
+                String val = opt.hasAttr("value") ? opt.attr("value") : opt.text();
+                data.add(Connection.KeyVal.create(key, val));
+            }
+        } else if (tag.equals("button")) {
+            data.add(Connection.KeyVal.create(key, el.attr("value")));
+        }
+    }
+    return data;
+}
\ No newline at end of file
