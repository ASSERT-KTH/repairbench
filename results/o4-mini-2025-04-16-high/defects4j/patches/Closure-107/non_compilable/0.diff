diff --git a/tmp/1dc50ee1-572e-48a6-85eb-fd618b2b24c3_buggy.java b/tmp/732acfb2-13a7-4729-9643-2fe3585fce1d_fixed.java
index fa9dfcc..b14e340 100644
--- a/tmp/1dc50ee1-572e-48a6-85eb-fd618b2b24c3_buggy.java
+++ b/tmp/732acfb2-13a7-4729-9643-2fe3585fce1d_fixed.java
@@ -1,61 +1,59 @@
 @Override
 protected CompilerOptions createOptions() {
   CompilerOptions options = new CompilerOptions();
+
+  // Set up the coding conventions
   if (flags.processJqueryPrimitives) {
     options.setCodingConvention(new JqueryCodingConvention());
   } else {
     options.setCodingConvention(new ClosureCodingConvention());
   }
 
   options.setExtraAnnotationNames(flags.extraAnnotationName);
 
+  // Apply the chosen compilation level
   CompilationLevel level = flags.compilationLevel;
   level.setOptionsForCompilationLevel(options);
 
   if (flags.debug) {
     level.setDebugOptionsForCompilationLevel(options);
   }
-
   if (flags.useTypesForOptimization) {
     level.setTypeBasedOptimizationOptions(options);
   }
-
   if (flags.generateExports) {
     options.setGenerateExports(flags.generateExports);
   }
 
+  // Apply warning level and formatting
   WarningLevel wLevel = flags.warningLevel;
   wLevel.setOptionsForWarningLevel(options);
   for (FormattingOption formattingOption : flags.formatting) {
     formattingOption.applyToOptions(options);
   }
 
+  // Closure‐specific passes
   options.closurePass = flags.processClosurePrimitives;
-
-    options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&
-        flags.processJqueryPrimitives;
-
+  options.jqueryPass =
+      CompilationLevel.ADVANCED_OPTIMIZATIONS == level && flags.processJqueryPrimitives;
   options.angularPass = flags.angularPass;
 
+  // i18n: either read a user‐supplied XTB file, or in ADVANCED mode
+  // use an EmptyMessageBundle (and disable i18n warnings)
   if (!flags.translationsFile.isEmpty()) {
     try {
       options.messageBundle = new XtbMessageBundle(
           new FileInputStream(flags.translationsFile),
           flags.translationsProject);
     } catch (IOException e) {
       throw new RuntimeException("Reading XTB file", e);
     }
   } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
-      // In SIMPLE or WHITESPACE mode, if the user hasn't specified a
-      // translations file, they might reasonably try to write their own
-      // implementation of goog.getMsg that makes the substitution at
-      // run-time.
-      //
-      // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
-      // so we might as well inline it. But shut off the i18n warnings,
-      // because the user didn't really ask for i18n.
+    // In ADVANCED mode we inline goog.getMsg; the user hasn't asked for
+    // i18n so silence any i18n warnings
     options.messageBundle = new EmptyMessageBundle();
+    options.setWarningLevel(DiagnosticGroups.MESSAGES, CheckLevel.OFF);
   }
 
   return options;
 }
\ No newline at end of file
