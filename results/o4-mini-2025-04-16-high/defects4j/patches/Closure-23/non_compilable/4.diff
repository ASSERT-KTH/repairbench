diff --git a/tmp/d5724b8f-763b-40fa-ad60-a4f41cee258f_buggy.java b/tmp/51ac0b84-3fb8-4887-9324-a319eef4f05d_fixed.java
index cfdcd9c..2f80be4 100644
--- a/tmp/d5724b8f-763b-40fa-ad60-a4f41cee258f_buggy.java
+++ b/tmp/51ac0b84-3fb8-4887-9324-a319eef4f05d_fixed.java
@@ -1,51 +1,56 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
   Node parent = n.getParent();
   // If GETPROP/GETELEM is used as assignment target the array literal is
   // acting as a temporary we can't fold it here:
   //    "[][0] += 1"
   if (isAssignmentTarget(n)) {
     return n;
   }
 
   if (!right.isNumber()) {
     // Sometimes people like to use complex expressions to index into
     // arrays, or strings to index into array methods.
     return n;
   }
 
   double index = right.getDouble();
   int intIndex = (int) index;
   if (intIndex != index) {
     error(INVALID_GETELEM_INDEX_ERROR, right);
     return n;
   }
 
   if (intIndex < 0) {
     error(INDEX_OUT_OF_BOUNDS_ERROR, right);
     return n;
   }
 
+  // Locate the element at position intIndex
   Node current = left.getFirstChild();
-    Node elem = null;
   for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
     current = current.getNext();
   }
-
-    if (elem == null) {
+  if (current == null) {
     error(INDEX_OUT_OF_BOUNDS_ERROR, right);
     return n;
   }
+  Node elem = current;
+
+  // Don't fold if any other element (before or after) has side-effects
+  for (Node child = left.getFirstChild(); child != null; child = child.getNext()) {
+    if (child != elem && NodeUtil.hasSideEffects(child)) {
+      return n;
+    }
+  }
 
   if (elem.isEmpty()) {
     elem = NodeUtil.newUndefinedNode(elem);
   } else {
     left.removeChild(elem);
   }
 
-    // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
+  // Replace the entire GETELEM with the folded value
+  parent.replaceChild(n, elem);
   reportCodeChange();
   return elem;
 }
\ No newline at end of file
