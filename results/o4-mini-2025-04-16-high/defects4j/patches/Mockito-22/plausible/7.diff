diff --git a/tmp/065b224e-1233-4820-8ea5-10a89efc034f_buggy.java b/tmp/37f6bbee-fb46-4bf7-adfd-eef4b503c361_fixed.java
index 111ba5e..e34a769 100644
--- a/tmp/065b224e-1233-4820-8ea5-10a89efc034f_buggy.java
+++ b/tmp/37f6bbee-fb46-4bf7-adfd-eef4b503c361_fixed.java
@@ -1,9 +1,34 @@
 public static boolean areEqual(Object o1, Object o2) {
+    // short-circuit identical refs (and both-null)
+    if (o1 == o2) {
+        return true;
+    }
+    // one is null, the other isn't
     if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+        return false;
+    }
+    Class<?> c1 = o1.getClass();
+    Class<?> c2 = o2.getClass();
+    // both are arrays? do deep‚Äêelement comparison
+    if (c1.isArray() && c2.isArray()) {
+        int len1 = java.lang.reflect.Array.getLength(o1);
+        int len2 = java.lang.reflect.Array.getLength(o2);
+        if (len1 != len2) {
+            return false;
+        }
+        for (int i = 0; i < len1; i++) {
+            Object e1 = java.lang.reflect.Array.get(o1, i);
+            Object e2 = java.lang.reflect.Array.get(o2, i);
+            if (!areEqual(e1, e2)) {
+                return false;
+            }
+        }
+        return true;
+    }
+    // one is an array, the other isn't
+    if (c1.isArray() || c2.isArray()) {
+        return false;
+    }
+    // fallback to equals()
     return o1.equals(o2);
 }
\ No newline at end of file
-    }
