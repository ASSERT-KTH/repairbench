diff --git a/tmp/ed19cd56-ded3-4530-a941-8fc8303ac016_buggy.java b/tmp/b83e8910-bc68-405e-85d9-77613f02b94f_fixed.java
index 111ba5e..1970e08 100644
--- a/tmp/ed19cd56-ded3-4530-a941-8fc8303ac016_buggy.java
+++ b/tmp/b83e8910-bc68-405e-85d9-77613f02b94f_fixed.java
@@ -1,9 +1,37 @@
 public static boolean areEqual(Object o1, Object o2) {
+    // shortcut for identical references (also handles null == null)
+    if (o1 == o2) {
+        return true;
+    }
+    // one is null and the other isn't
     if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+        return false;
+    }
+    Class<?> c1 = o1.getClass();
+    Class<?> c2 = o2.getClass();
+
+    // both must be arrays to compare element‚Äêwise
+    if (c1.isArray() && c2.isArray()) {
+        int len1 = java.lang.reflect.Array.getLength(o1);
+        int len2 = java.lang.reflect.Array.getLength(o2);
+        if (len1 != len2) {
+            return false;
+        }
+        for (int i = 0; i < len1; i++) {
+            Object e1 = java.lang.reflect.Array.get(o1, i);
+            Object e2 = java.lang.reflect.Array.get(o2, i);
+            if (!areEqual(e1, e2)) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    // if only one is an array, they're not equal
+    if (c1.isArray() || c2.isArray()) {
+        return false;
+    }
+
+    // fallback to standard equals()
     return o1.equals(o2);
 }
\ No newline at end of file
-    }
