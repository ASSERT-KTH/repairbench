diff --git a/tmp/ac2e66b6-4edc-409f-8663-518aa9b11f20_buggy.java b/tmp/f751d0b6-372c-4205-8184-c19d10a955bc_fixed.java
index 111ba5e..b19237d 100644
--- a/tmp/ac2e66b6-4edc-409f-8663-518aa9b11f20_buggy.java
+++ b/tmp/f751d0b6-372c-4205-8184-c19d10a955bc_fixed.java
@@ -1,9 +1,30 @@
 public static boolean areEqual(Object o1, Object o2) {
+    // fast path for identical references (also covers both null)
+    if (o1 == o2) {
+        return true;
+    }
+    // if exactly one is null, not equal
     if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+        return false;
+    }
+    Class<?> c1 = o1.getClass();
+    Class<?> c2 = o2.getClass();
+    // both must be arrays to compare element‐by‐element
+    if (c1.isArray() && c2.isArray()) {
+        int len1 = java.lang.reflect.Array.getLength(o1);
+        int len2 = java.lang.reflect.Array.getLength(o2);
+        if (len1 != len2) {
+            return false;
+        }
+        for (int i = 0; i < len1; i++) {
+            Object e1 = java.lang.reflect.Array.get(o1, i);
+            Object e2 = java.lang.reflect.Array.get(o2, i);
+            if (!areEqual(e1, e2)) {
+                return false;
+            }
+        }
+        return true;
+    }
+    // fallback to normal equals
     return o1.equals(o2);
 }
\ No newline at end of file
-    }
