diff --git a/tmp/b916e8a8-b2dc-4fbe-9b26-f3898553088d_buggy.java b/tmp/302492f7-2829-4a1c-9e2c-058664510ccd_fixed.java
index 4aff4e4..c43d69b 100644
--- a/tmp/b916e8a8-b2dc-4fbe-9b26-f3898553088d_buggy.java
+++ b/tmp/302492f7-2829-4a1c-9e2c-058664510ccd_fixed.java
@@ -1,15 +1,21 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
-            attr.setValue(value);
-        
+    // try to resolve relative URLs to abs, and optionally update the attribute so output html has abs.
+    // rels without a baseUri get removed
+    String key = attr.getKey();
+    String origVal = attr.getValue();
+    String absVal = el.absUrl(key);
+    // decide which value to test: use the absolute if we got one, otherwise fall back to original
+    String value = (absVal != null && absVal.length() > 0) ? absVal : origVal;
+    // only overwrite the attribute when we actually resolved to an absolute URL
+    if (!preserveRelativeLinks && absVal != null && absVal.length() > 0) {
+        attr.setValue(absVal);
+    }
+    String valueLower = value.toLowerCase();
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        String prot = protocol.toString().toLowerCase() + ":";
+        if (valueLower.startsWith(prot)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
