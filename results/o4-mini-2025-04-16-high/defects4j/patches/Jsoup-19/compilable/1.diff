diff --git a/tmp/b1e34202-a55e-4bdd-adad-be3370bdb837_buggy.java b/tmp/d98a5db4-4633-46a4-878b-6201a5520322_fixed.java
index 4aff4e4..6932b0f 100644
--- a/tmp/b1e34202-a55e-4bdd-adad-be3370bdb837_buggy.java
+++ b/tmp/d98a5db4-4633-46a4-878b-6201a5520322_fixed.java
@@ -1,15 +1,24 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
-            attr.setValue(value);
-        
+    // first check the raw attribute value for a matching protocol (to allow custom schemes)
+    String raw = attr.getValue();
+    String rawLower = raw == null ? "" : raw.trim().toLowerCase();
     for (Protocol protocol : protocols) {
-            String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+        String scheme = protocol.toString().toLowerCase() + ":";
+        if (rawLower.startsWith(scheme)) {
+            return true;
+        }
+    }
+    // if no match, try resolving to absolute and check again
+    String abs = el.absUrl(attr.getKey());
+    if (!preserveRelativeLinks) {
+        attr.setValue(abs);
+    }
+    String absLower = abs.toLowerCase();
+    for (Protocol protocol : protocols) {
+        String scheme = protocol.toString().toLowerCase() + ":";
+        if (absLower.startsWith(scheme)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file
