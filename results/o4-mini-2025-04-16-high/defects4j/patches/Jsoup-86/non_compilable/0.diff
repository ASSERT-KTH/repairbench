diff --git a/tmp/279892af-ad01-4e24-a0fa-fe5019f248bc_buggy.java b/tmp/58330dae-96d6-4b1a-89b8-4b934889ef33_fixed.java
index b8e7fdb..abe4dbe 100644
--- a/tmp/279892af-ad01-4e24-a0fa-fe5019f248bc_buggy.java
+++ b/tmp/58330dae-96d6-4b1a-89b8-4b934889ef33_fixed.java
@@ -1,15 +1,28 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+    // need at least "<?x>" or "<!x>"
+    if (data.length() < 3) {
+        return null;
+    }
+    // strip the leading '?' or '!' and the trailing '>'
+    String inner = data.substring(1, data.length() - 1);
+    // parse as a single XML element
+    Document doc = Jsoup.parse("<" + inner + ">", baseUri(), Parser.xmlParser());
+    // look for the first element child (ignore any text nodes)
+    List<Element> els = doc.children();
+    if (els.isEmpty()) {
+        return null;
+    }
+    Element el = els.get(0);
+    String name = NodeUtils.parser(doc)
+                            .settings()
+                            .normalizeTag(el.tagName());
+    boolean isDecl = data.startsWith("!");
+    XmlDeclaration decl = new XmlDeclaration(name, isDecl);
     decl.attributes().addAll(el.attributes());
-        }
     return decl;
 }
\ No newline at end of file
