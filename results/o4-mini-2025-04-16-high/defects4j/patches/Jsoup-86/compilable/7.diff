diff --git a/tmp/a3e67108-e680-4a66-83ee-41f5fbdb6f42_buggy.java b/tmp/a5d91c41-c31b-4a6d-a760-49de60a60d4c_fixed.java
index b8e7fdb..2987d3d 100644
--- a/tmp/a3e67108-e680-4a66-83ee-41f5fbdb6f42_buggy.java
+++ b/tmp/a5d91c41-c31b-4a6d-a760-49de60a60d4c_fixed.java
@@ -1,15 +1,30 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
+    // guard against very short comments
+    if (data.length() <= 1) {
+        return null;
+    }
+    // only treat strings starting with '?' or '!' and ending with '?'
+    char first = data.charAt(0);
+    char last = data.charAt(data.length() - 1);
+    if ((first != '?' && first != '!') || last != '?') {
+        return null;
+    }
+    // strip the wrapping markers
+    String inner = data.substring(1, data.length() - 1);
+    // parse the inner as a single XML element so we can extract name + attributes
+    Document doc = Jsoup.parse("<" + inner + ">", baseUri(), Parser.xmlParser());
+    // must have produced at least one element
+    if (doc.children().isEmpty()) {
+        return null;
+    }
     Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+    String tagName = NodeUtils.parser(doc).settings().normalizeTag(el.tagName());
+    XmlDeclaration decl = new XmlDeclaration(tagName, first == '!');
     decl.attributes().addAll(el.attributes());
-        }
     return decl;
 }
\ No newline at end of file
