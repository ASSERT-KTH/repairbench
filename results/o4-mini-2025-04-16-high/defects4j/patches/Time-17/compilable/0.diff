diff --git a/tmp/9b1c968f-78e8-483f-bdfd-3ca0b0024b65_buggy.java b/tmp/ac634b10-86e4-4d21-bc99-94ba9c6e82a3_fixed.java
index 03b03d7..b80afd6 100644
--- a/tmp/9b1c968f-78e8-483f-bdfd-3ca0b0024b65_buggy.java
+++ b/tmp/ac634b10-86e4-4d21-bc99-94ba9c6e82a3_fixed.java
@@ -1,25 +1,22 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
-     * @param instant  the instant to adjust
+ * @param instant         the instant to adjust (UTC millis)
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
-        }
-        
-        // work out range of instants that have duplicate local times
+    // Convert the UTC instant to the local millisecond value
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Find the two possible UTC instants for this local time:
+    //   - hint = Long.MIN_VALUE will force the “earlier” mapping
+    //   - hint = Long.MAX_VALUE will force the “later” mapping
+    long earlier = convertLocalToUTC(local, false, Long.MIN_VALUE);
+    long later   = convertLocalToUTC(local, false, Long.MAX_VALUE);
+    // If they are the same, there's no overlap
+    if (earlier == later) {
+        return instant;
+    }
+    // Otherwise pick the desired mapping
+    return earlierOrLater ? later : earlier;
 }
\ No newline at end of file
