diff --git a/tmp/9120687c-ec9f-45c0-adb9-4084226bbd69_buggy.java b/tmp/d46d9a33-eb61-477a-8513-346e3842b475_fixed.java
index 03b03d7..974df8d 100644
--- a/tmp/9120687c-ec9f-45c0-adb9-4084226bbd69_buggy.java
+++ b/tmp/d46d9a33-eb61-477a-8513-346e3842b475_fixed.java
@@ -1,25 +1,49 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
+ * @param instant       the instant to adjust (in UTC millis)
+ * @param earlierOrLater false for earlier offset, true for later offset
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+    // 1) Check if we are in the *second* half of a backward shift (the "later" window)
+    long prevTrans = previousTransition(instant);
+    int offsetBefore = getOffset(prevTrans - 1);
+    int offsetAfter  = getOffset(prevTrans);
+    int delta = offsetBefore - offsetAfter;
+    if (delta > 0) {
+        long overlapEnd = prevTrans + delta;
+        if (instant >= prevTrans && instant < overlapEnd) {
+            // We are in the later‐offset half of the overlap
+            if (earlierOrLater) {
+                // user wants the later offset => no change
+                return instant;
+            } else {
+                // user wants the earlier offset => move back by the gap
+                return instant - delta;
+            }
+        }
     }
 
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    // 2) Check if we are in the *first* half of an upcoming backward shift ("earlier" window)
+    long nextTrans = nextTransition(instant);
+    offsetBefore = getOffset(nextTrans - 1);
+    offsetAfter  = getOffset(nextTrans);
+    delta = offsetBefore - offsetAfter;
+    if (delta > 0) {
+        long overlapStart = nextTrans - delta;
+        if (instant >= overlapStart && instant < nextTrans) {
+            // We are in the earlier‐offset half of the overlap
+            if (earlierOrLater) {
+                // user wants the later offset => move forward by the gap
+                return instant + delta;
+            } else {
+                // user wants the earlier offset => no change
+                return instant;
+            }
+        }
+    }
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Not in any overlap
+    return instant;
 }
\ No newline at end of file
