diff --git a/tmp/034c9c71-825f-48ef-8cf8-e63beaf476c6_buggy.java b/tmp/3614ac55-a787-48c0-a231-5360143a35d8_fixed.java
index 03b03d7..8c1bbef 100644
--- a/tmp/034c9c71-825f-48ef-8cf8-e63beaf476c6_buggy.java
+++ b/tmp/3614ac55-a787-48c0-a231-5360143a35d8_fixed.java
@@ -1,25 +1,42 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+    // Check the previous transition for an overlap (clocks went backward)
+    long prevTrans = previousTransition(instant);
+    int prevOffset = getOffset(prevTrans - 1);
+    int postOffset = getOffset(prevTrans);
+    if (postOffset < prevOffset) {
+        long overlap = prevOffset - postOffset;
+        long overlapStart = prevTrans - overlap;
+        long overlapEnd   = prevTrans + overlap;
+        if (instant >= overlapStart && instant < overlapEnd) {
+            // In the ambiguous window around prevTrans
+            if (instant < prevTrans) {
+                // first half of the overlap
+                return earlierOrLater ? instant + overlap : instant;
+            } else {
+                // second half of the overlap
+                return earlierOrLater ? instant : instant - overlap;
             }
-        
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        }
+    }
+    // Check the next transition for an overlap
+    long nextTrans = nextTransition(instant);
+    prevOffset = getOffset(nextTrans - 1);
+    postOffset = getOffset(nextTrans);
+    if (postOffset < prevOffset) {
+        long overlap = prevOffset - postOffset;
+        long overlapStart = nextTrans - overlap;
+        long overlapEnd   = nextTrans + overlap;
+        if (instant >= overlapStart && instant < overlapEnd) {
+            // In the ambiguous window around nextTrans
+            if (instant < nextTrans) {
+                // first half of the overlap
+                return earlierOrLater ? instant + overlap : instant;
+            } else {
+                // second half of the overlap
+                return earlierOrLater ? instant : instant - overlap;
+            }
+        }
+    }
+    // Not in an overlap period, no adjustment
+    return instant;
 }
\ No newline at end of file
