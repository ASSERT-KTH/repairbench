diff --git a/tmp/71e99c21-3590-4e9b-83cb-e5d5f1f8d5e6_buggy.java b/tmp/28ef221d-40be-488c-8a74-16b6ef96fd4a_fixed.java
index 03b03d7..2ab3510 100644
--- a/tmp/71e99c21-3590-4e9b-83cb-e5d5f1f8d5e6_buggy.java
+++ b/tmp/28ef221d-40be-488c-8a74-16b6ef96fd4a_fixed.java
@@ -1,25 +1,25 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  *
-     * @param instant  the instant to adjust
+ * @param instant         the instant to adjust (UTC milliseconds)
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
+    // Look up 3 hours either side to detect a transition.
+    long beforeInstant = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;
+    long afterInstant  = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;
+    long beforeLocal   = convertUTCToLocal(beforeInstant);
+    long afterLocal    = convertUTCToLocal(afterInstant);
 
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+    // If local‐time is unchanged, there's no overlap here
+    if (beforeLocal == afterLocal) {
+        return instant;
     }
 
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // We're in a potential overlap – rebuild the UTC instant for the same local time,
+    // choosing the mapping closest to either beforeInstant or afterInstant.
+    long localInstant     = convertUTCToLocal(instant);
+    long referenceInstant = earlierOrLater ? afterInstant : beforeInstant;
+    return convertLocalToUTC(localInstant, false, referenceInstant);
 }
\ No newline at end of file
