diff --git a/tmp/1cd7a612-37fe-414c-8567-3ac34bf7efd9_buggy.java b/tmp/96b039da-2421-4361-8332-cefb0163be2b_fixed.java
index 03b03d7..3c8abf0 100644
--- a/tmp/1cd7a612-37fe-414c-8567-3ac34bf7efd9_buggy.java
+++ b/tmp/96b039da-2421-4361-8332-cefb0163be2b_fixed.java
@@ -1,25 +1,44 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  *
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
+    // Convert the UTC instant to local time
+    long localMillis = convertUTCToLocal(instant);
 
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+    // 1) Check for a backward transition just before or at this instant
+    long prevTrans = previousTransition(instant);
+    int offsetBefore = getOffset(prevTrans - 1);
+    int offsetAfter  = getOffset(prevTrans + 1);
+    if (offsetAfter < offsetBefore) {
+        // We have an overlap starting at local = prevTrans + offsetAfter
+        long startLocal = prevTrans + offsetAfter;
+        long endLocal   = prevTrans + offsetBefore;
+        if (localMillis >= startLocal && localMillis < endLocal) {
+            // In the overlap â€“ choose earlier or later mapping
+            return earlierOrLater
+                 ? (localMillis - offsetAfter)
+                 : (localMillis - offsetBefore);
+        }
     }
 
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    // 2) Check for a backward transition just after this instant
+    long nextTrans = nextTransition(instant);
+    offsetBefore = getOffset(nextTrans - 1);
+    offsetAfter  = getOffset(nextTrans + 1);
+    if (offsetAfter < offsetBefore) {
+        long startLocal = nextTrans + offsetAfter;
+        long endLocal   = nextTrans + offsetBefore;
+        if (localMillis >= startLocal && localMillis < endLocal) {
+            return earlierOrLater
+                 ? (localMillis - offsetAfter)
+                 : (localMillis - offsetBefore);
+        }
+    }
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Not in an overlap, return original instant
+    return instant;
 }
\ No newline at end of file
