diff --git a/tmp/3e6333d8-2bf1-465a-89d7-91ed9f52e51c_buggy.java b/tmp/0c41767c-196f-44ca-aa3c-93bdd50877cb_fixed.java
index 40f74f7..a0c7811 100644
--- a/tmp/3e6333d8-2bf1-465a-89d7-91ed9f52e51c_buggy.java
+++ b/tmp/0c41767c-196f-44ca-aa3c-93bdd50877cb_fixed.java
@@ -1,50 +1,50 @@
 public static boolean testNode(Node node, NodeTest test) {
     if (test == null) {
         return true;
     }
     if (test instanceof NodeNameTest) {
         if (node.getNodeType() != Node.ELEMENT_NODE) {
             return false;
         }
-
         NodeNameTest nodeNameTest = (NodeNameTest) test;
         QName testName = nodeNameTest.getNodeName();
-            String namespaceURI = nodeNameTest.getNamespaceURI();
+        String prefix = testName.getPrefix();
+        String localName = DOMNodePointer.getLocalName(node);
         boolean wildcard = nodeNameTest.isWildcard();
-            String testPrefix = testName.getPrefix();
-            if (wildcard && testPrefix == null) {
-                return true;
+        // Unprefixed name tests match by local name only, ignoring namespace
+        if (prefix == null || prefix.length() == 0) {
+            return wildcard || testName.getName().equals(localName);
         }
-            if (wildcard
-                || testName.getName()
-                        .equals(DOMNodePointer.getLocalName(node))) {
+        // Prefixed name tests must match namespace and local name (or wildcard)
+        String namespaceURI = nodeNameTest.getNamespaceURI();
         String nodeNS = DOMNodePointer.getNamespaceURI(node);
-                return equalStrings(namespaceURI, nodeNS);
-            }
+        if (!equalStrings(namespaceURI, nodeNS)) {
             return false;
         }
+        return wildcard || testName.getName().equals(localName);
+    }
     if (test instanceof NodeTypeTest) {
         int nodeType = node.getNodeType();
         switch (((NodeTypeTest) test).getNodeType()) {
             case Compiler.NODE_TYPE_NODE:
                 return nodeType == Node.ELEMENT_NODE
                     || nodeType == Node.DOCUMENT_NODE;
             case Compiler.NODE_TYPE_TEXT:
                 return nodeType == Node.CDATA_SECTION_NODE
                     || nodeType == Node.TEXT_NODE;
             case Compiler.NODE_TYPE_COMMENT:
                 return nodeType == Node.COMMENT_NODE;
             case Compiler.NODE_TYPE_PI:
                 return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
         }
         return false;
     }
     if (test instanceof ProcessingInstructionTest) {
         if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
             String testPI = ((ProcessingInstructionTest) test).getTarget();
             String nodePI = ((ProcessingInstruction) node).getTarget();
             return testPI.equals(nodePI);
         }
     }
     return false;
 }
\ No newline at end of file
