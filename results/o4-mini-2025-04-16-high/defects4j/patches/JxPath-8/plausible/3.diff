diff --git a/tmp/64a7ad43-d01b-46a1-bfa5-a70dcb439ae3_buggy.java b/tmp/bb331f7b-e42c-406a-a605-49384a8346c0_fixed.java
index 98d89dc..7a87890 100644
--- a/tmp/64a7ad43-d01b-46a1-bfa5-a70dcb439ae3_buggy.java
+++ b/tmp/bb331f7b-e42c-406a-a605-49384a8346c0_fixed.java
@@ -1,23 +1,34 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
+
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    // XPath defines that any comparison with NaN is false,
+    // except "=" returns true when both sides are NaN.
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        if (Double.isNaN(ld) && Double.isNaN(rd)) {
+            return evaluateCompare(0);
+        }
+        return false;
+    }
+
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
\ No newline at end of file
