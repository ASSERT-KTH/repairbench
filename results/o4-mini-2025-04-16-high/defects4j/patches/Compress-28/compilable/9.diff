diff --git a/tmp/c512b39c-3bbd-4035-a45c-b18a6c62b60b_buggy.java b/tmp/a9191db9-540c-47ca-bf6c-091591002291_fixed.java
index 0f439b3..4eb9ed2 100644
--- a/tmp/c512b39c-3bbd-4035-a45c-b18a6c62b60b_buggy.java
+++ b/tmp/a9191db9-540c-47ca-bf6c-091591002291_fixed.java
@@ -1,38 +1,28 @@
-    /**
-     * Reads bytes from the current tar archive entry.
-     *
-     * This method is aware of the boundaries of the current
-     * entry in the archive and will deal with them as if they
-     * were this stream's start and EOF.
-     *
-     * @param buf The buffer into which to place bytes read.
-     * @param offset The offset at which to place bytes read.
-     * @param numToRead The number of bytes to read.
-     * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
-     */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
-
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
-
-        numToRead = Math.min(numToRead, available());
-        
-        totalRead = is.read(buf, offset, numToRead);
-        count(totalRead);
-        
+    // never read past the declared entry size
+    long remaining = entrySize - entryOffset;
+    if (remaining <= 0) {
+        return -1;
+    }
+    // bound the read to the entry's remaining bytes
+    int toRead = (int) Math.min(numToRead, remaining);
+    int totalRead = is.read(buf, offset, toRead);
     if (totalRead == -1) {
         hasHitEOF = true;
-        } else {
+        // if we hit EOF before reading all the declared bytes, it's truncated
+        throw new IOException("Truncated TAR archive entry '"
+                + currEntry.getName() + "', expected "
+                + entrySize + " bytes but only read "
+                + entryOffset + " bytes");
+    }
+    count(totalRead);
     entryOffset += totalRead;
-        }
-
     return totalRead;
 }
\ No newline at end of file
