diff --git a/tmp/467f50d8-4d18-479b-983b-9bc9067fc988_buggy.java b/tmp/d46c6288-9eea-44a8-a076-ed87d1c4f9af_fixed.java
index 0f439b3..4ef1a73 100644
--- a/tmp/467f50d8-4d18-479b-983b-9bc9067fc988_buggy.java
+++ b/tmp/d46c6288-9eea-44a8-a076-ed87d1c4f9af_fixed.java
@@ -1,38 +1,25 @@
-    /**
-     * Reads bytes from the current tar archive entry.
-     *
-     * This method is aware of the boundaries of the current
-     * entry in the archive and will deal with them as if they
-     * were this stream's start and EOF.
-     *
-     * @param buf The buffer into which to place bytes read.
-     * @param offset The offset at which to place bytes read.
-     * @param numToRead The number of bytes to read.
-     * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
-     */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
+    // If we've already hit EOF on the archive or read the full entry, signal EOF.
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
-
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
-
+    // Don't read past the end of this entry.
     numToRead = Math.min(numToRead, available());
 
-        totalRead = is.read(buf, offset, numToRead);
+    int totalRead = is.read(buf, offset, numToRead);
     count(totalRead);
 
+    // If the underlying stream ends before we finish this entry, it's a truncated archive.
     if (totalRead == -1) {
         hasHitEOF = true;
-        } else {
+        throw new IOException("Truncated TAR archive entry '"
+                              + currEntry.getName() + "'");
+    }
+
     entryOffset += totalRead;
-        }
-
     return totalRead;
 }
\ No newline at end of file
