diff --git a/tmp/72f1afc2-5e25-47bf-8e5b-3b07cefcc8a6_buggy.java b/tmp/460fefe4-f7cb-46ac-82f5-adc01d4b2c60_fixed.java
index 0f439b3..29335b4 100644
--- a/tmp/72f1afc2-5e25-47bf-8e5b-3b07cefcc8a6_buggy.java
+++ b/tmp/460fefe4-f7cb-46ac-82f5-adc01d4b2c60_fixed.java
@@ -1,38 +1,37 @@
 /**
  * Reads bytes from the current tar archive entry.
  *
  * This method is aware of the boundaries of the current
  * entry in the archive and will deal with them as if they
  * were this stream's start and EOF.
  *
  * @param buf The buffer into which to place bytes read.
  * @param offset The offset at which to place bytes read.
  * @param numToRead The number of bytes to read.
  * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
+ * @throws IOException on error or if the entry is truncated
  */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
-
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
-
+    // don't read past this entry's declared size
     numToRead = Math.min(numToRead, available());
-        
-        totalRead = is.read(buf, offset, numToRead);
+    int totalRead = is.read(buf, offset, numToRead);
     count(totalRead);
-        
     if (totalRead == -1) {
         hasHitEOF = true;
+        // underlying stream ended before we read all of the entry
+        if (entryOffset < entrySize) {
+            throw new IOException("Truncated TAR archive entry: expected "
+                                  + entrySize + " bytes, read " + entryOffset + " bytes");
+        }
     } else {
         entryOffset += totalRead;
     }
-
     return totalRead;
 }
\ No newline at end of file
