diff --git a/tmp/bbd8dfd7-8f4b-4870-8e3a-a31dea4ea4c8_buggy.java b/tmp/ac728592-8399-434c-813e-420cbf1c5607_fixed.java
index 7dc89ed..ca5422a 100644
--- a/tmp/bbd8dfd7-8f4b-4870-8e3a-a31dea4ea4c8_buggy.java
+++ b/tmp/ac728592-8399-434c-813e-420cbf1c5607_fixed.java
@@ -1,20 +1,25 @@
 boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
     String name = t.asEndTag().normalName();
     ArrayList<Element> stack = tb.getStack();
     for (int pos = stack.size() - 1; pos >= 0; pos--) {
         Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
-                    tb.generateImpliedEndTags(name);
-                    if (!name.equals(tb.currentElement().nodeName()))
+        // match tag names case‐insensitively
+        if (node.nodeName().equalsIgnoreCase(name)) {
+            // generate implied end tags up to the matching node
+            tb.generateImpliedEndTags(node.nodeName());
+            // if the current element isn't exactly the matched one, it's a parse error
+            if (!node.nodeName().equals(tb.currentElement().nodeName()))
                 tb.error(this);
-                    tb.popStackToClose(name);
-                    break;
-                } else {
-                    if (tb.isSpecial(node)) {
+            // pop the stack to close that element (preserving its original case)
+            tb.popStackToClose(node.nodeName());
+            return true;
+        } 
+        // if we hit a "special" element before finding a match, it's a parse error
+        else if (tb.isSpecial(node)) {
             tb.error(this);
             return false;
         }
     }
-            }
+    // no matching start tag found — ignore the end tag
     return true;
 }
\ No newline at end of file
