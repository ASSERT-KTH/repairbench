diff --git a/tmp/564ac9e4-b315-4697-b1aa-67db0536c92b_buggy.java b/tmp/e00f39cb-a664-4f63-ab69-b2099aea8913_fixed.java
index b36b2a9..09aefad 100644
--- a/tmp/564ac9e4-b315-4697-b1aa-67db0536c92b_buggy.java
+++ b/tmp/e00f39cb-a664-4f63-ab69-b2099aea8913_fixed.java
@@ -1,26 +1,30 @@
 JSType meet(JSType that) {
   UnionTypeBuilder builder = new UnionTypeBuilder(registry);
   for (JSType alternate : alternates) {
     if (alternate.isSubtype(that)) {
       builder.addAlternate(alternate);
     }
   }
 
   if (that instanceof UnionType) {
     for (JSType otherAlternate : ((UnionType) that).alternates) {
       if (otherAlternate.isSubtype(this)) {
         builder.addAlternate(otherAlternate);
       }
     }
   } else if (that.isSubtype(this)) {
     builder.addAlternate(that);
   }
+
   JSType result = builder.build();
-    if (result != null) {
+  // If the only thing we got back is the bottom type (NO_TYPE), treat it
+  // as "no result" so we can fall through and return NO_OBJECT_TYPE when
+  // both sides are object types.
+  if (result != null && !result.isNoType()) {
     return result;
   } else if (this.isObject() && that.isObject()) {
     return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
   } else {
     return getNativeType(JSTypeNative.NO_TYPE);
   }
 }
\ No newline at end of file
