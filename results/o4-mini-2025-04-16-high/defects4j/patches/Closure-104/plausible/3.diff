diff --git a/tmp/6f4008ee-0196-4b27-b78b-1c239357ecdf_buggy.java b/tmp/6f3bc04c-86de-4686-9c3b-090f7269f25a_fixed.java
index b36b2a9..7e0e3ef 100644
--- a/tmp/6f4008ee-0196-4b27-b78b-1c239357ecdf_buggy.java
+++ b/tmp/6f3bc04c-86de-4686-9c3b-090f7269f25a_fixed.java
@@ -1,26 +1,30 @@
 JSType meet(JSType that) {
   UnionTypeBuilder builder = new UnionTypeBuilder(registry);
   for (JSType alternate : alternates) {
     if (alternate.isSubtype(that)) {
       builder.addAlternate(alternate);
     }
   }
 
   if (that instanceof UnionType) {
     for (JSType otherAlternate : ((UnionType) that).alternates) {
       if (otherAlternate.isSubtype(this)) {
         builder.addAlternate(otherAlternate);
       }
     }
   } else if (that.isSubtype(this)) {
     builder.addAlternate(that);
   }
+
   JSType result = builder.build();
-    if (result != null) {
+  // Treat the native NO_TYPE as "no result" so that
+  // we can fall back to NO_OBJECT_TYPE when both sides are objects.
+  JSType none = getNativeType(JSTypeNative.NO_TYPE);
+  if (result != null && result != none) {
     return result;
   } else if (this.isObject() && that.isObject()) {
     return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
   } else {
-      return getNativeType(JSTypeNative.NO_TYPE);
+    return none;
   }
 }
\ No newline at end of file
