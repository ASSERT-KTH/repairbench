diff --git a/tmp/ea7ed06f-9ef8-47a9-b209-a43fe511e6db_buggy.java b/tmp/154b74c0-061d-4e81-aef2-3b8fcfe0d4e1_fixed.java
index b36b2a9..d41a1f1 100644
--- a/tmp/ea7ed06f-9ef8-47a9-b209-a43fe511e6db_buggy.java
+++ b/tmp/154b74c0-061d-4e81-aef2-3b8fcfe0d4e1_fixed.java
@@ -1,26 +1,32 @@
 JSType meet(JSType that) {
   UnionTypeBuilder builder = new UnionTypeBuilder(registry);
   for (JSType alternate : alternates) {
     if (alternate.isSubtype(that)) {
       builder.addAlternate(alternate);
     }
   }
 
   if (that instanceof UnionType) {
     for (JSType otherAlternate : ((UnionType) that).alternates) {
       if (otherAlternate.isSubtype(this)) {
         builder.addAlternate(otherAlternate);
       }
     }
   } else if (that.isSubtype(this)) {
     builder.addAlternate(that);
   }
+
   JSType result = builder.build();
   if (result != null) {
     return result;
-    } else if (this.isObject() && that.isObject()) {
+  } else {
+    // If either side is (or is a union entirely of) object types,
+    // the bottom of the object lattice is NO_OBJECT_TYPE.
+    JSType objectType = getNativeType(JSTypeNative.OBJECT_TYPE);
+    if (this.isSubtype(objectType) || that.isSubtype(objectType)) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
     } else {
       return getNativeType(JSTypeNative.NO_TYPE);
     }
   }
+}
\ No newline at end of file
