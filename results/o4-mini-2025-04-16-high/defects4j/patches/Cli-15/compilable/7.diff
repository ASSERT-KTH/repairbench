diff --git a/tmp/4cf791c5-b6e0-4d66-8f80-8ad8e27b31fc_buggy.java b/tmp/81af5890-ab66-404f-b7e8-93d5c2899a76_fixed.java
index 4e8b037..aa5ea37 100644
--- a/tmp/4cf791c5-b6e0-4d66-8f80-8ad8e27b31fc_buggy.java
+++ b/tmp/81af5890-ab66-404f-b7e8-93d5c2899a76_fixed.java
@@ -1,20 +1,35 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
-        List valueList = (List) values.get(option);
+public List getValues(final Option option, List defaultValues) {
+    // get any user-specified values
+    List userValues = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    if (userValues != null && !userValues.isEmpty()) {
+        // start with what the user provided
+        List result = new ArrayList(userValues);
+
+        // pick the right set of defaults to augment with
+        List defList = defaultValues;
+        if (defList == null || defList.isEmpty()) {
+            defList = (List) this.defaultValues.get(option);
         }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+        // append defaults for each missing slot
+        if (defList != null && !defList.isEmpty()) {
+            for (int i = result.size(); i < defList.size(); i++) {
+                result.add(defList.get(i));
+            }
         }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+        return result;
+    } else {
+        // no user values: fall back to defaults
+        List defList = defaultValues;
+        if (defList == null || defList.isEmpty()) {
+            defList = (List) this.defaultValues.get(option);
+        }
+        if (defList != null && !defList.isEmpty()) {
+            return new ArrayList(defList);
+        } else {
+            return Collections.EMPTY_LIST;
+        }
+    }
 }
\ No newline at end of file
