diff --git a/tmp/872af2a4-ff6c-45d3-9696-074cf449bd86_buggy.java b/tmp/4ec4d6e2-71de-4f16-94d2-f5ee91c5b338_fixed.java
index 4e8b037..c3fb173 100644
--- a/tmp/872af2a4-ff6c-45d3-9696-074cf449bd86_buggy.java
+++ b/tmp/4ec4d6e2-71de-4f16-94d2-f5ee91c5b338_fixed.java
@@ -1,20 +1,37 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
+public List getValues(final Option option, List defaultValues) {
+    // get the values provided by the user
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // if no user values, fall back to the option's defaults or parser-level defaults
+    if (valueList == null || valueList.isEmpty()) {
+        if (defaultValues != null && !defaultValues.isEmpty()) {
+            return new ArrayList(defaultValues);
+        }
+        List parserDefaults = (List) this.defaultValues.get(option);
+        if (parserDefaults != null && !parserDefaults.isEmpty()) {
+            return new ArrayList(parserDefaults);
+        }
+        return Collections.EMPTY_LIST;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // user did supply values; if there are no option-level defaults, just return them
+    if (defaultValues == null || defaultValues.isEmpty()) {
+        return new ArrayList(valueList);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // merge user values with option defaults: for each index, use the user value if present,
+    // otherwise fall back to the default at that position
+    List merged = new ArrayList();
+    int userSize = valueList.size();
+    int defaultSize = defaultValues.size();
+    int max = Math.max(userSize, defaultSize);
+
+    for (int i = 0; i < max; i++) {
+        if (i < userSize) {
+            merged.add(valueList.get(i));
+        } else {
+            merged.add(defaultValues.get(i));
+        }
+    }
+    return merged;
 }
\ No newline at end of file
