diff --git a/tmp/a93e6753-b87a-42e5-b989-aeedab875b55_buggy.java b/tmp/cdc1ae19-93ec-454e-844f-7c59dbab220b_fixed.java
index 4e8b037..16c1eef 100644
--- a/tmp/a93e6753-b87a-42e5-b989-aeedab875b55_buggy.java
+++ b/tmp/cdc1ae19-93ec-454e-844f-7c59dbab220b_fixed.java
@@ -1,20 +1,31 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
-        List valueList = (List) values.get(option);
+public List getValues(final Option option, List defaultValues) {
+    // The raw values explicitly provided by the user
+    List userValues = (List) values.get(option);
+    // Determine which defaults to use: first the argument‐level defaults,
+    // then (if none) any parser‐level defaults for this option
+    List defaults = defaultValues;
+    if (defaults == null || defaults.isEmpty()) {
+        defaults = (List) this.defaultValues.get(option);
+    }
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // If the user provided no values, return a copy of the defaults (or empty)
+    if (userValues == null || userValues.isEmpty()) {
+        if (defaults == null || defaults.isEmpty()) {
+            return Collections.EMPTY_LIST;
+        }
+        return new ArrayList(defaults);
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // The user did provide some values.  If there are more defaults
+    // than user‐supplied entries, append only the "tail" of the defaults.
+    if (defaults != null && defaults.size() > userValues.size()) {
+        List result = new ArrayList(userValues);
+        for (int i = userValues.size(); i < defaults.size(); i++) {
+            result.add(defaults.get(i));
+        }
+        return result;
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    // Otherwise just return a copy of what the user gave us
+    return new ArrayList(userValues);
 }
\ No newline at end of file
