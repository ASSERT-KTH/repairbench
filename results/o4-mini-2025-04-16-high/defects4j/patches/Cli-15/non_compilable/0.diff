diff --git a/tmp/aefd646f-93d7-4502-bafb-4bf88512b09c_buggy.java b/tmp/742bb395-d4fa-4b81-91cd-759dc5ef81a9_fixed.java
index 4e8b037..ae39d05 100644
--- a/tmp/aefd646f-93d7-4502-bafb-4bf88512b09c_buggy.java
+++ b/tmp/742bb395-d4fa-4b81-91cd-759dc5ef81a9_fixed.java
@@ -1,20 +1,40 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
-        // initialize the return list
+public List getValues(final Option option, List defaultValues) {
+    // Get any user‐supplied values
     List valueList = (List) values.get(option);
 
-        // grab the correct default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = defaultValues;
+    // If the user supplied no values, fall back to the declared defaults
+    if (valueList == null || valueList.isEmpty()) {
+        if (defaultValues != null && !defaultValues.isEmpty()) {
+            // use the builder‐supplied defaults
+            return new ArrayList(defaultValues);
+        }
+        // fall back to parser‐side defaults
+        List parserDefaults = (List) this.defaultValues.get(option);
+        if (parserDefaults != null && !parserDefaults.isEmpty()) {
+            return new ArrayList(parserDefaults);
+        }
+        // no values anywhere
+        return Collections.EMPTY_LIST;
     }
 
-        // augment the list with the default values
-        if ((valueList == null) || valueList.isEmpty()) {
-            valueList = (List) this.defaultValues.get(option);
+    // User did supply values; if there are declared defaults and a maximum
+    // count, fill in any missing trailing arguments from the defaults
+    if (defaultValues != null && !defaultValues.isEmpty()) {
+        Argument arg = option.getArgument();
+        int max = (arg != null ? arg.getMaximum() : -1);
+        // treat negative max as "unbounded" but only pull as many defaults as exist
+        if (max < 0) {
+            max = defaultValues.size();
+        }
+        int supplied = valueList.size();
+        if (supplied < max) {
+            List augmented = new ArrayList(valueList);
+            for (int i = supplied; i < max && i < defaultValues.size(); i++) {
+                augmented.add(defaultValues.get(i));
+            }
+            valueList = augmented;
+        }
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    return valueList;
 }
\ No newline at end of file
