diff --git a/tmp/376dc27e-69e3-40a1-9e41-6c0a5c24503a_buggy.java b/tmp/65cdc9c0-b362-4b98-9252-a0e7c1df1bb2_fixed.java
index ec6c9ee..0a77d62 100644
--- a/tmp/376dc27e-69e3-40a1-9e41-6c0a5c24503a_buggy.java
+++ b/tmp/65cdc9c0-b362-4b98-9252-a0e7c1df1bb2_fixed.java
@@ -1,21 +1,28 @@
-    //-----------------------------------------------------------------------
-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
+// Fixed toFormatter: honor the printer/parser flags even when a Separator is present
+private static PeriodFormatter toFormatter(List<Object> elementPairs,
+                                           boolean notPrinter,
+                                           boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
+    // handle a leading Separator specially
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+        // recurse to build the "after" formatter
+        PeriodFormatter after = toFormatter(elementPairs.subList(2, size),
+                                             notPrinter,
+                                             notParser);
+        // finish the separator with the sub‐printer and sub‐parser
+        Separator finished = sep.finish(after.getPrinter(), after.getParser());
+        // respect the notPrinter/notParser flags
+        PeriodPrinter  printer = notPrinter ? null : finished;
+        PeriodParser   parser  = notParser  ? null : finished;
+        return new PeriodFormatter(printer, parser);
     }
+    // no Separator – do the normal composite build
     Object[] comp = createComposite(elementPairs);
-        if (notPrinter) {
-            return new PeriodFormatter(null, (PeriodParser) comp[1]);
-        } else if (notParser) {
-            return new PeriodFormatter((PeriodPrinter) comp[0], null);
-        } else {
-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
-        }
+    PeriodPrinter  printer = notParser ? null : (PeriodPrinter) comp[0];
+    PeriodParser   parser  = notPrinter ? null : (PeriodParser)  comp[1];
+    return new PeriodFormatter(printer, parser);
 }
\ No newline at end of file
