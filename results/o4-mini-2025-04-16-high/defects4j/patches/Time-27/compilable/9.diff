diff --git a/tmp/5f5a9371-4aea-48e1-8d04-8470ee2ee60b_buggy.java b/tmp/79ccdec3-f799-46db-b83e-ffdc9a4f3ef5_fixed.java
index ec6c9ee..278d2e7 100644
--- a/tmp/5f5a9371-4aea-48e1-8d04-8470ee2ee60b_buggy.java
+++ b/tmp/79ccdec3-f799-46db-b83e-ffdc9a4f3ef5_fixed.java
@@ -1,21 +1,13 @@
 //-----------------------------------------------------------------------
-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
+private static PeriodFormatter toFormatter(List<Object> elementPairs,
+                                           boolean notPrinter,
+                                           boolean notParser) {
     if (notPrinter && notParser) {
-            throw new IllegalStateException("Builder has created neither a printer nor a parser");
-        }
-        int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
-            Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+        throw new IllegalStateException(
+            "Builder has created neither a printer nor a parser");
     }
     Object[] comp = createComposite(elementPairs);
-        if (notPrinter) {
-            return new PeriodFormatter(null, (PeriodParser) comp[1]);
-        } else if (notParser) {
-            return new PeriodFormatter((PeriodPrinter) comp[0], null);
-        } else {
-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
-        }
+    PeriodPrinter printer = notPrinter ? null : (PeriodPrinter) comp[0];
+    PeriodParser   parser  = notParser  ? null : (PeriodParser)   comp[1];
+    return new PeriodFormatter(printer, parser);
 }
\ No newline at end of file
