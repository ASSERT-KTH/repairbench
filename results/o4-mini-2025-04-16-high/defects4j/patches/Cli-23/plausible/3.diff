diff --git a/tmp/fbe7a568-6e6f-49ef-9ade-e2c28b009019_buggy.java b/tmp/3e1e539d-9c94-4c52-a16a-e9804477071e_fixed.java
index 227a4ef..f19bb32 100644
--- a/tmp/fbe7a568-6e6f-49ef-9ade-e2c28b009019_buggy.java
+++ b/tmp/3e1e539d-9c94-4c52-a16a-e9804477071e_fixed.java
@@ -1,48 +1,52 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
-                                             int nextLineTabStop, String text)
+                                         int nextLineTabStop,
+                                         String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    sb.append(rtrim(text.substring(0, pos)))
+      .append(defaultNewLine);
+
+    // all following lines must be padded with nextLineTabStop spaces
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         int lastPos = pos;
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
-            } else
+        }
+
+        // avoid infinite loop (CLI-162): if we didn't make progress, just
+        // break at the full width
         if (pos == lastPos)
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
+            pos = width;
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        sb.append(rtrim(text.substring(0, pos)))
+          .append(defaultNewLine);
     }
 }
\ No newline at end of file
