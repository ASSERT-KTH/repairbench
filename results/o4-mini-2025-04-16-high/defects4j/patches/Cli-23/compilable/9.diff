diff --git a/tmp/5530bd01-69c1-4fa7-8e4f-b2d229710108_buggy.java b/tmp/1048ec1d-28b3-4055-9069-fee03bc8d266_fixed.java
index 227a4ef..29b99e4 100644
--- a/tmp/5530bd01-69c1-4fa7-8e4f-b2d229710108_buggy.java
+++ b/tmp/1048ec1d-28b3-4055-9069-fee03bc8d266_fixed.java
@@ -1,48 +1,37 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
                                          int nextLineTabStop, String text)
 {
+    // first line
     int pos = findWrapPos(text, width, 0);
-
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+    // wrap at the first break
+    sb.append(rtrim(text.substring(0, pos)))
+      .append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // prepare indent for subsequent lines
     final String padding = createPadding(nextLineTabStop);
+    // the rest of the text to wrap
+    String remainder = text.substring(pos).trim();
 
+    // wrap the rest
     while (true)
     {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
+        pos = findWrapPos(remainder, width, 0);
         if (pos == -1)
         {
-                sb.append(text);
-
+            // no more breaks, append the rest
+            sb.append(padding).append(remainder);
             return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
         }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        // append next wrapped line
+        sb.append(padding)
+          .append(rtrim(remainder.substring(0, pos)))
+          .append(defaultNewLine);
+        // advance remainder
+        remainder = remainder.substring(pos).trim();
     }
 }
\ No newline at end of file
