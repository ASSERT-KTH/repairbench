diff --git a/tmp/91b86050-bd4e-4d53-9b7f-73d4dbe7e939_buggy.java b/tmp/f2988dc6-dbf5-4b14-8485-2c7b7fb1d890_fixed.java
index 227a4ef..1056c74 100644
--- a/tmp/91b86050-bd4e-4d53-9b7f-73d4dbe7e939_buggy.java
+++ b/tmp/f2988dc6-dbf5-4b14-8485-2c7b7fb1d890_fixed.java
@@ -1,48 +1,49 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
+    // if no wrap position found, just append the remainder
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // append up to the wrap position, then a newline
+    sb.append(rtrim(text.substring(0, pos)))
+      .append(defaultNewLine);
+
+    // prepare padding for subsequent lines
     final String padding = createPadding(nextLineTabStop);
 
+    // loop on the remainder
     while (true)
     {
-            int lastPos = pos;
+        // trim leading/trailing whitespace and prepend padding
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
+        // no further wrap: append the rest and exit
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        // otherwise append up to wrap and continue
+        sb.append(rtrim(text.substring(0, pos)))
+          .append(defaultNewLine);
     }
 }
\ No newline at end of file
