diff --git a/tmp/1b721f13-55be-4f82-a03c-dcc2df33b748_buggy.java b/tmp/79f04fc3-06bf-4645-89fa-56d965d1c4f6_fixed.java
index 42b7b48..b403b0d 100644
--- a/tmp/1b721f13-55be-4f82-a03c-dcc2df33b748_buggy.java
+++ b/tmp/79f04fc3-06bf-4645-89fa-56d965d1c4f6_fixed.java
@@ -1,16 +1,25 @@
 /**
  * Adds 1 to the frequency count for v.
  * <p>
  * If other objects have already been added to this Frequency, v must
  * be comparable to those that have already been added.
  * </p>
  * 
  * @param v the value to add.
  * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
  *         or is not comparable with previous entries
  * @deprecated use {@link #addValue(Comparable)} instead
  */
 @Deprecated
 public void addValue(Object v) {
+    if (!(v instanceof Comparable)) {
+        throw new IllegalArgumentException("Value must be Comparable");
+    }
+    try {
+        // delegate to the generic implementation
         addValue((Comparable<?>) v);
+    } catch (ClassCastException ex) {
+        // thrown when v cannot be compared to existing entries
+        throw new IllegalArgumentException("Values must be mutually comparable", ex);
+    }
 }
\ No newline at end of file
