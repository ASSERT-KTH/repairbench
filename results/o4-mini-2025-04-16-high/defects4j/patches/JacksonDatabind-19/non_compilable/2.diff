diff --git a/tmp/604b2ec4-9554-484b-8c0f-a4bf5224bae4_buggy.java b/tmp/ea4388d4-3492-4c1f-a0cc-5fc38fbc84d6_fixed.java
index 1bec4d6..41bb634 100644
--- a/tmp/604b2ec4-9554-484b-8c0f-a4bf5224bae4_buggy.java
+++ b/tmp/ea4388d4-3492-4c1f-a0cc-5fc38fbc84d6_fixed.java
@@ -1,14 +1,20 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    if (rawClass == java.util.Properties.class) {
+        // force Properties to be treated as Map<String,String>
+        JavaType stringType = _fromClass(String.class);
+        return MapType.construct(rawClass, stringType, stringType);
+    }
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
-            throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
+        throw new IllegalArgumentException("Strange Map type "
+            +rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
