diff --git a/tmp/26efa83e-c453-47c2-9732-c435a2e6cd6d_buggy.java b/tmp/70c9b7c6-9cc1-4db3-8378-986b25753c61_fixed.java
index 1bec4d6..b2bccd2 100644
--- a/tmp/26efa83e-c453-47c2-9732-c435a2e6cd6d_buggy.java
+++ b/tmp/70c9b7c6-9cc1-4db3-8378-986b25753c61_fixed.java
@@ -1,14 +1,21 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        if (java.util.Properties.class.isAssignableFrom(rawClass)) {
+            // force both key and value types to String
+            JavaType str = _fromClass(String.class);
+            return MapType.construct(rawClass, str, str);
+        }
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
-            throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
+            throw new IllegalArgumentException("Strange Map type "
+                    + rawClass.getName()
+                    + ": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
