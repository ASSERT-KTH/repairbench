diff --git a/tmp/0751a38f-49b0-40d8-9709-099d099db0c1_buggy.java b/tmp/2b5fc295-4a8f-40be-a510-f51a058eff89_fixed.java
index 1bec4d6..9a3a492 100644
--- a/tmp/0751a38f-49b0-40d8-9709-099d099db0c1_buggy.java
+++ b/tmp/2b5fc295-4a8f-40be-a510-f51a058eff89_fixed.java
@@ -1,14 +1,21 @@
 private JavaType _mapType(Class<?> rawClass)
 {
-        // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    // [databind#810]: Fake Map type for Properties as <String,String>
+    if (rawClass == java.util.Properties.class) {
+        // force both key and value to String
+        JavaType strType = constructType(String.class);
+        return MapType.construct(rawClass, strType, strType);
+    }
+    // otherwise handle generics as before
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
-            throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
+        throw new IllegalArgumentException("Strange Map type "
+                +rawClass.getName()+": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
