diff --git a/tmp/cf23162e-f94a-4bbb-b437-ca2181e94efa_buggy.java b/tmp/05c4185f-8ac7-405d-9f4b-57bdfcf7efe3_fixed.java
index 5f8ac1a..a210d7d 100644
--- a/tmp/cf23162e-f94a-4bbb-b437-ca2181e94efa_buggy.java
+++ b/tmp/05c4185f-8ac7-405d-9f4b-57bdfcf7efe3_fixed.java
@@ -1,34 +1,33 @@
     private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
     {
         if (depth1 < depth2) {
             int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
             return r == 0 ? -1 : r;
         }
         if (depth1 > depth2) {
             int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
             return r == 0 ? 1 : r;
         }
         if (p1 == null && p2 == null) {
             return 0;
         }
-
         if (p1 != null && p1.equals(p2)) {
             return 0;
         }
-
         if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
+            // Roots of different trees (e.g. a variable vs. a document node):
+            // provide a consistent ordering instead of throwing.
+            String s1 = p1 == null ? "" : p1.toString();
+            String s2 = p2 == null ? "" : p2.toString();
+            return s1.compareTo(s2);
         }
         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
         if (r != 0) {
             return r;
         }
-
         return p1.parent.compareChildNodePointers(p1, p2);
     }
\ No newline at end of file
