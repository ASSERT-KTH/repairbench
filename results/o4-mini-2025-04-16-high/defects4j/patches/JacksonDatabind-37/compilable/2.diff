diff --git a/tmp/98693e67-f4a2-48c0-9a1c-3c3e967d1436_buggy.java b/tmp/d4f9a9f5-3bc2-43bc-a39d-8be3723e470d_fixed.java
index e5ad041..4a73da7 100644
--- a/tmp/98693e67-f4a2-48c0-9a1c-3c3e967d1436_buggy.java
+++ b/tmp/d4f9a9f5-3bc2-43bc-a39d-8be3723e470d_fixed.java
@@ -1,19 +1,12 @@
 @Override
 protected JavaType _narrow(Class<?> subclass)
 {
+    // if already the same raw class, no change needed
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // re-resolve via TypeFactory so that container types (Map, Collection, etc)
+    // keep their element/key types instead of becoming a SimpleType
+    return com.fasterxml.jackson.databind.type.TypeFactory.defaultInstance()
+            .constructSpecializedType(this, subclass);
 }
\ No newline at end of file
