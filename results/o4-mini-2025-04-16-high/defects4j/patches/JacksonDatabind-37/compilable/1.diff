diff --git a/tmp/df948f7f-6727-4b90-98b1-fc9512b860a3_buggy.java b/tmp/95e0b064-0237-46ff-a890-350c8508ee51_fixed.java
index e5ad041..ccf12ae 100644
--- a/tmp/df948f7f-6727-4b90-98b1-fc9512b860a3_buggy.java
+++ b/tmp/95e0b064-0237-46ff-a890-350c8508ee51_fixed.java
@@ -1,19 +1,11 @@
 @Override
-    protected JavaType _narrow(Class<?> subclass)
-    {
+protected JavaType _narrow(Class<?> subclass) {
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // Instead of blindly re‐using our old bindings, re‐resolve fully via the
+    // TypeFactory so we get proper introspection and handlers.
+    return com.fasterxml.jackson.databind.type.TypeFactory
+            .defaultInstance()
+            .constructSpecializedType(this, subclass);
 }
\ No newline at end of file
