diff --git a/tmp/4ef7e8f8-fd48-488a-8677-a7d77444cf7c_buggy.java b/tmp/90a80ced-3bd3-4294-af05-ec9091fc6731_fixed.java
index e5ad041..b764c15 100644
--- a/tmp/4ef7e8f8-fd48-488a-8677-a7d77444cf7c_buggy.java
+++ b/tmp/90a80ced-3bd3-4294-af05-ec9091fc6731_fixed.java
@@ -1,19 +1,17 @@
 @Override
-    protected JavaType _narrow(Class<?> subclass)
-    {
+protected JavaType _narrow(Class<?> subclass) {
+    // if it's the same class, nothing to do
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
+    // must actually be a subtype
     if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
+        throw new IllegalArgumentException("Class "
+            + subclass.getName()
+            + " not a sub-type of "
             + _class.getName());
     }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+    // re-resolve via the factory so that all bindings, supertypes
+    // and interfaces get recomputed correctly for the subclass
+    return _typeFactory.constructType(subclass, _bindings);
 }
\ No newline at end of file
