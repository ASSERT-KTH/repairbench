diff --git a/tmp/0e4381c5-3924-496f-b84e-13f2898aa733_buggy.java b/tmp/349e6066-ab4c-48b1-b7a9-0f68a068b9b7_fixed.java
index a38ec6d..3b2afa7 100644
--- a/tmp/0e4381c5-3924-496f-b84e-13f2898aa733_buggy.java
+++ b/tmp/349e6066-ab4c-48b1-b7a9-0f68a068b9b7_fixed.java
@@ -1,10 +1,32 @@
 @Override
 public JSType caseObjectType(ObjectType type) {
   if (value.equals("function")) {
     JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
+    boolean isCtorSubtype = ctorType.isSubtype(type);
+    boolean isTypeSubtype = type.isSubtype(ctorType);
+    if (resultEqualsValue) {
+      // typeof x == "function"
+      if (isCtorSubtype) {
+        // general Object â†’ Function
+        return ctorType;
+      } else if (isTypeSubtype) {
+        // already a subtype of Function
+        return type;
+      } else {
+        // not a function
+        return null;
       }
+    } else {
+      // typeof x != "function"
+      if (isTypeSubtype) {
+        // drop all Function subtypes
+        return null;
+      } else {
+        // keep non-function objects
+        return type;
+      }
+    }
+  }
+  // default case for "object"
   return matchesExpectation("object") ? type : null;
 }
\ No newline at end of file
