diff --git a/tmp/aafee8e9-75df-472c-a48f-2a56466bd932_buggy.java b/tmp/f7dd0687-a082-4aec-b999-82dd888fd25e_fixed.java
index a38ec6d..048f033 100644
--- a/tmp/aafee8e9-75df-472c-a48f-2a56466bd932_buggy.java
+++ b/tmp/f7dd0687-a082-4aec-b999-82dd888fd25e_fixed.java
@@ -1,10 +1,24 @@
 @Override
 public JSType caseObjectType(ObjectType type) {
   if (value.equals("function")) {
     JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
+    if (resultEqualsValue) {
+      // true‐branch: keep only the function part of ‘type’
+      if (type.isSubtype(ctorType)) {
+        // a more specific function subtype
+        return type;
+      } else if (ctorType.isSubtype(type)) {
+        // a supertype covering functions → refine to the base Function
+        return ctorType;
+      } else {
+        // no overlap with functions
+        return null;
       }
+    } else {
+      // false‐branch: drop any pure function types, keep the rest
+      return type.isSubtype(ctorType) ? null : type;
+    }
+  }
+  // non‐"function" typeof checks fall through to the "object" case
   return matchesExpectation("object") ? type : null;
 }
\ No newline at end of file
