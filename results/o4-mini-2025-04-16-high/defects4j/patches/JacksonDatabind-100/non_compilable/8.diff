diff --git a/tmp/6f68cb8d-84f9-4bb4-b0b6-a9f8c9bf696a_buggy.java b/tmp/9e8d341b-eb76-4e6d-a56f-d1690586bcbd_fixed.java
index fc8c302..1226c4b 100644
--- a/tmp/6f68cb8d-84f9-4bb4-b0b6-a9f8c9bf696a_buggy.java
+++ b/tmp/9e8d341b-eb76-4e6d-a56f-d1690586bcbd_fixed.java
@@ -1,23 +1,39 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
+    // Walk the tree node and handle different kinds of binary content
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // 1) if it's textual, must decode with the passed-in variant
+        if (n.isTextual()) {
+            String text = n.textValue();
+            // Use parser's ByteArrayBuilder to accumulate decoded bytes
+            ByteArrayBuilder builder = _getByteArrayBuilder();
+            builder.reset();
+            try {
+                b64variant.decode(text, builder);
+            } catch (IllegalArgumentException e) {
+                // mimic core parser error for broken Base64
+                throw new JsonParseException(this,
+                    "Cannot access contents of TextNode as binary due to broken Base64 encoding: "
+                    + e.getMessage(), e);
+            }
+            return builder.toByteArray();
+        }
+        // 2) if it's a true binary node, just grab native bytes
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+        // 3) embedded POJO
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
+    // no binary content here
     return null;
 }
\ No newline at end of file
