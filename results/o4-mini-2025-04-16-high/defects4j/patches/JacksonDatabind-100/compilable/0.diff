diff --git a/tmp/c765509c-7cca-4f0e-9f66-2c4f0fb14e5b_buggy.java b/tmp/4dd46eb1-84e6-46fb-8388-34f3cd4c5742_fixed.java
index fc8c302..25bc303 100644
--- a/tmp/c765509c-7cca-4f0e-9f66-2c4f0fb14e5b_buggy.java
+++ b/tmp/4dd46eb1-84e6-46fb-8388-34f3cd4c5742_fixed.java
@@ -1,23 +1,34 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+        // If it's a real binary node, just return its contents:
+        if (n.isBinary()) {
+            return n.binaryValue();
         }
+        // If it's a POJO wrapping a byte[], unwrap it:
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
+        // If it's textual, decode using the requested Base64 variant:
+        if (n.isTextual()) {
+            String text = n.textValue();
+            if (text != null) {
+                try {
+                    return b64variant.decode(text);
+                } catch (IllegalArgumentException iae) {
+                    // wrap base64 decoding errors as a JsonParseException
+                    throw _constructError("Cannot access contents of TextNode as binary due to broken Base64 encoding: "
+                            + iae.getMessage());
                 }
-        // otherwise return null to mark we have no binary content
+            }
+        }
+    }
+    // no binary data available
     return null;
 }
\ No newline at end of file
