diff --git a/tmp/0ec3192d-6111-48e6-a655-a830791eecb6_buggy.java b/tmp/b9c01bdf-b1c1-45f7-915a-1126eb320b7a_fixed.java
index fc8c302..4c6f892 100644
--- a/tmp/0ec3192d-6111-48e6-a655-a830791eecb6_buggy.java
+++ b/tmp/b9c01bdf-b1c1-45f7-915a-1126eb320b7a_fixed.java
@@ -1,23 +1,38 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // If this is a TextNode, decode using the passed-in variant
+        if (n.isTextual()) {
+            String text = n.textValue();
+            com.fasterxml.jackson.core.util.ByteArrayBuilder builder =
+                new com.fasterxml.jackson.core.util.ByteArrayBuilder(text.length());
+            try {
+                b64variant.decode(text, builder);
+            } catch (IllegalArgumentException e) {
+                JsonParseException jpe = new JsonParseException(this,
+                    "Cannot access contents of TextNode as binary due to broken Base64 encoding: "
+                    + e.getMessage());
+                jpe.initCause(e);
+                throw jpe;
+            }
+            return builder.toByteArray();
+        }
+        // For non‚Äêtext nodes, defer to JsonNode.binaryValue()
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+        // Embedded POJO node wrapping a byte[]
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
+    // no binary content
     return null;
 }
\ No newline at end of file
