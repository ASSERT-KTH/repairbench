diff --git a/tmp/a7049053-9b65-4bfa-969d-7abc66c24c53_buggy.java b/tmp/e1882883-e0a4-4723-994f-d616f9c071ab_fixed.java
index 5b8a4d2..f711660 100644
--- a/tmp/a7049053-9b65-4bfa-969d-7abc66c24c53_buggy.java
+++ b/tmp/e1882883-e0a4-4723-994f-d616f9c071ab_fixed.java
@@ -1,12 +1,30 @@
 /**
  * Creates a period from the given millisecond duration with the standard period type
  * and ISO rules, ensuring that the calculation is performed with the time-only period type.
  * <p>
  * The calculation uses the hour, minute, second and millisecond fields.
  *
  * @param duration  the duration, in milliseconds
  */
 protected BasePeriod(long duration) {
-        this(duration, null, null);
-        // bug [3264409]
+    // split the duration into time-only fields
+    long hours = duration / DateTimeConstants.MILLIS_PER_HOUR;
+    long remainder = duration % DateTimeConstants.MILLIS_PER_HOUR;
+    long minutes = remainder / DateTimeConstants.MILLIS_PER_MINUTE;
+    remainder = remainder % DateTimeConstants.MILLIS_PER_MINUTE;
+    long seconds = remainder / DateTimeConstants.MILLIS_PER_SECOND;
+    int millis = (int)(remainder % DateTimeConstants.MILLIS_PER_SECOND);
+
+    // assign the standard period type and populate values
+    iType = PeriodType.standard();
+    iValues = new int[] {
+        0,        // years
+        0,        // months
+        0,        // weeks
+        0,        // days
+        (int)hours,
+        (int)minutes,
+        (int)seconds,
+        millis
+    };
 }
\ No newline at end of file
