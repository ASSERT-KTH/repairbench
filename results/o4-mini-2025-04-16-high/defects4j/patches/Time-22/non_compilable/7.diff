diff --git a/tmp/6a8aca94-3fbb-4e3d-b812-daa245f773ee_buggy.java b/tmp/8c415e02-48fc-4825-b00b-b3acaac97bb4_fixed.java
index 5b8a4d2..af262f2 100644
--- a/tmp/6a8aca94-3fbb-4e3d-b812-daa245f773ee_buggy.java
+++ b/tmp/8c415e02-48fc-4825-b00b-b3acaac97bb4_fixed.java
@@ -1,12 +1,20 @@
 /**
  * Creates a period from the given millisecond duration with the standard period type
  * and ISO rules, ensuring that the calculation is performed with the time-only period type.
  * <p>
  * The calculation uses the hour, minute, second and millisecond fields.
  *
  * @param duration  the duration, in milliseconds
  */
 protected BasePeriod(long duration) {
-        this(duration, null, null);
-        // bug [3264409]
+    long rem = duration;
+    int hours   = (int)(rem / DateTimeConstants.MILLIS_PER_HOUR);
+    rem         = rem % DateTimeConstants.MILLIS_PER_HOUR;
+    int minutes = (int)(rem / DateTimeConstants.MILLIS_PER_MINUTE);
+    rem         = rem % DateTimeConstants.MILLIS_PER_MINUTE;
+    int seconds = (int)(rem / DateTimeConstants.MILLIS_PER_SECOND);
+    int millis  = (int)(rem % DateTimeConstants.MILLIS_PER_SECOND);
+    // build a standard‚Äêtype period but only populate the time fields
+    this(0, 0, 0, 0, hours, minutes, seconds, millis,
+         PeriodType.standard(), ISOChronology.getInstanceUTC());
 }
\ No newline at end of file
