diff --git a/tmp/8312fc0d-15e1-413e-aabb-afc167c4e78c_buggy.java b/tmp/b213c45c-0ae8-45fb-9d52-9ac87167680a_fixed.java
index bada2b6..784fee0 100644
--- a/tmp/8312fc0d-15e1-413e-aabb-afc167c4e78c_buggy.java
+++ b/tmp/b213c45c-0ae8-45fb-9d52-9ac87167680a_fixed.java
@@ -1,16 +1,27 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+    Type genericType = field.getGenericType();
+    if (genericType instanceof ParameterizedType) {
+        Type[] typeArgs = ((ParameterizedType) genericType).getActualTypeArguments();
+        if (typeArgs.length > 0) {
+            Type actual = typeArgs[0];
+            // simple case: List<String> -> String.class
+            if (actual instanceof Class) {
                 return (Class) actual;
-                //in case of nested generics we don't go deep
             }
-        
+            // nested generics: List<Set<String>> -> Set.class
+            if (actual instanceof ParameterizedType) {
+                Type raw = ((ParameterizedType) actual).getRawType();
+                if (raw instanceof Class) {
+                    return (Class) raw;
+                }
+            }
+        }
+    }
     return Object.class;
 }
\ No newline at end of file
