diff --git a/tmp/e23ef0d2-20e5-4c50-b1fe-3aab032c2aa8_buggy.java b/tmp/a2461857-fddf-4707-a18f-e817f7d5b072_fixed.java
index bada2b6..7b64238 100644
--- a/tmp/e23ef0d2-20e5-4c50-b1fe-3aab032c2aa8_buggy.java
+++ b/tmp/a2461857-fddf-4707-a18f-e817f7d5b072_fixed.java
@@ -1,16 +1,25 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
+        // pick the first type argument
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // simple case: it's a raw class
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
         }
-        
+        // nested generics: unwrap to raw
+        if (actual instanceof ParameterizedType) {
+            Type raw = ((ParameterizedType) actual).getRawType();
+            if (raw instanceof Class) {
+                return (Class) raw;
+            }
+        }
+    }
     return Object.class;
 }
\ No newline at end of file
