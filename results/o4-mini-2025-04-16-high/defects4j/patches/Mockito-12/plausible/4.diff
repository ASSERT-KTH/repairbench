diff --git a/tmp/2c2a70eb-c68d-433a-9248-cf1a988f029d_buggy.java b/tmp/eb882bd7-f706-4b8c-90c5-072dfe2d678a_fixed.java
index bada2b6..682ca0b 100644
--- a/tmp/2c2a70eb-c68d-433a-9248-cf1a988f029d_buggy.java
+++ b/tmp/eb882bd7-f706-4b8c-90c5-072dfe2d678a_fixed.java
@@ -1,16 +1,19 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
 public Class getGenericType(Field field) {
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    Type genericType = field.getGenericType();
+    if (genericType instanceof ParameterizedType) {
+        ParameterizedType pt = (ParameterizedType) genericType;
+        Type[] args = pt.getActualTypeArguments();
+        if (args.length > 0) {
+            Type arg = args[0];
+            if (arg instanceof Class) {
+                return (Class) arg;
+            } else if (arg instanceof ParameterizedType) {
+                Type raw = ((ParameterizedType) arg).getRawType();
+                if (raw instanceof Class) {
+                    return (Class) raw;
+                }
+            }
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
