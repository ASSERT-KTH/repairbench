diff --git a/tmp/d28ca7b0-ccd5-409b-a624-ac00ee243869_buggy.java b/tmp/35f0bf44-9045-47dd-a37c-ef02d1be23ba_fixed.java
index bada2b6..9eabd67 100644
--- a/tmp/d28ca7b0-ccd5-409b-a624-ac00ee243869_buggy.java
+++ b/tmp/35f0bf44-9045-47dd-a37c-ef02d1be23ba_fixed.java
@@ -1,16 +1,25 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    if (generic instanceof ParameterizedType) {
+        // grab the first type argument
+        Type typeArg = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // if it's a plain class, return it
+        if (typeArg instanceof Class) {
+            return (Class) typeArg;
+        }
+        // if it's itself parameterized (nested), return its raw type
+        if (typeArg instanceof ParameterizedType) {
+            Type raw = ((ParameterizedType) typeArg).getRawType();
+            if (raw instanceof Class) {
+                return (Class) raw;
+            }
+        }
     }
-        
     return Object.class;
 }
\ No newline at end of file
