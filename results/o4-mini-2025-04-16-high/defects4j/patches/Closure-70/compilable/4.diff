diff --git a/tmp/6286565f-103c-47a2-9cd1-e9e1b642d741_buggy.java b/tmp/df6103d8-0c05-4b8e-b5da-05c677a1f88c_fixed.java
index 1530b34..89c6438 100644
--- a/tmp/6286565f-103c-47a2-9cd1-e9e1b642d741_buggy.java
+++ b/tmp/df6103d8-0c05-4b8e-b5da-05c677a1f88c_fixed.java
@@ -1,23 +1,24 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
-      if (functionType != null) {
-        Node jsDocParameters = functionType.getParametersNode();
-        if (jsDocParameters != null) {
-          Node jsDocParameter = jsDocParameters.getFirstChild();
+
+  // Try to get the typed-parameter list, if any.
+  Node jsDocParameters =
+      (functionType != null) ? functionType.getParametersNode() : null;
+  Node jsDocParameter =
+      (jsDocParameters != null) ? jsDocParameters.getFirstChild() : null;
+
+  // Always declare every AST parameter, using its JSDoc type if available.
   for (Node astParameter : astParameters.children()) {
+    JSType paramType = null;
     if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+      paramType = jsDocParameter.getJSType();
       jsDocParameter = jsDocParameter.getNext();
-            } else {
-              defineSlot(astParameter, functionNode, null, true);
     }
+    defineSlot(astParameter, functionNode, paramType, true);
   }
 }
\ No newline at end of file
-      }
-    } // end declareArguments
