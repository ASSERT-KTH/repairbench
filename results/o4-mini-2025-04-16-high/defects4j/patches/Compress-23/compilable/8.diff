diff --git a/tmp/a3a55d89-6846-43ad-b2c5-094874db5fa5_buggy.java b/tmp/82958d31-de3b-424f-a813-6addfefca1a2_fixed.java
index 0e18f59..91c083c 100644
--- a/tmp/a3a55d89-6846-43ad-b2c5-094874db5fa5_buggy.java
+++ b/tmp/82958d31-de3b-424f-a813-6addfefca1a2_fixed.java
@@ -1,13 +1,17 @@
 @Override
 InputStream decode(final InputStream in, final Coder coder,
                    byte[] password) throws IOException {
+    // LZMA properties are 5 bytes: 1 byte props and 4 bytes dictSize (little‚Äêendian)
+    if (coder.properties == null || coder.properties.length < 5) {
+        throw new IOException("LZMA properties too short");
+    }
     byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
-            for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
-            }
+    long dictSize = (coder.properties[1] & 0xFFL)
+                  | ((coder.properties[2] & 0xFFL) << 8)
+                  | ((coder.properties[3] & 0xFFL) << 16)
+                  | ((coder.properties[4] & 0xFFL) << 24);
     if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
         throw new IOException("Dictionary larger than 4GiB maximum size");
     }
     return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
 }
\ No newline at end of file
