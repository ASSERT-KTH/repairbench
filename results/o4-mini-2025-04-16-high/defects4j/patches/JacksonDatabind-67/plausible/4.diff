diff --git a/tmp/2acac593-d71a-429a-9aef-1b2e14d144cf_buggy.java b/tmp/5887cf78-5646-445a-8d09-8613dfa67e2e_fixed.java
index bc80637..f588a11 100644
--- a/tmp/2acac593-d71a-429a-9aef-1b2e14d144cf_buggy.java
+++ b/tmp/5887cf78-5646-445a-8d09-8613dfa67e2e_fixed.java
@@ -1,33 +1,32 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
-            JavaType type)
-        throws JsonMappingException
+        JavaType type) throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
+    // first: allow custom KeyDeserializers
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
-        // the only non-standard thing is this:
+    // if none found, use standard: enum or other
     if (deser == null) {
         if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+            deser = _createEnumKeyDeserializer(ctxt, type);
+        } else {
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
-        if (deser != null) {
-            if (_factoryConfig.hasDeserializerModifiers()) {
+    }
+    // finally allow BeanDeserializerModifiers to wrap/replace
+    if (deser != null && _factoryConfig.hasDeserializerModifiers()) {
         for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
             deser = mod.modifyKeyDeserializer(config, type, deser);
         }
     }
-        }
     return deser;
 }
\ No newline at end of file
