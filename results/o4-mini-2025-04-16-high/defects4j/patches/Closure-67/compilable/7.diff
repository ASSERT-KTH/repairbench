diff --git a/tmp/cf404aa2-ed3b-4e8e-9076-9950c4b8cd75_buggy.java b/tmp/815e625a-a46f-49b4-8973-b574301caf0b_fixed.java
index 939f49b..e609234 100644
--- a/tmp/cf404aa2-ed3b-4e8e-9076-9950c4b8cd75_buggy.java
+++ b/tmp/815e625a-a46f-49b4-8973-b574301caf0b_fixed.java
@@ -1,21 +1,22 @@
 private boolean isPrototypePropertyAssign(Node assign) {
-      Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
-            return true;
-          }
+  Node lhs = assign.getFirstChild();
+  if (lhs == null || !NodeUtil.isVarOrSimpleAssignLhs(lhs, assign)) {
+    return false;
   }
+  // Accept both dot and bracket on the left-hand side:
+  if (lhs.getType() != Token.GETPROP && lhs.getType() != Token.GETELEM) {
+    return false;
   }
-
+  // We want to exclude the assignment itself from the usage list;
+  // the receiver of that GETPROP/GETELEM must itself be a GETPROP/GETELEM
+  Node owner = lhs.getFirstChild();
+  if (owner == null ||
+      (owner.getType() != Token.GETPROP && owner.getType() != Token.GETELEM)) {
     return false;
   }
+  // Check that the inner property name is the literal "prototype"
+  Node propKey = owner.getFirstChild().getNext();
+  return propKey != null
+      && propKey.getType() == Token.STRING
+      && "prototype".equals(propKey.getString());
+}
\ No newline at end of file
