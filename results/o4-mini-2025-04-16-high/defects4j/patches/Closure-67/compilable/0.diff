diff --git a/tmp/3d9e26f0-4bfe-4ba2-aaee-2e0d6e6c7187_buggy.java b/tmp/3e591abb-0a46-4ba2-b3b3-6d863f216561_fixed.java
index 939f49b..9735e8b 100644
--- a/tmp/3d9e26f0-4bfe-4ba2-aaee-2e0d6e6c7187_buggy.java
+++ b/tmp/3e591abb-0a46-4ba2-b3b3-6d863f216561_fixed.java
@@ -1,21 +1,19 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+  if (n != null
+      && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
+      && (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM)) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+    Node qualifier = n.getFirstChild();
+    if (qualifier != null && qualifier.getType() == Token.GETPROP) {
+      // qualifier is GETPROP(<anything>, "prototype")
+      Node protoKey = qualifier.getFirstChild().getNext();
+      if (protoKey != null
+          && protoKey.getType() == Token.STRING
+          && "prototype".equals(protoKey.getString())) {
         return true;
       }
     }
   }
-
   return false;
 }
\ No newline at end of file
