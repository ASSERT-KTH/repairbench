diff --git a/tmp/242084d3-753a-4027-92b0-023dd427e51e_buggy.java b/tmp/04abf2ea-f488-4655-b092-9f2d32610fde_fixed.java
index 939f49b..119eceb 100644
--- a/tmp/242084d3-753a-4027-92b0-023dd427e51e_buggy.java
+++ b/tmp/04abf2ea-f488-4655-b092-9f2d32610fde_fixed.java
@@ -1,21 +1,19 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
-      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+  if (n != null
+      && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
+      // allow both dot- and bracket-style on the left
+      && (n.getType() == Token.GETPROP || n.getType() == Token.GETELEM)) {
     // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
+    boolean isChainedProperty = n.getFirstChild().getType() == Token.GETPROP;
     if (isChainedProperty) {
+      // drill into the inner GETPROP e.prototype to see if it's really ".prototype"
       Node child = n.getFirstChild().getFirstChild().getNext();
-
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
-
   return false;
 }
\ No newline at end of file
