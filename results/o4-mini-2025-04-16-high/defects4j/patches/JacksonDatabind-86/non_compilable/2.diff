diff --git a/tmp/71951d93-03ad-4316-b957-25ed97d1c8aa_buggy.java b/tmp/0bbbe891-ab07-4ea5-8d1d-e6d9135b2a0c_fixed.java
index e69de29..64c5062 100644
--- a/tmp/71951d93-03ad-4316-b957-25ed97d1c8aa_buggy.java
+++ b/tmp/0bbbe891-ab07-4ea5-8d1d-e6d9135b2a0c_fixed.java
@@ -0,0 +1,22 @@
+// In TypeFactory.java, replace the old _buildSuperClass (or similarly‚Äênamed) method
+// so that we no longer skip Object.class; i.e. only return null when there is no superclass.
+
+protected JavaType _buildSuperClass(ClassStack context,
+                                   Class<?> rawClass,
+                                   TypeBindings bindings,
+                                   boolean asStatic)
+{
+    Class<?> superClass = rawClass.getSuperclass();
+    // only skip if there really is no superclass at all
+    if (superClass == null) {
+        return null;
+    }
+    // previously we special-cased Object.class here; that check is removed so that
+    // even java.lang.Object is represented, allowing RecursiveTypeTest to see a non-null
+    // super-super class
+    return _fromClass(superClass,
+                      TypeBindings.create(superClass, null),
+                      /* outerType */ null,
+                      context,
+                      asStatic);
+}
\ No newline at end of file
