diff --git a/tmp/93739a39-6954-4840-96f0-dfbf8a222349_buggy.java b/tmp/7a420327-8e39-49f6-8904-2ad2289267a2_fixed.java
index e69de29..dd844aa 100644
--- a/tmp/93739a39-6954-4840-96f0-dfbf8a222349_buggy.java
+++ b/tmp/7a420327-8e39-49f6-8904-2ad2289267a2_fixed.java
@@ -0,0 +1,26 @@
+// in com/fasterxml/jackson/databind/type/TypeFactory.java
+
+@Override
+protected JavaType _constructSuperClass(Class<?> rawType,
+                                        TypeBindings bindings,
+                                        JavaType referenceType)
+{
+    // find the raw superclass (null for Object or interfaces)
+    Class<?> superRaw = ClassUtil.getSuperClass(rawType);
+    if (superRaw == null) {
+        return null;
+    }
+    // see if there is actually a generic superclass declaration
+    Type generic = rawType.getGenericSuperclass();
+    if (generic != null) {
+        // do NOT propagate referenceType here; pass null so that
+        // we will reuse the cached Base type (which already has its own super set)
+        return _constructType(generic, /*contextType*/ null);
+    }
+    // plain raw superclass: likewise drop referenceType so that
+    // _fromClass will look in cache first and return the fully resolved Base
+    return _fromClass(superRaw,
+                      TypeBindings.emptyBindings(),
+                      /*superClass*/ null,
+                      /*superInterfaces*/ null);
+}
\ No newline at end of file
