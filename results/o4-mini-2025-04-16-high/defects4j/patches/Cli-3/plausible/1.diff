diff --git a/tmp/42265d8a-892a-4c23-941a-8b677c4ba5ca_buggy.java b/tmp/6dbe0213-63cc-4e16-bdf8-925e2f132a30_fixed.java
index d9b400d..f2890a8 100644
--- a/tmp/42265d8a-892a-4c23-941a-8b677c4ba5ca_buggy.java
+++ b/tmp/6dbe0213-63cc-4e16-bdf8-925e2f132a30_fixed.java
@@ -1,21 +1,24 @@
 /**
-     * <p>Create a number from a String. If a . is present, it creates a 
+ * <p>Create a number from a String. If a . or an exponent is present, it creates a 
  *    Double, otherwise a Long.</p>
  *
  * @param str the value
  * @return the number represented by <code>str</code>, if <code>str</code>
  * is not a number, null is returned.
  */
-    public static Number createNumber(String str)
-    {
-        try
-        {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+public static Number createNumber(String str) {
+    if (str == null) {
+        return null;
     }
-        catch (NumberFormatException nfe)
-        {
-            System.err.println(nfe.getMessage());
+    try {
+        // if it has a decimal point or an exponent, parse as Double
+        if (str.indexOf('.') >= 0 || str.indexOf('e') >= 0 || str.indexOf('E') >= 0) {
+            return Double.valueOf(str);
         }
-
+        // otherwise parse as Long
+        return Long.valueOf(str);
+    } catch (NumberFormatException nfe) {
+        // not a valid number
         return null;
     }
+}
\ No newline at end of file
