diff --git a/tmp/76020aa8-8cf9-4046-a0f8-e34b2475427e_buggy.java b/tmp/58b7b105-05b5-4edb-83c2-b949abcd2257_fixed.java
index 139579d..05861ca 100644
--- a/tmp/76020aa8-8cf9-4046-a0f8-e34b2475427e_buggy.java
+++ b/tmp/58b7b105-05b5-4edb-83c2-b949abcd2257_fixed.java
@@ -1,43 +1,44 @@
 // performance sensitive
 public boolean hasClass(String className) {
-        final String classAttr = attributes.get("class");
+    // use attr() to pick up "class", "Class" or "CLASS" etc.
+    final String classAttr = attr("class");
     final int len = classAttr.length();
     final int wantLen = className.length();
 
     if (len == 0 || len < wantLen) {
         return false;
     }
 
     // if both lengths are equal, only need compare the className with the attribute
     if (len == wantLen) {
         return className.equalsIgnoreCase(classAttr);
     }
 
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
+    // otherwise, scan for whitespace and compare regions (with no String or List allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
+        char c = classAttr.charAt(i);
+        if (Character.isWhitespace(c)) {
             if (inClass) {
                 // whitespace ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                if (i - start == wantLen
+                        && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
             }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
+        } else if (!inClass) {
+            // entering a class name: mark the start index
             inClass = true;
             start = i;
         }
     }
-        }
 
-        // check the last entry
+    // check the very last entry
     if (inClass && len - start == wantLen) {
         return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
 
     return false;
 }
\ No newline at end of file
