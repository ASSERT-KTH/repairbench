diff --git a/tmp/6d7427da-5bf7-4ddb-ac61-3ca320425290_buggy.java b/tmp/736ff735-71ce-4802-8973-2fa90f673960_fixed.java
index 139579d..bbf832c 100644
--- a/tmp/6d7427da-5bf7-4ddb-ac61-3ca320425290_buggy.java
+++ b/tmp/736ff735-71ce-4802-8973-2fa90f673960_fixed.java
@@ -1,43 +1,38 @@
 // performance sensitive
 public boolean hasClass(String className) {
+    if (className == null || className.isEmpty())
+        return false;
     final String classAttr = attributes.get("class");
+    if (classAttr == null || classAttr.isEmpty())
+        return false;
     final int len = classAttr.length();
     final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
+    if (len < wantLen)
         return false;
-        }
-
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
+        char c = classAttr.charAt(i);
+        if (Character.isWhitespace(c)) {
             if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                // end of a token â€“ compare ignoring case
+                if (i - start == wantLen
+                    && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
             }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
+        } else if (!inClass) {
+            // start of a token
             inClass = true;
             start = i;
         }
     }
+    // check the final token
+    if (inClass
+        && len - start == wantLen
+        && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+        return true;
     }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
-
     return false;
 }
\ No newline at end of file
