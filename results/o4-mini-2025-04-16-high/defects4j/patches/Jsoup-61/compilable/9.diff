diff --git a/tmp/b76dd797-c620-4433-a534-409abf2a889b_buggy.java b/tmp/70991813-183f-461e-a2e3-5223af742c53_fixed.java
index 139579d..b87d506 100644
--- a/tmp/b76dd797-c620-4433-a534-409abf2a889b_buggy.java
+++ b/tmp/70991813-183f-461e-a2e3-5223af742c53_fixed.java
@@ -1,43 +1,39 @@
 // performance sensitive
 public boolean hasClass(String className) {
-        final String classAttr = attributes.get("class");
+    // use attr() (case‐insensitive lookup) instead of direct attributes.get
+    final String classAttr = attr("class");
     final int len = classAttr.length();
     final int wantLen = className.length();
-
     if (len == 0 || len < wantLen) {
         return false;
     }
-
-        // if both lengths are equal, only need compare the className with the attribute
+    // exact length — just do a case‐insensitive equals
     if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
+        return classAttr.equalsIgnoreCase(className);
     }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
+    // otherwise scan tokens
     boolean inClass = false;
     int start = 0;
     for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
+        char c = classAttr.charAt(i);
+        if (Character.isWhitespace(c)) {
             if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+                // end of a token — compare
+                if (i - start == wantLen
+                        && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                     return true;
                 }
                 inClass = false;
             }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
+        } else if (!inClass) {
+            // start of a token
             inClass = true;
             start = i;
         }
     }
-        }
-
-        // check the last entry
+    // final token
     if (inClass && len - start == wantLen) {
         return classAttr.regionMatches(true, start, className, 0, wantLen);
     }
-
     return false;
 }
\ No newline at end of file
