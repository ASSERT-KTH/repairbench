diff --git a/tmp/e2572d69-1068-44df-8470-b69baf068f90_buggy.java b/tmp/83f0c172-dbd7-4756-a4c3-cb15f7c74a2a_fixed.java
index 6ea5795..e620f49 100644
--- a/tmp/e2572d69-1068-44df-8470-b69baf068f90_buggy.java
+++ b/tmp/83f0c172-dbd7-4756-a4c3-cb15f7c74a2a_fixed.java
@@ -1,37 +1,40 @@
 /**
  * Appends the usage clause for an Option to a StringBuffer.  
  *
  * @param buff the StringBuffer to append to
  * @param option the Option to append
  * @param required whether the Option is required or not
  */
 private static void appendOption(final StringBuffer buff, 
                                  final Option option, 
                                  final boolean required)
 {
     if (!required)
     {
         buff.append("[");
     }
 
     if (option.getOpt() != null)
     {
         buff.append("-").append(option.getOpt());
     }
     else
     {
         buff.append("--").append(option.getLongOpt());
     }
 
-        // if the Option has a value
-        if (option.hasArg() && (option.getArgName() != null))
+    // if the Option has a value and a non-empty argument name
+    if (option.hasArg())
     {
-            buff.append(" <").append(option.getArgName()).append(">");
+        String argName = option.getArgName();
+        if (argName != null && argName.length() > 0)
+        {
+            buff.append(" <").append(argName).append(">");
+        }
     }
 
-        // if the Option is not a required option
     if (!required)
     {
         buff.append("]");
     }
 }
\ No newline at end of file
