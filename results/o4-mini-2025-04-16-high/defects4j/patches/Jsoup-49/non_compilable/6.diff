diff --git a/tmp/226fcf02-a51e-4a26-b24d-a8e75b95743d_buggy.java b/tmp/7220f78e-5de4-4cae-82bb-d2b5c95626aa_fixed.java
index a37dc7a..916d788 100644
--- a/tmp/226fcf02-a51e-4a26-b24d-a8e75b95743d_buggy.java
+++ b/tmp/7220f78e-5de4-4cae-82bb-d2b5c95626aa_fixed.java
@@ -1,10 +1,28 @@
 protected void addChildren(int index, Node... children) {
     Validate.noNullElements(children);
     ensureChildNodes();
-        for (int i = children.length - 1; i >= 0; i--) {
-            Node in = children[i];
-            reparentChild(in);
-            childNodes.add(index, in);
+
+    // First detach any of these nodes already in this parent, in descending order
+    List<Node> toRemove = new ArrayList<Node>();
+    for (Node child : children) {
+        if (child.parent == this) {
+            toRemove.add(child);
+        }
+    }
+    Collections.sort(toRemove, new Comparator<Node>() {
+        public int compare(Node a, Node b) {
+            return b.siblingIndex - a.siblingIndex;
+        }
+    });
+    for (Node child : toRemove) {
+        child.remove();
+    }
+
+    // Now re‚Äêparent and insert them in the requested order
+    for (int i = 0; i < children.length; i++) {
+        Node child = children[i];
+        reparentChild(child);
+        childNodes.add(index + i, child);
     }
     reindexChildren(index);
 }
\ No newline at end of file
