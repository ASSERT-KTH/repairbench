diff --git a/tmp/c1b679bc-de50-49d1-accb-c5560d2854f1_buggy.java b/tmp/e2559996-5062-41f7-aab9-0433a9d0dc55_fixed.java
index 66e3d01..e13c355 100644
--- a/tmp/c1b679bc-de50-49d1-accb-c5560d2854f1_buggy.java
+++ b/tmp/e2559996-5062-41f7-aab9-0433a9d0dc55_fixed.java
@@ -1,34 +1,44 @@
 /**
  * Determines whether the given value may be assigned to a define.
  *
  * @param val The value being assigned.
  * @param defines The list of names of existing defines.
  */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
   switch (val.getType()) {
     case Token.STRING:
     case Token.NUMBER:
     case Token.TRUE:
     case Token.FALSE:
       return true;
 
-      // Binary operators are only valid if both children are valid.
-      case Token.BITAND:
-      case Token.BITNOT:
-      case Token.BITOR:
-      case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
+    // Unary operators are valid if their single child is valid.
     case Token.NOT:
     case Token.NEG:
+    case Token.BITNOT:
       return isValidDefineValue(val.getFirstChild(), defines);
 
-      // Names are valid if and only if they are defines themselves.
+    // Binary operators are valid only if both operands are valid.
+    case Token.BITAND:
+    case Token.BITOR:
+    case Token.BITXOR:
+    case Token.ADD:
+      Node left = val.getFirstChild();
+      Node right = (left != null) ? left.getNext() : null;
+      return left != null
+          && right != null
+          && isValidDefineValue(left, defines)
+          && isValidDefineValue(right, defines);
+
+    // Names or qualified names are valid only if already declared as defines.
     case Token.NAME:
     case Token.GETPROP:
       if (val.isQualifiedName()) {
         return defines.contains(val.getQualifiedName());
       }
-    }
+      // fall through to default
+
+    default:
       return false;
   }
+}
\ No newline at end of file
