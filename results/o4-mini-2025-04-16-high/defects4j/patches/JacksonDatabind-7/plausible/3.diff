diff --git a/tmp/b9bace5e-2bb6-4ec6-9d3a-1f246aa9295d_buggy.java b/tmp/3cd85b9a-bb20-4a7a-9807-1c1f7cff0cf7_fixed.java
index 4f21a3a..205282d 100644
--- a/tmp/b9bace5e-2bb6-4ec6-9d3a-1f246aa9295d_buggy.java
+++ b/tmp/3cd85b9a-bb20-4a7a-9807-1c1f7cff0cf7_fixed.java
@@ -1,14 +1,22 @@
 /**
  * Helper method used by standard deserializer.
  * 
  * @since 2.3
  */
 public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
 {
+    JsonToken t = jp.getCurrentToken();
+    // special case: if parser is already at a FIELD_NAME, assume we missed the START_OBJECT
+    if (t == JsonToken.FIELD_NAME) {
+        writeStartObject();
+        // copy all fields up to the matching END_OBJECT
+        do {
             copyCurrentStructure(jp);
-        /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
-         *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
-         *    to assume one did exist.
-         */
+        } while (jp.nextToken() == JsonToken.FIELD_NAME);
+        writeEndObject();
+    } else {
+        // normal case: copy the entire current structure
+        copyCurrentStructure(jp);
+    }
     return this;
 }
\ No newline at end of file
