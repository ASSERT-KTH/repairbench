diff --git a/tmp/305a61e0-8572-46b8-9eca-57a5a3ee9901_buggy.java b/tmp/49bd990e-d871-4345-9e51-78f6486abef5_fixed.java
index 4f21a3a..3fe922a 100644
--- a/tmp/305a61e0-8572-46b8-9eca-57a5a3ee9901_buggy.java
+++ b/tmp/49bd990e-d871-4345-9e51-78f6486abef5_fixed.java
@@ -1,14 +1,23 @@
 /**
  * Helper method used by standard deserializer.
  * 
  * @since 2.3
  */
 public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
 {
+    JsonToken curr = jp.getCurrentToken();
+    if (curr == JsonToken.FIELD_NAME) {
+        // we're starting from a FIELD_NAME (no explicit START_OBJECT),
+        // so synthesize one
+        writeStartObject();
+        // copy each field+value pair until we hit the end of the object
+        do {
             copyCurrentStructure(jp);
-        /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
-         *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
-         *    to assume one did exist.
-         */
+        } while (jp.nextToken() == JsonToken.FIELD_NAME);
+        writeEndObject();
+    } else {
+        // normal case: copy the whole value/structure
+        copyCurrentStructure(jp);
+    }
     return this;
 }
\ No newline at end of file
