diff --git a/tmp/6905278d-ee83-424d-94f3-78d19786c0ea_buggy.java b/tmp/acf9f5ed-6fbb-4904-8b1d-021e45330c01_fixed.java
index 4f21a3a..b141114 100644
--- a/tmp/6905278d-ee83-424d-94f3-78d19786c0ea_buggy.java
+++ b/tmp/acf9f5ed-6fbb-4904-8b1d-021e45330c01_fixed.java
@@ -1,14 +1,22 @@
 /**
  * Helper method used by standard deserializer.
  *
  * @since 2.3
  */
 public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException
 {
+    JsonToken t = jp.getCurrentToken();
+    // special-case for #592: if we start on a FIELD_NAME, assume a missing START_OBJECT wrapper
+    if (t == JsonToken.FIELD_NAME) {
+        writeStartObject();
+        // copy each field until we hit the matching END_OBJECT
+        do {
             copyCurrentStructure(jp);
-        /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from
-         *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need
-         *    to assume one did exist.
-         */
+        } while (jp.nextToken() == JsonToken.FIELD_NAME);
+        writeEndObject();
+    } else {
+        // normal case: copy the full structure (object, array, scalar, etc.)
+        copyCurrentStructure(jp);
+    }
     return this;
 }
\ No newline at end of file
