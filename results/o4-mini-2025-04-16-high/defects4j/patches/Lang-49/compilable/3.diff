diff --git a/tmp/ec82f1bf-9bef-45ca-bb04-f9d59761381f_buggy.java b/tmp/32c9cb9a-647e-4f7c-9150-690237889cb1_fixed.java
index 08e51e4..589c6f3 100644
--- a/tmp/ec82f1bf-9bef-45ca-bb04-f9d59761381f_buggy.java
+++ b/tmp/32c9cb9a-647e-4f7c-9150-690237889cb1_fixed.java
@@ -1,16 +1,21 @@
-    /**
-     * <p>Reduce the fraction to the smallest values for the numerator and
-     * denominator, returning the result.</p>
-     * 
-     * <p>For example, if this fraction represents 2/4, then the result
-     * will be 1/2.</p>
-     *
-     * @return a new reduced fraction instance, or this if no simplification possible
-     */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
-        if (gcd == 1) {
+    // handle zero numerator: always canonicalize to ZERO
+    if (numerator == 0) {
+        return ZERO;
+    }
+    // compute gcd on absolute values
+    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));
+    int n = numerator / gcd;
+    int d = denominator / gcd;
+    // ensure denominator is positive
+    if (d < 0) {
+        n = -n;
+        d = -d;
+    }
+    // if no change, return this
+    if (n == numerator && d == denominator) {
         return this;
     }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    // else return a new, reduced fraction
+    return Fraction.getFraction(n, d);
 }
\ No newline at end of file
