diff --git a/tmp/3a8aed4a-28ce-4d17-87a7-2dfa92badcb6_buggy.java b/tmp/fc9b31cd-b242-4ddc-a086-66b0403a4e46_fixed.java
index 08e51e4..88003f7 100644
--- a/tmp/3a8aed4a-28ce-4d17-87a7-2dfa92badcb6_buggy.java
+++ b/tmp/fc9b31cd-b242-4ddc-a086-66b0403a4e46_fixed.java
@@ -1,16 +1,16 @@
-    /**
-     * <p>Reduce the fraction to the smallest values for the numerator and
-     * denominator, returning the result.</p>
-     * 
-     * <p>For example, if this fraction represents 2/4, then the result
-     * will be 1/2.</p>
-     *
-     * @return a new reduced fraction instance, or this if no simplification possible
-     */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
+    // handle zero numerator: always return the canonical ZERO instance
+    if (numerator == 0) {
+        return Fraction.ZERO;
+    }
+    // compute the positive GCD of numerator and denominator
+    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));
+    // already in lowest terms?
     if (gcd == 1) {
         return this;
     }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    // divide out the GCD and re-normalize via the factory
+    int n = numerator / gcd;
+    int d = denominator / gcd;
+    return Fraction.getFraction(n, d);
 }
\ No newline at end of file
