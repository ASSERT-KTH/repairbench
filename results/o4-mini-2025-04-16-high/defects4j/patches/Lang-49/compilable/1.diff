diff --git a/tmp/07f3699e-0cbb-4cab-b8dc-5e215dbbefd1_buggy.java b/tmp/dc3d9236-ec29-4bb2-bbc8-472167097512_fixed.java
index 08e51e4..5df6e70 100644
--- a/tmp/07f3699e-0cbb-4cab-b8dc-5e215dbbefd1_buggy.java
+++ b/tmp/dc3d9236-ec29-4bb2-bbc8-472167097512_fixed.java
@@ -1,16 +1,23 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
+    // special‚Äêcase zero numerator: always return the canonical ZERO (0/1)
+    if (numerator == 0) {
+        return Fraction.ZERO;
+    }
+    // use absolute values for GCD calculation
+    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));
+    // if already in lowest terms, return this
     if (gcd == 1) {
         return this;
     }
+    // else return a new reduced instance (getFraction will normalize signs)
     return Fraction.getFraction(numerator / gcd, denominator / gcd);
 }
\ No newline at end of file
