diff --git a/tmp/b1ab9c26-1ac3-41ce-b4e4-ff7a2ccabdcd_buggy.java b/tmp/ea2d8a55-b046-48e7-b9ac-590e21be1bdb_fixed.java
index 08e51e4..afb3289 100644
--- a/tmp/b1ab9c26-1ac3-41ce-b4e4-ff7a2ccabdcd_buggy.java
+++ b/tmp/ea2d8a55-b046-48e7-b9ac-590e21be1bdb_fixed.java
@@ -1,16 +1,24 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
+    // handle zero numerator specially to ensure 0/x always becomes 0/1 (the ZERO constant)
+    if (numerator == 0) {
+        return ZERO;
+    }
+    // compute gcd on absolute values
+    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));
+    // if already in lowest terms, return this
     if (gcd == 1) {
         return this;
     }
+    // otherwise return a new reduced fraction (getFraction will normalize the sign and
+    // return ZERO/ONE constants where appropriate)
     return Fraction.getFraction(numerator / gcd, denominator / gcd);
 }
\ No newline at end of file
