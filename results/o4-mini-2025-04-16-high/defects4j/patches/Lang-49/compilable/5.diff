diff --git a/tmp/49ae932a-4250-470a-8051-50365e1b13f5_buggy.java b/tmp/a8944ac1-a5ff-4364-a899-5044baed621e_fixed.java
index 08e51e4..2e302c7 100644
--- a/tmp/49ae932a-4250-470a-8051-50365e1b13f5_buggy.java
+++ b/tmp/a8944ac1-a5ff-4364-a899-5044baed621e_fixed.java
@@ -1,16 +1,23 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
+    // special-case zero to return the canonical ZERO instance
+    if (numerator == 0) {
+        return Fraction.ZERO;
+    }
+    // compute a positive GCD of numerator and denominator
+    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));
+    // if already in lowest terms, return this
     if (gcd == 1) {
         return this;
     }
+    // otherwise divide through by the GCD and re-normalize via getFraction
     return Fraction.getFraction(numerator / gcd, denominator / gcd);
 }
\ No newline at end of file
