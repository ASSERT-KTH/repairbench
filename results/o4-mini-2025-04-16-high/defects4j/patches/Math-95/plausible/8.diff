diff --git a/tmp/c1b00c69-97eb-4398-a2d5-5b270bbe4f69_buggy.java b/tmp/dbcb5584-afa3-4063-be05-d3513bf987d9_fixed.java
index 25c13b3..afe7e2d 100644
--- a/tmp/c1b00c69-97eb-4398-a2d5-5b270bbe4f69_buggy.java
+++ b/tmp/dbcb5584-afa3-4063-be05-d3513bf987d9_fixed.java
@@ -1,15 +1,18 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      *
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+        // for d>2 the mean exists, otherwise the mean is undefined or negative
+        double ret = d / (d - 2.0);
+        // if the mean is not a valid positive finite number, fall back to 1.0
+        if (ret <= 0.0 || Double.isInfinite(ret) || Double.isNaN(ret)) {
+            ret = 1.0;
+        }
         return ret;
     }
\ No newline at end of file
