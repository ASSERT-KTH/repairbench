diff --git a/tmp/86e19b6a-765c-448a-be31-1e637c6e099d_buggy.java b/tmp/bdeb0734-c19b-4823-8556-f1e03f991b5f_fixed.java
index 5abdeb5..6f1f5aa 100644
--- a/tmp/86e19b6a-765c-448a-be31-1e637c6e099d_buggy.java
+++ b/tmp/bdeb0734-c19b-4823-8556-f1e03f991b5f_fixed.java
@@ -1,29 +1,31 @@
 /**
-     * Computes the number of uses of the variable varName and store it in
-     * numUseWithinUseCfgNode.
+ * Computes the number of uses of the variable varName and stores it in
+ * numUsesWithinCfgNode.
  */
 private void getNumUseInUseCfgNode(final Node cfgNode) {
-
   numUsesWithinCfgNode = 0;
+
+  // Only when the entire cfgNode is just a chain of assignments
+  // do we skip counting the lhs names.  In all other contexts
+  // (e.g. inside a hook/ternary), we must count writes as uses.
+  final boolean isAssignmentChain =
+      cfgNode.isAssign()
+      || (cfgNode.isExprResult() && cfgNode.getFirstChild().isAssign());
+
   AbstractCfgNodeTraversalCallback gatherCb =
       new AbstractCfgNodeTraversalCallback() {
-
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
-              // Don't count lhs of top-level assignment chain
+      if (n.isName()
+          && n.getString().equals(varName)
+          // only skip the lhs when we're in a top‚Äêlevel assignment chain
+          && !(isAssignmentChain
+               && parent.isAssign()
+               && parent.getFirstChild() == n)) {
         numUsesWithinCfgNode++;
       }
     }
-
   };
 
   NodeTraversal.traverse(compiler, cfgNode, gatherCb);
 }
\ No newline at end of file
