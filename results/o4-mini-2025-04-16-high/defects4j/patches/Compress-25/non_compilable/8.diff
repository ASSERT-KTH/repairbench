diff --git a/tmp/31cd8fdc-e308-4b0c-9a63-36bd252cda6d_buggy.java b/tmp/eccfdbd6-46d4-4272-9c69-3fa50a153d27_fixed.java
index 6c0aa19..9944638 100644
--- a/tmp/31cd8fdc-e308-4b0c-9a63-36bd252cda6d_buggy.java
+++ b/tmp/eccfdbd6-46d4-4272-9c69-3fa50a153d27_fixed.java
@@ -1,20 +1,21 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
-        zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
+    this.zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+    this.in = new PushbackInputStream(inputStream, buf.capacity());
+    // enable support for STORED entries with a data descriptor
+    this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
+    // mark that no entry has been read yet
+    this.closedEntry = true;
 }
\ No newline at end of file
