diff --git a/tmp/1c3b8caa-85a2-47d5-9cd9-f3f7017eae87_buggy.java b/tmp/3a6c783e-40bd-4b19-a659-1a7ee12c7acd_fixed.java
index 5f1dcf2..67efee1 100644
--- a/tmp/1c3b8caa-85a2-47d5-9cd9-f3f7017eae87_buggy.java
+++ b/tmp/3a6c783e-40bd-4b19-a659-1a7ee12c7acd_fixed.java
@@ -1,41 +1,27 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
-
+    // one step of the multi‚Äêdirectional search
     incrementIterationsCounter();
 
-            // save the original vertex
+    // save the original simplex
     final RealPointValuePair[] original = simplex;
     final RealPointValuePair best = original[0];
 
-            // perform a reflection step
+    // reflection
     final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
     if (comparator.compare(reflected, best) < 0) {
-
-                // compute the expanded simplex
+        // expansion
         final RealPointValuePair[] reflectedSimplex = simplex;
         final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
         if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
+            // accept reflection
             simplex = reflectedSimplex;
         }
-
-                return;
-
+    } else {
+        // contraction (shrink)
+        evaluateNewSimplex(original, gamma, comparator);
     }
-
-            // compute the contracted simplex
-            final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
-                return;
-            }
-
-        }
-
 }
\ No newline at end of file
