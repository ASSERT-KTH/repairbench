diff --git a/tmp/353476d7-0237-48bc-9dc9-22ac13509149_buggy.java b/tmp/a1062ae4-dc03-4024-be6d-245749d571b9_fixed.java
index 5f1dcf2..da302e2 100644
--- a/tmp/353476d7-0237-48bc-9dc9-22ac13509149_buggy.java
+++ b/tmp/a1062ae4-dc03-4024-be6d-245749d571b9_fixed.java
@@ -1,41 +1,39 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
-            // save the original vertex
+        // save the original simplex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best     = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded           = evaluateNewSimplex(original, khi, comparator);
+            // accept the better of reflection and expansion
             if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
-
             return;
-
         }
 
-            // compute the contracted simplex
+        // perform a contraction step
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
             return;
         }
 
+        // no improvement: shrink the simplex
+        evaluateNewSimplex(original, sigma, comparator);
+        return;
     }
-
 }
\ No newline at end of file
