diff --git a/tmp/a8ffe656-52b6-44b1-827f-3f33d9a000c6_buggy.java b/tmp/ccc4fcc9-3163-4b62-84ad-e434883e2799_fixed.java
index 00914da..ff2da84 100644
--- a/tmp/a8ffe656-52b6-44b1-827f-3f33d9a000c6_buggy.java
+++ b/tmp/ccc4fcc9-3163-4b62-84ad-e434883e2799_fixed.java
@@ -1,17 +1,23 @@
 // does not recurse.
 private void normalise(Element element) {
+    // collect any non‚Äêblank text nodes under this element
     List<Node> toMove = new ArrayList<Node>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
-                    toMove.add(tn);
+            if (!tn.isBlank()) {
+                toMove.add(node);
             }
         }
-
+    }
+    // move them into the body at the front, preserving original order
+    Element body = body();
+    int insertPos = 0;
     for (Node node : toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+        // insert a space and then the text node at the current front position
+        body.insertChildren(insertPos, new TextNode(" ", ""));
+        body.insertChildren(insertPos + 1, node);
+        insertPos += 2;
     }
 }
\ No newline at end of file
