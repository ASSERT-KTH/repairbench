diff --git a/tmp/fb5d0dfa-5034-44a7-8e5a-4463468fb855_buggy.java b/tmp/064e4585-b1ed-4b94-96d5-0c66e65b2f33_fixed.java
index a7e6997..73a18f7 100644
--- a/tmp/fb5d0dfa-5034-44a7-8e5a-4463468fb855_buggy.java
+++ b/tmp/064e4585-b1ed-4b94-96d5-0c66e65b2f33_fixed.java
@@ -1,12 +1,23 @@
 /**
  * Tells if the token looks like a short option.
  * 
-     * @param token
+ * @param token the command‐line token
  */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+private boolean isShortOption(String token) {
+    // must start with a single "-" and have at least one character after it
+    if (token == null
+        || token.length() < 2
+        || !token.startsWith("-")
+        || token.startsWith("--")) {
+        return false;
+    }
+
+    // strip the leading "-" 
+    String withoutDash = token.substring(1);
+    // if there's an inline "=", split off the value
+    int eq = withoutDash.indexOf('=');
+    String name = (eq == -1 ? withoutDash : withoutDash.substring(0, eq));
 
-        // remove leading "-" and "=value"
+    // now see if this matches a (possibly multi‐char) short option
+    return options.hasShortOption(name);
 }
\ No newline at end of file
