diff --git a/tmp/849349c1-b57a-422e-a66a-7e9efa6a2dac_buggy.java b/tmp/2601e944-e238-48ca-9065-68f6b4a5cb83_fixed.java
index a7e6997..e00852d 100644
--- a/tmp/849349c1-b57a-422e-a66a-7e9efa6a2dac_buggy.java
+++ b/tmp/2601e944-e238-48ca-9065-68f6b4a5cb83_fixed.java
@@ -1,12 +1,21 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
-
-        // remove leading "-" and "=value"
+private boolean isShortOption(String token) {
+    // must start with single "-" and not be just "-" or a long option
+    if (!token.startsWith("-") || token.startsWith("--") || token.length() < 2) {
+        return false;
+    }
+    // strip leading "-" and any "=value" suffix
+    String withoutDash = token.substring(1);
+    int eqPos = withoutDash.indexOf('=');
+    String optName = (eqPos >= 0) ? withoutDash.substring(0, eqPos) : withoutDash;
+    // if there's a multi-character short option matching the whole name, accept it
+    if (options.hasShortOption(optName)) {
+        return true;
+    }
+    // otherwise fall back to single-character short options (clusters)
+    return options.hasShortOption(optName.substring(0, 1));
 }
\ No newline at end of file
