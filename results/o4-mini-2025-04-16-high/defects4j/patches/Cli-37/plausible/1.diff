diff --git a/tmp/fa78a1fc-af7e-488c-98a0-0b09719c1604_buggy.java b/tmp/0d4ebfec-57ae-412c-b5f0-4099836f7aee_fixed.java
index a7e6997..94cb6aa 100644
--- a/tmp/fa78a1fc-af7e-488c-98a0-0b09719c1604_buggy.java
+++ b/tmp/0d4ebfec-57ae-412c-b5f0-4099836f7aee_fixed.java
@@ -1,12 +1,20 @@
 /**
  * Tells if the token looks like a short option.
  * 
-     * @param token
+ * @param token the current command‐line token
  */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
-
-        // remove leading "-" and "=value"
+private boolean isShortOption(String token) {
+    if (!token.startsWith("-") || token.length() < 2) {
+        return false;
+    }
+    // strip the leading "-" and any "=value" suffix
+    String noDash = token.substring(1);
+    int eqPos = noDash.indexOf('=');
+    String opt = (eqPos > 0) ? noDash.substring(0, eqPos) : noDash;
+    // exact multi-character short option?
+    if (options.hasShortOption(opt)) {
+        return true;
+    }
+    // or a cluster of single-character short options?
+    return !opt.isEmpty() && options.hasShortOption(opt.substring(0, 1));
 }
\ No newline at end of file
