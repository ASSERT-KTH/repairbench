diff --git a/tmp/2ee7d9d7-40b2-46ca-8582-985c2579902d_buggy.java b/tmp/bce60ab5-d5de-4dec-90d3-6445aba4a68f_fixed.java
index 98dde53..91b312f 100644
--- a/tmp/2ee7d9d7-40b2-46ca-8582-985c2579902d_buggy.java
+++ b/tmp/bce60ab5-d5de-4dec-90d3-6445aba4a68f_fixed.java
@@ -1,34 +1,49 @@
 public void head(org.jsoup.nodes.Node source, int depth) {
-            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
+    // inherit namespace mappings from parent
+    namespacesStack.push(new HashMap<>(namespacesStack.peek()));
+
     if (source instanceof org.jsoup.nodes.Element) {
         org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
+        // figure out which prefix (if any) this element is using
         String prefix = updateNamespaces(sourceEl);
         String namespace = namespacesStack.peek().get(prefix);
         String tagName = sourceEl.tagName();
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
+        // if there's no declared namespace URI for this prefix,
+        // fall back to createElement so that undeclared prefixes
+        // are treated as part of the local name (no NAMESPACE_ERR)
+        org.w3c.dom.Element el;
+        if (namespace == null || namespace.isEmpty()) {
+            el = doc.createElement(tagName);
+        } else {
+            el = doc.createElementNS(namespace, tagName);
+        }
+
         copyAttributes(sourceEl, el);
-                if (dest == null) { // sets up the root
-                    doc.appendChild(el);
+        if (dest == null) {
+            doc.appendChild(el);  // root
         } else {
             dest.appendChild(el);
         }
         dest = el;  // descend
+
     } else if (source instanceof org.jsoup.nodes.TextNode) {
         org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
         Text text = doc.createTextNode(sourceText.getWholeText());
         dest.appendChild(text);
+
     } else if (source instanceof org.jsoup.nodes.Comment) {
         org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
         Comment comment = doc.createComment(sourceComment.getData());
         dest.appendChild(comment);
+
     } else if (source instanceof org.jsoup.nodes.DataNode) {
         org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
         Text node = doc.createTextNode(sourceData.getWholeData());
         dest.appendChild(node);
+
     } else {
-                // unhandled
+        // unhandled node types
     }
 }
\ No newline at end of file
