diff --git a/tmp/f3f020fe-e943-4b37-9fa7-a416581c54f9_buggy.java b/tmp/87fcf889-1880-4106-870d-2a08945b6416_fixed.java
index 98dde53..139e12f 100644
--- a/tmp/f3f020fe-e943-4b37-9fa7-a416581c54f9_buggy.java
+++ b/tmp/87fcf889-1880-4106-870d-2a08945b6416_fixed.java
@@ -1,34 +1,45 @@
 public void head(org.jsoup.nodes.Node source, int depth) {
-            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
+    // inherit namespace mappings
+    namespacesStack.push(new HashMap<>(namespacesStack.peek()));
     if (source instanceof org.jsoup.nodes.Element) {
         org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
         String prefix = updateNamespaces(sourceEl);
         String namespace = namespacesStack.peek().get(prefix);
         String tagName = sourceEl.tagName();
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
+        // Workaround: allow undeclared prefixes by disabling strict namespace‐checking
+        if (namespace == null && tagName.indexOf(':') > 0) {
+            try {
+                java.lang.reflect.Method m =
+                    doc.getClass().getMethod("setStrictErrorChecking", boolean.class);
+                m.invoke(doc, false);
+            } catch (Exception ignored) {
+                // best‐effort; if it fails, we'll still try createElementNS below
+            }
+        }
+
+        Element el = doc.createElementNS(namespace, tagName);
         copyAttributes(sourceEl, el);
-                if (dest == null) { // sets up the root
+        if (dest == null) {
             doc.appendChild(el);
         } else {
             dest.appendChild(el);
         }
         dest = el; // descend
     } else if (source instanceof org.jsoup.nodes.TextNode) {
         org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
         Text text = doc.createTextNode(sourceText.getWholeText());
         dest.appendChild(text);
     } else if (source instanceof org.jsoup.nodes.Comment) {
         org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
         Comment comment = doc.createComment(sourceComment.getData());
         dest.appendChild(comment);
     } else if (source instanceof org.jsoup.nodes.DataNode) {
         org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
         Text node = doc.createTextNode(sourceData.getWholeData());
         dest.appendChild(node);
     } else {
         // unhandled
     }
 }
\ No newline at end of file
