diff --git a/tmp/42aef798-1616-4797-b420-5f00f9745b4d_buggy.java b/tmp/65e1990b-b1d0-4cd9-bd5e-ebf4707a51a7_fixed.java
index 98dde53..3060375 100644
--- a/tmp/42aef798-1616-4797-b420-5f00f9745b4d_buggy.java
+++ b/tmp/65e1990b-b1d0-4cd9-bd5e-ebf4707a51a7_fixed.java
@@ -1,34 +1,51 @@
 public void head(org.jsoup.nodes.Node source, int depth) {
-            namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
+    // inherit namespace mappings from parent
+    namespacesStack.push(new HashMap<>(namespacesStack.peek()));
+
     if (source instanceof org.jsoup.nodes.Element) {
         org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
+        // Incorporate any xmlns declarations on this element
         String prefix = updateNamespaces(sourceEl);
         String namespace = namespacesStack.peek().get(prefix);
         String tagName = sourceEl.tagName();
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
+        org.w3c.dom.Element el;
+        // If the element has a coloned name but no declared namespace, 
+        // create it in no-namespace and then set its prefix manually.
+        if (namespace == null && tagName.contains(":")) {
+            int colonIndex = tagName.indexOf(':');
+            String undeclaredPrefix = tagName.substring(0, colonIndex);
+            String localName = tagName.substring(colonIndex + 1);
+            el = doc.createElementNS(null, localName);
+            el.setPrefix(undeclaredPrefix);
+        } else {
+            // Normal case: either namespace != null, or no colon in tagName
+            el = doc.createElementNS(namespace, tagName);
+        }
+
         copyAttributes(sourceEl, el);
-                if (dest == null) { // sets up the root
+
+        if (dest == null) {
+            // first real element becomes the document root
             doc.appendChild(el);
         } else {
             dest.appendChild(el);
         }
         dest = el; // descend
     } else if (source instanceof org.jsoup.nodes.TextNode) {
         org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
-                Text text = doc.createTextNode(sourceText.getWholeText());
+        org.w3c.dom.Text text = doc.createTextNode(sourceText.getWholeText());
         dest.appendChild(text);
     } else if (source instanceof org.jsoup.nodes.Comment) {
         org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
-                Comment comment = doc.createComment(sourceComment.getData());
+        org.w3c.dom.Comment comment = doc.createComment(sourceComment.getData());
         dest.appendChild(comment);
     } else if (source instanceof org.jsoup.nodes.DataNode) {
         org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
-                Text node = doc.createTextNode(sourceData.getWholeData());
-                dest.appendChild(node);
+        org.w3c.dom.Text dataNode = doc.createTextNode(sourceData.getWholeData());
+        dest.appendChild(dataNode);
     } else {
-                // unhandled
+        // unhandled node types are ignored
     }
 }
\ No newline at end of file
