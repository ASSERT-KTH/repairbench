diff --git a/tmp/5d7975c9-b07e-49a7-9005-3f313553d294_buggy.java b/tmp/c6d36f57-ee05-4fdb-a53f-f9041e2fe597_fixed.java
index c6cb157..c3d0025 100644
--- a/tmp/5d7975c9-b07e-49a7-9005-3f313553d294_buggy.java
+++ b/tmp/c6d36f57-ee05-4fdb-a53f-f9041e2fe597_fixed.java
@@ -1,14 +1,20 @@
 /**
  * Method called to expand size of the current segment, to
-     * accommodate for more contiguous content. Usually only
-     * used when parsing tokens like names if even then.
+ * accommodate for more contiguous content.
  */
-    public char[] expandCurrentSegment()
-    {
+public char[] expandCurrentSegment() {
     final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
     final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    final int newLen;
+    if (len <= MAX_SEGMENT_LEN) {
+        // Below or at threshold: grow by 50%, but cap at MAX_SEGMENT_LEN;
+        // if exactly at MAX_SEGMENT_LEN, allow minimal growth (+1)
+        newLen = (len == MAX_SEGMENT_LEN)
+            ? (MAX_SEGMENT_LEN + 1)
+            : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    } else {
+        // Above threshold: grow more slowly (25%)
+        newLen = len + (len >> 2);
+    }
     return (_currentSegment = Arrays.copyOf(curr, newLen));
 }
\ No newline at end of file
