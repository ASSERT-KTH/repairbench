diff --git a/tmp/f86d99d3-da74-49e3-b076-cdac546cbdec_buggy.java b/tmp/df8f66f1-adf8-40b4-86b0-0eacff5f83a8_fixed.java
index c6cb157..9ff24d9 100644
--- a/tmp/f86d99d3-da74-49e3-b076-cdac546cbdec_buggy.java
+++ b/tmp/df8f66f1-adf8-40b4-86b0-0eacff5f83a8_fixed.java
@@ -1,14 +1,21 @@
 /**
  * Method called to expand size of the current segment, to
  * accommodate for more contiguous content. Usually only
  * used when parsing tokens like names if even then.
  */
-    public char[] expandCurrentSegment()
-    {
+public char[] expandCurrentSegment() {
     final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
     final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
-        return (_currentSegment = Arrays.copyOf(curr, newLen));
+    final int newLen;
+    if (len < MAX_SEGMENT_LEN) {
+        // grow by 50%, but do not exceed MAX_SEGMENT_LEN
+        newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    } else {
+        // already at or above intended max: slow growth (25%)
+        newLen = len + (len >> 2);
+    }
+    // ensure we always grow by at least one
+    final int actualLen = (newLen <= len) ? (len + 1) : newLen;
+    _currentSegment = Arrays.copyOf(curr, actualLen);
+    return _currentSegment;
 }
\ No newline at end of file
