diff --git a/tmp/90337ffa-7840-46c7-8db9-11d9b8df99c0_buggy.java b/tmp/861fa380-e634-48a6-9dbd-93f6e5f5d7c0_fixed.java
index 46817a7..598ed48 100644
--- a/tmp/90337ffa-7840-46c7-8db9-11d9b8df99c0_buggy.java
+++ b/tmp/861fa380-e634-48a6-9dbd-93f6e5f5d7c0_fixed.java
@@ -1,16 +1,9 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
+  // If the other type isn't a record, defer to the normal union‚Äêbased logic.
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
+  // For two record types, the least supertype is simply their union.
+  return registry.createUnionType(this, that);
 }
\ No newline at end of file
