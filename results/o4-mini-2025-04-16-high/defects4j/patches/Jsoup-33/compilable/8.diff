diff --git a/tmp/06597b86-994b-40c1-854b-8a51b2e6724d_buggy.java b/tmp/1a6ac0ae-7f5d-4a54-8165-ddcea757acfd_fixed.java
index dc93be3..75b75cc 100644
--- a/tmp/06597b86-994b-40c1-854b-8a51b2e6724d_buggy.java
+++ b/tmp/1a6ac0ae-7f5d-4a54-8165-ddcea757acfd_fixed.java
@@ -1,14 +1,12 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
-            return el;
+        // treat any self‐closing (unknown) tag as an empty element – do not push or emit a fake end tag
+        return insertEmpty(startTag);
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
