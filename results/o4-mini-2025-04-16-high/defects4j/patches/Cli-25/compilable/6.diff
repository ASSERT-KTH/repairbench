diff --git a/tmp/f649ef51-9ade-49da-96ec-b74171e67a5e_buggy.java b/tmp/d45c690f-244d-46c8-9e6e-86560f1ea7fb_fixed.java
index 875b31b..9ef0cb9 100644
--- a/tmp/f649ef51-9ade-49da-96ec-b74171e67a5e_buggy.java
+++ b/tmp/d45c690f-244d-46c8-9e6e-86560f1ea7fb_fixed.java
@@ -1,54 +1,38 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
-                                             int nextLineTabStop, String text)
-    {
+                                         int nextLineTabStop, String text) {
+    // find the first wrap position
     int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
+    if (pos == -1) {
+        // no wrapping needed
         sb.append(rtrim(text));
-
         return sb;
     }
+
+    // render the first chunk
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
+    // guard against infinite loop if tab stop is beyond the line width
+    if (nextLineTabStop >= width) {
         nextLineTabStop = width - 1;
     }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
+    // strip off the chunk we've just rendered
+    text = text.substring(pos).trim();
 
+    // render any further chunks
+    while (true) {
+        // compute wrap position in the remaining text area
+        pos = findWrapPos(text, width - nextLineTabStop, 0);
+        if (pos == -1) {
+            // last chunk: no newline appended here (caller usually adds it)
+            sb.append(padding).append(text);
             return sb;
         }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        // render this chunk and continue
+        sb.append(padding)
+          .append(rtrim(text.substring(0, pos)))
+          .append(defaultNewLine);
+        text = text.substring(pos).trim();
     }
 }
\ No newline at end of file
