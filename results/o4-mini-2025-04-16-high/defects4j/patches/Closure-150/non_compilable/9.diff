diff --git a/tmp/4663b148-b681-42e2-817b-175d3a17d626_buggy.java b/tmp/a407c6eb-018c-4dda-9339-22453232f4ab_fixed.java
index 800e6e1..4906430 100644
--- a/tmp/4663b148-b681-42e2-817b-175d3a17d626_buggy.java
+++ b/tmp/a407c6eb-018c-4dda-9339-22453232f4ab_fixed.java
@@ -1,32 +1,35 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
+
+  // Handle namespace/prototype stub declarations like
+  //   /** @param {number} x */ goog.foo;
+  //   /** @return {number} */ this.foo;
+  if (n.getType() == Token.GETPROP
+      && parent.getType() == Token.EXPR_RESULT
+      && n.getJSDocInfo() != null) {
+    defineQualifiedName(n, parent);
+    return;
+  }
+
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file
