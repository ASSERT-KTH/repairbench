diff --git a/tmp/ed476ccd-ebb3-45ea-96ab-1ef2f3deb5eb_buggy.java b/tmp/54a6ea00-9bfe-426d-9854-24caf40397ea_fixed.java
index 800e6e1..3bd73fd 100644
--- a/tmp/ed476ccd-ebb3-45ea-96ab-1ef2f3deb5eb_buggy.java
+++ b/tmp/54a6ea00-9bfe-426d-9854-24caf40397ea_fixed.java
@@ -1,32 +1,37 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
+  // Parameter list of the root node → binds function parameters
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
+  // First give literals their built‐in types.
   attachLiteralTypes(n);
+
+  // Now pick up any declarations.
   switch (n.getType()) {
     case Token.FUNCTION:
+      // Skip the "function" node in a NAME → FUNCTION pair
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
+
     case Token.CATCH:
       defineCatch(n, parent);
       break;
+
     case Token.VAR:
       defineVar(n, parent);
       break;
+
+    // Handle stub declarations like "/** @param {number} x */ goog.foo;"
+    case Token.GETPROP:
+    case Token.GETELEM:
+      defineQualifiedName(n, parent);
+      break;
   }
 }
\ No newline at end of file
