diff --git a/tmp/abc77479-6a0a-42c4-8631-c50f76c637dd_buggy.java b/tmp/e06bb4ea-a26b-40f5-b114-d13c2d5640a1_fixed.java
index 800e6e1..e86fa11 100644
--- a/tmp/abc77479-6a0a-42c4-8631-c50f76c637dd_buggy.java
+++ b/tmp/e06bb4ea-a26b-40f5-b114-d13c2d5640a1_fixed.java
@@ -1,32 +1,46 @@
 /**
  * Visit a node in a local scope, and add any local variables or catch
  * parameters into the local symbol table.
  *
  * @param t The node traversal.
  * @param n The node being visited.
  * @param parent The parent of n
  */
-    @Override public void visit(NodeTraversal t, Node n, Node parent) {
-      if (n == scope.getRootNode()) return;
+@Override
+public void visit(NodeTraversal t, Node n, Node parent) {
+  if (n == scope.getRootNode()) {
+    return;
+  }
 
+  // Handle the function's parameter list specially.
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
+
   switch (n.getType()) {
     case Token.FUNCTION:
+      // Skip the NAME child of a named function expression
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
+
     case Token.CATCH:
       defineCatch(n, parent);
       break;
+
     case Token.VAR:
       defineVar(n, parent);
       break;
+
+    // Handle stub-style declarations on dotted names:
+    case Token.GETPROP:
+    case Token.GETELEM:
+      defineQualifiedName(n, parent);
+      break;
   }
 }
\ No newline at end of file
