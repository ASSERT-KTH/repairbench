diff --git a/tmp/a652c03e-c2e7-441d-a301-9d069bbd13bb_buggy.java b/tmp/7a8f8650-94a8-42bf-8f0c-46bad7a15bb1_fixed.java
index 3127f85..61644e3 100644
--- a/tmp/a652c03e-c2e7-441d-a301-9d069bbd13bb_buggy.java
+++ b/tmp/7a8f8650-94a8-42bf-8f0c-46bad7a15bb1_fixed.java
@@ -1,24 +1,33 @@
 /**
  * For this distribution, {@code X}, this method returns {@code P(X < x)}.
-     * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
-     * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
+ * If the underlying erf implementation fails to converge (including for
+ * infinite or extremely large {@code x}), values more than 20 standard
+ * deviations out are top‐coded to 0 or 1 to avoid propagating exceptions.
  *
  * @param x Value at which the CDF is evaluated.
  * @return CDF evaluated at {@code x}.
-     * @throws MathException if the algorithm fails to converge
+ * @throws MathException if the algorithm fails to converge for moderate {@code x}.
  */
 public double cumulativeProbability(double x) throws MathException {
     final double dev = x - mean;
     try {
-        return 0.5 * (1.0 + Erf.erf((dev) /
-                    (standardDeviation * FastMath.sqrt(2.0))));
+        return 0.5 * (1.0 +
+                      Erf.erf(dev / (standardDeviation * FastMath.sqrt(2.0))));
     } catch (MaxIterationsExceededException ex) {
-            if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
-                return 0;
-            } else if (x > (mean + 20 * standardDeviation)) {
-                return 1;
+        if (x < mean - 20 * standardDeviation) {
+            return 0.0;
+        } else if (x > mean + 20 * standardDeviation) {
+            return 1.0;
+        } else {
+            throw ex;
+        }
+    } catch (ConvergenceException ex) {
+        if (x < mean - 20 * standardDeviation) {
+            return 0.0;
+        } else if (x > mean + 20 * standardDeviation) {
+            return 1.0;
         } else {
             throw ex;
         }
     }
 }
\ No newline at end of file
