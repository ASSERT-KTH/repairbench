diff --git a/tmp/616d27a8-0391-4098-b143-68af525121c2_buggy.java b/tmp/b0d54ec5-a04e-41a0-a845-b7f114034a05_fixed.java
index 1c875ad..eca7bb3 100644
--- a/tmp/616d27a8-0391-4098-b143-68af525121c2_buggy.java
+++ b/tmp/b0d54ec5-a04e-41a0-a845-b7f114034a05_fixed.java
@@ -1,31 +1,23 @@
 public void captureArgumentsFrom(Invocation invocation) {
-        if (invocation.getMethod().isVarArgs()) {
-            int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
-
-        } else {
+    Object[] rawArguments = invocation.getRawArguments();
     for (int position = 0; position < matchers.size(); position++) {
         Matcher m = matchers.get(position);
-                if (m instanceof CapturesArguments) {
-                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
-                }
-            }
-        }
+        if (m instanceof CapturesArguments && rawArguments.length > position) {
+            // handle varargs parameter specially
+            if (invocation.getMethod().isVarArgs()
+                && position == rawArguments.length - 1
+                && isVarargMatcher(m)) {
 
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
+                Object varargArray = rawArguments[position];
+                int len = Array.getLength(varargArray);
+                for (int i = 0; i < len; i++) {
+                    ((CapturesArguments) m).captureFrom(Array.get(varargArray, i));
+                }
+                // once we've captured all vararg elements, we're done
+                return;
+            }
+            // normal (non‐vararg) capture
+            ((CapturesArguments) m).captureFrom(rawArguments[position]);
+        }
+    }
 }
\ No newline at end of file
