diff --git a/tmp/e94abdf4-5fd8-451c-b5bf-e6d74600c35c_buggy.java b/tmp/4634c115-c2b0-4409-a71e-a764be5271e9_fixed.java
index 1c875ad..a7af4b7 100644
--- a/tmp/e94abdf4-5fd8-451c-b5bf-e6d74600c35c_buggy.java
+++ b/tmp/4634c115-c2b0-4409-a71e-a764be5271e9_fixed.java
@@ -1,31 +1,33 @@
 public void captureArgumentsFrom(Invocation invocation) {
-        if (invocation.getMethod().isVarArgs()) {
-            int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+    Object[] rawArguments = invocation.getRawArguments();
+    boolean isVarArgs = invocation.getMethod().isVarArgs();
+    // index in rawArguments of the single varargs array element
+    int varargIndex = rawArguments.length - 1;
 
-        } else {
     for (int position = 0; position < matchers.size(); position++) {
         Matcher m = matchers.get(position);
-                if (m instanceof CapturesArguments) {
-                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
-                }
-            }
+        if (!(m instanceof CapturesArguments) || position >= rawArguments.length) {
+            continue;
         }
+        CapturesArguments captor = (CapturesArguments) m;
 
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
+        if (isVarArgs && position == varargIndex) {
+            // last matcher corresponds to the varargs array
+            Object varargArray = rawArguments[position];
+            if (varargArray != null && varargArray.getClass().isArray()) {
+                int len = Array.getLength(varargArray);
+                for (int i = 0; i < len; i++) {
+                    captor.captureFrom(Array.get(varargArray, i));
+                }
+            } else {
+                // vararg array was null or not actually an array
+                captor.captureFrom(varargArray);
+            }
+            // once we've handled the varargs array, no further capture makes sense
+            return;
+        } else {
+            // regular (non-varargs) argument
+            captor.captureFrom(rawArguments[position]);
+        }
+    }
 }
\ No newline at end of file
