diff --git a/tmp/21711eac-9e90-4c71-959b-cd70802288a1_buggy.java b/tmp/0c49eb7c-6b05-4b58-bf02-74d438284d96_fixed.java
index cbfa753..905357c 100644
--- a/tmp/21711eac-9e90-4c71-959b-cd70802288a1_buggy.java
+++ b/tmp/0c49eb7c-6b05-4b58-bf02-74d438284d96_fixed.java
@@ -1,15 +1,27 @@
 void insert(Token.Comment commentToken) {
     Comment comment = new Comment(commentToken.getData());
     Node insert = comment;
-        if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)
-            // so we do a bit of a hack and parse the data as an element to pull the attributes out
+    if (commentToken.bogus) { // xml declarations are emitted as bogus comments
         String data = comment.getData();
         if (data.length() > 1 && (data.startsWith("!") || data.startsWith("?"))) {
-                Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri, Parser.xmlParser());
-                    Element el = doc.child(0);
-                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith("!"));
-                    insert.attributes().addAll(el.attributes());
+            // strip the leading "!" or "?" and the trailing one, to build a fake element
+            String inner = data.substring(1, data.length() - 1);
+            try {
+                Document doc = Jsoup.parse("<" + inner + ">", baseUri, Parser.xmlParser());
+                // pull out the first real element if there is one
+                Element el = doc.children().first();
+                if (el != null) {
+                    XmlDeclaration decl = new XmlDeclaration(
+                        settings.normalizeTag(el.tagName()),
+                        data.startsWith("!")
+                    );
+                    decl.attributes().addAll(el.attributes());
+                    insert = decl;
+                }
+            } catch (Exception e) {
+                // if parsing fails, fall back to treating it as a normal comment
+            }
         }
     }
     insertNode(insert);
 }
\ No newline at end of file
