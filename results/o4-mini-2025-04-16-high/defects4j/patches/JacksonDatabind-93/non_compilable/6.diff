diff --git a/tmp/a698c96b-976f-48ba-a513-b2bd40f149dd_buggy.java b/tmp/06554ed2-4f46-4c6c-9b4d-1c90720ef144_fixed.java
index 2d9cf24..e427e35 100644
--- a/tmp/a698c96b-976f-48ba-a513-b2bd40f149dd_buggy.java
+++ b/tmp/06554ed2-4f46-4c6c-9b4d-1c90720ef144_fixed.java
@@ -1,33 +1,34 @@
+@Override
 public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
 {
     // There are certain nasty classes that could cause problems, mostly
     // via default typing -- catch them here.
     final Class<?> raw = type.getRawClass();
     String full = raw.getName();
 
     main_check:
     do {
-            if (_cfgIllegalClassNames.contains(full)) {
+        // first: explicit blacklist by full class name
+        if (_cfgIllegalClassNames != null && _cfgIllegalClassNames.contains(full)) {
             break;
         }
 
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
+        // next: special‚Äêcase some Spring types; only applies to concrete classes
+        if (!raw.isInterface() && full.startsWith(PREFIX_STRING)) {
+            for (Class<?> cls = raw; cls != null && cls != Object.class; cls = cls.getSuperclass()) {
                 String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                 if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                     || "AbstractApplicationContext".equals(name)) {
                     break main_check;
                 }
             }
         }
+
+        // otherwise OK
         return;
     } while (false);
 
+    // fell through => blocked
     throw JsonMappingException.from(ctxt,
         String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
 }
\ No newline at end of file
