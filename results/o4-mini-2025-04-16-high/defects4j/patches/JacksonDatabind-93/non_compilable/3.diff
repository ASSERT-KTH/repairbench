diff --git a/tmp/af5de9e0-65dd-420d-af89-1e1e2bf03abf_buggy.java b/tmp/aa3a97fd-98ce-46fb-9b55-ce4c4598ee65_fixed.java
index 2d9cf24..4c3c14d 100644
--- a/tmp/af5de9e0-65dd-420d-af89-1e1e2bf03abf_buggy.java
+++ b/tmp/aa3a97fd-98ce-46fb-9b55-ce4c4598ee65_fixed.java
@@ -1,33 +1,31 @@
-    public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
-    {
-        // There are certain nasty classes that could cause problems, mostly
-        // via default typing -- catch them here.
+@Override
+public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException {
     final Class<?> raw = type.getRawClass();
     String full = raw.getName();
 
     main_check:
     do {
+        // first, exact-name blacklist
         if (_cfgIllegalClassNames.contains(full)) {
             break;
         }
-
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
-            if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
+        // spring‚Äêframework special cases: only for real classes (not interfaces)
+        if (!raw.isInterface() && full.startsWith(PREFIX_STRING)) {
+            // walk up superclasses, guard against interfaces (getSuperclass() may return null)
+            for (Class<?> cls = raw; cls != null && cls != Object.class; cls = cls.getSuperclass()) {
                 String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                 if ("AbstractPointcutAdvisor".equals(name)
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                         || "AbstractApplicationContext".equals(name)) {
+                    // found one of the nasty Spring classes: reject
                     break main_check;
                 }
             }
         }
+        // if we get here, subtype is allowed
         return;
     } while (false);
 
+    // fall through to rejection
     throw JsonMappingException.from(ctxt,
         String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
 }
\ No newline at end of file
