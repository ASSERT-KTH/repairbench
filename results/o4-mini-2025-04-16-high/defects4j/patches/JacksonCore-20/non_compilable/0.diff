diff --git a/tmp/7718a937-c1ed-471f-a4fe-150cf692c687_buggy.java b/tmp/969f8bed-a588-4d93-8363-05fe4e8af78b_fixed.java
index a6f008f..011bdac 100644
--- a/tmp/7718a937-c1ed-471f-a4fe-150cf692c687_buggy.java
+++ b/tmp/969f8bed-a588-4d93-8363-05fe4e8af78b_fixed.java
@@ -1,11 +1,42 @@
     /**
      * Method that can be called on backends that support passing opaque datatypes of
      * non-JSON formats
      *
      * @since 2.8
      */
+    @Override
     public void writeEmbeddedObject(Object object) throws IOException {
-        // 01-Sep-2016, tatu: As per [core#318], handle small number of cases
-        throw new JsonGenerationException("No native support for writing embedded objects",
-                this);
+        if (object == null) {
+            writeNull();
+            return;
+        }
+        // handle raw binary
+        if (object instanceof byte[]) {
+            byte[] data = (byte[]) object;
+            writeBinary(_base64Variant, data, 0, data.length);
+            return;
+        }
+        if (object instanceof java.nio.ByteBuffer) {
+            java.nio.ByteBuffer bb = (java.nio.ByteBuffer) object;
+            int len = bb.remaining();
+            if (bb.hasArray()) {
+                writeBinary(_base64Variant,
+                            bb.array(),
+                            bb.arrayOffset() + bb.position(),
+                            len);
+            } else {
+                byte[] buf = new byte[len];
+                bb.duplicate().get(buf);
+                writeBinary(_base64Variant, buf, 0, len);
+            }
+            return;
+        }
+        // handle raw JSON value
+        if (object instanceof RawValue) {
+            writeRawValue(object.toString());
+            return;
+        }
+        // all other types not supported
+        throw new JsonGenerationException(
+            "No native support for writing embedded objects", this);
     }
\ No newline at end of file
