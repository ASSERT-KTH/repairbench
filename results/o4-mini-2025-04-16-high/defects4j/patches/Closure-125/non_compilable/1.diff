diff --git a/tmp/910542e0-8441-4e70-811b-6e9a7c397257_buggy.java b/tmp/1923e931-fa99-439a-9880-8e997b35571a_fixed.java
index 7e43c1c..5020391 100644
--- a/tmp/910542e0-8441-4e70-811b-6e9a7c397257_buggy.java
+++ b/tmp/1923e931-fa99-439a-9880-8e997b35571a_fixed.java
@@ -1,19 +1,52 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
-    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
+
+  // Handle the simple case of a single constructor.
   FunctionType fnType = type.toMaybeFunctionType();
   if (fnType != null) {
     visitParameterList(t, n, fnType);
     ensureTyped(t, n, fnType.getInstanceType());
+    return;
+  }
+
+  // Handle the case where we have a union of constructors.
+  UnionType unionType = type.toMaybeUnionType();
+  if (unionType != null) {
+    JSTypeRegistry registry = compiler.getTypeRegistry();
+    List<JSType> instanceTypes = Lists.newArrayList();
+    for (JSType alt : unionType.getAlternates()) {
+      JSType altRestricted = alt.restrictByNotNullOrUndefined();
+      FunctionType altFn = altRestricted.toMaybeFunctionType();
+      if (altFn != null) {
+        visitParameterList(t, n, altFn);
+        instanceTypes.add(altFn.getInstanceType());
+      } else if (altRestricted.isEmptyType() || altRestricted.isUnknownType()) {
+        // skip empty or unknown arms
+      } else {
+        // one of the union members isn't a constructor â†’ error
+        report(t, n, NOT_A_CONSTRUCTOR);
+        ensureTyped(t, n);
+        return;
+      }
+    }
+    if (!instanceTypes.isEmpty()) {
+      ensureTyped(t, n, registry.createUnionType(instanceTypes));
     } else {
+      // all arms were empty/unknown
       ensureTyped(t, n);
     }
+    return;
+  }
+
+  // If it's empty or unknown, propagate; otherwise it's not a constructor.
+  if (type.isEmptyType() || type.isUnknownType()) {
+    ensureTyped(t, n);
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
