diff --git a/tmp/55b875c9-0eed-4054-9737-ef493b13b21b_buggy.java b/tmp/ff49cddd-17d4-4b9e-a14c-7e8f6ed88826_fixed.java
index 7e43c1c..86a4c6f 100644
--- a/tmp/55b875c9-0eed-4054-9737-ef493b13b21b_buggy.java
+++ b/tmp/ff49cddd-17d4-4b9e-a14c-7e8f6ed88826_fixed.java
@@ -1,19 +1,29 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
-    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
+
+  // If it's really a constructor, check the args and give the new-expression its instance type.
+  if (type.isConstructor()) {
     FunctionType fnType = type.toMaybeFunctionType();
     if (fnType != null) {
       visitParameterList(t, n, fnType);
       ensureTyped(t, n, fnType.getInstanceType());
     } else {
+      // Shouldn't normally happen, but fall back to the no‚Äêarg path.
       ensureTyped(t, n);
     }
+
+  // If it's an empty type (e.g. unreachable branch) or totally unknown, propagate that
+  // rather than blowing up.
+  } else if (type.isEmptyType() || type.isUnknownType()) {
+    ensureTyped(t, n, type);
+
+  // Otherwise it's definitely not a constructor.
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
