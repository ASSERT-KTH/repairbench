diff --git a/tmp/a193060e-97b2-486d-ae36-0865c6c03402_buggy.java b/tmp/884c212e-8511-41b4-b8c0-809c9a5737fe_fixed.java
index 7e43c1c..9412ba6 100644
--- a/tmp/a193060e-97b2-486d-ae36-0865c6c03402_buggy.java
+++ b/tmp/884c212e-8511-41b4-b8c0-809c9a5737fe_fixed.java
@@ -1,19 +1,30 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
-    JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
+  // If the constructor has no attached type, just give the NEW an unknown type
+  // and skip further checking to avoid IllegalStateException.
+  JSType rawType = constructor.getJSType();
+  if (rawType == null) {
+    ensureTyped(t, n);
+    return;
+  }
+
+  // Exclude null or undefined from the constructor type.
+  JSType type = rawType.restrictByNotNullOrUndefined();
+
   if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
     FunctionType fnType = type.toMaybeFunctionType();
     if (fnType != null) {
       visitParameterList(t, n, fnType);
       ensureTyped(t, n, fnType.getInstanceType());
     } else {
+      // e.g., an unknown or bottom type with no function signature
       ensureTyped(t, n);
     }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
