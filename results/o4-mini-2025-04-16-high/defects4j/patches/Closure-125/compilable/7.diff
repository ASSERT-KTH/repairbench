diff --git a/tmp/44540fa9-5afd-44c5-8794-1778acd4f26c_buggy.java b/tmp/e883564c-2d92-43c0-a48d-db420c180015_fixed.java
index 7e43c1c..5053b5e 100644
--- a/tmp/44540fa9-5afd-44c5-8794-1778acd4f26c_buggy.java
+++ b/tmp/e883564c-2d92-43c0-a48d-db420c180015_fixed.java
@@ -1,19 +1,26 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
+
+  // If it's a real constructor, an empty type, or unknown, allow it.
   if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
     FunctionType fnType = type.toMaybeFunctionType();
     if (fnType != null) {
       visitParameterList(t, n, fnType);
+      // For a real constructor we know its instance type.
       ensureTyped(t, n, fnType.getInstanceType());
     } else {
-        ensureTyped(t, n);
+      // For empty or unknown we still have to assign a type to avoid an
+      // IllegalStateException in ensureTyped.
+      ensureTyped(t, n, type);
     }
   } else {
+    // Not a constructor at all: report and still assign the original type
+    // so that downstream checks don't blow up.
     report(t, n, NOT_A_CONSTRUCTOR);
-      ensureTyped(t, n);
+    ensureTyped(t, n, type);
   }
 }
\ No newline at end of file
