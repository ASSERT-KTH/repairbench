diff --git a/tmp/d1341ce1-582b-4ec5-b5bc-aabe42a86cff_buggy.java b/tmp/27fe9b5a-60b5-4368-889c-45061df043ae_fixed.java
index 08a41cf..9d3a553 100644
--- a/tmp/d1341ce1-582b-4ec5-b5bc-aabe42a86cff_buggy.java
+++ b/tmp/27fe9b5a-60b5-4368-889c-45061df043ae_fixed.java
@@ -1,12 +1,16 @@
 /**
  * Overloaded version of {@link #readValue(InputStream)}.
  */
 public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
     throws IOException, JsonProcessingException
 {
     if (_dataFormatReaders != null) {
-            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
+        return _detectBindAndReadValues(
+            _dataFormatReaders.findFormat(src, offset, length),
+            false
+        );
     }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
-                true));
+    // Use the offset/length-aware parser so we only consume the intended slice
+    JsonParser p = _parserFactory.createParser(src, offset, length);
+    return _bindAndReadValues(_considerFilter(p, true));
 }
\ No newline at end of file
