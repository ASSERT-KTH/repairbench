diff --git a/tmp/965b2736-5fec-4646-b0be-d633e2c27e40_buggy.java b/tmp/740ff6ab-81e8-4fba-b106-7f60291b2125_fixed.java
index 6e155da..7b3823d 100644
--- a/tmp/965b2736-5fec-4646-b0be-d633e2c27e40_buggy.java
+++ b/tmp/740ff6ab-81e8-4fba-b106-7f60291b2125_fixed.java
@@ -1,10 +1,52 @@
-  @Override public void skipValue() throws IOException {
+@Override
+public void skipValue() throws IOException {
+  // If we're at a property name, consume the name first.
   if (peek() == JsonToken.NAME) {
     nextName();
-      pathNames[stackSize - 2] = "null";
-    } else {
+  }
+  // If there's only one element on the stack, it's the root; just pop it.
+  if (stackSize == 1) {
     popStack();
-        pathNames[stackSize - 1] = "null";
+    return;
   }
-      pathIndices[stackSize - 1]++;
+  // Otherwise, do a depth‚Äêfirst skip of whatever value is next.
+  int depth = 0;
+  do {
+    JsonToken token = peek();
+    switch (token) {
+      case BEGIN_ARRAY:
+        beginArray();
+        depth++;
+        break;
+      case END_ARRAY:
+        endArray();
+        depth--;
+        break;
+      case BEGIN_OBJECT:
+        beginObject();
+        depth++;
+        break;
+      case END_OBJECT:
+        endObject();
+        depth--;
+        break;
+      case NAME:
+        nextName();
+        break;
+      case STRING:
+      case NUMBER:
+        nextString();
+        break;
+      case BOOLEAN:
+        nextBoolean();
+        break;
+      case NULL:
+        nextNull();
+        break;
+      case END_DOCUMENT:
+        return;
+      default:
+        throw new IllegalStateException("Unexpected token: " + token);
+    }
+  } while (depth != 0);
 }
\ No newline at end of file
