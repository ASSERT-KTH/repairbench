diff --git a/tmp/44715a81-a7ca-46e8-a79f-bce1778cc817_buggy.java b/tmp/14ae7a7a-676f-40e7-9207-43891c964b7f_fixed.java
index 7fb120e..f535dda 100644
--- a/tmp/44715a81-a7ca-46e8-a79f-bce1778cc817_buggy.java
+++ b/tmp/14ae7a7a-676f-40e7-9207-43891c964b7f_fixed.java
@@ -1,16 +1,24 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
-        if (m.find()) {
+    if (!m.find()) return null;
+
     String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+    // strip surrounding quotes, if any
+    if (charset.length() > 1) {
+        char first = charset.charAt(0);
+        char last = charset.charAt(charset.length() - 1);
+        if ((first == '"' && last == '"') || (first == '\'' && last == '\'')) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+    }
+    // verify that the JVM knows this charset
+    try {
+        if (!java.nio.charset.Charset.isSupported(charset)) {
+            return null;
+        }
+    } catch (IllegalCharsetNameException e) {
+        return null;
+    }
     return charset;
 }
\ No newline at end of file
-        return null;
-    }
