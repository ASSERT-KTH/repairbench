diff --git a/tmp/d9a81a43-0a10-4452-bf5e-4da374925a28_buggy.java b/tmp/a025a9b4-c131-464f-aaeb-067f832c4d3a_fixed.java
index 7fb120e..1ca96c2 100644
--- a/tmp/d9a81a43-0a10-4452-bf5e-4da374925a28_buggy.java
+++ b/tmp/a025a9b4-c131-464f-aaeb-067f832c4d3a_fixed.java
@@ -1,16 +1,23 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // strip surrounding quotes, if any
+        int len = charset.length();
+        if (len > 1) {
+            char c0 = charset.charAt(0), c1 = charset.charAt(len - 1);
+            if ((c0 == '"' && c1 == '"') || (c0 == '\'' && c1 == '\'')) {
+                charset = charset.substring(1, len - 1).trim();
+            }
+        }
+        try {
+            if (java.nio.charset.Charset.isSupported(charset)) {
                 return charset;
             }
+        } catch (IllegalArgumentException | java.nio.charset.IllegalCharsetNameException e) {
+            // invalid or unsupported charset name
+        }
+    }
     return null;
 }
\ No newline at end of file
