diff --git a/tmp/8ef5ff6f-d76c-4f7a-a351-fd9ae5008513_buggy.java b/tmp/0416e647-58d0-4a6b-88fc-2c965cff12e5_fixed.java
index 7fb120e..8636f1c 100644
--- a/tmp/8ef5ff6f-d76c-4f7a-a351-fd9ae5008513_buggy.java
+++ b/tmp/0416e647-58d0-4a6b-88fc-2c965cff12e5_fixed.java
@@ -1,16 +1,16 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
-            String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // grab the raw charset (no surrounding quotes), preserve its case
+        String charset = m.group(1).trim().replaceAll("[\"']", "");
+        try {
+            // validate that the JVM knows this charset
+            java.nio.charset.Charset.forName(charset);
             return charset;
+        } catch (Exception e) {
+            // unsupported or illegal charset name
+        }
     }
     return null;
 }
\ No newline at end of file
