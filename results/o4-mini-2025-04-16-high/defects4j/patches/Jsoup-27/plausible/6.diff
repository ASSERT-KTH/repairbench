diff --git a/tmp/a078f648-8f1a-4468-8f4b-b4cbcf9b7797_buggy.java b/tmp/f3542cb3-0b22-4409-8f42-1e83b9292f40_fixed.java
index 7fb120e..5cfb682 100644
--- a/tmp/a078f648-8f1a-4468-8f4b-b4cbcf9b7797_buggy.java
+++ b/tmp/f3542cb3-0b22-4409-8f42-1e83b9292f40_fixed.java
@@ -1,16 +1,23 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // strip surrounding quotes, if any
+        if (charset.length() > 1 &&
+            ((charset.startsWith("\"") && charset.endsWith("\"")) ||
+             (charset.startsWith("'") && charset.endsWith("'")))) {
+            charset = charset.substring(1, charset.length() - 1);
+        }
+        // ensure it's a supported charset
+        try {
+            if (!java.nio.charset.Charset.isSupported(charset)) {
+                return null;
+            }
+        } catch (java.nio.charset.IllegalCharsetNameException e) {
+            return null;
+        }
         return charset;
     }
     return null;
 }
\ No newline at end of file
