diff --git a/tmp/a9fce163-7e77-4405-895c-65d601d2b5e3_buggy.java b/tmp/1fdfa482-6b1b-47b5-85f8-da87e6224566_fixed.java
index 7fb120e..feff1a9 100644
--- a/tmp/a9fce163-7e77-4405-895c-65d601d2b5e3_buggy.java
+++ b/tmp/1fdfa482-6b1b-47b5-85f8-da87e6224566_fixed.java
@@ -1,16 +1,22 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
     Matcher m = charsetPattern.matcher(contentType);
     if (m.find()) {
         String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        // strip surrounding quotes if present
+        if (charset.length() > 1 &&
+            ((charset.startsWith("\"") && charset.endsWith("\"")) ||
+             (charset.startsWith("'") && charset.endsWith("'")))) {
+            charset = charset.substring(1, charset.length() - 1);
+        }
+        // validate against available charsets
+        try {
+            if (java.nio.charset.Charset.isSupported(charset)) {
                 return charset;
             }
+        } catch (IllegalArgumentException e) {
+            // malformed or unsupported charset
+        }
+    }
     return null;
 }
\ No newline at end of file
