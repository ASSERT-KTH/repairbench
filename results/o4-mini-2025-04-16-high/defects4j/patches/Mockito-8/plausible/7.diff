diff --git a/tmp/7bd637da-2644-4e7a-a3c6-aa1ba53fb0e5_buggy.java b/tmp/e4ff1869-2ce1-4baf-990f-e89e8f3336b2_fixed.java
index 42b58d0..16ea37d 100644
--- a/tmp/7bd637da-2644-4e7a-a3c6-aa1ba53fb0e5_buggy.java
+++ b/tmp/e4ff1869-2ce1-4baf-990f-e89e8f3336b2_fixed.java
@@ -1,19 +1,24 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        // don't map a type variable to itself (avoids infinite recursion on self‐referencing generics)
+        if (actualTypeArgument.equals(typeParameter)) {
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
-                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+            contextualActualTypeParameters.put(typeParameter,
+                                               boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
