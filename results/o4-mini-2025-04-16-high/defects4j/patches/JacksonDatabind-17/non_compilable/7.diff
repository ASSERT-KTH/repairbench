diff --git a/tmp/8dc67a07-9f1d-45e2-96c4-d223bf01ce06_buggy.java b/tmp/9df1d05d-252a-439a-9328-afada614f05e_fixed.java
index 01967cc..113fc40 100644
--- a/tmp/8dc67a07-9f1d-45e2-96c4-d223bf01ce06_buggy.java
+++ b/tmp/9df1d05d-252a-439a-9328-afada614f05e_fixed.java
@@ -1,35 +1,31 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
-        public boolean useForType(JavaType t)
-        {
+@Override
+public boolean useForType(JavaType t) {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
+        // unwrap arrays to test the element type
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // fall through
+        // fall through to OBJECT_AND_NON_CONCRETE
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
+        // do NOT apply to Jackson tree models
+        if (TreeNode.class.isAssignableFrom(t.getRawClass())) {
+            return false;
+        }
+        // apply only for Object base type or non-concrete types
         return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+               || !t.isConcrete();
 
     case NON_FINAL:
+        // unwrap arrays to test the element type
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
+        // do NOT apply to Jackson tree models
+        return !t.isFinal()
+               && !TreeNode.class.isAssignableFrom(t.getRawClass());
+
+    default: // case JAVA_LANG_OBJECT
         return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file
