diff --git a/tmp/c5a4e548-4e97-46de-a76a-59a40497049d_buggy.java b/tmp/6045bc2a-567f-4002-bb53-dfd67ac02dc3_fixed.java
index 01967cc..17d15fb 100644
--- a/tmp/c5a4e548-4e97-46de-a76a-59a40497049d_buggy.java
+++ b/tmp/6045bc2a-567f-4002-bb53-dfd67ac02dc3_fixed.java
@@ -1,35 +1,25 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
-        public boolean useForType(JavaType t)
-        {
+@Override
+public boolean useForType(JavaType t) {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // fall through
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
-
+        Class<?> raw = t.getRawClass();
+        // only apply typing if it's Object or a non‐concrete type
+        // but never if it's a JSON tree node
+        return (raw == Object.class)
+            || (!t.isConcrete() && !TreeNode.class.isAssignableFrom(raw));
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
+        // apply if non‐final, but not for JSON tree nodes
+        return !t.isFinal()
+            && !TreeNode.class.isAssignableFrom(t.getRawClass());
+    default: // JAVA_LANG_OBJECT
+        return t.getRawClass() == Object.class;
     }
 }
\ No newline at end of file
