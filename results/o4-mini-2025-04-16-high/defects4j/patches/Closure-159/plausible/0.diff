diff --git a/tmp/9b60864e-57cb-4823-9ac4-ef85800a888d_buggy.java b/tmp/d6e40fc3-546d-4a21-bcde-38cb61c7042c_fixed.java
index de9af32..a5146b9 100644
--- a/tmp/9b60864e-57cb-4823-9ac4-ef85800a888d_buggy.java
+++ b/tmp/d6e40fc3-546d-4a21-bcde-38cb61c7042c_fixed.java
@@ -1,18 +1,29 @@
 /**
  * @see #findCalledFunctions(Node)
  */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node target = node.getFirstChild();
+    // direct call: foo()
+    if (target.getType() == Token.NAME) {
+      changed.add(target.getString());
+    }
+    // .call() or .apply(): foo.call(this, ...)
+    else if (target.getType() == Token.GETPROP) {
+      Node method = target.getLastChild();
+      String mName = method.getString();
+      if ("call".equals(mName) || "apply".equals(mName)) {
+        Node obj = target.getFirstChild();
+        if (obj.getType() == Token.NAME) {
+          changed.add(obj.getString());
+        }
+      }
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
