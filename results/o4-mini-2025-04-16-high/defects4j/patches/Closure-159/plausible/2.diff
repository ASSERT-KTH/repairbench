diff --git a/tmp/3d39b5a0-8e86-431b-b0ee-87b6810482a0_buggy.java b/tmp/bc88f169-5c49-4802-9878-db1e33393939_fixed.java
index de9af32..c9cf89f 100644
--- a/tmp/3d39b5a0-8e86-431b-b0ee-87b6810482a0_buggy.java
+++ b/tmp/bc88f169-5c49-4802-9878-db1e33393939_fixed.java
@@ -1,18 +1,27 @@
 /**
  * @see #findCalledFunctions(Node)
  */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
     if (child.getType() == Token.NAME) {
+      // Direct call: foo(...)
       changed.add(child.getString());
+    } else if (child.getType() == Token.GETPROP) {
+      // Indirect call via .call or .apply: foo.call(this, ...)
+      Node base = child.getFirstChild();
+      Node prop = child.getLastChild();
+      String propName = prop.getString();
+      if ((propName.equals("call") || propName.equals("apply"))
+          && base.getType() == Token.NAME) {
+        changed.add(base.getString());
+      }
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
