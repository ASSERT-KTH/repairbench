diff --git a/tmp/729d2a4c-b2ee-44f7-8e91-529a8fda2531_buggy.java b/tmp/f6c7cef7-dacf-42e9-83b1-be14a07fcab0_fixed.java
index 1478ee1..e8c2271 100644
--- a/tmp/729d2a4c-b2ee-44f7-8e91-529a8fda2531_buggy.java
+++ b/tmp/f6c7cef7-dacf-42e9-83b1-be14a07fcab0_fixed.java
@@ -1,24 +1,24 @@
 /** Compute the cross-product of two vectors.
  * @param v1 first vector
  * @param v2 second vector
  * @return the cross product v1 ^ v2 as a new Vector
  */
 public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {
-
-
-      // rescale both vectors without losing precision,
-      // to ensure their norm are the same order of magnitude
-
-      // we reduce cancellation errors by preconditioning,
-      // we replace v1 by v3 = v1 - rho v2 with rho chosen in order to compute
-      // v3 without loss of precision. See Kahan lecture
-      // "Computing Cross-Products and Rotations in 2- and 3-Dimensional Euclidean Spaces"
-      // available at http://www.cs.berkeley.edu/~wkahan/MathH110/Cross.pdf
-
-      // compute rho as an 8 bits approximation of v1.v2 / v2.v2
-
-
-      // compute cross product from v3 and v2 instead of v1 and v2
-      return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);
-
+    // Kahan's robust cross‐product: precondition v1 by subtracting an 8‐bit
+    // approximation of its projection on v2 to reduce cancellation.
+    final double dot = v1.dotProduct(v2);
+    final double vv  = v2.dotProduct(v2);
+    // rho = rint((dot/vv) * 2^8) / 2^8  (0 if v2 is zero)
+    final double rho = (vv == 0.0) ? 0.0
+                                   : FastMath.scalb(FastMath.rint(FastMath.scalb(dot / vv, 8)), -8);
+    // v3 = v1 - rho * v2
+    final double x3 = v1.x - rho * v2.x;
+    final double y3 = v1.y - rho * v2.y;
+    final double z3 = v1.z - rho * v2.z;
+    // return v3 × v2  (equal to v1 × v2, but more stable)
+    return new Vector3D(
+        y3 * v2.z - z3 * v2.y,
+        z3 * v2.x - x3 * v2.z,
+        x3 * v2.y - y3 * v2.x
+    );
 }
\ No newline at end of file
