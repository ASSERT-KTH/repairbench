diff --git a/tmp/f4e2ed90-0ecf-4903-8e6b-211cc4d9a209_buggy.java b/tmp/dd25cb79-5fe9-4059-92cb-25f4449272c9_fixed.java
index 670114d..ad6a92f 100644
--- a/tmp/f4e2ed90-0ecf-4903-8e6b-211cc4d9a209_buggy.java
+++ b/tmp/dd25cb79-5fe9-4059-92cb-25f4449272c9_fixed.java
@@ -1,48 +1,57 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
+
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
+
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
-
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
+
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
+
+    // Also treat goog.inherits as a class‚Äêdefining call
+    boolean isClassDefining =
+        (ns != null && ns.onlyAffectsClassDef) ||
+        "goog.inherits".equals(nameNode.getQualifiedName());
+
+    if (isClassDefining) {
+      String key = (ns != null) ? ns.name : nameNode.getQualifiedName();
+      JsName name = getName(key, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
