diff --git a/tmp/fa53ec58-5fbd-408c-a7a6-10578e57e93d_buggy.java b/tmp/9db6c83c-59ca-4c82-a255-71d895c978b3_fixed.java
index 670114d..f0407f0 100644
--- a/tmp/fa53ec58-5fbd-408c-a7a6-10578e57e93d_buggy.java
+++ b/tmp/9db6c83c-59ca-4c82-a255-71d895c978b3_fixed.java
@@ -1,48 +1,64 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
-
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
-      // Record assignments and call sites
+  // Record assignments
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
-
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
-      } else if (n.isCall()) {
+    return;
+  }
+
+  // Record property‐reads (GETPROP)
+  if (n.isGetProp()) {
+    // e.g. reading ns.PageSelectionModel.FooEvent or .ChangeEvent
+    NameInformation ns = createNameInformation(t, n, parent);
+    if (ns != null) {
+      if (ns.isPrototype) {
+        recordPrototypeGet(ns.prototypeClass, ns.prototypeProperty, n);
+      } else {
+        recordGet(ns.name, n);
+      }
+    }
+    return;
+  }
+
+  // Record class‐defining function calls (e.g. goog.inherits)
+  if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
-          if (name != null) {
+      JsName fnName = getName(ns.name, false);
+      if (fnName != null) {
         refNodes.add(new ClassDefiningFunctionNode(
-              name, n, parent, parent.getParent()));
+            fnName, n, parent, parent.getParent()));
       }
     }
   }
 }
\ No newline at end of file
