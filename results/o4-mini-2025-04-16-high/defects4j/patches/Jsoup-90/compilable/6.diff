diff --git a/tmp/e660c07c-9b32-4e5f-a0ea-833f1e07894f_buggy.java b/tmp/2f5f00bf-b922-4b10-af19-94a0af6077a2_fixed.java
index 373b1e8..1b134d2 100644
--- a/tmp/e660c07c-9b32-4e5f-a0ea-833f1e07894f_buggy.java
+++ b/tmp/2f5f00bf-b922-4b10-af19-94a0af6077a2_fixed.java
@@ -1,37 +1,40 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
-            if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+    if (input.length >= 3
+        && (input[0] & 0xFF) == 0xEF
+        && (input[1] & 0xFF) == 0xBB
+        && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
-
-            int end;
-            for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+    int len = input.length;
+    for (; i < len; ++i) {
+        int o = input[i] & 0xFF;
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
-
-                // UTF-8 leading:
+        int end;
         if ((o & 0xE0) == 0xC0) {
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
             end = i + 3;
         } else {
             return false;
         }
-
-
+        // not enough bytes left
+        if (end >= len) {
+            return false;
+        }
+        // validate trailing bytes
         while (i < end) {
-                    i++;
-                    o = input[i];
+            ++i;
+            o = input[i] & 0xFF;
             if ((o & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
