diff --git a/tmp/9fc280f5-87d6-4c19-b32a-e6af65e10612_buggy.java b/tmp/b3fbd5f5-9e4b-4446-9fa3-fe8412e3ab97_fixed.java
index 373b1e8..f950bee 100644
--- a/tmp/9fc280f5-87d6-4c19-b32a-e6af65e10612_buggy.java
+++ b/tmp/b3fbd5f5-9e4b-4446-9fa3-fe8412e3ab97_fixed.java
@@ -1,37 +1,39 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
-            if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+    if (input.length >= 3
+        && (input[0] & 0xFF) == 0xEF
+        && (input[1] & 0xFF) == 0xBB
+        && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
-
-            int end;
-            for (int j = input.length; i < j; ++i) {
-                int o = input[i];
-                if ((o & 0x80) == 0) {
-                    continue; // ASCII
+    int len = input.length;
+    while (i < len) {
+        int b = input[i++] & 0xFF;
+        if ((b & 0x80) == 0) {
+            // ASCII
+            continue;
         }
-
-                // UTF-8 leading:
-                if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
-                } else if ((o & 0xF0) == 0xE0) {
-                    end = i + 2;
-                } else if ((o & 0xF8) == 0xF0) {
-                    end = i + 3;
+        int needed;
+        if ((b & 0xE0) == 0xC0) {
+            needed = 1;
+        } else if ((b & 0xF0) == 0xE0) {
+            needed = 2;
+        } else if ((b & 0xF8) == 0xF0) {
+            needed = 3;
         } else {
             return false;
         }
-
-
-                while (i < end) {
-                    i++;
-                    o = input[i];
-                    if ((o & 0xC0) != 0x80) {
+        // not enough bytes for a valid UTF-8 sequence
+        if (i + needed > len) {
+            return false;
+        }
+        // check continuation bytes
+        for (int j = 0; j < needed; j++) {
+            if ((input[i++] & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
