diff --git a/tmp/b8ef58cd-cbe2-4dee-99ef-df9579592e3c_buggy.java b/tmp/4e86359c-ec3b-4796-8679-98db8b5be4e2_fixed.java
index 373b1e8..df55b31 100644
--- a/tmp/b8ef58cd-cbe2-4dee-99ef-df9579592e3c_buggy.java
+++ b/tmp/4e86359c-ec3b-4796-8679-98db8b5be4e2_fixed.java
@@ -1,37 +1,43 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
-            if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+    if (input.length >= 3
+        && (input[0] & 0xFF) == 0xEF
+        && (input[1] & 0xFF) == 0xBB
+        && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
-            int end;
     for (int j = input.length; i < j; ++i) {
-                int o = input[i];
+        int o = input[i] & 0xFF;
         if ((o & 0x80) == 0) {
-                    continue; // ASCII
+            // ASCII
+            continue;
         }
 
-                // UTF-8 leading:
+        int end;
+        // determine expected number of trailing bytes
         if ((o & 0xE0) == 0xC0) {
             end = i + 1;
         } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
         } else if ((o & 0xF8) == 0xF0) {
             end = i + 3;
         } else {
             return false;
         }
 
-
+        // not enough bytes left
+        if (end >= j) {
+            return false;
+        }
+        // check continuation bytes
         while (i < end) {
             i++;
-                    o = input[i];
-                    if ((o & 0xC0) != 0x80) {
+            if ((input[i] & 0xC0) != 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
