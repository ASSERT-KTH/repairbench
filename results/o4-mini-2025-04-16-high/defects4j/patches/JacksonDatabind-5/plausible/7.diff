diff --git a/tmp/7ecd06e1-03a0-43f2-8cef-d2db3468252e_buggy.java b/tmp/6be84f52-4165-4e04-8a78-d5dcede92121_fixed.java
index b2db1d6..d52f402 100644
--- a/tmp/7ecd06e1-03a0-43f2-8cef-d2db3468252e_buggy.java
+++ b/tmp/6be84f52-4165-4e04-8a78-d5dcede92121_fixed.java
@@ -1,29 +1,28 @@
 protected void _addMethodMixIns(Class<?> targetClass, AnnotatedMethodMap methods,
         Class<?> mixInCls, AnnotatedMethodMap mixIns)
 {
+    // collect the mix‐in class plus its supertypes up to (but not including) the
+    // configured targetClass
     List<Class<?>> parents = new ArrayList<Class<?>>();
     parents.add(mixInCls);
     ClassUtil.findSuperTypes(mixInCls, targetClass, parents);
-        for (Class<?> mixin : parents) {
+
+    // To avoid a no-annotation supertype from wiping out a more specific
+    // mix‐in, process all supertypes first, then the mix‐in itself:
+    for (int i = parents.size() - 1; i >= 0; --i) {
+        Class<?> mixin = parents.get(i);
         for (Method m : mixin.getDeclaredMethods()) {
             if (!_isIncludableMemberMethod(m)) {
                 continue;
             }
             AnnotatedMethod am = methods.find(m);
-                /* Do we already have a method to augment (from sub-class
-                 * that will mask this mixIn)? If so, add if visible
-                 * without masking (no such annotation)
-                 */
             if (am != null) {
+                // existing ("real") method on target: merge in any mix‐in annotations
                 _addMixUnders(m, am);
-                    /* Otherwise will have precedence, but must wait
-                     * until we find the real method (mixIn methods are
-                     * just placeholder, can't be called)
-                     */
             } else {
-                    // Well, or, as per [Issue#515], multi-level merge within mixins...
+                // new method coming from a (possibly super) mix‐in: queue for addition
                 mixIns.add(_constructMethod(m));
             }
         }
     }
 }
\ No newline at end of file
