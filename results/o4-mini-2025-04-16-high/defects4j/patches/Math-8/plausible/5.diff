diff --git a/tmp/3e4fdb48-7a75-4d23-bd3a-0e9f267ec34e_buggy.java b/tmp/2a3b5f6a-0f7f-4d6f-9da5-2a31e4299cf5_fixed.java
index bfa2423..aab061c 100644
--- a/tmp/3e4fdb48-7a75-4d23-bd3a-0e9f267ec34e_buggy.java
+++ b/tmp/2a3b5f6a-0f7f-4d6f-9da5-2a31e4299cf5_fixed.java
@@ -1,23 +1,15 @@
-    /**
-     * Generate a random sample from the distribution.
-     *
-     * @param sampleSize the number of random values to generate.
-     * @return an array representing the random sample.
-     * @throws NotStrictlyPositiveException if {@code sampleSize} is not
-     * positive.
-     */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                                                sampleSize);
     }
-
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
-
-        for (int i = 0; i < sampleSize; i++) {
+    // draw the first sample to discover the correct component type
+    T first = sample();
+    @SuppressWarnings("unchecked")
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(first.getClass(), sampleSize);
+    out[0] = first;
+    for (int i = 1; i < sampleSize; i++) {
         out[i] = sample();
     }
-
     return out;
-
 }
\ No newline at end of file
