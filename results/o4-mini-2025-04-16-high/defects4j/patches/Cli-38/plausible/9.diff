diff --git a/tmp/1b10f478-8433-423a-88ed-071bf03137b7_buggy.java b/tmp/4274c286-0134-4301-bb35-6ef5af77cab4_fixed.java
index 81a6e8b..bf6c9b2 100644
--- a/tmp/1b10f478-8433-423a-88ed-071bf03137b7_buggy.java
+++ b/tmp/4274c286-0134-4301-bb35-6ef5af77cab4_fixed.java
@@ -1,19 +1,33 @@
 /**
  * Tells if the token looks like a short option.
  * 
-     * @param token
+ * @param token the token to check
  */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+private boolean isShortOption(String token) {
+    // must start with "-" and not be just "-"
+    if (!token.startsWith("-") || token.length() == 1) {
         return false;
     }
 
-        // remove leading "-" and "=value"
+    // strip off any "=value"
     int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    String optName = (pos == -1) ? token.substring(1) : token.substring(1, pos);
+
+    // direct match (e.g. "-t1" or "-S")
+    if (options.hasShortOption(optName)) {
+        return true;
+    }
+
+    // check for concatenated single-character options ("-ab")
+    if (pos == -1 && optName.length() > 1) {
+        for (char c : optName.toCharArray()) {
+            if (!options.hasShortOption(String.valueOf(c))) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    // otherwise not a short option
+    return false;
 }
\ No newline at end of file
