diff --git a/tmp/e1397762-c10d-4c16-9e95-91c27e44219e_buggy.java b/tmp/3b1214cc-f50a-4cdb-993a-e667c9cad3ff_fixed.java
index 81a6e8b..021e47d 100644
--- a/tmp/e1397762-c10d-4c16-9e95-91c27e44219e_buggy.java
+++ b/tmp/3b1214cc-f50a-4cdb-993a-e667c9cad3ff_fixed.java
@@ -1,19 +1,31 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+private boolean isShortOption(String token) {
+    // must start with "-" and have something after it
+    if (!token.startsWith("-") || token.length() == 1) {
         return false;
     }
-
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    // strip off any "=value"
+    int eq = token.indexOf("=");
+    String optName = (eq == -1)
+        ? token.substring(1)
+        : token.substring(1, eq);
+    // direct match (single or multi-char short option)
+    if (options.hasShortOption(optName)) {
+        return true;
+    }
+    // check for concatenated single-character options (e.g. "-ab")
+    if (eq == -1) {
+        for (int i = 0; i < optName.length(); i++) {
+            String s = String.valueOf(optName.charAt(i));
+            if (!options.hasShortOption(s)) {
+                return false;
+            }
+        }
+        return true;
+    }
+    return false;
 }
\ No newline at end of file
