diff --git a/tmp/7ed22c95-4836-4398-aa12-cedddc73a001_buggy.java b/tmp/72bbe684-6c5b-44ad-b453-b86eee24d2b5_fixed.java
index 81a6e8b..25d2cad 100644
--- a/tmp/7ed22c95-4836-4398-aa12-cedddc73a001_buggy.java
+++ b/tmp/72bbe684-6c5b-44ad-b453-b86eee24d2b5_fixed.java
@@ -1,19 +1,30 @@
 /**
  * Tells if the token looks like a short option.
  * 
  * @param token
  */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+private boolean isShortOption(String token) {
+    // must start with "-" and be longer than 1 char
+    if (!token.startsWith("-") || token.length() == 1) {
         return false;
     }
-
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+    // strip off any "=value"
+    int eq = token.indexOf("=");
+    String name = (eq == -1)
+        ? token.substring(1)
+        : token.substring(1, eq);
+    // exact match: e.g. "-t1"
+    if (options.hasShortOption(name)) {
+        return true;
+    }
+    // clustered options: e.g. "-ab" => "-a" and "-b"
+    if (eq == -1 && name.length() > 1) {
+        for (char c : name.toCharArray()) {
+            if (!options.hasShortOption(String.valueOf(c))) {
+                return false;
+            }
+        }
+        return true;
+    }
+    return false;
 }
\ No newline at end of file
