diff --git a/tmp/cc9e438a-270c-444f-8897-3db068a4d54f_buggy.java b/tmp/d662edda-13b7-4692-8066-c4c91527b940_fixed.java
index d357c7e..2016509 100644
--- a/tmp/cc9e438a-270c-444f-8897-3db068a4d54f_buggy.java
+++ b/tmp/d662edda-13b7-4692-8066-c4c91527b940_fixed.java
@@ -1,16 +1,14 @@
 private InputStream getCurrentStream() throws IOException {
+    // If there are no deferred streams, this must be a zero-length entry:
+    // return an empty stream so reads immediately return EOF (â€“1).
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        return new java.io.ByteArrayInputStream(new byte[0]);
     }
-        
+    // In solid mode skip and close all but the last stream
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
