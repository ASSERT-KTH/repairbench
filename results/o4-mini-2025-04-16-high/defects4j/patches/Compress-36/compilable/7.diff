diff --git a/tmp/68312d65-9875-45cc-82f8-6af5d3ad8a20_buggy.java b/tmp/4e46e94b-95d8-4376-93f3-05c0bed3f694_fixed.java
index d357c7e..3ab91aa 100644
--- a/tmp/68312d65-9875-45cc-82f8-6af5d3ad8a20_buggy.java
+++ b/tmp/4e46e94b-95d8-4376-93f3-05c0bed3f694_fixed.java
@@ -1,16 +1,15 @@
 private InputStream getCurrentStream() throws IOException {
+    // If there are no deferred streams it may be because
+    // we're on a zero‐length entry — return an empty stream.
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        return new java.io.ByteArrayInputStream(new byte[0]);
     }
-        
+    // In solid mode we may have multiple streams for the same folder:
+    // skip & close all but the first.
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
-            final InputStream stream = deferredBlockStreams.remove(0);
+        InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
