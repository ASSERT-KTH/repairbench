diff --git a/tmp/580b8dd2-627b-4177-9901-44d9e472d056_buggy.java b/tmp/28675439-d6f5-493f-9837-91a36100d1a5_fixed.java
index d357c7e..e8170cb 100644
--- a/tmp/580b8dd2-627b-4177-9901-44d9e472d056_buggy.java
+++ b/tmp/28675439-d6f5-493f-9837-91a36100d1a5_fixed.java
@@ -1,16 +1,16 @@
 private InputStream getCurrentStream() throws IOException {
+    // If there are no data‐blocks for the current entry, it's a zero‐length
+    // entry: return an empty stream rather than fail.
     if (deferredBlockStreams.isEmpty()) {
-            throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
+        return new ByteArrayInputStream(new byte[0]);
     }
-        
+    // In solid mode we may have built up multiple folder streams; skip
+    // and close all but the last so the one we return is positioned
+    // at the start of the desired entry.
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
-            final InputStream stream = deferredBlockStreams.remove(0);
+        InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
