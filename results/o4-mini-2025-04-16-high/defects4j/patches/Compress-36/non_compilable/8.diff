diff --git a/tmp/7c031847-8c61-4aa1-bcc5-9b932fa06adf_buggy.java b/tmp/e97c5048-0904-48e7-acdb-ef25c9d744c9_fixed.java
index d357c7e..225c470 100644
--- a/tmp/7c031847-8c61-4aa1-bcc5-9b932fa06adf_buggy.java
+++ b/tmp/e97c5048-0904-48e7-acdb-ef25c9d744c9_fixed.java
@@ -1,16 +1,16 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
+        // For zero‐length entries we should return an empty stream, not throw.
+        if (currentEntry != null && currentEntry.getSize() == 0) {
+            return new java.io.ByteArrayInputStream(new byte[0]);
+        }
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
-        
+    // Skip and close all but the last deferred block stream
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
