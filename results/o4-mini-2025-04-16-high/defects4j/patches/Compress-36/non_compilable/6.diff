diff --git a/tmp/c44a5792-f26d-4dbe-b6a7-79f550a9da50_buggy.java b/tmp/ae5381bc-630d-4e90-8243-9f3be7dd52a3_fixed.java
index d357c7e..8c5cf37 100644
--- a/tmp/c44a5792-f26d-4dbe-b6a7-79f550a9da50_buggy.java
+++ b/tmp/ae5381bc-630d-4e90-8243-9f3be7dd52a3_fixed.java
@@ -1,16 +1,17 @@
 private InputStream getCurrentStream() throws IOException {
+    // If there are no deferred streams, it may be an empty entry.
     if (deferredBlockStreams.isEmpty()) {
+        // special‐case zero‐length entries: return an empty stream rather than error
+        if (currentEntry != null && currentEntry.getSize() == 0) {
+            return new ByteArrayInputStream(new byte[0]);
+        }
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
-        
+    // In solid mode we skip/close all but the last folder stream
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
