diff --git a/tmp/ca6c788a-5a01-46de-9fba-20bbf838f8d3_buggy.java b/tmp/e0d4d22f-c722-4c2a-ad5a-f7d1d1ed79de_fixed.java
index d357c7e..2db09c8 100644
--- a/tmp/ca6c788a-5a01-46de-9fba-20bbf838f8d3_buggy.java
+++ b/tmp/e0d4d22f-c722-4c2a-ad5a-f7d1d1ed79de_fixed.java
@@ -1,16 +1,17 @@
 private InputStream getCurrentStream() throws IOException {
-        if (deferredBlockStreams.isEmpty()) {
+    // if no entry has been started, still error out
+    if (currentEntry == null) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
-        
+    // for zero‐length entries there will be no deferred streams – just return an EOF stream
+    if (deferredBlockStreams.isEmpty()) {
+        return new java.io.ByteArrayInputStream(new byte[0]);
+    }
+    // in solid mode skip all but the last folder stream
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
-
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
