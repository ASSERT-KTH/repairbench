diff --git a/tmp/08358a71-5a36-4ef0-83ac-369852862567_buggy.java b/tmp/19832208-3526-4c56-80a0-dfe23426d483_fixed.java
index 6fecc90..21566e1 100644
--- a/tmp/08358a71-5a36-4ef0-83ac-369852862567_buggy.java
+++ b/tmp/19832208-3526-4c56-80a0-dfe23426d483_fixed.java
@@ -1,7 +1,32 @@
 static boolean mayBeString(Node n, boolean recurse) {
-    if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
-    } else {
+  // If we're not recursing into control‚Äêflow nodes, just do the simple check.
+  if (!recurse) {
+    return mayBeStringHelper(n);
+  }
+
+  // Otherwise, walk any branches that can return different values
+  switch (n.getType()) {
+    // conditional expression: cond ? thenExpr : elseExpr
+    case Token.HOOK: {
+      Node thenExpr = n.getFirstChild().getNext();
+      Node elseExpr = thenExpr.getNext();
+      return mayBeString(thenExpr, true) || mayBeString(elseExpr, true);
+    }
+
+    // logical AND/OR can return either side
+    case Token.AND:
+    case Token.OR: {
+      Node left = n.getFirstChild();
+      Node right = left.getNext();
+      return mayBeString(left, true) || mayBeString(right, true);
+    }
+
+    // comma operator returns its last child
+    case Token.COMMA:
+      return mayBeString(n.getLastChild(), true);
+
+    // anything else: fall back to the helper
+    default:
       return mayBeStringHelper(n);
   }
 }
\ No newline at end of file
