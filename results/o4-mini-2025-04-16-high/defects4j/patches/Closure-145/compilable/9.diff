diff --git a/tmp/fa06ab35-4188-4c40-933b-cbcc1ce65839_buggy.java b/tmp/5869101e-503c-4a1e-b9b8-d84f07be7f2d_fixed.java
index 57f69c5..c2f514b 100644
--- a/tmp/fa06ab35-4188-4c40-933b-cbcc1ce65839_buggy.java
+++ b/tmp/5869101e-503c-4a1e-b9b8-d84f07be7f2d_fixed.java
@@ -1,12 +1,28 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * labels and extraneous single‐statement blocks).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+  Node node = n;
+  // Unwrap any labels
+  while (node.getType() == Token.LABEL) {
+    Node stmt = node.getFirstChild();
+    if (stmt == null) {
+      // weird empty label
+      return false;
+    }
+    node = stmt;
+  }
+  // Unwrap single‐statement blocks, but bail on empty or multi‐statement blocks
+  while (node.getType() == Token.BLOCK) {
+    Node first = node.getFirstChild();
+    if (first == null || first.getNext() != null) {
+      // either empty or more than one child → not "exactly" a function or do
+      return false;
+    }
+    node = first;
+  }
+  // Finally check for FUNCTION or DO
+  return node.getType() == Token.FUNCTION
+      || node.getType() == Token.DO;
 }
\ No newline at end of file
