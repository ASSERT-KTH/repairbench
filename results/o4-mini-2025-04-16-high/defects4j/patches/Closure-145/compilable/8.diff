diff --git a/tmp/e594d561-b056-40f2-8801-79f198e12ed8_buggy.java b/tmp/989a7df0-f68a-4a9e-b102-9b630891cd3e_fixed.java
index 57f69c5..fc874cc 100644
--- a/tmp/e594d561-b056-40f2-8801-79f198e12ed8_buggy.java
+++ b/tmp/989a7df0-f68a-4a9e-b102-9b630891cd3e_fixed.java
@@ -1,12 +1,25 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
  * labels).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    Node current = n;
+    // Peel off any labels or single‐statement blocks
+    while (true) {
+        int type = current.getType();
+        if (type == Token.LABEL) {
+            current = current.getFirstChild();
+        } else if (type == Token.BLOCK) {
+            if (current.hasOneChild()) {
+                current = current.getFirstChild();
+            } else {
+                // Empty block or block with >1 children cannot be a single DO/FUNCTION
+                return false;
+            }
+        } else {
+            break;
+        }
+    }
+    int finalType = current.getType();
+    return finalType == Token.FUNCTION || finalType == Token.DO;
 }
\ No newline at end of file
