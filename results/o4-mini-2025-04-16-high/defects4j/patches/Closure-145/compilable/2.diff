diff --git a/tmp/85fb83d7-623c-4211-9937-f57c00bb7431_buggy.java b/tmp/efe9d2df-9c59-472b-bb19-2d931259ea7d_fixed.java
index 57f69c5..7fd7c6d 100644
--- a/tmp/85fb83d7-623c-4211-9937-f57c00bb7431_buggy.java
+++ b/tmp/efe9d2df-9c59-472b-bb19-2d931259ea7d_fixed.java
@@ -1,12 +1,33 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * labels or a single-block wrapper).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+  int type = n.getType();
+  // direct FUNCTION or DO
+  if (type == Token.FUNCTION || type == Token.DO) {
+    return true;
+  }
+  // labeled FUNCTION or DO, or label->{ single FUNCTION or DO }
+  if (type == Token.LABEL) {
+    Node child = n.getFirstChild();
+    if (child != null) {
+      int ctype = child.getType();
+      // label->FUNCTION or label->DO
+      if (ctype == Token.FUNCTION || ctype == Token.DO) {
+        return true;
+      }
+      // label->BLOCK->{ FUNCTION or DO }
+      if (ctype == Token.BLOCK && child.getChildCount() == 1) {
+        Node grand = child.getFirstChild();
+        if (grand != null) {
+          int gtype = grand.getType();
+          if (gtype == Token.FUNCTION || gtype == Token.DO) {
+            return true;
+          }
+        }
+      }
+    }
+  }
+  return false;
 }
\ No newline at end of file
