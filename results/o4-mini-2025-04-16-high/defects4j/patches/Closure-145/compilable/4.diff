diff --git a/tmp/446e2f5e-33dd-460f-9297-dab5eec81ef8_buggy.java b/tmp/f95721b8-ef46-4432-822a-7873c40d1b18_fixed.java
index 57f69c5..2ba9bca 100644
--- a/tmp/446e2f5e-33dd-460f-9297-dab5eec81ef8_buggy.java
+++ b/tmp/f95721b8-ef46-4432-822a-7873c40d1b18_fixed.java
@@ -1,12 +1,21 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * labels and with any single‚Äêchild BLOCK wrappers).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    Node current = n;
+    // Skip any LABEL nodes.
+    while (current.getType() == Token.LABEL) {
+        Node child = current.getFirstChild();
+        if (child == null) {
+            return false;
+        }
+        current = child;
+    }
+    // Skip any BLOCK nodes that have exactly one child.
+    while (current.getType() == Token.BLOCK && current.hasOneChild()) {
+        current = current.getFirstChild();
+    }
+    int t = current.getType();
+    return t == Token.FUNCTION || t == Token.DO;
 }
\ No newline at end of file
