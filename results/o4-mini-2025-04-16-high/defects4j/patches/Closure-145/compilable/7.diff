diff --git a/tmp/d4055d05-e6b2-4579-9c25-38287bcbe69d_buggy.java b/tmp/9540b79e-e544-4aa0-a2f7-281b4aa3c2e0_fixed.java
index 57f69c5..51765e6 100644
--- a/tmp/d4055d05-e6b2-4579-9c25-38287bcbe69d_buggy.java
+++ b/tmp/9540b79e-e544-4aa0-a2f7-281b4aa3c2e0_fixed.java
@@ -1,12 +1,30 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
-   * labels).
+ * labels or single‚Äêstatement blocks).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // unwrap any single-child BLOCKs or LABELs, then test for FUNCTION or DO
+    while (true) {
+        int type = n.getType();
+        if (type == Token.FUNCTION || type == Token.DO) {
+            return true;
+        } else if (type == Token.LABEL) {
+            // a LABEL with exactly one child
+            Node child = n.getFirstChild();
+            if (child == null) {
+                return false;
+            }
+            n = child;
+        } else if (type == Token.BLOCK) {
+            // only skip a BLOCK if it has exactly one statement
+            Node child = n.getFirstChild();
+            if (child != null && child.getNext() == null) {
+                n = child;
+            } else {
+                return false;
+            }
+        } else {
+            return false;
+        }
+    }
 }
\ No newline at end of file
