diff --git a/tmp/6b0ae156-3974-405a-b768-e791cbbc1828_buggy.java b/tmp/0e58495e-e881-4391-8c9a-a7261d36b351_fixed.java
index 66bb99f..39f7411 100644
--- a/tmp/6b0ae156-3974-405a-b768-e791cbbc1828_buggy.java
+++ b/tmp/0e58495e-e881-4391-8c9a-a7261d36b351_fixed.java
@@ -1,14 +1,19 @@
 @Override
 public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
 {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
-                p.nextToken();
-                return deserializeObject(p, ctxt, ctxt.getNodeFactory());
+    JsonNodeFactory f = ctxt.getNodeFactory();
+    JsonToken t = p.getCurrentToken();
+    // If we're at the START_OBJECT, advance into first token (FIELD_NAME or END_OBJECT)
+    if (t == JsonToken.START_OBJECT) {
+        t = p.nextToken();
     }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
-                return deserializeObject(p, ctxt, ctxt.getNodeFactory());
+    // Empty object: immediately return an empty ObjectNode
+    if (t == JsonToken.END_OBJECT) {
+        return f.objectNode();
+    }
+    // Non‐empty object: delegate to the field‐based deserializer
+    if (t == JsonToken.FIELD_NAME) {
+        return deserializeObject(p, ctxt, f);
     }
     throw ctxt.mappingException(ObjectNode.class);
 }
\ No newline at end of file
