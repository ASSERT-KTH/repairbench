diff --git a/tmp/85d89f3f-c47c-4b6a-8164-8664c5416197_buggy.java b/tmp/467fe567-c24a-4cdc-830c-3ad1f5668cbd_fixed.java
index 6e238e7..0bd5469 100644
--- a/tmp/85d89f3f-c47c-4b6a-8164-8664c5416197_buggy.java
+++ b/tmp/467fe567-c24a-4cdc-830c-3ad1f5668cbd_fixed.java
@@ -1,15 +1,23 @@
 /**
  * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
  *
  * @param p1 the first point
  * @param p2 the second point
  * @return the L<sub>2</sub> distance between the two points
+ * @throws NullPointerException if either array is null
+ * @throws IllegalArgumentException if the arrays have different lengths
  */
 public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+    if (p1 == null || p2 == null) {
+        throw new NullPointerException("Point arrays must not be null");
+    }
+    if (p1.length != p2.length) {
+        throw new IllegalArgumentException("Point arrays must have the same length");
+    }
+    long sum = 0L;
     for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
+        long dp = (long) p1[i] - p2[i];
         sum += dp * dp;
     }
-      return Math.sqrt(sum);
+    return Math.sqrt((double) sum);
 }
\ No newline at end of file
