diff --git a/tmp/19dc7244-7f7e-4b5b-b38b-fc675c20152d_buggy.java b/tmp/bdc49db3-16b3-43f5-9c07-de68b072ccbf_fixed.java
index 6e238e7..4177369 100644
--- a/tmp/19dc7244-7f7e-4b5b-b38b-fc675c20152d_buggy.java
+++ b/tmp/bdc49db3-16b3-43f5-9c07-de68b072ccbf_fixed.java
@@ -1,15 +1,16 @@
-    /**
-     * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
-     *
-     * @param p1 the first point
-     * @param p2 the second point
-     * @return the L<sub>2</sub> distance between the two points
-     */
 public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
+    if (p1 == null || p2 == null) {
+        throw new IllegalArgumentException("Point arrays must not be null.");
+    }
+    if (p1.length != p2.length) {
+        throw new IllegalArgumentException(
+            "Point arrays must have the same length: got " + p1.length +
+            " and " + p2.length);
+    }
+    double sum = 0.0;
     for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
-          sum += dp * dp;
+        double delta = (double) p1[i] - p2[i];
+        sum += delta * delta;
     }
     return Math.sqrt(sum);
 }
\ No newline at end of file
