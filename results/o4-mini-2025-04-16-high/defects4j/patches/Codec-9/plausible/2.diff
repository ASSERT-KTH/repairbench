diff --git a/tmp/f0dc2d03-970b-4a82-a189-645e6fe10779_buggy.java b/tmp/4050f11f-fea4-4f86-9bf5-12b0129451af_fixed.java
index 51ebfca..85b09ca 100644
--- a/tmp/f0dc2d03-970b-4a82-a189-645e6fe10779_buggy.java
+++ b/tmp/4050f11f-fea4-4f86-9bf5-12b0129451af_fixed.java
@@ -1,32 +1,20 @@
-    /**
-     * Encodes binary data using the base64 algorithm, optionally chunking the output into 76 character blocks.
-     * 
-     * @param binaryData
-     *            Array containing binary data to encode.
-     * @param isChunked
-     *            if <code>true</code> this encoder will chunk the base64 output into 76 character blocks
-     * @param urlSafe
-     *            if <code>true</code> this encoder will emit - and _ instead of the usual + and / characters.
-     * @param maxResultSize
-     *            The maximum result size to accept.
-     * @return Base64-encoded data.
-     * @throws IllegalArgumentException
-     *             Thrown when the input array needs an output array bigger than maxResultSize
-     * @since 1.4
-     */
-    public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {
+public static byte[] encodeBase64(byte[] binaryData,
+                                  boolean isChunked,
+                                  boolean urlSafe,
+                                  int maxResultSize) {
     if (binaryData == null || binaryData.length == 0) {
         return binaryData;
     }
-
-        long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
+    // compute expected output length according to whether we chunk or not
+    int chunkSize = isChunked ? MIME_CHUNK_SIZE : 0;
+    long len = getEncodeLength(binaryData, chunkSize, CHUNK_SEPARATOR);
     if (len > maxResultSize) {
-            throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
-                len +
-                ") than the specified maxium size of " +
-                maxResultSize);
+        throw new IllegalArgumentException("Input array too big, the output array would be bigger ("
+                + len + ") than the specified maximum size of "
+                + maxResultSize);
     }
-                
-        Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);
+    Base64 b64 = isChunked
+                 ? new Base64(urlSafe)
+                 : new Base64(0, CHUNK_SEPARATOR, urlSafe);
     return b64.encode(binaryData);
 }
\ No newline at end of file
