diff --git a/tmp/eb9609fb-3cba-4420-bc4b-58c973b44f1a_buggy.java b/tmp/aac97d10-74e9-4255-a67f-1247bf934270_fixed.java
index b5d94e0..834fb40 100644
--- a/tmp/eb9609fb-3cba-4420-bc4b-58c973b44f1a_buggy.java
+++ b/tmp/aac97d10-74e9-4255-a67f-1247bf934270_fixed.java
@@ -1,26 +1,24 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
+  // Even if this node itself doesnâ€™t need to be visited,
+  // we still want to recurse into its children to catch
+  // any optimizations in subtrees.
   if (!shouldVisit(node)) {
+    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
+      traverse(c);
+    }
     return;
   }
 
   int visits = 0;
   do {
-      Node c = node.getFirstChild();
-      while(c != null) {
+    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       traverse(c);
-        Node next = c.getNext();
-        c = next;
     }
 
     visit(node);
     visits++;
-
     Preconditions.checkState(visits < 10000, "too many interations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
