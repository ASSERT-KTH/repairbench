diff --git a/tmp/41207744-6f7a-4866-a80d-8ddebe8baf7c_buggy.java b/tmp/49333f25-db22-4fe5-9316-66aa99cc6ad6_fixed.java
index b5d94e0..cda7229 100644
--- a/tmp/41207744-6f7a-4866-a80d-8ddebe8baf7c_buggy.java
+++ b/tmp/49333f25-db22-4fe5-9316-66aa99cc6ad6_fixed.java
@@ -1,26 +1,23 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
-    if (!shouldVisit(node)) {
-      return;
-    }
-
+  // Always recurse into children, but only “visit” (and re‐visit)
+  // nodes that want to be processed.
+  boolean doVisit = shouldVisit(node);
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while (c != null) {
-        traverse(c);
       Node next = c.getNext();
+      traverse(c);
       c = next;
     }
-
+    if (!doVisit) {
+      break;
+    }
     visit(node);
     visits++;
-
     Preconditions.checkState(visits < 10000, "too many interations");
   } while (shouldRetraverse(node));
-
+  if (doVisit) {
     exitNode(node);
   }
+}
\ No newline at end of file
