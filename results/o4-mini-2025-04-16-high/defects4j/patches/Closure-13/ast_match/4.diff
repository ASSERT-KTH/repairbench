diff --git a/tmp/b36b9aa3-abc1-4941-9e43-94cc05c64e24_buggy.java b/tmp/6f66aa76-b399-453d-be7b-ca5982c62f78_fixed.java
index b5d94e0..f9da802 100644
--- a/tmp/b36b9aa3-abc1-4941-9e43-94cc05c64e24_buggy.java
+++ b/tmp/6f66aa76-b399-453d-be7b-ca5982c62f78_fixed.java
@@ -1,26 +1,27 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while (c != null) {
-        traverse(c);
+      // capture the next sibling before recursing,
+      // since traverse(c) may splice out or replace c
       Node next = c.getNext();
+      traverse(c);
       c = next;
     }
 
     visit(node);
     visits++;
-
     Preconditions.checkState(visits < 10000, "too many interations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
