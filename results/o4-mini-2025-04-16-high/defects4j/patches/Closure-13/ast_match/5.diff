diff --git a/tmp/90340db2-4f6d-4095-85e3-5766f3db2df4_buggy.java b/tmp/e22ddf54-e831-4ac2-87f4-dfd1eaa199e4_fixed.java
index b5d94e0..0e47e0c 100644
--- a/tmp/90340db2-4f6d-4095-85e3-5766f3db2df4_buggy.java
+++ b/tmp/e22ddf54-e831-4ac2-87f4-dfd1eaa199e4_fixed.java
@@ -1,26 +1,27 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while (c != null) {
-        traverse(c);
+      // grab the next sibling before recursing, in case 'c' is
+      // removed or its siblings are rearranged during traverse(c)
       Node next = c.getNext();
+      traverse(c);
       c = next;
     }
 
     visit(node);
     visits++;
-
     Preconditions.checkState(visits < 10000, "too many interations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
