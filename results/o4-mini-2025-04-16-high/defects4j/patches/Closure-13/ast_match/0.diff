diff --git a/tmp/ed32ce8c-6c68-47b1-938c-70e1a246e2a0_buggy.java b/tmp/c138fba3-68fa-45e6-83e9-0314a7e65410_fixed.java
index b5d94e0..31cfc8e 100644
--- a/tmp/ed32ce8c-6c68-47b1-938c-70e1a246e2a0_buggy.java
+++ b/tmp/c138fba3-68fa-45e6-83e9-0314a7e65410_fixed.java
@@ -1,26 +1,27 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while (c != null) {
-        traverse(c);
+      // grab the next sibling before recursing,
+      // so that mutations (removals/replacements) don't skip nodes
       Node next = c.getNext();
+      traverse(c);
       c = next;
     }
 
     visit(node);
     visits++;
-
     Preconditions.checkState(visits < 10000, "too many interations");
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
