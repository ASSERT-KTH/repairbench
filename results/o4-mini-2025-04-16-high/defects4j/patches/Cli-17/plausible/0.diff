diff --git a/tmp/62fbaa38-0751-45ca-9e5d-891814937b39_buggy.java b/tmp/892cc3fc-0aa4-446d-bc11-4189fd808514_fixed.java
index 43fb5fd..f3bdff3 100644
--- a/tmp/62fbaa38-0751-45ca-9e5d-891814937b39_buggy.java
+++ b/tmp/892cc3fc-0aa4-446d-bc11-4189fd808514_fixed.java
@@ -1,55 +1,49 @@
 /**
  * <p>Breaks <code>token</code> into its constituent parts
  * using the following algorithm.
  * <ul>
  *  <li>ignore the first character ("<b>-</b>")</li>
  *  <li>foreach remaining character check if an {@link Option}
  *  exists with that id.</li>
  *  <li>if an {@link Option} does exist then add that character
  *  prepended with "<b>-</b>" to the list of processed tokens.</li>
  *  <li>if the {@link Option} can have an argument value and there 
  *  are remaining characters in the token then add the remaining 
  *  characters as a token to the list of processed tokens.</li>
  *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> 
  *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
  *  "<b>--</b>" followed by the remaining characters and also 
-     *  the remaining tokens directly to the processed tokens list.</li>
+ *  stop bursting.</li>
  *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
-     *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
-     *  character prepended with "<b>-</b>".</li>
+ *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add the
+ *  entire token and stop bursting.</li>
  * </ul>
  * </p>
  *
  * @param token The current token to be <b>burst</b>
  * @param stopAtNonOption Specifies whether to stop processing
  * at the first non-Option encountered.
  */
-    protected void burstToken(String token, boolean stopAtNonOption)
-    {
-        for (int i = 1; i < token.length(); i++)
-        {
+protected void burstToken(String token, boolean stopAtNonOption) {
+    for (int i = 1; i < token.length(); i++) {
         String ch = String.valueOf(token.charAt(i));
-
-            if (options.hasOption(ch))
-            {
+        if (options.hasOption(ch)) {
             tokens.add("-" + ch);
             currentOption = options.getOption(ch);
-
-                if (currentOption.hasArg() && (token.length() != (i + 1)))
-                {
+            // if this option takes an argument, consume the rest of the token
+            if (currentOption.hasArg() && (i + 1 < token.length())) {
                 tokens.add(token.substring(i + 1));
-
                 break;
             }
-            }
-            else if (stopAtNonOption)
-            {
-                process(token.substring(i));
-            }
-            else
-            {
+        } else if (stopAtNonOption) {
+            // stop bursting at first non-option: emit "--" then rest as one token
+            tokens.add("--");
+            tokens.add(token.substring(i));
+            break;
+        } else {
+            // no such option, but we're not stopping: emit the whole token
             tokens.add(token);
             break;
         }
     }
 }
\ No newline at end of file
