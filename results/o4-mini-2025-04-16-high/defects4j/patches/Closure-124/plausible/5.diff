diff --git a/tmp/80a8d61d-b0ab-4fc8-99ab-fb2bdfe2ba1d_buggy.java b/tmp/4c134fc8-04d0-47cb-82a3-f45de9c652ef_fixed.java
index 2573d30..a53c30e 100644
--- a/tmp/80a8d61d-b0ab-4fc8-99ab-fb2bdfe2ba1d_buggy.java
+++ b/tmp/4c134fc8-04d0-47cb-82a3-f45de9c652ef_fixed.java
@@ -1,20 +1,25 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    // Find the root of the property chain (e.g., for x.a.b.c go to x).
+    Node base = node;
+    while (base.isGetProp()) {
+      base = base.getFirstChild();
+    }
+
+    // If the base name is assigned to in the replacement, it's not safe.
+    if (base.isName()
+        && isNameAssignedTo(base.getString(), replacement)) {
       return false;
     }
-
     return true;
   }
\ No newline at end of file
