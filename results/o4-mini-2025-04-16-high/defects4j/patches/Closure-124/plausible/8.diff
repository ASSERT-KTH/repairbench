diff --git a/tmp/44799c39-08cd-43fa-b81e-22b39dc7273a_buggy.java b/tmp/c8c09019-8dd9-4abd-8609-0b253ecbe75f_fixed.java
index 2573d30..9dbd741 100644
--- a/tmp/44799c39-08cd-43fa-b81e-22b39dc7273a_buggy.java
+++ b/tmp/c8c09019-8dd9-4abd-8609-0b253ecbe75f_fixed.java
@@ -1,20 +1,26 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
-    // No checks are needed for simple names.
+  // Simple names are always safe.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Walk down the getprop chain to its base object.
+  Node base = node.getFirstChild();
+  while (base.isGetProp()) {
+    base = base.getFirstChild();
+  }
+
+  // If that base is a name which was itself assigned to
+  // this replacement, we cannot safely replace.
+  if (base.isName() && isNameAssignedTo(base.getString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
