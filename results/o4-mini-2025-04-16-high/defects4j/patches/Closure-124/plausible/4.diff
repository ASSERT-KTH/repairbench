diff --git a/tmp/c23e4f65-1d9d-49f2-b70b-fd93ea9f9d8e_buggy.java b/tmp/ab2454f6-b6a7-4cf8-bf9c-1c6999475ed4_fixed.java
index 2573d30..c582923 100644
--- a/tmp/c23e4f65-1d9d-49f2-b70b-fd93ea9f9d8e_buggy.java
+++ b/tmp/ab2454f6-b6a7-4cf8-bf9c-1c6999475ed4_fixed.java
@@ -1,20 +1,23 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Traverse down the property chain to find its root object.
+  Node root = node.getFirstChild();
+  while (root.isGetProp()) {
+    root = root.getFirstChild();
+  }
+  // If the root is a name that occurs in 'replacement', don't replace.
+  if (root.isName() && isNameAssignedTo(root.getString(), replacement)) {
     return false;
   }
-
   return true;
 }
\ No newline at end of file
