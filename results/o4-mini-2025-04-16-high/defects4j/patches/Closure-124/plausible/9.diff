diff --git a/tmp/e08db053-1100-4e00-8c2f-d9b4fae40d34_buggy.java b/tmp/f47cae1c-0824-4bff-b73d-d10116c7cf82_fixed.java
index 2573d30..2b51dfa 100644
--- a/tmp/e08db053-1100-4e00-8c2f-d9b4fae40d34_buggy.java
+++ b/tmp/f47cae1c-0824-4bff-b73d-d10116c7cf82_fixed.java
@@ -1,20 +1,23 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
-
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Walk down through any nested GETPROP to find the true root.
+  Node root = node;
+  while (root.isGetProp()) {
+    root = root.getFirstChild();
+  }
+  // If the root is a name and that name is assigned to in the
+  // replacement, we cannot safely substitute.
+  if (root.isName() && isNameAssignedTo(root.getString(), replacement)) {
     return false;
   }
-
   return true;
 }
\ No newline at end of file
