diff --git a/tmp/31bc845b-d8d0-4159-bf93-abbc618792ca_buggy.java b/tmp/32811f0c-6593-4d15-83cb-965c194bf02e_fixed.java
index 2573d30..979e7e0 100644
--- a/tmp/31bc845b-d8d0-4159-bf93-abbc618792ca_buggy.java
+++ b/tmp/32811f0c-6593-4d15-83cb-965c194bf02e_fixed.java
@@ -1,20 +1,26 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Drill down to the root of a property chain (e.g. x in x.a.b.c).
+  Node root = node;
+  while (root.isGetProp()) {
+    root = root.getFirstChild();
+  }
+
+  // If the base name is assigned to in the replacement expression,
+  // it might have changed, so it isn't safe.
+  if (root.isName() && isNameAssignedTo(root.getString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
