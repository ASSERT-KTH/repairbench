diff --git a/tmp/b3bbc237-c555-4357-b6a1-41cd5f173218_buggy.java b/tmp/85034a79-65d6-41f2-9f3d-4e276cd1d034_fixed.java
index 2573d30..72aff2e 100644
--- a/tmp/b3bbc237-c555-4357-b6a1-41cd5f173218_buggy.java
+++ b/tmp/85034a79-65d6-41f2-9f3d-4e276cd1d034_fixed.java
@@ -1,20 +1,25 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Walk down a chain of GETPROP nodes to find the base object.
+  Node object = node;
+  while (object.isGetProp()) {
+    object = object.getFirstChild();
+  }
+  // If the base is a name that gets assigned to in the replacement,
+  // we cannot safely reuse it.
+  if (object.isName() && isNameAssignedTo(object.getString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
