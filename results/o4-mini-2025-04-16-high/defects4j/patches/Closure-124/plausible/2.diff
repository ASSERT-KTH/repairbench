diff --git a/tmp/e366eca6-989e-41d7-a853-1f0511d42a10_buggy.java b/tmp/acac86c7-20e6-4346-8cd7-9ffbc1ddd4f5_fixed.java
index 2573d30..c443334 100644
--- a/tmp/e366eca6-989e-41d7-a853-1f0511d42a10_buggy.java
+++ b/tmp/acac86c7-20e6-4346-8cd7-9ffbc1ddd4f5_fixed.java
@@ -1,20 +1,27 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Find the base of a possibly nested property chain.
+  Node base = node;
+  while (base.isGetProp()) {
+    base = base.getFirstChild();
+  }
+
+  // If the root object is a name that is being reassigned in
+  // the replacement, it's not safe.
+  if (base.isName()
+      && isNameAssignedTo(base.getString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
