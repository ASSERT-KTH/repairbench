diff --git a/tmp/28e79b7e-9695-434c-acb1-5ec4f86f406b_buggy.java b/tmp/4b9230cf-889c-4028-8562-8f0bc4ecf86b_fixed.java
index 2573d30..407ea8e 100644
--- a/tmp/28e79b7e-9695-434c-acb1-5ec4f86f406b_buggy.java
+++ b/tmp/4b9230cf-889c-4028-8562-8f0bc4ecf86b_fixed.java
@@ -1,20 +1,23 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
-
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Drill down through any nested getProps to find the base object.
+  Node obj = node.getFirstChild();
+  while (obj.isGetProp()) {
+    obj = obj.getFirstChild();
+  }
+  // If that base is a name which is assigned to in the replacement,
+  // we cannot safely inline or reuse it.
+  if (obj.isName() && isNameAssignedTo(obj.getString(), replacement)) {
     return false;
   }
-
   return true;
 }
\ No newline at end of file
