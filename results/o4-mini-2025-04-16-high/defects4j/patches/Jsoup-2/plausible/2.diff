diff --git a/tmp/b313e053-c99b-4ba2-9b65-9bc53a458c3b_buggy.java b/tmp/18cfb816-0b69-4d71-9122-4bdf5b98b7ca_fixed.java
index 1b29465..af40842 100644
--- a/tmp/b313e053-c99b-4ba2-9b65-9bc53a458c3b_buggy.java
+++ b/tmp/18cfb816-0b69-4d71-9122-4bdf5b98b7ca_fixed.java
@@ -1,50 +1,63 @@
+// --- fixed parseStartTag() in HtmlTreeBuilder.java ---
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
+    if (tagName.length() == 0) { // not a real tag, treat as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
+    // read attributes
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
+    // determine if this is an empty element
+    boolean isEmptyElement = tag.isEmpty();
+    if (tq.matchChomp("/>")) {
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
+
+    // add to the tree (and push on stack if not empty)
     addChildToParent(child, isEmptyElement);
 
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
+    // special handling for data‚Äêonly tags (script, textarea)
     if (tag.isData()) {
+        // consume everything up to the end tag
         String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
+        // consume the closing '>'
+        tq.matchChomp(">");
 
+        // create the appropriate node
         Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+        if (tag.equals(titleTag) || tag.equals(textareaTag)) {
             dataNode = TextNode.createFromEncoded(data, baseUri);
-            else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+        } else {
+            dataNode = new DataNode(data, baseUri);
+        }
         child.appendChild(dataNode);
+
+        // since we've consumed the end tag manually, pop this element
+        // off the stack so further text goes into its parent:
+        stack.remove(stack.size() - 1);
     }
 
-        // <base href>: update the base uri
+    // handle <base href>
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
+        if (href.length() != 0) {
             baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+            doc.setBaseUri(href);
         }
     }
 }
\ No newline at end of file
