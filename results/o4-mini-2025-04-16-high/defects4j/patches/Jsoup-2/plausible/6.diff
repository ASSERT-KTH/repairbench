diff --git a/tmp/20e9e7b2-2602-4653-9cf7-1117a01cdd72_buggy.java b/tmp/056daef6-ca05-4255-89f5-5ba6a60f94db_fixed.java
index 1b29465..51f9aa9 100644
--- a/tmp/20e9e7b2-2602-4653-9cf7-1117a01cdd72_buggy.java
+++ b/tmp/056daef6-ca05-4255-89f5-5ba6a60f94db_fixed.java
@@ -1,50 +1,55 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
+    // not actually a tag, rewind and treat as text
+    if (tagName.length() == 0) {
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
+    // read attributes
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
+    // determine if this is an empty element: void tags or self-closed, 
+    // and for data tags (script/style/textarea/title) treat as empty so we don't push them
+    boolean isData = tag.isData();
+    boolean isEmptyElement = tag.isEmpty() || isData;
+    if (tq.matchChomp("/>")) {
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
     addChildToParent(child, isEmptyElement);
 
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
-        if (tag.isData()) {
+    // if it's a raw data tag, consume everything up to the matching end tag
+    if (isData) {
         String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
-            
+        tq.chompTo(">"); // consume the closing '>'
         Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+        if (tag.equals(titleTag) || tag.equals(textareaTag)) {
             dataNode = TextNode.createFromEncoded(data, baseUri);
-            else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+        } else {
+            dataNode = new DataNode(data, baseUri);
+        }
         child.appendChild(dataNode);
     }
 
-        // <base href>: update the base uri
-        if (child.tagName().equals("base")) {
+    // update base URI if we see a <base href="...">
+    if ("base".equals(child.tagName())) {
         String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
+        if (href.length() != 0) {
             baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+            doc.setBaseUri(href);
         }
     }
 }
\ No newline at end of file
