diff --git a/tmp/c265ad20-2fbc-4366-9924-955bcb9b71a0_buggy.java b/tmp/ce604659-8fb9-4684-b097-6f65cc8280c3_fixed.java
index 1b29465..61bd69c 100644
--- a/tmp/c265ad20-2fbc-4366-9924-955bcb9b71a0_buggy.java
+++ b/tmp/ce604659-8fb9-4684-b097-6f65cc8280c3_fixed.java
@@ -1,50 +1,59 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
+    // doesn't look like a start tag after all; put '<' back and treat as text
+    if (tagName.length() == 0) {
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
+    // read attributes
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
+    // for empty tags (img, <br/>) or data‐only tags (script, textarea, etc),
+    // mark as "empty" so they do not stay on the stack
+    boolean isEmptyElement = tag.isEmpty() || tag.isData();
+
+    // consume the close of the start tag
+    if (tq.matchChomp("/>")) {
         isEmptyElement = true;
     } else {
         tq.matchChomp(">");
     }
+
+    // add to the tree (and only push to stack if !isEmptyElement)
     addChildToParent(child, isEmptyElement);
 
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
+    // for data‐only tags, pull in all text up to the matching end tag
     if (tag.isData()) {
         String data = tq.chompTo("</" + tagName);
         tq.chompTo(">");
 
         Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+        if (tag.equals(titleTag) || tag.equals(textareaTag)) {
             dataNode = TextNode.createFromEncoded(data, baseUri);
-            else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+        } else {
+            dataNode = new DataNode(data, baseUri);
+        }
         child.appendChild(dataNode);
     }
 
-        // <base href>: update the base uri
+    // handle <base href="..."> updating the baseUri
     if (child.tagName().equals("base")) {
         String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
+        if (href.length() != 0) {
             baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+            doc.setBaseUri(href);
         }
     }
 }
\ No newline at end of file
