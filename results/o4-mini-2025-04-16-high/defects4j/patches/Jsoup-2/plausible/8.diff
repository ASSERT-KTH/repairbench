diff --git a/tmp/77628c5c-91c1-4822-bbb1-38a59ade005b_buggy.java b/tmp/479e0c78-e68f-47c5-9b78-2198c634a3f9_fixed.java
index 1b29465..cc5854e 100644
--- a/tmp/77628c5c-91c1-4822-bbb1-38a59ade005b_buggy.java
+++ b/tmp/479e0c78-e68f-47c5-9b78-2198c634a3f9_fixed.java
@@ -1,50 +1,60 @@
 private void parseStartTag() {
     tq.consume("<");
     String tagName = tq.consumeWord();
 
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
+    if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back and handle as text
         tq.addFirst("&lt;");
         parseTextNode();
         return;
     }
 
     Attributes attributes = new Attributes();
     while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
         Attribute attribute = parseAttribute();
         if (attribute != null)
             attributes.put(attribute);
     }
 
     Tag tag = Tag.valueOf(tagName);
     Element child = new Element(tag, baseUri, attributes);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
-            isEmptyElement = true;
+    // Handle self-closing tags:
+    if (tq.matchChomp("/>")) {
+        addChildToParent(child, true);
     } else {
+        // consume the '>' that closes the start tag
         tq.matchChomp(">");
-        }
-        addChildToParent(child, isEmptyElement);
 
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
         if (tag.isData()) {
+            // PC data only tags (script, textarea): grab everything up to the end tag
             String data = tq.chompTo("</" + tagName);
             tq.chompTo(">");
 
             Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
+            if (tag.equals(titleTag) || tag.equals(textareaTag)) {
+                // text only, but parsed as encoded
                 dataNode = TextNode.createFromEncoded(data, baseUri);
-            else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
+            } else {
+                // raw data (for script)
+                dataNode = new DataNode(data, baseUri);
+            }
             child.appendChild(dataNode);
+
+            // treat the data tag as closed (don't push onto the stack)
+            addChildToParent(child, true);
+        } else {
+            // normal element: empty if the tag is intrinsically empty (e.g. img)
+            boolean isEmptyElement = tag.isEmpty();
+            addChildToParent(child, isEmptyElement);
+        }
     }
 
     // <base href>: update the base uri
-        if (child.tagName().equals("base")) {
+    if ("base".equals(child.tagName())) {
         String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
+        if (href.length() != 0) {
             baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+            doc.setBaseUri(href);
         }
     }
 }
\ No newline at end of file
