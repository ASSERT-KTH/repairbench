diff --git a/tmp/cfe14009-b798-4da1-a5f2-fc46425f758f_buggy.java b/tmp/c1c82990-6103-4716-a203-5203f8d01241_fixed.java
index 1a63a66..f76a303 100644
--- a/tmp/cfe14009-b798-4da1-a5f2-fc46425f758f_buggy.java
+++ b/tmp/c1c82990-6103-4716-a203-5203f8d01241_fixed.java
@@ -1,21 +1,33 @@
 @Override
 @Deprecated
-    protected JavaType _narrow(Class<?> subclass)
-    {
+protected JavaType _narrow(Class<?> subclass) {
+    // no change if it's the same
     if (_class == subclass) {
         return this;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
-            return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
+    // must be a true subtype
+    if (!_class.isAssignableFrom(subclass)) {
+        throw new IllegalArgumentException("Class "+subclass.getName()
+                +" not sub-type of "+_class.getName());
+    }
+    // if the base type is an interface, the subclass's "superInterfaces"
+    // should include the base; otherwise it is the superClass
+    JavaType newSuperClass;
+    JavaType[] newSuperInterfaces;
+    if (_class.isInterface()) {
+        newSuperClass = null;
+        newSuperInterfaces = new JavaType[] { this };
+    } else {
+        newSuperClass = this;
+        newSuperInterfaces = _superInterfaces;
+    }
+    return new SimpleType(
+            subclass,
+            _bindings,
+            newSuperClass,
+            newSuperInterfaces,
+            _valueHandler,
+            _typeHandler,
+            _asStatic
+    );
 }
\ No newline at end of file
