diff --git a/tmp/141ace56-7db0-4b4c-a3d1-833f1d081837_buggy.java b/tmp/1515cc1a-871b-46de-8eae-264f86441241_fixed.java
index b4af58a..589297e 100644
--- a/tmp/141ace56-7db0-4b4c-a3d1-833f1d081837_buggy.java
+++ b/tmp/1515cc1a-871b-46de-8eae-264f86441241_fixed.java
@@ -1,53 +1,48 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the first time period to copy (<code>null</code> not
-     *         permitted).
-     * @param end  the last time period to copy (<code>null</code> not
-     *         permitted).
-     *
-     * @return A time series containing a copy of this time series from start
-     *         until end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
 public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
         throws CloneNotSupportedException {
 
     if (start == null) {
         throw new IllegalArgumentException("Null 'start' argument.");
     }
     if (end == null) {
         throw new IllegalArgumentException("Null 'end' argument.");
     }
     if (start.compareTo(end) > 0) {
         throw new IllegalArgumentException(
                 "Requires start on or before end.");
     }
+
     boolean emptyRange = false;
     int startIndex = getIndex(start);
     if (startIndex < 0) {
         startIndex = -(startIndex + 1);
         if (startIndex == this.data.size()) {
             emptyRange = true;  // start is after last data item
         }
     }
+
     int endIndex = getIndex(end);
-        if (endIndex < 0) {             // end period is not in original series
-            endIndex = -(endIndex + 1); // this is first item AFTER end period
-            endIndex = endIndex - 1;    // so this is last item BEFORE end
+    if (endIndex < 0) {
+        // end period is not in original series:
+        // compute the index of the last item before 'end'
+        endIndex = -(endIndex + 1);
+        endIndex = endIndex - 1;
     }
     if (endIndex < 0) {
+        emptyRange = true;  // end is before first data item
+    }
+
+    // if, after adjustment, there are no items in the requested range
+    if (!emptyRange && endIndex < startIndex) {
         emptyRange = true;
     }
+
     if (emptyRange) {
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
         return copy;
     }
     else {
         return createCopy(startIndex, endIndex);
     }
-
 }
\ No newline at end of file
