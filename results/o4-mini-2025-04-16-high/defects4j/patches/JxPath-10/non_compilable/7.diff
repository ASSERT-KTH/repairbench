diff --git a/tmp/35a04e63-e8d4-4935-a85f-48c896d61626_buggy.java b/tmp/f9a7c8c3-572f-434d-bfcc-f821f869325b_fixed.java
index b86b44d..c5f6b1b 100644
--- a/tmp/35a04e63-e8d4-4935-a85f-48c896d61626_buggy.java
+++ b/tmp/f9a7c8c3-572f-434d-bfcc-f821f869325b_fixed.java
@@ -1,4 +1,35 @@
+@Override
 public final Object computeValue(EvalContext context) {
-        return compute(args[0].computeValue(context), args[1].computeValue(context))
-                ? Boolean.TRUE : Boolean.FALSE;
+    Object left = args[0].computeValue(context);
+    Object right = args[1].computeValue(context);
+
+    // Per XPath spec, if either side is an empty node‐set, all comparisons must be false.
+    if (left instanceof NodeIterator) {
+        NodeIterator ni = (NodeIterator) left;
+        int saved = ni.getPosition();
+        if (!ni.setPosition(1)) {
+            ni.setPosition(saved);
+            return Boolean.FALSE;
+        }
+        ni.setPosition(saved);
+    }
+    if (right instanceof NodeIterator) {
+        NodeIterator ni = (NodeIterator) right;
+        int saved = ni.getPosition();
+        if (!ni.setPosition(1)) {
+            ni.setPosition(saved);
+            return Boolean.FALSE;
+        }
+        ni.setPosition(saved);
+    }
+
+    // Also treat empty Java collections or arrays as empty node‐sets.
+    if (left instanceof java.util.Collection && ((java.util.Collection<?>) left).isEmpty()
+        || right instanceof java.util.Collection && ((java.util.Collection<?>) right).isEmpty()
+        || (left != null && left.getClass().isArray() && java.lang.reflect.Array.getLength(left) == 0)
+        || (right != null && right.getClass().isArray() && java.lang.reflect.Array.getLength(right) == 0)) {
+        return Boolean.FALSE;
+    }
+
+    return compute(left, right) ? Boolean.TRUE : Boolean.FALSE;
 }
\ No newline at end of file
