diff --git a/tmp/6f500754-2768-4bb7-81b2-b7dffc22b4fd_buggy.java b/tmp/6824fb07-e244-4438-9653-5a5869a47fe5_fixed.java
index e69de29..5c75341 100644
--- a/tmp/6f500754-2768-4bb7-81b2-b7dffc22b4fd_buggy.java
+++ b/tmp/6824fb07-e244-4438-9653-5a5869a47fe5_fixed.java
@@ -0,0 +1,20 @@
+// In PrimitiveOrWrapperDeserializer (or equivalent), replace the empty‐string branch so primitives fail:
+@Override
+public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    if (p.hasToken(JsonToken.VALUE_STRING)) {
+        String text = p.getText().trim();
+        if (text.isEmpty()) {
+            if (_isPrimitive) {
+                // primitives may no longer silently coerce "" → 0; instead signal error
+                throw JsonMappingException.from(p,
+                    String.format("Cannot coerce empty String (\"\") to primitive type %s",
+                                  _valueClass.getSimpleName()));
+            }
+            // wrappers still coerce "" → null
+            return null;
+        }
+        // ... fall through to regular textual parsing ...
+    }
+    // ... original handling for numbers, booleans, etc. ...
+    return super.deserialize(p, ctxt);
+}
\ No newline at end of file
