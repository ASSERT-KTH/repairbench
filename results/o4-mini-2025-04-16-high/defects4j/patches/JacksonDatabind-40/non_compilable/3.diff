diff --git a/tmp/06ccb945-ce4b-48d9-97b1-66ffd99add4d_buggy.java b/tmp/d130a12a-102a-4a90-8ef6-80ef4f972267_fixed.java
index e69de29..80fc2a8 100644
--- a/tmp/06ccb945-ce4b-48d9-97b1-66ffd99add4d_buggy.java
+++ b/tmp/d130a12a-102a-4a90-8ef6-80ef4f972267_fixed.java
@@ -0,0 +1,30 @@
+// In StdDeserializer (or wherever empty‐string coercion is handled), replace the
+// AsNull branch so it uses getNullValue(ctxt) (honoring primitives’ default)
+// instead of returning literal null:
+
+@Override
+protected final T _coerceEmptyString(DeserializationContext ctxt,
+                                     T emptyValue) throws IOException
+{
+    // look up what to do with empty‐string inputs for this type:
+    CoercionAction action = ctxt.findCoercionAction(_valueType,
+                                                   CoercionInputShape.EmptyString);
+    switch (action) {
+    case AsEmpty:
+        // explicit "as empty" → use empty‐value (for wrapper: null or for primitive: default)
+        return emptyValue;
+    case AsNull:
+        // explicit "as null" → delegate to null‐handling (will respect
+        // FAIL_ON_NULL_FOR_PRIMITIVES and primitive default)
+        return getNullValue(ctxt);
+    case Fail:
+        // explicit "fail" → report an error
+        return (T) ctxt.handleWeirdStringValue(_valueClass,
+            ctxt.getParser().getText(),
+            "Cannot coerce empty String ('\"\"') to %s",
+            _valueClass.getName());
+    default:
+        // TryConvert, TryConvertOrNull, etc → fall back to emptyValue
+        return emptyValue;
+    }
+}
\ No newline at end of file
