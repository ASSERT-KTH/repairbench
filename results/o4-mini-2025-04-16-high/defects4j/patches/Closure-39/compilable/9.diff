diff --git a/tmp/06660ce1-ee0a-4d9d-ba6b-b21aa763cff9_buggy.java b/tmp/e8e59767-13e4-41e8-b38c-45c9a5b034e7_fixed.java
index e4d90e7..621e83a 100644
--- a/tmp/06660ce1-ee0a-4d9d-ba6b-b21aa763cff9_buggy.java
+++ b/tmp/e8e59767-13e4-41e8-b38c-45c9a5b034e7_fixed.java
@@ -1,45 +1,67 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
-    } else if (prettyPrint) {
-      // Don't pretty print recursively.
+  }
+
+  // Annotation‐mode: always show all properties, using toAnnotationString()
+  if (forAnnotations) {
+    Set<String> propertyNames = Sets.newTreeSet();
+    for (ObjectType current = this;
+         current != null && !current.isNativeObjectType();
+         current = current.getImplicitPrototype()) {
+      propertyNames.addAll(current.getOwnPropertyNames());
+    }
+    StringBuilder sb = new StringBuilder();
+    sb.append("{");
+    int i = 0;
+    for (String property : propertyNames) {
+      if (i > 0) {
+        sb.append(", ");
+      }
+      sb.append(property).append(": ")
+        .append(getPropertyType(property).toAnnotationString());
+      i++;
+    }
+    sb.append("}");
+    return sb.toString();
+  }
+
+  // Pretty‐print mode (toString): show up to MAX_PRETTY_PRINTED_PROPERTIES, then "..."
+  if (prettyPrint) {
+    // prevent recursive pretty‐printing
     prettyPrint = false;
 
-      // Use a tree set so that the properties are sorted.
     Set<String> propertyNames = Sets.newTreeSet();
     for (ObjectType current = this;
          current != null && !current.isNativeObjectType() &&
              propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
 
     StringBuilder sb = new StringBuilder();
     sb.append("{");
-
     int i = 0;
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
-
-        sb.append(property);
-        sb.append(": ");
-        sb.append(getPropertyType(property).toString());
-
-        ++i;
+      sb.append(property).append(": ")
+        .append(getPropertyType(property).toString());
+      i++;
       if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
         sb.append(", ...");
         break;
       }
     }
-
     sb.append("}");
 
+    // restore prettyPrint for outer calls
     prettyPrint = true;
     return sb.toString();
-    } else {
+  }
+
+  // Fallback: collapsed form
   return "{...}";
 }
\ No newline at end of file
-  }
