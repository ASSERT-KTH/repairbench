diff --git a/tmp/ac809b35-c3a4-4093-8486-fa56b9cdb448_buggy.java b/tmp/b92438c9-5591-4e97-9072-113cab7a2163_fixed.java
index e4d90e7..c18b7e7 100644
--- a/tmp/ac809b35-c3a4-4093-8486-fa56b9cdb448_buggy.java
+++ b/tmp/b92438c9-5591-4e97-9072-113cab7a2163_fixed.java
@@ -1,45 +1,61 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
+  } else if (forAnnotations) {
+    // Annotation-style: always show all (non-native) properties
+    Set<String> propertyNames = Sets.newTreeSet();
+    for (ObjectType current = this;
+         current != null && !current.isNativeObjectType();
+         current = current.getImplicitPrototype()) {
+      propertyNames.addAll(current.getOwnPropertyNames());
+    }
+    StringBuilder sb = new StringBuilder();
+    sb.append("{");
+    int i = 0;
+    for (String property : propertyNames) {
+      if (i > 0) {
+        sb.append(", ");
+      }
+      sb.append(property);
+      sb.append(": ");
+      sb.append(getPropertyType(property).toAnnotationString());
+      i++;
+    }
+    sb.append("}");
+    return sb.toString();
   } else if (prettyPrint) {
-      // Don't pretty print recursively.
+    // Pretty-print (possibly truncated) for toString()
+    // Prevent recursive pretty-print
     prettyPrint = false;
-
-      // Use a tree set so that the properties are sorted.
+    // Gather up to MAX_PRETTY_PRINTED_PROPERTIES from this + prototypes
     Set<String> propertyNames = Sets.newTreeSet();
     for (ObjectType current = this;
          current != null && !current.isNativeObjectType() &&
              propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
-
     StringBuilder sb = new StringBuilder();
     sb.append("{");
-
     int i = 0;
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
-
       sb.append(property);
       sb.append(": ");
       sb.append(getPropertyType(property).toString());
-
-        ++i;
+      i++;
       if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
         sb.append(", ...");
         break;
       }
     }
-
     sb.append("}");
-
     prettyPrint = true;
     return sb.toString();
   } else {
     return "{...}";
   }
 }
\ No newline at end of file
