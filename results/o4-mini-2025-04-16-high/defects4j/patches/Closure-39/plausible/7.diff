diff --git a/tmp/7b90c323-07c1-41f3-a0f1-0046a38e3c02_buggy.java b/tmp/01ed4b5c-2b7b-4459-8f29-116572f3c6de_fixed.java
index e4d90e7..0003072 100644
--- a/tmp/7b90c323-07c1-41f3-a0f1-0046a38e3c02_buggy.java
+++ b/tmp/01ed4b5c-2b7b-4459-8f29-116572f3c6de_fixed.java
@@ -1,45 +1,44 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
-    } else if (prettyPrint) {
-      // Don't pretty print recursively.
+  }
+  // Recursion guard: if we're already pretty-printing, stop here.
+  if (!prettyPrint) {
+    return forAnnotations ? "?" : "{...}";
+  }
+
+  // Perform the full pretty-print.
   prettyPrint = false;
-
-      // Use a tree set so that the properties are sorted.
+  // Collect and sort property names.
   Set<String> propertyNames = Sets.newTreeSet();
   for (ObjectType current = this;
-           current != null && !current.isNativeObjectType() &&
-               propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
+       current != null && !current.isNativeObjectType();
        current = current.getImplicitPrototype()) {
     propertyNames.addAll(current.getOwnPropertyNames());
+    // If not in annotation mode, we only need up to the MAX limit
+    if (!forAnnotations && propertyNames.size() > MAX_PRETTY_PRINTED_PROPERTIES) {
+      break;
+    }
   }
 
-      StringBuilder sb = new StringBuilder();
-      sb.append("{");
-
-      int i = 0;
-      for (String property : propertyNames) {
-        if (i > 0) {
+  StringBuilder sb = new StringBuilder("{");
+  int count = 0;
+  for (String prop : propertyNames) {
+    if (count > 0) {
       sb.append(", ");
     }
+    sb.append(prop).append(": ");
+    JSType pt = getPropertyType(prop);
+    sb.append(forAnnotations ? pt.toAnnotationString() : pt.toString());
 
-        sb.append(property);
-        sb.append(": ");
-        sb.append(getPropertyType(property).toString());
-
-        ++i;
-        if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+    count++;
+    if (!forAnnotations && count == MAX_PRETTY_PRINTED_PROPERTIES) {
       sb.append(", ...");
       break;
     }
   }
-
   sb.append("}");
-
   prettyPrint = true;
   return sb.toString();
-    } else {
-      return "{...}";
-    }
 }
\ No newline at end of file
