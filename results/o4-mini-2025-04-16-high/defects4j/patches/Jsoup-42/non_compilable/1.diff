diff --git a/tmp/419cab82-bd1e-4d7d-a906-96086bb18de0_buggy.java b/tmp/519bf4b3-2030-41ca-9e8e-8a18b24ebcbc_fixed.java
index 442a001..81ae0ee 100644
--- a/tmp/419cab82-bd1e-4d7d-a906-96086bb18de0_buggy.java
+++ b/tmp/519bf4b3-2030-41ca-9e8e-8a18b24ebcbc_fixed.java
@@ -1,39 +1,42 @@
-    /**
-     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
-     * list will not be reflected in the DOM.
-     * @return a list of key vals
-     */
+@Override
 public List<Connection.KeyVal> formData() {
-        ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
-
+    List<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
     // iterate the form control elements and accumulate their values
     for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+        // only submittable controls
+        if (!el.tag().isFormSubmittable()) continue;
+        // skip disabled controls
+        if (el.hasAttr("disabled")) continue;
+
         String name = el.attr("name");
         if (name.length() == 0) continue;
         String type = el.attr("type");
 
         if ("select".equals(el.tagName())) {
             Elements options = el.select("option[selected]");
             boolean set = false;
             for (Element option: options) {
                 data.add(HttpConnection.KeyVal.create(name, option.val()));
                 set = true;
             }
             if (!set) {
                 Element option = el.select("option").first();
-                    if (option != null)
+                if (option != null) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
+            }
         } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
+            // only add if checked
             if (el.hasAttr("checked")) {
-                    final String val = el.val();
+                // default unchecked-value to "on" if none supplied
+                String val = el.hasAttr("value") && el.val().length() > 0
+                    ? el.val()
+                    : "on";
                 data.add(HttpConnection.KeyVal.create(name, val));
             }
         } else {
             data.add(HttpConnection.KeyVal.create(name, el.val()));
         }
     }
     return data;
 }
\ No newline at end of file
