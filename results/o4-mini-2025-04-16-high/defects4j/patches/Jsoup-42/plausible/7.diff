diff --git a/tmp/baf9e169-ddbd-4c0b-a103-aadade568724_buggy.java b/tmp/b830556b-9646-47cf-8cf8-c533c78ca0b1_fixed.java
index 442a001..039bc74 100644
--- a/tmp/baf9e169-ddbd-4c0b-a103-aadade568724_buggy.java
+++ b/tmp/b830556b-9646-47cf-8cf8-c533c78ca0b1_fixed.java
@@ -1,39 +1,43 @@
 /**
  * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
  * list will not be reflected in the DOM.
  * @return a list of key vals
  */
 public List<Connection.KeyVal> formData() {
     ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
     // iterate the form control elements and accumulate their values
     for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+        if (!el.tag().isFormSubmittable()) continue;
+        if (el.hasAttr("disabled")) continue;
+
         String name = el.attr("name");
         if (name.length() == 0) continue;
         String type = el.attr("type");
 
         if ("select".equals(el.tagName())) {
             Elements options = el.select("option[selected]");
             boolean set = false;
             for (Element option: options) {
                 data.add(HttpConnection.KeyVal.create(name, option.val()));
                 set = true;
             }
             if (!set) {
                 Element option = el.select("option").first();
                 if (option != null)
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
             }
         } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
             // only add checkbox or radio if they have the checked attribute
             if (el.hasAttr("checked")) {
-                    final String val = el.val();
+                // default value for a checked checkbox/radio with no value attribute is "on"
+                String val = el.hasAttr("value") ? el.val() : "on";
                 data.add(HttpConnection.KeyVal.create(name, val));
             }
         } else {
             data.add(HttpConnection.KeyVal.create(name, el.val()));
         }
     }
+
     return data;
 }
\ No newline at end of file
