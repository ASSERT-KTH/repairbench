diff --git a/tmp/dab22aea-0411-43f9-8ff9-b7b5b90c8f52_buggy.java b/tmp/9892c526-5b8b-4a84-b7d4-d22c854721f5_fixed.java
index 5c5286c..36e8b28 100644
--- a/tmp/dab22aea-0411-43f9-8ff9-b7b5b90c8f52_buggy.java
+++ b/tmp/9892c526-5b8b-4a84-b7d4-d22c854721f5_fixed.java
@@ -1,6 +1,14 @@
 public <T> void resetMock(T mock) {
+    // grab the original interceptor to retrieve its settings (including invocation listeners)
+    Factory factory = (Factory) mock;
+    MethodInterceptorFilter oldFilter = (MethodInterceptorFilter) factory.getCallback(0);
+    MockSettingsImpl settings = oldFilter.getMockSettings();
+
+    // chain a new handler onto the old one so we keep all stubbings/invocations
     MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
-        MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
-        ((Factory) mock).setCallback(0, newFilter);
+    MockHandler<T> newMockHandler = new MockHandler<>(oldMockHandler);
+
+    // install a new filter with the preserved settings
+    MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, settings);
+    factory.setCallback(0, newFilter);
 }
\ No newline at end of file
