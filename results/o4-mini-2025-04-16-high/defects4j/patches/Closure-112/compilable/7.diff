diff --git a/tmp/7a24288f-3aae-4b01-8607-0f5fef0a7c6a_buggy.java b/tmp/1b45af24-e54a-43e1-8ca9-d881bd0cb88f_fixed.java
index 63641d0..8b43c18 100644
--- a/tmp/7a24288f-3aae-4b01-8607-0f5fef0a7c6a_buggy.java
+++ b/tmp/1b45af24-e54a-43e1-8ca9-d881bd0cb88f_fixed.java
@@ -1,33 +1,33 @@
 /**
  * For functions with function(this: T, ...) and T as parameters, type
  * inference will set the type of this on a function literal argument to the
-   * the actual type of T.
+ * actual type of T.
  */
 private boolean inferTemplatedTypesForCall(
     Node n, FunctionType fnType) {
   final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
       .getTemplateKeys();
   if (keys.isEmpty()) {
     return false;
   }
 
   // Try to infer the template types
   Map<TemplateType, JSType> inferred =
       inferTemplateTypesFromParameters(fnType, n);
 
-
   // Replace all template types. If we couldn't find a replacement, we
   // replace it with UNKNOWN.
   TemplateTypeReplacer replacer = new TemplateTypeReplacer(
       registry, inferred);
   Node callTarget = n.getFirstChild();
 
   FunctionType replacementFnType = fnType.visit(replacer)
       .toMaybeFunctionType();
   Preconditions.checkNotNull(replacementFnType);
 
   callTarget.setJSType(replacementFnType);
   n.setJSType(replacementFnType.getReturnType());
 
-    return replacer.madeChanges;
+  // Always treat calls to @template'd functions as having been specialized.
+  return true;
 }
\ No newline at end of file
