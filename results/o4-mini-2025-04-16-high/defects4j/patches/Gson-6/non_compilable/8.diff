diff --git a/tmp/0c4aea17-6c73-4578-abdb-5a649fb76275_buggy.java b/tmp/5d87f592-a4f6-490e-8ffb-7765a00f7f6c_fixed.java
index 1c53d31..0f8f04f 100644
--- a/tmp/0c4aea17-6c73-4578-abdb-5a649fb76275_buggy.java
+++ b/tmp/5d87f592-a4f6-490e-8ffb-7765a00f7f6c_fixed.java
@@ -1,20 +1,33 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
-  static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
+static TypeAdapter<?> getTypeAdapter(
+    ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    // Direct TypeAdapter class
+    Class<? extends TypeAdapter<?>> adapterClass =
+        (Class<? extends TypeAdapter<?>>) value;
+    typeAdapter = constructorConstructor
+        .get(TypeToken.get(adapterClass))
+        .construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    // Adapter factory: create and fall back to default if null
+    Class<? extends TypeAdapterFactory> factoryClass =
+        (Class<? extends TypeAdapterFactory>) value;
+    TypeAdapterFactory factory =
+        constructorConstructor.get(TypeToken.get(factoryClass)).construct();
+    typeAdapter = factory.create(gson, fieldType);
+    if (typeAdapter == null) {
+      // factory didn't handle this type -> use default adapter
+      typeAdapter = gson.getAdapter(fieldType);
+    }
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+  // honor the nullSafe flag on the annotation
+  return annotation.nullSafe()
+      ? typeAdapter.nullSafe()
+      : typeAdapter;
 }
\ No newline at end of file
