diff --git a/tmp/6bfcc7b9-10e5-4007-9ff8-2a767ba893d1_buggy.java b/tmp/bebf86ef-afd5-44be-a31c-125daa9b03ab_fixed.java
index 1c53d31..eccd165 100644
--- a/tmp/6bfcc7b9-10e5-4007-9ff8-2a767ba893d1_buggy.java
+++ b/tmp/bebf86ef-afd5-44be-a31c-125daa9b03ab_fixed.java
@@ -1,20 +1,40 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
-  static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
-      TypeToken<?> fieldType, JsonAdapter annotation) {
+static TypeAdapter<?> getTypeAdapter(
+    ConstructorConstructor constructorConstructor,
+    Gson gson,
+    TypeToken<?> fieldType,
+    JsonAdapter annotation) {
+
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
+
   if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    Class<? extends TypeAdapter<?>> typeAdapterClass =
+        (Class<? extends TypeAdapter<?>>) value;
+    typeAdapter = constructorConstructor
+        .get(TypeToken.get(typeAdapterClass))
+        .construct();
+
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    Class<? extends TypeAdapterFactory> factoryClass =
+        (Class<? extends TypeAdapterFactory>) value;
+    TypeAdapterFactory factory = constructorConstructor
+        .get(TypeToken.get(factoryClass))
+        .construct();
+    typeAdapter = factory.create(gson, fieldType);
+    if (typeAdapter == null) {
+      throw new IllegalArgumentException(
+          "@JsonAdapter factory " + factoryClass.getName()
+          + " returned null for " + fieldType);
+    }
+
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+
+  // Only wrap in nullSafe if the annotation says so
+  return annotation.nullSafe()
+      ? typeAdapter.nullSafe()
+      : typeAdapter;
 }
\ No newline at end of file
