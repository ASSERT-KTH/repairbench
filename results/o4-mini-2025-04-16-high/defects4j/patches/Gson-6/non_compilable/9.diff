diff --git a/tmp/179164d9-cb94-4b22-ac36-5bc3a2de69d7_buggy.java b/tmp/095fd8fa-7538-4fb7-ab08-1bc4f17b826f_fixed.java
index 1c53d31..778d91b 100644
--- a/tmp/179164d9-cb94-4b22-ac36-5bc3a2de69d7_buggy.java
+++ b/tmp/095fd8fa-7538-4fb7-ab08-1bc4f17b826f_fixed.java
@@ -1,20 +1,33 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
+    // A direct TypeAdapter subclass was provided
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    typeAdapter = constructorConstructor
+        .get(TypeToken.get(typeAdapterClass))
+        .construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    // A TypeAdapterFactory was provided
+    Class<TypeAdapterFactory> factoryClass = (Class<TypeAdapterFactory>) value;
+    TypeAdapterFactory factory = constructorConstructor
+        .get(TypeToken.get(factoryClass))
+        .construct();
+    typeAdapter = factory.create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+
+  // If a factory returned null, fall back to the next adapter in the chain
+  if (typeAdapter == null) {
+    return null;
+  }
+
+  // Only wrap in nullSafe() if the annotation requests it (default is true)
+  return annotation.nullSafe()
+      ? typeAdapter.nullSafe()
+      : typeAdapter;
 }
\ No newline at end of file
