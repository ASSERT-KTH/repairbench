diff --git a/tmp/04ec9d29-ad3a-48fb-a91e-41063a4f66b4_buggy.java b/tmp/7e9ad131-a173-4a04-9bce-b102fda1ff43_fixed.java
index 1c53d31..5ea5425 100644
--- a/tmp/04ec9d29-ad3a-48fb-a91e-41063a4f66b4_buggy.java
+++ b/tmp/7e9ad131-a173-4a04-9bce-b102fda1ff43_fixed.java
@@ -1,20 +1,26 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    // user supplied a TypeAdapter
+    Class<? extends TypeAdapter<?>> adapterClass = (Class<? extends TypeAdapter<?>>) value;
+    typeAdapter = constructorConstructor.get(TypeToken.get(adapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    // user supplied a TypeAdapterFactory
+    Class<? extends TypeAdapterFactory> factoryClass =
+        (Class<? extends TypeAdapterFactory>) value;
+    TypeAdapterFactory factory =
+        constructorConstructor.get(TypeToken.get(factoryClass)).construct();
+    typeAdapter = factory.create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+
+  // honor the nullSafe flag on the annotation
+  return annotation.nullSafe()
+      ? typeAdapter.nullSafe()
+      : typeAdapter;
 }
\ No newline at end of file
