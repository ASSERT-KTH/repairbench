diff --git a/tmp/2bd2ff80-8940-417c-b779-174c8a1e3db9_buggy.java b/tmp/ed977cf9-dce2-4a60-9bfe-7bea40e8f32c_fixed.java
index 1c53d31..95bc39f 100644
--- a/tmp/2bd2ff80-8940-417c-b779-174c8a1e3db9_buggy.java
+++ b/tmp/ed977cf9-dce2-4a60-9bfe-7bea40e8f32c_fixed.java
@@ -1,20 +1,22 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
-    Class<?> value = annotation.value();
+  // Instantiate the adapter or factory
+  Object instance = constructorConstructor
+      .get(TypeToken.get((Class<?>) annotation.value()))
+      .construct();
+
+  // Figure out if it's a TypeAdapter or a TypeAdapterFactory
   TypeAdapter<?> typeAdapter;
-    if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
-    } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+  if (instance instanceof TypeAdapter) {
+    typeAdapter = (TypeAdapter<?>) instance;
+  } else if (instance instanceof TypeAdapterFactory) {
+    typeAdapter = ((TypeAdapterFactory) instance).create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+
+  // Honor the nullSafe flag on the annotation
+  return annotation.nullSafe() ? typeAdapter.nullSafe() : typeAdapter;
 }
\ No newline at end of file
