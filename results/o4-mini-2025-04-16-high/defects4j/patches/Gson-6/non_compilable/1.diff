diff --git a/tmp/7dd983ed-8756-41ad-945f-5f512499691b_buggy.java b/tmp/6a1f271a-646c-4cb7-a591-615df12764a1_fixed.java
index 1c53d31..98099ac 100644
--- a/tmp/7dd983ed-8756-41ad-945f-5f512499691b_buggy.java
+++ b/tmp/6a1f271a-646c-4cb7-a591-615df12764a1_fixed.java
@@ -1,20 +1,22 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
+    Class<? extends TypeAdapter<?>> typeAdapterClass =
+        (Class<? extends TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    Class<? extends TypeAdapterFactory> factoryClass =
+        (Class<? extends TypeAdapterFactory>) value;
+    TypeAdapterFactory factory =
+        constructorConstructor.get(TypeToken.get(factoryClass)).construct();
+    typeAdapter = factory.create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+  // Only apply nullSafe() if the annotation requests it.
+  return annotation.nullSafe() ? typeAdapter.nullSafe() : typeAdapter;
 }
\ No newline at end of file
