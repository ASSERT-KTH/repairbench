diff --git a/tmp/22be9ff6-7065-4d6d-862c-1fd5237cb9ef_buggy.java b/tmp/73a01979-2583-44d3-9976-dea1d02d67a7_fixed.java
index 1c53d31..bc4214d 100644
--- a/tmp/22be9ff6-7065-4d6d-862c-1fd5237cb9ef_buggy.java
+++ b/tmp/73a01979-2583-44d3-9976-dea1d02d67a7_fixed.java
@@ -1,20 +1,40 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
-  static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
-      TypeToken<?> fieldType, JsonAdapter annotation) {
+static TypeAdapter<?> getTypeAdapter(
+    ConstructorConstructor constructorConstructor,
+    Gson gson,
+    TypeToken<?> fieldType,
+    JsonAdapter annotation) {
+
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
+
   if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    // annotation specifies a TypeAdapter
+    Class<? extends TypeAdapter<?>> adapterClass =
+        (Class<? extends TypeAdapter<?>>) value;
+    typeAdapter = constructorConstructor
+        .get(TypeToken.get(adapterClass))
+        .construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    // annotation specifies a TypeAdapterFactory
+    Class<? extends TypeAdapterFactory> factoryClass =
+        (Class<? extends TypeAdapterFactory>) value;
+    TypeAdapterFactory factory = constructorConstructor
+        .get(TypeToken.get(factoryClass))
+        .construct();
+    typeAdapter = factory.create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+
+  // If the factory returned null, let Gson fall back to its default adapter
+  if (typeAdapter == null) {
+    return null;
+  }
+
+  // Honor the annotation's nullSafe flag
+  return annotation.nullSafe()
+      ? typeAdapter.nullSafe()
+      : typeAdapter;
 }
\ No newline at end of file
