diff --git a/tmp/c4beb9a5-34d6-41fa-a6c7-a3d80e0b38d4_buggy.java b/tmp/cdf31f7d-3160-49de-9b96-bf549d2d6cf3_fixed.java
index 47915ed..486d9e0 100644
--- a/tmp/c4beb9a5-34d6-41fa-a6c7-a3d80e0b38d4_buggy.java
+++ b/tmp/cdf31f7d-3160-49de-9b96-bf549d2d6cf3_fixed.java
@@ -1,22 +1,21 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
+            return "Mock for " 
+                + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() 
+                + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+        Object mock     = invocation.getMock();
+        Object argument = invocation.getArguments()[0];
+        // return zero when comparing the mock to itself, otherwise non-zero
+        return (mock == argument ? 0 : 1);
     }
 
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
