diff --git a/tmp/9c0d1ff2-133d-4696-9ab2-e895352e9845_buggy.java b/tmp/366dd909-2aed-4282-bb68-729d798a9126_fixed.java
index 47915ed..9e99831 100644
--- a/tmp/9c0d1ff2-133d-4696-9ab2-e895352e9845_buggy.java
+++ b/tmp/366dd909-2aed-4282-bb68-729d798a9126_fixed.java
@@ -1,22 +1,21 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
+            return "Mock for " 
+                 + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName()
+                 + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+        Object mock  = invocation.getMock();
+        Object other = invocation.getArguments()[0];
+        // return 0 when comparing a mock to itself, otherwise a non-zero
+        return (mock == other) ? 0 : 1;
     }
 
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
