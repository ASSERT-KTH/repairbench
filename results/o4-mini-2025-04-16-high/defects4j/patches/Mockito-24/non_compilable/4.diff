diff --git a/tmp/fa837cbe-60dc-4ea3-8d36-fed828f9e8e0_buggy.java b/tmp/6c5cd8ee-6dcf-48b0-9172-ed42f9fba352_fixed.java
index 47915ed..79f2aaf 100644
--- a/tmp/fa837cbe-60dc-4ea3-8d36-fed828f9e8e0_buggy.java
+++ b/tmp/6c5cd8ee-6dcf-48b0-9172-ed42f9fba352_fixed.java
@@ -1,22 +1,23 @@
 /* (non-Javadoc)
  * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
  */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
+            return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName()
+                + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+        // return 0 if comparing the mock to itself, otherwise any non-zero (here 1)
+        Object mock = invocation.getMock();
+        Object other = invocation.getArgument(0);
+        return mock == other ? 0 : 1;
     }
 
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
