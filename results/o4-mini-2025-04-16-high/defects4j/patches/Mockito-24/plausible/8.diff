diff --git a/tmp/c2694d20-af1d-423d-829d-980714266a6d_buggy.java b/tmp/e62fa04c-7afe-48a7-a603-2ab845e934b1_fixed.java
index 47915ed..662d57f 100644
--- a/tmp/c2694d20-af1d-423d-829d-980714266a6d_buggy.java
+++ b/tmp/e62fa04c-7afe-48a7-a603-2ab845e934b1_fixed.java
@@ -1,22 +1,22 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
+            return "Mock for " +
+                   mockUtil.getMockSettings(mock)
+                           .getTypeToMock()
+                           .getSimpleName() +
+                   ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
+        Object mock = invocation.getMock();
+        Object other = invocation.getArguments()[0];
+        // if comparing the mock to itself return zero, otherwise non-zero
+        return mock == other ? 0 : 1;
     }
-        
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
