diff --git a/tmp/4c5c217b-65a8-4474-8b31-30db1bb2bff9_buggy.java b/tmp/8ed5c19a-43a9-4c4d-a286-13aae3215994_fixed.java
index be2af16..f74f0ba 100644
--- a/tmp/4c5c217b-65a8-4474-8b31-30db1bb2bff9_buggy.java
+++ b/tmp/8ed5c19a-43a9-4c4d-a286-13aae3215994_fixed.java
@@ -1,29 +1,31 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        return base.getDateTimeMillis(
+            year, monthOfYear, dayOfMonth,
+            hourOfDay, minuteOfHour,
+            secondOfMinute, millisOfSecond);
     }
-
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+    // Try Julian first
+    long julianInstant = iJulianChronology.getDateTimeMillis(
+        year, monthOfYear, dayOfMonth,
+        hourOfDay, minuteOfHour,
+        secondOfMinute, millisOfSecond);
+    if (julianInstant < iCutoverMillis) {
+        return julianInstant;
+    }
+    // Julian is on/after cutover, try Gregorian
+    long gregorianInstant = iGregorianChronology.getDateTimeMillis(
+        year, monthOfYear, dayOfMonth,
+        hourOfDay, minuteOfHour,
+        secondOfMinute, millisOfSecond);
+    if (gregorianInstant >= iCutoverMillis) {
+        return gregorianInstant;
+    }
+    // It's in the cutover gap
     throw new IllegalArgumentException("Specified date does not exist");
 }
\ No newline at end of file
-        }
-        return instant;
-    }
