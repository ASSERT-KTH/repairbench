diff --git a/tmp/d7379389-f418-49aa-a7b1-23902129819f_buggy.java b/tmp/be3d8241-e686-4b06-9f86-bc849e17f75c_fixed.java
index 9739964..6815a1c 100644
--- a/tmp/d7379389-f418-49aa-a7b1-23902129819f_buggy.java
+++ b/tmp/be3d8241-e686-4b06-9f86-bc849e17f75c_fixed.java
@@ -1,27 +1,23 @@
+import java.util.Stack;
+
+public class OnlineStockSpan {
     public int[] calculateSpans(int[] prices) {
-
         int[] spans = new int[prices.length];
         spans[0] = 1; // Span of first element is always 1
 
         Stack<Integer> indexStack = new Stack<>();
-
-    // Push the index of first element
         indexStack.push(0);
 
         for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
+            while (!indexStack.isEmpty() && prices[indexStack.peek()] <= prices[i]) {
                 indexStack.pop();
+            }
 
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
-        spans[i] = i + 1;
-      else
-        spans[i] = i - indexStack.peek();
+            spans[i] = indexStack.isEmpty() ? i + 1 : i - indexStack.peek();
 
             indexStack.push(i);
         }
 
         return spans;
     }
+}
\ No newline at end of file
