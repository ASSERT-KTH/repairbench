diff --git a/tmp/0b67b401-4b82-480d-b1c6-d4e3c1f251a5_buggy.java b/tmp/2e9531dc-4395-4ce1-8d29-7c8fdb013897_fixed.java
index 27f2719..c47b867 100644
--- a/tmp/0b67b401-4b82-480d-b1c6-d4e3c1f251a5_buggy.java
+++ b/tmp/2e9531dc-4395-4ce1-8d29-7c8fdb013897_fixed.java
@@ -1,90 +1,77 @@
 @Override
-    protected Object decode(
-            Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
-
+protected Object decode(Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
     String sentence = (String) msg;
 
     if (sentence.startsWith("!1,")) {
         int index = sentence.indexOf(',', 3);
         if (index < 0) {
             index = sentence.length();
         }
         getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
         return null;
     }
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
-        if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
+    if (deviceSession == null || !sentence.matches("![35A-DSB-C],.*")) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     String type = sentence.substring(1, 2);
     position.set(Position.KEY_TYPE, type);
 
     if (type.equals("3")) {
-
         getLastLocation(position, null);
-
         position.set(Position.KEY_RESULT, sentence.substring(3));
-
         return position;
-
     } else if (type.equals("5")) {
-
         String[] values = sentence.split(",");
-
+        if (values.length < 3) {
+            return null;
+        }
         getLastLocation(position, null);
-
+        try {
             position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
+        } catch (NumberFormatException e) {
+            // Handle parsing error
+        }
         if (values.length >= 4) {
+            try {
                 position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
+            } catch (NumberFormatException e) {
+                // Handle parsing error
+            }
         }
-
         return position;
-
     } else if (type.equals("B") || type.equals("D")) {
-
         Parser parser = new Parser(PATTERN_BD, sentence);
         if (!parser.matches()) {
             return null;
         }
-
         decodeFix(position, parser);
         decodeState(position, parser);
-
         position.set(Position.KEY_SATELLITES, parser.nextInt(0));
         position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
         position.set(Position.KEY_HDOP, parser.nextDouble(0));
-
         return position;
-
     } else if (type.equals("C")) {
-
         Parser parser = new Parser(PATTERN_C, sentence);
         if (!parser.matches()) {
             return null;
         }
-
         decodeFix(position, parser);
         decodeState(position, parser);
-
         return position;
-
     } else if (type.equals("A")) {
-
         Parser parser = new Parser(PATTERN_A, sentence);
         if (!parser.matches()) {
             return null;
         }
-
         decodeFix(position, parser);
-
         return position;
-
     }
 
     return null;
 }
\ No newline at end of file
