diff --git a/tmp/9cceb3c5-692c-4767-8a23-a1b669f7f2b5_buggy.java b/tmp/70824fc9-f68c-49aa-931a-10fcbf8811e7_fixed.java
index 27f2719..533dc1d 100644
--- a/tmp/9cceb3c5-692c-4767-8a23-a1b669f7f2b5_buggy.java
+++ b/tmp/70824fc9-f68c-49aa-931a-10fcbf8811e7_fixed.java
@@ -1,90 +1,99 @@
 @Override
 protected Object decode(
         Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
+    if (msg == null) {
+        return null;
+    }
     String sentence = (String) msg;
+    if (sentence == null || sentence.isEmpty()) {
+        return null;
+    }
 
     if (sentence.startsWith("!1,")) {
         int index = sentence.indexOf(',', 3);
         if (index < 0) {
             index = sentence.length();
         }
         getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
         return null;
     }
 
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
     if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
-        position.setDeviceId(deviceSession.getDeviceId());
+    String deviceId = deviceSession.getDeviceId();
+    if (deviceId != null) {
+        position.setDeviceId(deviceId);
+    } else {
+        // Handle the case where device ID is null, perhaps log it or set a default value
+        LOG.warning("Device ID is null for session: " + deviceSession);
+        return null;
+    }
 
+    if (sentence.length() >= 2) {
         String type = sentence.substring(1, 2);
         position.set(Position.KEY_TYPE, type);
+    } else {
+        return null;
+    }
 
     if (type.equals("3")) {
-
         getLastLocation(position, null);
-
+        if (sentence.length() > 3) {
             position.set(Position.KEY_RESULT, sentence.substring(3));
-
+        } else {
+            position.set(Position.KEY_RESULT, "");
+        }
         return position;
-
     } else if (type.equals("5")) {
-
         String[] values = sentence.split(",");
-
         getLastLocation(position, null);
-
+        if (values.length > 1) {
+            try {
                 position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
+            } catch (NumberFormatException e) {
+                LOG.warning("Invalid RSSI value: " + values[1]);
+            }
+        }
         if (values.length >= 4) {
+            try {
                 position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
+            } catch (NumberFormatException e) {
+                LOG.warning("Invalid battery level value: " + values[3]);
+            }
         }
-
         return position;
-
     } else if (type.equals("B") || type.equals("D")) {
-
         Parser parser = new Parser(PATTERN_BD, sentence);
         if (!parser.matches()) {
             return null;
         }
-
         decodeFix(position, parser);
         decodeState(position, parser);
-
         position.set(Position.KEY_SATELLITES, parser.nextInt(0));
         position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
         position.set(Position.KEY_HDOP, parser.nextDouble(0));
-
         return position;
-
     } else if (type.equals("C")) {
-
         Parser parser = new Parser(PATTERN_C, sentence);
         if (!parser.matches()) {
             return null;
         }
-
         decodeFix(position, parser);
         decodeState(position, parser);
-
         return position;
-
     } else if (type.equals("A")) {
-
         Parser parser = new Parser(PATTERN_A, sentence);
         if (!parser.matches()) {
             return null;
         }
-
         decodeFix(position, parser);
-
         return position;
-
     }
 
     return null;
 }
\ No newline at end of file
