diff --git a/tmp/893058b9-91ed-406a-bc9f-8d7b1f01e177_buggy.java b/tmp/14fd46c0-ec81-40ce-ac62-8ffa124612fc_fixed.java
index 23f078d..92d144f 100644
--- a/tmp/893058b9-91ed-406a-bc9f-8d7b1f01e177_buggy.java
+++ b/tmp/14fd46c0-ec81-40ce-ac62-8ffa124612fc_fixed.java
@@ -1,14 +1,14 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
-            int c = s.codePointAt(i);
-            if (c == ' ') {
+    byte[] bytes = s.getBytes(UTF_8);
+    for (byte b : bytes) {
+        if (b == ' '.getBytes(UTF_8)[0]) {
             sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (b >= 0) {
+            sb.append((char) b);
         } else {
-                sb.append((char) c);
+            sb.append('%');
+            sb.append(Character.forDigit((b & 0xf0) >> 4, 16));
+            sb.append(Character.forDigit(b & 0x0f, 16));
         }
     }
 }
\ No newline at end of file
