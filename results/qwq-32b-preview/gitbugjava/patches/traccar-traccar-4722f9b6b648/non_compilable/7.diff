diff --git a/tmp/cfd74bcc-dd19-407e-901a-3617b55a1530_buggy.java b/tmp/d9b1b6c2-7404-4686-9697-4542ea0385ed_fixed.java
index c84c989..620a30d 100644
--- a/tmp/cfd74bcc-dd19-407e-901a-3617b55a1530_buggy.java
+++ b/tmp/d9b1b6c2-7404-4686-9697-4542ea0385ed_fixed.java
@@ -1,27 +1,39 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
-
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    // Assuming the next 4 bytes are the date and time in a specific format
+    int timestamp = buf.readUnsignedIntLE();
+    // Convert the timestamp to the correct format (e.g., milliseconds since Unix epoch)
+    // This conversion may vary based on the actual timestamp format used in the protocol
+    long time = convertTimestamp(timestamp);
+    position.setTime(new Date(time));
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
+
+// Example conversion method; adjust according to actual timestamp format
+private long convertTimestamp(int timestamp) {
+    // Assuming timestamp is seconds since a specific epoch, e.g., Jan 1, 2000
+    // Convert to milliseconds since Unix epoch (Jan 1, 1970)
+    final long epochDifference = 946684800L; // seconds between Jan 1, 1970, and Jan 1, 2000
+    return (timestamp + epochDifference) * 1000;
+}
\ No newline at end of file
