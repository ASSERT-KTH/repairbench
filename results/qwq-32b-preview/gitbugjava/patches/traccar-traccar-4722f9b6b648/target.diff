diff --git a/tmp/1c760a1f-35c7-4ec7-96aa-28c64171b215_buggy.java b/tmp/01fcb150-eec4-48c3-ab77-06d2292522d7_fixed.java
index c84c989..4ef3a38 100644
--- a/tmp/1c760a1f-35c7-4ec7-96aa-28c64171b215_buggy.java
+++ b/tmp/01fcb150-eec4-48c3-ab77-06d2292522d7_fixed.java
@@ -1,27 +1,34 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
-        buf.readUnsignedShortLE(); // length
+        buf.readUnsignedShort(); // length
 
         buf.skipBytes(3); // identification header
-        buf.readUnsignedIntLE(); // index
+        buf.readUnsignedInt(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+        position.setTime(new Date(buf.readUnsignedInt() * 1000));
 
-        buf.skipBytes(23); // coordinates block
+        buf.skipBytes(3); // coordinates header
+        int flags = buf.readUnsignedByte();
+        double latitude = buf.readUnsignedByte() + buf.readUnsignedShort() / 60000.0;
+        double longitude = buf.readUnsignedByte() + buf.readUnsignedShort() / 60000.0;
+        position.setLatitude(BitUtil.check(flags, 1) ? -latitude : latitude);
+        position.setLongitude(BitUtil.check(flags, 0) ? -longitude : longitude);
+        buf.readUnsignedInt(); // accuracy
 
-        buf.skipBytes(3); // data tag header
-        decodeMinimalDataSet(position, buf);
+        buf.readUnsignedByte(); // data tag header
+        // ByteBuf data = buf.readSlice(buf.readUnsignedShort());
+        // decodeMinimalDataSet(position, data);
 
         return position;
     }
