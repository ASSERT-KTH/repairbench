diff --git a/tmp/361ac037-fe56-4371-a25c-e512a6f59620_buggy.java b/tmp/a8c2abd1-ed3f-4d35-995d-9a0a609eca42_fixed.java
index 0583946..01a9df0 100644
--- a/tmp/361ac037-fe56-4371-a25c-e512a6f59620_buggy.java
+++ b/tmp/a8c2abd1-ed3f-4d35-995d-9a0a609eca42_fixed.java
@@ -1,30 +1,34 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
-            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
+        boolean isParentBlockOrCustom = parent != null && (parent.tag().isBlock() || isCustom(parent));
+        trimLeading = (siblingIndex == 0 && isParentBlockOrCustom) || parentNode instanceof Document;
+        trimTrailing = nextSibling() == null && isParentBlockOrCustom;
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && (((Element) next).shouldIndent(out) || isCustom((Element) next)))
+            || (next instanceof TextNode && (((TextNode) next).isBlank()));
         if (couldSkip && isBlank) return;
 
         Node prev = previousSibling();
         if (
             (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br"))
         )
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
+
+private boolean isCustom(Element element) {
+    return element.tagName().contains("-");
+}
\ No newline at end of file
