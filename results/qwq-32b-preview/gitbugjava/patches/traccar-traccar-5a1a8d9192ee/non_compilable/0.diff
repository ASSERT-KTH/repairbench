diff --git a/tmp/9f740ef0-6d5e-4428-ad7a-ee88ae3961b6_buggy.java b/tmp/58a135de-3273-4423-b6e1-dea88977fa57_fixed.java
index dadf54e..b6ab2c8 100644
--- a/tmp/9f740ef0-6d5e-4428-ad7a-ee88ae3961b6_buggy.java
+++ b/tmp/58a135de-3273-4423-b6e1-dea88977fa57_fixed.java
@@ -1,93 +1,8 @@
-    @Override
-    protected Object decode(
-            Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
-        ByteBuf buf = (ByteBuf) msg;
+This should resolve the time discrepancy in the test.
 
-        buf.readUnsignedByte(); // protocol revision
-        buf.readUnsignedShort(); // length
-        buf.readUnsignedByte(); // header indicator
-        buf.readUnsignedShort(); // header length
-        buf.readUnsignedInt(); // reference
+**Final Solution**
 
-        String imei = buf.readCharSequence(15, StandardCharsets.US_ASCII).toString();
-        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
-        if (deviceSession == null) {
-            return null;
-        }
+To fix the time conversion issue in the `decode` function of the `T622IridiumProtocolDecoder` class, we need to adjust how the time is calculated from the buffer. The original code added an offset of 946713600 seconds to the time read from the buffer, which was causing the time to be incorrectly shifted by about 30 years.
 
-        buf.readUnsignedByte(); // session status
-        buf.readUnsignedShort(); // originator index
-        buf.readUnsignedShort(); // transfer index
-        buf.readUnsignedInt(); // session time
-        buf.readUnsignedByte(); // payload indicator
-        buf.readUnsignedShort(); // payload length
-
-        Position position = new Position(getProtocolName());
-        position.setDeviceId(deviceSession.getDeviceId());
-
-        List<Integer> parameters = getParameters(deviceSession.getDeviceId());
-
-        for (int parameter : parameters) {
-            switch (parameter) {
-                case 0x01:
-                    position.set(Position.KEY_EVENT, buf.readUnsignedByte());
-                    break;
-                case 0x02:
-                    position.setLatitude(buf.readIntLE() / 1000000.0);
-                    break;
-                case 0x03:
-                    position.setLongitude(buf.readIntLE() / 1000000.0);
-                    break;
-                case 0x04:
-                    position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
-                    break;
-                case 0x05:
-                    position.setValid(buf.readUnsignedByte() > 0);
-                    break;
-                case 0x06:
-                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
-                    break;
-                case 0x07:
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
-                    break;
-                case 0x08:
-                    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
-                    break;
-                case 0x09:
-                    position.setCourse(buf.readUnsignedShortLE());
-                    break;
-                case 0x0A:
-                    position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
-                    break;
-                case 0x0B:
-                    position.setAltitude(buf.readShortLE());
-                    break;
-                case 0x0C:
-                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
-                    break;
-                case 0x0D:
-                    position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
-                    break;
-                case 0x14:
-                    position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
-                    break;
-                case 0x15:
-                    position.set(Position.KEY_INPUT, buf.readUnsignedByte());
-                    break;
-                case 0x19:
-                    position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
-                    break;
-                case 0x1A:
-                    position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
-                    break;
-                case 0x1B:
-                    buf.readUnsignedByte(); // geofence
-                    break;
-                default:
-                    break;
-            }
-        }
-
-        return position;
-    }
+### Solution Code
