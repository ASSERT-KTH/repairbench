diff --git a/tmp/5b270e5a-16bd-4cf3-ad25-96556c52acfb_buggy.java b/tmp/730cd331-96ae-4521-8724-daf251475929_fixed.java
index 855afa5..62239e6 100644
--- a/tmp/5b270e5a-16bd-4cf3-ad25-96556c52acfb_buggy.java
+++ b/tmp/730cd331-96ae-4521-8724-daf251475929_fixed.java
@@ -1,13 +1,24 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+        URI uri = u.toURI();
+        String scheme = uri.getScheme();
+        String authority = uri.getAuthority();
+        String path = uri.getPath();
+        String query = uri.getQuery();
+        String fragment = uri.getFragment();
+
+        // Encode path and query
+        path = URLEncoder.encode(path, StandardCharsets.UTF_8).replace("+", "%20");
+        if (query != null) {
+            query = URLEncoder.encode(query, StandardCharsets.UTF_8).replace("+", "%20");
+        }
+
+        // Reconstruct the URL
+        URI encodedUri = new URI(scheme, authority, path, query, fragment);
+        return encodedUri.toURL();
+    } catch (URISyntaxException | MalformedURLException | UnsupportedEncodingException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
