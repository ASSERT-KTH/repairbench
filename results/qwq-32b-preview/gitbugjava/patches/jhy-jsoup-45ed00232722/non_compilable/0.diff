diff --git a/tmp/a11db92e-9d99-4b66-a9bf-083ba512bc99_buggy.java b/tmp/723bf09f-0146-49a9-88e0-b27dbbb1462e_fixed.java
index 855afa5..feb0515 100644
--- a/tmp/a11db92e-9d99-4b66-a9bf-083ba512bc99_buggy.java
+++ b/tmp/723bf09f-0146-49a9-88e0-b27dbbb1462e_fixed.java
@@ -1,13 +1,27 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        // Get the components of the URL
+        String protocol = u.getProtocol();
+        String host = u.getHost();
+        int port = u.getPort();
+        String file = u.getFile();
+        String query = u.getQuery();
+        String ref = u.getRef();
+
+        // Encode the file path and query separately
+        if (file != null) {
+            file = UriUtils.encodePath(file, "UTF-8");
+        }
+        if (query != null) {
+            query = UriUtils.encodeQuery(query, "UTF-8");
+        }
+
+        // Reconstruct the URL
+        URI uri = new URI(protocol, host, file, query, ref);
+        return uri.toURL();
     } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        // Give up and return the original input
         return u;
     }
 }
\ No newline at end of file
