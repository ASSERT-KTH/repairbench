diff --git a/tmp/9df6b629-f7b4-451b-8089-4f468da99a35_buggy.java b/tmp/c5f6a8d1-daff-4009-8d37-ef92d3868706_fixed.java
index 855afa5..c42e6f8 100644
--- a/tmp/9df6b629-f7b4-451b-8089-4f468da99a35_buggy.java
+++ b/tmp/c5f6a8d1-daff-4009-8d37-ef92d3868706_fixed.java
@@ -1,13 +1,38 @@
+import java.io.UnsupportedEncodingException;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.net.URLEncoder;
+import java.net.URI;
+import java.nio.charset.StandardCharsets;
+
+public class HttpConnection {
+
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+            URI uri = new URI(u.getProtocol(), u.getAuthority(), null, null, null);
+            String encodedPath = encodePath(u.getPath());
+            String encodedQuery = encodeQuery(u.getQuery());
+            URI encodedUri = new URI(uri.getScheme(), uri.getAuthority(), encodedPath, encodedQuery, u.getFragment());
+            return encodedUri.toURL();
         } catch (URISyntaxException | MalformedURLException e) {
             // give up and return the original input
             return u;
         }
     }
+
+    private static String encodePath(String path) throws UnsupportedEncodingException {
+        return URLEncoder.encode(path, StandardCharsets.UTF_8.name()).replace("+", "%20");
+    }
+
+    private static String encodeQuery(String query) throws UnsupportedEncodingException {
+        if (query == null) return null;
+        return URLEncoder.encode(query, StandardCharsets.UTF_8.name()).replace("+", "%20");
+    }
+
+    private static URL punyUrl(URL u) {
+        // Implementation of punyUrl assuming it converts internationalized domain names to ASCII
+        // This is a placeholder for the actual implementation
+        return u;
+    }
+}
\ No newline at end of file
