diff --git a/tmp/19f92530-017c-4511-bd11-9282f2f7ad51_buggy.java b/tmp/03456234-49a7-441f-9a85-8dd1675102a4_fixed.java
index d87dd79..b06f390 100644
--- a/tmp/19f92530-017c-4511-bd11-9282f2f7ad51_buggy.java
+++ b/tmp/03456234-49a7-441f-9a85-8dd1675102a4_fixed.java
@@ -1,47 +1,52 @@
 @Override
-    protected Object decode(
-            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
-
+protected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
         ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
+        int startIdx = buf.readerIndex();
+        int endIdx = endIndex;
+        int readerIndex = startIdx;
+        while (readerIndex < endIdx) {
+            byte b = buf.getByte(readerIndex++);
+            if (b == '}') {
+                if (readerIndex < endIdx) {
+                    byte nextByte = buf.getByte(readerIndex++);
+                    switch (nextByte) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                    "unexpected byte at %d: 0x%02x", readerIndex - 1, nextByte));
                     }
                 } else {
-                    frame.writeByte(b1);
+                    throw new IllegalArgumentException("Incomplete escape sequence at end of buffer.");
+                }
+            } else {
+                frame.writeByte(b);
             }
         }
+        buf.readerIndex(endIndex);
         return frame;
     }
-
     return null;
 }
\ No newline at end of file
