diff --git a/tmp/67b8c995-71a5-4102-9930-13da0d994d87_buggy.java b/tmp/380be25a-faaf-463f-8944-db64ff99d878_fixed.java
index d87dd79..d1944a8 100644
--- a/tmp/67b8c995-71a5-4102-9930-13da0d994d87_buggy.java
+++ b/tmp/380be25a-faaf-463f-8944-db64ff99d878_fixed.java
@@ -1,47 +1,56 @@
 @Override
-    protected Object decode(
-            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+protected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+    List<Object> frames = new ArrayList<>();
+
+    while (true) {
         int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+        for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {
             if (buf.getByte(i) == ']') {
                 endIndex = i + 1;
                 break;
             }
         }
 
         if (endIndex > 0) {
             ByteBuf frame = Unpooled.buffer();
             while (buf.readerIndex() < endIndex) {
                 byte b1 = buf.readByte();
                 if (b1 == '}') {
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
                                     "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                     }
                 } else {
                     frame.writeByte(b1);
                 }
             }
-            return frame;
+            frames.add(frame);
+        } else {
+            break;
+        }
+    }
+
+    if (!frames.isEmpty()) {
+        return frames;
     }
 
     return null;
 }
\ No newline at end of file
