diff --git a/tmp/58280814-eda3-42e8-b8ed-791718204960_buggy.java b/tmp/5a945b85-0d3f-448a-9b54-6faa376f73fa_fixed.java
index d87dd79..f38f680 100644
--- a/tmp/58280814-eda3-42e8-b8ed-791718204960_buggy.java
+++ b/tmp/5a945b85-0d3f-448a-9b54-6faa376f73fa_fixed.java
@@ -1,47 +1,65 @@
 @Override
-    protected Object decode(
-            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+protected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
+    List<ByteBuf> frames = new ArrayList<>();
 
+    int startIndex = buf.readerIndex();
     int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
-            if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
-                break;
-            }
-        }
-
-        if (endIndex > 0) {
+    while ((endIndex = findEndIndex(buf, startIndex)) != -1) {
         ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
+        int frameEndIndex = endIndex + 1; // Include the ']'
+
+        for (int i = startIndex; i < frameEndIndex; i++) {
+            byte b = buf.getByte(i);
+            if (b == '}') {
+                byte nextByte = buf.getByte(i + 1);
+                switch (nextByte) {
                     case 0x01:
                         frame.writeByte('}');
+                        i++; // Skip the next byte
                         break;
                     case 0x02:
                         frame.writeByte('[');
+                        i++; // Skip the next byte
                         break;
                     case 0x03:
                         frame.writeByte(']');
+                        i++; // Skip the next byte
                         break;
                     case 0x04:
                         frame.writeByte(',');
+                        i++; // Skip the next byte
                         break;
                     case 0x05:
                         frame.writeByte('*');
+                        i++; // Skip the next byte
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                "unexpected byte at %d: 0x%02x", i + 1, nextByte));
                 }
             } else {
-                    frame.writeByte(b1);
+                frame.writeByte(b);
             }
         }
-            return frame;
+
+        frames.add(frame);
+        startIndex = frameEndIndex;
+    }
+
+    if (!frames.isEmpty()) {
+        // Adjust the readerIndex to the end of the last frame
+        buf.readerIndex(startIndex);
+        return frames;
     }
 
     return null;
 }
+
+private int findEndIndex(ByteBuf buf, int startIndex) {
+    for (int i = buf.writerIndex() - 1; i >= startIndex; i--) {
+        if (buf.getByte(i) == ']') {
+            return i;
+        }
+    }
+    return -1;
+}
\ No newline at end of file
