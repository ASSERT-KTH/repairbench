diff --git a/tmp/29b09cfb-8399-4601-ba07-515de9804495_buggy.java b/tmp/312fee9c-62f0-4661-b0a1-9e718c50347d_fixed.java
index fb15c85..c3499f1 100644
--- a/tmp/29b09cfb-8399-4601-ba07-515de9804495_buggy.java
+++ b/tmp/312fee9c-62f0-4661-b0a1-9e718c50347d_fixed.java
@@ -1,311 +1,311 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
     CellTower cellTower = new CellTower();
     String[] keys = form.substring(1).split("%");
     for (String key : keys) {
         switch (key) {
             case "SA":
                 position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                 break;
             case "MV":
                 position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
                 break;
             case "BV":
                 position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
                 break;
             case "GQ":
                 cellTower.setSignalStrength((int) buf.readUnsignedByte());
                 break;
             case "CE":
                 cellTower.setCellId(buf.readUnsignedInt());
                 break;
             case "LC":
                 cellTower.setLocationAreaCode(buf.readUnsignedShort());
                 break;
             case "CN":
-                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
+                int combinedMobileCodes = buf.readUnsignedInt();
                 cellTower.setMobileCountryCode(combinedMobileCodes / 100);
                 cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
                 break;
             case "RL":
-                    buf.readUnsignedByte(); // rxlev
+                buf.readUnsignedByte(); // rxlev, not used
                 break;
             case "PC":
                 position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
                 break;
             case "AT":
                 position.setAltitude(buf.readUnsignedInt());
                 break;
             case "RP":
                 position.set(Position.KEY_RPM, buf.readUnsignedShort());
                 break;
             case "GS":
                 position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                 break;
             case "DT":
                 position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
                 break;
             case "VN":
                 position.set(Position.KEY_VIN, readString(buf));
                 break;
             case "MF":
-                    buf.readUnsignedShort(); // mass air flow rate
+                buf.readUnsignedShort(); // mass air flow rate, not used
                 break;
             case "EL":
-                    buf.readUnsignedByte(); // engine load
+                buf.readUnsignedByte(); // engine load, not used
                 break;
             case "TR":
                 position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
                 break;
             case "ET":
                 position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
                 break;
             case "FL":
                 position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
                 break;
             case "ML":
-                    buf.readUnsignedByte(); // mil status
+                buf.readUnsignedByte(); // mil status, not used
                 break;
             case "FC":
                 position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
                 break;
             case "CI":
-                    readString(buf); // format string
+                readString(buf); // format string, not used
                 break;
             case "AV1":
                 position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
                 break;
             case "NC":
-                    readString(buf); // gsm neighbor cell info
+                readString(buf); // gsm neighbor cell info, not used
                 break;
             case "SM":
-                    buf.readUnsignedShort(); // max speed between reports
+                buf.readUnsignedShort(); // max speed between reports, not used
                 break;
             case "GL":
-                    readString(buf); // google link
+                readString(buf); // google link, not used
                 break;
             case "MA":
-                    readString(buf); // mac address
+                readString(buf); // mac address, not used
                 break;
             case "PD":
-                    buf.readUnsignedByte(); // pending code status
+                buf.readUnsignedByte(); // pending code status, not used
                 break;
             case "CD":
                 position.set(Position.KEY_ICCID, readString(buf));
                 break;
             case "CM":
-                    buf.readLong(); // imsi
+                buf.readLong(); // imsi, not used
                 break;
             case "GN":
-                    buf.skipBytes(60); // g sensor data
+                buf.skipBytes(60); // g sensor data, not used
                 break;
             case "GV":
-                    buf.skipBytes(6); // maximum g force
+                buf.skipBytes(6); // maximum g force, not used
                 break;
             case "ME":
-                    buf.readLong(); // imei
+                buf.readLong(); // imei, not used
                 break;
             case "IA":
-                    buf.readUnsignedByte(); // intake air temperature
+                buf.readUnsignedByte(); // intake air temperature, not used
                 break;
             case "MP":
-                    buf.readUnsignedByte(); // manifold absolute pressure
+                buf.readUnsignedByte(); // manifold absolute pressure, not used
                 break;
             case "EO":
                 position.set(Position.KEY_ODOMETER, UnitsConverter.metersFromMiles(buf.readUnsignedInt()));
                 break;
             case "EH":
                 position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 360000);
                 break;
             case "ZO1":
-                    buf.readUnsignedByte(); // brake stroke status
+                buf.readUnsignedByte(); // brake stroke status, not used
                 break;
             case "ZO2":
-                    buf.readUnsignedByte(); // warning indicator status
+                buf.readUnsignedByte(); // warning indicator status, not used
                 break;
             case "ZO3":
-                    buf.readUnsignedByte(); // abs control status
+                buf.readUnsignedByte(); // abs control status, not used
                 break;
             case "ZO4":
                 position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 0.4);
                 break;
             case "ZO5":
-                    buf.readUnsignedByte(); // parking brake status
+                buf.readUnsignedByte(); // parking brake status, not used
                 break;
             case "ZO6":
                 position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte() * 0.805);
                 break;
             case "ZO7":
-                    buf.readUnsignedByte(); // cruise control status
+                buf.readUnsignedByte(); // cruise control status, not used
                 break;
             case "ZO8":
-                    buf.readUnsignedByte(); // accelector pedal position
+                buf.readUnsignedByte(); // accelector pedal position, not used
                 break;
             case "ZO9":
                 position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 0.5);
                 break;
             case "ZO10":
                 position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.5);
                 break;
             case "ZO11":
-                    buf.readUnsignedByte(); // engine oil pressure
+                buf.readUnsignedByte(); // engine oil pressure, not used
                 break;
             case "ZO12":
-                    buf.readUnsignedByte(); // boost pressure
+                buf.readUnsignedByte(); // boost pressure, not used
                 break;
             case "ZO13":
-                    buf.readUnsignedByte(); // intake temperature
+                buf.readUnsignedByte(); // intake temperature, not used
                 break;
             case "ZO14":
                 position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte());
                 break;
             case "ZO15":
-                    buf.readUnsignedByte(); // brake application pressure
+                buf.readUnsignedByte(); // brake application pressure, not used
                 break;
             case "ZO16":
-                    buf.readUnsignedByte(); // brake primary pressure
+                buf.readUnsignedByte(); // brake primary pressure, not used
                 break;
             case "ZO17":
-                    buf.readUnsignedByte(); // brake secondary pressure
+                buf.readUnsignedByte(); // brake secondary pressure, not used
                 break;
             case "ZH1":
-                    buf.readUnsignedShort(); // cargo weight
+                buf.readUnsignedShort(); // cargo weight, not used
                 break;
             case "ZH2":
                 position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 16.428 / 3600);
                 break;
             case "ZH3":
                 position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.25);
                 break;
             case "ZL1":
-                    buf.readUnsignedInt(); // fuel used (natural gas)
+                buf.readUnsignedInt(); // fuel used (natural gas), not used
                 break;
             case "ZL2":
                 position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 161);
                 break;
             case "ZL3":
-                    buf.readUnsignedInt(); // vehicle hours
+                buf.readUnsignedInt(); // vehicle hours, not used
                 break;
             case "ZL4":
                 position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);
                 break;
             case "ZS1":
                 position.set(Position.KEY_VIN, readString(buf));
                 break;
             case "JO1":
-                    buf.readUnsignedByte(); // pedals
+                buf.readUnsignedByte(); // pedals, not used
                 break;
             case "JO2":
-                    buf.readUnsignedByte(); // power takeoff device
+                buf.readUnsignedByte(); // power takeoff device, not used
                 break;
             case "JO3":
-                    buf.readUnsignedByte(); // accelector pedal position
+                buf.readUnsignedByte(); // accelector pedal position, not used
                 break;
             case "JO4":
                 position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte());
                 break;
             case "JO5":
                 position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte() * 0.4);
                 break;
             case "JO6":
-                    buf.readUnsignedByte(); // fms vehicle interface
+                buf.readUnsignedByte(); // fms vehicle interface, not used
                 break;
             case "JO7":
-                    buf.readUnsignedByte(); // driver 2
+                buf.readUnsignedByte(); // driver 2, not used
                 break;
             case "JO8":
-                    buf.readUnsignedByte(); // driver 1
+                buf.readUnsignedByte(); // driver 1, not used
                 break;
             case "JO9":
-                    buf.readUnsignedByte(); // drivers
+                buf.readUnsignedByte(); // drivers, not used
                 break;
             case "JO10":
-                    buf.readUnsignedByte(); // system information
+                buf.readUnsignedByte(); // system information, not used
                 break;
             case "JO11":
                 position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);
                 break;
             case "JO12":
-                    buf.readUnsignedByte(); // pto engaged
+                buf.readUnsignedByte(); // pto engaged, not used
                 break;
             case "JH1":
                 position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() / 256.0);
                 break;
             case "JH2":
                 position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.125);
                 break;
             case "JH3":
             case "JH4":
             case "JH5":
             case "JH6":
             case "JH7":
                 int index = Integer.parseInt(key.substring(2)) - 2;
                 position.set("axleWeight" + index, buf.readUnsignedShort() * 0.5);
                 break;
             case "JH8":
                 position.set(Position.KEY_ODOMETER_SERVICE, buf.readUnsignedShort() * 5);
                 break;
             case "JH9":
-                    buf.readUnsignedShort(); // tachograph speed
+                buf.readUnsignedShort(); // tachograph speed, not used
                 break;
             case "JH10":
-                    buf.readUnsignedShort(); // ambient air temperature
+                buf.readUnsignedShort(); // ambient air temperature, not used
                 break;
             case "JH11":
                 position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.05);
                 break;
             case "JH12":
-                    buf.readUnsignedShort(); // fuel economy
+                buf.readUnsignedShort(); // fuel economy, not used
                 break;
             case "JL1":
                 position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.5);
                 break;
             case "JL2":
                 position.set(Position.KEY_HOURS, buf.readUnsignedInt() * 5 * 36000);
                 break;
             case "JL3":
                 position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);
                 break;
             case "JL4":
                 position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.001);
                 break;
             case "JS1":
                 position.set(Position.KEY_VIN, readString(buf));
                 break;
             case "JS2":
-                    readString(buf); // fms version supported
+                readString(buf); // fms version supported, not used
                 break;
             case "JS3":
                 position.set("driver1", readString(buf));
                 break;
             case "JS4":
                 position.set("driver2", readString(buf));
                 break;
             case "JN1":
-                    buf.readUnsignedInt(); // cruise control distance
+                buf.readUnsignedInt(); // cruise control distance, not used
                 break;
             case "JN2":
-                    buf.readUnsignedInt(); // excessive idling time
+                buf.readUnsignedInt(); // excessive idling time, not used
                 break;
             case "JN3":
-                    buf.readUnsignedInt(); // excessive idling fuel
+                buf.readUnsignedInt(); // excessive idling fuel, not used
                 break;
             case "JN4":
-                    buf.readUnsignedInt(); // pto time
+                buf.readUnsignedInt(); // pto time, not used
                 break;
             case "JN5":
-                    buf.readUnsignedInt(); // pto fuel
+                buf.readUnsignedInt(); // pto fuel, not used
                 break;
             default:
                 break;
         }
     }
 
     if (cellTower.getMobileCountryCode() != null
             && cellTower.getMobileNetworkCode() != null
             && cellTower.getCellId() != null && cellTower.getCellId() != 0
             && cellTower.getLocationAreaCode() != null) {
         position.setNetwork(new Network(cellTower));
     } else if (cellTower.getSignalStrength() != null) {
         position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
     }
 }
\ No newline at end of file
