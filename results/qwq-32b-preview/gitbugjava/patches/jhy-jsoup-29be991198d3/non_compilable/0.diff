diff --git a/tmp/54d91d22-d449-41ea-9aeb-3e75190427d6_buggy.java b/tmp/fe4a5604-5f58-43c0-a8a1-c7935a5ed7fb_fixed.java
index 862c60c..a2b7d7b 100644
--- a/tmp/54d91d22-d449-41ea-9aeb-3e75190427d6_buggy.java
+++ b/tmp/fe4a5604-5f58-43c0-a8a1-c7935a5ed7fb_fixed.java
@@ -1,25 +1,35 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) ||
+                (next instanceof TextNode && (((TextNode) next).isBlank()));
         if (couldSkip && isBlank()) return;
 
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank()))
             indent(accum, depth, out);
+
+        // Check if the previous sibling is a <br> and add a newline and indentation if so
+        List<Node> siblings = siblingNodes();
+        if (siblingIndex > 0) {
+            Node prevSibling = siblings.get(siblingIndex - 1);
+            if (prevSibling instanceof Element && "<br>".equals(((Element) prevSibling).tagName())) {
+                accum.append("\n");
+                indent(accum, depth, out);
+            }
+        }
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
