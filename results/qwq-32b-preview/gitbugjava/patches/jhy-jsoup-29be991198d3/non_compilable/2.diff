diff --git a/tmp/21e99abd-58b2-451c-9383-06ed0d8a4e89_buggy.java b/tmp/e78a58ea-e0a5-4f85-9639-ce0315bd64b9_fixed.java
index 862c60c..3fed71d 100644
--- a/tmp/21e99abd-58b2-451c-9383-06ed0d8a4e89_buggy.java
+++ b/tmp/e78a58ea-e0a5-4f85-9639-ce0315bd64b9_fixed.java
@@ -1,25 +1,33 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
         trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
             parentNode instanceof Document;
         trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = this.nextSibling();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
         if (couldSkip && isBlank()) return;
 
         if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
             (out.outline() && siblingNodes().size() > 0 && !isBlank()))
             indent(accum, depth, out);
     }
 
+    // Additional logic to handle text nodes following <br> tags
+    if (normaliseWhite) {
+        Node previous = previousSibling();
+        if (previous != null && previous instanceof Element && "br".equals(((Element) previous).tagName())) {
+            trimLeading = false; // Do not trim leading whitespace if preceding sibling is <br>
+        }
+    }
+
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
