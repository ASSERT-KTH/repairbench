diff --git a/tmp/40d328be-60e3-4ad5-aed0-1c8d40883963_buggy.java b/tmp/34c9bec4-f60a-49ef-8b11-3be654396936_fixed.java
index 0e18f59..5493587 100644
--- a/tmp/40d328be-60e3-4ad5-aed0-1c8d40883963_buggy.java
+++ b/tmp/34c9bec4-f60a-49ef-8b11-3be654396936_fixed.java
@@ -1,13 +1,7 @@
 @Override
-        InputStream decode(final InputStream in, final Coder coder,
-                byte[] password) throws IOException {
+InputStream decode(final InputStream in, final Coder coder, byte[] password) throws IOException {
     byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
-            for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
-            }
-            if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
-                throw new IOException("Dictionary larger than 4GiB maximum size");
-            }
-            return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
+    int dictSizeCode = propsByte & 7; // Extract bits 0-2
+    int dictSize = 1 << (dictSizeCode + 11); // Calculate dictionary size
+    return new LZMAInputStream(in, -1, propsByte, dictSize);
 }
\ No newline at end of file
