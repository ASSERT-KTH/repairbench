diff --git a/tmp/9ad8058c-3bd5-4b57-bba7-b1f5ca64bac3_buggy.java b/tmp/f7f9af4e-b25f-40a6-a2c2-52c2a1063935_fixed.java
index ec6c9ee..c254b8c 100644
--- a/tmp/9ad8058c-3bd5-4b57-bba7-b1f5ca64bac3_buggy.java
+++ b/tmp/f7f9af4e-b25f-40a6-a2c2-52c2a1063935_fixed.java
@@ -1,21 +1,30 @@
-    //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+        if (f.getPrinter() != null && f.getParser() != null) {
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
+        } else if (f.getPrinter() != null) {
+            sep = sep.finish(f.getPrinter(), null);
+            return new PeriodFormatter(sep, null);
+        } else if (f.getParser() != null) {
+            sep = sep.finish(null, f.getParser());
+            return new PeriodFormatter(null, sep);
+        } else {
+            return f;
+        }
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
