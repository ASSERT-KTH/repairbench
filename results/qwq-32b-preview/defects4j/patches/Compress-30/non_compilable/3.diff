diff --git a/tmp/8aab9dd6-335b-48bd-a77b-627450619f5e_buggy.java b/tmp/d9336ddf-7f1f-4f88-8151-3dbb023d838b_fixed.java
index cae5e03..4c76481 100644
--- a/tmp/8aab9dd6-335b-48bd-a77b-627450619f5e_buggy.java
+++ b/tmp/d9336ddf-7f1f-4f88-8151-3dbb023d838b_fixed.java
@@ -1,33 +1 @@
-    /*
-     * (non-Javadoc)
-     * 
-     * @see java.io.InputStream#read(byte[], int, int)
-     */
-    @Override
-    public int read(final byte[] dest, final int offs, final int len)
-        throws IOException {
-        if (offs < 0) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
-        }
-        if (len < 0) {
-            throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
-        }
-        if (offs + len > dest.length) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
-                                                + len + ") > dest.length(" + dest.length + ").");
-        }
-        if (this.in == null) {
-            throw new IOException("stream closed");
-        }
-
-        final int hi = offs + len;
-        int destOffs = offs;
-        int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
-            dest[destOffs++] = (byte) b;
-            count(1);
-        }
-
 int c = (destOffs == offs) ? -1 : (destOffs - offs);
\ No newline at end of file
-        return c;
-    }
