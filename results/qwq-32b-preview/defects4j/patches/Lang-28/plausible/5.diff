diff --git a/tmp/bbb92dd8-5017-4242-8570-ce9a94d5e6e9_buggy.java b/tmp/03a0e1ce-3243-400b-8908-3b5740cef94a_fixed.java
index 4bbd561..bfd02af 100644
--- a/tmp/bbb92dd8-5017-4242-8570-ce9a94d5e6e9_buggy.java
+++ b/tmp/03a0e1ce-3243-400b-8908-3b5740cef94a_fixed.java
@@ -1,37 +1,48 @@
-    /**
-     * {@inheritDoc}
-     */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
+    if (index < 0 || index >= input.length() || index + 1 >= input.length()) {
+        return 0;
+    }
     if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
         char firstChar = input.charAt(start);
         if (firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
         }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end) != ';') {
             end++;
         }
+        if (end >= input.length() || input.charAt(end) != ';') {
+            return 0; // No valid entity found
+        }
 
         int entityValue;
         try {
             if (isHex) {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
             } else {
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch (NumberFormatException nfe) {
             return 0;
         }
 
+        if (entityValue > 0xFFFF) {
+            // Convert to surrogate pair
+            int supplementalPlane = (entityValue - 0x10000) >> 10;
+            int lowSurrogate = 0xDC00 | (entityValue - 0x10000) & 0x3FF;
+            int highSurrogate = 0xD800 | supplementalPlane;
+            out.write(highSurrogate);
+            out.write(lowSurrogate);
+        } else {
             out.write(entityValue);
+        }
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
     return 0;
 }
\ No newline at end of file
