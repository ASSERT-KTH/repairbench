diff --git a/tmp/ddf9a79c-7c1f-49b5-93a3-44dc8230dfc1_buggy.java b/tmp/816dccfb-8263-40f5-a23b-f5e1acb6d0c8_fixed.java
index b8e7fdb..baa78cf 100644
--- a/tmp/ddf9a79c-7c1f-49b5-93a3-44dc8230dfc1_buggy.java
+++ b/tmp/816dccfb-8263-40f5-a23b-f5e1acb6d0c8_fixed.java
@@ -1,15 +1,28 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
+    // Ensure the data is properly formatted before parsing
+    if (data == null || data.length() < 3 || !data.startsWith("!?")) {
+        return null;
+    }
+    try {
+        // Adjust the substring to exclude the first and last characters correctly
+        String adjustedData = data.substring(2, data.length() -1);
+        Document doc = Jsoup.parse("<" + adjustedData + ">", baseUri(), Parser.xmlParser());
         if (doc.childNodeSize() > 0) {
             Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+            String tagName = NodeUtils.parser(doc).settings().normalizeTag(el.tagName());
+            boolean startsWithExclamation = data.startsWith("!");
+            XmlDeclaration decl = new XmlDeclaration(tagName, startsWithExclamation);
             decl.attributes().addAll(el.attributes());
-        }
             return decl;
         }
+    } catch (Exception e) {
+        // Log the exception if needed
+        // e.printStackTrace();
+    }
+    return null;
+}
\ No newline at end of file
