diff --git a/tmp/3c728a85-49d1-47ba-b021-f72f43eed230_buggy.java b/tmp/4b95b531-76fa-4059-a792-df15ddd27001_fixed.java
index b8e7fdb..cea5180 100644
--- a/tmp/3c728a85-49d1-47ba-b021-f72f43eed230_buggy.java
+++ b/tmp/4b95b531-76fa-4059-a792-df15ddd27001_fixed.java
@@ -1,15 +1,30 @@
-    /**
-     * Attempt to cast this comment to an XML Declaration note.
-     * @return an XML declaration if it could be parsed as one, null otherwise.
-     */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
+    // Ensure the data is properly formatted before parsing
+    if (!data.startsWith("<!--") || !data.endsWith("-->")) {
+        return null; // Not a valid XML declaration comment
+    }
+    
+    // Remove the comment delimiters
+    String xmlData = data.substring(4, data.length() - 3);
+    
+    try {
+        // Parse the XML data
+        Document doc = Jsoup.parse("<" + xmlData + ">", baseUri(), Parser.xmlParser());
+        
+        // Check if there are any child nodes
         if (doc.childNodeSize() > 0) {
             Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
+            String tagName = NodeUtils.parser(doc).settings().normalizeTag(el.tagName());
+            boolean isDeclaration = data.startsWith("<!--!");
+            XmlDeclaration decl = new XmlDeclaration(tagName, isDeclaration);
             decl.attributes().addAll(el.attributes());
-        }
             return decl;
         }
+    } catch (Exception e) {
+        // Parsing failed, return null
+        return null;
+    }
+    
+    return null;
+}
\ No newline at end of file
