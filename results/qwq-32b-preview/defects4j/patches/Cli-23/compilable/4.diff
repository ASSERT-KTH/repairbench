diff --git a/tmp/b37d0444-d99d-42a5-aaf6-23afaa108dd9_buggy.java b/tmp/65bb1858-a1b7-4adf-84ca-6738ddd1f3ec_fixed.java
index 227a4ef..7d05387 100644
--- a/tmp/b37d0444-d99d-42a5-aaf6-23afaa108dd9_buggy.java
+++ b/tmp/65bb1858-a1b7-4adf-84ca-6738ddd1f3ec_fixed.java
@@ -1,48 +1,31 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
         final String padding = createPadding(nextLineTabStop);
+        int startPos = 0;
 
-        while (true)
-        {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
+        while (startPos < text.length()) {
+            int endPos = findWrapPos(text, width, startPos);
+            if (endPos == -1) {
+                endPos = text.length();
+            }
+            sb.append(rtrim(text.substring(startPos, endPos))).append(defaultNewLine);
+            startPos = endPos;
+            if (startPos < text.length()) {
+                sb.append(padding);
+            }
+        }
 
         return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
     }
\ No newline at end of file
