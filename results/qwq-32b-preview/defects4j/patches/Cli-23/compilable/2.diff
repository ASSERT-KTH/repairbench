diff --git a/tmp/109c9712-3712-4693-8a70-0e661f4b2ea4_buggy.java b/tmp/907177d2-ff77-4429-b53b-e5fa6bb352f2_fixed.java
index 227a4ef..3143f36 100644
--- a/tmp/109c9712-3712-4693-8a70-0e661f4b2ea4_buggy.java
+++ b/tmp/907177d2-ff77-4429-b53b-e5fa6bb352f2_fixed.java
@@ -1,48 +1,29 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+    if (pos == -1) {
         sb.append(rtrim(text));
-
         return sb;
     }
+
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // Create the padding string once
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
+    int start = pos;
+    while (true) {
+        text = text.substring(start).trim();
+        if (text.isEmpty()) {
+            return sb;
+        }
+        text = padding + text;
         pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
+        if (pos == -1) {
+            sb.append(rtrim(text));
             return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
         }
-
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        start = pos;
     }
 }
\ No newline at end of file
