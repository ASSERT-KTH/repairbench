diff --git a/tmp/86556fb4-4f93-4c5d-9516-254c652f4710_buggy.java b/tmp/deb1b6c0-4474-447d-b24f-78e3eb2e6414_fixed.java
index 227a4ef..d353166 100644
--- a/tmp/86556fb4-4f93-4c5d-9516-254c652f4710_buggy.java
+++ b/tmp/deb1b6c0-4474-447d-b24f-78e3eb2e6414_fixed.java
@@ -1,48 +1,28 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width,
-                                             int nextLineTabStop, String text)
-    {
+                                         int nextLineTabStop, String text) {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+    if (pos == -1) {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // Calculate the actual padding needed based on nextLineTabStop
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
+    while (true) {
         int lastPos = pos;
         text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
+        pos = findWrapPos(text, width, padding.length());
 
-            if (pos == -1)
-            {
+        if (pos == -1) {
             sb.append(text);
-
             return sb;
-            } else
-            if (pos == lastPos)
-            {
+        } else if (pos == lastPos) {
             throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
