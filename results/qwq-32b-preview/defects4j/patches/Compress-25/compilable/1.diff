diff --git a/tmp/1377eb45-7182-43c2-ad6e-2069b5015101_buggy.java b/tmp/04803f7b-6c19-4b43-9c2d-24b391d0c81f_fixed.java
index 6c0aa19..67a7124 100644
--- a/tmp/1377eb45-7182-43c2-ad6e-2069b5015101_buggy.java
+++ b/tmp/04803f7b-6c19-4b43-9c2d-24b391d0c81f_fixed.java
@@ -1,20 +1,11 @@
-    /**
-     * @param encoding the encoding to use for file names, use null
-     * for the platform's default encoding
-     * @param useUnicodeExtraFields whether to use InfoZIP Unicode
-     * Extra Fields (if present) to set the file names.
-     * @param allowStoredEntriesWithDataDescriptor whether the stream
-     * will try to read STORED entries that use a data descriptor
-     * @since 1.1
-     */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
-        this.allowStoredEntriesWithDataDescriptor =
-            allowStoredEntriesWithDataDescriptor;
+    // Ensure the pushback buffer is large enough to handle ZIP headers
+    in = new PushbackInputStream(inputStream, 30); // Assuming 30 bytes is sufficient for ZIP headers
+    this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;
     // haven't read anything so far
 }
\ No newline at end of file
