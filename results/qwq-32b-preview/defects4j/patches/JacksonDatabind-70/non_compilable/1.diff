diff --git a/tmp/2454d721-22ea-4e90-8d6c-b3ade1778554_buggy.java b/tmp/4ccd724b-7119-4442-a0ff-71c56bf6d4b0_fixed.java
index 0313249..f27170a 100644
--- a/tmp/2454d721-22ea-4e90-8d6c-b3ade1778554_buggy.java
+++ b/tmp/4ccd724b-7119-4442-a0ff-71c56bf6d4b0_fixed.java
@@ -1,32 +1,17 @@
-    /**
-     * Specialized method for removing specified existing entry.
-     * NOTE: entry MUST exist, otherwise an exception is thrown.
-     */
-    public void remove(SettableBeanProperty propToRm)
-    {
-        ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
-        String key = getPropertyName(propToRm);
-        boolean found = false;
-
 for (int i = 1, end = _hashArea.length; i < end; i += 2) {
     SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
     if (prop == null) {
         continue;
     }
     if (!found) {
         // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
         //   as only former is lower-case in case-insensitive case
         found = key.equals(prop.getName());
         if (found) {
             // need to leave a hole here
             _propsInOrder[_findFromOrdered(prop)] = null;
             continue;
         }
     }
     props.add(prop);
 }
\ No newline at end of file
-        if (!found) {
-            throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
-        }
-        init(props);
-    }
