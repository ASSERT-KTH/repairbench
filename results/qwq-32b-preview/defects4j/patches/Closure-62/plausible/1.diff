diff --git a/tmp/03eecb78-40b0-4dd0-9f3a-50555bc91e96_buggy.java b/tmp/a2c5c176-85bf-424d-be4c-6cc6c5558bd0_fixed.java
index 904dba7..62a70f0 100644
--- a/tmp/03eecb78-40b0-4dd0-9f3a-50555bc91e96_buggy.java
+++ b/tmp/a2c5c176-85bf-424d-be4c-6cc6c5558bd0_fixed.java
@@ -1,46 +1,58 @@
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
-        excerpt.get(
-            source, error.sourceName, error.lineNumber, excerptFormatter);
+        excerpt.get(source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
         b.append(error.sourceName);
         if (error.lineNumber > 0) {
             b.append(':');
             b.append(error.lineNumber);
         }
         b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
         b.append(sourceExcerpt);
         b.append('\n');
         int charno = error.getCharno();
 
         // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
+        // charno == sourceExcerpt.length() means something is missing
         // at the end of the line
         if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+                && 0 <= charno && charno <= sourceExcerpt.length()) {
+            int padding = 0;
             for (int i = 0; i < charno; i++) {
                 char c = sourceExcerpt.charAt(i);
                 if (Character.isWhitespace(c)) {
                     b.append(c);
+                    padding++;
                 } else {
                     b.append(' ');
+                    padding++;
                 }
             }
             b.append("^\n");
+            // Adjust for any trailing whitespace beyond the error character
+            if (charno < sourceExcerpt.length()) {
+                for (int i = charno; i < sourceExcerpt.length(); i++) {
+                    char c = sourceExcerpt.charAt(i);
+                    if (!Character.isWhitespace(c)) {
+                        break;
+                    }
+                    b.append(' ');
+                }
+            }
         }
     }
     return b.toString();
 }
\ No newline at end of file
