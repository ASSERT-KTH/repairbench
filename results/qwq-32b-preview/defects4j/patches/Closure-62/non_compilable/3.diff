diff --git a/tmp/e335a15d-f078-4b63-9ce7-ca84900fb528_buggy.java b/tmp/0d292ff3-99d9-4496-ab07-2ea25a483e59_fixed.java
index 904dba7..5394439 100644
--- a/tmp/e335a15d-f078-4b63-9ce7-ca84900fb528_buggy.java
+++ b/tmp/0d292ff3-99d9-4496-ab07-2ea25a483e59_fixed.java
@@ -1,46 +1,12 @@
-  private String format(JSError error, boolean warning) {
-    // extract source excerpt
-    SourceExcerptProvider source = getSource();
-    String sourceExcerpt = source == null ? null :
-        excerpt.get(
-            source, error.sourceName, error.lineNumber, excerptFormatter);
-
-    // formatting the message
-    StringBuilder b = new StringBuilder();
-    if (error.sourceName != null) {
-      b.append(error.sourceName);
-      if (error.lineNumber > 0) {
-        b.append(':');
-        b.append(error.lineNumber);
-      }
-      b.append(": ");
-    }
-
-    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
-    b.append(" - ");
-
-    b.append(error.description);
-    b.append('\n');
-    if (sourceExcerpt != null) {
-      b.append(sourceExcerpt);
-      b.append('\n');
-      int charno = error.getCharno();
-
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
 if (excerpt.equals(LINE)
     && 0 <= charno && charno < sourceExcerpt.length()) {
   for (int i = 0; i < charno; i++) {
     char c = sourceExcerpt.charAt(i);
     if (Character.isWhitespace(c)) {
       b.append(c);
     } else {
       b.append(' ');
     }
   }
   b.append("^\n");
 }
\ No newline at end of file
-    }
-    return b.toString();
-  }
