diff --git a/tmp/43d0732f-0d68-496a-a512-38499bd8ea78_buggy.java b/tmp/84820a25-bf62-45f6-b75d-ad573fd77df4_fixed.java
index b2d53db..5f8f1aa 100644
--- a/tmp/43d0732f-0d68-496a-a512-38499bd8ea78_buggy.java
+++ b/tmp/84820a25-bf62-45f6-b75d-ad573fd77df4_fixed.java
@@ -1,34 +1,53 @@
 void read(Tokeniser t, CharacterReader r) {
+    if (t.isInScriptDataState()) {
+        StringBuilder scriptContent = t.getCurrentScriptBuffer();
+        int scriptEndIndex = r.find("</script>");
+        if (scriptEndIndex != -1) {
+            // Found the closing tag
+            String contentBeforeClosingTag = r.consumeUpTo("</script>");
+            scriptContent.append(contentBeforeClosingTag);
+            t.emitScriptToken();
+            r.advance(9); // Length of "</script>"
+            t.transition(Data);
+        } else {
+            // No closing tag found, consume all remaining characters
+            String remainingContent = r.consumeAll();
+            scriptContent.append(remainingContent);
+            r.advance(remainingContent.length());
+        }
+        return;
+    }
+
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
         r.advance();
         return;
     }
 
     if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
             default:
                 t.dataBuffer.append(c);
                 anythingElse(t, r);
                 break;
         }
     } else {
         anythingElse(t, r);
     }
 }
\ No newline at end of file
