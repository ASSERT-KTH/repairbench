diff --git a/tmp/6e699895-7b85-4d6b-9976-e90eb433f001_buggy.java b/tmp/eeabcea8-1651-4e38-a9c8-8ba74f35089b_fixed.java
index 784bbab..563e90e 100644
--- a/tmp/6e699895-7b85-4d6b-9976-e90eb433f001_buggy.java
+++ b/tmp/eeabcea8-1651-4e38-a9c8-8ba74f35089b_fixed.java
@@ -1,42 +1,44 @@
-    /**
-     * Initializes the name to index mapping if the format defines a header.
-     *
-     * @return null if the format has no header.
-     * @throws IOException if there is a problem reading the header or skipping the first record
-     */
 private Map<String, Integer> initializeHeader() throws IOException {
     Map<String, Integer> hdrMap = null;
     final String[] formatHeader = this.format.getHeader();
     if (formatHeader != null) {
-            hdrMap = new LinkedHashMap<String, Integer>();
+        hdrMap = new LinkedHashMap<>();
 
         String[] headerRecord = null;
         if (formatHeader.length == 0) {
             // read the header from the first line of the file
             final CSVRecord nextRecord = this.nextRecord();
             if (nextRecord != null) {
                 headerRecord = nextRecord.values();
             }
         } else {
             if (this.format.getSkipHeaderRecord()) {
                 this.nextRecord();
             }
             headerRecord = formatHeader;
         }
 
-            // build the name to index mappings
         if (headerRecord != null) {
             for (int i = 0; i < headerRecord.length; i++) {
                 final String header = headerRecord[i];
-                    final boolean containsHeader = hdrMap.containsKey(header);
-                    final boolean emptyHeader = header.trim().isEmpty();
-                    if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
+                final String trimmedHeader = header.trim();
+                final boolean containsHeader = hdrMap.containsKey(trimmedHeader);
+                final boolean emptyHeader = trimmedHeader.isEmpty();
+
+                if (emptyHeader && this.format.getIgnoreEmptyHeaders()) {
+                    // Skip empty headers if ignoreEmptyHeaders is true
+                    continue;
+                }
+
+                if (containsHeader) {
                     throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                             "\" in " + Arrays.toString(headerRecord));
                 }
-                    hdrMap.put(header, Integer.valueOf(i));
+
+                // Use trimmed header for mapping
+                hdrMap.put(trimmedHeader, i);
             }
         }
     }
     return hdrMap;
 }
\ No newline at end of file
