diff --git a/tmp/8210d1d6-2094-4426-bfae-9b6b48e71561_buggy.java b/tmp/41850a3d-b42a-4a82-a8f6-d14d9a7fe5c8_fixed.java
index 46817a7..ae2a204 100644
--- a/tmp/8210d1d6-2094-4426-bfae-9b6b48e71561_buggy.java
+++ b/tmp/41850a3d-b42a-4a82-a8f6-d14d9a7fe5c8_fixed.java
@@ -1,16 +1,24 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
+
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    
+    // Add all properties from 'this' record type
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+        builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
     }
+    
+    // Add all properties from 'that' record type, ensuring no duplicates with different types
+    RecordType thatRecord = that.toMaybeRecordType();
+    for (String property : thatRecord.getProperties().keySet()) {
+        JSType thatType = thatRecord.getPropertyType(property);
+        if (!properties.containsKey(property) || !getPropertyType(property).isEquivalentTo(thatType)) {
+            builder.addProperty(property, thatType, thatRecord.getPropertyNode(property));
         }
+    }
+    
     return builder.build();
 }
\ No newline at end of file
