diff --git a/tmp/663e3f82-6158-4587-bef9-bf34b5f601d8_buggy.java b/tmp/a0259934-ee7f-4d57-8941-e9e294fa146f_fixed.java
index 46817a7..48a0189 100644
--- a/tmp/663e3f82-6158-4587-bef9-bf34b5f601d8_buggy.java
+++ b/tmp/a0259934-ee7f-4d57-8941-e9e294fa146f_fixed.java
@@ -1,16 +1,35 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    RecordType thisRecord = this;
+    RecordType thatRecord = that.toMaybeRecordType();
+
+    // Add all properties from this record
+    for (String property : thisRecord.getProperties().keySet()) {
+        JSType thisType = thisRecord.getPropertyType(property);
+        if (thatRecord.hasProperty(property)) {
+            JSType thatType = thatRecord.getPropertyType(property);
+            if (thisType.isEquivalentTo(thatType)) {
+                builder.addProperty(property, thisType, thisRecord.getPropertyNode(property));
+            } else {
+                JSType lub = thisType.getLeastSupertype(thatType);
+                builder.addProperty(property, lub, thisRecord.getPropertyNode(property));
             }
+        } else {
+            builder.addProperty(property, thisType, thisRecord.getPropertyNode(property));
         }
+    }
+
+    // Add properties from that record that are not already included
+    for (String property : thatRecord.getProperties().keySet()) {
+        if (!thisRecord.hasProperty(property)) {
+            JSType thatType = thatRecord.getPropertyType(property);
+            builder.addProperty(property, thatType, thatRecord.getPropertyNode(property));
+        }
+    }
+
     return builder.build();
 }
\ No newline at end of file
