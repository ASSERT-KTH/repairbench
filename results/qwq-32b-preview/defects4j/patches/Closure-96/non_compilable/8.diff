diff --git a/tmp/6cdf1f8e-b0d7-42cc-b8b0-e38aedb0bfe1_buggy.java b/tmp/05536706-434d-4ef0-b33a-19b5b8d9af82_fixed.java
index e0ecec8..087f250 100644
--- a/tmp/6cdf1f8e-b0d7-42cc-b8b0-e38aedb0bfe1_buggy.java
+++ b/tmp/05536706-434d-4ef0-b33a-19b5b8d9af82_fixed.java
@@ -1,35 +1,27 @@
-  /**
-   * Visits the parameters of a CALL or a NEW node.
-   */
-  private void visitParameterList(NodeTraversal t, Node call,
-      FunctionType functionType) {
-    Iterator<Node> arguments = call.children().iterator();
-    arguments.next(); // skip the function name
-
-    Iterator<Node> parameters = functionType.getParameters().iterator();
-    int ordinal = 0;
-    Node parameter = null;
-    Node argument = null;
-    while (arguments.hasNext() &&
-           parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
+// Visit named parameters
+while (arguments.hasNext() && parameters.hasNext()) {
   parameter = parameters.next();
   argument = arguments.next();
   ordinal++;
-
-      validator.expectArgumentMatchesParameter(t, argument,
-          getJSType(argument), getJSType(parameter), call, ordinal);
+  validator.expectArgumentMatchesParameter(t, argument, getJSType(argument), getJSType(parameter), call, ordinal);
 }
 
-    int numArgs = call.getChildCount() - 1;
-    int minArgs = functionType.getMinArguments();
-    int maxArgs = functionType.getMaxArguments();
-    if (minArgs > numArgs || maxArgs < numArgs) {
-      report(t, call, WRONG_ARGUMENT_COUNT,
-              validator.getReadableJSTypeName(call.getFirstChild(), false),
-              String.valueOf(numArgs), String.valueOf(minArgs),
-              maxArgs != Integer.MAX_VALUE ?
-              " and no more than " + maxArgs + " argument(s)" : "");
+// Check for var-args
+if (functionType.hasVarArgs()) {
+  parameter = functionType.getVarArgsParameter();
+  while (arguments.hasNext()) {
+    argument = arguments.next();
+    ordinal++;
+    validator.expectArgumentMatchesParameter(t, argument, getJSType(argument), getJSType(parameter), call, ordinal);
+  }
+} else {
+  // No var-args, but there are extra arguments
+  if (arguments.hasNext()) {
+    report(t, call, TOO_MANY_ARGUMENTS, ...);
   }
 }
+
+// Check for too few arguments
+if (parameters.hasNext()) {
+  report(t, call, TOO_FEW_ARGUMENTS, ...);
+}
\ No newline at end of file
