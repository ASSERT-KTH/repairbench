diff --git a/tmp/3a8c9465-4163-4562-97e2-4165a4ef90a6_buggy.java b/tmp/c6599359-a35c-41ba-820c-5a4d5fbe893c_fixed.java
index d357c7e..88c1790 100644
--- a/tmp/3a8c9465-4163-4562-97e2-4165a4ef90a6_buggy.java
+++ b/tmp/c6599359-a35c-41ba-820c-5a4d5fbe893c_fixed.java
@@ -1,16 +1,22 @@
 private InputStream getCurrentStream() throws IOException {
     if (deferredBlockStreams.isEmpty()) {
+        // Check if the current entry is of size zero
+        if (currentEntry != null && currentEntry.getSize() == 0) {
+            // For size zero entries, return a stream that immediately reaches EOF
+            return new ByteArrayInputStream(new byte[0]);
+        } else {
             throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
         }
+    }
     
     while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
+        // In solid compression mode we need to decompress all leading folder's streams
+        // to get access to an entry. We defer this until really needed so that entire blocks
+        // can be skipped without wasting time for decompression.
         final InputStream stream = deferredBlockStreams.remove(0);
         IOUtils.skip(stream, Long.MAX_VALUE);
         stream.close();
     }
 
     return deferredBlockStreams.get(0);
 }
\ No newline at end of file
