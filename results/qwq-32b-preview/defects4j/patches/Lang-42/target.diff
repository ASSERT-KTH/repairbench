diff --git a/tmp/99847222-4859-44aa-b8d8-5650ee3f7b27_buggy.java b/tmp/61988122-0fe6-40da-afc7-1e2c72e8b59a_fixed.java
index 822447c..d550710 100644
--- a/tmp/99847222-4859-44aa-b8d8-5650ee3f7b27_buggy.java
+++ b/tmp/61988122-0fe6-40da-afc7-1e2c72e8b59a_fixed.java
@@ -1,37 +1,42 @@
     /**
      * <p>
      * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
      * passed.
      * </p>
      * 
      * @param writer
      *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
      * @param str
      *            The <code>String</code> to escape. Assumed to be a non-null value.
      * @throws IOException
      *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
      *             methods.
      * 
      * @see #escape(String)
      * @see Writer
      */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
         for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
+            int c = Character.codePointAt(str, i); 
             String entityName = this.entityName(c);
             if (entityName == null) {
-                if (c > 0x7F) {
+                if (c >= 0x010000 && i < len - 1) {
+                    writer.write("&#");
+                    writer.write(Integer.toString(c, 10));
+                    writer.write(';');
+                    i++;
+                } else if (c > 0x7F) { 
                     writer.write("&#");
                     writer.write(Integer.toString(c, 10));
                     writer.write(';');
                 } else {
                     writer.write(c);
                 }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
         }
     }
