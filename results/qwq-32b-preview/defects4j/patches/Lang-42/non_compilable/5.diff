diff --git a/tmp/c5bb0a44-fe12-42cd-a55d-b3f4a3832994_buggy.java b/tmp/69d0d59a-beee-4b49-b6cf-90a1975d02d1_fixed.java
index 822447c..250be09 100644
--- a/tmp/c5bb0a44-fe12-42cd-a55d-b3f4a3832994_buggy.java
+++ b/tmp/69d0d59a-beee-4b49-b6cf-90a1975d02d1_fixed.java
@@ -1,37 +1,10 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
-    public void escape(Writer writer, String str) throws IOException {
-        int len = str.length();
-        for (int i = 0; i < len; i++) {
-            char c = str.charAt(i);
-            String entityName = this.entityName(c);
-            if (entityName == null) {
-                if (c > 0x7F) {
-                    writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
-                    writer.write(';');
-                } else {
-                    writer.write(c);
-                }
-            } else {
-                writer.write('&');
-                writer.write(entityName);
-                writer.write(';');
-            }
-        }
-    }
+for each character in the string:
+    if character is high surrogate and next character is low surrogate:
+        combine into code point
+        write numeric entity for code point
+        skip the next character
+    else:
+        if character > 0x7F:
+            write numeric entity for character
+        else:
+            write character
\ No newline at end of file
