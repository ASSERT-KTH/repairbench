diff --git a/tmp/9dca7ae9-c136-4572-a911-870bcfd15b9a_buggy.java b/tmp/67313abe-6de4-42da-80da-5bf5e58adea2_fixed.java
index fc8c302..ae6f84c 100644
--- a/tmp/9dca7ae9-c136-4572-a911-870bcfd15b9a_buggy.java
+++ b/tmp/67313abe-6de4-42da-80da-5bf5e58adea2_fixed.java
@@ -1,23 +1,29 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n instanceof TextNode) {
+            TextNode tn = (TextNode) n;
+            String text = tn.asText();
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException e) {
+                throw new JsonParseException("Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), tn.getLocation());
+            }
+        } else {
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
-        // otherwise return null to mark we have no binary content
+    }
     return null;
 }
\ No newline at end of file
