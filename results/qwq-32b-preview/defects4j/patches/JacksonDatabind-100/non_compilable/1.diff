diff --git a/tmp/688d0d5c-90d6-427e-a8c8-a96183f55478_buggy.java b/tmp/d866159d-d4a0-45c9-a238-f84db592e548_fixed.java
index fc8c302..22621a1 100644
--- a/tmp/688d0d5c-90d6-427e-a8c8-a96183f55478_buggy.java
+++ b/tmp/d866159d-d4a0-45c9-a238-f84db592e548_fixed.java
@@ -1,23 +1,24 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+        if (n.isTextual()) {
+            // Decode the text content using the provided Base64Variant
+            try {
+                return b64variant.decode(n.textValue());
+            } catch (IllegalArgumentException e) {
+                // Handle cases where the string is not properly base64 encoded for the variant
+                throw new JsonParseException("Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), n.getLocation());
             }
-            if (n.isPojo()) {
+        } else if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
-        // otherwise return null to mark we have no binary content
+    // If none of the above cases match, return null
     return null;
 }
\ No newline at end of file
