diff --git a/tmp/58b3ee56-0289-461d-b2a3-24fc88c64c19_buggy.java b/tmp/8f8d9faa-9a5e-4370-bc62-842f5b54c0f9_fixed.java
index fc8c302..d036e0c 100644
--- a/tmp/58b3ee56-0289-461d-b2a3-24fc88c64c19_buggy.java
+++ b/tmp/8f8d9faa-9a5e-4370-bc62-842f5b54c0f9_fixed.java
@@ -1,23 +1,29 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
-            byte[] data = n.binaryValue();
-            if (data != null) {
-                return data;
+        if (n.isTextual()) {
+            try {
+                return b64variant.decode(n.textValue());
+            } catch (IllegalArgumentException e) {
+                // Decoding failed, perhaps due to bad encoding
+                return null;
             }
-            if (n.isPojo()) {
+        } else if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
+        } else {
+            // For other node types, try to get binary value directly
+            byte[] data = n.binaryValue();
+            if (data != null) {
+                return data;
             }
         }
-        // otherwise return null to mark we have no binary content
+    }
+    // If none of the above works, return null
     return null;
 }
\ No newline at end of file
