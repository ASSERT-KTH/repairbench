diff --git a/tmp/79ce37c9-4003-49fd-af55-9f8836dc71a9_buggy.java b/tmp/82ecec07-72f4-4716-b76f-86041c862899_fixed.java
index b36b2a9..7dec148 100644
--- a/tmp/79ce37c9-4003-49fd-af55-9f8836dc71a9_buggy.java
+++ b/tmp/82ecec07-72f4-4716-b76f-86041c862899_fixed.java
@@ -1,26 +1,39 @@
 JSType meet(JSType that) {
   UnionTypeBuilder builder = new UnionTypeBuilder(registry);
   for (JSType alternate : alternates) {
     if (alternate.isSubtype(that)) {
       builder.addAlternate(alternate);
     }
   }
 
   if (that instanceof UnionType) {
     for (JSType otherAlternate : ((UnionType) that).alternates) {
       if (otherAlternate.isSubtype(this)) {
         builder.addAlternate(otherAlternate);
       }
     }
   } else if (that.isSubtype(this)) {
     builder.addAlternate(that);
   }
   JSType result = builder.build();
   if (result != null) {
     return result;
-    } else if (this.isObject() && that.isObject()) {
-      return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
   } else {
-      return getNativeType(JSTypeNative.NO_TYPE);
+    // If both types are object types and no common subtype was found,
+    // return NO_OBJECT_TYPE; else, return NO_TYPE.
+    boolean bothObjects = isAllAlternatesObjects(this) && isAllAlternatesObjects(that);
+    return bothObjects ? getNativeType(JSTypeNative.NO_OBJECT_TYPE) : getNativeType(JSTypeNative.NO_TYPE);
   }
 }
+
+private boolean isAllAlternatesObjects(JSType type) {
+  if (type instanceof UnionType) {
+    for (JSType alternate : ((UnionType) type).alternates) {
+      if (!alternate.isObject()) {
+        return false;
+      }
+    }
+    return true;
+  }
+  return type.isObject();
+}
\ No newline at end of file
