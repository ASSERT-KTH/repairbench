diff --git a/tmp/ad692325-389d-4ce7-8f39-a16f3edb8b38_buggy.java b/tmp/6603b31e-bc49-48c7-8eb5-5257935d49a5_fixed.java
index b36b2a9..e5f8708 100644
--- a/tmp/ad692325-389d-4ce7-8f39-a16f3edb8b38_buggy.java
+++ b/tmp/6603b31e-bc49-48c7-8eb5-5257935d49a5_fixed.java
@@ -1,26 +1,34 @@
 JSType meet(JSType that) {
   UnionTypeBuilder builder = new UnionTypeBuilder(registry);
+  
+  // Add alternates from this union that are subtypes of 'that'
   for (JSType alternate : alternates) {
     if (alternate.isSubtype(that)) {
       builder.addAlternate(alternate);
     }
   }
   
+  // If 'that' is a union, add its alternates that are subtypes of this union
   if (that instanceof UnionType) {
     for (JSType otherAlternate : ((UnionType) that).alternates) {
       if (otherAlternate.isSubtype(this)) {
         builder.addAlternate(otherAlternate);
       }
     }
-    } else if (that.isSubtype(this)) {
+  } 
+  // If 'that' is a single type and is a subtype of this union, add it
+  else if (that.isSubtype(this)) {
     builder.addAlternate(that);
   }
+  
   JSType result = builder.build();
   if (result != null) {
     return result;
-    } else if (this.isObject() && that.isObject()) {
+  } 
+  // If no overlapping subtypes, handle based on object types
+  else if (this.isObject() && that.isObject()) {
     return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
   } else {
     return getNativeType(JSTypeNative.NO_TYPE);
   }
 }
\ No newline at end of file
