diff --git a/tmp/3bba2ec5-3368-4c35-83bb-fb056a3449b3_buggy.java b/tmp/d3972fdf-9d08-461f-85ce-3933bd3e449e_fixed.java
index be2af16..949d940 100644
--- a/tmp/3bba2ec5-3368-4c35-83bb-fb056a3449b3_buggy.java
+++ b/tmp/d3972fdf-9d08-461f-85ce-3933bd3e449e_fixed.java
@@ -1,29 +1,27 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                      hourOfDay, minuteOfHour,
+                                      secondOfMinute, millisOfSecond);
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
-                throw new IllegalArgumentException("Specified date does not exist");
+    // Determine which chronology to use based on the date.
+    if (year < iCutoverYear ||
+        (year == iCutoverYear && monthOfYear < iCutoverMonth) ||
+        (year == iCutoverYear && monthOfYear == iCutoverMonth && dayOfMonth < iCutoverDay)) {
+        // Date is before the cutover, use Julian chronology.
+        return iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                                   hourOfDay, minuteOfHour,
+                                                   secondOfMinute, millisOfSecond);
+    } else {
+        // Date is on or after the cutover, use Gregorian chronology.
+        return iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                                      hourOfDay, minuteOfHour,
+                                                      secondOfMinute, millisOfSecond);
     }
 }
\ No newline at end of file
-        return instant;
-    }
