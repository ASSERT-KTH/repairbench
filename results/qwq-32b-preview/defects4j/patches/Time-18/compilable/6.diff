diff --git a/tmp/506db3db-b5f3-41b8-962d-f9aa193a059d_buggy.java b/tmp/af989bf4-6151-46dd-9466-c29233341b69_fixed.java
index be2af16..387568a 100644
--- a/tmp/506db3db-b5f3-41b8-962d-f9aa193a059d_buggy.java
+++ b/tmp/af989bf4-6151-46dd-9466-c29233341b69_fixed.java
@@ -1,29 +1,37 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                      hourOfDay, minuteOfHour,
+                                      secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                                     hourOfDay, minuteOfHour,
+                                                     secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        // Check if the date is valid in Julian chronology.
+        try {
+            long julianInstant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,
+                                                                     hourOfDay, minuteOfHour,
+                                                                     secondOfMinute, millisOfSecond);
+            if (julianInstant >= iCutoverMillis) {
+                // The date is in the cutover gap, which is invalid.
                 throw new IllegalArgumentException("Specified date does not exist");
+            } else {
+                // Use the Julian date.
+                instant = julianInstant;
+            }
+        } catch (IllegalArgumentException e) {
+            // The date is invalid in both Gregorian and Julian.
+            throw e;
         }
     }
     return instant;
 }
\ No newline at end of file
