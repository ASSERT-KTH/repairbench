diff --git a/tmp/0aa09e4d-891f-43a0-b593-5cc866d21cb7_buggy.java b/tmp/50868b65-3c08-449b-b440-4e08da0fd82b_fixed.java
index 42b7b48..3086f46 100644
--- a/tmp/0aa09e4d-891f-43a0-b593-5cc866d21cb7_buggy.java
+++ b/tmp/50868b65-3c08-449b-b440-4e08da0fd82b_fixed.java
@@ -1,16 +1,15 @@
-    /**
-     * Adds 1 to the frequency count for v.
-     * <p>
-     * If other objects have already been added to this Frequency, v must
-     * be comparable to those that have already been added.
-     * </p>
-     * 
-     * @param v the value to add.
-     * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
-     *         or is not comparable with previous entries
-     * @deprecated use {@link #addValue(Comparable)} instead
-     */
 @Deprecated
 public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+    if (!(v instanceof Comparable)) {
+        throw new IllegalArgumentException("The provided object is not Comparable.");
+    }
+    @SuppressWarnings("unchecked")
+    Comparable<?> comparableV = (Comparable<?>) v;
+    if (!frequency.isEmpty()) {
+        Object firstKey = frequency.firstKey();
+        if (!comparableV.getClass().equals(firstKey.getClass())) {
+            throw new IllegalArgumentException("The provided object is not comparable with previous entries.");
+        }
+    }
+    addValue(comparableV);
 }
\ No newline at end of file
