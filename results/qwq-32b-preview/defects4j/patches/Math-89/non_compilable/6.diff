diff --git a/tmp/fba8a834-821b-439b-8f7d-1ca1a6475ac3_buggy.java b/tmp/ba087915-c568-47f1-ac70-96c413d3417b_fixed.java
index 42b7b48..ae10161 100644
--- a/tmp/fba8a834-821b-439b-8f7d-1ca1a6475ac3_buggy.java
+++ b/tmp/ba087915-c568-47f1-ac70-96c413d3417b_fixed.java
@@ -1,16 +1,31 @@
     /**
      * Adds 1 to the frequency count for v.
      * <p>
      * If other objects have already been added to this Frequency, v must
      * be comparable to those that have already been added.
      * </p>
      * 
      * @param v the value to add.
      * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
      *         or is not comparable with previous entries
      * @deprecated use {@link #addValue(Comparable)} instead
      */
     @Deprecated
     public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+        if (!(v instanceof Comparable)) {
+            throw new IllegalArgumentException("The object is not Comparable.");
+        }
+        @SuppressWarnings("unchecked")
+        Comparable<?> comparableV = (Comparable<?>) v;
+        
+        // Check if the Frequency already has entries
+        if (!frequency.isEmpty()) {
+            // Get the first key to check compatibility
+            Object firstKey = frequency.keySet().iterator().next();
+            if (!(firstKey.getClass().equals(v.getClass()))) {
+                throw new IllegalArgumentException("The object is not comparable with existing entries.");
+            }
+        }
+        
+        addValue(comparableV);
     }
\ No newline at end of file
