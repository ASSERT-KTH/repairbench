diff --git a/tmp/5d94ef1b-9918-4ddc-ba1f-260312636da1_buggy.java b/tmp/994f2e23-4217-43d3-9732-e09e079cb255_fixed.java
index 42b7b48..9b179e4 100644
--- a/tmp/5d94ef1b-9918-4ddc-ba1f-260312636da1_buggy.java
+++ b/tmp/994f2e23-4217-43d3-9732-e09e079cb255_fixed.java
@@ -1,16 +1,32 @@
 /**
  * Adds 1 to the frequency count for v.
  * <p>
  * If other objects have already been added to this Frequency, v must
  * be comparable to those that have already been added.
  * </p>
  * 
  * @param v the value to add.
  * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
  *         or is not comparable with previous entries
  * @deprecated use {@link #addValue(Comparable)} instead
  */
 @Deprecated
 public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+    if (!(v instanceof Comparable)) {
+        throw new IllegalArgumentException("Value is not Comparable");
+    }
+    
+    @SuppressWarnings("unchecked")
+    Comparable<?> cv = (Comparable<?>) v;
+    
+    // Check if Frequency already has entries and if cv is comparable to them
+    if (!isEmpty()) {
+        for (Object existing : keys()) {
+            if (!(cv.compareTo(existing) != 0)) {
+                throw new IllegalArgumentException("Value is not comparable with existing entries");
+            }
+        }
+    }
+    
+    addValue(cv);
 }
\ No newline at end of file
