diff --git a/tmp/fc9c0add-e179-4188-97b5-a737d98488f0_buggy.java b/tmp/96d57456-e8ae-4c09-9b6a-f0d2cbb4dc2b_fixed.java
index 98dde53..e1d4ec5 100644
--- a/tmp/fc9c0add-e179-4188-97b5-a737d98488f0_buggy.java
+++ b/tmp/96d57456-e8ae-4c09-9b6a-f0d2cbb4dc2b_fixed.java
@@ -1,34 +1,66 @@
 public void head(org.jsoup.nodes.Node source, int depth) {
+    boolean isHtml = !source.document().isXml();
+    if (isHtml) {
+        // For HTML documents, do not handle namespaces.
+    } else {
         namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
         if (source instanceof org.jsoup.nodes.Element) {
             org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
-
             String prefix = updateNamespaces(sourceEl);
             String namespace = namespacesStack.peek().get(prefix);
             String tagName = sourceEl.tagName();
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
+            Element el = doc.createElementNS(namespace, tagName);
             copyAttributes(sourceEl, el);
             if (dest == null) { // sets up the root
                 doc.appendChild(el);
             } else {
                 dest.appendChild(el);
             }
             dest = el; // descend
         } else if (source instanceof org.jsoup.nodes.TextNode) {
             org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
             Text text = doc.createTextNode(sourceText.getWholeText());
             dest.appendChild(text);
         } else if (source instanceof org.jsoup.nodes.Comment) {
             org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
             Comment comment = doc.createComment(sourceComment.getData());
             dest.appendChild(comment);
         } else if (source instanceof org.jsoup.nodes.DataNode) {
             org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
             Text node = doc.createTextNode(sourceData.getWholeData());
             dest.appendChild(node);
         } else {
             // unhandled
         }
     }
+
+    if (isHtml) {
+        if (source instanceof org.jsoup.nodes.Element) {
+            org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
+            String tagName = sourceEl.tagName();
+            Element el = doc.createElementNS(null, tagName);
+            copyAttributes(sourceEl, el);
+            if (dest == null) { // sets up the root
+                doc.appendChild(el);
+            } else {
+                dest.appendChild(el);
+            }
+            dest = el; // descend
+        } else if (source instanceof org.jsoup.nodes.TextNode) {
+            org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
+            Text text = doc.createTextNode(sourceText.getWholeText());
+            dest.appendChild(text);
+        } else if (source instanceof org.jsoup.nodes.Comment) {
+            org.jsxss.nodes.Comment sourceComment = (org.jsxss.nodes.Comment) source;
+            Comment comment = doc.createComment(sourceComment.getData());
+            dest.appendChild(comment);
+        } else if (source instanceof org.jsoup.nodes.DataNode) {
+            org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
+            Text node = doc.createTextNode(sourceData.getWholeData());
+            dest.appendChild(node);
+        } else {
+            // unhandled
+        }
+    }
+}
\ No newline at end of file
