diff --git a/tmp/9ad2ce5b-05bd-4b6c-9dbe-4ceab3dd2e3a_buggy.java b/tmp/c8743b8f-2396-47cc-b4cf-a135ce705266_fixed.java
index 877a1a1..2298e39 100644
--- a/tmp/9ad2ce5b-05bd-4b6c-9dbe-4ceab3dd2e3a_buggy.java
+++ b/tmp/c8743b8f-2396-47cc-b4cf-a135ce705266_fixed.java
@@ -1,14 +1,27 @@
 /**
  * Returns the percentage of values that are equal to v
  * (as a proportion between 0 and 1).
  * <p>
  * Returns <code>Double.NaN</code> if no values have been added.</p>
  *
  * @param v the value to lookup
  * @return the proportion of values equal to v
  * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
  */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    if (v == null) {
+        throw new NullPointerException("The value to lookup cannot be null");
+    }
+    int count = 0;
+    int n = getN();
+    if (n == 0) {
+        return Double.NaN;
+    }
+    for (E element : values) {
+        if (v.equals(element)) {
+            count += frequency.get(element);
+        }
+    }
+    return (double) count / n;
 }
\ No newline at end of file
