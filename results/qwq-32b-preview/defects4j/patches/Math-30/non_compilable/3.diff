diff --git a/tmp/97ba8bb1-4595-40fc-a75b-44c1d12a0632_buggy.java b/tmp/bdf0d091-6ca7-4f3c-bece-91e963e0f8f2_fixed.java
index 3c69e10..0afb5b8 100644
--- a/tmp/97ba8bb1-4595-40fc-a75b-44c1d12a0632_buggy.java
+++ b/tmp/bdf0d091-6ca7-4f3c-bece-91e963e0f8f2_fixed.java
@@ -1,27 +1,9 @@
-    /**
-     * @param Umin smallest Mann-Whitney U value
-     * @param n1 number of subjects in first sample
-     * @param n2 number of subjects in second sample
-     * @return two-sided asymptotic p-value
-     * @throws ConvergenceException if the p-value can not be computed
-     * due to a convergence error
-     * @throws MaxCountExceededException if the maximum number of
-     * iterations is exceeded
-     */
-    private double calculateAsymptoticPValue(final double Umin,
-                                             final int n1,
-                                             final int n2)
-        throws ConvergenceException, MaxCountExceededException {
-
-        final int n1n2prod = n1 * n2;
-
-        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
-        final double EU = n1n2prod / 2.0;
-        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
-
-        final double z = (Umin - EU) / FastMath.sqrt(VarU);
-
-        final NormalDistribution standardNormal = new NormalDistribution(0, 1);
-
-        return 2 * standardNormal.cumulativeProbability(z);
+double correction;
+if (Umin < EU) {
+    correction = 0.5;
+} else if (Umin > EU) {
+    correction = -0.5;
+} else {
+    correction = 0.0;
 }
+final double z = (Umin - EU + correction) / FastMath.sqrt(VarU);
\ No newline at end of file
