diff --git a/tmp/d33397d9-e5c5-49d0-a449-7a68aa34c4be_buggy.java b/tmp/ce66c93c-d6ef-44e5-b585-d82b501bdf1a_fixed.java
index f7bc541..3b1b436 100644
--- a/tmp/d33397d9-e5c5-49d0-a449-7a68aa34c4be_buggy.java
+++ b/tmp/ce66c93c-d6ef-44e5-b585-d82b501bdf1a_fixed.java
@@ -1,14 +1,26 @@
 /**
-     Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.
-     The original document is not modified. Only elements from the dirt document's <code>body</code> are used.
-     @param dirtyDocument Untrusted base document to clean.
-     @return cleaned document.
+ * Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.
+ * The original document is not modified. Elements from the dirt document's <code>body</code> or <code>frameset</code>
+ * are used based on the document structure.
+ *
+ * @param dirtyDocument Untrusted base document to clean.
+ * @return cleaned document.
  */
 public Document clean(Document dirtyDocument) {
     Validate.notNull(dirtyDocument);
 
     Document clean = Document.createShell(dirtyDocument.baseUri());
-            copySafeNodes(dirtyDocument.body(), clean.body());
+
+    Element dirtyBody = dirtyDocument.body();
+    Element dirtyFrameset = dirtyDocument.select("frameset").first();
+
+    if (dirtyFrameset != null) {
+        // Handle frameset documents
+        copySafeNodes(dirtyFrameset, clean.body());
+    } else if (dirtyBody != null) {
+        // Handle regular documents
+        copySafeNodes(dirtyBody, clean.body());
+    }
 
     return clean;
 }
\ No newline at end of file
