diff --git a/tmp/51605370-db1f-4332-903b-e5d5a2077959_buggy.java b/tmp/17d0e623-a806-45d0-a616-c13c289c6d96_fixed.java
index 9353941..41b6114 100644
--- a/tmp/51605370-db1f-4332-903b-e5d5a2077959_buggy.java
+++ b/tmp/17d0e623-a806-45d0-a616-c13c289c6d96_fixed.java
@@ -1,30 +1,10 @@
-  /**
-   * Give an expression and a variable. It returns READ, if the first
-   * reference of that variable is a read. It returns KILL, if the first
-   * reference of that variable is an assignment. It returns MAY_LIVE otherwise.
-   */
-  private VariableLiveness isVariableReadBeforeKill(
-      Node n, String variable) {
 if (NodeUtil.isName(n) && variable.equals(n.getString())) {
   if (NodeUtil.isLhs(n, n.getParent())) {
     // The expression to which the assignment is made is evaluated before
     // the RHS is evaluated (normal left to right evaluation) but the KILL
     // occurs after the RHS is evaluated.
     return VariableLiveness.KILL;
   } else {
     return VariableLiveness.READ;
   }
 }
\ No newline at end of file
-
-    // Expressions are evaluated left-right, depth first.
-    for (Node child = n.getFirstChild();
-        child != null; child = child.getNext()) {
-      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
-        VariableLiveness state = isVariableReadBeforeKill(child, variable);
-        if (state != VariableLiveness.MAYBE_LIVE) {
-          return state;
-        }
-      }
-    }
-    return VariableLiveness.MAYBE_LIVE;
-  }
