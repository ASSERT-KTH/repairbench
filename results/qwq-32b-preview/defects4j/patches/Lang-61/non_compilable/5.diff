diff --git a/tmp/da65c873-9696-4c78-9efd-535afd67a769_buggy.java b/tmp/da80409a-4c9c-40d6-b4ac-cfe2d0127dc9_fixed.java
index addeb8d..209c0b3 100644
--- a/tmp/da65c873-9696-4c78-9efd-535afd67a769_buggy.java
+++ b/tmp/da80409a-4c9c-40d6-b4ac-cfe2d0127dc9_fixed.java
@@ -1,38 +1,4 @@
-    /**
-     * Searches the string builder to find the first reference to the specified
-     * string starting searching from the given index.
-     * <p>
-     * Note that a null input string will return -1, whereas the JDK throws an exception.
-     * 
-     * @param str  the string to find, null returns -1
-     * @param startIndex  the index to start at, invalid index rounded to edge
-     * @return the first index of the string, or -1 if not found
-     */
-    public int indexOf(String str, int startIndex) {
 startIndex = (startIndex < 0 ? 0 : startIndex);
 if (str == null || startIndex >= size) {
     return -1;
 }
\ No newline at end of file
-        int strLen = str.length();
-        if (strLen == 1) {
-            return indexOf(str.charAt(0), startIndex);
-        }
-        if (strLen == 0) {
-            return startIndex;
-        }
-        if (strLen > size) {
-            return -1;
-        }
-        char[] thisBuf = buffer;
-        int len = thisBuf.length - strLen;
-        outer:
-        for (int i = startIndex; i < len; i++) {
-            for (int j = 0; j < strLen; j++) {
-                if (str.charAt(j) != thisBuf[i + j]) {
-                    continue outer;
-                }
-            }
-            return i;
-        }
-        return -1;
-    }
