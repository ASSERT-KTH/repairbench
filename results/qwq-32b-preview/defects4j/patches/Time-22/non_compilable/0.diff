diff --git a/tmp/4b5df97e-094c-4038-abe4-5f09095091d1_buggy.java b/tmp/eda65dc2-1cc2-4d56-8a93-1728fd263e05_fixed.java
index 5b8a4d2..aa8433d 100644
--- a/tmp/4b5df97e-094c-4038-abe4-5f09095091d1_buggy.java
+++ b/tmp/eda65dc2-1cc2-4d56-8a93-1728fd263e05_fixed.java
@@ -1,12 +1,19 @@
-    /**
-     * Creates a period from the given millisecond duration with the standard period type
-     * and ISO rules, ensuring that the calculation is performed with the time-only period type.
-     * <p>
-     * The calculation uses the hour, minute, second and millisecond fields.
-     *
-     * @param duration  the duration, in milliseconds
-     */
 protected BasePeriod(long duration) {
     this(duration, null, null);
-        // bug [3264409]
+    // Fix for bug [3264409]
+    if (getPeriodType().equals(PeriodType.time())) {
+        long days = getValues()[PeriodType.day.getFieldIndex()];
+        long hours = getValues()[PeriodType.hour.getFieldIndex()];
+        long minutes = getValues()[PeriodType.minute.getFieldIndex()];
+        long seconds = getValues()[PeriodType.second.getFieldIndex()];
+        long millis = getValues()[PeriodType.millisecond.getFieldIndex()];
+        
+        // Convert days to hours
+        hours += days * 24;
+        
+        // Set the updated values
+        setValues(new long[] {
+            0, 0, 0, 0, hours, minutes, seconds, millis
+        });
+    }
 }
\ No newline at end of file
