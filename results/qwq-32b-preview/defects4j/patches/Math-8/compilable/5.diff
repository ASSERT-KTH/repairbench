diff --git a/tmp/27767a53-ee3c-4798-a94d-87d417e0b0cb_buggy.java b/tmp/985736b6-9c69-43e9-883d-0d7d440ec1cd_fixed.java
index bfa2423..91365e6 100644
--- a/tmp/27767a53-ee3c-4798-a94d-87d417e0b0cb_buggy.java
+++ b/tmp/985736b6-9c69-43e9-883d-0d7d440ec1cd_fixed.java
@@ -1,23 +1,17 @@
-    /**
-     * Generate a random sample from the distribution.
-     *
-     * @param sampleSize the number of random values to generate.
-     * @return an array representing the random sample.
-     * @throws NotStrictlyPositiveException if {@code sampleSize} is not
-     * positive.
-     */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                 sampleSize);
     }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+    // Determine the component type of the array
+    Class<?> componentType = singletons.get(0).getClass();
+    @SuppressWarnings("unchecked")
+    final T[] out = (T[]) java.lang.reflect.Array.newInstance(componentType, sampleSize);
 
     for (int i = 0; i < sampleSize; i++) {
         out[i] = sample();
     }
 
     return out;
-
 }
\ No newline at end of file
