diff --git a/tmp/2d37f317-8a11-43f9-8056-f46f3a3c8f4a_buggy.java b/tmp/f27a3a32-e870-4075-b4e7-73a1bfe717c2_fixed.java
index 71189c3..1f5cba4 100644
--- a/tmp/2d37f317-8a11-43f9-8056-f46f3a3c8f4a_buggy.java
+++ b/tmp/f27a3a32-e870-4075-b4e7-73a1bfe717c2_fixed.java
@@ -1,46 +1,17 @@
-    public void validate(final WriteableCommandLine commandLine)
-        throws OptionException {
-        // number of options found
-        int present = 0;
-
-        // reference to first unexpected option
-        Option unexpected = null;
-
-        for (final Iterator i = options.iterator(); i.hasNext();) {
-            final Option option = (Option) i.next();
-
-            // needs validation?
-            boolean validate = option.isRequired() || option instanceof Group;
-            if (validate) {
-                option.validate(commandLine);
-            }
-
-            // if the child option is present then validate it
-            if (commandLine.hasOption(option)) {
-                if (++present > maximum) {
-                    unexpected = option;
-
-                    break;
-                }
-
-                option.validate(commandLine);
-            }
-        }
-
-        // too many options
-        if (unexpected != null) {
-            throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
-                                      unexpected.getPreferredName());
-        }
-
-        // too few option
-        if (present < minimum) {
-            throw new OptionException(this, ResourceConstants.MISSING_OPTION);
-        }
-
-        // validate each anonymous argument
-        for (final Iterator i = anonymous.iterator(); i.hasNext();) {
-            final Option option = (Option) i.next();
-            option.validate(commandLine);
-        }
-    }
+DefaultOption fileNameOption = obuilder.withShortName("f")
+        .withLongName("file-name").withRequired(true).withDescription(
+                "name of an existing file").withArgument(
+                abuilder.withName("file-name").withValidator(
+                        FileValidator.getExistingFileInstance())
+                        .create()).create();
+Group options = gbuilder.withName("options").withOption(fileNameOption)
+        .create();
+Parser parser = new Parser();
+parser.setHelpTrigger("--help");
+parser.setGroup(options);
+
+final String fileName = "src/test/org/apache/commons/cli2/bug/BugCLI144Test.java";
+CommandLine cl = parser
+        .parseAndHelp(new String[] { "--file-name", fileName });
+assertNotNull(cl);
+assertEquals("Wrong file", new File(fileName), cl.getValue(fileNameOption));
\ No newline at end of file
