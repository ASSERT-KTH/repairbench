diff --git a/tmp/bab2942d-5575-4238-98f4-adc48e7af2d7_buggy.java b/tmp/287c052f-88e6-4b39-bf56-415aa3250ee8_fixed.java
index 19fd63e..39eba6f 100644
--- a/tmp/bab2942d-5575-4238-98f4-adc48e7af2d7_buggy.java
+++ b/tmp/287c052f-88e6-4b39-bf56-415aa3250ee8_fixed.java
@@ -1,24 +1,21 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+      // Check if the child is an expression
+      if (NodeUtil.isExpressionNode(maybeExpr)) {
+        // Exclude EXPR_RESULT nodes to work around IE bug
+        if (maybeExpr.getType() == Token.EXPR_RESULT) {
+          return false;
+        }
+        // Additional checks can be added here if needed
+        return true;
+      }
     }
   }
-
   return false;
 }
\ No newline at end of file
