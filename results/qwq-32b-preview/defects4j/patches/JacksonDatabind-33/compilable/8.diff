diff --git a/tmp/b37f9418-572b-46bd-83f9-38709490d3b4_buggy.java b/tmp/d5975362-cd3b-444a-8b68-4b42465f13c9_fixed.java
index 3cb9232..36231e0 100644
--- a/tmp/b37f9418-572b-46bd-83f9-38709490d3b4_buggy.java
+++ b/tmp/d5975362-cd3b-444a-8b68-4b42465f13c9_fixed.java
@@ -1,26 +1,29 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
+public PropertyName findNameForSerialization(Annotated a) {
     String name = null;
 
+    // Check for JsonGetter annotation first
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
+        // If JsonGetter is not present, check for JsonProperty annotation
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
+        } else {
+            // Check for other annotations that might indicate serialization
+            if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
                     || _hasAnnotation(a, JsonRawValue.class)) {
                 name = "";
             } else {
+                // If none of the above annotations are present, return null
                 return null;
             }
         }
+    }
+
+    // Construct and return the PropertyName object
     return PropertyName.construct(name);
 }
\ No newline at end of file
