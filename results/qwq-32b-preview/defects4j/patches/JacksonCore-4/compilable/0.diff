diff --git a/tmp/2e1c4966-f204-4fb9-bb49-e8fa5cde28b7_buggy.java b/tmp/f6320006-e1de-414f-8ff5-eece8602ac6f_fixed.java
index c6cb157..39a8779 100644
--- a/tmp/2e1c4966-f204-4fb9-bb49-e8fa5cde28b7_buggy.java
+++ b/tmp/f6320006-e1de-414f-8ff5-eece8602ac6f_fixed.java
@@ -1,14 +1,19 @@
-    /**
-     * Method called to expand size of the current segment, to
-     * accommodate for more contiguous content. Usually only
-     * used when parsing tokens like names if even then.
-     */
 public char[] expandCurrentSegment()
 {
     final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
     final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+
+    int newLen;
+    if (len == MAX_SEGMENT_LEN) {
+        // When at MAX_SEGMENT_LEN, increase by 25%
+        newLen = len + (len >> 2); // len + len/8, which is 12.5%, but adjusted for simplicity
+        if (newLen <= len) {
+            // Handle potential integer overflow or other issues
+            newLen = Integer.MAX_VALUE; // or some other suitable large value
+        }
+    } else {
+        // Otherwise, grow by 50%
+        newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    }
     return (_currentSegment = Arrays.copyOf(curr, newLen));
 }
\ No newline at end of file
