diff --git a/tmp/d3932500-2fd4-46f9-976b-5364f9a96a39_buggy.java b/tmp/81b563c5-bebf-4a6d-937e-541b79fc8560_fixed.java
index c6cb157..0c78f1d 100644
--- a/tmp/d3932500-2fd4-46f9-976b-5364f9a96a39_buggy.java
+++ b/tmp/81b563c5-bebf-4a6d-937e-541b79fc8560_fixed.java
@@ -1,14 +1,24 @@
 /**
  * Method called to expand size of the current segment, to
  * accommodate for more contiguous content. Usually only
  * used when parsing tokens like names if even then.
  */
-    public char[] expandCurrentSegment()
-    {
+public char[] expandCurrentSegment() {
     final char[] curr = _currentSegment;
-        // Let's grow by 50% by default
     final int len = curr.length;
-        // but above intended maximum, slow to increase by 25%
-        int newLen = (len == MAX_SEGMENT_LEN) ? (MAX_SEGMENT_LEN+1) : Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    int newLen;
+
+    // Always try to grow by 50%, but cap at MAX_SEGMENT_LEN unless already at MAX_SEGMENT_LEN
+    if (len == MAX_SEGMENT_LEN) {
+        newLen = MAX_SEGMENT_LEN + (MAX_SEGMENT_LEN >> 1); // Grow by 50%
+    } else {
+        newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));
+    }
+
+    // Ensure that the new length is greater than the current length
+    if (newLen <= len) {
+        newLen = Math.max(len + 1, newLen); // At least increase by 1
+    }
+
     return (_currentSegment = Arrays.copyOf(curr, newLen));
 }
\ No newline at end of file
