diff --git a/tmp/247f6019-fc07-437c-abbf-3954566d23e6_buggy.java b/tmp/c30ae6d9-0347-49e9-ac18-ecb65bd5ec03_fixed.java
index 0f439b3..778f063 100644
--- a/tmp/247f6019-fc07-437c-abbf-3954566d23e6_buggy.java
+++ b/tmp/c30ae6d9-0347-49e9-ac18-ecb65bd5ec03_fixed.java
@@ -1,38 +1,25 @@
-    /**
-     * Reads bytes from the current tar archive entry.
-     *
-     * This method is aware of the boundaries of the current
-     * entry in the archive and will deal with them as if they
-     * were this stream's start and EOF.
-     *
-     * @param buf The buffer into which to place bytes read.
-     * @param offset The offset at which to place bytes read.
-     * @param numToRead The number of bytes to read.
-     * @return The number of bytes read, or -1 at EOF.
-     * @throws IOException on error
-     */
 @Override
 public int read(byte[] buf, int offset, int numToRead) throws IOException {
-    	int totalRead = 0;
-
     if (hasHitEOF || entryOffset >= entrySize) {
         return -1;
     }
 
     if (currEntry == null) {
         throw new IllegalStateException("No current tar entry");
     }
 
-        numToRead = Math.min(numToRead, available());
-        
-        totalRead = is.read(buf, offset, numToRead);
+    numToRead = Math.min(numToRead, entrySize - entryOffset);
+    int totalRead = is.read(buf, offset, numToRead);
     count(totalRead);
 
-        if (totalRead == -1) {
+    if (totalRead < 0) {
         hasHitEOF = true;
+        if (entryOffset < entrySize) {
+            throw new IOException("Truncated tar entry: expected " + entrySize + " bytes, but only " + entryOffset + " bytes read");
+        }
     } else {
         entryOffset += totalRead;
     }
 
     return totalRead;
 }
\ No newline at end of file
