diff --git a/tmp/b6e283c0-2db1-4941-bbb0-489459ee0f33_buggy.java b/tmp/43647d83-febd-4d5b-ba2d-9ea4bd8e76c2_fixed.java
index 139579d..38f5f45 100644
--- a/tmp/b6e283c0-2db1-4941-bbb0-489459ee0f33_buggy.java
+++ b/tmp/43647d83-febd-4d5b-ba2d-9ea4bd8e76c2_fixed.java
@@ -1,43 +1,17 @@
-    // performance sensitive
-    public boolean hasClass(String className) {
-        final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
-            return false;
-        }
-
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
 for (int i = 0; i < len; i++) {
     if (Character.isWhitespace(classAttr.charAt(i))) {
         if (inClass) {
             // whitespace ends a class name, compare it with the requested one, ignore case
             if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
                 return true;
             }
             inClass = false;
         }
     } else {
         if (!inClass) {
             // we're in a class name: keep the start of the substring
             inClass = true;
             start = i;
         }
     }
 }
\ No newline at end of file
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
-
-        return false;
-    }
