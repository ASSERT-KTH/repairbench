diff --git a/tmp/184793b3-d21e-4a47-a377-9227ce398da7_buggy.java b/tmp/ced716c0-bdcd-4a8f-8ad0-c2452f1bf2a1_fixed.java
index de9af32..25bd2fc 100644
--- a/tmp/184793b3-d21e-4a47-a377-9227ce398da7_buggy.java
+++ b/tmp/ced716c0-bdcd-4a8f-8ad0-c2452f1bf2a1_fixed.java
@@ -1,18 +1,23 @@
 /**
  * @see #findCalledFunctions(Node)
  */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
   Preconditions.checkArgument(changed != null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node callee = node.getFirstChild();
+    if (callee.getType() == Token.NAME) {
+      changed.add(callee.getString());
+    } else if (callee.getType() == Token.GETPROP) {
+      // Handle property accesses like obj.method
+      Node nameNode = callee.getLastChild();
+      if (nameNode.getType() == Token.STRING) {
+        changed.add(nameNode.getString());
+      }
     }
   }
 
   for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
