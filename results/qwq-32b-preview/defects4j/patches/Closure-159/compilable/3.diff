diff --git a/tmp/5c9a12b0-b0a0-47f2-860d-c1a81a399c26_buggy.java b/tmp/e5ede399-0055-4c09-a4db-24c863dbdd22_fixed.java
index de9af32..c03a3d4 100644
--- a/tmp/5c9a12b0-b0a0-47f2-860d-c1a81a399c26_buggy.java
+++ b/tmp/e5ede399-0055-4c09-a4db-24c863dbdd22_fixed.java
@@ -1,18 +1,27 @@
-  /**
-   * @see #findCalledFunctions(Node)
-   */
-  private void findCalledFunctions(
-      Node node, Set<String> changed) {
+private void findCalledFunctions(Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
-    // For each referenced function, add a new reference
+
+    // Check if the node is a call expression
     if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+        // Get the expression being called
+        Node callee = node.getFirstChild();
+
+        // If the callee is a name node, add its name to the set
+        if (callee.getType() == Token.NAME) {
+            changed.add(callee.getString());
+        }
+        // If the callee is a member expression, try to extract the property name
+        else if (callee.getType() == Token.GETPROP) {
+            Node property = callee.getLastChild();
+            if (property.getType() == Token.STRING) {
+                changed.add(property.getString());
+            }
         }
+        // Handle other possible callee types if necessary
     }
 
+    // Recurse into all children
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
         findCalledFunctions(c, changed);
     }
 }
\ No newline at end of file
