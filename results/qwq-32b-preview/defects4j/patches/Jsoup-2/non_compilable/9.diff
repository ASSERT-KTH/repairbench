diff --git a/tmp/159a917d-8958-42c6-8414-e8782a0bf148_buggy.java b/tmp/c7d2ee8c-9c6a-4b97-8a52-1e7edba7ccf9_fixed.java
index 1b29465..e478677 100644
--- a/tmp/159a917d-8958-42c6-8414-e8782a0bf148_buggy.java
+++ b/tmp/c7d2ee8c-9c6a-4b97-8a52-1e7edba7ccf9_fixed.java
@@ -1,50 +1,5 @@
-    private void parseStartTag() {
-        tq.consume("<");
-        String tagName = tq.consumeWord();
-
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
-            tq.addFirst("&lt;");
-            parseTextNode();
-            return;
-        }
-
-        Attributes attributes = new Attributes();
-        while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
-            Attribute attribute = parseAttribute();
-            if (attribute != null)
-                attributes.put(attribute);
-        }
-
-        Tag tag = Tag.valueOf(tagName);
-        Element child = new Element(tag, baseUri, attributes);
-
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
-            isEmptyElement = true;
-        } else {
-            tq.matchChomp(">");
-        }
-        addChildToParent(child, isEmptyElement);
-
-        // pc data only tags (textarea, script): chomp to end tag, add content as text node
-        if (tag.isData()) {
-            String data = tq.chompTo("</" + tagName);
-            tq.chompTo(">");
-            
-            Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
-                dataNode = TextNode.createFromEncoded(data, baseUri);
-            else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
-            child.appendChild(dataNode);   
-        }
-
-        // <base href>: update the base uri
-        if (child.tagName().equals("base")) {
-            String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
-                baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
-            }
-        }
+@Test public void handlesTextAfterData() {
+    String h = "<html><body>pre <script>inner</script> aft</body></html>";
+    Document doc = Jsoup.parse(h);
+    assertEquals("<html><head></head><body>pre <script>inner</script> aft</body></html>", TextUtil.stripNewlines(doc.html()));
 }
\ No newline at end of file
