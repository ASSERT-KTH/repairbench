diff --git a/tmp/e43435b6-d7f1-4c4c-bd17-1c04e98b09b2_buggy.java b/tmp/37a3ca99-a42f-4ad8-ae40-129a29a8a260_fixed.java
index 735a993..698d635 100644
--- a/tmp/e43435b6-d7f1-4c4c-bd17-1c04e98b09b2_buggy.java
+++ b/tmp/37a3ca99-a42f-4ad8-ae40-129a29a8a260_fixed.java
@@ -1,29 +1,39 @@
 /**
  * Appends an object to the builder padding on the right to a fixed length.
  * The <code>toString</code> of the object is used.
  * If the object is larger than the length, the right hand side is lost.
  * If the object is null, null text value is used.
  * 
  * @param obj      the object to append, null uses null text
  * @param width    the fixed field width, zero or negative has no effect
  * @param padChar  the pad character to use
  * @return this, to enable chaining
  */
 public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
     if (width > 0) {
-            ensureCapacity(size + width);
+        // Calculate the length of the string to append
         String str = (obj == null ? getNullText() : obj.toString());
         int strLen = str.length();
-            if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
-            } else {
-                int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
+        
+        // Determine the number of characters to append (either the string or up to width)
+        int charsToAppend = Math.min(strLen, width);
+        
+        // Ensure the buffer has enough capacity
+        ensureCapacity(size + width);
+        
+        // Copy the string characters into the buffer
+        str.getChars(strLen - charsToAppend, strLen, buffer, size);
+        
+        // Calculate padding length
+        int padLen = width - charsToAppend;
+        
+        // Append padding characters
         for (int i = 0; i < padLen; i++) {
-                    buffer[size + strLen + i] = padChar;
-                }
+            buffer[size + charsToAppend + i] = padChar;
         }
+        
+        // Update the size
         size += width;
     }
     return this;
 }
\ No newline at end of file
