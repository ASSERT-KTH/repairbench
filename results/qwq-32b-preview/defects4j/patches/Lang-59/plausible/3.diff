diff --git a/tmp/736ad289-781f-413f-ae2e-5ae210190a06_buggy.java b/tmp/9c888380-fc7c-4637-a30e-ec72e8ec906a_fixed.java
index 735a993..819366a 100644
--- a/tmp/736ad289-781f-413f-ae2e-5ae210190a06_buggy.java
+++ b/tmp/9c888380-fc7c-4637-a30e-ec72e8ec906a_fixed.java
@@ -1,29 +1,26 @@
-    /**
-     * Appends an object to the builder padding on the right to a fixed length.
-     * The <code>toString</code> of the object is used.
-     * If the object is larger than the length, the right hand side is lost.
-     * If the object is null, null text value is used.
-     * 
-     * @param obj  the object to append, null uses null text
-     * @param width  the fixed field width, zero or negative has no effect
-     * @param padChar  the pad character to use
-     * @return this, to enable chaining
-     */
 public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {
     if (width > 0) {
-            ensureCapacity(size + width);
+        // Calculate the required capacity and ensure it's available
+        int requiredCapacity = size + width;
+        ensureCapacity(requiredCapacity);
+
         String str = (obj == null ? getNullText() : obj.toString());
         int strLen = str.length();
+
         if (strLen >= width) {
-                str.getChars(0, strLen, buffer, size);
+            // If the string is longer than the width, append only the leftmost characters
+            int charsToCopy = width;
+            str.getChars(0, charsToCopy, buffer, size);
+            size += charsToCopy;
         } else {
+            // If the string is shorter than the width, append the string and pad with padChar
+            str.getChars(0, strLen, buffer, size);
+            size += strLen;
             int padLen = width - strLen;
-                str.getChars(0, strLen, buffer, size);
             for (int i = 0; i < padLen; i++) {
-                    buffer[size + strLen + i] = padChar;
+                buffer[size++] = padChar;
             }
         }
-            size += width;
     }
     return this;
 }
\ No newline at end of file
