diff --git a/tmp/9317c18b-40b0-4534-b4e3-cc658ec9f7db_buggy.java b/tmp/c0266700-9807-4971-8635-e8e6c44cd72a_fixed.java
index 39c4220..4772d5c 100644
--- a/tmp/9317c18b-40b0-4534-b4e3-cc658ec9f7db_buggy.java
+++ b/tmp/c0266700-9807-4971-8635-e8e6c44cd72a_fixed.java
@@ -1,21 +1,31 @@
 private final static int _parseIndex(String str) {
     final int len = str.length();
-        // [Issue#133]: beware of super long indexes; assume we never
-        // have arrays over 2 billion entries so ints are fine.
+    // Check for empty string or strings longer than 10 characters
     if (len == 0 || len > 10) {
         return -1;
     }
+    // Check each character to ensure it is a digit
     for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
+        char c = str.charAt(i);
+        if (c < '0' || c > '9') {
             return -1;
         }
     }
+    // For strings of length 10, ensure they don't represent a number larger than Integer.MAX_VALUE
     if (len == 10) {
-            long l = NumberInput.parseLong(str);
+        try {
+            long l = Long.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
+        } catch (NumberFormatException e) {
+            return -1;
+        }
+    }
+    // Parse the integer value
+    try {
+        return Integer.parseInt(str);
+    } catch (NumberFormatException e) {
+        return -1;
     }
-        return NumberInput.parseInt(str);
 }
\ No newline at end of file
