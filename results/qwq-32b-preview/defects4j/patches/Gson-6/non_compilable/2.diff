diff --git a/tmp/226d9fc9-e80f-483a-bcce-5c52e45e9085_buggy.java b/tmp/0f0785a2-4f95-4474-9f03-d1459c1e59c3_fixed.java
index 1c53d31..24491b7 100644
--- a/tmp/226d9fc9-e80f-483a-bcce-5c52e45e9085_buggy.java
+++ b/tmp/0f0785a2-4f95-4474-9f03-d1459c1e59c3_fixed.java
@@ -1,20 +1,3 @@
-  @SuppressWarnings("unchecked") // Casts guarded by conditionals.
-  static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
-      TypeToken<?> fieldType, JsonAdapter annotation) {
-    Class<?> value = annotation.value();
-    TypeAdapter<?> typeAdapter;
-    if (TypeAdapter.class.isAssignableFrom(value)) {
-      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
-    } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
-    } else {
-      throw new IllegalArgumentException(
-          "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
-    }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+if (typeAdapter == null) {
+  throw new IllegalStateException("TypeAdapter cannot be null");
 }
\ No newline at end of file
