diff --git a/tmp/9b122f5d-c70f-4e3b-9d20-90d566d6da30_buggy.java b/tmp/8abad7f1-c52f-49b8-8975-532848855e6f_fixed.java
index 1c53d31..91a8ff7 100644
--- a/tmp/9b122f5d-c70f-4e3b-9d20-90d566d6da30_buggy.java
+++ b/tmp/8abad7f1-c52f-49b8-8975-532848855e6f_fixed.java
@@ -1,20 +1,27 @@
-  @SuppressWarnings("unchecked") // Casts guarded by conditionals.
+@@SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
         .construct()
         .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  
+  // Check if typeAdapter is null and handle accordingly
+  if (typeAdapter == null) {
+    throw new IllegalArgumentException(
+        "The @JsonAdapter value did not provide a valid TypeAdapter instance.");
+  }
+  
   typeAdapter = typeAdapter.nullSafe();
   return typeAdapter;
 }
\ No newline at end of file
