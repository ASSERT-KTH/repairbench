diff --git a/tmp/13886a7d-414a-41c0-b9ab-41861ad09f00_buggy.java b/tmp/d991adb4-f000-400f-a8fb-f5eee0534d86_fixed.java
index 1c53d31..13c3312 100644
--- a/tmp/13886a7d-414a-41c0-b9ab-41861ad09f00_buggy.java
+++ b/tmp/d991adb4-f000-400f-a8fb-f5eee0534d86_fixed.java
@@ -1,20 +1,24 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
                                       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
         Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
         typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
         Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
         typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
             .construct()
             .create(gson, fieldType);
     } else {
         throw new IllegalArgumentException(
             "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+    // Ensure typeAdapter is not null before calling nullSafe()
+    if (typeAdapter == null) {
+        throw new IllegalStateException("TypeAdapter cannot be null for type: " + fieldType.getRawType());
+    }
     typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
 }
\ No newline at end of file
