diff --git a/tmp/8508e7d8-9123-4929-b9ab-eddb247f6d45_buggy.java b/tmp/04c0c27a-29ee-43ca-bc21-4b71868c0c82_fixed.java
index 544303b..87a1e36 100644
--- a/tmp/8508e7d8-9123-4929-b9ab-eddb247f6d45_buggy.java
+++ b/tmp/04c0c27a-29ee-43ca-bc21-4b71868c0c82_fixed.java
@@ -1,29 +1,12 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
-            basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+        int basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+            coefficients[i] = getEntry(basicRow, getRhsOffset());
+        } else {
             coefficients[i] = 0;
         }
     }
-            }
-        }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
