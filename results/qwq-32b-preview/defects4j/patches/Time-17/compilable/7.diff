diff --git a/tmp/b3a88cd5-dd10-4598-a764-2b0044977075_buggy.java b/tmp/cbcccc65-d30b-4495-8b87-f401fb5242b0_fixed.java
index 03b03d7..2bbc58e 100644
--- a/tmp/b3a88cd5-dd10-4598-a764-2b0044977075_buggy.java
+++ b/tmp/cbcccc65-d30b-4495-8b87-f401fb5242b0_fixed.java
@@ -1,25 +1,27 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  *
  * @param instant the instant to adjust
  * @param earlierOrLater false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
+    // Calculate local times 3 hours before and after the given instant
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+    
+    // If local times before and after are the same, no overlap
     if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+        return instant;
     }
     
-        // work out range of instants that have duplicate local times
+    // Determine the local time at the given instant
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Adjust the local time to UTC using the appropriate offset
+    // If earlierOrLater is true, use the offset after the instant
+    // If earlierOrLater is false, use the offset before the instant
+    long adjustedInstant = convertLocalToUTC(local, earlierOrLater);
+    
+    return adjustedInstant;
 }
\ No newline at end of file
