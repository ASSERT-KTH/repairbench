diff --git a/tmp/24e1aea9-ee21-440a-8a78-6a4c205b4701_buggy.java b/tmp/53b81cdf-1cd7-4028-b441-3b5fa0c0cb94_fixed.java
index 03b03d7..3c2fcda 100644
--- a/tmp/24e1aea9-ee21-440a-8a78-6a4c205b4701_buggy.java
+++ b/tmp/53b81cdf-1cd7-4028-b441-3b5fa0c0cb94_fixed.java
@@ -1,25 +1,32 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  *
  * @param instant the instant to adjust
  * @param earlierOrLater false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
+    // Evaluate local times 3 hours before and after the instant
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+    
+    // If local times before and after are the same, no overlap
     if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+        return instant;
     }
     
-        // work out range of instants that have duplicate local times
+    // Determine the local time at the given instant
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Adjust the instant based on whether we want the earlier or later occurrence
+    long adjustedInstant;
+    if (earlierOrLater) {
+        // For later offset, use the higher UTC instant
+        adjustedInstant = convertLocalToUTC(local, false, instantAfter);
+    } else {
+        // For earlier offset, use the lower UTC instant
+        adjustedInstant = convertLocalToUTC(local, false, instantBefore);
+    }
+    
+    return adjustedInstant;
 }
\ No newline at end of file
