diff --git a/tmp/95eb2a76-340f-442a-a475-0c43f8ce5be5_buggy.java b/tmp/dbef03ef-63e6-4009-aa3b-5949c2540275_fixed.java
index 03b03d7..f784978 100644
--- a/tmp/95eb2a76-340f-442a-a475-0c43f8ce5be5_buggy.java
+++ b/tmp/dbef03ef-63e6-4009-aa3b-5949c2540275_fixed.java
@@ -1,25 +1,24 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
-        }
-        
-        // work out range of instants that have duplicate local times
+    // Get the local time for the given instant
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Find the previous and next transitions around the instant
+    long previousTransition = findPreviousTransition(instant);
+    long nextTransition = findNextTransition(instant);
+    
+    // Determine the offsets before and after the instant
+    long offsetBefore = getOffset(previousTransition);
+    long offsetAfter = getOffset(nextTransition);
+    
+    // If the offsets are the same, it's not an overlap
+    if (offsetBefore == offsetAfter) {
+        return instant;
+    }
+    
+    // Find the UTC instants for the local time with both offsets
+    long earlierInstant = convertLocalToUTC(local, true);
+    long laterInstant = convertLocalToUTC(local, false);
+    
+    // Choose the appropriate instant based on the flag
+    return earlierOrLater ? laterInstant : earlierInstant;
 }
\ No newline at end of file
