diff --git a/tmp/14c2e62a-756a-4898-9735-4314ab2eb4bd_buggy.java b/tmp/8d1c40f6-5e2a-4248-9c74-b2de942d8ad8_fixed.java
index fa6828a..933717c 100644
--- a/tmp/14c2e62a-756a-4898-9735-4314ab2eb4bd_buggy.java
+++ b/tmp/8d1c40f6-5e2a-4248-9c74-b2de942d8ad8_fixed.java
@@ -1,5 +1,24 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
+    Set<Object> injectedMocks = new HashSet<>();
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+        Class<?> fieldType = field.getType();
+        Optional<Object> exactMatchMock = mocks.stream()
+                .filter(mock -> mock.getClass().equals(fieldType))
+                .findFirst();
+        if (exactMatchMock.isPresent() && !injectedMocks.contains(exactMatchMock.get())) {
+            // Inject the exact match mock
+            mockCandidateFilter.filterCandidate(exactMatchMock.get(), field, fieldInstance).thenInject();
+            injectedMocks.add(exactMatchMock.get());
+        } else {
+            // Look for ancestor matches if no exact match is found
+            Optional<Object> ancestorMatchMock = mocks.stream()
+                    .filter(mock -> fieldType.isAssignableFrom(mock.getClass()))
+                    .findFirst();
+            if (ancestorMatchMock.isPresent() && !injectedMocks.contains(ancestorMatchMock.get())) {
+                // Inject the ancestor match mock
+                mockCandidateFilter.filterCandidate(ancestorMatchMock.get(), field, fieldInstance).thenInject();
+                injectedMocks.add(ancestorMatchMock.get());
+            }
+        }
     }
 }
\ No newline at end of file
