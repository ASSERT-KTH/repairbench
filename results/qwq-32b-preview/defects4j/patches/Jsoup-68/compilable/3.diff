diff --git a/tmp/86f58fc4-bb1f-40ef-858d-853df351de13_buggy.java b/tmp/589bfb5d-3d3a-4633-ae10-94a7026620c1_fixed.java
index 511560e..b2af146 100644
--- a/tmp/86f58fc4-bb1f-40ef-858d-853df351de13_buggy.java
+++ b/tmp/589bfb5d-3d3a-4633-ae10-94a7026620c1_fixed.java
@@ -1,21 +1,24 @@
 private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
-        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
-        int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
+    // Define the maximum depth to search to prevent deep recursion issues
+    final int maxDepth = Math.min(stack.size() - 1, MaxScopeSearchDepth);
     
+    // Define the starting and ending points for the loop
+    int bottom = maxDepth;
+    int top = Math.max(0, bottom - MaxScopeSearchDepth);
+    
+    // Iterate from bottom to top
     for (int pos = bottom; pos >= top; pos--) {
-            final String elName = stack.get(pos).nodeName();
-            if (inSorted(elName, targetNames))
+        String elName = stack.get(pos).nodeName();
+        if (inSorted(elName, targetNames)) {
             return true;
-            if (inSorted(elName, baseTypes))
+        }
+        if (inSorted(elName, baseTypes)) {
             return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
+        }
+        if (extraTypes != null && inSorted(elName, extraTypes)) {
             return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+    }
+    // If no matching element is found in the scope, return false
     return false;
 }
\ No newline at end of file
