diff --git a/tmp/b7160e76-7c87-482c-a7b1-ebcefb488e1b_buggy.java b/tmp/288f4d78-493e-42d9-84c2-b46fd612bbf1_fixed.java
index b5d94e0..40b6b13 100644
--- a/tmp/b7160e76-7c87-482c-a7b1-ebcefb488e1b_buggy.java
+++ b/tmp/288f4d78-493e-42d9-84c2-b46fd612bbf1_fixed.java
@@ -1,26 +1,26 @@
 private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
+    // Visit the node before traversing children
+    visit(node);
+    visits++;
+
+    // Traverse children
     Node c = node.getFirstChild();
     while(c != null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
-      visit(node);
-      visits++;
+    Preconditions.checkState(visits < 10000, "too many iterations");
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+    // Check if we need to revisit the node
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
