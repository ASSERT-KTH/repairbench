diff --git a/tmp/7cad8bbc-7410-4308-b032-8c1dc45b2b1f_buggy.java b/tmp/39025fe3-eafe-40db-91ca-d566875f478f_fixed.java
index 0dbce00..b4a9447 100644
--- a/tmp/7cad8bbc-7410-4308-b032-8c1dc45b2b1f_buggy.java
+++ b/tmp/39025fe3-eafe-40db-91ca-d566875f478f_fixed.java
@@ -1,33 +1,29 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+        BeanProperty property) throws JsonMappingException {
     if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
+        AnnotationIntrospector ai = serializers.getAnnotationIntrospector();
+        JsonFormat.Value format = ai.findFormat(((Annotated) property.getMember()));
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
+                // Serialize as numeric timestamp
                 return withFormat(Boolean.TRUE, null);
-                }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            } else if (shape == JsonFormat.Shape.STRING || shape == JsonFormat.Shape.ANY) {
+                // Serialize as string
                 TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
+                String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
-        return this;
+    // Fallback to global configuration
+    boolean asTimestamps = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);
+    return withFormat(asTimestamps, null);
 }
\ No newline at end of file
