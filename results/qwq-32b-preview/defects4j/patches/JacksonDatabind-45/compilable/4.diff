diff --git a/tmp/60dc5946-6911-4d4c-8dec-9aacac0a4acb_buggy.java b/tmp/e41a2215-6f4f-4e73-9f11-3a7fb1739687_fixed.java
index 0dbce00..905f9bd 100644
--- a/tmp/60dc5946-6911-4d4c-8dec-9aacac0a4acb_buggy.java
+++ b/tmp/e41a2215-6f4f-4e73-9f11-3a7fb1739687_fixed.java
@@ -1,33 +1,48 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+        BeanProperty property) throws JsonMappingException {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());
         if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
+            // Determine the serialization shape
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
+                // Serialize as numeric timestamp
                 return withFormat(Boolean.TRUE, null);
-                }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            } else if (shape == JsonFormat.Shape.STRING) {
+                // Serialize as string with specified format
                 TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
+                String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
+            } else if (shape == JsonFormat.Shape.ANY) {
+                // Fall back to user configuration
+                if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                    return withFormat(Boolean.TRUE, null);
+                } else {
+                    // Default to string serialization with ISO8601 format
+                    SimpleDateFormat df = new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale());
+                    df.setTimeZone(serializers.getTimeZone());
+                    return withFormat(Boolean.FALSE, df);
                 }
             }
+        } else {
+            // No JsonFormat annotation, use user configuration
+            if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                return withFormat(Boolean.TRUE, null);
+            } else {
+                // Default to string serialization with ISO8601 format
+                SimpleDateFormat df = new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale());
+                df.setTimeZone(serializers.getTimeZone());
+                return withFormat(Boolean.FALSE, df);
             }
+        }
+    }
+    // Fallback to default behavior
     return this;
 }
\ No newline at end of file
