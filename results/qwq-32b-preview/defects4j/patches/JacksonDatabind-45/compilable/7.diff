diff --git a/tmp/f9248bcc-6deb-4a62-be95-dadfa3806b8b_buggy.java b/tmp/dda658d7-3930-4d9e-b974-c11bd2593d45_fixed.java
index 0dbce00..a45d598 100644
--- a/tmp/f9248bcc-6deb-4a62-be95-dadfa3806b8b_buggy.java
+++ b/tmp/dda658d7-3930-4d9e-b974-c11bd2593d45_fixed.java
@@ -1,33 +1,48 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property != null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format != null) {
 
-            	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            if (shape == JsonFormat.Shape.STRING || 
+                shape == JsonFormat.Shape.ANY && (format.hasPattern() || format.hasLocale() || format.hasTimeZone())) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                 ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                 ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // If Shape.ANY with no additional attributes, fall back to user config
+            if (shape == JsonFormat.Shape.ANY && !format.hasPattern() && !format.hasLocale() && !format.hasTimeZone()) {
+                if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                    return withFormat(Boolean.TRUE, null);
+                } else {
+                    // Default to string format if not writing as timestamps
+                    return withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale()));
                 }
             }
-        return this;
+        }
+    }
+    // Default behavior if no format is specified
+    if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        return withFormat(Boolean.TRUE, null);
+    } else {
+        return withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale()));
+    }
 }
\ No newline at end of file
