diff --git a/tmp/211f1808-011d-41dd-b46c-8c815642caa7_buggy.java b/tmp/9f64a05f-c939-4fb9-b9db-7661af32b9ea_fixed.java
index 29a9d2f..b32d206 100644
--- a/tmp/211f1808-011d-41dd-b46c-8c815642caa7_buggy.java
+++ b/tmp/9f64a05f-c939-4fb9-b9db-7661af32b9ea_fixed.java
@@ -1,43 +1,4 @@
-  /**
-   * Handles a goog.require call.
-   */
-  private void processRequireCall(NodeTraversal t, Node n, Node parent) {
-    Node left = n.getFirstChild();
-    Node arg = left.getNext();
-    if (verifyLastArgumentIsString(t, left, arg)) {
-      String ns = arg.getString();
-      ProvidedName provided = providedNames.get(ns);
-      if (provided == null || !provided.isExplicitlyProvided()) {
-        unrecognizedRequires.add(
-            new UnrecognizedRequire(n, ns, t.getSourceName()));
-      } else {
-        JSModule providedModule = provided.explicitModule;
-
-        // This must be non-null, because there was an explicit provide.
-        Preconditions.checkNotNull(providedModule);
-
-        JSModule module = t.getModule();
-        if (moduleGraph != null &&
-            module != providedModule &&
-            !moduleGraph.dependsOn(module, providedModule)) {
-          compiler.report(
-              t.makeError(n, XMODULE_REQUIRE_ERROR, ns,
-                  providedModule.getName(),
-                  module.getName()));
-        }
-      }
-
-      maybeAddToSymbolTable(left);
-      maybeAddStringNodeToSymbolTable(arg);
-
-      // Requires should be removed before further processing.
-      // Some clients run closure pass multiple times, first with
-      // the checks for broken requires turned off. In these cases, we
-      // allow broken requires to be preserved by the first run to
-      // let them be caught in the subsequent run.
-      if (provided != null) {
+if (closurePassEnabled) {
     parent.detachFromParent();
     compiler.reportCodeChange();
 }
\ No newline at end of file
-    }
-  }
