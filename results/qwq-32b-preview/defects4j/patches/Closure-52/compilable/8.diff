diff --git a/tmp/9477ef35-d463-4a08-83cd-8445528a0705_buggy.java b/tmp/efddcaac-a83f-4a64-80b7-866558321946_fixed.java
index 4b7f469..c018650 100644
--- a/tmp/9477ef35-d463-4a08-83cd-8445528a0705_buggy.java
+++ b/tmp/efddcaac-a83f-4a64-80b7-866558321946_fixed.java
@@ -1,10 +1,43 @@
 static boolean isSimpleNumber(String s) {
   int len = s.length();
+  if (len == 0) {
+    return false;
+  }
+  
+  // Check for hexadecimal numbers
+  if (s.startsWith("0x") || s.startsWith("0X")) {
+    for (int index = 2; index < len; index++) {
+      char c = s.charAt(index);
+      if (!Character.isDigit(c) && !(c >= 'a' && c <= 'f') && !(c >= 'A' && c <= 'F')) {
+        return false;
+      }
+    }
+    return true;
+  }
+  
+  // Check for octal numbers starting with '0'
+  if (s.charAt(0) == '0' && len > 1) {
+    for (int index = 1; index < len; index++) {
+      char c = s.charAt(index);
+      if (c < '0' || c > '7') {
+        return false;
+      }
+    }
+    return true;
+  }
+  
+  // Check for floating-point numbers
+  int dotCount = 0;
   for (int index = 0; index < len; index++) {
     char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+    if (c == '.') {
+      dotCount++;
+      if (dotCount > 1) {
+        return false;
+      }
+    } else if (c < '0' || c > '9') {
       return false;
     }
   }
-    return len > 0;
+  return dotCount <= 1;
 }
\ No newline at end of file
