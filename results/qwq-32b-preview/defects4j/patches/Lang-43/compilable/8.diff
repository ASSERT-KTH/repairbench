diff --git a/tmp/79756431-d718-442d-99dd-5ed0e2a94035_buggy.java b/tmp/8fd4b195-b922-493e-9fbf-c3bfccd12952_fixed.java
index b6b11b6..64dbeb0 100644
--- a/tmp/79756431-d718-442d-99dd-5ed0e2a94035_buggy.java
+++ b/tmp/8fd4b195-b922-493e-9fbf-c3bfccd12952_fixed.java
@@ -1,38 +1,41 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
                                         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
+    int len = pattern.length();
+    boolean inQuote = false;
+
     if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+        inQuote = true;
+        pos.setIndex(start + 1);
+    }
+
+    int lastHold = pos.getIndex();
+
+    for (int i = pos.getIndex(); i < len; i++) {
+        if (escapingOn && i < len - 1 && pattern.substring(i, i + 2).equals(ESCAPED_QUOTE)) {
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
             }
-        int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
             pos.setIndex(i + ESCAPED_QUOTE.length());
             lastHold = pos.getIndex();
+            i = pos.getIndex() - 1; // adjust loop index
             continue;
         }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
-                next(pos);
+        if (c[i] == QUOTE) {
+            if (inQuote) {
+                if (appendTo != null) {
+                    appendTo.append(c, lastHold, i - lastHold);
                 }
+                pos.setIndex(i + 1);
+                return appendTo;
+            } else {
+                inQuote = true;
+                pos.setIndex(i + 1);
+                lastHold = pos.getIndex();
             }
-        throw new IllegalArgumentException(
-                "Unterminated quoted string at position " + start);
+        }
+    }
+
+    throw new IllegalArgumentException("Unterminated quoted string at position " + start);
 }
\ No newline at end of file
