diff --git a/tmp/65aa5fff-cfb8-49d0-aa7d-064c2b095ee1_buggy.java b/tmp/85f284f8-7662-424f-b1fa-b68012949ca6_fixed.java
index b6b11b6..149b426 100644
--- a/tmp/65aa5fff-cfb8-49d0-aa7d-064c2b095ee1_buggy.java
+++ b/tmp/85f284f8-7662-424f-b1fa-b68012949ca6_fixed.java
@@ -1,38 +1,28 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
     if (escapingOn && c[start] == QUOTE) {
         return appendTo == null ? null : appendTo.append(QUOTE);
     }
-        int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
-                lastHold = pos.getIndex();
+    int i = pos.getIndex();
+    int lastHold = i;
+    while (i < pattern.length()) {
+        if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, i)) {
+            appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+            i += ESCAPED_QUOTE.length();
+            lastHold = i;
             continue;
         }
-            switch (c[pos.getIndex()]) {
+        switch (c[i]) {
             case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+                appendTo.append(c, lastHold, i - lastHold);
+                pos.setIndex(i + 1);
+                return appendTo;
             default:
-                next(pos);
+                i++;
         }
     }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
