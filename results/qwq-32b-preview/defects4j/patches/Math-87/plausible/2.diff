diff --git a/tmp/862d2a0b-cab2-42d1-b789-a898bba0e27b_buggy.java b/tmp/307b62eb-0b49-478f-bd36-3cd147e09495_fixed.java
index 70cafe0..807d715 100644
--- a/tmp/862d2a0b-cab2-42d1-b789-a898bba0e27b_buggy.java
+++ b/tmp/307b62eb-0b49-478f-bd36-3cd147e09495_fixed.java
@@ -1,18 +1,21 @@
-    /**
-     * Checks whether the given column is basic.
-     * @param col index of the column to check
-     * @return the row that the variable is basic in.  null if the column is not basic
-     */
 private Integer getBasicRow(final int col) {
     Integer row = null;
     for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+        double entry = getEntry(i, col);
+        if (!MathUtils.equals(entry, 0.0, epsilon)) {
             if (row == null) {
+                // Check if the entry is approximately 1.0
+                if (MathUtils.equals(entry, 1.0, epsilon)) {
                     row = i;
                 } else {
+                    // If the first non-zero entry is not approximately 1.0, it's not a valid pivot
+                    return null;
+                }
+            } else {
+                // More than one non-zero entry in the column
                 return null;
             }
         }
     }
     return row;
 }
\ No newline at end of file
