diff --git a/tmp/a61231aa-641c-44e4-9a22-c67e71a669c0_buggy.java b/tmp/36b398d6-a1f3-4b26-8f4c-b89c4965ccf7_fixed.java
index 70cafe0..e760f9f 100644
--- a/tmp/a61231aa-641c-44e4-9a22-c67e71a669c0_buggy.java
+++ b/tmp/36b398d6-a1f3-4b26-8f4c-b89c4965ccf7_fixed.java
@@ -1,18 +1,20 @@
 /**
  * Checks whether the given column is basic.
  * @param col index of the column to check
  * @return the row that the variable is basic in. null if the column is not basic
  */
 private Integer getBasicRow(final int col) {
     Integer row = null;
     for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
         if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
             if (row == null) {
                 row = i;
             } else {
+                // More than one non-zero entry in the column; not basic
                 return null;
             }
         }
     }
+    // If row is still null, the column is all zeros; not basic
     return row;
 }
\ No newline at end of file
