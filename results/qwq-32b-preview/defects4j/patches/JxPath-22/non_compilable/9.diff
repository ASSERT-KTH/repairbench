diff --git a/tmp/3e3f4b99-d334-4c56-9554-e0f94a3b0fb1_buggy.java b/tmp/e2e4528f-2f25-4f3e-b3b2-e3dbbf561528_fixed.java
index 1bd0d7e..9790961 100644
--- a/tmp/3e3f4b99-d334-4c56-9554-e0f94a3b0fb1_buggy.java
+++ b/tmp/e2e4528f-2f25-4f3e-b3b2-e3dbbf561528_fixed.java
@@ -1,31 +1,66 @@
+import org.w3c.dom.*;
+
+public class NamespaceUtils {
+
     /**
      * Get the ns uri of the specified node.
      * @param node Node to check
      * @return String ns uri
      */
     public static String getNamespaceURI(Node node) {
         if (node instanceof Document) {
             node = ((Document) node).getDocumentElement();
         }
 
+        if (!(node instanceof Element)) {
+            return null;
+        }
+
         Element element = (Element) node;
 
         String uri = element.getNamespaceURI();
-        if (uri == null) {
-            String prefix = getPrefix(node);
-            String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
-    
-            Node aNode = node;
-            while (aNode != null) {
-                if (aNode.getNodeType() == Node.ELEMENT_NODE) {
-                    Attr attr = ((Element) aNode).getAttributeNode(qname);
-                    if (attr != null) {
-                        return attr.getValue();
-                    }
-                }
-                aNode = aNode.getParentNode();
-            }
-            return null;
-        }
+        if (uri != null) {
             return uri;
         }
+
+        String prefix = element.getPrefix();
+        if (prefix == null) {
+            // Handle default namespace
+            return getDeclaredNamespaceURI(element, "");
+        } else {
+            return getDeclaredNamespaceURI(element, prefix);
+        }
+    }
+
+    private static String getDeclaredNamespaceURI(Element element, String prefix) {
+        Node current = element;
+        while (current != null) {
+            if (current.getNodeType() == Node.ELEMENT_NODE) {
+                String namespaceURI = getNamespaceURIFromAttributes((Element) current, prefix);
+                if (namespaceURI != null) {
+                    return namespaceURI;
+                }
+            }
+            current = current.getParentNode();
+        }
+        return null;
+    }
+
+    private static String getNamespaceURIFromAttributes(Element element, String prefix) {
+        NamedNodeMap attrs = element.getAttributes();
+        for (int i = 0; i < attrs.getLength(); i++) {
+            Attr attr = (Attr) attrs.item(i);
+            if (attr.getLocalName().equals("xmlns")) {
+                if (prefix == null || prefix.isEmpty()) {
+                    return attr.getValue();
+                }
+            } else if (attr.getPrefix().equals("xmlns")) {
+                String declaredPrefix = attr.getLocalName();
+                if (declaredPrefix.equals(prefix)) {
+                    return attr.getValue();
+                }
+            }
+        }
+        return null;
+    }
+}
\ No newline at end of file
