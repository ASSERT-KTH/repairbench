diff --git a/tmp/2b6f73a0-56ca-478f-bd42-d4b46a12ad29_buggy.java b/tmp/66d47d8f-b9cc-429c-abb6-a1cd630cc9ed_fixed.java
index 1bec4d6..7ea3da1 100644
--- a/tmp/2b6f73a0-56ca-478f-bd42-d4b46a12ad29_buggy.java
+++ b/tmp/66d47d8f-b9cc-429c-abb6-a1cd630cc9ed_fixed.java
@@ -1,14 +1,17 @@
-    private JavaType _mapType(Class<?> rawClass)
-    {
-        // 28-May-2015, tatu: Properties are special, as per [databind#810]
+private JavaType _mapType(Class<?> rawClass) {
+    // Special handling for Properties as per [databind#810]
+    if (Properties.class == rawClass) {
+        return MapType.construct(rawClass, TypeFactory.defaultInstance().constructType(String.class), TypeFactory.defaultInstance().constructType(String.class));
+    }
+    // General map type handling
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
-        // ok to have no types ("raw")
+    // It's okay to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
-        // but exactly 2 types if any found
+    // But exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type " + rawClass.getName() + ": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
