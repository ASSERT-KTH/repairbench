diff --git a/tmp/b89226a7-dea6-4fca-a331-92b73bfc3c38_buggy.java b/tmp/93ac9ce0-373c-4ce0-9c30-39f4595c993f_fixed.java
index 1bec4d6..3aa4d86 100644
--- a/tmp/b89226a7-dea6-4fca-a331-92b73bfc3c38_buggy.java
+++ b/tmp/93ac9ce0-373c-4ce0-9c30-39f4595c993f_fixed.java
@@ -1,14 +1,21 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
+    if (Properties.class.isAssignableFrom(rawClass)) {
+        // Properties should always be treated as Map<String, String>
+        return MapType.construct(rawClass, TypeFactory.defaultInstance().findTypeParameters(rawClass, Map.class),
+                TypeFactory.defaultInstance().constructType(String.class),
+                TypeFactory.defaultInstance().constructType(String.class));
+    }
+
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type " + rawClass.getName() + ": can not determine type parameters");
     }
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file
