diff --git a/tmp/55c4c066-17c6-4d2f-97be-e47e5ec8d9bc_buggy.java b/tmp/80b33178-e032-4800-a042-9a90c786fb87_fixed.java
index b4af58a..c829682 100644
--- a/tmp/55c4c066-17c6-4d2f-97be-e47e5ec8d9bc_buggy.java
+++ b/tmp/80b33178-e032-4800-a042-9a90c786fb87_fixed.java
@@ -1,53 +1,39 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the first time period to copy (<code>null</code> not
-     *         permitted).
-     * @param end  the last time period to copy (<code>null</code> not
-     *         permitted).
-     *
-     * @return A time series containing a copy of this time series from start
-     *         until end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
 public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
     throws CloneNotSupportedException {
 
     if (start == null) {
         throw new IllegalArgumentException("Null 'start' argument.");
     }
     if (end == null) {
         throw new IllegalArgumentException("Null 'end' argument.");
     }
     if (start.compareTo(end) > 0) {
-            throw new IllegalArgumentException(
-                    "Requires start on or before end.");
+        throw new IllegalArgumentException("Requires start on or before end.");
     }
+
     boolean emptyRange = false;
     int startIndex = getIndex(start);
     if (startIndex < 0) {
         startIndex = -(startIndex + 1);
         if (startIndex == this.data.size()) {
             emptyRange = true;  // start is after last data item
         }
     }
+
     int endIndex = getIndex(end);
-        if (endIndex < 0) {             // end period is not in original series
-            endIndex = -(endIndex + 1); // this is first item AFTER end period
-            endIndex = endIndex - 1;    // so this is last item BEFORE end
-        }
     if (endIndex < 0) {
+        endIndex = -(endIndex + 1) - 1; // last item before end period
+    }
+
+    if (startIndex > endIndex) {
         emptyRange = true;
     }
+
     if (emptyRange) {
         TimeSeries copy = (TimeSeries) super.clone();
-            copy.data = new java.util.ArrayList();
+        copy.data = new ArrayList<>();
         return copy;
-        }
-        else {
+    } else {
         return createCopy(startIndex, endIndex);
     }
-
 }
\ No newline at end of file
