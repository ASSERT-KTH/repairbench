diff --git a/tmp/e5b5b686-2b31-42e6-b2ba-c9cb49dc2cc5_buggy.java b/tmp/ef3d2ec8-1fe4-4fc2-8b24-d9bff3c7cfd1_fixed.java
index b4af58a..b110ee8 100644
--- a/tmp/e5b5b686-2b31-42e6-b2ba-c9cb49dc2cc5_buggy.java
+++ b/tmp/ef3d2ec8-1fe4-4fc2-8b24-d9bff3c7cfd1_fixed.java
@@ -1,53 +1,61 @@
 /**
  * Creates a new timeseries by copying a subset of the data in this time
  * series.
  *
  * @param start  the first time period to copy (<code>null</code> not
  *         permitted).
  * @param end  the last time period to copy (<code>null</code> not
  *         permitted).
  *
  * @return A time series containing a copy of this time series from start
  *         until end.
  *
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
 public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)
     throws CloneNotSupportedException {
 
     if (start == null) {
         throw new IllegalArgumentException("Null 'start' argument.");
     }
     if (end == null) {
         throw new IllegalArgumentException("Null 'end' argument.");
     }
     if (start.compareTo(end) > 0) {
         throw new IllegalArgumentException(
                 "Requires start on or before end.");
     }
     boolean emptyRange = false;
     int startIndex = getIndex(start);
     if (startIndex < 0) {
         startIndex = -(startIndex + 1);
         if (startIndex == this.data.size()) {
             emptyRange = true;  // start is after last data item
         }
+    } else {
+        // Ensure that the start index is inclusive
+        while (startIndex > 0 && this.data.get(startIndex - 1).getPeriod().compareTo(start) >= 0) {
+            startIndex--;
+        }
     }
     int endIndex = getIndex(end);
     if (endIndex < 0) {             // end period is not in original series
         endIndex = -(endIndex + 1); // this is first item AFTER end period
         endIndex = endIndex - 1;    // so this is last item BEFORE end
+    } else {
+        // Ensure that the end index is inclusive
+        while (endIndex < this.data.size() - 1 && this.data.get(endIndex + 1).getPeriod().compareTo(end) <= 0) {
+            endIndex++;
         }
-        if (endIndex < 0) {
+    }
+    if (endIndex < 0 || startIndex > endIndex) {
         emptyRange = true;
     }
     if (emptyRange) {
         TimeSeries copy = (TimeSeries) super.clone();
         copy.data = new java.util.ArrayList();
         return copy;
-        }
-        else {
+    } else {
         return createCopy(startIndex, endIndex);
     }
-
 }
\ No newline at end of file
