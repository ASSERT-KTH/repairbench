diff --git a/tmp/587a5853-c5d5-4d0b-bda1-5ac06b91cf1e_buggy.java b/tmp/e2fb1ddd-0980-4940-b35e-bc9a0d96c028_fixed.java
index 5abdeb5..58bee6b 100644
--- a/tmp/587a5853-c5d5-4d0b-bda1-5ac06b91cf1e_buggy.java
+++ b/tmp/e2fb1ddd-0980-4940-b35e-bc9a0d96c028_fixed.java
@@ -1,29 +1,31 @@
 /**
-     * Computes the number of uses of the variable varName and store it in
+ * Computes the number of uses of the variable varName and stores it in
  * numUseWithinUseCfgNode.
  */
 private void getNumUseInUseCfgNode(final Node cfgNode) {
-
   numUsesWithinCfgNode = 0;
+  boolean hasAssignment = false;
+
   AbstractCfgNodeTraversalCallback gatherCb =
       new AbstractCfgNodeTraversalCallback() {
 
         @Override
         public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
-              // Don't count lhs of top-level assignment chain
+          if (n.isName() && n.getString().equals(varName)) {
+            if (parent.isAssign() && parent.getFirstChild() == n) {
+              // This is the left-hand side of an assignment.
+              // Mark that there is an assignment to varName in this cfgNode.
+              hasAssignment = true;
+            } else {
+              // This is a use of varName, not in the left-hand side of an assignment.
+              // Count it, unless there is an assignment to varName in this cfgNode.
+              if (!hasAssignment) {
                 numUsesWithinCfgNode++;
               }
             }
-
+          }
+        }
       };
 
   NodeTraversal.traverse(compiler, cfgNode, gatherCb);
 }
\ No newline at end of file
