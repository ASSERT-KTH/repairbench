diff --git a/tmp/f750891d-70b2-42cf-a2e7-0fc15f61aa07_buggy.java b/tmp/4f88a70d-58d1-4841-9bb9-010e98928bea_fixed.java
index 5abdeb5..0e0e6b1 100644
--- a/tmp/f750891d-70b2-42cf-a2e7-0fc15f61aa07_buggy.java
+++ b/tmp/4f88a70d-58d1-4841-9bb9-010e98928bea_fixed.java
@@ -1,29 +1,25 @@
-    /**
-     * Computes the number of uses of the variable varName and store it in
-     * numUseWithinUseCfgNode.
-     */
 private void getNumUseInUseCfgNode(final Node cfgNode) {
-
   numUsesWithinCfgNode = 0;
-      AbstractCfgNodeTraversalCallback gatherCb =
-          new AbstractCfgNodeTraversalCallback() {
-
+  AbstractCfgNodeTraversalCallback gatherCb = new AbstractCfgNodeTraversalCallback() {
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
-          if (n.isName() && n.getString().equals(varName) &&
-            // We make a special exception when the entire cfgNode is a chain
-            // of assignments, since in that case the assignment statements
-            // will happen after the inlining of the right hand side.
-            // TODO(blickly): Make the SIDE_EFFECT_PREDICATE check more exact
-            //   and remove this special case.
-              !(parent.isAssign() &&
-               (parent.getFirstChild() == n))) {
-              // Don't count lhs of top-level assignment chain
+      if (n.isName() && n.getString().equals(varName)) {
+        // Check if the name node is on the left-hand side of an assignment
+        if (parent.isAssign() && parent.getFirstChild() == n) {
+          // Skip counting if it's the LHS of an assignment
+          return;
+        }
+        // Check for other cases where the variable might be assigned in a chain
+        // For example, in a sequence like a = b = c
+        if (parent.isAssign() && parent.getSecondChild() == n) {
+          // This is the RHS of an assignment, count it
+          numUsesWithinCfgNode++;
+        } else {
+          // Other uses of the variable, count them
           numUsesWithinCfgNode++;
         }
       }
-
+    }
   };
-
   NodeTraversal.traverse(compiler, cfgNode, gatherCb);
 }
\ No newline at end of file
