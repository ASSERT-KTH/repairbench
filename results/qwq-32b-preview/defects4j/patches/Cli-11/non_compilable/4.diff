diff --git a/tmp/f383250d-2a1d-4c35-90a9-b8be695feea3_buggy.java b/tmp/70dac744-67da-4cd7-a3e1-9ffcc28393cd_fixed.java
index 6ea5795..fbd8e32 100644
--- a/tmp/f383250d-2a1d-4c35-90a9-b8be695feea3_buggy.java
+++ b/tmp/70dac744-67da-4cd7-a3e1-9ffcc28393cd_fixed.java
@@ -1,37 +1,15 @@
-    /**
-     * Appends the usage clause for an Option to a StringBuffer.  
-     *
-     * @param buff the StringBuffer to append to
-     * @param option the Option to append
-     * @param required whether the Option is required or not
-     */
-    private static void appendOption(final StringBuffer buff, 
-                                     final Option option, 
-                                     final boolean required)
-    {
-        if (!required)
-        {
-            buff.append("[");
-        }
+public void testPrintOptionWithEmptyArgNameUsage() {
+    Option option = new Option("f", true, null);
+    option.setArgName("");
+    option.setRequired(true);
 
-        if (option.getOpt() != null)
-        {
-            buff.append("-").append(option.getOpt());
-        }
-        else
-        {
-            buff.append("--").append(option.getLongOpt());
-        }
+    Options options = new Options();
+    options.addOption(option);
 
-        // if the Option has a value
-        if (option.hasArg() && (option.getArgName() != null))
-        {
-            buff.append(" <").append(option.getArgName()).append(">");
-        }
+    StringWriter out = new StringWriter();
 
-        // if the Option is not a required option
-        if (!required)
-        {
-            buff.append("]");
-        }
+    HelpFormatter formatter = new HelpFormatter();
+    formatter.printUsage(new PrintWriter(out), 80, "app", options);
+
+    assertEquals("usage: app -f" + EOL, out.toString());
 }
\ No newline at end of file
