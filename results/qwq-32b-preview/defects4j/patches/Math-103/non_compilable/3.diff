diff --git a/tmp/f2aab057-e798-4bf2-b498-c41f9efdd391_buggy.java b/tmp/07fe46a4-0388-4b23-899e-4fad7148d889_fixed.java
index 6cfa79b..ada6d5a 100644
--- a/tmp/f2aab057-e798-4bf2-b498-c41f9efdd391_buggy.java
+++ b/tmp/07fe46a4-0388-4b23-899e-4fad7148d889_fixed.java
@@ -1,12 +1,15 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
+import org.apache.commons.math.MathException;
+import org.apache.commons.math.special.Erf;
+
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double deviation = (x - mean) / standardDeviation;
+    // Define a threshold beyond which we consider the probability to be 0 or 1
+    final double threshold = 20; // This value can be adjusted based on requirements
+    if (deviation < -threshold) {
+        return 0.0;
+    } else if (deviation > threshold) {
+        return 1.0;
+    } else {
+        return 0.5 * (1.0 + Erf.erf(deviation / Math.sqrt(2.0)));
+    }
 }
\ No newline at end of file
