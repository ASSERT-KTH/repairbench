diff --git a/tmp/92a1aa0b-d6a0-49d7-864c-607638fab6b1_buggy.java b/tmp/be17216c-e8d9-4056-b7e2-32b8e4229f4c_fixed.java
index 6cfa79b..2593d37 100644
--- a/tmp/92a1aa0b-d6a0-49d7-864c-607638fab6b1_buggy.java
+++ b/tmp/be17216c-e8d9-4056-b7e2-32b8e4229f4c_fixed.java
@@ -1,12 +1,22 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X < code>xcode).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at code> xcode.
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = x - mean;
+        double s = standardDeviation * Math.sqrt(2.0);
+        double z = dev / s;
+        if (Math.abs(z) > 20) {
+            return z < 0 ? 0.0 : 1.0;
+        } else {
+            try {
+                return 0.5 * (1.0 + Erf.erf(z));
+            } catch (MathException e) {
+                return z < 0 ? 0.0 : 1.0;
+            }
+        }
     }
\ No newline at end of file
