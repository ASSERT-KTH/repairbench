diff --git a/tmp/42609a05-eba7-4555-9b15-c5c033400dd3_buggy.java b/tmp/9264cc81-c711-4710-97cc-b2be5b95ed92_fixed.java
index 6cfa79b..8cb7a64 100644
--- a/tmp/42609a05-eba7-4555-9b15-c5c033400dd3_buggy.java
+++ b/tmp/9264cc81-c711-4710-97cc-b2be5b95ed92_fixed.java
@@ -1,12 +1,15 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X < code>x/code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at code>x/code>.
      * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
+     * x is more than 20 standard deviations from the mean, in which case
+     * 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double deviation = x - mean;
+        if (Math.abs(deviation) > 20 * standardDeviation) {
+            return deviation < 0 ? 0 : 1;
+        }
+        return 0.5 * (1.0 + Erf.erf(deviation / (standardDeviation * Math.sqrt(2.0))));
     }
\ No newline at end of file
