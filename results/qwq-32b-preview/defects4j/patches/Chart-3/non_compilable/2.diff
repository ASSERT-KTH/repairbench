diff --git a/tmp/13b870af-6edf-43d3-8c6a-133e46d92e42_buggy.java b/tmp/2c7c64a8-e03c-4b86-92a8-336fddbe4c88_fixed.java
index 388771b..646316b 100644
--- a/tmp/13b870af-6edf-43d3-8c6a-133e46d92e42_buggy.java
+++ b/tmp/2c7c64a8-e03c-4b86-92a8-336fddbe4c88_fixed.java
@@ -1,37 +1,46 @@
 /**
  * Creates a new time series by copying a subset of the data in this time
  * series.
  *
  * @param start the index of the first time period to copy.
  * @param end the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
+ * @return A series containing a copy of this time series from start until end.
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
-    public TimeSeries createCopy(int start, int end)
-            throws CloneNotSupportedException {
+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
+    
+    double minY = Double.MAX_VALUE;
+    double maxY = Double.MIN_VALUE;
+    
     if (this.data.size() > 0) {
         for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
             TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
             try {
                 copy.add(clone);
+                // Update min and max Y values
+                double y = clone.getValue().doubleValue();
+                if (y < minY) {
+                    minY = y;
                 }
-                catch (SeriesException e) {
+                if (y > maxY) {
+                    maxY = y;
+                }
+            } catch (SeriesException e) {
                 e.printStackTrace();
             }
         }
+        // Set the min and max Y values in the copied series
+        copy.setMinY(minY);
+        copy.setMaxY(maxY);
     }
     return copy;
 }
\ No newline at end of file
