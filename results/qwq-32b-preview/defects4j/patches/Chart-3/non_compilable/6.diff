diff --git a/tmp/7b0ba432-bd98-4724-b678-669cf6bd27ff_buggy.java b/tmp/5648f3ad-c3f6-4b17-8709-01f5595c7f4c_fixed.java
index 388771b..7b3595b 100644
--- a/tmp/7b0ba432-bd98-4724-b678-669cf6bd27ff_buggy.java
+++ b/tmp/5648f3ad-c3f6-4b17-8709-01f5595c7f4c_fixed.java
@@ -1,37 +1,35 @@
 /**
  * Creates a new timeseries by copying a subset of the data in this time
  * series.
  *
  * @param start the index of the first time period to copy.
  * @param end the index of the last time period to copy.
  *
-     * @return A series containing a copy of this times series from start until
-     *         end.
+ * @return A series containing a copy of this time series from start until end.
  *
  * @throws CloneNotSupportedException if there is a cloning problem.
  */
-    public TimeSeries createCopy(int start, int end)
-            throws CloneNotSupportedException {
+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {
     if (start < 0) {
         throw new IllegalArgumentException("Requires start >= 0.");
     }
     if (end < start) {
         throw new IllegalArgumentException("Requires start <= end.");
     }
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
     if (this.data.size() > 0) {
         for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
             TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
             try {
                 copy.add(clone);
-                }
-                catch (SeriesException e) {
+            } catch (SeriesException e) {
                 e.printStackTrace();
             }
         }
     }
+    // Recalculate the min and max y-values for the copied series
+    copy.updateAutoRange();
     return copy;
 }
\ No newline at end of file
