diff --git a/tmp/a24741d4-92ab-48db-a9dd-6ab85a324347_buggy.java b/tmp/86e925d6-b722-42b5-a619-3eb041c8c32e_fixed.java
index b529d33..4ea3fbe 100644
--- a/tmp/a24741d4-92ab-48db-a9dd-6ab85a324347_buggy.java
+++ b/tmp/86e925d6-b722-42b5-a619-3eb041c8c32e_fixed.java
@@ -1,29 +1,10 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
-    private char getMappingCode(final String str, final int index) {
-        // map() throws IllegalArgumentException
-        final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
 if (index > 1 && mappedChar != '0') {
     final char hwChar = str.charAt(index - 1);
     if ('H' == hwChar || 'W' == hwChar) {
         final char preHWChar = str.charAt(index - 2);
         final char firstCode = this.map(preHWChar);
         if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
             return 0;
         }
     }
 }
\ No newline at end of file
-        return mappedChar;
-    }
