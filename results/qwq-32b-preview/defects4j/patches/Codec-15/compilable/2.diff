diff --git a/tmp/4178ae53-594f-4892-8eca-6beb8b1d6e1c_buggy.java b/tmp/4b30c73a-7e3f-4b28-9f90-23aac5f1551e_fixed.java
index b529d33..fa155d6 100644
--- a/tmp/4178ae53-594f-4892-8eca-6beb8b1d6e1c_buggy.java
+++ b/tmp/4b30c73a-7e3f-4b28-9f90-23aac5f1551e_fixed.java
@@ -1,29 +1,18 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
 private char getMappingCode(final String str, final int index) {
     // map() throws IllegalArgumentException
     final char mappedChar = this.map(str.charAt(index));
     // HW rule check
-        if (index > 1 && mappedChar != '0') {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
-                final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
-                    return 0;
+    if (index > 0 && mappedChar != '0') {
+        final char prevChar = str.charAt(index - 1);
+        if ('H' == prevChar || 'W' == prevChar) {
+            if (index > 1) {
+                final char prePrevChar = str.charAt(index - 2);
+                final char firstCode = this.map(prePrevChar);
+                if (firstCode == mappedChar) {
+                    return '0';
+                }
             }
         }
     }
     return mappedChar;
 }
\ No newline at end of file
