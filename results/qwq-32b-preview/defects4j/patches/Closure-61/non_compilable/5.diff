diff --git a/tmp/33ea3219-f04f-42d1-a4a3-8889641c3b82_buggy.java b/tmp/ff2ea3ea-71eb-4ac2-93d0-330970e7047a_fixed.java
index b36c3f0..1a44dfb 100644
--- a/tmp/33ea3219-f04f-42d1-a4a3-8889641c3b82_buggy.java
+++ b/tmp/ff2ea3ea-71eb-4ac2-93d0-330970e7047a_fixed.java
@@ -1,58 +1,29 @@
-  /**
-   * Returns true if calls to this function have side effects.
-   *
-   * @param callNode The call node to inspected.
-   * @param compiler A compiler object to provide program state changing
-   *     context information. Can be null.
-   */
-  static boolean functionCallHasSideEffects(
-      Node callNode, @Nullable AbstractCompiler compiler) {
-    if (callNode.getType() != Token.CALL) {
-      throw new IllegalStateException(
-          "Expected CALL node, got " + Token.name(callNode.getType()));
-    }
-
-    if (callNode.isNoSideEffectsCall()) {
-      return false;
-    }
-
-    Node nameNode = callNode.getFirstChild();
-
-    // Built-in functions with no side effects.
-    if (nameNode.getType() == Token.NAME) {
-      String name = nameNode.getString();
-      if (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name)) {
-        return false;
-      }
-    } else if (nameNode.getType() == Token.GETPROP) {
+if (nameNode.getType() == Token.GETPROP) {
   if (callNode.hasOneChild()
       && OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(
             nameNode.getLastChild().getString())) {
     return false;
   }
 
   if (callNode.isOnlyModifiesThisCall()
       && evaluatesToLocalValue(nameNode.getFirstChild())) {
     return false;
   }
 
   // Functions in the "Math" namespace have no side effects.
 
   if (compiler != null && !compiler.hasRegExpGlobalReferences()) {
     if (nameNode.getFirstChild().getType() == Token.REGEXP
         && REGEXP_METHODS.contains(nameNode.getLastChild().getString())) {
       return false;
     } else if (nameNode.getFirstChild().getType() == Token.STRING
         && STRING_REGEXP_METHODS.contains(
             nameNode.getLastChild().getString())) {
       Node param = nameNode.getNext();
       if (param != null &&
           (param.getType() == Token.STRING
               || param.getType() == Token.REGEXP))
         return false;
     }
   }
 }
\ No newline at end of file
-
-    return true;
-  }
