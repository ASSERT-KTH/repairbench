diff --git a/tmp/15cc2a4e-949c-4423-8112-90dc175896fc_buggy.java b/tmp/5c5983ce-9279-4e1c-b424-a5d426193615_fixed.java
index 111ba5e..37e37f8 100644
--- a/tmp/15cc2a4e-949c-4423-8112-90dc175896fc_buggy.java
+++ b/tmp/5c5983ce-9279-4e1c-b424-a5d426193615_fixed.java
@@ -1,9 +1,43 @@
 public static boolean areEqual(Object o1, Object o2) {
+    // Both null or same object reference
+    if (o1 == o2) {
+        return true;
+    }
+    // One is null and the other is not
     if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
-        } else {
+        return false;
+    }
+    // Handle arrays
+    if (o1.getClass().isArray() && o2.getClass().isArray()) {
+        if (o1.getClass() != o2.getClass()) {
+            return false; // Arrays of different types
+        }
+        return areArraysEqual(o1, o2);
+    }
+    // General object equality
     return o1.equals(o2);
 }
+
+private static boolean areArraysEqual(Object arr1, Object arr2) {
+    if (arr1 instanceof Object[] && arr2 instanceof Object[]) {
+        return Arrays.deepEquals((Object[]) arr1, (Object[]) arr2);
+    } else if (arr1 instanceof int[] && arr2 instanceof int[]) {
+        return Arrays.equals((int[]) arr1, (int[]) arr2);
+    } else if (arr1 instanceof long[] && arr2 instanceof long[]) {
+        return Arrays.equals((long[]) arr1, (long[]) arr2);
+    } else if (arr1 instanceof boolean[] && arr2 instanceof boolean[]) {
+        return Arrays.equals((boolean[]) arr1, (boolean[]) arr2);
+    } else if (arr1 instanceof float[] && arr2 instanceof float[]) {
+        return Arrays.equals((float[]) arr1, (float[]) arr2);
+    } else if (arr1 instanceof double[] && arr2 instanceof double[]) {
+        return Arrays.equals((double[]) arr1, (double[]) arr2);
+    } else if (arr1 instanceof byte[] && arr2 instanceof byte[]) {
+        return Arrays.equals((byte[]) arr1, (byte[]) arr2);
+    } else if (arr1 instanceof char[] && arr2 instanceof char[]) {
+        return Arrays.equals((char[]) arr1, (char[]) arr2);
+    } else if (arr1 instanceof short[] && arr2 instanceof short[]) {
+        return Arrays.equals((short[]) arr1, (short[]) arr2);
+    } else {
+        return false;
+    }
 }
\ No newline at end of file
