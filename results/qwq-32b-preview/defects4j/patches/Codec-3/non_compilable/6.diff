diff --git a/tmp/843cfb49-d5ea-47aa-a9ad-dc42094b32b8_buggy.java b/tmp/52a37825-221d-4ca3-abf4-df05a14be6e3_fixed.java
index 4e7ca9e..82794f5 100644
--- a/tmp/843cfb49-d5ea-47aa-a9ad-dc42094b32b8_buggy.java
+++ b/tmp/52a37825-221d-4ca3-abf4-df05a14be6e3_fixed.java
@@ -1,55 +1,24 @@
-    /**
-     * Handles 'G' cases
-     */
-    private int handleG(String value, 
-                        DoubleMetaphoneResult result, 
-                        int index, 
-                        boolean slavoGermanic) {
-        if (charAt(value, index + 1) == 'H') {
-            index = handleGH(value, result, index);
-        } else if (charAt(value, index + 1) == 'N') {
-            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {
-                result.append("KN", "N");
-            } else if (!contains(value, index + 2, 2, "EY") && 
-                       charAt(value, index + 1) != 'Y' && !slavoGermanic) {
-                result.append("N", "KN");
+else if (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, "IE", "II", "YI")) {
+    //-- -gi-, -gy-, -ge-, -go-, -gd- sounds like "J" AND Germanic "G" is "K" & "J" AND slavic "Ge" is Y
+    if (isSlavoGermanic(value, index)) {
+        result.append('Y', 'K');
     } else {
-                result.append("KN");
+        result.append('J', 'K');
     }
-            index = index + 2;
-        } else if (contains(value, index + 1, 2, "LI") && !slavoGermanic) {
-            result.append("KL", "L");
     index += 2;
-        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {
-            //-- -ges-, -gep-, -gel-, -gie- at beginning --//
-            result.append('K', 'J');
-            index += 2;
-        } else if ((contains(value, index + 1, 2, "ER") || 
-                    charAt(value, index + 1) == 'Y') &&
-                   !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") &&
-                   !contains(value, index - 1, 1, "E", "I") && 
-                   !contains(value, index - 1, 3, "RGY", "OGY")) {
+} else if (contains(value, index + 1, 2, "ER") || charAt(value, index + 1) == 'Y') {
     //-- -ger-, -gy- --//
     result.append('K', 'J');
     index += 2;
-        } else if (contains(value, index + 1, 1, "E", "I", "Y") || 
-                   contains(value, index - 1, 4, "AGGI", "OGGI")) {
+} else if (contains(value, index + 1, 1, "E", "I", "Y") || contains(value, index - 1, 4, "AGGI", "OGGI")) {
     //-- Italian "biaggi" --//
     if ((contains(value, 0 ,4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET")) {
         //-- obvious germanic --//
         result.append('K');
     } else if (contains(value, index + 1, 4, "IER")) {
         result.append('J');
     } else {
         result.append('J', 'K');
     }
     index += 2;
-        } else if (charAt(value, index + 1) == 'G') {
-            index += 2;
-            result.append('K');
-        } else {
-            index++;
-            result.append('K');
-        }
-        return index;
 }
\ No newline at end of file
