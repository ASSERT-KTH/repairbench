diff --git a/tmp/8ac8582a-dfa0-430d-aada-bd17872875a5_buggy.java b/tmp/098e772e-94f2-43b4-ae44-3eb07597c9cf_fixed.java
index 5f96616..ec092aa 100644
--- a/tmp/8ac8582a-dfa0-430d-aada-bd17872875a5_buggy.java
+++ b/tmp/098e772e-94f2-43b4-ae44-3eb07597c9cf_fixed.java
@@ -1,20 +1,7 @@
-  @Override
-  public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
-    if (hasReferenceName()) {
-      return;
-    }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
-    if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
-    }
-  }
+inFunction(
+    "/** @param {{a: (boolean|undefined)}|{b: (string|undefined)}} x */" +
+    "function f(x) {}" +
+    "var out = {};" +
+    "f(out);");
+assertEquals("{a: (boolean|undefined), b: (string|undefined)}",
+    getType("out").toString());
\ No newline at end of file
