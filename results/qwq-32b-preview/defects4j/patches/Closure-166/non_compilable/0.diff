diff --git a/tmp/f46249c5-f86f-45f5-932c-d25f3886e3ba_buggy.java b/tmp/bb72fb1a-ce56-4933-a736-2a338452a6c3_fixed.java
index 5f96616..7781b6a 100644
--- a/tmp/f46249c5-f86f-45f5-932c-d25f3886e3ba_buggy.java
+++ b/tmp/bb72fb1a-ce56-4933-a736-2a338452a6c3_fixed.java
@@ -1,20 +1,26 @@
 @Override
 public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
         return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
     // taking any each property on the record and trying to match
     // properties on this object.
-    if (constraint.isRecordType()) {
+    if (constraint.isUnionType()) {
+        for (JSType element : constraint.getUnionTypes()) {
+            if (element.isRecordType()) {
+                matchRecordTypeConstraint(element.toObjectType());
+            }
+        }
+    } else if (constraint.isRecordType()) {
         matchRecordTypeConstraint(constraint.toObjectType());
     }
 }
\ No newline at end of file
