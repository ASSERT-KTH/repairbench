diff --git a/tmp/40282261-3642-48f5-a7e5-c240e3f639b2_buggy.java b/tmp/773294eb-500e-427e-b71d-ae810376146d_fixed.java
index 00914da..07ee377 100644
--- a/tmp/40282261-3642-48f5-a7e5-c240e3f639b2_buggy.java
+++ b/tmp/773294eb-500e-427e-b71d-ae810376146d_fixed.java
@@ -1,17 +1,22 @@
-    // does not recurse.
 private void normalise(Element element) {
-        List<Node> toMove = new ArrayList<Node>();
+    List<Node> toMove = new ArrayList<>();
     for (Node node : element.childNodes) {
         if (node instanceof TextNode) {
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
+            if (!tn.isBlank()) {
                 toMove.add(tn);
             }
+        } else if (node instanceof Element) {
+            // Recurse into child elements to normalize their text nodes as well
+            normalise((Element) node);
+        }
     }
 
     for (Node node : toMove) {
         element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
+        // Append the text node to the body, preserving order
         body().appendChild(node);
+        // Optionally, insert a space before each moved text node, depending on requirements
+        // body().appendChild(new TextNode(" ", ""));
     }
 }
\ No newline at end of file
