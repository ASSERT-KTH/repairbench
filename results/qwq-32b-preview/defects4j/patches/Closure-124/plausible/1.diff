diff --git a/tmp/cb57d11c-3608-4868-afc9-bc4a4a04f5d8_buggy.java b/tmp/09dd54dc-b64f-4601-8fee-687f892a44cc_fixed.java
index 2573d30..dd249da 100644
--- a/tmp/cb57d11c-3608-4868-afc9-bc4a4a04f5d8_buggy.java
+++ b/tmp/09dd54dc-b64f-4601-8fee-687f892a44cc_fixed.java
@@ -1,20 +1,25 @@
 /**
-   * Checks name referenced in node to determine if it might have
-   * changed.
+ * Checks name referenced in node to determine if it might have changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
+  // Only handle getprop nodes; others are not supported by this function.
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Traverse the property access chain to the root.
+  Node current = node;
+  while (current.isGetProp()) {
+    current = current.getFirstChild();
+  }
+  
+  // Check if the root is a name and if it's assigned to in the replacement.
+  if (current.isName() && isNameAssignedTo(current.getString(), replacement)) {
     return false;
   }
   
   return true;
 }
\ No newline at end of file
