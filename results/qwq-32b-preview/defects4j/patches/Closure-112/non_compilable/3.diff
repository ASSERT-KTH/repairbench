diff --git a/tmp/595682a7-951c-482f-b746-fb148d830f61_buggy.java b/tmp/417e6249-ec2d-43f1-bd47-06cf67151138_fixed.java
index 63641d0..3673d75 100644
--- a/tmp/595682a7-951c-482f-b746-fb148d830f61_buggy.java
+++ b/tmp/417e6249-ec2d-43f1-bd47-06cf67151138_fixed.java
@@ -1,33 +1,2 @@
-  /**
-   * For functions with function(this: T, ...) and T as parameters, type
-   * inference will set the type of this on a function literal argument to the
-   * the actual type of T.
-   */
-  private boolean inferTemplatedTypesForCall(
-      Node n, FunctionType fnType) {
-    final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
-        .getTemplateKeys();
-    if (keys.isEmpty()) {
-      return false;
-    }
-
-    // Try to infer the template types
 Map<TemplateType, JSType> inferred =
     inferTemplateTypesFromParameters(fnType, n);
\ No newline at end of file
-
-
-    // Replace all template types. If we couldn't find a replacement, we
-    // replace it with UNKNOWN.
-    TemplateTypeReplacer replacer = new TemplateTypeReplacer(
-        registry, inferred);
-    Node callTarget = n.getFirstChild();
-
-    FunctionType replacementFnType = fnType.visit(replacer)
-        .toMaybeFunctionType();
-    Preconditions.checkNotNull(replacementFnType);
-
-    callTarget.setJSType(replacementFnType);
-    n.setJSType(replacementFnType.getReturnType());
-
-    return replacer.madeChanges;
-  }
