diff --git a/tmp/8cb10b68-3d0d-4964-857c-12596c92bdb7_buggy.java b/tmp/d3b45393-bc28-4708-be82-e37d51c52e75_fixed.java
index 63641d0..c41b5fe 100644
--- a/tmp/8cb10b68-3d0d-4964-857c-12596c92bdb7_buggy.java
+++ b/tmp/d3b45393-bc28-4708-be82-e37d51c52e75_fixed.java
@@ -1,33 +1,37 @@
 /**
  * For functions with function(this: T, ...) and T as parameters, type
  * inference will set the type of this on a function literal argument to the
  * the actual type of T.
  */
 private boolean inferTemplatedTypesForCall(
     Node n, FunctionType fnType) {
   final ImmutableList<TemplateType> keys = fnType.getTemplateTypeMap()
       .getTemplateKeys();
   if (keys.isEmpty()) {
     return false;
   }
 
   // Try to infer the template types
   Map<TemplateType, JSType> inferred =
       inferTemplateTypesFromParameters(fnType, n);
 
+  // If no types were inferred, return false to indicate no changes
+  if (inferred.isEmpty()) {
+    return false;
+  }
 
   // Replace all template types. If we couldn't find a replacement, we
-    // replace it with UNKNOWN.
+  // replace it with Object type.
   TemplateTypeReplacer replacer = new TemplateTypeReplacer(
       registry, inferred);
   Node callTarget = n.getFirstChild();
 
   FunctionType replacementFnType = fnType.visit(replacer)
       .toMaybeFunctionType();
   Preconditions.checkNotNull(replacementFnType);
 
   callTarget.setJSType(replacementFnType);
   n.setJSType(replacementFnType.getReturnType());
 
   return replacer.madeChanges;
 }
\ No newline at end of file
