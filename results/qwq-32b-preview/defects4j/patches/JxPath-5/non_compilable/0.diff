diff --git a/tmp/1b028c27-7a6e-4cc3-9380-d54c15b0aceb_buggy.java b/tmp/6490e136-cd3c-4b41-99a6-f0210fc3f01d_fixed.java
index 5f8ac1a..0f513e6 100644
--- a/tmp/1b028c27-7a6e-4cc3-9380-d54c15b0aceb_buggy.java
+++ b/tmp/6490e136-cd3c-4b41-99a6-f0210fc3f01d_fixed.java
@@ -1,34 +1,41 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0 ? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0 ? 1 : r;
     }
     if (p1 == null && p2 == null) {
         return 0;
     }
 
     if (p1 != null && p1.equals(p2)) {
         return 0;
     }
 
     if (depth1 == 1) {
+        // Check if the roots are different
+        if (!p1.getRoot().equals(p2.getRoot())) {
+            // If roots are different, consider p1 less than p2
+            // You can adjust this logic based on your requirements
+            return -1;
+        }
         throw new JXPathException(
                 "Cannot compare pointers that do not belong to the same tree: '"
                         + p1 + "' and '" + p2 + "'");
     }
+
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
