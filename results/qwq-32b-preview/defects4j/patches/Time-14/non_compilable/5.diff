diff --git a/tmp/b2d67929-1a95-4b1e-b9ba-00deee0ee781_buggy.java b/tmp/05b1c5d2-c669-4404-9a57-9d0af86d54b7_fixed.java
index 10616db..31808e7 100644
--- a/tmp/b2d67929-1a95-4b1e-b9ba-00deee0ee781_buggy.java
+++ b/tmp/05b1c5d2-c669-4404-9a57-9d0af86d54b7_fixed.java
@@ -1,19 +1,43 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
+        try {
             return super.add(partial, fieldIndex, values, valueToAdd);
+        } catch (IllegalFieldValueException e) {
+            // Handle the case where day of month is invalid after addition
+            int[] newValues = new int[values.length];
+            for (int i = 0; i < values.length; i++) {
+                newValues[i] = values[i];
+            }
+            newValues[fieldIndex] += valueToAdd;
+            try {
+                iChronology.getDateTime(newValues); // Validate the new values
+            } catch (IllegalFieldValueException ex) {
+                // Adjust day of month to the last day of the month if out of range
+                int dayIndex = partial.getFieldType(1).getRelativeIndex();
+                int monthIndex = partial.getFieldType(0).getRelativeIndex();
+                int year = newValues[partial.getFieldType().getRelativeIndex() == 0 ? 0 : 1];
+                int month = newValues[monthIndex];
+                int day = newValues[dayIndex];
+                int maxDay = iChronology.getMonths().length(year)[month - 1];
+                if (day > maxDay) {
+                    newValues[dayIndex] = maxDay;
+                }
+            }
+            return newValues;
+        }
     }
 }
\ No newline at end of file
