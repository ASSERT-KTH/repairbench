diff --git a/tmp/f611be0c-2a7c-456d-8ae3-6685c014be0c_buggy.java b/tmp/3851d802-5258-4552-8685-c1659a189d27_fixed.java
index 10616db..482a769 100644
--- a/tmp/f611be0c-2a7c-456d-8ae3-6685c014be0c_buggy.java
+++ b/tmp/3851d802-5258-4552-8685-c1659a189d27_fixed.java
@@ -1,19 +1,61 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
-        if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
-            }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
-        } else {
+    
+    // Find indices of month and day fields
+    int monthIndex = partial.indexOf(DateTimeFieldType.monthOfYear());
+    int dayIndex = partial.indexOf(DateTimeFieldType.dayOfMonth());
+    
+    if (monthIndex == -1 || dayIndex == -1) {
+        // If either field is missing, fallback to superclass implementation
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
+    
+    int month = values[monthIndex];
+    int day = values[dayIndex];
+    
+    // Add months to the month value
+    int newMonth = month + valueToAdd;
+    int yearsToAdd = 0;
+    
+    if (newMonth <= 0) {
+        yearsToAdd = newMonth / 12;
+        newMonth = newMonth % 12;
+        if (newMonth < 0) {
+            newMonth += 12;
+            yearsToAdd--;
+        }
+    } else if (newMonth > 12) {
+        yearsToAdd = (newMonth - 1) / 12;
+        newMonth = newMonth % 12;
+        if (newMonth == 0) {
+            newMonth = 12;
+            yearsToAdd--;
+        }
+    }
+    
+    // If there's a year field, adjust it
+    int yearIndex = partial.indexOf(DateTimeFieldType.year());
+    if (yearIndex != -1) {
+        int year = values[yearIndex];
+        year += yearsToAdd;
+        values[yearIndex] = year;
+        int maxDays = iChronology.daysPerMonth(year, newMonth);
+        if (day > maxDays) {
+            day = maxDays;
+        }
+    } else {
+        // Assume a non-leap year
+        int maxDays = (newMonth != 2) ? iChronology.daysPerMonth(2000, newMonth) : 28;
+        if (day > maxDays) {
+            day = maxDays;
+        }
+    }
+    
+    // Update the values array
+    values[monthIndex] = newMonth;
+    values[dayIndex] = day;
+    
+    return values;
 }
\ No newline at end of file
