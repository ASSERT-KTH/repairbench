diff --git a/tmp/a59f7bd0-e948-4df6-9cc4-33d0c3ceb4f8_buggy.java b/tmp/59205e75-4cab-47f3-a8fb-413c1779f852_fixed.java
index 10616db..e96dc65 100644
--- a/tmp/a59f7bd0-e948-4df6-9cc4-33d0c3ceb4f8_buggy.java
+++ b/tmp/59205e75-4cab-47f3-a8fb-413c1779f852_fixed.java
@@ -1,19 +1,34 @@
-    //-----------------------------------------------------------------------
+@Override
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
-        if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+    
+    // Use a full date to handle the addition, as partials don't handle date arithmetic well
+    Chronology chrono = iChronology;
+    DateTime dt = new DateTime(1970, 1, 1, 0, 0, 0, 0, chrono); // arbitrary year, but consistent
+    
+    // Set the month and day from the partial
+    for (int i = 0; i < partial.size(); i++) {
+        dt = dt.withField(partial.getFieldType(i), values[i]);
     }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+    
+    // Add the specified value to the field
+    DateTime adjustedDt;
+    if (fieldIndex == DateTimeConstants.MONTH_OF_YEAR) {
+        adjustedDt = dt.plusMonths(valueToAdd);
+    } else if (fieldIndex == DateTimeConstants.DAY_OF_MONTH) {
+        adjustedDt = dt.plusDays(valueToAdd);
     } else {
+        // For other fields, delegate to superclass
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
+    
+    // Extract the month and day from the adjusted date
+    int[] result = new int[partial.size()];
+    for (int i = 0; i < partial.size(); i++) {
+        result[i] = adjustedDt.get(partial.getFieldType(i));
+    }
+    
+    return result;
 }
\ No newline at end of file
