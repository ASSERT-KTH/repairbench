diff --git a/tmp/40efb89f-e6f0-4972-9607-f6e36e6872a7_buggy.java b/tmp/6892e4f7-ff28-45a1-a026-85cd3df175cc_fixed.java
index 10616db..661092d 100644
--- a/tmp/40efb89f-e6f0-4972-9607-f6e36e6872a7_buggy.java
+++ b/tmp/6892e4f7-ff28-45a1-a026-85cd3df175cc_fixed.java
@@ -1,19 +1,39 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
-        if (DateTimeUtils.isContiguous(partial)) {
-            long instant = 0L;
-            for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+
+    // Determine indices for month and day fields
+    int monthFieldIndex = -1;
+    int dayFieldIndex = -1;
+    for (int i = 0; i < partial.size(); i++) {
+        DateTimeFieldType ft = partial.getFieldType(i);
+        if (ft == DateTimeFieldType.monthOfYear()) {
+            monthFieldIndex = i;
+        } else if (ft == DateTimeFieldType.dayOfMonth()) {
+            dayFieldIndex = i;
         }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+    }
+    if (monthFieldIndex == -1 || dayFieldIndex == -1) {
+        throw new IllegalArgumentException("Partial must contain monthOfYear and dayOfMonth fields");
+    }
+
+    // Create MonthDay object
+    MonthDay md = new MonthDay(values[monthFieldIndex], values[dayFieldIndex], iChronology);
+
+    // Perform addition based on fieldIndex
+    if (fieldIndex == monthFieldIndex) {
+        md = md.plusMonths(valueToAdd);
+    } else if (fieldIndex == dayFieldIndex) {
+        md = md.plusDays(valueToAdd);
     } else {
-            return super.add(partial, fieldIndex, values, valueToAdd);
+        // Handle other fields if necessary
+        throw new IllegalArgumentException("Unsupported field index");
     }
+
+    // Extract new values
+    int[] newValues = values.clone();
+    newValues[monthFieldIndex] = md.getMonthOfYear();
+    newValues[dayFieldIndex] = md.getDayOfMonth();
+    return newValues;
 }
\ No newline at end of file
