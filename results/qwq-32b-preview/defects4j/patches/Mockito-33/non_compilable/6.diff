diff --git a/tmp/9a0d2883-b844-4e26-9769-f7b8483d594a_buggy.java b/tmp/4bad1209-3e9f-40ed-a3c3-271cb8ccc0ee_fixed.java
index e1fc51f..798e63f 100644
--- a/tmp/9a0d2883-b844-4e26-9769-f7b8483d594a_buggy.java
+++ b/tmp/4bad1209-3e9f-40ed-a3c3-271cb8ccc0ee_fixed.java
@@ -1,9 +1,24 @@
 public boolean hasSameMethod(Invocation candidate) {
-        //not using method.equals() for 1 good reason:
-        //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
     Method m1 = invocation.getMethod();
     Method m2 = candidate.getMethod();
     
-        	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+    // Compare method names
+    if (!m1.getName().equals(m2.getName())) {
+        return false;
+    }
+    
+    // Compare parameter types
+    Class<?>[] params1 = m1.getParameterTypes();
+    Class<?>[] params2 = m2.getParameterTypes();
+    if (!Arrays.equals(params1, params2)) {
+        return false;
+    }
+    
+    // Compare declaring classes
+    if (!m1.getDeclaringClass().equals(m2.getDeclaringClass())) {
+        return false;
+    }
+    
+    // If all compared aspects are equal, the methods are considered the same
+    return true;
 }
\ No newline at end of file
