diff --git a/tmp/9f868035-df82-4b72-8ca4-1ef565afcfe2_buggy.java b/tmp/be26a24a-4a7f-4e98-8f00-de7b8f2604fd_fixed.java
index e7bb994..280dd2a 100644
--- a/tmp/9f868035-df82-4b72-8ca4-1ef565afcfe2_buggy.java
+++ b/tmp/be26a24a-4a7f-4e98-8f00-de7b8f2604fd_fixed.java
@@ -1,102 +1,119 @@
 /**
  * Returns the range for the specified axis.
  *
  * @param axis  the axis.
  *
  * @return The range.
  */
 public Range getDataRange(ValueAxis axis) {
 
     Range result = null;
     List mappedDatasets = new ArrayList();
     List includedAnnotations = new ArrayList();
     boolean isDomainAxis = true;
 
     // is it a domain axis?
     int domainIndex = getDomainAxisIndex(axis);
     if (domainIndex >= 0) {
         isDomainAxis = true;
-            mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
-                    new Integer(domainIndex)));
+        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));
         if (domainIndex == 0) {
             // grab the plot's annotations
             Iterator iterator = this.annotations.iterator();
             while (iterator.hasNext()) {
                 XYAnnotation annotation = (XYAnnotation) iterator.next();
                 if (annotation instanceof XYAnnotationBoundsInfo) {
                     includedAnnotations.add(annotation);
                 }
             }
         }
     }
 
     // or is it a range axis?
     int rangeIndex = getRangeAxisIndex(axis);
     if (rangeIndex >= 0) {
         isDomainAxis = false;
-            mappedDatasets.addAll(getDatasetsMappedToRangeAxis(
-                    new Integer(rangeIndex)));
+        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));
         if (rangeIndex == 0) {
             Iterator iterator = this.annotations.iterator();
             while (iterator.hasNext()) {
                 XYAnnotation annotation = (XYAnnotation) iterator.next();
                 if (annotation instanceof XYAnnotationBoundsInfo) {
                     includedAnnotations.add(annotation);
                 }
             }
         }
     }
 
     // iterate through the datasets that map to the axis and get the union
     // of the ranges.
+    if (mappedDatasets != null) {
         Iterator iterator = mappedDatasets.iterator();
         while (iterator.hasNext()) {
             XYDataset d = (XYDataset) iterator.next();
             if (d != null) {
                 XYItemRenderer r = getRendererForDataset(d);
                 if (isDomainAxis) {
                     if (r != null) {
-                        result = Range.combine(result, r.findDomainBounds(d));
+                        Range r1 = r.findDomainBounds(d);
+                        if (r1 != null) {
+                            result = Range.combine(result, r1);
                         }
-                    else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findDomainBounds(d));
+                    } else {
+                        Range r1 = DatasetUtilities.findDomainBounds(d);
+                        if (r1 != null) {
+                            result = Range.combine(result, r1);
                         }
                     }
-                else {
+                } else {
                     if (r != null) {
-                        result = Range.combine(result, r.findRangeBounds(d));
+                        Range r1 = r.findRangeBounds(d);
+                        if (r1 != null) {
+                            result = Range.combine(result, r1);
+                        }
+                    } else {
+                        Range r1 = DatasetUtilities.findRangeBounds(d);
+                        if (r1 != null) {
+                            result = Range.combine(result, r1);
                         }
-                    else {
-                        result = Range.combine(result,
-                                DatasetUtilities.findRangeBounds(d));
                     }
                 }
                 
+                if (r != null) {
                     Collection c = r.getAnnotations();
+                    if (c != null) {
                         Iterator i = c.iterator();
                         while (i.hasNext()) {
                             XYAnnotation a = (XYAnnotation) i.next();
-                        if (a instanceof XYAnnotationBoundsInfo) {
+                            if (a instanceof XYAnnotationBoundsInfo && a != null) {
                                 includedAnnotations.add(a);
                             }
                         }
                     }
                 }
+            }
+        }
+    }
 
+    if (includedAnnotations != null) {
         Iterator it = includedAnnotations.iterator();
         while (it.hasNext()) {
             XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();
-            if (xyabi.getIncludeInDataBounds()) {
+            if (xyabi != null && xyabi.getIncludeInDataBounds()) {
                 if (isDomainAxis) {
-                    result = Range.combine(result, xyabi.getXRange());
+                    Range xRange = xyabi.getXRange();
+                    if (xRange != null) {
+                        result = Range.combine(result, xRange);
+                    }
+                } else {
+                    Range yRange = xyabi.getYRange();
+                    if (yRange != null) {
+                        result = Range.combine(result, yRange);
+                    }
                 }
-                else {
-                    result = Range.combine(result, xyabi.getYRange());
             }
         }
     }
 
     return result;
-
 }
\ No newline at end of file
