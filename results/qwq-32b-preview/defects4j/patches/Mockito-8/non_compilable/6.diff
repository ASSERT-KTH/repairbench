diff --git a/tmp/33ced1a0-46d9-465a-b4df-4550ce9672b1_buggy.java b/tmp/c7e71b24-655c-4e04-b37e-4b3f5623b0f5_fixed.java
index 42b58d0..b6a293b 100644
--- a/tmp/33ced1a0-46d9-465a-b4df-4550ce9672b1_buggy.java
+++ b/tmp/c7e71b24-655c-4e04-b37e-4b3f5623b0f5_fixed.java
@@ -1,19 +1,37 @@
+import java.lang.reflect.Type;
+import java.lang.reflect.TypeVariable;
+import java.util.HashSet;
+import java.util.Set;
+import java.util.Map;
+import java.util.HashMap;
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.WildcardType;
+import java.lang.reflect.Class;
+
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    Set<TypeVariable> visited = new HashSet<>();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+        
+        if (actualTypeArgument instanceof ParameterizedType && typeParameter instanceof TypeVariable) {
+            TypeVariable tv = (TypeVariable) typeParameter;
+            if (visited.add(tv)) {
+                registerTypeVariablesOn(actualTypeArgument);
+            }
+        }
     }
 }
\ No newline at end of file
