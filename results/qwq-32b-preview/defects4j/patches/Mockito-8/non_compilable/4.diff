diff --git a/tmp/2f48b93f-7a74-4da3-850c-5c518ac42ce6_buggy.java b/tmp/2932baf6-b3c2-4ff6-a523-fae8fa1ad2e4_fixed.java
index 42b58d0..bb23fd0 100644
--- a/tmp/2f48b93f-7a74-4da3-850c-5c518ac42ce6_buggy.java
+++ b/tmp/2932baf6-b3c2-4ff6-a523-fae8fa1ad2e4_fixed.java
@@ -1,19 +1,26 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
+    Set<TypeVariable<?>> processedTypeVariables = new HashSet<>(); // Track processed type variables
+
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        if (processedTypeVariables.contains(typeParameter)) {
+            continue; // Skip already processed type variables
+        }
+        processedTypeVariables.add(typeParameter);
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
