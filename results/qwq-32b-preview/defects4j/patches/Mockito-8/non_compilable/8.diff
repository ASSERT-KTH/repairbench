diff --git a/tmp/83ee15c3-c269-4c85-bba8-4345617741dd_buggy.java b/tmp/ad13bc98-6ce7-4c81-a12e-bb797970d664_fixed.java
index 42b58d0..282a0cc 100644
--- a/tmp/83ee15c3-c269-4c85-bba8-4345617741dd_buggy.java
+++ b/tmp/ad13bc98-6ce7-4c81-a12e-bb797970d664_fixed.java
@@ -1,19 +1,26 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
+    TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
+        TypeVariable<?> typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
-                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+            WildcardType wildcard = (WildcardType) actualTypeArgument;
+            Type[] bounds = boundsOf(wildcard);
+            // Assuming boundsOf returns an array of types representing the bounds
+            // of the wildcard. We need to handle these bounds appropriately.
+            // For now, let's assume we're putting the bounds into the map.
+            contextualActualTypeParameters.put(typeParameter, bounds);
         } else {
+            // Direct type argument, put it directly into the map
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
+        // Optionally, log the mapping for debugging purposes
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
