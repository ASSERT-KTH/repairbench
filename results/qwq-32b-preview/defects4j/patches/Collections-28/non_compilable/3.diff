diff --git a/tmp/ca6a55cc-ab11-493e-ba2d-420f7eae1bf1_buggy.java b/tmp/0e26fa6a-9aeb-4ff3-8122-efa30daeee66_fixed.java
index e69de29..2eada2e 100644
--- a/tmp/ca6a55cc-ab11-493e-ba2d-420f7eae1bf1_buggy.java
+++ b/tmp/0e26fa6a-9aeb-4ff3-8122-efa30daeee66_fixed.java
@@ -0,0 +1,36 @@
+public SortedMap<String, V> prefixMap(String prefix) {
+    if (prefix == null) {
+        throw new NullPointerException("Prefix cannot be null");
+    }
+    
+    // Find the node corresponding to the prefix
+    Node current = root;
+    for (int i = 0; i < prefix.length(); i++) {
+        char c = prefix.charAt(i);
+        current = current.getChild(c);
+        if (current == null) {
+            // Prefix not found
+            return new TreeMap<String, V>();
+        }
+    }
+    
+    // Collect all keys in the subtree starting from 'current'
+    Map<String, V> subMap = new TreeMap<String, V>();
+    collectKeys(current, prefix, subMap);
+    
+    return new TreeMap<String, V>(subMap);
+}
+
+private void collectKeys(Node node, String prefix, Map<String, V> map) {
+    if (node == null) {
+        return;
+    }
+    
+    if (node.isEndOfKey()) {
+        map.put(prefix, node.getValue());
+    }
+    
+    for (char c : node.getChildren().keySet()) {
+        collectKeys(node.getChild(c), prefix + c, map);
+    }
+}
\ No newline at end of file
