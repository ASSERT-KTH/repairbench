diff --git a/tmp/948c2413-5b2c-47ec-a45e-952752127fcd_buggy.java b/tmp/322cd512-35f6-4846-b7a8-b881c0050089_fixed.java
index c6b65da..b86f266 100644
--- a/tmp/948c2413-5b2c-47ec-a45e-952752127fcd_buggy.java
+++ b/tmp/322cd512-35f6-4846-b7a8-b881c0050089_fixed.java
@@ -1,25 +1,22 @@
-    /**
-     * Returns the options with a long name starting with the name specified.
-     * 
-     * @param opt the partial name of the option
-     * @return the options matching the partial name specified, or an empty list if none matches
-     * @since 1.3
-     */
-    public List<String> getMatchingOptions(String opt)
-    {
+public List<String> getMatchingOptions(String opt) {
     opt = Util.stripLeadingHyphens(opt);
     
-        List<String> matchingOpts = new ArrayList<String>();
+    List<String> matchingOpts = new ArrayList<>();
+    List<String> exactMatchOpts = new ArrayList<>();
     
-        // for a perfect match return the single option only
-
-        for (String longOpt : longOpts.keySet())
-        {
-            if (longOpt.startsWith(opt))
-            {
+    for (String longOpt : longOpts.keySet()) {
+        if (longOpt.equals(opt)) {
+            exactMatchOpts.add(longOpt);
+        } else if (longOpt.startsWith(opt)) {
             matchingOpts.add(longOpt);
         }
     }
     
+    // If there is an exact match, return only the exact matches
+    if (!exactMatchOpts.isEmpty()) {
+        return exactMatchOpts;
+    }
+    
+    // Otherwise, return the options that start with the partial name
     return matchingOpts;
 }
\ No newline at end of file
