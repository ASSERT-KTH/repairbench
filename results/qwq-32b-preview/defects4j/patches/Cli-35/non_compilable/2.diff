diff --git a/tmp/8f71f871-aded-4b7e-83a3-2a1c004f2872_buggy.java b/tmp/c6f0c411-da37-4aef-a4cf-e88039ee086c_fixed.java
index c6b65da..05a0526 100644
--- a/tmp/8f71f871-aded-4b7e-83a3-2a1c004f2872_buggy.java
+++ b/tmp/c6f0c411-da37-4aef-a4cf-e88039ee086c_fixed.java
@@ -1,25 +1,27 @@
 /**
  * Returns the options with a long name starting with the name specified.
  * 
  * @param opt the partial name of the option
  * @return the options matching the partial name specified, or an empty list if none matches
  * @since 1.3
  */
-    public List<String> getMatchingOptions(String opt)
-    {
-        opt = Util.stripLeadingHyphens(opt);
+public List<String> getMatchingOptions(String opt) {
+    String strippedOpt = Util.stripLeadingHyphens(opt);
     
-        List<String> matchingOpts = new ArrayList<String>();
+    // Check for exact match
+    for (String longOpt : longOpts.keySet()) {
+        if (longOpt.equals(strippedOpt)) {
+            return Collections.singletonList(longOpt);
+        }
+    }
     
-        // for a perfect match return the single option only
-
-        for (String longOpt : longOpts.keySet())
-        {
-            if (longOpt.startsWith(opt))
-            {
+    // Collect options that start with the strippedOpt
+    List<String> matchingOpts = new ArrayList<>();
+    for (String longOpt : longOpts.keySet()) {
+        if (longOpt.startsWith(strippedOpt)) {
             matchingOpts.add(longOpt);
         }
     }
     
     return matchingOpts;
 }
\ No newline at end of file
