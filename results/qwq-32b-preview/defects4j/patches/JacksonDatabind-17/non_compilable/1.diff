diff --git a/tmp/7e9a7f37-43c4-4d6b-8bb2-965849ae026c_buggy.java b/tmp/1e90dcd8-2623-4abe-b34b-ea670a5180a0_fixed.java
index 01967cc..9052e52 100644
--- a/tmp/7e9a7f37-43c4-4d6b-8bb2-965849ae026c_buggy.java
+++ b/tmp/1e90dcd8-2623-4abe-b34b-ea670a5180a0_fixed.java
@@ -1,35 +1,4 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
-        public boolean useForType(JavaType t)
-        {
-            switch (_appliesFor) {
-            case NON_CONCRETE_AND_ARRAYS:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
-                }
-                // fall through
-            case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
-
-            case NON_FINAL:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
-                }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
-            }
-        }
+private static final Class<?>[] SIMPLE_TYPES = {
+    String.class, Boolean.class, Integer.class, Double.class,
+    Long.class, Float.class, Short.class, Byte.class
+};
\ No newline at end of file
