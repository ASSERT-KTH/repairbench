diff --git a/tmp/0493c8da-0901-4dd3-8c57-1d2c1162febe_buggy.java b/tmp/cec0db67-4e49-4cf6-90b3-f76692a2d765_fixed.java
index 01967cc..4e0a42f 100644
--- a/tmp/0493c8da-0901-4dd3-8c57-1d2c1162febe_buggy.java
+++ b/tmp/cec0db67-4e49-4cf6-90b3-f76692a2d765_fixed.java
@@ -1,35 +1,7 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
-        public boolean useForType(JavaType t)
-        {
-            switch (_appliesFor) {
-            case NON_CONCRETE_AND_ARRAYS:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
-                }
-                // fall through
-            case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+Class<?> naturalTypes[] = { String.class, Boolean.class, Integer.class, Double.class, Long.class, Float.class, Short.class, Byte.class, Character.class };
 
-            case NON_FINAL:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
-                }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
+for (Class<?> nt : naturalTypes) {
+    if (nt.isAssignableFrom(t.getRawClass())) {
+        return false;
     }
 }
\ No newline at end of file
