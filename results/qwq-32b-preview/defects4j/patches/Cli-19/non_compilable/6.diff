diff --git a/tmp/136b8d73-842f-4089-a8f3-23ee64218815_buggy.java b/tmp/9f6de94f-acf5-4d32-b171-8fe8c8065c24_fixed.java
index 62e8ec8..c722a03 100644
--- a/tmp/136b8d73-842f-4089-a8f3-23ee64218815_buggy.java
+++ b/tmp/9f6de94f-acf5-4d32-b171-8fe8c8065c24_fixed.java
@@ -1,26 +1,14 @@
-    /**
-     * <p>If an {@link Option} exists for <code>token</code> then
-     * set the current option and add the token to the processed 
-     * list.</p>
-     *
-     * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
-     * is set then ignore the current token and add the remaining tokens
-     * to the processed tokens list directly.</p>
-     *
-     * @param token The current option token
-     * @param stopAtNonOption Specifies whether flattening should halt
-     * at the first non option.
-     */
-    private void processOptionToken(String token, boolean stopAtNonOption)
-    {
-        if (options.hasOption(token))
-        {
+private void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException {
+    if (options.hasOption(token)) {
         currentOption = options.getOption(token);
         tokens.add(token);
-        }
-        else if (stopAtNonOption)
-        {
-            eatTheRest = true;
+    } else if (stopAtNonOption) {
+        throw new UnrecognizedOptionException(token);
+    } else {
+        // Handle the case where stopAtNonOption is false and option does not exist
+        // For example, you might want to add the token to a list of unrecognized options
+        // or handle it differently based on your requirements.
+        // In this solution, we'll just add it to the processed tokens list.
         tokens.add(token);
     }
 }
\ No newline at end of file
