diff --git a/tmp/4f2af3b7-76d4-404a-8484-211275d7d99f_buggy.java b/tmp/124e0d4e-ac89-453b-81fd-cb0a76d3203a_fixed.java
index 62e8ec8..c57e871 100644
--- a/tmp/4f2af3b7-76d4-404a-8484-211275d7d99f_buggy.java
+++ b/tmp/124e0d4e-ac89-453b-81fd-cb0a76d3203a_fixed.java
@@ -1,26 +1,23 @@
 /**
  * <p>If an {@link Option} exists for <code>token</code> then
  * set the current option and add the token to the processed 
  * list.</p>
  *
  * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
-     * is set then ignore the current token and add the remaining tokens
-     * to the processed tokens list directly.</p>
+ * is set then throw an UnrecognizedOptionException.</p>
  *
  * @param token The current option token
  * @param stopAtNonOption Specifies whether flattening should halt
  * at the first non option.
+ * @throws UnrecognizedOptionException if the option is unrecognized and stopAtNonOption is true
  */
-    private void processOptionToken(String token, boolean stopAtNonOption)
-    {
-        if (options.hasOption(token))
-        {
+private void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException {
+    if (options.hasOption(token)) {
         currentOption = options.getOption(token);
         tokens.add(token);
-        }
-        else if (stopAtNonOption)
-        {
-            eatTheRest = true;
-            tokens.add(token);
+    } else if (stopAtNonOption) {
+        throw new UnrecognizedOptionException(token);
+    } else {
+        // If stopAtNonOption is false, do nothing for unrecognized options
     }
 }
\ No newline at end of file
