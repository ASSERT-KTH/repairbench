diff --git a/tmp/9d0b99ad-b43a-46aa-9f8e-264420148d0e_buggy.java b/tmp/b1b9ec92-0ec6-43e9-9838-7bba62c1c700_fixed.java
index 66e3d01..0bcf98e 100644
--- a/tmp/9d0b99ad-b43a-46aa-9f8e-264420148d0e_buggy.java
+++ b/tmp/b1b9ec92-0ec6-43e9-9838-7bba62c1c700_fixed.java
@@ -1,34 +1,43 @@
-  /**
-   * Determines whether the given value may be assigned to a define.
-   *
-   * @param val The value being assigned.
-   * @param defines The list of names of existing defines.
-   */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
         case Token.STRING:
         case Token.NUMBER:
         case Token.TRUE:
         case Token.FALSE:
             return true;
 
-      // Binary operators are only valid if both children are valid.
-      case Token.BITAND:
-      case Token.BITNOT:
-      case Token.BITOR:
-      case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
+        // Handle unary operators by checking their single child.
         case Token.NOT:
         case Token.NEG:
             return isValidDefineValue(val.getFirstChild(), defines);
 
-      // Names are valid if and only if they are defines themselves.
+        // Handle binary operators by checking both children.
+        case Token.BITAND:
+        case Token.BITOR:
+        case Token.BITXOR:
+        case Token.BITNOT:
+        case Token.ADD:
+        case Token.SUB:
+        case Token.MUL:
+        case Token.DIV:
+        case Token.MOD:
+        case Token.LSH:
+        case Token.RSH:
+        case Token.URSH:
+            Node left = val.getFirstChild();
+            Node right = left.getNext();
+            return isValidDefineValue(left, defines) && isValidDefineValue(right, defines);
+
+        // Handle names and property accesses.
         case Token.NAME:
         case Token.GETPROP:
             if (val.isQualifiedName()) {
                 return defines.contains(val.getQualifiedName());
             }
-    }
             return false;
+
+        // Handle cases where the node type is not supported for defines.
+        default:
+            return false;
+    }
 }
\ No newline at end of file
