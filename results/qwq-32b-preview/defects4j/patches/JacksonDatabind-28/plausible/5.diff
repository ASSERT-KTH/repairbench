diff --git a/tmp/ad5ff74f-1bea-4ed5-beec-cdec61a25e9f_buggy.java b/tmp/960213b1-a295-49d7-a5dc-89783a1d78b4_fixed.java
index 66bb99f..939026f 100644
--- a/tmp/ad5ff74f-1bea-4ed5-beec-cdec61a25e9f_buggy.java
+++ b/tmp/960213b1-a295-49d7-a5dc-89783a1d78b4_fixed.java
@@ -1,14 +1,15 @@
 @Override
-        public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
-        {
-            if (p.getCurrentToken() == JsonToken.START_OBJECT) {
+public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    JsonToken token = p.getCurrentToken();
+    if (token == JsonToken.START_OBJECT) {
         p.nextToken();
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
-            }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
-            if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+    } else if (token == JsonToken.FIELD_NAME) {
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
+    } else if (token == JsonToken.END_OBJECT) {
+        // Handle the case where the object is empty
+        p.nextToken();  // Consume the END_OBJECT token
+        return ctxt.getNodeFactory().objectNode();
     }
     throw ctxt.mappingException(ObjectNode.class);
 }
\ No newline at end of file
