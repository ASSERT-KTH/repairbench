diff --git a/tmp/f4ef47fd-1804-41cf-bdff-3b93647b0b25_buggy.java b/tmp/37b0c852-38c5-4cb1-a81c-6194b4afeaca_fixed.java
index 939f49b..f98f72f 100644
--- a/tmp/f4ef47fd-1804-41cf-bdff-3b93647b0b25_buggy.java
+++ b/tmp/37b0c852-38c5-4cb1-a81c-6194b4afeaca_fixed.java
@@ -1,21 +1,16 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
-        // We want to exclude the assignment itself from the usage list
-        boolean isChainedProperty =
-            n.getFirstChild().getType() == Token.GETPROP;
-
-        if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      && n.getType() == Token.GETPROP) {
+    // Check if the property is chained and ends with 'prototype'
+    Node current = n;
+    while (current.getType() == Token.GETPROP) {
+      Node key = current.getSecondChild();
+      if (key.getType() == Token.STRING && key.getString().equals("prototype")) {
         return true;
       }
+      current = current.getFirstChild();
     }
   }
-
   return false;
 }
\ No newline at end of file
