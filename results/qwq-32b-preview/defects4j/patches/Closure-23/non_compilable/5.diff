diff --git a/tmp/05624401-edab-470d-9ad1-0479a512c522_buggy.java b/tmp/bfcff15a-6fc8-4d08-9139-5aaf64bc53ce_fixed.java
index cfdcd9c..d691796 100644
--- a/tmp/05624401-edab-470d-9ad1-0479a512c522_buggy.java
+++ b/tmp/bfcff15a-6fc8-4d08-9139-5aaf64bc53ce_fixed.java
@@ -1,51 +1,7 @@
-  private Node tryFoldArrayAccess(Node n, Node left, Node right) {
-    Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
-    if (isAssignmentTarget(n)) {
-      return n;
-    }
-
-    if (!right.isNumber()) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
-      return n;
-    }
-
-    double index = right.getDouble();
-    int intIndex = (int) index;
-    if (intIndex != index) {
-      error(INVALID_GETELEM_INDEX_ERROR, right);
-      return n;
-    }
-
-    if (intIndex < 0) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
 Node current = left.getFirstChild();
 Node elem = null;
 for (int i = 0; current != null && i < intIndex; i++) {
     elem = current;
 
     current = current.getNext();
 }
\ No newline at end of file
-
-    if (elem == null) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
-    if (elem.isEmpty()) {
-      elem = NodeUtil.newUndefinedNode(elem);
-    } else {
-      left.removeChild(elem);
-    }
-
-    // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
-    reportCodeChange();
-    return elem;
-  }
