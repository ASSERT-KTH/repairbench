diff --git a/tmp/c44292bc-0597-4a2b-a9c8-1a5bcced06d7_buggy.java b/tmp/f5d9a09c-33f5-49ed-b526-5b687451fd80_fixed.java
index 99141e0..5d2b297 100644
--- a/tmp/c44292bc-0597-4a2b-a9c8-1a5bcced06d7_buggy.java
+++ b/tmp/f5d9a09c-33f5-49ed-b526-5b687451fd80_fixed.java
@@ -1,33 +1,2 @@
-    static String unescape(String string) {
-        if (!string.contains("&"))
-            return string;
 
-        Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
-        StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
-        // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
-
-        while (m.find()) {
-            int charval = -1;
-            String num = m.group(3);
-            if (num != null) {
-                try {
-                    int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
-                    charval = Integer.valueOf(num, base);
-                } catch (NumberFormatException e) {
-                } // skip
-            } else {
-                String name = m.group(1);
-                if (full.containsKey(name))
-                    charval = full.get(name);
-            }
-
-            if (charval != -1 || charval > 0xFFFF) { // out of range
-                String c = Character.toString((char) charval);
-                m.appendReplacement(accum, c);
-            } else {
-                m.appendReplacement(accum, m.group(0));
-            }
-        }
-        m.appendTail(accum);
-        return accum.toString();
-    }
+if (charval != -1 || charval > 0xFFFF)
