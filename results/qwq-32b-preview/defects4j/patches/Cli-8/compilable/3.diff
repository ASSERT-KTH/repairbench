diff --git a/tmp/042eb111-9776-4255-ac5a-2b82703be30a_buggy.java b/tmp/d30b14d1-f4ea-464f-a946-0ac04514aba2_fixed.java
index 8e93a5e..e96067e 100644
--- a/tmp/042eb111-9776-4255-ac5a-2b82703be30a_buggy.java
+++ b/tmp/d30b14d1-f4ea-464f-a946-0ac04514aba2_fixed.java
@@ -1,43 +1,33 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
+    // Find the position where the first wrap should occur
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+    if (pos == -1) {
+        // If no wrap is needed, just append the trimmed text
         sb.append(rtrim(text));
-
         return sb;
     }
+
+    // Append the first part of the text up to the wrap position
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // Create padding for subsequent lines
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
-        {
+    while (true) {
+        // Prepend padding and trim the remaining text
         text = padding + text.substring(pos).trim();
+
+        // Find the next wrap position
         pos = findWrapPos(text, width, nextLineTabStop);
 
-            if (pos == -1)
-            {
+        if (pos == -1) {
+            // If no more wrap is needed, append the remaining text
             sb.append(text);
-
             return sb;
         }
 
+        // Append the wrapped part and continue
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
