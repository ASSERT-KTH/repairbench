diff --git a/tmp/4db88139-edab-4f5c-93d5-cff1f1c2f835_buggy.java b/tmp/3543fcbc-2650-4aef-a748-98edcbe5f19b_fixed.java
index 308b324..f5992b0 100644
--- a/tmp/4db88139-edab-4f5c-93d5-cff1f1c2f835_buggy.java
+++ b/tmp/3543fcbc-2650-4aef-a748-98edcbe5f19b_fixed.java
@@ -1,11 +1,51 @@
-  /**
-   * Check to see if the given block comment looks like it should be JSDoc.
+   parse("/* \n *@type {number} */ var x = 3;", SUSPICIOUS_COMMENT_WARNING);
+   ```
+   The comment is:
+   ```
+   /*
+   *@type {number}
    */
-  private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
-      errorReporter.warning(
-          SUSPICIOUS_COMMENT_WARNING,
-          sourceName,
-          comment.getLineno(), "", 0);
-    }
-  }
+   ```
+   Here, the `@` symbol is directly after the newline, without a space.
+
+2. **testSuspiciousBlockCommentWarning4**:
+   ```java
+   parse(
+       "  /*\n" +
+       "   * @type {number}\n" +
+       "   */\n" +
+       "  var x = 3;",
+       SUSPICIOUS_COMMENT_WARNING);
+   ```
+   The comment is:
+   ```
+     /*
+       * @type {number}
+       */
+   ```
+   This is a typical JSDoc comment with indentation.
+
+3. **testSuspiciousBlockCommentWarning5**:
+   ```java
+   parse(
+       "  /*\n" +
+       "   * some random text here\n" +
+       "   * @type {number}\n" +
+       "   */\n" +
+       "  var x = 3;",
+       SUSPICIOUS_COMMENT_WARNING);
+   ```
+   The comment is:
+   ```
+     /*
+       * some random text here
+       * @type {number}
+       */
+   ```
+   This also resembles a JSDoc comment with multiple lines.
+
+The current condition checks for `/* @` or `\n * @`, but it might miss cases where the `@` symbol is present without the leading space after the asterisk, or in multi-line comments with different indentation.
+
+To make the function more robust, we can improve the condition to check for lines that start with `* @` after stripping leading whitespace. This way, it can handle different levels of indentation.
+
+Here's the revised function:
