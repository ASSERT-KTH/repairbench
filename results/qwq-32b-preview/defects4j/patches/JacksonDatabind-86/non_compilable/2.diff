diff --git a/tmp/2b5e4201-920f-44f7-addf-2a219258f1a3_buggy.java b/tmp/78ddf849-76d6-4395-9589-03b72d6ca1e0_fixed.java
index e69de29..ce7c7c8 100644
--- a/tmp/2b5e4201-920f-44f7-addf-2a219258f1a3_buggy.java
+++ b/tmp/78ddf849-76d6-4395-9589-03b72d6ca1e0_fixed.java
@@ -0,0 +1,53 @@
+// Modify the JavaType class to ensure superclass types are wrapped in ResolvedRecursiveType
+public class JavaType {
+    // ... existing code ...
+
+    public JavaType getSuperClass() {
+        if (_superClass == null) {
+            // Lazily resolve the superclass type
+            JavaType superType = resolveSuperClassType();
+            _superClass = superType;
+        }
+        return _superClass;
+    }
+
+    private JavaType resolveSuperClassType() {
+        Class<?> superClass = _class.getSuperclass();
+        if (superClass == null || superClass == Object.class) {
+            return null;
+        }
+        // Construct the superclass type and wrap it in ResolvedRecursiveType
+        JavaType superType = _typeFactory.constructType(superClass);
+        return new ResolvedRecursiveType(superType);
+    }
+}
+
+// Modify ResolvedRecursiveType to handle recursive references properly
+public class ResolvedRecursiveType extends JavaType {
+    public ResolvedRecursiveType(JavaType type) {
+        super(type);
+        // Additional initialization if needed
+    }
+
+    // Implement methods to handle recursive resolution
+    // ...
+}
+
+// Ensure BeanSerializer includes base class properties
+public class BeanSerializer extends StdSerializer<Object> {
+    public BeanSerializer(BeanDescriptor bd, BeanProperty property, ObjectIdWriter objectIdWriter, InjectableValues injectableValues) {
+        super(bd.getBeanClass(), property, false);
+        // ... existing code ...
+
+        // Collect properties including those from base classes
+        List<BeanPropertyWriter> props = new ArrayList<>();
+        BeanDescription beanDesc = bd;
+        while (beanDesc != null) {
+            props.addAll(beanDesc.findProperties());
+            beanDesc = beanDesc.getSuperClassDescription();
+        }
+        _propertyList = props;
+    }
+
+    // ... existing code ...
+}
\ No newline at end of file
