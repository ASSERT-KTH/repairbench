diff --git a/tmp/8bf9433f-4bdc-447d-bb34-172c5ad0581e_buggy.java b/tmp/804b8d3e-ecf9-4ea1-86bc-42d87e1766d0_fixed.java
index a7549f0..7df5a4d 100644
--- a/tmp/8bf9433f-4bdc-447d-bb34-172c5ad0581e_buggy.java
+++ b/tmp/804b8d3e-ecf9-4ea1-86bc-42d87e1766d0_fixed.java
@@ -1,50 +1,31 @@
-    /**
-     * Sets the values of Options using the values in <code>properties</code>.
-     *
-     * @param properties The value properties to be processed.
-     */
-    protected void processProperties(Properties properties)
-    {
-        if (properties == null)
-        {
-            return;
-        }
-
-        for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)
-        {
-            String option = e.nextElement().toString();
-
 if (!cmd.hasOption(option))
 {
     Option opt = getOptions().getOption(option);
 
-                // get the value from the properties instance
     String value = properties.getProperty(option);
 
     if (opt.hasArg())
     {
         if (opt.getValues() == null || opt.getValues().length == 0)
         {
             try
             {
                 opt.addValueForProcessing(value);
             }
             catch (RuntimeException exp)
             {
                 // if we cannot add the value don't worry about it
             }
         }
     }
     else if (!("yes".equalsIgnoreCase(value)
             || "true".equalsIgnoreCase(value)
             || "1".equalsIgnoreCase(value)))
     {
         // if the value is not yes, true or 1 then don't add the
         // option to the CommandLine
         break;
     }
 
     cmd.addOption(opt);
 }
\ No newline at end of file
-        }
-    }
