diff --git a/tmp/c6a97a20-136c-4dce-bfbd-061093ca5976_buggy.java b/tmp/1175335d-b46e-44c1-b857-0f7f01b70b15_fixed.java
index c9da1b7..b0a1bf3 100644
--- a/tmp/c6a97a20-136c-4dce-bfbd-061093ca5976_buggy.java
+++ b/tmp/1175335d-b46e-44c1-b857-0f7f01b70b15_fixed.java
@@ -1,33 +1,51 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne != null) {
-
         if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
-            // one more thing: ok to override in sub-class
+        // Check if old and new creators are of the same class
         if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            // If both are explicit, throw an exception
+            if ((_explicitCreators & mask) != 0 && explicit) {
                 throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                         + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
             }
+            // If the old one is explicit but the new one is not, skip
+            else if ((_explicitCreators & mask) != 0 && !explicit) {
+                return;
             }
+            // If the old one is not explicit but the new one is, overwrite
+            else {
+                _creators[typeIndex] = _fixAccess(newOne);
                 if (explicit) {
                     _explicitCreators |= mask;
                 }
+            }
+        } else {
+            // Handle the case where old and new creators are of different classes
+            // This might involve merging or choosing one over the other based on some criteria
+            // For now, just overwrite the old creator with the new one
             _creators[typeIndex] = _fixAccess(newOne);
+            if (explicit) {
+                _explicitCreators |= mask;
+            }
+        }
+    } else {
+        // No existing creator, just add the new one
+        _creators[typeIndex] = _fixAccess(newOne);
+        if (explicit) {
+            _explicitCreators |= mask;
+        }
+    }
 }
\ No newline at end of file
