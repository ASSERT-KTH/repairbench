diff --git a/tmp/310f7722-c990-4e73-a39a-41d47a6d2a9f_buggy.java b/tmp/51c1b4a0-f0a2-45da-bb05-e6255f0bb41d_fixed.java
index c9da1b7..89926b6 100644
--- a/tmp/310f7722-c990-4e73-a39a-41d47a6d2a9f_buggy.java
+++ b/tmp/51c1b4a0-f0a2-45da-bb05-e6255f0bb41d_fixed.java
@@ -1,33 +1,20 @@
-    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
-    {
-        final int mask = (1 << typeIndex);
-        _hasNonDefaultCreator = true;
-        AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
 if (oldOne != null) {
-
     if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
         // but skip, if new one not annotated
         if (!explicit) {
             return;
         }
         // both explicit: verify
         // otherwise only verify if neither explicitly annotated.
     }
 
     // one more thing: ok to override in sub-class
     if (oldOne.getClass() == newOne.getClass()) {
         // [databind#667]: avoid one particular class of bogus problems
-
         throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                 + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
         // otherwise, which one to choose?
         // new type more generic, use old
         // new type more specific, use it
     }
 }
\ No newline at end of file
-        if (explicit) {
-            _explicitCreators |= mask;
-        }
-        _creators[typeIndex] = _fixAccess(newOne);
-    }
