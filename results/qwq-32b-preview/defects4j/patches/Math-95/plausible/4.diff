diff --git a/tmp/6cf4c9f3-bf30-4606-9e6f-411092b9c8a2_buggy.java b/tmp/5568e754-07da-42b8-83f0-97ebd6e42446_fixed.java
index 25c13b3..189c12f 100644
--- a/tmp/6cf4c9f3-bf30-4606-9e6f-411092b9c8a2_buggy.java
+++ b/tmp/5568e754-07da-42b8-83f0-97ebd6e42446_fixed.java
@@ -1,15 +1,16 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
 protected double getInitialDomain(double p) {
     double ret;
     double d = getDenominatorDegreesOfFreedom();
-            // use mean
+
+    // Handle special case when denominator degrees of freedom are 2 or less
+    if (d <= 2.0) {
+        // For d <= 2, the F-distribution behaves differently.
+        // We can set the initial value to a small positive number.
+        ret = 1.0;
+    } else {
+        // Use the mean of the F-distribution as the initial value
         ret = d / (d - 2.0);
+    }
+
     return ret;
 }
\ No newline at end of file
