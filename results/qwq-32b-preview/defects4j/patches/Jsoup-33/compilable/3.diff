diff --git a/tmp/e9719247-5d5c-4bb4-9e7d-9cfe73a7bae4_buggy.java b/tmp/910bc5b0-bd38-4157-b86c-e96bda463ea5_fixed.java
index dc93be3..c91bda5 100644
--- a/tmp/e9719247-5d5c-4bb4-9e7d-9cfe73a7bae4_buggy.java
+++ b/tmp/910bc5b0-bd38-4157-b86c-e96bda463ea5_fixed.java
@@ -1,14 +1,17 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+    // Handle empty unknown tags
+    // When the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
+        // Only emit an end tag if necessary, based on whether the element is a known empty element
+        if (!el.tag().isEmpty()) {
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
