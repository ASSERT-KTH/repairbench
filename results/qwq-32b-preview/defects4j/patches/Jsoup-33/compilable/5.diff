diff --git a/tmp/363fd9bb-caa3-4449-86df-0326c70731c4_buggy.java b/tmp/2a0ec592-c0fc-4e5c-a667-5bab71aed2b1_fixed.java
index dc93be3..9ca9068 100644
--- a/tmp/363fd9bb-caa3-4449-86df-0326c70731c4_buggy.java
+++ b/tmp/2a0ec592-c0fc-4e5c-a667-5bab71aed2b1_fixed.java
@@ -1,14 +1,15 @@
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+    Tag tag = Tag.valueOf(startTag.name());
+    boolean isEmpty = tag.isEmpty();
+
+    if (isEmpty || startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
 
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+    Element el = new Element(tag, baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
