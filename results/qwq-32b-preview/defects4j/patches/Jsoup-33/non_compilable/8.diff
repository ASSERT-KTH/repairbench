diff --git a/tmp/4928a9ac-7e1d-4964-95f2-60cb551cafc4_buggy.java b/tmp/ea3ce9a6-1182-442e-9855-ecf9ff416e6a_fixed.java
index dc93be3..4f80ee9 100644
--- a/tmp/4928a9ac-7e1d-4964-95f2-60cb551cafc4_buggy.java
+++ b/tmp/ea3ce9a6-1182-442e-9855-ecf9ff416e6a_fixed.java
@@ -1,14 +1,22 @@
+
 Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+    Tag tag = Tag.valueOf(startTag.name());
+    boolean isVoid = tag.isVoid(); // Assume this method checks if the tag is void
+
     if (startTag.isSelfClosing()) {
+        if (isVoid) {
+            Element el = new Element(tag, baseUri, startTag.attributes);
+            insert(el);
+            return el;
+        } else {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
-        
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+    } else {
+        Element el = new Element(tag, baseUri, startTag.attributes);
         insert(el);
         return el;
     }
+}
