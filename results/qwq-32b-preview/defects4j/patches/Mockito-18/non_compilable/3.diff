diff --git a/tmp/226344b8-2329-43d0-a1a8-1b47c1a02d0e_buggy.java b/tmp/09bb914f-1c45-414c-8bb8-f1285aa56a4a_fixed.java
index 710fcc0..41d0ebe 100644
--- a/tmp/226344b8-2329-43d0-a1a8-1b47c1a02d0e_buggy.java
+++ b/tmp/09bb914f-1c45-414c-8bb8-f1285aa56a4a_fixed.java
@@ -1,37 +1,3 @@
-    Object returnValueFor(Class<?> type) {
-        if (Primitives.isPrimitiveOrWrapper(type)) {
-            return Primitives.defaultValueForPrimitiveOrWrapper(type);
-            //new instances are used instead of Collections.emptyList(), etc.
-            //to avoid UnsupportedOperationException if code under test modifies returned collection
-        } else if (type == Collection.class) {
+else if (Iterable.class.isAssignableFrom(type)) {
     return new LinkedList<Object>();
-        } else if (type == Set.class) {
-            return new HashSet<Object>();
-        } else if (type == HashSet.class) {
-            return new HashSet<Object>();
-        } else if (type == SortedSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == TreeSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == LinkedHashSet.class) {
-            return new LinkedHashSet<Object>();
-        } else if (type == List.class) {
-            return new LinkedList<Object>();
-        } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
-        } else if (type == ArrayList.class) {
-            return new ArrayList<Object>();
-        } else if (type == Map.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == HashMap.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == TreeMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
-        }
-        //Let's not care about the rest of collections.
-        return null;
 }
\ No newline at end of file
