diff --git a/tmp/3de4518a-d01c-4452-996b-186d0a5180e9_buggy.java b/tmp/08f72927-2bad-40ef-bbd8-0f592e7d9fca_fixed.java
index a9a5e27..2d8bda6 100644
--- a/tmp/3de4518a-d01c-4452-996b-186d0a5180e9_buggy.java
+++ b/tmp/08f72927-2bad-40ef-bbd8-0f592e7d9fca_fixed.java
@@ -1,24 +1,13 @@
-    /**
-     * Multiply two values throwing an exception if overflow occurs.
-     * 
-     * @param val1  the first value
-     * @param val2  the second value
-     * @return the new total
-     * @throws ArithmeticException if the value is too big or too small
-     * @since 1.2
-     */
+import java.math.BigInteger;
+
 public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                return -val1;
-            case 0:
-                return 0L;
-            case 1:
-                return val1;
-        }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+    BigInteger bigVal1 = BigInteger.valueOf(val1);
+    BigInteger bigVal2 = BigInteger.valueOf(val2);
+    BigInteger result = bigVal1.multiply(bigVal2);
+    
+    if (result.bitLength() > 63) {
         throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
-        return total;
+    
+    return result.longValue();
 }
\ No newline at end of file
