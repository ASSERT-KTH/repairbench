diff --git a/tmp/dcc725c7-4a43-489f-9858-027234a8e9c3_buggy.java b/tmp/1f4a4c4a-b840-4073-976f-5e6876d5cd67_fixed.java
index a9a5e27..2a82c93 100644
--- a/tmp/dcc725c7-4a43-489f-9858-027234a8e9c3_buggy.java
+++ b/tmp/1f4a4c4a-b840-4073-976f-5e6876d5cd67_fixed.java
@@ -1,24 +1,39 @@
 /**
  * Multiply two values throwing an exception if overflow occurs.
  * 
  * @param val1  the first value
  * @param val2  the second value
  * @return the new total
  * @throws ArithmeticException if the value is too big or too small
  * @since 1.2
  */
 public static long safeMultiply(long val1, int val2) {
     switch (val2) {
-            case -1:
-                return -val1;
         case 0:
             return 0L;
         case 1:
             return val1;
+        case -1:
+            return -val1;
     }
+    
+    if (val2 == Integer.MIN_VALUE) {
+        if (val1 != 0 && val1 != -1) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        }
+        return val1 == 1 ? Long.MIN_VALUE : (val1 == -1 ? Long.MAX_VALUE + 1 : 0);
+    }
+    
+    if (val1 == Long.MIN_VALUE) {
+        if (val2 < -1 || val2 > 1) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        }
+        return val2 == -1 ? Long.MIN_VALUE : 0;
+    }
+    
     long total = val1 * val2;
-        if (total / val2 != val1) {
+    if ((val2 > 0 && total / val2 != val1) || (val2 < 0 && total / val2 != val1)) {
         throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
     return total;
 }
\ No newline at end of file
