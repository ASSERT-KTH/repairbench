diff --git a/tmp/8439f9cb-bf15-45b7-8a45-5492722e10f0_buggy.java b/tmp/67edc8fe-490e-4d95-a026-8357b1450099_fixed.java
index f9a9b5b..c43c554 100644
--- a/tmp/8439f9cb-bf15-45b7-8a45-5492722e10f0_buggy.java
+++ b/tmp/67edc8fe-490e-4d95-a026-8357b1450099_fixed.java
@@ -1,30 +1,6 @@
-    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
-        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
-            throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
-        }
-        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
-                settings.getTypeToMock(),
-                settings.getExtraInterfaces()
-        );
-        T mockInstance = null;
-        try {
-            mockInstance = classInstantiator.instantiate(mockedProxyType);
-            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
-            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
-
-            return ensureMockIsAssignableToMockedType(settings, mockInstance);
-        } catch (ClassCastException cce) {
-            throw new MockitoException(join(
-                    "ClassCastException occurred while creating the mockito mock :",
-                    "  class to mock : " + describeClass(mockedProxyType),
-                    "  created class : " + describeClass(settings.getTypeToMock()),
-                    "  proxy instance class : " + describeClass(mockInstance),
-                    "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
-                    "",
-                    "You might experience classloading issues, please ask the mockito mailing-list.",
-                    ""
-            ),cce);
-        } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
-        }
-    }
+dynamicType = new ByteBuddy()
+    .subclass(superClass)
+    .defineConstructor(ConstructorModifiers.PUBLIC)
+    .withParameters(parameters)
+    .intercept(SuperConstructorCall.INSTANCE)
+    .make();
\ No newline at end of file
