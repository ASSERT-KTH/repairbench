diff --git a/tmp/0cc94b10-d628-4b64-9290-591c04ff5775_buggy.java b/tmp/b894543d-564a-4fe0-9e5b-83fd4c96845b_fixed.java
index 08e51e4..ecced85 100644
--- a/tmp/0cc94b10-d628-4b64-9290-591c04ff5775_buggy.java
+++ b/tmp/b894543d-564a-4fe0-9e5b-83fd4c96845b_fixed.java
@@ -1,16 +1,29 @@
-    /**
-     * <p>Reduce the fraction to the smallest values for the numerator and
-     * denominator, returning the result.</p>
-     * 
-     * <p>For example, if this fraction represents 2/4, then the result
-     * will be 1/2.</p>
-     *
-     * @return a new reduced fraction instance, or this if no simplification possible
-     */
 public Fraction reduce() {
-        int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
+    int numerator = this.numerator;
+    int denominator = this.denominator;
+    
+    // If numerator is zero, return 0/1
+    if (numerator == 0) {
+        return Fraction.getFraction(0, 1);
+    }
+    
+    // Calculate GCD of absolute values
+    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));
+    
+    // If GCD is 1, return the current fraction
     if (gcd == 1) {
         return this;
     }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    
+    // Reduce numerator and denominator by GCD
+    numerator /= gcd;
+    denominator /= gcd;
+    
+    // Ensure the sign is on the numerator
+    if (denominator < 0) {
+        numerator = -numerator;
+        denominator = -denominator;
+    }
+    
+    return Fraction.getFraction(numerator, denominator);
 }
\ No newline at end of file
