diff --git a/tmp/104fcb54-8554-4487-8d86-f5eaff6cdba2_buggy.java b/tmp/8a2624cc-7def-486c-bc3f-fc6ccbda39f4_fixed.java
index a7d0787..c70c853 100644
--- a/tmp/104fcb54-8554-4487-8d86-f5eaff6cdba2_buggy.java
+++ b/tmp/8a2624cc-7def-486c-bc3f-fc6ccbda39f4_fixed.java
@@ -1,54 +1,36 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+import org.apache.commons.cli.ParseException;
+
+public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+    if (clazz == String.class) {
         return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+    } else if (clazz == Object.class) {
         return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+    } else if (clazz == Number.class) {
         return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+    } else if (clazz == Date.class) {
         return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+    } else if (clazz == Class.class) {
         return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+    } else if (clazz == File.class) {
         return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+    } else if (clazz == ExistingFile.class) { // Assuming ExistingFile is a custom class
         return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+    } else if (clazz == Files.class) { // Assuming Files is a custom class
         return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+    } else if (clazz == URL.class) {
         return (T) createURL(str);
+    } else if (clazz.isAssignableFrom(Integer.class)) {
+        try {
+            return (T) (Integer) Integer.parseInt(str);
+        } catch (NumberFormatException e) {
+            throw new ParseException("Invalid integer value: " + str);
+        }
+    } else {
+        try {
+            // Attempt to invoke the constructor that takes a String
+            return clazz.getConstructor(String.class).newInstance(str);
+        } catch (Exception e) {
+            throw new ParseException("Unable to create instance of " + clazz.getName() + " with value: " + str);
         }
-        else
-        {
-            return null;
     }
 }
\ No newline at end of file
