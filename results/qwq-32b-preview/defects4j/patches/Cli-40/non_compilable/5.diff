diff --git a/tmp/bb8b9eaa-2f01-48f1-bbf1-39217e23e076_buggy.java b/tmp/5455b4a2-4b9a-4ce0-9cad-fabe8f5de73f_fixed.java
index a7d0787..8667e48 100644
--- a/tmp/bb8b9eaa-2f01-48f1-bbf1-39217e23e076_buggy.java
+++ b/tmp/5455b4a2-4b9a-4ce0-9cad-fabe8f5de73f_fixed.java
@@ -1,54 +1,41 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+    if (PatternOptionBuilder.STRING_VALUE == clazz) {
         return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
         return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
         return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.DATE_VALUE == clazz) {
         return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
         return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.FILE_VALUE == clazz) {
         return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
         return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.FILES_VALUE == clazz) {
         return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.URL_VALUE == clazz) {
         return (T) createURL(str);
+    } else {
+        try {
+            // Attempt to parse the string into the desired type
+            if (clazz.equals(Integer.class)) {
+                return (T) Integer.valueOf(str);
+            } else if (clazz.equals(Boolean.class)) {
+                return (T) Boolean.valueOf(str);
+            } else if (clazz.equals(Double.class)) {
+                return (T) Double.valueOf(str);
+            } else if (clazz.equals(Long.class)) {
+                return (T) Long.valueOf(str);
+            } else {
+                // For other types, attempt to use the constructor that accepts a String
+                Constructor<?> constructor = clazz.getConstructor(String.class);
+                return (T) constructor.newInstance(str);
+            }
+        } catch (Exception e) {
+            throw new ParseException("Cannot create value of type " + clazz.getName() + " from string: " + str, 0);
         }
-        else
-        {
-            return null;
     }
 }
\ No newline at end of file
