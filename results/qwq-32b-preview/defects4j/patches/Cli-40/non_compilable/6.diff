diff --git a/tmp/ddd1a8cb-eb90-479d-b660-ef3ca50f1955_buggy.java b/tmp/ab90f14c-249e-4b37-b6ea-328c4dfc8458_fixed.java
index a7d0787..e70c8a6 100644
--- a/tmp/ddd1a8cb-eb90-479d-b660-ef3ca50f1955_buggy.java
+++ b/tmp/ab90f14c-249e-4b37-b6ea-328c4dfc8458_fixed.java
@@ -1,54 +1,39 @@
 /**
  * Returns the <code>Object</code> of type <code>clazz</code>
  * with the value of <code>str</code>.
  *
  * @param str the command line value
  * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
+ * @return The instance of <code>clazz</code> initialized with
  * the value of <code>str</code>.
  * @throws ParseException if the value creation for the given class failed
  */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+    if (PatternOptionBuilder.STRING_VALUE == clazz) {
         return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
         return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
         return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.DATE_VALUE == clazz) {
         return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
         return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.FILE_VALUE == clazz) {
         return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
         return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.FILES_VALUE == clazz) {
         return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+    } else if (PatternOptionBuilder.URL_VALUE == clazz) {
         return (T) createURL(str);
+    } else {
+        try {
+            // Attempt to convert the string to the desired type using the constructor
+            return clazz.getConstructor(String.class).newInstance(str);
+        } catch (NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException e) {
+            throw new ParseException("Cannot create instance of " + clazz.getName() + " from string: " + str, 0);
         }
-        else
-        {
-            return null;
     }
 }
\ No newline at end of file
