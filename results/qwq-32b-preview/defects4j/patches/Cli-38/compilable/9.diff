diff --git a/tmp/f00cd59b-5f30-492c-b832-a9675e861127_buggy.java b/tmp/cb9705fa-da61-40db-884f-0b5ace47f884_fixed.java
index 81a6e8b..3d86cea 100644
--- a/tmp/f00cd59b-5f30-492c-b832-a9675e861127_buggy.java
+++ b/tmp/cb9705fa-da61-40db-884f-0b5ace47f884_fixed.java
@@ -1,19 +1,33 @@
-    /**
-     * Tells if the token looks like a short option.
-     * 
-     * @param token
-     */
-    private boolean isShortOption(String token)
-    {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+private boolean isShortOption(String token) {
+    if (!token.startsWith("-") || token.length() == 1) {
         return false;
     }
 
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
+    // Remove leading "-"
+    String optNames = token.substring(1);
+
+    // Check if the token has an equals sign, indicating a value
+    int equalsPos = optNames.indexOf("=");
+    if (equalsPos != -1) {
+        // Option with a value
+        String optName = optNames.substring(0, equalsPos);
+        if (optName.length() == 1) {
+            // Single short option with a value
             return options.hasShortOption(optName);
-        // check for several concatenated short options
+        } else {
+            // Concatenated short options with a value
+            // This is more complex and may need further handling
+            // For now, assume only single-letter short options
+            return false;
+        }
+    } else {
+        // Option without a value
+        for (char c : optNames.toCharArray()) {
+            String optName = String.valueOf(c);
+            if (!options.hasShortOption(optName)) {
+                return false;
+            }
+        }
+        return true;
+    }
 }
\ No newline at end of file
