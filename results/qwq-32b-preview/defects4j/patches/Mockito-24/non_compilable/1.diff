diff --git a/tmp/fab9d32c-2540-473c-a725-56d3c661db9a_buggy.java b/tmp/f6305ca8-fe20-41b3-9a8a-073353e4ab83_fixed.java
index 47915ed..e345b86 100644
--- a/tmp/fab9d32c-2540-473c-a725-56d3c661db9a_buggy.java
+++ b/tmp/f6305ca8-fe20-41b3-9a8a-073353e4ab83_fixed.java
@@ -1,22 +1,15 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
-    public Object answer(InvocationOnMock invocation) {
-        if (methodsGuru.isToString(invocation.getMethod())) {
+if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
+    Object[] args = invocation.getArguments();
+    if (args.length == 1) {
+        Object arg = args[0];
         Object mock = invocation.getMock();
-            MockName name = mockUtil.getMockName(mock);
-            if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
+        if (arg == mock) {
+            return 0;
         } else {
-                return name.toString();
-            }
-        } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
             return 1;
         }
-        
-        Class<?> returnType = invocation.getMethod().getReturnType();
-        return returnValueFor(returnType);
+    } else {
+        // Handle invalid arguments, though compareTo should have one argument
+        throw new IllegalArgumentException("Unexpected number of arguments for compareTo");
+    }
 }
\ No newline at end of file
