diff --git a/tmp/ad920ad9-e594-4003-a34d-9360ccbb5e82_buggy.java b/tmp/cd973d8f-2a0a-445a-a14e-ee89dcdc2fb7_fixed.java
index d4e6d48..164773c 100644
--- a/tmp/ad920ad9-e594-4003-a34d-9360ccbb5e82_buggy.java
+++ b/tmp/cd973d8f-2a0a-445a-a14e-ee89dcdc2fb7_fixed.java
@@ -1,23 +1,9 @@
-  private Node tryFoldSimpleFunctionCall(Node n) {
-    Preconditions.checkState(n.isCall());
-    Node callTarget = n.getFirstChild();
-    if (callTarget != null && callTarget.isName() &&
-          callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
 Node value = callTarget.getNext();
 if (value != null) {
   Node addition = IR.add(
       IR.string("").srcref(callTarget),
       value.detachFromParent());
   n.getParent().replaceChild(n, addition);
   reportCodeChange();
   return addition;
 }
\ No newline at end of file
-    }
-    return n;
-  }
