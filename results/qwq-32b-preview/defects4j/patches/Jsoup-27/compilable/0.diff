diff --git a/tmp/3b3bb87a-e582-447f-9c9a-3b023f99f55e_buggy.java b/tmp/12bfcdc7-a35d-4e47-9796-0d161b19339b_fixed.java
index 7fb120e..699f04c 100644
--- a/tmp/3b3bb87a-e582-447f-9c9a-3b023f99f55e_buggy.java
+++ b/tmp/12bfcdc7-a35d-4e47-9796-0d161b19339b_fixed.java
@@ -1,16 +1,18 @@
-    /**
-     * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
-     * will kick in.)
-     * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
-     */
 static String getCharsetFromContentType(String contentType) {
     if (contentType == null) return null;
-        Matcher m = charsetPattern.matcher(contentType);
+    // Updated regex to handle quoted charsets
+    Matcher m = Pattern.compile("charset=\\s*([\"']*)(.*?)(?=;|\\Z)\\1", Pattern.CASE_INSENSITIVE).matcher(contentType);
     if (m.find()) {
-            String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+        String charset = m.group(2);
+        // Remove any leading/trailing whitespace and quotes
+        charset = charset.trim();
+        if (charset.startsWith("\"") && charset.endsWith("\"")) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        } else if (charset.startsWith("'") && charset.endsWith("'")) {
+            charset = charset.substring(1, charset.length() - 1).trim();
+        }
+        // Keep the case as is, don't force to uppercase
         return charset;
     }
     return null;
 }
\ No newline at end of file
