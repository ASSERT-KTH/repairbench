diff --git a/tmp/e32b2a0a-322f-4923-88b9-00cf88c25940_buggy.java b/tmp/bdd91bca-7b75-4366-a459-80155d680b55_fixed.java
index 7fb120e..68803ac 100644
--- a/tmp/e32b2a0a-322f-4923-88b9-00cf88c25940_buggy.java
+++ b/tmp/bdd91bca-7b75-4366-a459-80155d680b55_fixed.java
@@ -1,16 +1,24 @@
+import java.util.Locale;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+public class DataUtil {
+    private static final Pattern charsetPattern = Pattern.compile("charset=\\s*\"?([^\\s;\"']+?)\"?", Pattern.CASE_INSENSITIVE);
+
     /**
      * Parse out a charset from a content type header. If the charset is not supported, returns null (so the default
      * will kick in.)
      * @param contentType e.g. "text/html; charset=EUC-JP"
-     * @return "EUC-JP", or null if not found. Charset is trimmed and uppercased.
+     * @return "EUC-JP", or null if not found. Charset is trimmed but not uppercased.
      */
     static String getCharsetFromContentType(String contentType) {
         if (contentType == null) return null;
         Matcher m = charsetPattern.matcher(contentType);
         if (m.find()) {
             String charset = m.group(1).trim();
-            charset = charset.toUpperCase(Locale.ENGLISH);
+            // Do not convert to uppercase to maintain the original case
             return charset;
         }
         return null;
     }
+}
\ No newline at end of file
