diff --git a/tmp/9ea7d897-e014-4b9a-8fb4-284b208f71b1_buggy.java b/tmp/34acc4a3-d95e-416f-a62e-e3997ed03fe9_fixed.java
index 670114d..b06d8ae 100644
--- a/tmp/9ea7d897-e014-4b9a-8fb4-284b208f71b1_buggy.java
+++ b/tmp/34acc4a3-d95e-416f-a62e-e3997ed03fe9_fixed.java
@@ -1,48 +1,71 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns != null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns != null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns != null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name != null) {
         refNodes.add(new ClassDefiningFunctionNode(
             name, n, parent, parent.getParent()));
       }
     }
   }
+
+  // Additional handling for object literals and prototype assignments
+  if (n.isExprResult()) {
+    Node expr = n.getFirstChild();
+    if (expr.isObjectLit()) {
+      for (Node keyNode = expr.getFirstChild(); keyNode != null; keyNode = keyNode.getNext()) {
+        if (keyNode.isStringKey() || keyNode.isNumberKey()) {
+          NameInformation ns = createNameInformation(t, keyNode, expr);
+          if (ns != null) {
+            recordSet(ns.name, keyNode);
+          }
+        }
+      }
+    }
+  }
+
+  // Handle prototype assignments
+  if (n.isAssign() && n.getFirstChild().isGetProp()) {
+    Node getPropNode = n.getFirstChild();
+    if (getPropNode.getString().equals("prototype")) {
+      recordPrototypeSet(getPropNode.getFirstChild().getString(), null, n);
+    }
+  }
 }
\ No newline at end of file
