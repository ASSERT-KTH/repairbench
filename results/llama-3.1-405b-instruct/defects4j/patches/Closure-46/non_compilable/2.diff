diff --git a/tmp/863cdc46-95a5-4b98-b2b0-c787d28bd0f6_buggy.java b/tmp/072a8d98-80cf-4909-ae68-a710bdea95bb_fixed.java
index 46817a7..5547976 100644
--- a/tmp/863cdc46-95a5-4b98-b2b0-c787d28bd0f6_buggy.java
+++ b/tmp/072a8d98-80cf-4909-ae68-a710bdea95bb_fixed.java
@@ -1,16 +1,27 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
   for (String property : properties.keySet()) {
     if (that.toMaybeRecordType().hasProperty(property) &&
         that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
             getPropertyType(property))) {
       builder.addProperty(property, getPropertyType(property),
           getPropertyNode(property));
+    } else if (that.toMaybeRecordType().hasProperty(property)) {
+      // If the property exists in both types but has different types,
+      // the least supertype is the union of the two types.
+      return registry.createUnionType(this, that);
+    }
+  }
+  for (String property : that.toMaybeRecordType().getProperties().keySet()) {
+    if (!properties.containsKey(property)) {
+      // If the property only exists in one of the types,
+      // the least supertype is the union of the two types.
+      return registry.createUnionType(this, that);
     }
   }
   return builder.build();
 }
\ No newline at end of file
