diff --git a/tmp/ef087010-27d7-4d10-aaa6-d8f01c8a33c7_buggy.java b/tmp/af60b8de-0d14-4245-8189-c80e27248042_fixed.java
index 46817a7..f774401 100644
--- a/tmp/ef087010-27d7-4d10-aaa6-d8f01c8a33c7_buggy.java
+++ b/tmp/af60b8de-0d14-4245-8189-c80e27248042_fixed.java
@@ -1,16 +1,23 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
   if (!that.isRecordType()) {
     return super.getLeastSupertype(that);
   }
   RecordTypeBuilder builder = new RecordTypeBuilder(registry);
   for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    if (that.toMaybeRecordType().hasProperty(property)) {
+      JSType propertyType = getPropertyType(property);
+      JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);
+      if (!propertyType.isEquivalentTo(thatPropertyType)) {
+        return registry.createUnionType(this, that);
+      }
+      builder.addProperty(property, propertyType, getPropertyNode(property));
+    }
+  }
+  for (String property : that.toMaybeRecordType().getProperties().keySet()) {
+    if (!properties.containsKey(property)) {
+      return registry.createUnionType(this, that);
     }
   }
   return builder.build();
 }
\ No newline at end of file
