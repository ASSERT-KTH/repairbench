diff --git a/tmp/575197e0-406b-4b60-a1fe-cd897641948d_buggy.java b/tmp/5d6f66bd-77ad-422f-80ed-beccf093c425_fixed.java
index bfa2423..c6f1d18 100644
--- a/tmp/575197e0-406b-4b60-a1fe-cd897641948d_buggy.java
+++ b/tmp/5d6f66bd-77ad-422f-80ed-beccf093c425_fixed.java
@@ -1,23 +1,23 @@
 /**
  * Generate a random sample from the distribution.
  *
  * @param sampleSize the number of random values to generate.
  * @return an array representing the random sample.
  * @throws NotStrictlyPositiveException if {@code sampleSize} is not
  * positive.
  */
 public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
     if (sampleSize <= 0) {
         throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                 sampleSize);
     }
 
     final T[] out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
 
+    // Use Array.set() instead of assignment to avoid ArrayStoreException
     for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
+        Array.set(out, i, sample());
     }
 
     return out;
-
 }
\ No newline at end of file
