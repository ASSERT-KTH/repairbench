diff --git a/tmp/cd4fa089-3121-4a38-9b68-385d813921f6_buggy.java b/tmp/a65dc9c8-9c6a-4485-a109-d8b987b51cae_fixed.java
index 88bb3a1..62d067a 100644
--- a/tmp/cd4fa089-3121-4a38-9b68-385d813921f6_buggy.java
+++ b/tmp/a65dc9c8-9c6a-4485-a109-d8b987b51cae_fixed.java
@@ -1,57 +1,60 @@
-    /**
-     * Helper method called when there is the explicit "is-creator", but no mode declaration.
-     *
-     * @since 2.9.2
-     */
     protected void _addExplicitAnyCreator(DeserializationContext ctxt,
             BeanDescription beanDesc, CreatorCollector creators,
             CreatorCandidate candidate)
         throws JsonMappingException
     {
         // Looks like there's bit of magic regarding 1-parameter creators; others simpler:
         if (1!= candidate.paramCount()) {
             // Ok: for delegates, we want one and exactly one parameter without
             // injection AND without name
             int oneNotInjected = candidate.findOnlyParamWithoutInjection();
             if (oneNotInjected >= 0) {
                 // getting close; but most not have name
                 if (candidate.paramName(oneNotInjected) == null) {
                     _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);
                     return;
                 }
             }
             _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);
             return;
         }
         AnnotatedParameter param = candidate.parameter(0);
         JacksonInject.Value injectId = candidate.injection(0);
-        PropertyName paramName = candidate.explicitParamName(0);
+        PropertyName explicitParamName = candidate.explicitParamName(0);
+        PropertyName namingStrategyParamName = getPropertyName(ctxt, implicitName(explicitParamName));
         BeanPropertyDefinition paramDef = candidate.propertyDef(0);
 
         // If there's injection or explicit name, should be properties-based
-        boolean useProps = (paramName != null) || (injectId != null);
-        if (!useProps && (paramDef != null)) {
-            // One more thing: if implicit name matches property with a getter
-            // or field, we'll consider it property-based as well
-
-            // 25-May-2018, tatu: as per [databind#2051], looks like we have to get
-            //    not implicit name, but name with possible strategy-based-rename
-//            paramName = candidate.findImplicitParamName(0);
-            paramName = candidate.findImplicitParamName(0);
-            useProps = (paramName != null) && paramDef.couldSerialize();
-        }
+        boolean useProps = namingStrategyParamName!= null || (injectId!= null);
         if (useProps) {
             SettableBeanProperty[] properties = new SettableBeanProperty[] {
-                    constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)
+                constructCreatorProperty(ctxt, beanDesc, 
+                    namingStrategyParamName!= null? namingStrategyParamName : explicitParamName, 0,
+                    param, injectId)
             };
             creators.addPropertyCreator(candidate.creator(), true, properties);
-            return;
+        } else {
+            throw new JsonMappingException.from(ctxt,
+                    MSG_INVALID_CREATOR_DEFINITION_NAME);
         }
-        _handleSingleArgumentCreator(creators, candidate.creator(), true, true);
 
-        // one more thing: sever link to creator property, to avoid possible later
-        // problems with "unresolved" constructor property
-        if (paramDef != null) {
-            ((POJOPropertyBuilder) paramDef).removeConstructors();
+        paramDef.removeConstructors() ;
     }
+
+    private property getPropertyName(ctxt,name){
+        // code for method implementation 
+        // logic is based on 2 lines 
+        // the lines were above this fucntion in parent file 
+        // get implicit name  with `getPropertyName`
+        candidate.findImplicitParamName(xxx)
+    }
+            
+    private String implicit(String explicitName) {
+                
+    // method to follow 25 -May  
+        // this 2 meths were removed so the data type can vary  
+         
+        // follow this log 
+        // [JacksonDatabind 2552 ], 14 Nov 2018 )
+                
         }
\ No newline at end of file
