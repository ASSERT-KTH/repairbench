diff --git a/tmp/e7b8e252-c1f4-4742-985a-d987e3117ba6_buggy.java b/tmp/55cff01c-dd2a-4ad3-9b17-07036c225719_fixed.java
index ef76662..7c0bcc3 100644
--- a/tmp/e7b8e252-c1f4-4742-985a-d987e3117ba6_buggy.java
+++ b/tmp/55cff01c-dd2a-4ad3-9b17-07036c225719_fixed.java
@@ -1,17 +1,35 @@
 void read(Tokeniser t, CharacterReader r) {
     char c = r.consume();
     switch (c) {
         case '>':
             t.tagPending.selfClosing = true;
             t.emitTagPending();
             t.transition(Data);
             break;
+        case '/':
+            // If the next character is one of [> \ufeff] then ignore any characters before it
+            boolean reconsume = false;
+            char next = r.consume();
+            if (next == '>' || next == '\ufeff') reconsume = true;
+            r.unconsume(next); // Revert consume
+            if (!reconsume) {
+                t.tagPending.appendAttributeName(Character.toString(c));
+                // We fall through to case default, but we unmark as reconsume by not adding a break for the next case
+                t.transition(BeforeAttributeName); 
+            } else  break;
         case eof:
             t.eofError(this);
             t.transition(Data);
             break;
         default:
-                    t.error(this);
-                    t.transition(BeforeAttributeName);
+            if (Character.isLetter(c)) {
+                t.pendingAttributeName.append(c);
+                t.transition(AttributeName); // AttributeName handles the switch for attributes
             }
+            else {
+                t.unconsume(c);
+                break;
+            }
+    }
+
 }
\ No newline at end of file
