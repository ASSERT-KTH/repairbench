diff --git a/tmp/88f10fed-79ec-402e-a424-7b93e487de43_buggy.java b/tmp/91357432-d412-4a8a-9a1f-edcb42676a88_fixed.java
index d5b1b52..4ba2f34 100644
--- a/tmp/88f10fed-79ec-402e-a424-7b93e487de43_buggy.java
+++ b/tmp/91357432-d412-4a8a-9a1f-edcb42676a88_fixed.java
@@ -1,36 +1,46 @@
     /**
      * <p>Adds all the elements of the given arrays into a new array.</p>
      * <p>The new array contains all of the element of <code>array1</code> followed
      * by all of the elements <code>array2</code>. When an array is returned, it is always
      * a new array.</p>
      *
      * <pre>
      * ArrayUtils.addAll(null, null)     = null
      * ArrayUtils.addAll(array1, null)   = cloned copy of array1
      * ArrayUtils.addAll(null, array2)   = cloned copy of array2
      * ArrayUtils.addAll([], [])         = []
      * ArrayUtils.addAll([null], [null]) = [null, null]
      * ArrayUtils.addAll(["a", "b", "c"], ["1", "2", "3"]) = ["a", "b", "c", "1", "2", "3"]
      * </pre>
      *
      * @param array1  the first array whose elements are added to the new array, may be <code>null</code>
      * @param array2  the second array whose elements are added to the new array, may be <code>null</code>
      * @return The new array, <code>null</code> if both arrays are <code>null</code>.
      *      The type of the new array is the type of the first array,
      *      unless the first array is null, in which case the type is the same as the second array.
      * @since 2.1
      */
     @SuppressWarnings("unchecked")
     public static <T> T[] addAll(T[] array1, T... array2) {
         if (array1 == null) {
             return clone(array2);
         } else if (array2 == null) {
             return clone(array1);
         }
+
         final Class<?> type1 = array1.getClass().getComponentType();
+        final Class<?> type2 = array2.getClass().getComponentType();
+
+        if (!type1.isAssignableFrom(type2)) {
+            throw new IllegalArgumentException("Incompatible types");
+        }
+
         T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
+        try {
             System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
-            // Check if problem is incompatible types
+        } catch (ArrayStoreException e) {
+            throw new IllegalArgumentException("Incompatible types", e);
+        }
         return joinedArray;
     }
\ No newline at end of file
