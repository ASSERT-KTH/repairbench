diff --git a/tmp/631e4ad7-e036-4a80-90e3-89932f37b244_buggy.java b/tmp/61e42eb5-8612-4006-9a67-12762d518504_fixed.java
index 25c13b3..1aee945 100644
--- a/tmp/631e4ad7-e036-4a80-90e3-89932f37b244_buggy.java
+++ b/tmp/61e42eb5-8612-4006-9a67-12762d518504_fixed.java
@@ -1,15 +1,22 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
+        if (d > 2) {
             // use mean
             ret = d / (d - 2.0);
+        } else if (d == 1) {
+            ret = Math.sqrt(8); // 2 times SD (since mean=var=2)
+        } else {
+            // variance undefined, use 1 arbitrarily to try to bracket result.
+            ret = 1;
+        }
         return ret;
     }
\ No newline at end of file
