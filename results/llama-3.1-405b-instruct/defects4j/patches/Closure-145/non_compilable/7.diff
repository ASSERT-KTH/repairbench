diff --git a/tmp/ee15be56-e31a-45c6-9b49-a76e5071b1f7_buggy.java b/tmp/67c57702-05a0-4523-92e4-46183c91a4a8_fixed.java
index 57f69c5..9650628 100644
--- a/tmp/ee15be56-e31a-45c6-9b49-a76e5071b1f7_buggy.java
+++ b/tmp/67c57702-05a0-4523-92e4-46183c91a4a8_fixed.java
@@ -1,12 +1,26 @@
 /**
  * @return Whether the Node is a DO or FUNCTION (with or without
  * labels).
  */
 private boolean isOneExactlyFunctionOrDo(Node n) {
   // For labels with block children, we need to ensure that a
   // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
   // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+  // Note that the node is directly a child of IF or ELSE_IF.
+  // Check only for labels, or in the case of the LABEL node being 
+  // skipped, for its label child. Either an empty statement or an 
+  // block with more than one child means it isn't a FUNCTION or DO.
+  if (n.getLabelName()!= null &&
+      n.getChildCount() == 1 &&
+      ((n.getType() == Token.LABEL && 
+           (n.getFirstChild().getType() == Token.DELPROP || 
+        n.getFirstChild().getType() == Token.DEPR)) || 
+        (n.getType() == Token.DELPROP || n.getType() == Token.DEPR)))
+    return true;
+
+    return (n.getType() == Token.FUNCTION || 
+            n.getType() == Token.DO) &&
+     (n.getLabelName() == null || 
+   (n.getParent().getType()!= Token.IF 
+    && n.getParent().getType()!= Token.WITH));
 }
\ No newline at end of file
