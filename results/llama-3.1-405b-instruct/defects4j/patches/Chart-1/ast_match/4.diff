diff --git a/tmp/7c72d7b0-c2cc-45e1-916e-8f2bb32c1ead_buggy.java b/tmp/4cd45b63-3dc4-4c9d-ab67-ca603c217404_fixed.java
index 114ff20..43a91f1 100644
--- a/tmp/7c72d7b0-c2cc-45e1-916e-8f2bb32c1ead_buggy.java
+++ b/tmp/4cd45b63-3dc4-4c9d-ab67-ca603c217404_fixed.java
@@ -1,41 +1,41 @@
 /**
  * Returns a (possibly empty) collection of legend items for the series
  * that this renderer is responsible for drawing.
  *
  * @return The legend item collection (never <code>null</code>).
  *
  * @see #getLegendItem(int, int)
  */
 public LegendItemCollection getLegendItems() {
     LegendItemCollection result = new LegendItemCollection();
     if (this.plot == null) {
         return result;
     }
     int index = this.plot.getIndexOf(this);
     CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+    if (dataset == null) {
         return result;
     }
     int seriesCount = dataset.getRowCount();
     if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
         for (int i = 0; i < seriesCount; i++) {
             if (isSeriesVisibleInLegend(i)) {
                 LegendItem item = getLegendItem(index, i);
                 if (item!= null) {
                     result.add(item);
                 }
             }
         }
     }
     else {
         for (int i = seriesCount - 1; i >= 0; i--) {
             if (isSeriesVisibleInLegend(i)) {
                 LegendItem item = getLegendItem(index, i);
                 if (item!= null) {
                     result.add(item);
                 }
             }
         }
     }
     return result;
 }
\ No newline at end of file
