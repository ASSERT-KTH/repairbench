diff --git a/tmp/f0a7df25-54a6-4d5f-948d-e00d0dd3a975_buggy.java b/tmp/5ad294d8-1b80-4341-b3e6-53ed4a474247_fixed.java
index 07b0792..496f3e4 100644
--- a/tmp/f0a7df25-54a6-4d5f-948d-e00d0dd3a975_buggy.java
+++ b/tmp/5ad294d8-1b80-4341-b3e6-53ed4a474247_fixed.java
@@ -1,22 +1,37 @@
     /**
      * @return Whether the variable is only assigned a value once for its
      *     lifetime.
      */
     boolean isAssignedOnceInLifetime() {
       Reference ref = getOneAndOnlyAssignment();
       if (ref == null) {
         return false;
       }
 
-      // Make sure this assignment is not in a loop.
+      // Make sure this assignment is not in a loop or in a function
+      // that could be called recursively.
       for (BasicBlock block = ref.getBasicBlock();
            block!= null; block = block.getParent()) {
         if (block.isFunction) {
+          for (FunctionCallSite site : getCallSitesOf(block)) {
+            if (isRecursiveFunction(site)) {
+              return false;
+            }
+          }
           break;
         } else if (block.isLoop) {
           return false;
         }
       }
 
       return true;
     }
+
+    // TODO: please replace '...' with your actual method logic
+    private Iterable<FunctionCallSite> getCallSitesOf(BasicBlock block) {
+      //...
+    }
+
+    private boolean isRecursiveFunction(FunctionCallSite site) {
+      //...
+    }
\ No newline at end of file
