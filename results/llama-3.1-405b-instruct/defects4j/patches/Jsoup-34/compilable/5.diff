diff --git a/tmp/0afe03d8-2577-4d74-b972-6e4bd3da2314_buggy.java b/tmp/98b0c459-49f3-4c5b-81d7-1a11c5b74e84_fixed.java
index 21f64c6..58ad452 100644
--- a/tmp/0afe03d8-2577-4d74-b972-6e4bd3da2314_buggy.java
+++ b/tmp/98b0c459-49f3-4c5b-81d7-1a11c5b74e84_fixed.java
@@ -1,23 +1,21 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
 int nextIndexOf(CharSequence seq) {
     // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
+    outer:
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
-            if (startChar != input[offset])
+        if (startChar!= input[offset]) {
             while (++offset < length && startChar!= input[offset]) ;
+            if (offset == length) break; // don't go past the end
+        }
         int i = offset + 1;
         int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+        if (last < length) { // Don't try to scan sequence after end
+            for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++)
+                ;
             if (i == last) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
