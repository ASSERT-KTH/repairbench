diff --git a/tmp/a8c4ff65-3487-454b-a7dd-c5a28ad0de0c_buggy.java b/tmp/a928cac0-2889-48c3-a8f1-e08c35776328_fixed.java
index 21f64c6..16da876 100644
--- a/tmp/a8c4ff65-3487-454b-a7dd-c5a28ad0de0c_buggy.java
+++ b/tmp/a928cac0-2889-48c3-a8f1-e08c35776328_fixed.java
@@ -1,23 +1,26 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar!= input[offset])
                 while(++offset < length && startChar!= input[offset]);
+            if (offset < length) {
                 int i = offset + 1;
                 int last = i + seq.length()-1;
-            if (offset < length) {
+                if (last > length) { // won't find: past end of buffer
+                    return -1;
+                }
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }
