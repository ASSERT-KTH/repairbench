diff --git a/tmp/a4228e82-763a-4ad9-b16e-ea53dfb27104_buggy.java b/tmp/07cf4741-bbf7-4a51-b565-b01b1d95ea45_fixed.java
index 21f64c6..63dcc12 100644
--- a/tmp/a4228e82-763a-4ad9-b16e-ea53dfb27104_buggy.java
+++ b/tmp/07cf4741-bbf7-4a51-b565-b01b1d95ea45_fixed.java
@@ -1,23 +1,24 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
         // scan to first instance of startchar:
         if (startChar!= input[offset])
             while(++offset < length && startChar!= input[offset]);
+        if (offset >= length) // added check to prevent ArrayIndexOutOfBoundsException
+            break;
         int i = offset + 1;
         int last = i + seq.length()-1;
-            if (offset < length) {
+        if (last <= length) { // added check to prevent ArrayIndexOutOfBoundsException
             for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
             if (i == last) // found full sequence
                 return offset - pos;
         }
     }
     return -1;
 }
\ No newline at end of file
