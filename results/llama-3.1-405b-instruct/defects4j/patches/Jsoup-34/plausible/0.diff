diff --git a/tmp/2d4b9517-2e57-4925-a6cf-280d0e299818_buggy.java b/tmp/319b38b2-778f-4a1f-9a74-37f5fbe4f308_fixed.java
index 21f64c6..a95058d 100644
--- a/tmp/2d4b9517-2e57-4925-a6cf-280d0e299818_buggy.java
+++ b/tmp/319b38b2-778f-4a1f-9a74-37f5fbe4f308_fixed.java
@@ -1,23 +1,23 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
         if (startChar!= input[offset])
             while(++offset < length && startChar!= input[offset]);
+        if (offset >= length) // don't go past end of input
+            break;
         int i = offset + 1;
         int last = i + seq.length()-1;
-            if (offset < length) {
+        if (last > length) // not enough characters left in input
+            break;
         for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
         if (i == last) // found full sequence
             return offset - pos;
     }
-        }
     return -1;
 }
\ No newline at end of file
