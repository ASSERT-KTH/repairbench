diff --git a/tmp/f3f24483-8837-483c-a989-8cfcf5c07b76_buggy.java b/tmp/283fd824-45f2-4ffe-89dd-4fba08b2481b_fixed.java
index 1c53d31..cd8b800 100644
--- a/tmp/f3f24483-8837-483c-a989-8cfcf5c07b76_buggy.java
+++ b/tmp/283fd824-45f2-4ffe-89dd-4fba08b2481b_fixed.java
@@ -1,20 +1,23 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
        .construct()
        .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  // Ensure typeAdapter is not null before making it null-safe
+  if (typeAdapter!= null) {
     typeAdapter = typeAdapter.nullSafe();
+  }
   return typeAdapter;
 }
\ No newline at end of file
