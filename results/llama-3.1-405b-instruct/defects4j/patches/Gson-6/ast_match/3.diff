diff --git a/tmp/04f57941-4e07-4cd5-9686-d9898db52711_buggy.java b/tmp/53bce7a8-4fee-40cf-a7b1-3df8d399b3b9_fixed.java
index 1c53d31..c5cf10b 100644
--- a/tmp/04f57941-4e07-4cd5-9686-d9898db52711_buggy.java
+++ b/tmp/53bce7a8-4fee-40cf-a7b1-3df8d399b3b9_fixed.java
@@ -1,20 +1,23 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
        .construct()
        .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
+  // nullSafe() is now only called if typeAdapter is not null.
+  if (typeAdapter!= null) {
     typeAdapter = typeAdapter.nullSafe();
+  }
   return typeAdapter;
 }
\ No newline at end of file
