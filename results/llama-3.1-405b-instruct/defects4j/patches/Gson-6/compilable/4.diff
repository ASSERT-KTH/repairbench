diff --git a/tmp/988c91c7-6dfd-4662-aa09-f09e325d3d03_buggy.java b/tmp/5b558e3b-1ed5-4cd8-9c07-0f9e3efbfd3b_fixed.java
index 1c53d31..5f706c3 100644
--- a/tmp/988c91c7-6dfd-4662-aa09-f09e325d3d03_buggy.java
+++ b/tmp/5b558e3b-1ed5-4cd8-9c07-0f9e3efbfd3b_fixed.java
@@ -1,20 +1,20 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
        .construct()
        .create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+  // Call nullSafe() after typeAdapter is initialized to prevent NPE
+  return typeAdapter.nullSafe();
 }
\ No newline at end of file
