diff --git a/tmp/a6641825-8e23-4d09-a0dc-81ec3fbd2794_buggy.java b/tmp/954f1189-dc07-4f71-8c5b-957088732ca1_fixed.java
index 1c53d31..1cc0a00 100644
--- a/tmp/a6641825-8e23-4d09-a0dc-81ec3fbd2794_buggy.java
+++ b/tmp/954f1189-dc07-4f71-8c5b-957088732ca1_fixed.java
@@ -1,20 +1,21 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+      typeAdapter = typeAdapter.nullSafe(); // Move nullSafe here
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
+      TypeAdapter<?> delegate = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
          .construct()
          .create(gson, fieldType);
+      typeAdapter = delegate.nullSafe(); // Move nullSafe here
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
-      typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
 }
\ No newline at end of file
