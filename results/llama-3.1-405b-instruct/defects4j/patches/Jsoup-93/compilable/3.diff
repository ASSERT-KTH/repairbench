diff --git a/tmp/44981fd8-45d3-4dca-a53e-4e12f42d6d46_buggy.java b/tmp/41e95865-564c-4294-8298-82ce7ad8fc51_fixed.java
index aa351ad..d774fb5 100644
--- a/tmp/44981fd8-45d3-4dca-a53e-4e12f42d6d46_buggy.java
+++ b/tmp/41e95865-564c-4294-8298-82ce7ad8fc51_fixed.java
@@ -1,41 +1,65 @@
 /**
  * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
  * list will not be reflected in the DOM.
  * @return a list of key vals
  */
 public List<Connection.KeyVal> formData() {
     ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
     // iterate the form control elements and accumulate their values
     for (Element el: elements) {
         if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
         if (el.hasAttr("disabled")) continue; // skip disabled form inputs
         String name = el.attr("name");
         if (name.length() == 0) continue;
         String type = el.attr("type");
 
-
         if ("select".equals(el.normalName())) {
             Elements options = el.select("option[selected]");
             boolean set = false;
             for (Element option: options) {
                 data.add(HttpConnection.KeyVal.create(name, option.val()));
                 set = true;
             }
             if (!set) {
                 Element option = el.select("option").first();
                 if (option!= null)
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
             }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
+        } else if ("checkbox".equalsIgnoreCase(type)) {
+            // only add checkbox if they have the checked attribute
             if (el.hasAttr("checked")) {
                 final String val = el.val().length() >  0? el.val() : "on";
                 data.add(HttpConnection.KeyVal.create(name, val));
             }
+        } else if ("radio".equalsIgnoreCase(type)) {
+            // only add radio if they have the checked attribute
+            if (el.hasAttr("checked")) {
+                final String val = el.val().length() >  0? el.val() : "on";
+                // Check if we've already added a radio with the same name
+                for (Connection.KeyVal kv : data) {
+                    if (kv.key().equals(name)) {
+                        // If so, replace the existing value
+                        kv.value(val);
+                        break;
+                    }
+                }
+                if (!containsName(data, name)) {
+                    data.add(HttpConnection.KeyVal.create(name, val));
+                }
+            }
         } else {
             data.add(HttpConnection.KeyVal.create(name, el.val()));
         }
     }
     return data;
 }
+
+private boolean containsName(List<Connection.KeyVal> data, String name) {
+    for (Connection.KeyVal kv : data) {
+        if (kv.key().equals(name)) {
+            return true;
+        }
+    }
+    return false;
+}
\ No newline at end of file
