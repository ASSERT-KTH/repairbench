diff --git a/tmp/1a392236-0dde-4b57-9f96-4ab4c472d061_buggy.java b/tmp/15c4262b-f7a5-4ec9-a03f-16f2df0e32a4_fixed.java
index 6cfa79b..0d71fcc 100644
--- a/tmp/1a392236-0dde-4b57-9f96-4ab4c472d061_buggy.java
+++ b/tmp/15c4262b-f7a5-4ec9-a03f-16f2df0e32a4_fixed.java
@@ -1,12 +1,15 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X &lt; <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>. 
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    double dev = x - mean;
+    if (Math.abs(dev) > 40 * standardDeviation) {
+        return dev < 0? 0.0d : 1.0d;
+    }
+    return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * Math.sqrt(2.0))));
 }
\ No newline at end of file
