diff --git a/tmp/6861dab9-a54c-46a8-a71e-d7f770db2d55_buggy.java b/tmp/a2c99996-397e-418c-a2d1-d43b88dd1647_fixed.java
index 6cfa79b..309c991 100644
--- a/tmp/6861dab9-a54c-46a8-a71e-d7f770db2d55_buggy.java
+++ b/tmp/a2c99996-397e-418c-a2d1-d43b88dd1647_fixed.java
@@ -1,12 +1,23 @@
 /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+ * For this distribution, X, this method returns P(X &lt; <code>x</code>).
  * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+ * @return CDF evaluated at <code>x</code>. 
  * @throws MathException if the algorithm fails to converge; unless
  * x is more than 20 standard deviations from the mean, in which case the
  * convergence exception is caught and 0 or 1 is returned.
  */
 public double cumulativeProbability(double x) throws MathException {
+    if (x > mean + 20 * standardDeviation) {
+        return 1.0;
+    }
+    if (x < mean - 20 * standardDeviation) {
+        return 0.0;
+    }
+    try {
         return 0.5 * (1.0 + Erf.erf((x - mean) /
                 (standardDeviation * Math.sqrt(2.0))));
+    } catch (MaxIterationsExceededException e) {
+        // we should not get here because of the checks above
+        throw new MathException(e);
+    }
 }
\ No newline at end of file
