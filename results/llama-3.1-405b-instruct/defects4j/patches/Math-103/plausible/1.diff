diff --git a/tmp/7cd9f169-0021-4977-8d75-7068b142161e_buggy.java b/tmp/7c9f6663-20e2-4e62-8456-c58054884658_fixed.java
index 6cfa79b..5ff5e89 100644
--- a/tmp/7cd9f169-0021-4977-8d75-7068b142161e_buggy.java
+++ b/tmp/7c9f6663-20e2-4e62-8456-c58054884658_fixed.java
@@ -1,12 +1,20 @@
     /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
+     * For this distribution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
+     * @return CDF evaluated at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double dev = x - mean;
+        if (Math.abs(dev) > 20 * standardDeviation) {
+            return dev < 0? 0 : 1;
+        }
+        try {
+            return 0.5 * (1.0 + Erf.erf(dev / (standardDeviation * Math.sqrt(2.0))));
+        } catch (MaxIterationsExceededException e) {
+            // Should never happen, but just in case
+            throw new MathException(e);
+        }
     }
\ No newline at end of file
