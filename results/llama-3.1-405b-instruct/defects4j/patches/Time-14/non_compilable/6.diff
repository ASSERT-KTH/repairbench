diff --git a/tmp/6318a6bf-e5d4-49f6-82b3-95ee495957b7_buggy.java b/tmp/2d704d0c-d0f5-4aa9-99d0-59e957d941ec_fixed.java
index 10616db..f35d5a7 100644
--- a/tmp/6318a6bf-e5d4-49f6-82b3-95ee495957b7_buggy.java
+++ b/tmp/2d704d0c-d0f5-4aa9-99d0-59e957d941ec_fixed.java
@@ -1,19 +1,28 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
+            if (i == 1 && values[i] > 28) {  // If the day of month is more than 28, 
+                                            // then it might be last day of month 
+                                            // so add value first then set the day 
+                                            // to get correct result.
+                instant = partial.getFieldType(0).getField(iChronology).add(instant, values[0], valueToAdd);
+                instant = partial.getFieldType(1).getField(iChronology).set(instant, 1);
+                instant = iChronology.dayOfMonth().set(instant, iChronology.dayOfMonth().getMaximumValue(instant));
+            } else {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
+        }
+        if (values[1] <= 28) {
             instant = add(instant, valueToAdd);
+        }
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
