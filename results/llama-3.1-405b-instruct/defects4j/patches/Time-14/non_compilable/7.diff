diff --git a/tmp/59357e59-b716-433e-a0da-9e134c7563dd_buggy.java b/tmp/76494317-8996-4b9b-9c09-0a629e968d30_fixed.java
index 10616db..a37ffb5 100644
--- a/tmp/59357e59-b716-433e-a0da-9e134c7563dd_buggy.java
+++ b/tmp/76494317-8996-4b9b-9c09-0a629e968d30_fixed.java
@@ -1,19 +1,29 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
-            instant = add(instant, valueToAdd);
+
+        // get the last field (highest order)
+        DateTimeFieldType lastField = partial.getFieldType(partial.size() - 1);
+
+        // add to the months field, and handle 'big' date cases such as
+        // February 29th + 1 month, or December 31 + 2 months
+        instant = lastField.getField(iChronology).add(instant, valueToAdd, 1);
+        instant = lastField.getField(iChronology).set(instant, values[partial.size() - 1]);
+
+        // set the rest of the fields
+        for (int i = 0, isize = partial.size(); i < isize - 1; i++) {
+            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+        }
+
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
