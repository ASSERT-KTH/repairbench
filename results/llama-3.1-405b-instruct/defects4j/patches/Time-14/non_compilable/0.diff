diff --git a/tmp/3e33a94b-cbf8-400d-843a-399a54f6bafa_buggy.java b/tmp/8bf89b04-3817-4ca5-a612-45cee4fa804a_fixed.java
index 10616db..fd2d868 100644
--- a/tmp/3e33a94b-cbf8-400d-843a-399a54f6bafa_buggy.java
+++ b/tmp/8bf89b04-3817-4ca5-a612-45cee4fa804a_fixed.java
@@ -1,19 +1,30 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
+        
+        long[] minInst = getOffsetInRange(durationField.getUnitMillis(), 
+                                         partial.getFieldType(fieldIndex).getField(iChronology).getMinimumValue(), 
+                                         partial, values, instant);
+        long[] maxInst = getOffsetInRange(durationField.getUnitMillis(), 
+                                         partial.getFieldType(fieldIndex).getField(iChronology).getMaximumValue(), 
+                                         partial, values, instant);
+        
         instant = add(instant, valueToAdd);
+        if (instant < minInst[0]) {
+            return iChronology.get(partial, minInst[1]);
+        } else if (instant >= maxInst[0]) {
+            return iChronology.get(partial, maxInst[1]);
+        } else {
             return iChronology.get(partial, instant);
+        }
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
