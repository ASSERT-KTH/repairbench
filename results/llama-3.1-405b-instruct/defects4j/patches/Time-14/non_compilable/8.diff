diff --git a/tmp/2abd54d8-b660-45b0-ab09-1834a9c61eb4_buggy.java b/tmp/6e1235c8-52fc-4552-9ea9-86fb34a59577_fixed.java
index 10616db..0984815 100644
--- a/tmp/2abd54d8-b660-45b0-ab09-1834a9c61eb4_buggy.java
+++ b/tmp/6e1235c8-52fc-4552-9ea9-86fb34a59577_fixed.java
@@ -1,19 +1,26 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        int[] result = iChronology.get(partial, instant);
+        // Adjust for end of month if necessary.
+        if (partial.size() == 2 && partial.getFieldType(0).equals(DateTimeFieldType.monthOfYear()) && partial.getFieldType(1).equals(DateTimeFieldType.dayOfMonth())) {
+            int daysInMonth = iChronology.daysInMonth(result[0], result[1]);
+            if (result[1] > daysInMonth) {
+                result[1] = daysInMonth;
+            }
+        }
+        return result;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
