diff --git a/tmp/3d0366e2-d5d0-4076-bc7d-e357d2266226_buggy.java b/tmp/75d6c19c-e414-422f-bdbd-d9c6d2323675_fixed.java
index ec6c9ee..6e13e91 100644
--- a/tmp/3d0366e2-d5d0-4076-bc7d-e357d2266226_buggy.java
+++ b/tmp/75d6c19c-e414-422f-bdbd-d9c6d2323675_fixed.java
@@ -1,21 +1,28 @@
 //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
+        if (size > 2 && elementPairs.get(2) instanceof Separator) {
+            // Fix for bug 2495455: two separators in a row
+            PeriodFormatter f = toFormatter(elementPairs.subList(3, size), notPrinter, notParser);
+            sep = sep.finish(f.getPrinter(), f.getParser());
+            return new PeriodFormatter(sep, sep);
+        } else {
             PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
         }
+    }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
