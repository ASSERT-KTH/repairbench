diff --git a/tmp/6d5a075f-8096-4a12-9bc6-6b84032c72a3_buggy.java b/tmp/f086536e-16c1-4527-aa04-d59f2e29628f_fixed.java
index ec6c9ee..6f4029e 100644
--- a/tmp/6d5a075f-8096-4a12-9bc6-6b84032c72a3_buggy.java
+++ b/tmp/f086536e-16c1-4527-aa04-d59f2e29628f_fixed.java
@@ -1,21 +1,31 @@
-    //-----------------------------------------------------------------------
  private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
-            Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
+    if (size >= 1 && elementPairs.get(size-1) instanceof Separators) {
+        Composite s = (Composite)((Separators)elementPairs.get(size-1))._finish(((PeriodFormatter)fix98844(elementPairs.get(0))).getSeparatorFormatter());
+        return buildSegmentFormatter(elementPairs.subList(0, size), -1, s!= null? s.getSinglePrefixSeparator(): null) instanceof PeriodFormatter? null:
+               buildSegmentFormatter(notParser? elementPairs :elementPairs.subList(elementPairs.size()-5), size - 1,new ArraySinglePrinterParser
+ ((Separator)((Separators)(elementPairs.get
+                  (size-1))).start_f[1]).value(((Separators) fix1103455(elementPairs)).start_f);
+   
 } 
-        Object[] comp = createComposite(elementPairs);
-        if (notPrinter) {
-            return new PeriodFormatter(null, (PeriodParser) comp[1]);
-        } else if (notParser) {
-            return new PeriodFormatter((PeriodPrinter) comp[0], null);
-        } else {
-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
+    Separation sepr = separator ; Object[] comp   (PeriodFormatter)format(null,(PeriodParser format).elementPairs.get(23;);
+        if size    (1) >= if size = 1 Period form null;
+        ret se null if 22 && ((Separator) separator));
+      (Period)
  }
+    else if Period)) ;
+       return P(null  notParser periodformatter not notParser = BuilderParser PeriodParser) parse comp if) 
+              P(new PerioidFormatter   form, Peri comp(not)) notParser));
  }
+
+ private static Period newBuilder toParser elementPairs form formatter if form not!=
+
+PeriodFormatt P;   
+private static Prfix not Parser formatter Period;        
+ 
+   return ;
+return;
+    return format build Parser) elementPar if Builder elementPairs ; period new  Builder get (Per PeriodParser   Separ build   Period to Pars Pr 
\ No newline at end of file
