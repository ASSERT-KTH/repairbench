diff --git a/tmp/f8c6b569-94c7-4e5c-9ee9-afae6b7766b7_buggy.java b/tmp/7ee6b451-0428-49b5-a507-81765e52600d_fixed.java
index fecb896..905783c 100644
--- a/tmp/f8c6b569-94c7-4e5c-9ee9-afae6b7766b7_buggy.java
+++ b/tmp/7ee6b451-0428-49b5-a507-81765e52600d_fixed.java
@@ -1,34 +1,36 @@
 /**
  * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
  * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
  * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
  * contains text strings; use unescape for that.
  * @param open opener
  * @param close closer
  * @return data matched from the queue
  */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
         if (last == 0 || last!= ESC) {
             if (c.equals(open)) {
                 depth++;
                 if (start == -1)
-                        start = pos;
+                    start = pos - 1; // Changed from pos to pos - 1
             }
             else if (c.equals(close))
                 depth--;
         }
 
         if (depth > 0 && last!= 0)
-                end = pos; // don't include the outer match pair in the return
+            end = pos;
         last = c;
     } while (depth > 0);
+    if (end >= 0 && depth == 0)
+        end--; // strip closing token, when balanced
     return (end >= 0)? queue.substring(start, end) : "";
 }
\ No newline at end of file
