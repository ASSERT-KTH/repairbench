diff --git a/tmp/5c81da7e-6683-4192-8714-e801338cb8df_buggy.java b/tmp/c45c31ad-3388-423d-ab8f-1019a9847c37_fixed.java
index 14b78fb..7455240 100644
--- a/tmp/5c81da7e-6683-4192-8714-e801338cb8df_buggy.java
+++ b/tmp/c45c31ad-3388-423d-ab8f-1019a9847c37_fixed.java
@@ -1,56 +1,60 @@
 /**
  * Finds the next text wrap position after <code>startPos</code> for the
  * text in <code>text</code> with the column width <code>width</code>.
  * The wrap point is the last position before startPos+width having a 
  * whitespace character (space, \n, \r). If there is no whitespace character
  * before startPos+width, it will return startPos+width.
  *
  * @param text The text being searched for the wrap position
  * @param width width of the wrapped text
  * @param startPos position from which to start the lookup whitespace
  * character
  * @return postion on which the text must be wrapped or -1 if the wrap
  * position is at the end of the text
  */
 protected int findWrapPos(String text, int width, int startPos)
 {
     int pos;
     
     // the line ends before the max wrap pos or a new line char found
     if (((pos = text.indexOf('\n', startPos))!= -1 && pos <= width)
             || ((pos = text.indexOf('\t', startPos))!= -1 && pos <= width))
     {
         return pos + 1;
     }
     else if (startPos + width >= text.length())
     {
         return -1;
     }
 
+    pos = startPos + width - 1;
 
-        // look for the last whitespace character before startPos+width
-        pos = startPos + width;
-
-        char c;
-
-        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
-                && (c != '\n') && (c != '\r'))
+    // if there is no space, the wrap position will be startPos + width 
+    while (pos > startPos &&!Character.isWhitespace(text.charAt(pos))) 
     {
-            --pos;
+        pos--;
     }
 
-        // if we found it - just return
-        if (pos > startPos)
+    if (pos == startPos) 
+    {
+        // if all else fails and there is just a big long word at the end 
+        if (Character.isWhitespace(text.charAt(pos))) 
+        {
+            pos++;
+        }
+        else 
+        {
+            pos = Math.min(startPos + width, text.length());
+            while (pos < text.length() &&!Character.isWhitespace(text.charAt(pos))) 
             {
+                pos++;
+            }
+            if (pos == text.length()) 
+            {
+                pos = -1;
+            }
+        }
+    }
+
     return pos;
 }
\ No newline at end of file
-        
-        // if we didn't find one, simply chop at startPos+width
-        pos = startPos + width;
-        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
-               && (c != '\n') && (c != '\r'))
-        {
-            ++pos;
-        }
-        return pos == text.length() ? -1 : pos;
-    }
