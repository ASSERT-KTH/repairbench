diff --git a/tmp/3622f6c3-1ae4-4ecd-bed3-e7c81fb25e78_buggy.java b/tmp/4e58bdba-4f45-4c09-9ecb-c13f75066630_fixed.java
index 2573d30..9edcbab 100644
--- a/tmp/3622f6c3-1ae4-4ecd-bed3-e7c81fb25e78_buggy.java
+++ b/tmp/4e58bdba-4f45-4c09-9ecb-c13f75066630_fixed.java
@@ -1,20 +1,28 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Check if the property access chain might be aliased.
+  Node child = node.getFirstChild();
+  while (child.isGetProp()) {
+    if (isNameAssignedTo(child.getString(), replacement)) {
+      return false;
+    }
+    child = child.getFirstChild();
+  }
+
+  // Check if the root of the property access chain might be aliased.
+  if (child.isName() && isNameAssignedTo(child.getString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
