diff --git a/tmp/0bae492e-be77-4abb-a05e-26d3c27ba700_buggy.java b/tmp/8c323102-f75c-4353-8eb9-ef1b339189df_fixed.java
index 2573d30..303366b 100644
--- a/tmp/0bae492e-be77-4abb-a05e-26d3c27ba700_buggy.java
+++ b/tmp/8c323102-f75c-4353-8eb9-ef1b339189df_fixed.java
@@ -1,20 +1,28 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Get the full property path (e.g., "x.parentNode.parentNode")
+  StringBuilder propertyPath = new StringBuilder();
+  Node current = node;
+  while (current.isGetProp()) {
+    propertyPath.insert(0, "." + current.getLastChild().getString());
+    current = current.getFirstChild();
+  }
+  propertyPath.insert(0, current.getString());
+
+  // Check if the property path is assigned to
+  if (isNameAssignedTo(propertyPath.toString(), replacement)) {
     return false;
   }
 
   return true;
 }
\ No newline at end of file
