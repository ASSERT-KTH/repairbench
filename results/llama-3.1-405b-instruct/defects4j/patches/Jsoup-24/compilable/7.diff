diff --git a/tmp/55c4b356-2a0b-4235-a352-bc8f8874fbe1_buggy.java b/tmp/0873750f-456f-4dda-a3aa-9814b92b74ed_fixed.java
index b2d53db..1866f69 100644
--- a/tmp/55c4b356-2a0b-4235-a352-bc8f8874fbe1_buggy.java
+++ b/tmp/0873750f-456f-4dda-a3aa-9814b92b74ed_fixed.java
@@ -1,34 +1,33 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
-                t.dataBuffer.append(name);
+        // Do not append tag name to data buffer as they are not part of regular data
         r.advance();
         return;
     }
 
     if (t.isAppropriateEndTagToken() &&!r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
             default:
-                        t.dataBuffer.append(c);
-                        anythingElse(t, r);
+                anythingElse(t, r); // Don't emit tags here, let transitions/emit handle it when escaping
                 break;
         }
     } else {
         anythingElse(t, r);
     }
 }
