diff --git a/tmp/709106ca-ca73-468e-a385-706fba392c77_buggy.java b/tmp/f5ec8966-3d54-46c4-b667-28f4000e36e2_fixed.java
index b2d53db..58bde89 100644
--- a/tmp/709106ca-ca73-468e-a385-706fba392c77_buggy.java
+++ b/tmp/f5ec8966-3d54-46c4-b667-28f4000e36e2_fixed.java
@@ -1,34 +1,48 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
         r.advance();
         return;
     }
 
     if (t.isAppropriateEndTagToken() &&!r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
+            case '\'':
+            case '"':
+                t.dataBuffer.append(c);
+                char[] buffer = new char[1024];
+                int len = 0;
+                while (true) {
+                    if (r.isEmpty()) break;
+                    char cc = r.consume();
+                    t.dataBuffer.append(cc);
+                    if (cc == c) break;
+                    if (len >= buffer.length - 1) break;
+                    buffer[len++] = cc;
+                }
+                break;
             default:
                 t.dataBuffer.append(c);
                 anythingElse(t, r);
                 break;
         }
     } else {
         anythingElse(t, r);
     }
 }
\ No newline at end of file
