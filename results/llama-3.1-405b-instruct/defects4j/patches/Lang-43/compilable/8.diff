diff --git a/tmp/df60fed9-b84b-4ebd-8278-cae484499cc7_buggy.java b/tmp/d64a6f03-b451-4b00-964e-6dd249f5f820_fixed.java
index b6b11b6..d556ec6 100644
--- a/tmp/df60fed9-b84b-4ebd-8278-cae484499cc7_buggy.java
+++ b/tmp/d64a6f03-b451-4b00-964e-6dd249f5f820_fixed.java
@@ -1,38 +1,33 @@
 /**
  * Consume a quoted string, adding it to <code>appendTo</code> if
  * specified.
  * 
  * @param pattern pattern to parse
  * @param pos current parse position
  * @param appendTo optional StringBuffer to append
  * @param escapingOn whether to process escaped quotes
  * @return <code>appendTo</code>
  */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
     if (escapingOn && c[start] == QUOTE) {
         return appendTo == null? null : appendTo.append(QUOTE);
     }
     int lastHold = start;
-        for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
+    while (pos.getIndex() < pattern.length()) {
+        if (escapingOn && pattern.substring(pos.getIndex()).startsWith(ESCAPED_QUOTE)) {
+            appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);
+            pos.setIndex(pos.getIndex() + ESCAPED_QUOTE.length());
             lastHold = pos.getIndex();
-                continue;
-            }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
+        } else if (c[pos.getIndex()] == QUOTE) {
             next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
+            return appendTo == null? null : appendTo.append(c, lastHold, pos.getIndex() - lastHold);
+        } else {
             next(pos);
         }
     }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
