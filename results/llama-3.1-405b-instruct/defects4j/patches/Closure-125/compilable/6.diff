diff --git a/tmp/652d7482-a770-4408-99cd-ef5c04fa41d8_buggy.java b/tmp/f35557d8-1b80-4e3d-9b08-84b344101217_fixed.java
index 7e43c1c..c3aa1b1 100644
--- a/tmp/652d7482-a770-4408-99cd-ef5c04fa41d8_buggy.java
+++ b/tmp/f35557d8-1b80-4e3d-9b08-84b344101217_fixed.java
@@ -1,19 +1,30 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
   if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
     FunctionType fnType = type.toMaybeFunctionType();
     if (fnType!= null) {
       visitParameterList(t, n, fnType);
       ensureTyped(t, n, fnType.getInstanceType());
+    } else if (type.isUnionType()) {
+      // Special handling for union types.
+      for (JSType unionType : type.toMaybeUnionType().getAlternates()) {
+        if (unionType.isConstructor()) {
+          FunctionType unionFnType = unionType.toMaybeFunctionType();
+          if (unionFnType!= null) {
+            ensureTyped(t, n, unionFnType.getInstanceType());
+            break;
+          }
+        }
+      }
     } else {
       ensureTyped(t, n);
     }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
