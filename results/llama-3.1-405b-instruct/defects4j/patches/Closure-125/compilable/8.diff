diff --git a/tmp/cb562bc2-6e63-4346-a253-28621619b071_buggy.java b/tmp/2c061d73-6848-4cfa-ae6a-ffe624019013_fixed.java
index 7e43c1c..89e38d4 100644
--- a/tmp/cb562bc2-6e63-4346-a253-28621619b071_buggy.java
+++ b/tmp/2c061d73-6848-4cfa-ae6a-ffe624019013_fixed.java
@@ -1,19 +1,31 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
   if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
     FunctionType fnType = type.toMaybeFunctionType();
     if (fnType!= null) {
       visitParameterList(t, n, fnType);
       ensureTyped(t, n, fnType.getInstanceType());
+    } else if (type.isUnionType()) {
+      // Special handling for union types.
+      UnionType unionType = type.toMaybeUnionType();
+      if (unionType!= null) {
+        for (JSType alternative : unionType.getAlternates()) {
+          if (alternative.isConstructor()) {
+            visitNew(t, n); // Recursively visit NEW node with alternative type.
+            return;
+          }
+        }
+      }
+      ensureTyped(t, n);
     } else {
       ensureTyped(t, n);
     }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
