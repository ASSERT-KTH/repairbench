diff --git a/tmp/b3d69360-94a6-4c77-9305-3dd0a0049833_buggy.java b/tmp/6ff16f41-fe1e-4947-a6e1-37febdfc8fe3_fixed.java
index 939f49b..3e6429d 100644
--- a/tmp/b3d69360-94a6-4c77-9305-3dd0a0049833_buggy.java
+++ b/tmp/6ff16f41-fe1e-4947-a6e1-37febdfc8fe3_fixed.java
@@ -1,21 +1,28 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
+    } else {
+      // Also check if the property is assigned directly to the prototype
+      Node parent = n.getFirstChild();
+      if (parent.getType() == Token.GETPROP && parent.getFirstChild().getNext().getType() == Token.STRING
+          && parent.getFirstChild().getNext().getString().equals("prototype")) {
+        return true;
+      }
     }
   }
 
   return false;
 }
\ No newline at end of file
