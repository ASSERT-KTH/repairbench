diff --git a/tmp/28d58a1d-bcc1-4111-b2c9-3abdc0c45169_buggy.java b/tmp/0353dad4-d8d5-4e9a-95ef-8d716083d183_fixed.java
index 939f49b..586bb37 100644
--- a/tmp/28d58a1d-bcc1-4111-b2c9-3abdc0c45169_buggy.java
+++ b/tmp/0353dad4-d8d5-4e9a-95ef-8d716083d183_fixed.java
@@ -1,21 +1,31 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
+    } else {
+      Node parent = n.getFirstChild();
+      if (parent.getType() == Token.GETPROP) {
+        Node grandParent = parent.getFirstChild();
+        Node propName = parent.getFirstChild().getNext();
+        if (grandParent.getType() == Token.NAME &&
+            propName.getType() == Token.STRING &&
+            propName.getString().equals("prototype")) {
+          return true;
+        }
+      }
     }
   }
 
   return false;
 }
\ No newline at end of file
