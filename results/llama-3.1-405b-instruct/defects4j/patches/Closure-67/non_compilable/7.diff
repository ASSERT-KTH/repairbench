diff --git a/tmp/8ede405c-7ac6-4724-bdaf-713a76c87932_buggy.java b/tmp/98b0eb8f-9d8c-4345-ae26-1f4243bd9233_fixed.java
index 939f49b..a42d7de 100644
--- a/tmp/8ede405c-7ac6-4724-bdaf-713a76c87932_buggy.java
+++ b/tmp/98b0eb8f-9d8c-4345-ae26-1f4243bd9233_fixed.java
@@ -1,21 +1,36 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
-          && n.getType() == Token.GETPROP
-          ) {
+      && n.getType() == Token.GETPROP) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
       if (child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
+    } else {
+      Node parent = n.getParent();
+      if (parent.getType() == Token.ASSIGN &&
+          parent.getChildCount() > 1) {
+        for (Node otherAssign : parent.getChildren()) {
+          if (otherAssign!= n &&
+              otherAssign.getType() == Token.GETPROP &&
+              otherAssign.getFirstChild().getType() == Token.GETPROP) {
+            Node otherChild = otherAssign.getFirstChild().getFirstChild().getNext();
+            if (otherChild.getType() == Token.STRING &&
+                otherChild.getString().equals("prototype")) {
+              return true;
+            }
+          }
+        }
+      }
     }
   }
 
   return false;
 }
\ No newline at end of file
