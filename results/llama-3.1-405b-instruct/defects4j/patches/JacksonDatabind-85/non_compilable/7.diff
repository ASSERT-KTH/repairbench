diff --git a/tmp/d913034b-9aed-4d77-858d-11ea084a4132_buggy.java b/tmp/df5f1d2d-3eea-4b9e-aa7b-3ce866742fae_fixed.java
index d926eea..8230b62 100644
--- a/tmp/d913034b-9aed-4d77-858d-11ea084a4132_buggy.java
+++ b/tmp/df5f1d2d-3eea-4b9e-aa7b-3ce866742fae_fixed.java
@@ -1,48 +1,45 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
     // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
     // First: custom pattern will override things
     if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
             || format.hasLocale() || format.hasTimeZone()) {
         TimeZone tz = format.getTimeZone();
         final String pattern = format.hasPattern()
                ? format.getPattern()
                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
         final Locale loc = format.hasLocale()
                ? format.getLocale()
                 : serializers.getLocale();
         SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
         if (tz == null) {
             tz = serializers.getTimeZone();
         }
         df.setTimeZone(tz);
         return withFormat(Boolean.FALSE, df);
     }
 
-        // Otherwise, need one of these changes:
-
+    // 26-Nov-2023: if no pattern is provided, use the default DateFormat from the ObjectMapper
+    DateFormat defaultDateFormat = serializers.getDateFormat();
+    if (defaultDateFormat instanceof SimpleDateFormat) {
+        return withFormat(Boolean.FALSE, defaultDateFormat);
+    }
 
     // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
     return this;
 }
\ No newline at end of file
