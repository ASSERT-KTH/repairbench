diff --git a/tmp/deba080c-3a67-49fe-aed0-7f90386c9e21_buggy.java b/tmp/767f9fb6-3f82-4d2e-b12c-ef7d8839cb2c_fixed.java
index 08093b4..c798d29 100644
--- a/tmp/deba080c-3a67-49fe-aed0-7f90386c9e21_buggy.java
+++ b/tmp/767f9fb6-3f82-4d2e-b12c-ef7d8839cb2c_fixed.java
@@ -1,42 +1,36 @@
     /**
      * Writes a PAX extended header with the given map as contents.
      * @since 1.4
      */
     void writePaxHeaders(String entryName,
                          Map<String, String> headers) throws IOException {
         String name = "./PaxHeaders.X/" + stripTo7Bits(entryName);
-            // TarEntry's constructor would think this is a directory
-            // and not allow any data to be written
         if (name.length() >= TarConstants.NAMELEN) {
             name = name.substring(0, TarConstants.NAMELEN - 1);
         }
         TarArchiveEntry pex = new TarArchiveEntry(name,
                                                   TarConstants.LF_PAX_EXTENDED_HEADER_LC);
-
-        StringWriter w = new StringWriter();
+        // Create a StringWriter with some capacity
+        StringWriter w = new StringWriter(headers.size() * 32); 
         for (Map.Entry<String, String> h : headers.entrySet()) {
             String key = h.getKey();
             String value = h.getValue();
-            int len = key.length() + value.length()
-                + 3 /* blank, equals and newline */
-                + 2 /* guess 9 < actual length < 100 */;
+            int len = key.length() + value.length() + 3; 
             String line = len + " " + key + "=" + value + "\n";
+            // Instead of a loop that's rarely executed, make it correct first time 
+            len += Integer.toString(len).length();
             int actualLength = line.getBytes(CharsetNames.UTF_8).length;
             while (len!= actualLength) {
-                // Adjust for cases where length < 10 or > 100
-                // or where UTF-8 encoding isn't a single octet
-                // per character.
-                // Must be in loop as size may go from 99 to 100 in
-                // first pass so we'd need a second.
+                // A loop for cases where the len's size changes unexpectedly in UTF-8, not really necessary
                 len = actualLength;
                 line = len + " " + key + "=" + value + "\n";
                 actualLength = line.getBytes(CharsetNames.UTF_8).length;
             }
             w.write(line);
         }
         byte[] data = w.toString().getBytes(CharsetNames.UTF_8);
-        pex.setSize(data.length);
+        pex.setSize(data.length); // must be written with size or Tar will reject writing it
         putArchiveEntry(pex);
         write(data); 
         closeArchiveEntry(); 
     }
\ No newline at end of file
