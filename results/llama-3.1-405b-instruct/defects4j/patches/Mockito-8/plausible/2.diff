diff --git a/tmp/8f5f2f30-e6d5-422a-b8a7-cff97172af2e_buggy.java b/tmp/61bcbc05-2382-4a49-be10-f19427ba3a1c_fixed.java
index 42b58d0..5a725fc 100644
--- a/tmp/8f5f2f30-e6d5-422a-b8a7-cff97172af2e_buggy.java
+++ b/tmp/61bcbc05-2382-4a49-be10-f19427ba3a1c_fixed.java
@@ -1,19 +1,22 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument.equals(typeParameter)) {
+            // avoid self-referential type variable registration
+            continue;
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
