diff --git a/tmp/502421b5-7457-4529-bf4f-edeaa1d10edb_buggy.java b/tmp/928ebc47-c9f4-4023-bda4-dfc6b2f34d6a_fixed.java
index 42b58d0..0de6d3c 100644
--- a/tmp/502421b5-7457-4529-bf4f-edeaa1d10edb_buggy.java
+++ b/tmp/928ebc47-c9f4-4023-bda4-dfc6b2f34d6a_fixed.java
@@ -1,19 +1,22 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+        } else if (actualTypeArgument.equals(typeParameter)) {
+            // skip self-referential type variables to avoid infinite recursion
+            continue;
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
         // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
