diff --git a/tmp/069e4ad5-5358-437a-ad61-2bfe1ac9078c_buggy.java b/tmp/5175c279-1ec5-4a5c-8dfb-9d5f6eefb693_fixed.java
index 42b58d0..4d9f2e1 100644
--- a/tmp/069e4ad5-5358-437a-ad61-2bfe1ac9078c_buggy.java
+++ b/tmp/5175c279-1ec5-4a5c-8dfb-9d5f6eefb693_fixed.java
@@ -1,19 +1,28 @@
 protected void registerTypeVariablesOn(Type classType) {
+    Set<Type> seenTypes = new HashSet<>();
+    internalRegisterTypeVariablesOn(classType, seenTypes);
+}
+
+private void internalRegisterTypeVariablesOn(Type classType, Set<Type> seenTypes) {
+    if (seenTypes.add(classType)) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
         TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
             
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+            } else if (actualTypeArgument instanceof ParameterizedType) {
+                internalRegisterTypeVariablesOn(actualTypeArgument, seenTypes);
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+        }
     }
 }
\ No newline at end of file
