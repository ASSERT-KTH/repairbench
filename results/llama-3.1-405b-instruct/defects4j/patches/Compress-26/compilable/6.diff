diff --git a/tmp/b49710f9-757b-4a57-ad81-5d47cac9802b_buggy.java b/tmp/15b528fc-e82a-401f-b728-146fddede48d_fixed.java
index 4b163f6..e2f4784 100644
--- a/tmp/b49710f9-757b-4a57-ad81-5d47cac9802b_buggy.java
+++ b/tmp/15b528fc-e82a-401f-b728-146fddede48d_fixed.java
@@ -1,28 +1,35 @@
 /**
  * Skips the given number of bytes by repeatedly invoking skip on
  * the given input stream if necessary.
  *
  * <p>In a case where the stream's skip() method returns 0 before
  * the requested number of bytes has been skip this implementation
  * will fall back to using the read() method.</p>
  *
  * <p>This method will only skip less than the requested number of
  * bytes if the end of the input stream has been reached.</p>
  *
  * @param input stream to skip bytes in
  * @param numToSkip the number of bytes to skip
  * @return the number of bytes actually skipped
  * @throws IOException
  */
 public static long skip(InputStream input, long numToSkip) throws IOException {
     long available = numToSkip;
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
         if (skipped == 0) {
+            // fall back to using read() if skip() didn't skip anything
+            if (input.read()!= -1) {
+                numToSkip--;
+            } else {
+                // end of stream reached
                 break;
             }
+        } else {
             numToSkip -= skipped;
         }
+    }
             
     return available - numToSkip;
 }
\ No newline at end of file
