diff --git a/tmp/dee668b6-bdc2-4158-90b7-a3efcc04f5e0_buggy.java b/tmp/09be85ef-e203-499a-a7e0-4038138060c8_fixed.java
index 4b163f6..c8b98e7 100644
--- a/tmp/dee668b6-bdc2-4158-90b7-a3efcc04f5e0_buggy.java
+++ b/tmp/09be85ef-e203-499a-a7e0-4038138060c8_fixed.java
@@ -1,28 +1,33 @@
 /**
  * Skips the given number of bytes by repeatedly invoking skip on
  * the given input stream if necessary.
  *
  * <p>In a case where the stream's skip() method returns 0 before
  * the requested number of bytes has been skip this implementation
  * will fall back to using the read() method.</p>
  *
  * <p>This method will only skip less than the requested number of
  * bytes if the end of the input stream has been reached.</p>
  *
  * @param input stream to skip bytes in
  * @param numToSkip the number of bytes to skip
  * @return the number of bytes actually skipped
  * @throws IOException
  */
 public static long skip(InputStream input, long numToSkip) throws IOException {
     long available = numToSkip;
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
         if (skipped == 0) {
+            // Fall back to using read() if skip() returns 0
+            int read = input.read();
+            if (read == -1) {
                 break;
             }
+            skipped = 1;
+        }
         numToSkip -= skipped;
     }
             
     return available - numToSkip;
 }
\ No newline at end of file
