diff --git a/tmp/509c989e-a166-490b-ae2b-ff00730c5cbb_buggy.java b/tmp/392b18a9-afa2-42df-950f-92d3d45b4790_fixed.java
index 4b163f6..4f238d6 100644
--- a/tmp/509c989e-a166-490b-ae2b-ff00730c5cbb_buggy.java
+++ b/tmp/392b18a9-afa2-42df-950f-92d3d45b4790_fixed.java
@@ -1,28 +1,11 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
 public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
-        while (numToSkip > 0) {
     long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
+    while (skipped < numToSkip) {
+        int read = input.read();
+        if (read == -1) {
             break;
         }
-            numToSkip -= skipped;
+        skipped++;
     }
-            
-        return available - numToSkip;
+    return skipped;
 }
\ No newline at end of file
