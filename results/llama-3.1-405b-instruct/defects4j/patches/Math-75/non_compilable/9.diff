diff --git a/tmp/99b7aefd-c076-4c2f-8104-7be9748b9045_buggy.java b/tmp/575c899c-8092-4fa7-8341-e292cd2b067e_fixed.java
index 877a1a1..25fc725 100644
--- a/tmp/99b7aefd-c076-4c2f-8104-7be9748b9045_buggy.java
+++ b/tmp/575c899c-8092-4fa7-8341-e292cd2b067e_fixed.java
@@ -1,14 +1,34 @@
 /**
   * Returns the percentage of values that are equal to v
  * (as a proportion between 0 and 1).
  * <p>
  * Returns <code>Double.NaN</code> if no values have been added.</p>
  *
  * @param v the value to lookup
  * @return the proportion of values equal to v
  * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
  */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    if (!(v instanceof Comparable)) {
+        return 0d; // or throw a meaningful exception
+    }
+    return getCumPct((Comparable<?>) v) - getCumPct(getPreviousValue(v));
+}
+
+// Helper function to get the previous comparable value
+private Comparable getPreviousValue(Object v) {
+    // Assuming existing method getUniqueSet() or getSortedSet() and implementing previous value logic on that
+    SortedSet set = getSortedSet(); // or get existing values in sorted order
+    
+    Comparable prevValue = null;
+    for(Comparable comparable : set ) {
+        if(comparable.compareTo( v ) >=  0 ) {
+            if (prevValue!=  null) {
+                break;
+            }
+        }
+        prevValue = (Comparable)comparable;
+   }
+   return prevValue;
 }
\ No newline at end of file
