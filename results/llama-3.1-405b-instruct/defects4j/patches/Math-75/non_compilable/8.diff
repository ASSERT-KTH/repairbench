diff --git a/tmp/88b5dc7b-50ba-4d7b-835b-38d885e6e689_buggy.java b/tmp/0518f7c5-cea5-4333-8b8f-42e8e0d608c2_fixed.java
index 877a1a1..aa9bccb 100644
--- a/tmp/88b5dc7b-50ba-4d7b-835b-38d885e6e689_buggy.java
+++ b/tmp/0518f7c5-cea5-4333-8b8f-42e8e0d608c2_fixed.java
@@ -1,14 +1,30 @@
 /**
  * Returns the percentage of values that are equal to v
  * (as a proportion between 0 and 1).
  * <p>
  * Returns <code>Double.NaN</code> if no values have been added.</p>
  *
  * @param v the value to lookup
  * @return the proportion of values equal to v
  * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
  */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    if (v instanceof Comparable) {
+        return getCumPct((Comparable<?>) v) - getCumPct(getPreviousValue(v));
+    } else {
+        return 0d;
+    }
+}
+
+/**
+ * Helper method to return the previous value in sorting order.
+ *
+ * @param v the value for which we need the predecessor
+ * @return the predecessor of v
+ */
+private Comparable<?> getPreviousValue(Object v) {
+    // Implement the necessary logic to get the predecessor of v
+    // This could be a Floor function or something similar 
+    // based on how the Frequency class is used.
 }
\ No newline at end of file
