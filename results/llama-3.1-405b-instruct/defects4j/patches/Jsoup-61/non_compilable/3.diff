diff --git a/tmp/ce24550e-6b09-4cc7-b7eb-f6b578c0779d_buggy.java b/tmp/3da8cb9d-4bea-4244-a739-962285269535_fixed.java
index 139579d..a32f381 100644
--- a/tmp/ce24550e-6b09-4cc7-b7eb-f6b578c0779d_buggy.java
+++ b/tmp/3da8cb9d-4bea-4244-a739-962285269535_fixed.java
@@ -1,43 +1,14 @@
     // performance sensitive
     public boolean hasClass(String className) {
         final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
-
-        if (len == 0 || len < wantLen) {
+        if (classAttr == null || classAttr.isEmpty())
             return false;
-        }
-
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
-                        return true;
-                    }
-                    inClass = false;
-                }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
 
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
+        // split the class up and check for existence and trim whitespace from start to reduce whitespace
+        Set<String> classSet = Splitter.on("\\s+").trimResults().setSplitToList(classAttr.toUpperCase()).stream()
+               .collect(Collectors.toSet());
 
-        return false;
+        // return existence in uppercased class name to deal with any cases in className of lower and upper.
+        // remove leading whitespace so string and split has a one character match of white spaces 
+        return classSet.contains(className.toUpperCase().trim());
     }
\ No newline at end of file
