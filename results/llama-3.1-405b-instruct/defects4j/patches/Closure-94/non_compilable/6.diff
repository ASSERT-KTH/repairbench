diff --git a/tmp/fc6696aa-74e5-4ea8-bf81-ea8617aeb628_buggy.java b/tmp/f1b52d0d-9504-4be3-ab60-458efe5f4c65_fixed.java
index 66e3d01..c38613a 100644
--- a/tmp/fc6696aa-74e5-4ea8-bf81-ea8617aeb628_buggy.java
+++ b/tmp/f1b52d0d-9504-4be3-ab60-458efe5f4c65_fixed.java
@@ -1,34 +1,37 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
+      case Token.ADD:
+        return isValidDefineValue(val.getFirstChild(), defines) 
+            && isValidDefineValue(val.getSecondChild(), defines);
 
       // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }
\ No newline at end of file
