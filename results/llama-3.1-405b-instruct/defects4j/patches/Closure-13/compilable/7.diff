diff --git a/tmp/f3ed154c-30f9-4ff5-a9c8-ac2ed5a31f6e_buggy.java b/tmp/2678ad70-0a19-4e1f-a929-cf6028487a85_fixed.java
index b5d94e0..04a9c70 100644
--- a/tmp/f3ed154c-30f9-4ff5-a9c8-ac2ed5a31f6e_buggy.java
+++ b/tmp/2678ad70-0a19-4e1f-a929-cf6028487a85_fixed.java
@@ -1,26 +1,28 @@
 private void traverse(Node node) {
     // The goal here is to avoid retraversing
     // the entire AST to catch newly created opportunities.
     // So we track whether a "unit of code" has changed,
     // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
 
     int visits = 0;
     do {
       Node c = node.getFirstChild();
       while(c!= null) {
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
 
       visit(node);
       visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+      if (visits >= 10000) {
+        throw new RuntimeException("Too many iterations");
+      }
     } while (shouldRetraverse(node));
 
     exitNode(node);
 }
\ No newline at end of file
