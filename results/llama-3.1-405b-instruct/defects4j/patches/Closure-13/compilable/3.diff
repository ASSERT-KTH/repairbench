diff --git a/tmp/02774d5b-1387-4145-8d69-481bb96a663e_buggy.java b/tmp/b5ee62e3-54d1-4557-9ef7-491549510948_fixed.java
index b5d94e0..da4d655 100644
--- a/tmp/02774d5b-1387-4145-8d69-481bb96a663e_buggy.java
+++ b/tmp/b5ee62e3-54d1-4557-9ef7-491549510948_fixed.java
@@ -1,26 +1,29 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while(c!= null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
     visit(node);
     visits++;
 
-      Preconditions.checkState(visits < 10000, "too many interations");
+    // Fix: check for infinite loop
+    if (visits >= 10000) {
+      throw new RuntimeException("Infinite loop detected in traverse function");
+    }
   } while (shouldRetraverse(node));
 
   exitNode(node);
 }
\ No newline at end of file
