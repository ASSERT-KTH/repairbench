diff --git a/tmp/2b9cb0f2-329e-4618-b135-837918d412bd_buggy.java b/tmp/2d7cb614-98ec-4c61-b4c1-cd98d3f7effe_fixed.java
index b5d94e0..dea717c 100644
--- a/tmp/2b9cb0f2-329e-4618-b135-837918d412bd_buggy.java
+++ b/tmp/2d7cb614-98ec-4c61-b4c1-cd98d3f7effe_fixed.java
@@ -1,26 +1,31 @@
 private void traverse(Node node) {
   // The goal here is to avoid retraversing
   // the entire AST to catch newly created opportunities.
   // So we track whether a "unit of code" has changed,
   // and revisit immediately.
   if (!shouldVisit(node)) {
     return;
   }
 
   int visits = 0;
   do {
     Node c = node.getFirstChild();
     while(c!= null) {
       traverse(c);
       Node next = c.getNext();
       c = next;
     }
 
     visit(node);
     visits++;
 
+    // Fix: Add a check to break the loop if the node is not changed
+    if (!shouldRetraverse(node)) {
+      break;
+    }
+
     Preconditions.checkState(visits < 10000, "too many interations");
-    } while (shouldRetraverse(node));
+  } while (true);
 
   exitNode(node);
 }
\ No newline at end of file
