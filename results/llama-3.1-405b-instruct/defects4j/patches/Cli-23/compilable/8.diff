diff --git a/tmp/a5665175-9668-4bcd-9c77-466ea3870d37_buggy.java b/tmp/68ce4942-d2ee-4f68-994b-a7e442eab6cd_fixed.java
index 227a4ef..22c15ef 100644
--- a/tmp/a5665175-9668-4bcd-9c77-466ea3870d37_buggy.java
+++ b/tmp/68ce4942-d2ee-4f68-994b-a7e442eab6cd_fixed.java
@@ -1,48 +1,30 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    // all following lines must be padded with nextLineTabStop space characters
     final String padding = createPadding(nextLineTabStop);
+    text = text.substring(pos).trim();
 
     while (true)
     {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
+        pos = findWrapPos(text, width - padding.length(), 0);
         if (pos == -1)
         {
-                sb.append(text);
+            sb.append(padding).append(text);
 
             return sb;
-            } else
-            if (pos == lastPos)
-            {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
         }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        sb.append(padding).append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+        text = text.substring(pos).trim();
     }
 }
\ No newline at end of file
