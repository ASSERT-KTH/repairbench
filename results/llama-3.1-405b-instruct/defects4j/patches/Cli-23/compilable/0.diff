diff --git a/tmp/2ff4bbf9-2494-4f84-a5a9-d272391f78c7_buggy.java b/tmp/6eaa3146-632e-4143-b2fc-8a5d1cf0ccb6_fixed.java
index 227a4ef..2e5eeab 100644
--- a/tmp/2ff4bbf9-2494-4f84-a5a9-d272391f78c7_buggy.java
+++ b/tmp/6eaa3146-632e-4143-b2fc-8a5d1cf0ccb6_fixed.java
@@ -1,48 +1,57 @@
 /**
  * Render the specified text and return the rendered Options
  * in a StringBuffer.
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
+    text = padding + text.substring(pos).trim();
 
     while (true)
     {
-            int lastPos = pos;
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
+        int lastPos = text.indexOf(' ');
+        if (lastPos == -1)
+        {
+            if (text.length() <= width)
             {
                 sb.append(text);
 
                 return sb;
+            }
         } else
-            if (pos == lastPos)
         {
-                throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
-            }
+            pos = findWrapPos(text, width, lastPos);
+
+            if (pos == -1)
+            {
+                sb.append(text);
 
+                return sb;
+            }
+        }
+        pos = findWrapPos(text, width, 0);
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+
+        text = padding + text.substring(pos).trim();
     }
 }
\ No newline at end of file
