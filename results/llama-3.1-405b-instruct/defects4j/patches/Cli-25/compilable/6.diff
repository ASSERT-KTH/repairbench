diff --git a/tmp/3f5660ae-2ef3-4db4-ad36-f6ccc88ea7d8_buggy.java b/tmp/d9c471a0-f03d-4209-bfd1-5caeb10d9355_fixed.java
index 875b31b..6a5ef6f 100644
--- a/tmp/3f5660ae-2ef3-4db4-ad36-f6ccc88ea7d8_buggy.java
+++ b/tmp/d9c471a0-f03d-4209-bfd1-5caeb10d9355_fixed.java
@@ -1,54 +1,60 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
     while (true)
     {
+        // all following lines must be padded with nextLineTabStop space characters
+        final String padding = createPadding(nextLineTabStop);
         text = padding + text.substring(pos).trim();
+        
+        if (text.length() > width)
+        {
+            // line is longer than the max width, do a manual wrap
+            int wrappedPos = 0;
+            while ((wrappedPos = findWrapPos(text, width, nextLineTabStop + wrappedPos))!= -1)
+            {
+                if (wrappedPos > pos + 1)
+                {
+                    sb.append(text.substring(0, wrappedPos)).append(defaultNewLine);
+                }
+                
+                // text is getting too small to wrap safely, render what's remaining and leave the loop 
+                if ((text.length() - wrappedPos) > (nextLineTabStop))    
+                {
+                    text = padding + text.substring(wrappedPos);
+                }
+                else 
+                {
+                    wrappedPos = -1;    
+                }
+            }
+
+        }
+
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
 
             return sb;
         }
             
         if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
         {
             pos = width;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
 }
\ No newline at end of file
