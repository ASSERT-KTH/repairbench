diff --git a/tmp/22c257cd-3ed9-40c0-b541-e2f8b376ad7c_buggy.java b/tmp/c5c28121-011d-407d-839d-c51938a907b4_fixed.java
index c9da1b7..773fa93 100644
--- a/tmp/22c257cd-3ed9-40c0-b541-e2f8b376ad7c_buggy.java
+++ b/tmp/c5c28121-011d-407d-839d-c51938a907b4_fixed.java
@@ -1,33 +1,38 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne!= null) {
 
         if ((_explicitCreators & mask)!= 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
-
+            // Check if the new creator is "more specific" than the old one
+            if (!isMoreSpecific(newOne, oldOne)) {
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                         +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+            }
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
+
+// Helper method to check if a creator is more specific than another
+private boolean isMoreSpecific(AnnotatedWithParams newOne, AnnotatedWithParams oldOne) {
+    // Assuming that "more specific" means the new creator has more parameters
+    return newOne.getParameterCount() > oldOne.getParameterCount();
+}
\ No newline at end of file
