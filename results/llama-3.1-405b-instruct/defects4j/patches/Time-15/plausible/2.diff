diff --git a/tmp/bd6c49f9-c76b-4d55-b56c-b3bbaf9598b3_buggy.java b/tmp/f363fd1a-a66f-403f-82f6-10d64b7ca716_fixed.java
index a9a5e27..b999da6 100644
--- a/tmp/bd6c49f9-c76b-4d55-b56c-b3bbaf9598b3_buggy.java
+++ b/tmp/f363fd1a-a66f-403f-82f6-10d64b7ca716_fixed.java
@@ -1,24 +1,29 @@
     /**
      * Multiply two values throwing an exception if overflow occurs.
      * 
      * @param val1  the first value
      * @param val2  the second value
      * @return the new total
      * @throws ArithmeticException if the value is too big or too small
      * @since 1.2
      */
     public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                return -val1;
-            case 0:
+        if (val2 == 0) {
             return 0L;
-            case 1:
-                return val1;
         }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+        
+        // Simplify test for overflows
+        if (val1 == Long.MIN_VALUE && val2 < 0) {
             throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
         }
-        return total;
+        
+        long val2Long = (long) val2;
+        long result = val1 * val2Long;
+        
+        // Check for overflows
+        if (result / val2Long!= val1) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+        }
+        
+        return result;
     }
\ No newline at end of file
