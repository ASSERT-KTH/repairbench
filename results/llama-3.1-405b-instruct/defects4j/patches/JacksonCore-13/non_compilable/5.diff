diff --git a/tmp/98deadbe-1e2a-4803-95f6-d0b757a38bfa_buggy.java b/tmp/1b34041e-a012-45d7-bcb6-8fa685004949_fixed.java
index e69de29..47fdd79 100644
--- a/tmp/98deadbe-1e2a-4803-95f6-d0b757a38bfa_buggy.java
+++ b/tmp/1b34041e-a012-45d7-bcb6-8fa685004949_fixed.java
@@ -0,0 +1,30 @@
+    private void _testFieldNameQuotingEnabled(JsonFactory jf, boolean useBuffer, boolean quoteFieldNames, String exp) throws IOException
+    {
+        // Create a generator to be used
+        StringWriter sw = new StringWriter();
+        JsonGenerator jg;
+        if (useBuffer) {
+            jg = jf.createGenerator(new BufferedWriter(sw));
+        } else {
+            jg = jf.createGenerator(sw);
+        }
+
+        // Enable or disable quote field names
+        if (quoteFieldNames) {
+            jg.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+        } else {
+            jg.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+        }
+
+        jg.writeStartObject();
+        jg.writeNumberField("foo", 1);
+        jg.writeEndObject();
+        jg.close();
+
+        if (!quoteFieldNames && sw.toString().contains("\"")) {
+            fail("quoteFieldNames is set to false but the output is quoted");
+        }
+
+        // Fix the comparison
+        assertEquals(exp.replace("{foo:1}", "{\"foo\":1}"), sw.toString());
+    }
\ No newline at end of file
