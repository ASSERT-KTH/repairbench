diff --git a/tmp/00296ca9-1bd5-493f-bec9-acfe4cbf7295_buggy.java b/tmp/645b4728-beb1-4115-8993-55cb7d737112_fixed.java
index e69de29..975c8e7 100644
--- a/tmp/00296ca9-1bd5-493f-bec9-acfe4cbf7295_buggy.java
+++ b/tmp/645b4728-beb1-4115-8993-55cb7d737112_fixed.java
@@ -0,0 +1,31 @@
+private void _testFieldNameQuotingEnabled(JsonFactory f, boolean useBuffering, boolean quoteFields, String expected) throws IOException
+{
+    // Create a new generator
+    JsonGenerator g;
+    if (useBuffering) {
+        g = f.createGenerator(new StringWriter());
+    } else {
+        g = f.createGenerator(new OutputStreamWriter(new ByteArrayOutputStream()));
+    }
+    
+    // Check if quoting of field names is enabled or disabled
+    if (quoteFields) {
+        g.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    } else {
+        g.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    }
+    
+    // Write the test JSON
+    g.writeStartObject();
+    g.writeFieldName("foo");
+    g.writeNumber(1);
+    g.writeEndObject();
+    g.close();
+    
+    // Check the result
+    if (useBuffering) {
+        assertEquals(expected, ((StringWriter)g.getOutputTarget()).toString());
+    } else {
+        assertEquals(expected, new String(((ByteArrayOutputStream)((OutputStreamWriter)g.getOutputTarget()).getOutputStream()).toByteArray()));
+    }
+}
\ No newline at end of file
