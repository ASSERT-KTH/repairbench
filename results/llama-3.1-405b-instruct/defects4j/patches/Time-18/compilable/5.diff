diff --git a/tmp/1388e1a4-b71a-4af8-a9a8-83fb7a065216_buggy.java b/tmp/bb5e74c7-ecfa-45db-8a8f-7490302c9461_fixed.java
index be2af16..8f3da23 100644
--- a/tmp/1388e1a4-b71a-4af8-a9a8-83fb7a065216_buggy.java
+++ b/tmp/bb5e74c7-ecfa-45db-8a8f-7490302c9461_fixed.java
@@ -1,29 +1,35 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase())!= null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
+    // Check if the date is before the cutover and is valid in the Julian chronology.
+    long julianInstant = iJulianChronology.getDateTimeMillis
+        (year, monthOfYear, dayOfMonth,
+         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    if (julianInstant < iCutoverMillis) {
+        return julianInstant;
+    }
+
     // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
+    long gregorianInstant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+    if (gregorianInstant >= iCutoverMillis) {
+        return gregorianInstant;
+    }
+
+    // The date is in the cutover gap, check if the Julian chronology produces a date before the cutover.
+    if (iJulianChronology.dayOfYear().get(julianInstant) > 355) {
         throw new IllegalArgumentException("Specified date does not exist");
     }
-        }
-        return instant;
+
+    return julianInstant;
 }
\ No newline at end of file
