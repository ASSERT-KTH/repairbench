diff --git a/tmp/153a6314-eb5d-4ea7-84a7-415bf9800bc4_buggy.java b/tmp/c61b1da8-de4c-4c8d-9c63-a7a3ea9f215c_fixed.java
index be2af16..767caa9 100644
--- a/tmp/153a6314-eb5d-4ea7-84a7-415bf9800bc4_buggy.java
+++ b/tmp/c61b1da8-de4c-4c8d-9c63-a7a3ea9f215c_fixed.java
@@ -1,29 +1,34 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase())!= null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
+    try {
         instant = iGregorianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-        if (instant < iCutoverMillis) {
+    } catch (IllegalFieldValueException e) {
         // Maybe it's Julian.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
+    if (instant < iCutoverMillis) {
+        // Definitely Julian.
+        return instant;
+    }
     return instant;
 }
\ No newline at end of file
