diff --git a/tmp/e09e102e-80aa-402c-9e81-6e5e4f521f94_buggy.java b/tmp/6c1a4b07-93eb-46d9-8aeb-f9c28a2b1b73_fixed.java
index 62e8ec8..2d3bf0c 100644
--- a/tmp/e09e102e-80aa-402c-9e81-6e5e4f521f94_buggy.java
+++ b/tmp/6c1a4b07-93eb-46d9-8aeb-f9c28a2b1b73_fixed.java
@@ -1,26 +1,22 @@
-    /**
-     * <p>If an {@link Option} exists for <code>token</code> then
-     * set the current option and add the token to the processed 
-     * list.</p>
-     *
-     * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
-     * is set then ignore the current token and add the remaining tokens
-     * to the processed tokens list directly.</p>
-     *
-     * @param token The current option token
-     * @param stopAtNonOption Specifies whether flattening should halt
-     * at the first non option.
-     */
 private void processOptionToken(String token, boolean stopAtNonOption)
 {
     if (options.hasOption(token))
     {
         currentOption = options.getOption(token);
         tokens.add(token);
     }
-        else if (stopAtNonOption)
+    else 
+    {
+        if (stopAtNonOption)
         {
             eatTheRest = true;
-            tokens.add(token);
+            tokens.addAll(Arrays.asList(args.subList(currentArgIndex, args.size()).toArray(new String[]{})));
+            currentArgIndex = args.size();
+            throw new UnrecognizedOptionException(getMessage("Unrecognized option: ", token));
+        }
+        else
+        {
+            throw new UnrecognizedOptionException(getMessage("Unrecognized option: ", token));
+        }
     }
 }
\ No newline at end of file
