diff --git a/tmp/3c48a2ee-d781-499c-a0a0-f56a26a07319_buggy.java b/tmp/e19095f8-bbf1-4b8b-b6ff-186ac91a2409_fixed.java
index 8e93a5e..1df43c9 100644
--- a/tmp/3c48a2ee-d781-499c-a0a0-f56a26a07319_buggy.java
+++ b/tmp/e19095f8-bbf1-4b8b-b6ff-186ac91a2409_fixed.java
@@ -1,43 +1,28 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
+    String[] lines = text.split(defaultNewLine);
+    for (String line : lines) {
+        int pos = findWrapPos(line, width, 0);
+        if (pos == -1) {
+            sb.append(rtrim(line)).append(defaultNewLine);
+        } else {
+            sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
             final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
+            while (true) {
+                line = padding + line.substring(pos).trim();
+                pos = findWrapPos(line, width, nextLineTabStop);
+                if (pos == -1) {
+                    sb.append(line).append(defaultNewLine);
+                    break;
+                }
+                sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+            }
+        }
+    }
+    // Remove the extra newline character
+    if (sb.length() > 0) {
+        sb.deleteCharAt(sb.length() - 1);
+    }
     return sb;
 }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
