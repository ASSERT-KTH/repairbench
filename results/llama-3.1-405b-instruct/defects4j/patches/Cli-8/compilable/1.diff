diff --git a/tmp/b85b8810-2cf9-4ec3-9bd9-6897e00bbaea_buggy.java b/tmp/d3fe6a42-0944-4bb0-b0a6-94c3566ad874_fixed.java
index 8e93a5e..7508b35 100644
--- a/tmp/b85b8810-2cf9-4ec3-9bd9-6897e00bbaea_buggy.java
+++ b/tmp/d3fe6a42-0944-4bb0-b0a6-94c3566ad874_fixed.java
@@ -1,43 +1,48 @@
 /**
  * <p>Render the specified text and return the rendered Options
  * in a StringBuffer.</p>
  *
  * @param sb The StringBuffer to place the rendered text into.
  * @param width The number of characters to display per line
  * @param nextLineTabStop The position on the next line for the first tab.
  * @param text The text to be rendered.
  *
  * @return the StringBuffer with the rendered Options contents.
  */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
-        int pos = findWrapPos(text, width, 0);
-
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
+    for (String line : text.split(defaultNewLine))
+    {
+        int pos = findWrapPos(line, width, 0);
+        
+        if (pos == -1)
+        {
+            sb.append(padding).append(rtrim(line));
+
+            continue;
+        }
+
+        sb.append(padding).append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+        line = line.substring(pos).trim();
+
         while (true)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, nextLineTabStop);
+            pos = findWrapPos(line, width, nextLineTabStop);
             
             if (pos == -1)
             {
-                sb.append(text);
+                sb.append(createPadding(nextLineTabStop)).append(line);
                 
+                break;
+            }
+            sb.append(createPadding(nextLineTabStop)).append(rtrim(line.substring(0, pos))).append(defaultNewLine);
+            line = line.substring(pos).trim();
+        }
+    }
     return sb;
 }
\ No newline at end of file
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }
