diff --git a/tmp/4eb5fd13-d5c9-4e0c-9091-76103d931fd5_buggy.java b/tmp/31349348-8dcb-499d-a0d9-d35abec5c1c8_fixed.java
index 98d89dc..249dd8a 100644
--- a/tmp/4eb5fd13-d5c9-4e0c-9091-76103d931fd5_buggy.java
+++ b/tmp/31349348-8dcb-499d-a0d9-d35abec5c1c8_fixed.java
@@ -1,23 +1,27 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+    // Special handling for NaN
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        return Double.compare(ld, rd) == 0;
+    }
     return evaluateCompare(ld == rd? 0 : ld < rd? -1 : 1);
 }
\ No newline at end of file
