diff --git a/tmp/b8c54ca0-3d03-4b8f-b2bc-d371e1b18194_buggy.java b/tmp/0db04337-2d52-4dda-ac44-d3d2db899264_fixed.java
index 98d89dc..4d4fa37 100644
--- a/tmp/b8c54ca0-3d03-4b8f-b2bc-d371e1b18194_buggy.java
+++ b/tmp/0db04337-2d52-4dda-ac44-d3d2db899264_fixed.java
@@ -1,23 +1,31 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+    if (Double.isNaN(ld) && Double.isNaN(rd)) {
+        return evaluateCompare(0);
+    } else if (Double.isNaN(ld)) {
+        return false;
+    } else if (Double.isNaN(rd)) {
+        return false;
+    } else {
         return evaluateCompare(ld == rd? 0 : ld < rd? -1 : 1);
     }
+}
\ No newline at end of file
