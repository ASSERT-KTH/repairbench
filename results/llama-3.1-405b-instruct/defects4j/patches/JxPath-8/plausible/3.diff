diff --git a/tmp/ce83cfeb-6cbc-4d54-92c5-776ed417ea65_buggy.java b/tmp/b1ca2ab5-5981-49a3-b6e9-177d7eb2c488_fixed.java
index 98d89dc..15af121 100644
--- a/tmp/ce83cfeb-6cbc-4d54-92c5-776ed417ea65_buggy.java
+++ b/tmp/b1ca2ab5-5981-49a3-b6e9-177d7eb2c488_fixed.java
@@ -1,23 +1,32 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    if (Double.isNaN(ld) && Double.isNaN(rd)) {
+        return evaluateCompare(0); // NaN is considered equal to NaN
+    } else if (Double.isNaN(ld)) {
+        return false; // NaN is not equal to, greater than or less than any other value
+    } else if (Double.isNaN(rd)) {
+        return false; // NaN is not equal to, greater than or less than any other value
+    } else {
         return evaluateCompare(ld == rd? 0 : ld < rd? -1 : 1);
     }
+}
\ No newline at end of file
