diff --git a/tmp/dd250421-bcce-4557-b024-d402469fcee2_buggy.java b/tmp/c85ea32a-f44a-488c-ad94-62bd8fc9d362_fixed.java
index c51c8b1..eef6055 100644
--- a/tmp/dd250421-bcce-4557-b024-d402469fcee2_buggy.java
+++ b/tmp/c85ea32a-f44a-488c-ad94-62bd8fc9d362_fixed.java
@@ -1,31 +1,31 @@
     private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {
       Node nameNode = n.getFirstChild();
       Node parent = n.getParent();
       NameInformation ns = createNameInformation(t, nameNode);
       if (ns!= null) {
         if (parent.isFor() &&!NodeUtil.isForIn(parent)) {
           // Patch for assignments that appear in the init,
           // condition or iteration part of a FOR loop.  Without
           // this change, all 3 of those parts try to claim the for
           // loop as their dependency scope.  The last assignment in
           // those three fields wins, which can result in incorrect
           // reference edges between referenced and assigned variables.
           //
           // TODO(user) revisit the dependency scope calculation
           // logic.
           if (parent.getFirstChild().getNext()!= n) {
             recordDepScope(recordNode, ns);
           } else {
             recordDepScope(nameNode, ns);
           }
+        } else if (recordNode.getParent().isCall()) {
+          // If the assignment is a child of a call node, don't associate it with the left-hand side.
+          // This is because the left-hand side is not really used in this context, it's just being
+          // assigned to and then discarded.
+          // See testAssignWithCall for an example of this.
+          recordDepScope(recordNode, ns);
         } else {
-          // The rhs of the assignment is the caller, so it's used by the
-          // context. Don't associate it w/ the lhs.
-          // FYI: this fixes only the specific case where the assignment is the
-          // caller expression, but it could be nested deeper in the caller and
-          // we would still get a bug.
-          // See testAssignWithCall2 for an example of this.
           recordDepScope(recordNode, ns);
         }
       }
     }
\ No newline at end of file
