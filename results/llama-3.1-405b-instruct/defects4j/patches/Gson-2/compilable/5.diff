diff --git a/tmp/a97177aa-b15d-4d77-b369-9d559817c563_buggy.java b/tmp/52e38e2e-0e6d-4988-add4-3ca53288212c_fixed.java
index 6e45f80..46c2e59 100644
--- a/tmp/a97177aa-b15d-4d77-b369-9d559817c563_buggy.java
+++ b/tmp/52e38e2e-0e6d-4988-add4-3ca53288212c_fixed.java
@@ -1,21 +1,32 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
-
+      final TypeAdapter<T2> result = (TypeAdapter<T2>) typeAdapter;
+      return new TypeAdapter<T2>() {
+        @Override public void write(JsonWriter out, T2 value) throws IOException {
+          result.write(out, value);
+        }
+        @Override public T2 read(JsonReader in) throws IOException {
+          T2 value = result.read(in);
+          if (!requestedType.isInstance(value)) {
+            throw new JsonSyntaxException("Expected a " + requestedType.getName() + " but was " + value.getClass().getName());
+          }
+          return value;
+        }
+      };
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
