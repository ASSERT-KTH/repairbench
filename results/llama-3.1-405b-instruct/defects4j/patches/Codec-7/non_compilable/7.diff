diff --git a/tmp/a09f7d9a-a1dd-4559-8305-2c6c442661c1_buggy.java b/tmp/b921e17b-197d-45e6-9d1c-8df47aa04bac_fixed.java
index 31c6a4b..b6333f3 100644
--- a/tmp/a09f7d9a-a1dd-4559-8305-2c6c442661c1_buggy.java
+++ b/tmp/b921e17b-197d-45e6-9d1c-8df47aa04bac_fixed.java
@@ -1,11 +1,31 @@
 /**
  * Encodes binary data using the base64 algorithm into 76 character blocks separated by CRLF.
  *
  * @param binaryData
  *            binary data to encode
  * @return String containing Base64 characters.
  * @since 1.4
  */    
 public static String encodeBase64String(byte[] binaryData) {
-        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));
+    if (binaryData == null) {
+        return null;
+    } else if (binaryData.length == 0) {
+        return "";
+    }
+
+    byte[] encodedBinaryData = encodeBase64(binaryData, true);
+    if (encodedBinaryData == null || encodedBinaryData.length == 0) {
+        return "";
+    }
+
+    int paddingIndex = encodedBinaryData.length - 1;
+    while (paddingIndex >= 0 && encodedBinaryData[paddingIndex] == '=') {
+        paddingIndex--;
+    }
+
+    if (paddingIndex == encodedBinaryData.length - 1 || encodedBinaryData[encodedBinaryData.length - 1]!= '\r') {
+        return StringUtils.newStringUtf8(encodedBinaryData);
+    } else {
+        return StringUtils.newStringUtf8(Arrays.copyOfRange(encodedBinaryData, 0, paddingIndex + 1)) + "\r\n";
+    }
 }
\ No newline at end of file
