diff --git a/tmp/23d2ea8b-c670-46d3-a400-4394e6103f2b_buggy.java b/tmp/e1f934ed-cafa-4e4c-8586-c0e9e2ebf403_fixed.java
index 0dbce00..bdbc351 100644
--- a/tmp/23d2ea8b-c670-46d3-a400-4394e6103f2b_buggy.java
+++ b/tmp/e1f934ed-cafa-4e4c-8586-c0e9e2ebf403_fixed.java
@@ -1,33 +1,46 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // shape not explicitly set, default to user config
+            if (format.getShape() == JsonFormat.Shape.ANY) {
+                if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                    // if pattern, locale or timezone is set, default to string shape
+                    return withFormat(Boolean.FALSE, serializers.getConfig().getDateFormat());
+                } else {
+                    // otherwise, default to the global date format
+                    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+                           ? withFormat(Boolean.TRUE, null)
+                            : withFormat(Boolean.FALSE, serializers.getConfig().getDateFormat());
+                }
+            }
         }
     }
     return this;
 }
\ No newline at end of file
