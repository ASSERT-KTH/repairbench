diff --git a/tmp/618f2b94-e512-43d5-bef0-67c40115eea8_buggy.java b/tmp/c238fa84-fd73-4894-bc95-be5764f28cbf_fixed.java
index 0dbce00..932f560 100644
--- a/tmp/618f2b94-e512-43d5-bef0-67c40115eea8_buggy.java
+++ b/tmp/c238fa84-fd73-4894-bc95-be5764f28cbf_fixed.java
@@ -1,33 +1,40 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // If shape is JsonFormat.Shape.ANY and no pattern, locale, or timezone is specified,
+            // default to user configuration (SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+            if (shape == JsonFormat.Shape.ANY &&!format.hasPattern() &&!format.hasLocale() &&!format.hasTimeZone()) {
+                return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+                       ? withFormat(Boolean.TRUE, null) : withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601));
+            }
         }
     }
     return this;
 }
\ No newline at end of file
