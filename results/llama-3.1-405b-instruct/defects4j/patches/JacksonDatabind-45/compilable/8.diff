diff --git a/tmp/deaa9b97-38b5-4b34-a51b-800db3a8c791_buggy.java b/tmp/059cf670-77e0-4f31-9bca-85437e94dca5_fixed.java
index 0dbce00..965bcd6 100644
--- a/tmp/deaa9b97-38b5-4b34-a51b-800db3a8c791_buggy.java
+++ b/tmp/059cf670-77e0-4f31-9bca-85437e94dca5_fixed.java
@@ -1,33 +1,41 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // If no explicit shape, check for other hints (pattern, locale, timezone)
+            if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                return withFormat(Boolean.FALSE, new SimpleDateFormat(
+                        format.hasPattern()? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601,
+                        format.hasLocale()? format.getLocale() : serializers.getLocale()));
             }
         }
-        return this;
+    }
+    // If no @JsonFormat, default to user config
+    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)? withFormat(Boolean.TRUE, null) : this;
 }
\ No newline at end of file
