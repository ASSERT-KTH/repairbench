diff --git a/tmp/51e4aa7f-27b3-49e2-9e2c-ad773d19fc8f_buggy.java b/tmp/bd42ef22-ecb9-4390-8d14-56398aeef81b_fixed.java
index 0dbce00..fbd6037 100644
--- a/tmp/51e4aa7f-27b3-49e2-9e2c-ad773d19fc8f_buggy.java
+++ b/tmp/bd42ef22-ecb9-4390-8d14-56398aeef81b_fixed.java
@@ -1,33 +1,46 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
         	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // shape not explicitly set, use pattern, locale or timezone as STRING
+            if (shape == JsonFormat.Shape.ANY) {
+                if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                    return withFormat(Boolean.FALSE, serializers.configure(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES, true));
                 }
             }
+        }
+    }
+
+    // default to Serialize date as timestamp
+    if (serializers.enabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        return withFormat(Boolean.TRUE, null);
+    }
+    
     return this;
 }
\ No newline at end of file
