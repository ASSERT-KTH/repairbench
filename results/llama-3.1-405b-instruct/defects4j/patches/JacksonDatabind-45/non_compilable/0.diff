diff --git a/tmp/9cc403e2-f934-4090-95a7-ec1345ef558f_buggy.java b/tmp/ddaedc50-bee6-4ec8-81dd-6ead79df87d7_fixed.java
index 0dbce00..5b3c656 100644
--- a/tmp/9cc403e2-f934-4090-95a7-ec1345ef558f_buggy.java
+++ b/tmp/ddaedc50-bee6-4ec8-81dd-6ead79df87d7_fixed.java
@@ -1,33 +1,47 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
-            	// Simple case first: serialize as numeric timestamp?
-                JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
-                }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
-                    TimeZone tz = format.getTimeZone();
+            // Check for special handling first; shape, pattern, timezone or locale
             final String pattern = format.hasPattern()
                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    : (format.getShape() == JsonFormat.Shape.STRING?
+                            StdDateFormat.DATE_FORMAT_STR_ISO8601 :
+                            null);
+            if (pattern!= null
+                    || format.getTimeZone()!= null
+                    || format.hasLocale())
+            {
+                TimeZone tz = format.getTimeZone();
                 final Locale loc = format.hasLocale()
                        ? format.getLocale()
                         : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+            // Simple case; shape explicitly set as NUMERIC or STRING?
+            JsonFormat.Shape shape = format.getShape();
+            if (shape.isNumeric()) {
+                return withFormat(Boolean.TRUE, null);
             }
+            if (shape == JsonFormat.Shape.STRING) {
+                // Will default to using date default pattern (ISO-8601), timezone of owner
+                return withFormat(Boolean.FALSE, new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601,
+                        serializers.getLocale()));
+            }
+        }
+        // If we get this far, it means shape = JsonFormat.Shape.ANY; hence
+        return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+               ? withFormat(Boolean.TRUE, null)
+                : new StdDateFormat();
     }
     return this;
 }
\ No newline at end of file
