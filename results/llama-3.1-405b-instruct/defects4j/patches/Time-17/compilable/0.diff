diff --git a/tmp/750f8fe9-f8c2-407e-ba65-f3396d27b524_buggy.java b/tmp/0661b51d-82c7-4e37-9cd2-108c148c125f_fixed.java
index 03b03d7..26eea2c 100644
--- a/tmp/750f8fe9-f8c2-407e-ba65-f3396d27b524_buggy.java
+++ b/tmp/0661b51d-82c7-4e37-9cd2-108c148c125f_fixed.java
@@ -1,25 +1,24 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
 
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
 
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // If earlier offset is requested, return convertLocalToUTC with a flag to indicate earlier offset,
+    // otherwise return with a flag to indicate later offset
+    return earlierOrLater? convertLocalToUTC(local, false, instantAfter) : convertLocalToUTC(local, false, instantBefore);
 }
\ No newline at end of file
