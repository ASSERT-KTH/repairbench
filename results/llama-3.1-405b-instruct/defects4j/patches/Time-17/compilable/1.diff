diff --git a/tmp/6f5f8148-d319-4e83-b48e-14f1bebf2583_buggy.java b/tmp/3aca534c-308a-4d9f-8587-4aa881d83506_fixed.java
index 03b03d7..3cf142a 100644
--- a/tmp/6f5f8148-d319-4e83-b48e-14f1bebf2583_buggy.java
+++ b/tmp/3aca534c-308a-4d9f-8587-4aa881d83506_fixed.java
@@ -1,25 +1,35 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
     
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
+    if (earlierOrLater) {
+        // if later, check if instant is already later
+        if (convertLocalToUTC(local, false, instantBefore) == instant) {
+            // already later
+            return instant;
+        }
+    } else {
+        // if earlier, check if instant is already earlier
+        if (convertLocalToUTC(local, false, instantAfter) == instant) {
+            // already earlier
+            return instant;
+        }
+    }
+    
     return convertLocalToUTC(local, false, earlierOrLater? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
 }
\ No newline at end of file
