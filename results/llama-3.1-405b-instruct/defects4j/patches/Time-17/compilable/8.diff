diff --git a/tmp/d55895d8-f848-4206-8bba-107e96275592_buggy.java b/tmp/6b64e78b-6345-4892-a836-458f6cf3d6fa_fixed.java
index 03b03d7..a870b61 100644
--- a/tmp/d55895d8-f848-4206-8bba-107e96275592_buggy.java
+++ b/tmp/6b64e78b-6345-4892-a836-458f6cf3d6fa_fixed.java
@@ -1,25 +1,35 @@
 /**
  * Adjusts the offset to be the earlier or later one during an overlap.
  * 
  * @param instant  the instant to adjust
  * @param earlierOrLater  false for earlier, true for later
  * @return the adjusted instant millis
  */
 public long adjustOffset(long instant, boolean earlierOrLater) {
     // a bit messy, but will work in all non-pathological cases
     
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
+    
+    // adjust local time to be in the correct offset
+    if (earlierOrLater) {
+        // if we're in the earlier offset, move to the later offset
+        if (instant < instantAfter) {
+            local = convertUTCToLocal(instantAfter);
+        }
+    } else {
+        // if we're in the later offset, move to the earlier offset
+        if (instant > instantBefore) {
+            local = convertUTCToLocal(instantBefore);
+        }
+    }
+    
     return convertLocalToUTC(local, false, earlierOrLater? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
 }
\ No newline at end of file
