diff --git a/tmp/4ae5820d-8b5f-4916-9be0-cb74a30474ad_buggy.java b/tmp/3c072980-f002-440c-8b04-fb48860fca29_fixed.java
index 03b03d7..0452089 100644
--- a/tmp/4ae5820d-8b5f-4916-9be0-cb74a30474ad_buggy.java
+++ b/tmp/3c072980-f002-440c-8b04-fb48860fca29_fixed.java
@@ -1,25 +1,25 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
-        }
-        
-        // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+        long nextTransition = getNextTransition(instant);
 
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        if (nextTransition!= instant) {
+            if (earlierOrLater) {
+                // looking for later, and 'instant' is the later time, so we can leave 'instant' alone, since it already points
+                // to the expected one
+                return instant;
+            } else {
+                // looking for the earlier, which will mean it's at 'local'
+                return convertLocalToUTC(local, false);
+            }
+        } else {
+            long next = convertLocalToUTC(local, false);
+            return convertLocalToUTC(local, false, earlierOrLater? next : next + getStandardOffset(instant));
+        }
     }
\ No newline at end of file
