diff --git a/tmp/29446af4-b646-4de7-be99-29230e0a9e99_buggy.java b/tmp/6ebd3278-f7cb-4507-b83d-7f2fd027afd2_fixed.java
index 58a1651..652dd27 100644
--- a/tmp/29446af4-b646-4de7-be99-29230e0a9e99_buggy.java
+++ b/tmp/6ebd3278-f7cb-4507-b83d-7f2fd027afd2_fixed.java
@@ -1,32 +1,42 @@
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope) {
     setResolvedTypeInternal(this);
 
     call = (ArrowType) safeResolve(call, t, scope);
     prototype = (FunctionPrototypeType) safeResolve(prototype, t, scope);
 
     // Warning about typeOfThis if it doesn't resolve to an ObjectType
     // is handled further upstream.
-    // TODO(nicksantos): Handle this correctly if we have a UnionType.
-    typeOfThis = (ObjectType) safeResolve(typeOfThis, t, scope);
+    JSType resolvedTypeOfThis = safeResolve(typeOfThis, t, scope);
+    if (resolvedTypeOfThis instanceof UnionType) {
+      // typeOfThis can be an object in a union
+      if (!((UnionType) resolvedTypeOfThis).mayBeObject()) {
+        t.warning(ScopeUtil.getClosingScript(scope), "bad-this-type", 
+            getDisplayName(), resolvedTypeOfThis.toString());
+      }
+    } else if (!resolvedTypeOfThis.isObjectType()) {
+      t.warning(ScopeUtil.getClosingScript(scope), "bad-this-type", 
+          getDisplayName(), resolvedTypeOfThis.toString());
+    }
+    typeOfThis = resolvedTypeOfThis;
 
     boolean changed = false;
     ImmutableList.Builder<ObjectType> resolvedInterfaces =
         ImmutableList.builder();
     for (ObjectType iface : implementedInterfaces) {
       ObjectType resolvedIface = (ObjectType) iface.resolve(t, scope);
       resolvedInterfaces.add(resolvedIface);
       changed |= (resolvedIface!= iface);
     }
     if (changed) {
       implementedInterfaces = resolvedInterfaces.build();
     }
 
     if (subTypes!= null) {
       for (int i = 0; i < subTypes.size(); i++) {
         subTypes.set(i, (FunctionType) subTypes.get(i).resolve(t, scope));
       }
     }
 
     return super.resolveInternal(t, scope);
   }
\ No newline at end of file
