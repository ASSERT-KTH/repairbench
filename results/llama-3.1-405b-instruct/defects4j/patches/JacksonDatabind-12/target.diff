diff --git a/tmp/4ba0586c-36ce-4b06-8d45-b0e7013f4d02_buggy.java b/tmp/1e7a6272-d213-4681-9345-cb9e9d00ec3b_fixed.java
index 845704e..71a333d 100644
--- a/tmp/4ba0586c-36ce-4b06-8d45-b0e7013f4d02_buggy.java
+++ b/tmp/1e7a6272-d213-4681-9345-cb9e9d00ec3b_fixed.java
@@ -1,21 +1,23 @@
     /**
      * Turns out that these are expensive enough to create so that caching
      * does make sense.
      *<p>
      * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
      * a value type deserializer; this caused an issue with 2.4.4 of
      * JAXB Annotations (failing a test).
      * It is also possible that some other settings could make deserializers
      * un-cacheable; but on the other hand, caching can make a big positive
      * difference with performance... so it's a hard choice.
      * 
      * @since 2.4.4
      */
     @Override
     public boolean isCachable() {
         /* As per [databind#735], existence of value or key deserializer (only passed
          * if annotated to use non-standard one) should also prevent caching.
          */
-        return (_valueTypeDeserializer == null)
+        return (_valueDeserializer == null)
+                && (_keyDeserializer == null)
+                && (_valueTypeDeserializer == null)
                 && (_ignorableProperties == null);
     }
