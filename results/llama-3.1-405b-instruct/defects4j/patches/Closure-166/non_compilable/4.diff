diff --git a/tmp/d7b18b0c-f4eb-42f0-a3e5-f0075c77cf1c_buggy.java b/tmp/d4bf7917-1057-46ba-9eb7-33240984a6fd_fixed.java
index 5f96616..c118bbb 100644
--- a/tmp/d7b18b0c-f4eb-42f0-a3e5-f0075c77cf1c_buggy.java
+++ b/tmp/d4bf7917-1057-46ba-9eb7-33240984a6fd_fixed.java
@@ -1,20 +1,27 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
     matchRecordTypeConstraint(constraint.toObjectType());
+  } else if (constraint.isUnionType()) {
+    // Handle union types with record types.
+    for (JSType alt : constraint.getAlternates()) {
+      if (alt.isRecordType()) {
+        matchRecordTypeConstraint(alt.toObjectType());
+      }
+    }
   }
 }
\ No newline at end of file
