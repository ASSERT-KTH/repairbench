diff --git a/tmp/56d9d896-d46c-4b24-b40e-788b08e13864_buggy.java b/tmp/c1be2ad3-7462-472f-b58d-4cf0db15848d_fixed.java
index 5f96616..91220bb 100644
--- a/tmp/56d9d896-d46c-4b24-b40e-788b08e13864_buggy.java
+++ b/tmp/c1be2ad3-7462-472f-b58d-4cf0db15848d_fixed.java
@@ -1,20 +1,26 @@
 @Override
 public void matchConstraint(JSType constraint) {
   // We only want to match constraints on anonymous types.
   if (hasReferenceName()) {
     return;
   }
 
   // Handle the case where the constraint object is a record type.
   //
   // param constraint {{prop: (number|undefined)}}
   // function f(constraint) {}
   // f({});
   //
   // We want to modify the object literal to match the constraint, by
   // taking any each property on the record and trying to match
   // properties on this object.
   if (constraint.isRecordType()) {
     matchRecordTypeConstraint(constraint.toObjectType());
+  } else if (constraint.isUnionType()) {
+    for (JSType alt : constraint.toMaybeUnionType().getAlternates()) {
+      if (alt.isRecordType()) {
+        matchRecordTypeConstraint(alt.toObjectType());
+      }
+    }
   }
 }
\ No newline at end of file
