diff --git a/tmp/f2e882f4-280f-47d1-87b9-42ba74d3b117_buggy.java b/tmp/6714fc20-89c7-4bc1-af28-f4e27a9a389c_fixed.java
index f650982..a77c3c0 100644
--- a/tmp/f2e882f4-280f-47d1-87b9-42ba74d3b117_buggy.java
+++ b/tmp/6714fc20-89c7-4bc1-af28-f4e27a9a389c_fixed.java
@@ -1,42 +1,52 @@
 /**
  * Compares two values
  */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right) 
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
 //    System.err.println("COMPARING: " +
 //        (l == null? "null" : l.getClass().getName()) + " " +
 //        (r == null? "null" : r.getClass().getName()));
 
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
     }
 
     if ((l instanceof Iterator) &&!(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
     if (!(l instanceof Iterator) && (r instanceof Iterator)) {
         return contains((Iterator) r, l);
     }
     if (l instanceof Iterator && r instanceof Iterator) {
         return findMatch((Iterator) l, (Iterator) r);
     }
     return equal(l, r);
 }
+
+// New helper method to check if an Iterator contains an object
+private boolean contains(Iterator iterator, Object target) {
+    while (iterator.hasNext()) {
+        if (equal(iterator.next(), target)) {
+            return true;
+        }
+    }
+    return false;
+}
\ No newline at end of file
