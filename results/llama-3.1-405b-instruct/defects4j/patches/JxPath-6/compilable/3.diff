diff --git a/tmp/d4591f6b-e111-436d-a6f1-d1e64c88762b_buggy.java b/tmp/777ddd93-53d3-4992-ba3a-3c04180fcc2b_fixed.java
index f650982..02752cd 100644
--- a/tmp/d4591f6b-e111-436d-a6f1-d1e64c88762b_buggy.java
+++ b/tmp/777ddd93-53d3-4992-ba3a-3c04180fcc2b_fixed.java
@@ -1,42 +1,43 @@
 /**
  * Compares two values
  */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right) 
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
     }
 
     if ((l instanceof Iterator) &&!(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
     if (!(l instanceof Iterator) && (r instanceof Iterator)) {
         return contains((Iterator) r, l);
     }
     if (l instanceof Iterator && r instanceof Iterator) {
         return findMatch((Iterator) l, (Iterator) r);
     }
+    // Fix: If l is not an Iterator, but is a collection of some sort,
+    //      check if r is equal to any of its elements
+    if (l instanceof Collection) {
+        return ((Collection) l).contains(r);
+    }
     return equal(l, r);
 }
\ No newline at end of file
