diff --git a/tmp/605f9263-eead-499a-aa85-f33b78f27cb1_buggy.java b/tmp/926ffd71-e7b0-48e6-ba68-a51ed66d28f6_fixed.java
index f650982..4f20351 100644
--- a/tmp/605f9263-eead-499a-aa85-f33b78f27cb1_buggy.java
+++ b/tmp/926ffd71-e7b0-48e6-ba68-a51ed66d28f6_fixed.java
@@ -1,42 +1,54 @@
 /**
  * Compares two values
  */
 protected boolean equal(
     EvalContext context,
     Expression left,
     Expression right) 
 {
     Object l = left.compute(context);
     Object r = right.compute(context);
 
 //    System.err.println("COMPARING: " +
 //        (l == null? "null" : l.getClass().getName()) + " " +
 //        (r == null? "null" : r.getClass().getName()));
 
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
     }
 
     if ((l instanceof Iterator) &&!(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
     if (!(l instanceof Iterator) && (r instanceof Iterator)) {
         return contains((Iterator) r, l);
     }
     if (l instanceof Iterator && r instanceof Iterator) {
         return findMatch((Iterator) l, (Iterator) r);
     }
+    if (l instanceof Object[] && r instanceof Object[]) {
+        Object[] lArray = (Object[]) l;
+        Object[] rArray = (Object[]) r;
+        for (Object lElement : lArray) {
+            for (Object rElement : rArray) {
+                if (equal(lElement, rElement)) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
     return equal(l, r);
 }
\ No newline at end of file
