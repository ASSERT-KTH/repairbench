diff --git a/tmp/8b3947b8-a972-4d49-bcb4-70c7edc54f09_buggy.java b/tmp/44e8a06b-2af6-4ca1-8ea4-49b701fb2eac_fixed.java
index de9af32..c40c8dd 100644
--- a/tmp/8b3947b8-a972-4d49-bcb4-70c7edc54f09_buggy.java
+++ b/tmp/44e8a06b-2af6-4ca1-8ea4-49b701fb2eac_fixed.java
@@ -1,18 +1,23 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed!= null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
-      Node child = node.getFirstChild();
-      if (child.getType() == Token.NAME) {
-        changed.add(child.getString());
+    Node target = node.getFirstChild();
+    if (target.getType() == Token.GETPROP && target.getFirstChild().getType() == Token.GETPROP) {
+      changed.add(target.getString());
+    } else if (target.getType() == Token.GETPROP) {
+      String methodName = target.getString();
+      changed.add(methodName);
+    } else if (target.getType() == Token.NAME) {
+      changed.add(target.getString());
     }
   }
 
   for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
