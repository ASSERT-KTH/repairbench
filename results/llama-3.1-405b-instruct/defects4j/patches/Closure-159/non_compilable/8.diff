diff --git a/tmp/01dc0ca9-0b51-4d6e-b7bb-0da66f886be6_buggy.java b/tmp/f59aec75-6916-456e-822a-217f2e378f3b_fixed.java
index de9af32..e5dbad8 100644
--- a/tmp/01dc0ca9-0b51-4d6e-b7bb-0da66f886be6_buggy.java
+++ b/tmp/f59aec75-6916-456e-822a-217f2e378f3b_fixed.java
@@ -1,18 +1,24 @@
 /**
  * @see #findCalledFunctions(Node)
  */
 private void findCalledFunctions(
     Node node, Set<String> changed) {
   Preconditions.checkArgument(changed!= null);
   // For each referenced function, add a new reference
   if (node.getType() == Token.CALL) {
     Node child = node.getFirstChild();
     if (child.getType() == Token.NAME) {
       changed.add(child.getString());
+    } else if (child.getType() == Token.GETPROP) {
+      // If the function is called as a property of an object, we need to add the property name to the set.
+      Node propName = child.getLastChild();
+      if (propName.getType() == Token.STRING_KEY) {
+        changed.add(propName.getString());
+      }
     }
   }
 
   for (Node c = node.getFirstChild(); c!= null; c = c.getNext()) {
     findCalledFunctions(c, changed);
   }
 }
\ No newline at end of file
