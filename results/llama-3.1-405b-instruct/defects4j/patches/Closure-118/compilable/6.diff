diff --git a/tmp/03414b27-8245-41eb-a9ec-c0e465aa8b6f_buggy.java b/tmp/5a52eabc-57e5-4adf-aa14-df4e11c05be7_fixed.java
index 0b7c52e..607139b 100644
--- a/tmp/03414b27-8245-41eb-a9ec-c0e465aa8b6f_buggy.java
+++ b/tmp/5a52eabc-57e5-4adf-aa14-df4e11c05be7_fixed.java
@@ -1,27 +1,34 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child!= null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
     String name = child.getString();
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
+    if (child.isStringKey()) {
       if (!prop.scheduleRenaming(child,
                                  processProperty(t, prop, type, null))) {
         // TODO(user): It doesn't look like the user can do much in this
         // case right now.
         if (propertiesToErrorFor.containsKey(name)) {
           compiler.report(JSError.make(
               t.getSourceName(), child, propertiesToErrorFor.get(name),
               Warnings.INVALIDATION, name,
               (type == null? "null" : type.toString()), n.toString(), ""));
         }
       }
+    } else {
+      if (!prop.scheduleRenaming(child,
+                                 processProperty(t, prop, type, null))) {
+        // No error for non-string-key properties
+      }
+    }
   }
 }
\ No newline at end of file
