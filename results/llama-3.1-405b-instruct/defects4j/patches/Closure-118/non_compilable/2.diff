diff --git a/tmp/220abd61-60c1-4d71-97fa-a5f0afab98af_buggy.java b/tmp/de62135b-3ce1-47d4-a50d-9cbeec77f722_fixed.java
index 0b7c52e..fd1ec96 100644
--- a/tmp/220abd61-60c1-4d71-97fa-a5f0afab98af_buggy.java
+++ b/tmp/de62135b-3ce1-47d4-a50d-9cbeec77f722_fixed.java
@@ -1,27 +1,31 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child!= null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
     String name = child.getString();
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
+    if (child.isGetProp()) {
+      prop = prop scheduleRenaming(child, type);
+    } else {
       if (!prop.scheduleRenaming(child,
                                  processProperty(t, prop, type, null))) {
         // TODO(user): It doesn't look like the user can do much in this
         // case right now.
         if (propertiesToErrorFor.containsKey(name)) {
           compiler.report(JSError.make(
               t.getSourceName(), child, propertiesToErrorFor.get(name),
               Warnings.INVALIDATION, name,
               (type == null? "null" : type.toString()), n.toString(), ""));
         }
       }
     }
   }
+}
\ No newline at end of file
