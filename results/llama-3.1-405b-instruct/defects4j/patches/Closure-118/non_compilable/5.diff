diff --git a/tmp/3b420a31-af3e-4745-902d-33d1a74209f3_buggy.java b/tmp/43048e09-bb68-4060-bcbc-6b17212a2c1e_fixed.java
index 0b7c52e..5630332 100644
--- a/tmp/3b420a31-af3e-4745-902d-33d1a74209f3_buggy.java
+++ b/tmp/43048e09-bb68-4060-bcbc-6b17212a2c1e_fixed.java
@@ -1,27 +1,27 @@
 /**
  * Processes a OBJECTLIT node.
  */
 private void handleObjectLit(NodeTraversal t, Node n) {
   for (Node child = n.getFirstChild();
       child!= null;
       child = child.getNext()) {
     // Maybe STRING, GET, SET
 
     // We should never see a mix of numbers and strings.
     String name = child.getString();
     T type = typeSystem.getType(getScope(), n, name);
 
     Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
+    String sourceName = t.getSourceName();
+    if (!prop.scheduleRenaming(child, processProperty(t, prop, type, sourceName))) {
       // TODO(user): It doesn't look like the user can do much in this
       // case right now.
       if (propertiesToErrorFor.containsKey(name)) {
         compiler.report(JSError.make(
-                t.getSourceName(), child, propertiesToErrorFor.get(name),
+            sourceName, child, propertiesToErrorFor.get(name),
             Warnings.INVALIDATION, name,
             (type == null? "null" : type.toString()), n.toString(), ""));
       }
     }
   }
 }
\ No newline at end of file
