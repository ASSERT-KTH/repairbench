diff --git a/tmp/92846195-1598-4832-995e-56fd8ae5c8ef_buggy.java b/tmp/e95621a0-d5a4-421a-b07a-e9da752e41a6_fixed.java
index 544303b..c10ea83 100644
--- a/tmp/92846195-1598-4832-995e-56fd8ae5c8ef_buggy.java
+++ b/tmp/e95621a0-d5a4-421a-b07a-e9da752e41a6_fixed.java
@@ -1,29 +1,29 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+        if (basicRow == null) {
             coefficients[i] = 0;
+        } else {
+            boolean isBasicVariable = true;
+            for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
+                if (tableau.getEntry(basicRow, j)!= 0) {
+                    isBasicVariable = false;
+                    break;
                 }
             }
+            coefficients[i] = isBasicVariable? getEntry(basicRow, getRhsOffset()) - (restrictToNonNegative? 0 : mostNegative) : 0;
         }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
