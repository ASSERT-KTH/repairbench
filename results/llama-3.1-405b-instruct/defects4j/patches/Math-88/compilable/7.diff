diff --git a/tmp/d605332a-1af7-4b56-a9f1-c73a4900f969_buggy.java b/tmp/1300530d-d40b-476f-bff3-01c2155e7e5d_fixed.java
index 544303b..3867834 100644
--- a/tmp/d605332a-1af7-4b56-a9f1-c73a4900f969_buggy.java
+++ b/tmp/1300530d-d40b-476f-bff3-01c2155e7e5d_fixed.java
@@ -1,29 +1,29 @@
     /**
      * Get the current solution.
      * <p>
      * {@link #solve} should be called first for this to be the optimal solution.
      * </p>
      * @return current solution
      */
     protected RealPointValuePair getSolution() {
         double[] coefficients = new double[getOriginalNumDecisionVariables()];
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null? 0 : getEntry(basicRow, getRhsOffset());
-        for (int i = 0; i < coefficients.length; i++) {
+        for (int i = getOriginalNumDecisionVariables() - 1; i >= 0; i--) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
             // if multiple variables can take a given value 
             // then we choose the first and set the rest equal to 0
             coefficients[i] =
                 (basicRow == null? 0 : getEntry(basicRow, getRhsOffset())) -
                 (restrictToNonNegative? 0 : mostNegative);
             if (basicRow!= null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
                          coefficients[i] = 0;
                     }
                 }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
     }
