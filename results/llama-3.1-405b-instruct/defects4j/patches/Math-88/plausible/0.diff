diff --git a/tmp/0d1209f0-16db-4ed2-a526-d05685b96df7_buggy.java b/tmp/1ed2ce27-dc07-43a6-8bb2-5f2b6af49f3a_fixed.java
index 544303b..87528c9 100644
--- a/tmp/0d1209f0-16db-4ed2-a526-d05685b96df7_buggy.java
+++ b/tmp/1ed2ce27-dc07-43a6-8bb2-5f2b6af49f3a_fixed.java
@@ -1,29 +1,29 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
+        // then we choose the last and set the rest equal to 0
         coefficients[i] =
             (basicRow == null? 0 : getEntry(basicRow, getRhsOffset())) -
             (restrictToNonNegative? 0 : mostNegative);
         if (basicRow!= null) {
             for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
+                    coefficients[j - getNumObjectiveFunctions()] = 0;
                 }
             }
         }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
