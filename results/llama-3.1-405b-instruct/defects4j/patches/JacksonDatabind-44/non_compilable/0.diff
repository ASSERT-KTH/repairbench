diff --git a/tmp/b1adba75-fd08-478b-bbf4-354cb2e6665a_buggy.java b/tmp/f39634a8-f127-4c60-b3f8-4cdad796b967_fixed.java
index 1a63a66..0fa8995 100644
--- a/tmp/b1adba75-fd08-478b-bbf4-354cb2e6665a_buggy.java
+++ b/tmp/f39634a8-f127-4c60-b3f8-4cdad796b967_fixed.java
@@ -1,21 +1,16 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
-        // TODO: fix in 2.8
-            /*
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-                    */
+        // 15-Jan-2016, tatu: Let's check for sub-type relationship, to prevent random class casting
+        //    placeholder values (`Void`, `NoClass`), can be handled subsequently.
+        if (!ancestorOf(subclass)) {
+            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of " + _class.getName());
+        }
         return new SimpleType(subclass, _bindings, this, _superInterfaces,
             _valueHandler, _typeHandler, _asStatic);
-        // Otherwise, stitch together the hierarchy. First, super-class
-        // if not found, try a super-interface
-        // should not get here but...
     }
\ No newline at end of file
