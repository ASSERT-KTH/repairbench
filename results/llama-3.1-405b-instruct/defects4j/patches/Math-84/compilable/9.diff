diff --git a/tmp/16ecb5fe-5f4a-4994-a87d-ece8ba3a9f2e_buggy.java b/tmp/3b7f32c0-0128-42a2-94d0-260706eee5de_fixed.java
index 5f1dcf2..b1886dc 100644
--- a/tmp/16ecb5fe-5f4a-4994-a87d-ece8ba3a9f2e_buggy.java
+++ b/tmp/3b7f32c0-0128-42a2-94d0-260706eee5de_fixed.java
@@ -1,41 +1,51 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
+    RealPointValuePair previousBest = simplex[0];
+
     while (true) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
-                return;
+            previousBest = simplex[0];
+            if (previousBest == best) {
+                return; // converged
+            }
+            continue;
 
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
 
-            // check convergence
+            previousBest = simplex[0];
+            if (previousBest == best) {
+                return; // converged
+            }
+            continue;
+        } else {
+            // we can not find a better simplex, exit loop
             return;
         }
-
     }
-
 }
\ No newline at end of file
