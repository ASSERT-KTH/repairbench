diff --git a/tmp/ee0ab297-0357-4010-aa3a-d2f51b3d62b0_buggy.java b/tmp/630ac5dc-1def-449c-b460-502a623591bf_fixed.java
index 5f1dcf2..6b52c8b 100644
--- a/tmp/ee0ab297-0357-4010-aa3a-d2f51b3d62b0_buggy.java
+++ b/tmp/630ac5dc-1def-449c-b460-502a623591bf_fixed.java
@@ -1,41 +1,40 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    for (int i = 0; i < simplex.length; i++) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
-                return;
-
+            checkConvergence(best);
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
 
-            // check convergence
-                return;
+            checkConvergence(best);
+        } else {
+            // No better point was found and we are stuck
+            break;
         }
-
     }
-
 }
\ No newline at end of file
