diff --git a/tmp/69633b98-4aca-4794-82e2-e3a738d3c123_buggy.java b/tmp/fc433efe-b9b1-46d2-831e-2bdc174274c5_fixed.java
index 5f1dcf2..adbac51 100644
--- a/tmp/69633b98-4aca-4794-82e2-e3a738d3c123_buggy.java
+++ b/tmp/fc433efe-b9b1-46d2-831e-2bdc174274c5_fixed.java
@@ -1,41 +1,53 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
+            } else {
+                simplex = getExpandedSimplex(original, expanded);
             }
 
+            if (isConverged(comparator)) {
                 return;
-
             }
 
+        } else {
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
+                simplex = getContractedSimplex(original, contracted);
 
-            // check convergence
+                if (isConverged(comparator)) {
                     return;
                 }
 
-        }
+            } else {
+                // contracted simplex is worst than original simplex, shrink it
+                simplex = getShrunkSimplex(original);
 
+                if (isConverged(comparator)) {
+                    return;
+                }
+            }
+        }
+    }
 }
\ No newline at end of file
