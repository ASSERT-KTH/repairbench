diff --git a/tmp/9da46a9e-342a-4eef-bca9-9d710a209c32_buggy.java b/tmp/c3186297-1c62-4f00-b30b-282967d5e573_fixed.java
index 373b1e8..c4f245c 100644
--- a/tmp/9da46a9e-342a-4eef-bca9-9d710a209c32_buggy.java
+++ b/tmp/c3186297-1c62-4f00-b30b-282967d5e573_fixed.java
@@ -1,37 +1,37 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
     int end;
     for (int j = input.length; i < j; ++i) {
         int o = input[i];
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
         // UTF-8 leading:
-                if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
-                } else if ((o & 0xF0) == 0xE0) {
+        if ((o & 0xE0) == 0xC0 && i + 1 < input.length) {
             end = i + 2;
-                } else if ((o & 0xF8) == 0xF0) {
+        } else if ((o & 0xF0) == 0xE0 && i + 2 < input.length) {
             end = i + 3;
+        } else if ((o & 0xF8) == 0xF0 && i + 3 < input.length) {
+            end = i + 4;
         } else {
             return false;
         }
 
 
-                while (i < end) {
+        while (i < (end - 1)) {
             i++;
             o = input[i];
             if ((o & 0xC0)!= 0x80) {
                 return false;
             }
         }
     }
     return true;
 }
\ No newline at end of file
