diff --git a/tmp/c59ce9f7-0f94-4eef-8a5e-4dd58436c48e_buggy.java b/tmp/19290f41-a7a4-4206-8c0e-0580e986069f_fixed.java
index bada2b6..c13fa06 100644
--- a/tmp/c59ce9f7-0f94-4eef-8a5e-4dd58436c48e_buggy.java
+++ b/tmp/19290f41-a7a4-4206-8c0e-0580e986069f_fixed.java
@@ -1,16 +1,22 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+    while (generic instanceof ParameterizedType) {
+        ParameterizedType parameterized = (ParameterizedType) generic;
+        if (parameterized.getActualTypeArguments().length > 0) {
+            generic = parameterized.getActualTypeArguments()[0];
+        } else {
+            break;
         }
-        
+    }
+    if (generic instanceof Class) {
+        return (Class) generic;
+    } else {
         return Object.class;
     }
+}
\ No newline at end of file
