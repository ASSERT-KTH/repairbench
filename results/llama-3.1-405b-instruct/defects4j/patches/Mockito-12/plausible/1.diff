diff --git a/tmp/c417032b-a494-47fd-9825-fa1c8a76c63b_buggy.java b/tmp/40611503-db50-4c49-8b5a-9f95c12d5a76_fixed.java
index bada2b6..1d7ad52 100644
--- a/tmp/c417032b-a494-47fd-9825-fa1c8a76c63b_buggy.java
+++ b/tmp/40611503-db50-4c49-8b5a-9f95c12d5a76_fixed.java
@@ -1,16 +1,29 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
+    if (generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (actual instanceof Class) {
             return (Class) actual;
-                //in case of nested generics we don't go deep
+        } else if (actual instanceof ParameterizedType) {
+            return getGenericType(actual);
+        }
+    }
+    
+    return Object.class;
+}
+
+private Class getGenericType(Type type) {
+    if (type instanceof Class) {
+        return (Class) type;
+    } else if (type instanceof ParameterizedType) {
+        return getGenericType(((ParameterizedType) type).getRawType());
     }
     
     return Object.class;
 }
\ No newline at end of file
