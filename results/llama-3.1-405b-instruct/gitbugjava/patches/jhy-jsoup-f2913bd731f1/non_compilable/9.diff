diff --git a/tmp/a71c2404-8323-45cf-bfff-d3c3fce6e16e_buggy.java b/tmp/137c5cfd-6027-4fe5-bed7-92f6fbc8b7fd_fixed.java
index 016a7f6..6d78974 100644
--- a/tmp/a71c2404-8323-45cf-bfff-d3c3fce6e16e_buggy.java
+++ b/tmp/137c5cfd-6027-4fe5-bed7-92f6fbc8b7fd_fixed.java
@@ -1,29 +1,34 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint &&!Element.preserveWhitespace(parentNode);
     final boolean trimLikeBlock = parent!= null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
     boolean trimLeading = false, trimTrailing = false;
 
     if (normaliseWhite) {
         trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
         trimTrailing = trimLikeBlock && nextSibling() == null;
 
         // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
         boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
             || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
         if (couldSkip && isBlank) return;
 
         Node prev = previousSibling();
+        Node nextNonText = next;
+        while (nextNonText instanceof TextNode) {
+            nextNonText = nextNonText.nextSibling();
+        }
         if (
             (siblingIndex == 0 && parent!= null && parent.tag().formatAsBlock() &&!isBlank) ||
             (out.outline() && siblingNodes().size() > 0 &&!isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+            (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) || 
+            (nextNonText!= null && nextNonText instanceof Element && ((Element) nextNonText).tag().isBlock()) // special case: don't indent before a block
         )
             indent(accum, depth, out);
     }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
