diff --git a/tmp/02ddfc3a-a9b9-4995-a6da-2004434e5188_buggy.java b/tmp/5522f6a0-a8c9-4daa-813b-d0f86004afa0_fixed.java
index 23f078d..c784bbd 100644
--- a/tmp/02ddfc3a-a9b9-4995-a6da-2004434e5188_buggy.java
+++ b/tmp/5522f6a0-a8c9-4daa-813b-d0f86004afa0_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+    int i = 0;
+    while (i < s.length()) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            String encoded = URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name());
+            sb.append(encoded.replace("+", "%20")); // URL encoder uses + for spaces, but we need %20
         } else {
             sb.append((char) c);
         }
+        i += Character.charCount(c);
     }
 }
\ No newline at end of file
