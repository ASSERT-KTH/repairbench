diff --git a/tmp/20475b07-89fb-4175-8163-4f35a0093cbd_buggy.java b/tmp/560dc385-d6b6-4f05-b384-0fc5403a0ed5_fixed.java
index dadf54e..f854db5 100644
--- a/tmp/20475b07-89fb-4175-8163-4f35a0093cbd_buggy.java
+++ b/tmp/560dc385-d6b6-4f05-b384-0fc5403a0ed5_fixed.java
@@ -1,93 +1,66 @@
 @Override
 protected Object decode(
         Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
     ByteBuf buf = (ByteBuf) msg;
 
     buf.readUnsignedByte(); // protocol revision
     buf.readUnsignedShort(); // length
     buf.readUnsignedByte(); // header indicator
     buf.readUnsignedShort(); // header length
     buf.readUnsignedInt(); // reference
 
     String imei = buf.readCharSequence(15, StandardCharsets.US_ASCII).toString();
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
     if (deviceSession == null) {
         return null;
     }
 
     buf.readUnsignedByte(); // session status
     buf.readUnsignedShort(); // originator index
     buf.readUnsignedShort(); // transfer index
     buf.readUnsignedInt(); // session time
     buf.readUnsignedByte(); // payload indicator
     buf.readUnsignedShort(); // payload length
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     List<Integer> parameters = getParameters(deviceSession.getDeviceId());
 
+    TimeZone tz = deviceSession.getProperties().getTimeZone();
+    if (tz == null) {
+        tz = TimeZone.getTimeZone("Etc/UTC");
+    }
+
     for (int parameter : parameters) {
         switch (parameter) {
             case 0x01:
                 position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                 break;
             case 0x02:
                 position.setLatitude(buf.readIntLE() / 1000000.0);
                 break;
             case 0x03:
                 position.setLongitude(buf.readIntLE() / 1000000.0);
                 break;
             case 0x04:
-                    position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
-                    break;
-                case 0x05:
-                    position.setValid(buf.readUnsignedByte() > 0);
-                    break;
-                case 0x06:
-                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
-                    break;
-                case 0x07:
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
-                    break;
-                case 0x08:
-                    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
-                    break;
-                case 0x09:
-                    position.setCourse(buf.readUnsignedShortLE());
-                    break;
-                case 0x0A:
-                    position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
-                    break;
-                case 0x0B:
-                    position.setAltitude(buf.readShortLE());
-                    break;
-                case 0x0C:
-                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
-                    break;
-                case 0x0D:
-                    position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
-                    break;
-                case 0x14:
-                    position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
-                    break;
-                case 0x15:
-                    position.set(Position.KEY_INPUT, buf.readUnsignedByte());
-                    break;
-                case 0x19:
-                    position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
-                    break;
-                case 0x1A:
-                    position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
-                    break;
-                case 0x1B:
-                    buf.readUnsignedByte(); // geofence
-                    break;
-                default:
-                    break;
-            }
+                long ntpTime = buf.readUnsignedIntLE();
+                Calendar calendar = Calendar.getInstance(tz);
+                ntpTime -= calendar.getFirstDayOfWeek();
+                DateTimeZone dtz = org.joda.time.DateTimeZone.UTC;
+                if (hasTimeZone(deviceSession.getCustomerId())) {
+                    dtz = DateTimeZone.forOffSetMillis(calendar.getTime(), calendar.getTimeZone().RAW_OFFSET);
                 }
+                position.setTime(new Date(Millis.fromSecondOfDay(date(ntpTime, seconds(ntpTime), "UTC").getTime()).offset(getMillis())) ));
+			Calendar toCalendar = new GregorianCalender(tz.getId());
+				position.setTime(sun.util.CalendarUtil.parseDate(calendar));
+                GregorianCalender calendar_ = new Calendar();
+_calende(7l0,7);
+                cale.set_(7s,7);
 
-        return position;
-    }
+                Position.set(position.time(calendar_), calendar.getTime().getTimeOffset());
+                Calendar calendarSet = calendar; calendar
+
+                break;
+            [...]
\ No newline at end of file
