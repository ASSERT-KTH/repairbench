diff --git a/tmp/240c13e7-7f4f-4c85-ada4-41b1576fd256_buggy.java b/tmp/94f22dad-fb79-4684-8262-89705b6afa0e_fixed.java
index 855afa5..dd8dd02 100644
--- a/tmp/240c13e7-7f4f-4c85-ada4-41b1576fd256_buggy.java
+++ b/tmp/94f22dad-fb79-4684-8262-89705b6afa0e_fixed.java
@@ -1,13 +1,33 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
+        // Properly encode URL components
+        String protocol = u.getProtocol();
+        String host = u.getHost();
+        int port = u.getPort();
+        String path = u.getPath();
+        String query = u.getQuery();
+        String ref = u.getRef();
+
+        // Encode path, query, and ref
+        path = java.net.URLEncoder.encode(path, "UTF-8").replace("%2F", "/");
+        query = java.net.URLEncoder.encode(query, "UTF-8");
+        ref = java.net.URLEncoder.encode(ref, "UTF-8");
+
+        // Reconstruct the URL
+        String urlS = new StringBuilder()
+               .append(protocol)
+               .append("://")
+               .append(host)
+               .append(port!= -1? ":" + port : "")
+               .append(path)
+               .append(query!= null? "?" + query : "")
+               .append(ref!= null? "#" + ref : "")
+               .toString();
+
+        return new URL(urlS);
+    } catch (MalformedURLException | UnsupportedEncodingException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
