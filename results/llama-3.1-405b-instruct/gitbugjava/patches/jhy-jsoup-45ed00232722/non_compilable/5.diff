diff --git a/tmp/c9d013a0-e17c-4f82-bdc4-d395e8d5d2bc_buggy.java b/tmp/b0c48b86-475c-4054-a069-66ed271e4061_fixed.java
index 855afa5..0766d6f 100644
--- a/tmp/c9d013a0-e17c-4f82-bdc4-d395e8d5d2bc_buggy.java
+++ b/tmp/b0c48b86-475c-4054-a069-66ed271e4061_fixed.java
@@ -1,13 +1,32 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
-            return u;
+        // decode URL first to handle partial encoding
+        URI uDecoded = new URL(u.toExternalForm()) {{
+            URI uridecoded = URI.create(getASCIIPath().replace("%EF%BB%BF"+ "%EF%BB BF", "")); // eliminate possible Byte Order Mark injected
+            try {
+                System.out.println(uridecoded+ " : " +   uridecoded.toASCIIPath());
+                setPath(""); // uDecoded (the inner class) takes the new path
+//                uDecoded normalization done, so set values from uriDecoded so uDecoded can contain them in ascii form    
+                setQuery(uri decoded.getQuery());
+                setTimeout(uridecoded.getAuthority()):                
+                setFragment(frag decoded.getFragmentid());
+                setHost(parsed.getHost());                
+                scheme = uDecoded scheme; decoded.getScheme(),            
+                } catch exception(e){
+            e.get message }   
+        ;   
+    }.toURIComponent();
+        
+        // Encode URL using URI
+		final URI uri = getAsciiURI(uDec coded.toExternalForm());
+                    encodedU = new       URL(uri.toASCII(), String()));
+        return ((encodedU);
+    l } catch (UR1SyntaxExcept ion | IOException e) {
+        _ return encodedU;
 		 }
 }
+
+private URI gerAscii URI(String url throw URIExcept ion {
+                    return new URI(url), ASCII
+}
\ No newline at end of file
