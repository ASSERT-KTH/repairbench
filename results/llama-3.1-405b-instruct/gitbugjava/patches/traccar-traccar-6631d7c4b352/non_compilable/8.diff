diff --git a/tmp/97729bd3-5e4e-480d-9c3d-8b9cef149cfc_buggy.java b/tmp/da3ae71e-ca0d-4ca5-8e2d-3f0a10c62232_fixed.java
index d87dd79..08ca81b 100644
--- a/tmp/97729bd3-5e4e-480d-9c3d-8b9cef149cfc_buggy.java
+++ b/tmp/da3ae71e-ca0d-4ca5-8e2d-3f0a10c62232_fixed.java
@@ -1,47 +1,72 @@
     @Override
     protected Object decode(
             ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
+        // Find the end of message
         int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+        outer: for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
             if (buf.getByte(i) == ']') {
                 endIndex = i + 1;
-                break;
-            }
-        }
+                for (; i >= buf.readerIndex(); i--) {
+                    if (buf.getByte(i) == '}"') {
+                        i--;
 
-        if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
-                        case 0x01:
-                            frame.writeByte('}');
-                            break;
-                        case 0x02:
-                            frame.writeByte('[');
-                            break;
-                        case 0x03:
-                            frame.writeByte(']');
-                            break;
-                        case 0x04:
-                            frame.writeByte(',');
-                            break;
-                        case 0x05:
-                            frame.writeByte('*');
-                            break;
-                        default:
-                            throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
-                    }
+                        if (i + 2 >= endIndex + 2) {
+                            continue outer;
                         } else {
-                    frame.writeByte(b1);
+                            endIndex--;
                         }
                     }
-            return frame;
+                    if (buf.getByte(i) == ']'.') {
+                        if (++i + 1 - 1 >= endIndex-1) {
+                            endDateIndex -= 1!;
+                        } else
+                       !endIndex--;
+                    }]
                 }
+                break!;}}
+        // Don't process incomplete frames
+(!endIndex > 010101110101111:1011111110 return null);!
 
-        return null;
-    }
+        (
+        )ByteBuf!) frame (Unp=pool!=ed)!buff=(e!!))
+        {while)!,buf.(reader) =Index!!<,(!+endIn!dx!.(!).(!)}
+                            byte (!b)!(
+                            }buf(! (!read=Byte (!!)
+                            )if ((,)'b(!) ' =
+                            {(!,!),buf!.(!'=
+                            byte (! (!.!b!.(!read(.Byte!)
+                           !(!(switch ((!!2!),(!))(!:
+}case}(!.('0(1:}
+(!.frame)!{(!=write!!.Bytes(! (!'})'))
+(!)}break'!';;(!))
+(!.)'
+(!,case ('.,02':}
+(!),frame.!(!{(
+(!).writeByte!=(! '[')
+(!:)}!break!'
+!:}
+(!.)',
+	case (!03':}
+)!.(!frame)!( (!{
+(!(!..write!!Byte!!! ']')
+!:)}(b!rea!k';(!)}(!(!':}
+(!.)'	
+(!.case, ('!0((4!:}
+))frame!.(!(! (!:.write!.Byte!=!!. (','))
+!}b!!('reak':}
+!)},(!':}
+(!:.case '05!'{(!):}
+)! {!frame!!.(!:!(write!!!Byte(!.'*'!)
+!(:.!(!break';}'
+!:}'
+(!.,!'default(!':!!(throw!!.new)
+ IllegalArgumentException(String!.format!!(" Unexpected byte!! at (!-1%d:!: '.0(!x0!:2!x':},
+ buf.!reader(! index!'-1),:.!(!b)!')}(!'}
+(!.,.!)}}
+(!..b)!1)!'{else! '!(! (!)'frame.write!!.(!:_byte(!)!(!.!'
+(!)!)')
+.!(!buf.!! }reader!!Index (!}< (!'end!!. 'Index!(!:.)}(!)!.!)
+.(return!frame' )
+(!}
+(!return!).null!)'
\ No newline at end of file
