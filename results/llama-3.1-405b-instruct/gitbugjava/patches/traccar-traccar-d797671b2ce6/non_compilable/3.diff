diff --git a/tmp/9957aecf-58f4-4faa-b9bc-e5b9db41bdde_buggy.java b/tmp/4f16824c-f25b-463a-a7f4-9caa628b8c7b_fixed.java
index 3b47cfa..6763b70 100644
--- a/tmp/9957aecf-58f4-4faa-b9bc-e5b9db41bdde_buggy.java
+++ b/tmp/4f16824c-f25b-463a-a7f4-9caa628b8c7b_fixed.java
@@ -1,141 +1,17 @@
-    private Position decodeTransparent(DeviceSession deviceSession, ByteBuf buf) {
-
-        int type = buf.readUnsignedByte();
-
-        if (type == 0xF0) {
-            Position position = new Position(getProtocolName());
-            position.setDeviceId(deviceSession.getDeviceId());
-
-            Date time = readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE));
-
-            if (buf.readUnsignedByte() > 0) {
-                position.set(Position.KEY_ARCHIVE, true);
-            }
-
-            buf.readUnsignedByte(); // vehicle type
-
-            int count;
-            int subtype = buf.readUnsignedByte();
-            switch (subtype) {
-                case 0x01:
-                    count = buf.readUnsignedByte();
-                    for (int i = 0; i < count; i++) {
-                        int id = buf.readUnsignedShort();
-                        int length = buf.readUnsignedByte();
-                        switch (id) {
-                            case 0x0102:
-                            case 0x0528:
-                            case 0x0546:
-                                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);
-                                break;
-                            case 0x0103:
-                                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedInt() * 0.01);
-                                break;
-                            case 0x052A:
-                                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.01);
-                                break;
-                            case 0x0105:
-                            case 0x052C:
-                                position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.01);
-                                break;
-                            case 0x014A:
-                            case 0x0537:
-                            case 0x0538:
-                            case 0x0539:
-                                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.01);
-                                break;
-                            case 0x052D:
-                                position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);
-                                break;
-                            case 0x0530:
-                                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);
-                                break;
-                            case 0x0535:
-                                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() * 0.1);
-                                break;
-                            case 0x0536:
-                                position.set(Position.KEY_RPM, buf.readUnsignedShort());
-                                break;
-                            case 0x0547:
-                            case 0x0548:
-                                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
-                                break;
-                            default:
-                                switch (length) {
-                                    case 1:
-                                        position.set(Position.PREFIX_IO + id, buf.readUnsignedByte());
-                                        break;
-                                    case 2:
-                                        position.set(Position.PREFIX_IO + id, buf.readUnsignedShort());
-                                        break;
-                                    case 4:
-                                        position.set(Position.PREFIX_IO + id, buf.readUnsignedInt());
-                                        break;
-                                    default:
-                                        buf.skipBytes(length);
-                                        break;
-                                }
-                                break;
-                        }
-                    }
-                    getLastLocation(position, time);
-                    decodeCoordinates(position, buf);
-                    break;
-                case 0x02:
-                    count = buf.readUnsignedByte();
-                    for (int i = 0; i < count; i++) {
-                        buf.readUnsignedInt(); // system id
-                        int codeCount = buf.readUnsignedShort();
-                        for (int j = 0; j < codeCount; j++) {
-                            buf.skipBytes(16); // code
-                        }
-                    }
-                    getLastLocation(position, time);
-                    decodeCoordinates(position, buf);
-                    break;
-                case 0x03:
-                    count = buf.readUnsignedByte();
-                    for (int i = 0; i < count; i++) {
-                        int id = buf.readUnsignedByte();
-                        int length = buf.readUnsignedByte();
-                        switch (id) {
-                            case 0x1A:
-                                position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);
-                                break;
-                            case 0x1B:
-                                position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);
-                                break;
-                            case 0x1C:
-                                position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);
-                                break;
-                            case 0x1D:
-                            case 0x1E:
-                            case 0x1F:
-                                position.set(Position.KEY_ALARM, Position.ALARM_LANE_CHANGE);
-                                break;
-                            case 0x23:
-                                position.set(Position.KEY_ALARM, Position.ALARM_FATIGUE_DRIVING);
-                                break;
-                            default:
-                                break;
-                        }
-                        buf.skipBytes(length);
-                    }
-                    getLastLocation(position, time);
-                    decodeCoordinates(position, buf);
-                    break;
-                case 0x0B:
-                    if (buf.readUnsignedByte() > 0) {
-                        position.set(Position.KEY_VIN, buf.readCharSequence(17, StandardCharsets.US_ASCII).toString());
-                    }
-                    getLastLocation(position, time);
-                    break;
-                default:
-                    return null;
-            }
-
-            return position;
-        }
-
-        return null;
+    private Date readDate(ByteBuf buf, String timezone) {
+        int year = buf.readUnsignedByte() + 2000;  // changed to correctly determine year
+        int month = buf.readUnsignedByte();
+        int day = buf.readUnsignedByte();
+        int hour = buf.readUnsignedByte();
+        int minute = buf.readUnsignedByte();
+        int second = buf.readUnsignedByte();
+        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(timezone));
+        calendar.setTimeInMillis(0);
+        calendar.set(Calendar.YEAR, year);
+        calendar.set(Calendar.MONTH, month - 1);
+        calendar.set(Calendar.DAY_OF_MONTH, day);
+        calendar.set(Calendar.HOUR_OF_DAY, hour);
+        calendar.set(Calendar.MINUTE, minute);
+        calendar.set(Calendar.SECOND, second);
+        return calendar.getTime();
     }
\ No newline at end of file
