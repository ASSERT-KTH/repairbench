diff --git a/tmp/faaec22a-a2c4-4356-8649-069974f2483f_buggy.java b/tmp/fac4c5b8-7d5f-44b9-aa19-1d36c0c1a6df_fixed.java
index 5bf31b1..fec703a 100644
--- a/tmp/faaec22a-a2c4-4356-8649-069974f2483f_buggy.java
+++ b/tmp/fac4c5b8-7d5f-44b9-aa19-1d36c0c1a6df_fixed.java
@@ -1,17 +1,24 @@
 private String consumeSubQuery() {
     StringBuilder sq = StringUtil.borrowBuilder();
     while (!tq.isEmpty()) {
         if (tq.matches("("))
             sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
         else if (tq.matches("["))
             sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
         else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
+            if (sq.length() > 0) {
+                // Check if there is a combinator without an element before it, which would indicate a broken subquery
+                // e.g. ">,strong" instead of "p>strong,>strong"
                 break;
-                else
+            } else if (!tq.isEmpty() &&!tq.peek().isLetter()) {
+                // Allow combinators directly followed by a pseudo element
+                sq.append(tq.consume());
+            } else {
+                // Do not include the combinator without a preceding element
                 tq.consume();
+            }
         else
             sq.append(tq.consume());
     }
     return StringUtil.releaseBuilder(sq);
 }
\ No newline at end of file
