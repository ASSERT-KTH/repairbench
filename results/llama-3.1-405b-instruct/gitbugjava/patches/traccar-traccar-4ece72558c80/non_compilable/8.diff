diff --git a/tmp/a14ce3c1-a828-4f57-88db-4471a83f9732_buggy.java b/tmp/ca522b88-6ccc-49bd-90a6-cccd28faa807_fixed.java
index 0a8838d..af372cb 100644
--- a/tmp/a14ce3c1-a828-4f57-88db-4471a83f9732_buggy.java
+++ b/tmp/ca522b88-6ccc-49bd-90a6-cccd28faa807_fixed.java
@@ -1,61 +1,4 @@
-    private List<Position> parseData(
-            Channel channel, SocketAddress remoteAddress, ByteBuf buf, int locationPacketId, String... imei) {
-        List<Position> positions = new LinkedList<>();
-
-        if (!connectionless) {
-            buf.readUnsignedInt(); // data length
-        }
-
-        int codec = buf.readUnsignedByte();
-        int count = buf.readUnsignedByte();
-
-        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
-        if (deviceSession == null) {
+    private String decodeSerial(Channel channel, SocketAddress remoteAddress, DeviceSession deviceSession, Position position, ByteBuf buf) {
+        position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readLong()));
         return null;
     }
\ No newline at end of file
-        String model = getCacheManager().getObject(Device.class, deviceSession.getDeviceId()).getModel();
-
-        for (int i = 0; i < count; i++) {
-            Position position = new Position(getProtocolName());
-
-            position.setDeviceId(deviceSession.getDeviceId());
-            position.setValid(true);
-
-            if (codec == CODEC_13) {
-                buf.readUnsignedByte(); // type
-                int length = buf.readInt() - 4;
-                getLastLocation(position, new Date(buf.readUnsignedInt() * 1000));
-                if (isPrintable(buf, length)) {
-                    position.set(Position.KEY_RESULT,
-                            buf.readCharSequence(length, StandardCharsets.US_ASCII).toString().trim());
-                } else {
-                    position.set(Position.KEY_RESULT,
-                            ByteBufUtil.hexDump(buf.readSlice(length)));
-                }
-            } else if (codec == CODEC_12) {
-                decodeSerial(channel, remoteAddress, deviceSession, position, buf);
-            } else {
-                decodeLocation(position, buf, codec, model);
-            }
-
-            if (!position.getOutdated() || !position.getAttributes().isEmpty()) {
-                positions.add(position);
-            }
-        }
-
-        if (channel != null && codec != CODEC_12 && codec != CODEC_13) {
-            ByteBuf response = Unpooled.buffer();
-            if (connectionless) {
-                response.writeShort(5);
-                response.writeShort(0);
-                response.writeByte(0x01);
-                response.writeByte(locationPacketId);
-                response.writeByte(count);
-            } else {
-                response.writeInt(count);
-            }
-            channel.writeAndFlush(new NetworkMessage(response, remoteAddress));
-        }
-
-        return positions.isEmpty() ? null : positions;
-    }
