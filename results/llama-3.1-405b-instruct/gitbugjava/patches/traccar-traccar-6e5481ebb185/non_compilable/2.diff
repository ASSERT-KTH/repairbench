diff --git a/tmp/2ef62f8b-e049-482d-b3a5-1df9ae7f4f58_buggy.java b/tmp/2ce50c89-8316-4976-aecc-d235d153a089_fixed.java
index ee599aa..a3c426e 100644
--- a/tmp/2ef62f8b-e049-482d-b3a5-1df9ae7f4f58_buggy.java
+++ b/tmp/2ce50c89-8316-4976-aecc-d235d153a089_fixed.java
@@ -1,50 +1,52 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
-
-        int length = 0;
     if (hasLength) {
-            length = buf.readUnsignedByte();
+        int length = buf.readUnsignedByte();
         if (length == 0) {
-                boolean zeroedData = true;
-                for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
-                    if (buf.getByte(i) != 0) {
-                        zeroedData = false;
-                        break;
+            if (buf.getUnsignedByte(buf.readerIndex())!= 0x00 
+                && buf.getUnsignedByte(buf.readerIndex() + 9) == 0x00
+                && buf.getUnsignedByte(buf.readerIndex() + 45)!= 0x00 
+                && checkZeroPayload(buf, length)) {
+                buf.skipBytes(45);
+            } else {
+                buf.skipBytes(length);
+                return true;
             }
+        } else {
+            // do not skip bytes in this else block
+            // but still return false to read lbs data below
         }
-                if (zeroedData) {
-                    buf.skipBytes(Math.min(buf.readableBytes(), 45));
     }
-                return false;
-            }
-        }
-
+    if (buf.isReadable() && buf.readUnsignedShort() == 0x00) {
         int mcc = buf.readUnsignedShort();
         int mnc;
         if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
             mnc = buf.readUnsignedShort();
         } else {
             mnc = buf.readUnsignedByte();
         }
         int lac;
         if (type == MSG_LBS_ALARM) {
             lac = buf.readInt();
         } else {
             lac = buf.readUnsignedShort();
         }
         long cid;
         if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
             cid = buf.readLong();
         } else if (type == MSG_GPS_LBS_6) {
             cid = buf.readUnsignedInt();
         } else {
             cid = buf.readUnsignedMedium();
         }
-
-        position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
-
-        if (length > 9) {
-            buf.skipBytes(length - 9);
-        }
-
-        return true;
+        position.setNetwork(new Network(CellTower.from(mcc, mnc, lac, cid)));
+        // return only if we already skipped 0x00 at beginning of lbs packet
+        if (length == 0) return true; 
+    } else if (hasLength) {
+        buf.readerIndex(buf.readerIndex() - length);
+    } else if (buf.readerIndex() > 10) { // add 10 so we don't get OOB exception 
+        // move readerIndex back after 0x00 were read
+        buf.readerIndex(buf.readerIndex() - 3);
+        return false; // because we moved the reader back
+    } else return false; // to not let the reader pass
+    return true; // everything went fine or lbs info were read.
 }
