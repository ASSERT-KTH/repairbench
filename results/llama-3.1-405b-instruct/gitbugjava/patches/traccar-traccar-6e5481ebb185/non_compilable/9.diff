diff --git a/tmp/d55162d8-e295-42e9-8ae2-02857ddd3d45_buggy.java b/tmp/8b817c60-68a6-459f-8ff8-9fd2cbfd3437_fixed.java
index ee599aa..717fc2b 100644
--- a/tmp/d55162d8-e295-42e9-8ae2-02857ddd3d45_buggy.java
+++ b/tmp/8b817c60-68a6-459f-8ff8-9fd2cbfd3437_fixed.java
@@ -1,50 +1,49 @@
 private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
-
     int length = 0;
     if (hasLength) {
         length = buf.readUnsignedByte();
         if (length == 0) {
-                boolean zeroedData = true;
-                for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
-                    if (buf.getByte(i) != 0) {
-                        zeroedData = false;
-                        break;
-                    }
-                }
-                if (zeroedData) {
-                    buf.skipBytes(Math.min(buf.readableBytes(), 45));
-                }
+            // Check the next byte if it is 0, then we have no more data in the packet.
+            byte nextByte = buf.readByte();
+            buf.resetReaderIndex(); // we need to rewind the position after we checked the byte
+            if (nextByte == 0) {
+                // skip the rest of the packet and return false to indicate an empty message.
+                buf.skipBytes(buf.readableBytes());
                 return false;
+            } else {
+                // length is really 0 and we still have more data in the packet.
+                return true;
+            }
         }
     }
 
     int mcc = buf.readUnsignedShort();
     int mnc;
     if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
         mnc = buf.readUnsignedShort();
     } else {
         mnc = buf.readUnsignedByte();
     }
     int lac;
     if (type == MSG_LBS_ALARM) {
         lac = buf.readInt();
     } else {
         lac = buf.readUnsignedShort();
     }
     long cid;
     if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
         cid = buf.readLong();
     } else if (type == MSG_GPS_LBS_6) {
         cid = buf.readUnsignedInt();
     } else {
         cid = buf.readUnsignedMedium();
     }
 
     position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
     if (length > 9) {
         buf.skipBytes(length - 9);
     }
 
     return true;
 }
\ No newline at end of file
