diff --git a/tmp/bd34b6ee-3f5f-40f3-af0a-1f0597a34cbc_buggy.java b/tmp/d7962733-062b-40b5-8c41-c72cc07e268e_fixed.java
index 33e2e76..91e9edf 100644
--- a/tmp/bd34b6ee-3f5f-40f3-af0a-1f0597a34cbc_buggy.java
+++ b/tmp/d7962733-062b-40b5-8c41-c72cc07e268e_fixed.java
@@ -1,126 +1,60 @@
 private void readBinaryCustomData(Position position, ByteBuf buf, String form) {
     CellTower cellTower = new CellTower();
     String[] keys = form.substring(1).split("%");
     for (String key : keys) {
+        switch (key) {
+            //... existing cases
+            default:
+                buf.skipBytes(getDataLength(key));
+                break;
+        }
+    }
+
+    //... existing code
+}
+
+private int getDataLength(String key) {
     switch (key) {
         case "SA":
-                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
-                    break;
-                case "MV":
-                    position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);
-                    break;
-                case "BV":
-                    position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);
-                    break;
         case "GQ":
-                    cellTower.setSignalStrength((int) buf.readUnsignedByte());
-                    break;
-                case "CE":
-                    cellTower.setCellId(buf.readUnsignedInt());
-                    break;
-                case "LC":
-                    cellTower.setLocationAreaCode(buf.readUnsignedShort());
-                    break;
-                case "CN":
-                    int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn
-                    cellTower.setMobileCountryCode(combinedMobileCodes / 100);
-                    cellTower.setMobileNetworkCode(combinedMobileCodes % 100);
-                    break;
         case "RL":
-                    buf.readUnsignedByte(); // rxlev
-                    break;
         case "PC":
-                    position.set(Position.PREFIX_COUNT + 1, buf.readUnsignedInt());
-                    break;
-                case "AT":
-                    position.setAltitude(buf.readUnsignedInt());
-                    break;
         case "RP":
-                    position.set(Position.KEY_RPM, buf.readUnsignedShort());
-                    break;
         case "GS":
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
-                    break;
         case "DT":
-                    position.set(Position.KEY_ARCHIVE, buf.readUnsignedByte() == 1);
-                    break;
-                case "VN":
-                    position.set(Position.KEY_VIN, readString(buf));
-                    break;
-                case "MF":
-                    buf.readUnsignedShort(); // mass air flow rate
-                    break;
-                case "EL":
-                    buf.readUnsignedByte(); // engine load
-                    break;
-                case "TR":
-                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());
-                    break;
+        case "IA":
+        case "MP":
+            return 1;
+        case "MV":
+        case "BV":
         case "ET":
-                    position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShort());
-                    break;
+        case "AV1":
+            return 2;
+        case "CE":
+        case "NC":
+        case "AT":
+        case "TR":
+        case "EL":
         case "FL":
-                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());
-                    break;
         case "ML":
-                    buf.readUnsignedByte(); // mil status
-                    break;
         case "FC":
-                    position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());
-                    break;
         case "CI":
-                    readString(buf); // format string
-                    break;
-                case "AV1":
-                    position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());
-                    break;
-                case "NC":
-                    readString(buf); // gsm neighbor cell info
-                    break;
-                case "SM":
-                    buf.readUnsignedShort(); // max speed between reports
-                    break;
-                case "GL":
-                    readString(buf); // google link
-                    break;
+        case "VN":
         case "MA":
-                    readString(buf); // mac address
-                    break;
         case "PD":
-                    buf.readUnsignedByte(); // pending code status
-                    break;
-                case "CD":
-                    position.set(Position.KEY_ICCID, readString(buf));
-                    break;
-                case "CM":
-                    buf.readLong(); // imsi
-                    break;
+        case "SM":
         case "GN":
-                    buf.skipBytes(60); // g sensor data
-                    break;
         case "GV":
-                    buf.skipBytes(6); // maximum g force
-                    break;
         case "ME":
-                    buf.readLong(); // imei
-                    break;
-                case "IA":
-                    buf.readUnsignedByte(); // intake air temperature
-                    break;
-                case "MP":
-                    buf.readUnsignedByte(); // manifold absolute pressure
-                    break;
+            return 4;
+        case "LC":
+            return 2;
+        case "CN":
+            return 4;
+        case "CD":
+        case "CM":
+            return 8;
         default:
-                    break;
-            }
-        }
-
-        if (cellTower.getMobileCountryCode() != null
-            && cellTower.getMobileNetworkCode() != null
-            && cellTower.getCellId() != null && cellTower.getCellId() != 0
-            && cellTower.getLocationAreaCode() != null) {
-            position.setNetwork(new Network(cellTower));
-        } else if (cellTower.getSignalStrength() != null) {
-            position.set(Position.KEY_RSSI, cellTower.getSignalStrength());
+            return 0;
     }
 }
\ No newline at end of file
