diff --git a/tmp/80782431-6fae-44b0-8fc2-96ae40777055_buggy.java b/tmp/9fc8fa76-d8d1-48e6-8a5e-e5c34a069846_fixed.java
index d87dd79..bf03af8 100644
--- a/tmp/80782431-6fae-44b0-8fc2-96ae40777055_buggy.java
+++ b/tmp/9fc8fa76-d8d1-48e6-8a5e-e5c34a069846_fixed.java
@@ -1,47 +1,40 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
-        int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
-            if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
-                break;
-            }
+    // Find the first occurrence of ']' in the current buffer
+    int firstClosingBracket = buf.indexOf(buf.readerIndex(), buf.writerIndex(), ']');
+    if (firstClosingBracket == -1) {
+        return null; // No closing bracket found yet, wait for more data
     }
 
-        if (endIndex > 0) {
+    int endIndex = firstClosingBracket + 1;
     ByteBuf frame = Unpooled.buffer();
+
     while (buf.readerIndex() < endIndex) {
         byte b1 = buf.readByte();
         if (b1 == '}') {
             byte b2 = buf.readByte();
             switch (b2) {
                 case 0x01:
-                            frame.writeByte('}');
-                            break;
+                    frame.writeByte('}'); break;
                 case 0x02:
-                            frame.writeByte('[');
-                            break;
+                    frame.writeByte('['); break;
                 case 0x03:
-                            frame.writeByte(']');
-                            break;
+                    frame.writeByte(']'); break;
                 case 0x04:
-                            frame.writeByte(',');
-                            break;
+                    frame.writeByte(','); break;
                 case 0x05:
-                            frame.writeByte('*');
-                            break;
+                    frame.writeByte('*'); break;
                 default:
                     throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                            "unexpected byte at %d: 0x%02x", 
+                            buf.readerIndex() - 1, b2));
             }
         } else {
             frame.writeByte(b1);
         }
     }
+
     return frame;
 }
\ No newline at end of file
-
-        return null;
-    }
