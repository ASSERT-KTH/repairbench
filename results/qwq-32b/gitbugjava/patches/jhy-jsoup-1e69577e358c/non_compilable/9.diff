diff --git a/tmp/56613f3e-336e-4168-86cc-aead6876b58a_buggy.java b/tmp/46389091-34aa-49cb-9968-4d6eae262fa8_fixed.java
index c9c77a4..9fa09d9 100644
--- a/tmp/56613f3e-336e-4168-86cc-aead6876b58a_buggy.java
+++ b/tmp/46389091-34aa-49cb-9968-4d6eae262fa8_fixed.java
@@ -1,35 +1,31 @@
     URL build() {
         try {
             // use the URI class to encode non-ascii in path
             URI uri = new URI(
                 u.getProtocol(),
                 u.getUserInfo(),
                 IDN.toASCII(decodePart(u.getHost())), // puny-code
                 u.getPort(),
-                decodePart(u.getPath()),
+                u.toURI().getRawPath(), // get raw path instead of decoded one
                 null, null // query and fragment appended later so as not to encode
             );
 
             String normUrl = uri.toASCIIString();
             if (q != null || u.getRef() != null) {
                 StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
                 if (q != null) {
-                    sb.append('?');
-                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);
+                    sb.append('?').append(new String(q, "UTF-8")); // encode query parameters
                 }
                 if (u.getRef() != null) {
-                    sb.append('#');
-                    appendToAscii(u.getRef(), false, sb);
+                    sb.append('#').append(u.getRef());
                 }
-                normUrl = StringUtil.releaseBuilder(sb);
+                normUrl = sb.toString();
+                StringUtil.releaseBuilder(sb);
             }
             u = new URL(normUrl);
             return u;
         } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
-            // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
             assert Validate.assertFail(e.toString());
             return u;
         }
     }
\ No newline at end of file
