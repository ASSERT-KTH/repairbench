diff --git a/tmp/e5c7c8d7-6c56-4f8a-980c-c5f834fcae57_buggy.java b/tmp/87d84d5f-d877-4e4e-a4a7-ef1771c878c1_fixed.java
index c9c77a4..bf5c01d 100644
--- a/tmp/e5c7c8d7-6c56-4f8a-980c-c5f834fcae57_buggy.java
+++ b/tmp/87d84d5f-d877-4e4e-a4a7-ef1771c878c1_fixed.java
@@ -1,35 +1,26 @@
 URL build() {
     try {
-            // use the URI class to encode non-ascii in path
-            URI uri = new URI(
+        // build the authority part (protocol, userinfo, host, port) only
+        URI authorityUri = new URI(
             u.getProtocol(),
             u.getUserInfo(),
             IDN.toASCII(decodePart(u.getHost())), // puny-code
             u.getPort(),
-                decodePart(u.getPath()),
-                null, null // query and fragment appended later so as not to encode
+            null, null, null // path/query/frag appended to keep original encoding
         );
 
-            String normUrl = uri.toASCIIString();
-            if (q != null || u.getRef() != null) {
-                StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
-                if (q != null) {
-                    sb.append('?');
-                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);
-                }
-                if (u.getRef() != null) {
-                    sb.append('#');
-                    appendToAscii(u.getRef(), false, sb);
-                }
-                normUrl = StringUtil.releaseBuilder(sb);
-            }
-            u =  new URL(normUrl);
-            return u;
+        String authorityString = authorityUri.toASCIIString();
+
+        // get the original path, query, and fragment from the complete URL string
+        String originalUrlString = u.toString();
+        String pathAndMore = originalUrlString.substring(authorityString.length());
+
+        // build the new URL with the encoded authority and original path/query/fragment
+        String urlForm = authorityString + pathAndMore;
+        u = new URL(urlForm);
+        return u; // no manual appending of query/ref needed now
     } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
-            // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
         assert Validate.assertFail(e.toString());
         return u;
     }
 }
\ No newline at end of file
