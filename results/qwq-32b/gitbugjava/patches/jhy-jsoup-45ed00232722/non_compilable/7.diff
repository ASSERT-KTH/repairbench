diff --git a/tmp/6782e93a-94d0-4844-8a57-c99062a4deba_buggy.java b/tmp/ac6cfc86-fae4-4356-94e6-601790e928a6_fixed.java
index 855afa5..33159d0 100644
--- a/tmp/6782e93a-94d0-4844-8a57-c99062a4deba_buggy.java
+++ b/tmp/ac6cfc86-fae4-4356-94e6-601790e928a6_fixed.java
@@ -1,13 +1,28 @@
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+            final String scheme = u.getProtocol();
+            final String authority = u.getAuthority();
+            final String path = u.getPath();
+            String encodedPath = "";
+            if (path != null) {
+                List<String> pathSegments = new ArrayList<>();
+                for (String segment : path.split("/")) {
+                    segment = URLEncoder.encode(segment, "UTF-8")
+                            .replace("+", "%20");
+                    pathSegments.add(segment);
+                }
+                encodedPath = String.join("/", pathSegments);
+            }
+            final String query = u.getQuery();
+            final String encodedQuery = (query != null)
+                    ? URLEncoder.encode(query, "UTF-8").replace("+", "%20")
+                    : null;
+            final String ref = u.getFragment();
+            final URI uri = new URI(scheme, authority, encodedPath, encodedQuery, ref);
             return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        } catch (URISyntaxException | MalformedURLException 
+                | UnsupportedEncodingException e) {
             return u;
         }
     }
\ No newline at end of file
