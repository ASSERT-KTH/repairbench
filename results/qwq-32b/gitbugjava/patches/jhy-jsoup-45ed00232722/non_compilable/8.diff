diff --git a/tmp/026036c1-85cc-4d93-a5c8-8cb506a79682_buggy.java b/tmp/e50ecfe5-22a2-44a0-a958-1a8d9e7f6cd4_fixed.java
index 855afa5..1340ade 100644
--- a/tmp/026036c1-85cc-4d93-a5c8-8cb506a79682_buggy.java
+++ b/tmp/e50ecfe5-22a2-44a0-a958-1a8d9e7f6cd4_fixed.java
@@ -1,13 +1,24 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
+        String urlS = u.toExternalForm();
         urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
-        } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+        String encodedPath = "";
+        if (u.getPath() != null) {
+            encodedPath = URLEncoder.encode(u.getPath(), "UTF-8")
+                    .replace("+", "%20");
+        }
+        String encodedQuery = u.getQuery() != null ? 
+            URLEncoder.encode(u.getQuery(), "UTF-8") : null;
+        URI encodedURI = new URI(
+            u.getProtocol(),
+            u.getAuthority(),
+            encodedPath,
+            encodedQuery,
+            u.getFragment()
+        );
+        return new URL(encodedURI.toASCIIString());
+    } catch (Exception e) {
         return u;
     }
 }
\ No newline at end of file
