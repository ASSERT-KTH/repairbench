diff --git a/tmp/69ab7cfe-84ba-48e0-b667-06352331364a_buggy.java b/tmp/7db84c19-2eb9-474c-af52-498cd72fba27_fixed.java
index 855afa5..816a924 100644
--- a/tmp/69ab7cfe-84ba-48e0-b667-06352331364a_buggy.java
+++ b/tmp/7db84c19-2eb9-474c-af52-498cd72fba27_fixed.java
@@ -1,13 +1,33 @@
     static URL encodeUrl(URL u) {
         u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+            String protocol = u.getProtocol();
+            String authority = u.getAuthority();
+            String path = u.getPath();
+            String query = u.getQuery();
+            String fragment = u.getFragment();
+
+            // Encode the path if present
+            String encodedPath;
+            if (path != null) {
+                encodedPath = URLEncoder.encode(path, StandardCharsets.UTF_8.name()).replace("+", "%20");
+            } else {
+                encodedPath = "";
+            }
+
+            // Encode the query parameters
+            String encodedQuery;
+            if (query != null) {
+                encodedQuery = URLEncoder.encode(query, StandardCharsets.UTF_8.name()).replace("+", "%20");
+            } else {
+                encodedQuery = null;
+            }
+
+            URI uri = new URI(protocol, authority, encodedPath, encodedQuery, fragment);
             return new URL(uri.toASCIIString());
         } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+            // Print the error instead of silently failing
+            e.printStackTrace();
             return u;
         }
     }
\ No newline at end of file
