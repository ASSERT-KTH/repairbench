diff --git a/tmp/4805243e-e7c5-474f-bd68-c76b6537e7b3_buggy.java b/tmp/587c762c-d79f-4fec-85d1-01d4aa03a615_fixed.java
index 855afa5..4268165 100644
--- a/tmp/4805243e-e7c5-474f-bd68-c76b6537e7b3_buggy.java
+++ b/tmp/587c762c-d79f-4fec-85d1-01d4aa03a615_fixed.java
@@ -1,13 +1,30 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+        String protocol = u.getProtocol();
+        String authority = u.getAuthority();
+        String path = u.getPath();
+        if (path != null) {
+            String[] segments = path.split("/");
+            List<String> encodedSegments = new ArrayList<>();
+            for (String seg : segments) {
+                if (seg.isEmpty()) {
+                    encodedSegments.add(seg);
+                } else {
+                    seg = URLEncoder.encode(seg, "UTF-8").replace("+", "%20");
+                    encodedSegments.add(seg);
+                }
+            }
+            path = String.join("/", encodedSegments);
+        }
+        String query = u.getQuery();
+        if (query != null) {
+            query = URLEncoder.encode(query, "UTF-8").replace("+", "%20");
+        }
+        String fragment = u.getRef();
+        URI uri = new URI(protocol, authority, path, query, fragment);
         return new URL(uri.toASCIIString());
     } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
