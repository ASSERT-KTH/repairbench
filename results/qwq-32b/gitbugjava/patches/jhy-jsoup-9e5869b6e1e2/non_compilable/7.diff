diff --git a/tmp/0e5158db-a2bc-4be0-b833-6f76661dc86d_buggy.java b/tmp/2c79de3c-a605-4144-a95c-cd0867be8dcf_fixed.java
index 0583946..d645fea 100644
--- a/tmp/0e5158db-a2bc-4be0-b833-6f76661dc86d_buggy.java
+++ b/tmp/2c79de3c-a605-4144-a95c-cd0867be8dcf_fixed.java
@@ -1,30 +1,33 @@
 void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
     final boolean prettyPrint = out.prettyPrint();
     final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
     final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
     boolean trimLeading = false;
     boolean trimTrailing = false;
     if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
+        // Fix 1: Use formatAsBlock instead of isBlock for block check
+        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock()) ||
                 parentNode instanceof Document;
-            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
+        // Fix 2: Use formatAsBlock instead of isBlock for trailing whitespace check
+        trimTrailing = nextSibling() == null && parent != null && parent.tag().formatAsBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
         Node next = nextSibling();
         boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) || // next需要缩进，可以跳过当前空白
+                (next instanceof TextNode && ((TextNode) next).isBlank()); // 下一个也是空白
         if (couldSkip && isBlank) return;
 
         Node prev = previousSibling();
         if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+            (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) || // 首子节点且父元素格式为块级，且非空
+            (out.outline() && siblingNodes().size() > 0 && !isBlank) || // 轮廓模式
+            // Fix 3: 特殊情况：前一个兄弟是<BR>时不缩进，其他情况（非<BR>非空）时触发标准缩进
+            (siblingIndex > 0 && prev instanceof Element && !((Element) prev).normalName().equals("br"))
+        ) {
             indent(accum, depth, out);
         }
+    }
 
     Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
 }
\ No newline at end of file
