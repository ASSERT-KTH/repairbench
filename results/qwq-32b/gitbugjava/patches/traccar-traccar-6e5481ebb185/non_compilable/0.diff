diff --git a/tmp/b11234ac-346a-436a-af15-da579690424c_buggy.java b/tmp/cc8f4a97-1ff4-493c-bcac-a9f0f084db4a_fixed.java
index ee599aa..f9ff7dc 100644
--- a/tmp/b11234ac-346a-436a-af15-da579690424c_buggy.java
+++ b/tmp/cc8f4a97-1ff4-493c-bcac-a9f0f084db4a_fixed.java
@@ -1,50 +1,75 @@
     private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {
 
         int length = 0;
         if (hasLength) {
             length = buf.readUnsignedByte();
             if (length == 0) {
                 boolean zeroedData = true;
                 for (int i = buf.readerIndex() + 9; i < buf.readerIndex() + 45 && i < buf.writerIndex(); i++) {
                     if (buf.getByte(i) != 0) {
                         zeroedData = false;
                         break;
                     }
                 }
                 if (zeroedData) {
                     buf.skipBytes(Math.min(buf.readableBytes(), 45));
                 }
                 return false;
             }
+            // Check if buffer has enough bytes for LBS data block
+            if (buf.readableBytes() < length) {
+                return false;
+            }
+            // Calculate required bytes based on data and type
+            buf.markReaderIndex();
+            int mccTemp = buf.readUnsignedShort();
+            int mncSize = (BitUtil.check(mccTemp, 15) || type == MSG_GPS_LBS_6) ? 2 : 1;
+            int lacSize = (type == MSG_LBS_ALARM) ? 4 : 2;
+            int cidSize;
+            if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
+                cidSize = 8;
+            } else if (type == MSG_GPS_LBS_6) {
+                cidSize = 4;
+            } else {
+                cidSize = 3;
+            }
+            int totalRequired = 2 + mncSize + lacSize + cidSize;
+            if (length < totalRequired) {
+                buf.resetReaderIndex();
+                return false;
+            }
+            // Return to original position to actually read values
+            buf.resetReaderIndex();
         }
 
+        // Proceed with field reading
         int mcc = buf.readUnsignedShort();
         int mnc;
         if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {
             mnc = buf.readUnsignedShort();
         } else {
             mnc = buf.readUnsignedByte();
         }
         int lac;
         if (type == MSG_LBS_ALARM) {
             lac = buf.readInt();
         } else {
             lac = buf.readUnsignedShort();
         }
         long cid;
         if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {
             cid = buf.readLong();
         } else if (type == MSG_GPS_LBS_6) {
             cid = buf.readUnsignedInt();
         } else {
             cid = buf.readUnsignedMedium();
         }
 
         position.setNetwork(new Network(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid)));
 
         if (length > 9) {
             buf.skipBytes(length - 9);
         }
 
         return true;
     }
\ No newline at end of file
