diff --git a/tmp/5f79b9c9-2034-4303-b3f6-467a359f5c67_buggy.java b/tmp/0a28cd0a-690f-4564-896e-3bff602872d2_fixed.java
index b8e3fa3..fbfd536 100644
--- a/tmp/5f79b9c9-2034-4303-b3f6-467a359f5c67_buggy.java
+++ b/tmp/0a28cd0a-690f-4564-896e-3bff602872d2_fixed.java
@@ -1,65 +1,68 @@
-	/**
-	 * Builds the {@link BackOffPolicy} with the given parameters.
-	 * @return the {@link BackOffPolicy} instance
-	 */
 public BackOffPolicy build() {
     if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
+        boolean isRandom = Boolean.TRUE.equals(this.random);
+        // Ensure exponentialRandom is used if any suppliers are present
+        if (this.delaySupplier != null || this.multiplierSupplier != null || this.maxDelaySupplier != null) {
+            isRandom = true;
+        }
         ExponentialBackOffPolicy policy;
-			if (Boolean.TRUE.equals(this.random)) {
+        if (isRandom) {
             policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
+        } else {
             policy = new ExponentialBackOffPolicy();
         }
+
         if (this.delay != null) {
             policy.setInitialInterval(this.delay);
         }
         if (this.delaySupplier != null) {
             policy.initialIntervalSupplier(this.delaySupplier);
         }
+
         if (this.multiplier != null) {
             policy.setMultiplier(this.multiplier);
         }
         if (this.multiplierSupplier != null) {
             policy.multiplierSupplier(this.multiplierSupplier);
         }
+
         if (this.maxDelay != null && this.delay != null) {
             policy.setMaxInterval(
                     this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
         }
         if (this.maxDelaySupplier != null) {
             policy.maxIntervalSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper != null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
     if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
         UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
         if (this.delay != null) {
             policy.setMinBackOffPeriod(this.delay);
         }
         if (this.delaySupplier != null) {
             policy.minBackOffPeriodSupplier(this.delaySupplier);
         }
         if (this.maxDelay != null) {
             policy.setMaxBackOffPeriod(this.maxDelay);
         }
         if (this.maxDelaySupplier != null) {
             policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper != null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
     FixedBackOffPolicy policy = new FixedBackOffPolicy();
     if (this.delay != null) {
         policy.setBackOffPeriod(this.delay);
     }
     if (this.sleeper != null) {
         policy.setSleeper(this.sleeper);
     }
     return policy;
 }
\ No newline at end of file
