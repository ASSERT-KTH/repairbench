diff --git a/tmp/35d1c4b8-70d0-4b8c-9bc9-24876a7cd1c0_buggy.java b/tmp/1c429953-9756-4a68-94c8-1f3b309e4424_fixed.java
index 9739964..4854fa7 100644
--- a/tmp/35d1c4b8-70d0-4b8c-9bc9-24876a7cd1c0_buggy.java
+++ b/tmp/1c429953-9756-4a68-94c8-1f3b309e4424_fixed.java
@@ -1,27 +1,7 @@
-  public int[] calculateSpans(int[] prices) {
 
-    int[] spans = new int[prices.length];
-    spans[0] = 1; // Span of first element is always 1
+Wait that's the correct fix. The code only has the while loop changed to <. No changes to the spans formula. 
 
-    Stack<Integer> indexStack = new Stack<>();
+Thus, the fixed code is exactly the original, but replacing <= with < in the while condition. 
 
-    // Push the index of first element
-    indexStack.push(0);
-
-    for (int i = 1; i < prices.length; i++) {
-      while (!indexStack.isEmpty()
-          && prices[indexStack.peek()] <= prices[i])
-        indexStack.pop();
-
-      // If index stack is empty, the price at index 'i'
-      // is greater than all previous values
-      if (indexStack.isEmpty())
-        spans[i] = i + 1;
-      else
-        spans[i] = i - indexStack.peek();
-
-      indexStack.push(i);
-    }
-
-    return spans;
-  }
+**Final Answer**
+The correct fixed code is:
\ No newline at end of file
