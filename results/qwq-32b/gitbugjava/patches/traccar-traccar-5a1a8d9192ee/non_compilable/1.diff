diff --git a/tmp/f0095d31-560b-46a9-b17f-543a2ae8b0b1_buggy.java b/tmp/6d835a45-4826-4525-b596-2cbe7a08e043_fixed.java
index dadf54e..29bfd07 100644
--- a/tmp/f0095d31-560b-46a9-b17f-543a2ae8b0b1_buggy.java
+++ b/tmp/6d835a45-4826-4525-b596-2cbe7a08e043_fixed.java
@@ -1,93 +1,86 @@
 @Override
-    protected Object decode(
-            Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
-
+protected Object decode(Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
     ByteBuf buf = (ByteBuf) msg;
 
     buf.readUnsignedByte(); // protocol revision
     buf.readUnsignedShort(); // length
     buf.readUnsignedByte(); // header indicator
     buf.readUnsignedShort(); // header length
     buf.readUnsignedInt(); // reference
 
     String imei = buf.readCharSequence(15, StandardCharsets.US_ASCII).toString();
     DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
     if (deviceSession == null) {
         return null;
     }
 
    buf.readUnsignedByte(); // session status
     buf.readUnsignedShort(); // originator index
     buf.readUnsignedShort(); // transfer index
-        buf.readUnsignedInt(); // session time
+    // Removed the incorrect pre-reading of 'session_time' (causing buffer offset issue)
+    // buf.readUnsignedInt(); // session time 
     buf.readUnsignedByte(); // payload indicator
     buf.readUnsignedShort(); // payload length
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     List<Integer> parameters = getParameters(deviceSession.getDeviceId());
 
     for (int parameter : parameters) {
         switch (parameter) {
             case 0x01:
                 position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                 break;
             case 0x02:
                 position.setLatitude(buf.readIntLE() / 1000000.0);
                 break;
             case 0x03:
                 position.setLongitude(buf.readIntLE() / 1000000.0);
                 break;
             case 0x04:
                 position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
                 break;
             case 0x05:
                 position.setValid(buf.readUnsignedByte() > 0);
                 break;
             case 0x06:
-                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
-                    break;
-                case 0x07:
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
-                    break;
-                case 0x08:
                 position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
                 break;
-                case 0x09:
+            case 0x07:
                 position.setCourse(buf.readUnsignedShortLE());
                 break;
-                case 0x0A:
+            case 0x08:
                 position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
                 break;
-                case 0x0B:
+            case 0x09:
                 position.setAltitude(buf.readShortLE());
                 break;
-                case 0x0C:
+            case 0x0A:
                 position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
                 break;
-                case 0x0D:
+            case 0x0B:
                 position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
                 break;
             case 0x14:
                 position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
                 break;
             case 0x15:
                 position.set(Position.KEY_INPUT, buf.readUnsignedByte());
                 break;
             case 0x19:
                 position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
                 break;
             case 0x1A:
-                    position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
+                position.setDouble(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
                 break;
             case 0x1B:
                 buf.readUnsignedByte(); // geofence
                 break;
             default:
                 break;
         }
     }
 
     return position;
 }
\ No newline at end of file
