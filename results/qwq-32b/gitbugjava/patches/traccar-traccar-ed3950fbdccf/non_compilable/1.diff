diff --git a/tmp/8767738c-d71e-42c5-818b-6e6a57d06cdb_buggy.java b/tmp/a6caf8a9-9740-4c27-968e-54067ebe4b0e_fixed.java
index abd3198..0725a51 100644
--- a/tmp/8767738c-d71e-42c5-818b-6e6a57d06cdb_buggy.java
+++ b/tmp/a6caf8a9-9740-4c27-968e-54067ebe4b0e_fixed.java
@@ -1,28 +1,29 @@
 @Override
 protected Object encodeCommand(Command command) {
-
+    // Fetch device via its ID to get the unique ID
+    Device device = getCacheManager().getObject(Device.class, command.getDeviceId());
     ByteBuf content = Unpooled.buffer();
 
     switch (command.getType()) {
         case Command.TYPE_POSITION_SINGLE:
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
+            return encodeContent(device.getUniqueId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
         case Command.TYPE_ENGINE_STOP:
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
+            return encodeContent(device.getUniqueId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
         case Command.TYPE_ENGINE_RESUME:
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
+            return encodeContent(device.getUniqueId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
         case Command.TYPE_SET_SPEED_LIMIT:
             content.writeByte(command.getInteger(Command.KEY_DATA));
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
+            return encodeContent(device.getUniqueId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
         case Command.TYPE_SET_ODOMETER:
             content.writeShort(command.getInteger(Command.KEY_DATA));
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
+            return encodeContent(device.getUniqueId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
         case Command.TYPE_POSITION_PERIODIC:
             String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
             content.writeShort(Integer.valueOf(data[0]));
             content.writeShort(Integer.valueOf(data[1]));
             content.writeShort(Integer.valueOf(data[2]));
-                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);
+            return encodeContent(device.getUniqueId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content); // Changed command.getDeviceId() to device.getUniqueId()
         default:
             return null;
     }
 }
\ No newline at end of file
