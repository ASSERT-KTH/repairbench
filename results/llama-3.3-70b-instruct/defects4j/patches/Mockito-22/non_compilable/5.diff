diff --git a/tmp/0b9a46eb-2852-4ddc-b2a2-2e7e6e43c897_buggy.java b/tmp/e3afd798-d387-4e08-8d71-e2a42cd000e4_fixed.java
index 111ba5e..8dd1fbd 100644
--- a/tmp/0b9a46eb-2852-4ddc-b2a2-2e7e6e43c897_buggy.java
+++ b/tmp/e3afd798-d387-4e08-8d71-e2a42cd000e4_fixed.java
@@ -1,9 +1,35 @@
 public static boolean areEqual(Object o1, Object o2) {
     if (o1 == null || o2 == null) {
         return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+    } else if (o1.getClass().isArray() && o2.getClass().isArray()) {
+        if (o1.getClass().getComponentType().isPrimitive() &&!o2.getClass().getComponentType().isPrimitive()) {
+            return areArraysEqual(primitiveToWrapperArray(o1), o2);
+        } else if (!o1.getClass().getComponentType().isPrimitive() && o2.getClass().getComponentType().isPrimitive()) {
+            return areArraysEqual(o1, primitiveToWrapperArray(o2));
+        }
+        return areArraysEqual(o1, o2);
     } else {
         return o1.equals(o2);
     }
 }
+
+private static Object primitiveToWrapperArray(Object primitiveArray) {
+    int length = Array.getLength(primitiveArray);
+    Object[] wrapperArray = new Object[length];
+    for (int i = 0; i < length; i++) {
+        wrapperArray[i] = Array.get(primitiveArray, i);
+    }
+    return wrapperArray;
+}
+
+private static boolean areArraysEqual(Object o1, Object o2) {
+    if (Array.getLength(o1)!= Array.getLength(o2)) {
+        return false;
+    }
+    for (int i = 0; i < Array.getLength(o1); i++) {
+        if (!areEqual(Array.get(o1, i), Array.get(o2, i))) {
+            return false;
+        }
+    }
+    return true;
+}
\ No newline at end of file
