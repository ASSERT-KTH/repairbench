diff --git a/tmp/d22f21e2-2e31-4bb3-9448-5292f2f7e9a2_buggy.java b/tmp/93ea867f-b18d-4282-9eac-c0de4716b211_fixed.java
index 71189c3..bd674c6 100644
--- a/tmp/d22f21e2-2e31-4bb3-9448-5292f2f7e9a2_buggy.java
+++ b/tmp/93ea867f-b18d-4282-9eac-c0de4716b211_fixed.java
@@ -1,46 +1,47 @@
 public void validate(final WriteableCommandLine commandLine)
     throws OptionException {
     // number of options found
     int present = 0;
 
     // reference to first unexpected option
     Option unexpected = null;
 
     for (final Iterator i = options.iterator(); i.hasNext();) {
         final Option option = (Option) i.next();
 
         // needs validation?
         boolean validate = option.isRequired() || option instanceof Group;
         if (validate) {
             option.validate(commandLine);
         }
 
         // if the child option is present then validate it
         if (commandLine.hasOption(option)) {
             if (++present > maximum) {
                 unexpected = option;
 
                 break;
             }
 
-                option.validate(commandLine);
+            // Remove the redundant option.validate(commandLine); to avoid casting issues
+            // option.validate(commandLine);
         }
     }
 
     // too many options
     if (unexpected!= null) {
         throw new OptionException(this, ResourceConstants.UNEXPECTED_TOKEN,
                                   unexpected.getPreferredName());
     }
 
     // too few option
     if (present < minimum) {
         throw new OptionException(this, ResourceConstants.MISSING_OPTION);
     }
 
     // validate each anonymous argument
     for (final Iterator i = anonymous.iterator(); i.hasNext();) {
         final Option option = (Option) i.next();
         option.validate(commandLine);
     }
 }
\ No newline at end of file
