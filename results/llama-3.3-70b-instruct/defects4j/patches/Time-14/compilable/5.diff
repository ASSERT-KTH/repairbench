diff --git a/tmp/88cc7c71-083d-420a-a661-684de69f9c97_buggy.java b/tmp/92e66ce1-ad6f-43d1-9acc-40f28ba2e2bc_fixed.java
index 10616db..4383b2b 100644
--- a/tmp/88cc7c71-083d-420a-a661-684de69f9c97_buggy.java
+++ b/tmp/92e66ce1-ad6f-43d1-9acc-40f28ba2e2bc_fixed.java
@@ -1,19 +1,24 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
+        // handle end of month cases by preserving the day of month
+        int newDayOfMonth = iChronology.dayOfMonth().get(instant);
+        int newMonthOfYear = iChronology.monthOfYear().get(instant);
+        if (newDayOfMonth > iChronology.dayOfMonth().getMaximumValue(newMonthOfYear)) {
+            instant = iChronology.dayOfMonth().set(instant, iChronology.dayOfMonth().getMaximumValue(newMonthOfYear));
+        }
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
