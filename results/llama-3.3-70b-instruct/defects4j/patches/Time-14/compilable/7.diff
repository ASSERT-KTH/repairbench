diff --git a/tmp/0b0eab74-f555-458e-862c-9f4c19679df9_buggy.java b/tmp/6d51aee6-7445-4a0d-a69d-ca32f641356e_fixed.java
index 10616db..76bee50 100644
--- a/tmp/0b0eab74-f555-458e-862c-9f4c19679df9_buggy.java
+++ b/tmp/6d51aee6-7445-4a0d-a69d-ca32f641356e_fixed.java
@@ -1,19 +1,28 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
-            // month is largest field and being added to, such as month-day
+    
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
+        
+        // Adjust the day of month if necessary
+        if (partial.getFieldType(0) == DateTimeFieldType.monthOfYear()) {
+            int month = iChronology.monthOfYear().get(instant);
+            int year = iChronology.year().get(instant);
+            int daysInMonth = iChronology.dayOfMonth().getMaximumValue(instant);
+            int day = iChronology.dayOfMonth().get(instant);
+            if (day > daysInMonth) {
+                instant = iChronology.dayOfMonth().set(instant, daysInMonth);
+            }
+        }
+        
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
