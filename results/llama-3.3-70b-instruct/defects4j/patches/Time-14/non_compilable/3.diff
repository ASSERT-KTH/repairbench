diff --git a/tmp/c7ba2ffc-e0ab-4850-a4c3-1f9f64d49912_buggy.java b/tmp/bfcebd98-f066-4050-8b9f-24c7e131fc91_fixed.java
index 10616db..c3bcd75 100644
--- a/tmp/c7ba2ffc-e0ab-4850-a4c3-1f9f64d49912_buggy.java
+++ b/tmp/bfcebd98-f066-4050-8b9f-24c7e131fc91_fixed.java
@@ -1,19 +1,24 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
+        // Since MonthDay can't handle invalid dates, we manually adjust the date to the last day of the month.
+        int year = iChronology.year().get(instant);
+        int month = iChronology.monthOfYear().get(instant);
+        int maxDays = iChronology.dayOfMonth().getMaximumvalue(year, month);
+        int day = Math.min(values[1], maxDays);
+        instant = iChronology.dayOfMonth().set(instant, day);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file
