diff --git a/tmp/fc33b330-62f4-406b-b610-bc9ad93c50f4_buggy.java b/tmp/f72eb929-0cac-463f-a9ed-32a4e8082d80_fixed.java
index 7e43c1c..fdb5e06 100644
--- a/tmp/fc33b330-62f4-406b-b610-bc9ad93c50f4_buggy.java
+++ b/tmp/f72eb929-0cac-463f-a9ed-32a4e8082d80_fixed.java
@@ -1,19 +1,27 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
   Node constructor = n.getFirstChild();
   JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
   if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
     FunctionType fnType = type.toMaybeFunctionType();
     if (fnType!= null) {
+      // Check if the function type is a constructor and if it implements an interface.
+      if (fnType.isConstructor() && fnType.getInstanceType().isInterface()) {
+        // Get the interface implemented by the constructor.
+        JSType interfaceType = fnType.getInstanceType();
+        // Update the type of the new expression to be the type of the interface.
+        ensureTyped(t, n, interfaceType);
+      } else {
         visitParameterList(t, n, fnType);
         ensureTyped(t, n, fnType.getInstanceType());
+      }
     } else {
       ensureTyped(t, n);
     }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
\ No newline at end of file
