diff --git a/tmp/0bd89db7-b0a9-4786-9b37-0f656d8a2c3e_buggy.java b/tmp/e6c753e5-e13f-46d6-a328-8544cf217b21_fixed.java
index 7e43c1c..1e32ce1 100644
--- a/tmp/0bd89db7-b0a9-4786-9b37-0f656d8a2c3e_buggy.java
+++ b/tmp/e6c753e5-e13f-46d6-a328-8544cf217b21_fixed.java
@@ -1,19 +1,29 @@
 /**
  * Visits a NEW node.
  */
 private void visitNew(NodeTraversal t, Node n) {
     Node constructor = n.getFirstChild();
     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
         FunctionType fnType = type.toMaybeFunctionType();
         if (fnType!= null) {
             visitParameterList(t, n, fnType);
             ensureTyped(t, n, fnType.getInstanceType());
         } else {
+            // If fnType is null and type is not a constructor, 
+            // check if type has a constructor subtype
+            for (JSType subtype : type.getSubtypes()) {
+                if (subtype.isConstructor()) {
+                    FunctionType subtypeFnType = subtype.toMaybeFunctionType();
+                    visitParameterList(t, n, subtypeFnType);
+                    ensureTyped(t, n, subtypeFnType.getInstanceType());
+                    return;
+                }
+            }
             ensureTyped(t, n);
         }
     } else {
         report(t, n, NOT_A_CONSTRUCTOR);
         ensureTyped(t, n);
     }
 }
\ No newline at end of file
