diff --git a/tmp/7119d0a9-8b59-486f-b06b-f278978e8ffe_buggy.java b/tmp/ca08bbe0-8318-476d-94e4-6a080e1cadd3_fixed.java
index 07b0792..38eeaeb 100644
--- a/tmp/7119d0a9-8b59-486f-b06b-f278978e8ffe_buggy.java
+++ b/tmp/ca08bbe0-8318-476d-94e4-6a080e1cadd3_fixed.java
@@ -1,22 +1,30 @@
 /**
  * @return Whether the variable is only assigned a value once for its
  *     lifetime.
  */
 boolean isAssignedOnceInLifetime() {
   Reference ref = getOneAndOnlyAssignment();
   if (ref == null) {
     return false;
   }
 
   // Make sure this assignment is not in a loop.
   for (BasicBlock block = ref.getBasicBlock();
        block!= null; block = block.getParent()) {
     if (block.isFunction) {
       break;
-        } else if (block.isLoop) {
+    } else if (block.isLoop || hasMultipleExecutions(ref)) {
       return false;
     }
   }
 
-      return true;
+  // Check if there's only one assignment in the entire code.
+  return getAssignments().size() == 1;
+}
+
+// Helper function to check if a reference has multiple executions.
+private boolean hasMultipleExecutions(Reference ref) {
+  // This is a simplified version and may need to be adapted to the actual codebase.
+  // It's also possible that this function already exists in the codebase.
+  return ref.getBasicBlock().getPredecessors().size() > 1;
 }
\ No newline at end of file
