diff --git a/tmp/96756be9-bd82-4dbc-abdf-92ecf7b7fe98_buggy.java b/tmp/9cc2831f-0b48-455a-81e2-29a5ae983d9f_fixed.java
index 4685979..883f1b8 100644
--- a/tmp/96756be9-bd82-4dbc-abdf-92ecf7b7fe98_buggy.java
+++ b/tmp/9cc2831f-0b48-455a-81e2-29a5ae983d9f_fixed.java
@@ -1,16 +1,19 @@
 /**
  * Encodes {@code value}.
  *
-   * @param value a finite value. May not be {@link Double#isNaN() NaNs} or
-   *     {@link Double#isInfinite() infinities}.
+ * @param value a value. May be {@link Double#isNaN() NaNs} or
+ *     {@link Double#isInfinite() infinities} when {@link #setLenient(boolean)} is true.
  * @return this writer.
  */
 public JsonWriter value(double value) throws IOException {
   writeDeferredName();
-    if (Double.isNaN(value) || Double.isInfinite(value)) {
+  if (!lenient && (Double.isNaN(value) || Double.isInfinite(value))) {
     throw new IllegalArgumentException("Numeric values must be finite, but was " + value);
   }
   beforeValue();
-    out.append(Double.toString(value));
+  out.append(lenient? 
+      (Double.isNaN(value)? "NaN" : 
+       (Double.isInfinite(value)? (value < 0? "-Infinity" : "Infinity") : Double.toString(value))) 
+      : Double.toString(value));
   return this;
 }
\ No newline at end of file
