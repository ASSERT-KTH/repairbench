diff --git a/tmp/98e794df-7031-4af3-a941-a67a008793b7_buggy.java b/tmp/22ee7f3f-027e-4c75-a943-32e7daba25a3_fixed.java
index 08e51e4..4c24747 100644
--- a/tmp/98e794df-7031-4af3-a941-a67a008793b7_buggy.java
+++ b/tmp/22ee7f3f-027e-4c75-a943-32e7daba25a3_fixed.java
@@ -1,16 +1,27 @@
 /**
  * <p>Reduce the fraction to the smallest values for the numerator and
  * denominator, returning the result.</p>
  * 
  * <p>For example, if this fraction represents 2/4, then the result
  * will be 1/2.</p>
  *
  * @return a new reduced fraction instance, or this if no simplification possible
  */
 public Fraction reduce() {
     int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
-        if (gcd == 1) {
-            return this;
+    int newNumerator = numerator / gcd;
+    int newDenominator = denominator / gcd;
+    if ((numerator < 0 && denominator < 0) || (numerator > 0 && denominator > 0)) {
+        return Fraction.getFraction(Math.abs(newNumerator), Math.abs(newDenominator));
+    } else {
+        if (newNumerator > 0) {
+            return Fraction.getFraction(-Math.abs(newNumerator), Math.abs(newDenominator));
+        } else {
+            return Fraction.getFraction(Math.abs(newNumerator), Math.abs(newDenominator));
         }
-        return Fraction.getFraction(numerator / gcd, denominator / gcd);
+    }
+    // Simplified to:
+    // return numerator >= 0 == denominator >= 0? 
+    //         Fraction.getFraction(Math.abs(newNumerator), Math.abs(newDenominator)) : 
+    //         Fraction.getFraction(-Math.abs(newNumerator), Math.abs(newDenominator));
 }
\ No newline at end of file
