diff --git a/tmp/10ad0b32-dc9e-495f-8160-78f28f11e243_buggy.java b/tmp/f0d7f7d2-3ef0-49ff-ae8e-0dd285440d81_fixed.java
index 01967cc..23eefed 100644
--- a/tmp/10ad0b32-dc9e-495f-8160-78f28f11e243_buggy.java
+++ b/tmp/f0d7f7d2-3ef0-49ff-ae8e-0dd285440d81_fixed.java
@@ -1,35 +1,35 @@
 /**
  * Method called to check if the default type handler should be
  * used for given type.
  * Note: "natural types" (String, Boolean, Integer, Double) will never
  * use typing; that is both due to them being concrete and final,
  * and since actual serializers and deserializers will also ignore any
  * attempts to enforce typing.
  */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // fall through
+        return (t.getRawClass() == Object.class)
+                || (!t.isConcrete()
+                        // [databind#88] Should not apply to JSON tree models:
+                || TreeNode.class.isAssignableFrom(t.getRawClass()));
     case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
         return (t.getRawClass() == Object.class)
                 || (!t.isConcrete()
                         // [databind#88] Should not apply to JSON tree models:
                 || TreeNode.class.isAssignableFrom(t.getRawClass()));
-
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // [Issue#88] Should not apply to JSON tree models:
         return!t.isFinal() &&!TreeNode.class.isAssignableFrom(t.getRawClass());
+    case JAVA_LANG_OBJECT:
+        return t.isJavaLangObject();
     default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
+        return false;
     }
 }
\ No newline at end of file
