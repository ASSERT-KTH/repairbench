diff --git a/tmp/92beb32b-35cf-414f-b891-9c1f4cd390c8_buggy.java b/tmp/3caffe55-162a-4901-80ec-e473a18d019e_fixed.java
index 5f1dcf2..0493a38 100644
--- a/tmp/92beb32b-35cf-414f-b891-9c1f4cd390c8_buggy.java
+++ b/tmp/3caffe55-162a-4901-80ec-e473a18d019e_fixed.java
@@ -1,41 +1,43 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    while (!getConvergenceChecker().converged(getIterationsCounter(), simplex)) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
+            } else {
+                // accept the expanded simplex
+                simplex = evaluateSimplex(original, reflected, expanded, comparator);
             }
 
             return;
 
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
+            simplex = evaluateSimplex(original, reflected, contracted, comparator);
             return;
         }
 
     }
 
 }
\ No newline at end of file
