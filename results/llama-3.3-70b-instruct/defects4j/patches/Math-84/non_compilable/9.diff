diff --git a/tmp/2b763aba-a367-47aa-ab28-3ec314858536_buggy.java b/tmp/ef1a7d2e-a84c-4669-a89b-ac8f261e589a_fixed.java
index 5f1dcf2..3864359 100644
--- a/tmp/2b763aba-a367-47aa-ab28-3ec314858536_buggy.java
+++ b/tmp/ef1a7d2e-a84c-4669-a89b-ac8f261e589a_fixed.java
@@ -1,41 +1,45 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    while (getIterations() < getMaxIterations()) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
+            } else {
+                // accept the expanded simplex
+                simplex = reflectedSimplex;
+                simplex[0] = expanded;
             }
 
-                return;
-
+            continue;
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
-                return;
+            simplex[0] = contracted;
+        } else {
+            // we failed to improve the simplex, restart with a smaller one
+            for (int i = 1; i < simplex.length; i++) {
+                simplex[i] = getContraction(simplex[0], simplex[i]);
+            }
         }
-
     }
-
 }
\ No newline at end of file
