diff --git a/tmp/59ac32d2-83d4-47a5-96bc-06ee0a1722cd_buggy.java b/tmp/921077cc-b04a-4ae7-b5cd-825ebefd85af_fixed.java
index 5f1dcf2..724eb96 100644
--- a/tmp/59ac32d2-83d4-47a5-96bc-06ee0a1722cd_buggy.java
+++ b/tmp/921077cc-b04a-4ae7-b5cd-825ebefd85af_fixed.java
@@ -1,41 +1,44 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
-        while (true) {
+    int maxIterations = getMaxIterations();
+    while (getIterations() < maxIterations) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
             final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
                 simplex = reflectedSimplex;
             }
 
-                return;
+            continue;
 
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
-                return;
+            simplex = getSimplex(contracted, original);
+            continue;
         }
 
+        // shrink the simplex
+        simplex = getShrunkSimplex(original);
     }
 
+    checkMaxIterations();
 }
\ No newline at end of file
