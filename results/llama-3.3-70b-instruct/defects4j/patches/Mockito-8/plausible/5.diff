diff --git a/tmp/d3c83ff6-1fd8-44d3-9475-e25c8ba74c65_buggy.java b/tmp/8d735ed6-69a8-4eff-a408-cdec14e837e1_fixed.java
index 42b58d0..d5cbda8 100644
--- a/tmp/d3c83ff6-1fd8-44d3-9475-e25c8ba74c65_buggy.java
+++ b/tmp/8d735ed6-69a8-4eff-a408-cdec14e837e1_fixed.java
@@ -1,19 +1,23 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
+        if (actualTypeArgument instanceof TypeVariable && ((TypeVariable) actualTypeArgument).getGenericDeclaration() == ((Class<?>) parameterizedType.getRawType())) {
+            // handle self-type reference
+            continue;
+        }
+
         if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
