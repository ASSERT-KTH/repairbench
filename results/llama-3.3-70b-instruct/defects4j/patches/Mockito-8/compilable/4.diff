diff --git a/tmp/0417297c-0dcc-46b0-b0cc-93f1456911cd_buggy.java b/tmp/c64085e5-6037-444c-b0a6-7cdff0dd040e_fixed.java
index 42b58d0..e0ee7dc 100644
--- a/tmp/0417297c-0dcc-46b0-b0cc-93f1456911cd_buggy.java
+++ b/tmp/c64085e5-6037-444c-b0a6-7cdff0dd040e_fixed.java
@@ -1,19 +1,28 @@
 protected void registerTypeVariablesOn(Type classType) {
     if (!(classType instanceof ParameterizedType)) {
         return;
     }
     ParameterizedType parameterizedType = (ParameterizedType) classType;
     TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
     Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
     for (int i = 0; i < actualTypeArguments.length; i++) {
         TypeVariable typeParameter = typeParameters[i];
         Type actualTypeArgument = actualTypeArguments[i];
 
-            if (actualTypeArgument instanceof WildcardType) {
+        if (actualTypeArgument instanceof ParameterizedType) {
+            // If a type variable is parameterized with itself, this will create an infinite loop of nested parameterized types.
+            // To avoid the infinite loop, add a check to see if the actual type argument is the same as the raw type of the parameterized type.
+            if (((ParameterizedType) actualTypeArgument).getRawType().equals(parameterizedType.getRawType())) {
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            } else {
+                // Recursively register type variables for nested parameterized types
+                registerTypeVariablesOn(actualTypeArgument);
+                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            }
+        } else if (actualTypeArgument instanceof WildcardType) {
             contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
         } else {
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
         }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
     }
 }
\ No newline at end of file
