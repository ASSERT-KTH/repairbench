diff --git a/tmp/55c79383-2e2b-43bc-9030-6a260aaf81dc_buggy.java b/tmp/22cd06fb-1923-4048-a26f-b8c98d595c01_fixed.java
index b8e7fdb..8f5923f 100644
--- a/tmp/55c79383-2e2b-43bc-9030-6a260aaf81dc_buggy.java
+++ b/tmp/22cd06fb-1923-4048-a26f-b8c98d595c01_fixed.java
@@ -1,15 +1,26 @@
 /**
  * Attempt to cast this comment to an XML Declaration note.
  * @return an XML declaration if it could be parsed as one, null otherwise.
  */
 public XmlDeclaration asXmlDeclaration() {
     String data = getData();
-        Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri(), Parser.xmlParser());
-        XmlDeclaration decl = null;
-        if (doc.childNodeSize() > 0) {
-            Element el = doc.child(0);
-            decl = new XmlDeclaration(NodeUtils.parser(doc).settings().normalizeTag(el.tagName()), data.startsWith("!"));
-            decl.attributes().addAll(el.attributes());
+    if (!data.startsWith("<?") ||!data.endsWith("?>")) {
+        return null;
+    }
+    String xmlDecl = data.substring(2, data.length() - 1);
+    String[] parts = xmlDecl.split("\\s+");
+    if (parts.length < 1 ||!parts[0].equals("xml")) {
+        return null;
+    }
+    XmlDeclaration decl = new XmlDeclaration(NodeUtils.parser().settings().normalizeTag("xml"), true);
+    for (int i = 1; i < parts.length; i++) {
+        String part = parts[i];
+        if (part.contains("=")) {
+            String[] keyValue = part.split("=");
+            if (keyValue.length == 2) {
+                decl.attributes().put(keyValue[0], keyValue[1].replaceAll("^\"|\"$", ""));
+            }
+        }
     }
     return decl;
 }
\ No newline at end of file
