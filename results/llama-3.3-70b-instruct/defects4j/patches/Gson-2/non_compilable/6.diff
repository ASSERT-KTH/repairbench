diff --git a/tmp/be489c10-3854-4939-a31f-9f35f8fe2d9c_buggy.java b/tmp/46bc6814-5070-499d-b0ca-556a9baa878a_fixed.java
index 6e45f80..b899bc8 100644
--- a/tmp/be489c10-3854-4939-a31f-9f35f8fe2d9c_buggy.java
+++ b/tmp/46bc6814-5070-499d-b0ca-556a9baa878a_fixed.java
@@ -1,21 +1,25 @@
 /**
  * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
  * that the deserialized type matches the type requested.
  */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      final Class<T1> typeAdapterClass = typeAdapter.getClass();
+      final Class<?> actualType = typeAdapter.getClass().getDeclaredField("valueType").getType();
+      if (!actualType.isAssignableFrom(requestedType)) {
+        return null;
+      }
       return (TypeAdapter<T2>) typeAdapter;
-
     }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file
