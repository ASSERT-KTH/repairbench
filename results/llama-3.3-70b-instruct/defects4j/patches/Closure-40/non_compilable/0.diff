diff --git a/tmp/8de482a4-dbe9-4302-9d59-4af2dfcdc4b6_buggy.java b/tmp/e2ba1d00-d875-441a-8047-b9b0754691cc_fixed.java
index 670114d..47ef0d6 100644
--- a/tmp/8de482a4-dbe9-4302-9d59-4af2dfcdc4b6_buggy.java
+++ b/tmp/e2ba1d00-d875-441a-8047-b9b0754691cc_fixed.java
@@ -1,48 +1,62 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
   // Record global variable and function declarations
   if (t.inGlobalScope()) {
     if (NodeUtil.isVarDeclaration(n)) {
       NameInformation ns = createNameInformation(t, n, parent);
       Preconditions.checkNotNull(ns);
       recordSet(ns.name, n);
     } else if (NodeUtil.isFunctionDeclaration(n)) {
       Node nameNode = n.getFirstChild();
       NameInformation ns = createNameInformation(t, nameNode, n);
       if (ns!= null) {
         JsName nameInfo = getName(nameNode.getString(), true);
         recordSet(nameInfo.name, nameNode);
       }
     } else if (NodeUtil.isObjectLitKey(n, parent)) {
       NameInformation ns = createNameInformation(t, n, parent);
       if (ns!= null) {
         recordSet(ns.name, n);
       }
     }
   }
 
   // Record assignments and call sites
   if (n.isAssign()) {
     Node nameNode = n.getFirstChild();
 
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns!= null) {
       if (ns.isPrototype) {
         recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
       } else {
         recordSet(ns.name, nameNode);
       }
     }
   } else if (n.isCall()) {
     Node nameNode = n.getFirstChild();
     NameInformation ns = createNameInformation(t, nameNode, n);
     if (ns!= null && ns.onlyAffectsClassDef) {
       JsName name = getName(ns.name, false);
       if (name!= null) {
+        // Handle property access for 'goog.inherits'
+        if (nameNode.getParent().isGetProp() && nameNode.getParent().getFirstChild().getString().equals("inherits")) {
+          Node objNode = nameNode.getParent().getFirstChild();
+          JsName objName = getName(objNode.getString(), false);
+          if (objName!= null) {
+            Node argsNode = nameNode.getParent().getNext();
+            Node subclassNode = argsNode.getFirstChild();
+            Node superclassNode = argsNode.getLastChild();
+            // Create a synthetic constructor for the subclass
+            JsName syntheticName = new JsName(objName, ns.name);
+            refNodes.add(new ClassDefiningFunctionNode(syntheticName, subclassNode, parent, parent.getParent()));
+          }
+        } else {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
         }
       }
     }
   }
+}
\ No newline at end of file
