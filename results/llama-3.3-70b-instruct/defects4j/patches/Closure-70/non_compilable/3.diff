diff --git a/tmp/bfce718b-8df3-4958-8c54-aa865034727a_buggy.java b/tmp/8c85da43-3918-4526-9c6c-0d718c315b89_fixed.java
index 1530b34..4f4422f 100644
--- a/tmp/bfce718b-8df3-4958-8c54-aa865034727a_buggy.java
+++ b/tmp/8c85da43-3918-4526-9c6c-0d718c315b89_fixed.java
@@ -1,23 +1,30 @@
 /**
  * Declares all of a function's arguments.
  */
 private void declareArguments(Node functionNode) {
   Node astParameters = functionNode.getFirstChild().getNext();
   Node body = astParameters.getNext();
   FunctionType functionType = (FunctionType) functionNode.getJSType();
   if (functionType!= null) {
     Node jsDocParameters = functionType.getParametersNode();
     if (jsDocParameters!= null) {
       Node jsDocParameter = jsDocParameters.getFirstChild();
       for (Node astParameter : astParameters.children()) {
+        JSType parameterType = null;
         if (jsDocParameter!= null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          parameterType = jsDocParameter.getJSType();
           jsDocParameter = jsDocParameter.getNext();
-            } else {
-              defineSlot(astParameter, functionNode, null, true);
         }
+        // Check if the parameter is already declared
+        JSType existingType = getSlotType(astParameter.getString(), functionNode);
+        if (existingType!= null &&!existingType.equals(parameterType)) {
+          // If it is, report a JSC_DUP_VAR_DECLARATION warning
+          report(JSC_DUP_VAR_DECLARATION, astParameter).setMessage(
+              "variable %s redefined with type %s, original definition at %s with type %s",
+              astParameter.getString(), parameterType, functionNode.getSourceFileName(), existingType);
+        }
+        defineSlot(astParameter, functionNode, parameterType, true);
       }
     }
   }
 } // end declareArguments
\ No newline at end of file
