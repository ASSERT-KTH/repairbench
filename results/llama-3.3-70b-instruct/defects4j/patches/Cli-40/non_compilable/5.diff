diff --git a/tmp/4a9ec175-e1ef-43ba-bd09-e1049f347530_buggy.java b/tmp/f50f14cc-1087-42ff-99e4-dd83cb58bee9_fixed.java
index a7d0787..3f73cf6 100644
--- a/tmp/4a9ec175-e1ef-43ba-bd09-e1049f347530_buggy.java
+++ b/tmp/f50f14cc-1087-42ff-99e4-dd83cb58bee9_fixed.java
@@ -1,54 +1,62 @@
 /**
  * Returns the <code>Object</code> of type <code>clazz</code>
  * with the value of <code>str</code>.
  *
  * @param str the command line value
  * @param clazz the type of argument
  * @return The instance of <code>clazz</code> initialised with
  * the value of <code>str</code>.
  * @throws ParseException if the value creation for the given class failed
  */
 @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
 public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
 {
+    try {
         if (PatternOptionBuilder.STRING_VALUE == clazz)
         {
             return (T) str;
         }
         else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
         {
             return (T) createObject(str);
         }
         else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
         {
             return (T) createNumber(str);
         }
         else if (PatternOptionBuilder.DATE_VALUE == clazz)
         {
             return (T) createDate(str);
         }
         else if (PatternOptionBuilder.CLASS_VALUE == clazz)
         {
             return (T) createClass(str);
         }
         else if (PatternOptionBuilder.FILE_VALUE == clazz)
         {
             return (T) createFile(str);
         }
         else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
         {
             return (T) openFile(str);
         }
         else if (PatternOptionBuilder.FILES_VALUE == clazz)
         {
             return (T) createFiles(str);
         }
         else if (PatternOptionBuilder.URL_VALUE == clazz)
         {
             return (T) createURL(str);
         }
+        else if (clazz.equals(Integer.class))
+        {
+            return (T) Integer.valueOf(str);
+        }
         else
         {
-            return null;
+            throw new ParseException("Cannot instantiate type: " + clazz.getName() + " with value: " + str, 0);
+        }
+    } catch (Exception e) {
+        throw new ParseException("Failed to create value of type " + clazz.getName() + " with value: " + str, 0, e);
     }
 }
\ No newline at end of file
