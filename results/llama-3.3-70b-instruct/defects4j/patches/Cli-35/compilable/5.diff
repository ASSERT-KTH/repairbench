diff --git a/tmp/595bd16c-53c6-414b-adbf-ec22c042c11f_buggy.java b/tmp/518e8883-1097-4e5a-937c-83f17bc91ecb_fixed.java
index c6b65da..4c1a1e9 100644
--- a/tmp/595bd16c-53c6-414b-adbf-ec22c042c11f_buggy.java
+++ b/tmp/518e8883-1097-4e5a-937c-83f17bc91ecb_fixed.java
@@ -1,25 +1,50 @@
 /**
  * Returns the options with a long name starting with the name specified.
  * 
  * @param opt the partial name of the option
  * @return the options matching the partial name specified, or an empty list if none matches
  * @since 1.3
  */
 public List<String> getMatchingOptions(String opt)
 {
     opt = Util.stripLeadingHyphens(opt);
     
     List<String> matchingOpts = new ArrayList<String>();
 
     // for a perfect match return the single option only
 
     for (String longOpt : longOpts.keySet())
     {
-            if (longOpt.startsWith(opt))
+        if (longOpt.equals(opt) || (longOpt.startsWith(opt) &&!hasExactMatch(longOpt, opt)))
         {
             matchingOpts.add(longOpt);
         }
     }
     
+    // If we find an exact match, remove all the other options from the list
+    if (matchingOpts.size() > 1) {
+        String exactMatch = null;
+        for (String optName : matchingOpts) {
+            if (optName.equals(opt)) {
+                exactMatch = optName;
+                break;
+            }
+        }
+        if (exactMatch!= null) {
+            matchingOpts.clear();
+            matchingOpts.add(exactMatch);
+        }
+    }
+    
     return matchingOpts;
 }
+
+// Helper function to check if there's another option that starts with the longOpt
+private boolean hasExactMatch(String longOpt, String opt) {
+    for (String otherOpt : longOpts.keySet()) {
+        if (!otherOpt.equals(longOpt) && otherOpt.startsWith(longOpt) && otherOpt.length() > longOpt.length()) {
+            return true;
+        }
+    }
+    return false;
+}
\ No newline at end of file
