diff --git a/tmp/2b950652-79fe-48bd-8b35-b8ee94efc1e5_buggy.java b/tmp/09e43057-710d-40ef-9063-cc455c78cb30_fixed.java
index c6b65da..e8c836f 100644
--- a/tmp/2b950652-79fe-48bd-8b35-b8ee94efc1e5_buggy.java
+++ b/tmp/09e43057-710d-40ef-9063-cc455c78cb30_fixed.java
@@ -1,25 +1,53 @@
 /**
  * Returns the options with a long name starting with the name specified.
  * 
  * @param opt the partial name of the option
  * @return the options matching the partial name specified, or an empty list if none matches
  * @since 1.3
  */
 public List<String> getMatchingOptions(String opt)
 {
     opt = Util.stripLeadingHyphens(opt);
     
     List<String> matchingOpts = new ArrayList<String>();
 
     // for a perfect match return the single option only
+    boolean exactMatch = false;
+    for (String longOpt : longOpts.keySet())
+    {
+        if (longOpt.equals(opt))
+        {
+            exactMatch = true;
+            matchingOpts.clear();
+            matchingOpts.add(longOpt);
+            break;
+        }
+        else if (longOpt.startsWith(opt))
+        {
+            matchingOpts.add(longOpt);
+        }
+    }
     
+    // If there's an exact match, return only that match
+    if (exactMatch)
+    {
+        return matchingOpts;
+    }
+
+    // If there's more than one match and one of the matches is an exact match,
+    // return only the exact match
+    if (matchingOpts.size() > 1)
+    {
         for (String longOpt : longOpts.keySet())
         {
-            if (longOpt.startsWith(opt))
+            if (longOpt.equals(opt))
             {
+                matchingOpts.clear();
                 matchingOpts.add(longOpt);
+                break;
+            }
         }
     }
     
     return matchingOpts;
 }
\ No newline at end of file
