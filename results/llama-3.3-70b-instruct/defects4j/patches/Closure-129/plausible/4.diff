diff --git a/tmp/5f0a22cd-7b37-4da5-b31b-7bfc9311ec9c_buggy.java b/tmp/4739db49-4fc0-487d-8967-218be584a730_fixed.java
index e8705ac..a09bc6e 100644
--- a/tmp/5f0a22cd-7b37-4da5-b31b-7bfc9311ec9c_buggy.java
+++ b/tmp/4739db49-4fc0-487d-8967-218be584a730_fixed.java
@@ -1,24 +1,23 @@
 /**
  * There are two types of calls we are interested in calls without explicit
  * "this" values (what we are call "free" calls) and direct call to eval.
  */
 private void annotateCalls(Node n) {
   Preconditions.checkState(n.isCall());
 
   // Keep track of of the "this" context of a call.  A call without an
   // explicit "this" is a free call.
   Node first = n.getFirstChild();
 
-      // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+  // ignore cast nodes and GETPROP nodes.
+  if (!NodeUtil.isGet(first) &&!(first.isCast() || first.isGetProp())) {
     n.putBooleanProp(Node.FREE_CALL, true);
   }
 
   // Keep track of the context in which eval is called. It is important
   // to distinguish between "(0, eval)()" and "eval()".
   if (first.isName() &&
       "eval".equals(first.getString())) {
     first.putBooleanProp(Node.DIRECT_EVAL, true);
   }
 }
\ No newline at end of file
