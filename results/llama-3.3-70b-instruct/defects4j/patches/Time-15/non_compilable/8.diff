diff --git a/tmp/dd9b8aa4-dfa1-4fac-a66a-af55bf21ad60_buggy.java b/tmp/687df4a6-4750-41d0-885a-bd6ea24bf483_fixed.java
index a9a5e27..5c69c68 100644
--- a/tmp/dd9b8aa4-dfa1-4fac-a66a-af55bf21ad60_buggy.java
+++ b/tmp/687df4a6-4750-41d0-885a-bd6ea24bf483_fixed.java
@@ -1,24 +1,22 @@
 /**
  * Multiply two values throwing an exception if overflow occurs.
  * 
  * @param val1  the first value
  * @param val2  the second value
  * @return the new total
  * @throws ArithmeticException if the value is too big or too small
  * @since 1.2
  */
 public static long safeMultiply(long val1, int val2) {
-        switch (val2) {
-            case -1:
-                return -val1;
-            case 0:
-                return 0L;
-            case 1:
-                return val1;
+    try {
+        // Check for overflow using BigInteger
+        BigInteger bigVal1 = BigInteger.valueOf(val1);
+        BigInteger total = bigVal1.multiply(BigInteger.valueOf(val2));
+        if (total.bitLength() > 63) {
+            throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
         }
-        long total = val1 * val2;
-        if (total / val2 != val1) {
+        return total.longValue();
+    } catch (ArithmeticException e) {
         throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
     }
-        return total;
 }
\ No newline at end of file
