diff --git a/tmp/d6d13a0f-0cb0-45d1-b0a8-400e25db7b2d_buggy.java b/tmp/07da0cb3-1a73-49a4-9951-10ef61e1e2f3_fixed.java
index 0313249..cb79768 100644
--- a/tmp/d6d13a0f-0cb0-45d1-b0a8-400e25db7b2d_buggy.java
+++ b/tmp/07da0cb3-1a73-49a4-9951-10ef61e1e2f3_fixed.java
@@ -1,32 +1,32 @@
 /**
  * Specialized method for removing specified existing entry.
  * NOTE: entry MUST exist, otherwise an exception is thrown.
  */
 public void remove(SettableBeanProperty propToRm)
 {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
     boolean found = false;
 
     for (int i = 1, end = _hashArea.length; i < end; i += 2) {
         SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
         if (prop == null) {
             continue;
         }
         if (!found) {
             // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
             //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+            found = key.equalsIgnoreCase(prop.getName());
             if (found) {
                 // need to leave a hole here
                 _propsInOrder[_findFromOrdered(prop)] = null;
                 continue;
             }
         }
         props.add(prop);
     }
     if (!found) {
         throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
     }
     init(props);
 }
\ No newline at end of file
