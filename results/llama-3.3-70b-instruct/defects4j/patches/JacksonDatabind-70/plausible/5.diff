diff --git a/tmp/e174573e-ecaa-409c-9be3-140f2e6a42fb_buggy.java b/tmp/f504b8fc-e7c5-4712-8227-91f037b6ef9d_fixed.java
index 0313249..f1eb58c 100644
--- a/tmp/e174573e-ecaa-409c-9be3-140f2e6a42fb_buggy.java
+++ b/tmp/f504b8fc-e7c5-4712-8227-91f037b6ef9d_fixed.java
@@ -1,32 +1,34 @@
 /**
  * Specialized method for removing specified existing entry.
  * NOTE: entry MUST exist, otherwise an exception is thrown.
  */
 public void remove(SettableBeanProperty propToRm)
 {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
     boolean found = false;
 
     for (int i = 1, end = _hashArea.length; i < end; i += 2) {
         SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
         if (prop == null) {
             continue;
         }
         if (!found) {
             // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
             //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
+            String propName = prop.getName();
+            if (key.equalsIgnoreCase(propName)) {
+                found = true;
                 _propsInOrder[_findFromOrdered(prop)] = null;
-                    continue;
-                }
+            } else {
+                props.add(prop);
             }
+        } else {
             props.add(prop);
         }
+    }
     if (!found) {
         throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
     }
     init(props);
 }
\ No newline at end of file
