diff --git a/tmp/22391ba7-8186-4178-9493-ce9f020f995f_buggy.java b/tmp/c4a27e01-22b0-4d8d-8c79-820de1c09504_fixed.java
index fa6828a..2b0d868 100644
--- a/tmp/22391ba7-8186-4178-9493-ce9f020f995f_buggy.java
+++ b/tmp/c4a27e01-22b0-4d8d-8c79-820de1c09504_fixed.java
@@ -1,5 +1,23 @@
 private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {
     for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {
-            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();
+        // Sort mocks to prioritize exact type matches over ancestor types
+        List<Object> sortedMocks = new ArrayList<>(mocks);
+        sortedMocks.sort((mock1, mock2) -> {
+            Class<?> mock1Class = mock1.getClass();
+            Class<?> mock2Class = mock2.getClass();
+            if (mock1Class.equals(field.getType())) {
+                return -1; // Prioritize exact type match
+            } else if (mock2Class.equals(field.getType())) {
+                return 1;
+            } else if (field.getType().isAssignableFrom(mock1Class)) {
+                return -1; // Prioritize ancestor type match
+            } else if (field.getType().isAssignableFrom(mock2Class)) {
+                return 1;
+            } else {
+                return 0;
+            }
+        });
+        Set<Object> sortedMocksSet = new HashSet<>(sortedMocks);
+        mockCandidateFilter.filterCandidate(sortedMocksSet, field, fieldInstance).thenInject();
     }
 }
\ No newline at end of file
