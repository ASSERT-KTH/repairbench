diff --git a/tmp/44d1149d-7e2f-44eb-a30d-412ae88b02d1_buggy.java b/tmp/487f1dfa-31a5-499a-aaab-edce4ba92d8b_fixed.java
index 6c0aa19..56fa5fd 100644
--- a/tmp/44d1149d-7e2f-44eb-a30d-412ae88b02d1_buggy.java
+++ b/tmp/487f1dfa-31a5-499a-aaab-edce4ba92d8b_fixed.java
@@ -1,20 +1,25 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+    in = new PushbackInputStream(inputStream, 1024); // Specify a buffer size
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
+    // Read the first 4 bytes to start reading from the beginning of the archive
+    if (in.read(new byte[4], 0, 4)!= 4) {
+        throw new RuntimeException("Failed to read the first 4 bytes");
+    }
+    in.unread(new byte[4], 0, 4); // Push back the 4 bytes to read them again
     // haven't read anything so far
 }
\ No newline at end of file
