diff --git a/tmp/eaaf9cf0-6635-40c5-b5c1-9ff5add46213_buggy.java b/tmp/0161638e-a378-494c-be16-c0feccbd698f_fixed.java
index 6c0aa19..cea2683 100644
--- a/tmp/eaaf9cf0-6635-40c5-b5c1-9ff5add46213_buggy.java
+++ b/tmp/0161638e-a378-494c-be16-c0feccbd698f_fixed.java
@@ -1,20 +1,24 @@
 /**
  * @param encoding the encoding to use for file names, use null
  * for the platform's default encoding
  * @param useUnicodeExtraFields whether to use InfoZIP Unicode
  * Extra Fields (if present) to set the file names.
  * @param allowStoredEntriesWithDataDescriptor whether the stream
  * will try to read STORED entries that use a data descriptor
  * @since 1.1
  */
 public ZipArchiveInputStream(InputStream inputStream,
                              String encoding,
                              boolean useUnicodeExtraFields,
                              boolean allowStoredEntriesWithDataDescriptor) {
     zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
     this.useUnicodeExtraFields = useUnicodeExtraFields;
     in = new PushbackInputStream(inputStream, buf.capacity());
     this.allowStoredEntriesWithDataDescriptor =
         allowStoredEntriesWithDataDescriptor;
+    // need to read the zip archive's LOCAL HEADER part
+    // which is 30 bytes long
+    byte[] localHeader = new byte[30];
+    in.read(localHeader);
     // haven't read anything so far
 }
\ No newline at end of file
