diff --git a/tmp/19776e6a-2549-4beb-87a9-7edc2485a2a6_buggy.java b/tmp/816742ef-ff7d-4096-8d21-e1755c14c71a_fixed.java
index 939f49b..94012ef 100644
--- a/tmp/19776e6a-2549-4beb-87a9-7edc2485a2a6_buggy.java
+++ b/tmp/816742ef-ff7d-4096-8d21-e1755c14c71a_fixed.java
@@ -1,21 +1,29 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
+      Node child = n.getFirstChild().getFirstChild();
 
-          if (child.getType() == Token.STRING &&
-              child.getString().equals("prototype")) {
+      // Check if the property is 'prototype'
+      if (child.getType() == Token.GETPROP
+          && child.getString().equals("prototype")) {
+        return true;
+      }
+
+      // Check if the property is accessed through an alias
+      Node grandChild = child.getNext();
+      if (grandChild!= null && grandChild.getType() == Token.GETPROP
+          && grandChild.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
