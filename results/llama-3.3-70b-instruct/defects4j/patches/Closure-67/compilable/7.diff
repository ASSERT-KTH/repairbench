diff --git a/tmp/0beda2e9-e1fc-482f-bccf-ed35f3ed6a1f_buggy.java b/tmp/6b5ae254-7e19-461d-a766-9a1dded839d1_fixed.java
index 939f49b..6ce8169 100644
--- a/tmp/0beda2e9-e1fc-482f-bccf-ed35f3ed6a1f_buggy.java
+++ b/tmp/6b5ae254-7e19-461d-a766-9a1dded839d1_fixed.java
@@ -1,21 +1,28 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
-          if (child.getType() == Token.STRING &&
+      if (child!= null && child.getType() == Token.STRING &&
+          child.getString().equals("prototype")) {
+        return true;
+      }
+    } else if (n.getFirstChild().getType() == Token.GETPROP) {
+      Node child = n.getFirstChild().getFirstChild().getNext();
+
+      if (child!= null && child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file
