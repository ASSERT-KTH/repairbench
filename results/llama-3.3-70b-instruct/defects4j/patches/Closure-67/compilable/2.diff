diff --git a/tmp/0b810b21-ddc4-4c63-8473-291e3c66fa80_buggy.java b/tmp/c1f5176b-4be9-4d7f-b539-6ae22292d771_fixed.java
index 939f49b..69f70a2 100644
--- a/tmp/0b810b21-ddc4-4c63-8473-291e3c66fa80_buggy.java
+++ b/tmp/c1f5176b-4be9-4d7f-b539-6ae22292d771_fixed.java
@@ -1,21 +1,26 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
       ) {
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
-          Node child = n.getFirstChild().getFirstChild().getNext();
-
-          if (child.getType() == Token.STRING &&
+      Node child = n.getFirstChild();
+      while (child!= null && child.getType() == Token.GETPROP) {
+        child = child.getFirstChild();
+      }
+      if (child!= null && child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
+    } else if (n.getFirstChild().getType() == Token.STRING &&
+               n.getFirstChild().getString().equals("prototype")) {
+      return true;
     }
   }
 
   return false;
 }
\ No newline at end of file
