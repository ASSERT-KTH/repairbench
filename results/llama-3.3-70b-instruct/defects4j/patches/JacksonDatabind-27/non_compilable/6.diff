diff --git a/tmp/2d226b60-6c14-4645-8258-5a78518be116_buggy.java b/tmp/eb657230-3a50-42fe-8fd6-5e2cb0f68ef0_fixed.java
index 5bc9804..215dac4 100644
--- a/tmp/2d226b60-6c14-4645-8258-5a78518be116_buggy.java
+++ b/tmp/eb657230-3a50-42fe-8fd6-5e2cb0f68ef0_fixed.java
@@ -1,85 +1,105 @@
 @SuppressWarnings("resource")
 protected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p, DeserializationContext ctxt)
     throws IOException
 {
     final ExternalTypeHandler ext = _externalTypeIdHandler.start();
     final PropertyBasedCreator creator = _propertyBasedCreator;
     PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);
 
+    JsonToken t = p.getCurrentToken();
+    SettableBeanProperty idProp = null;
+    // Try to find type id property first
+    for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
+        String propName = p.getCurrentName();
+        if (propName.equals(ext.getTypePropertyName())) {
+            p.nextToken(); // to point to value
+            // Read type id
+            idProp = creator.findCreatorProperty(propName);
+            if (idProp!= null) {
+                // First creator property to set
+                buffer.assignParameter(idProp, _deserializeWithErrorWrapping(p, ctxt, idProp));
+            } else {
+                throw new JsonMappingException(p, "No creator property for external type id");
+            }
+        } else {
+            p.nextToken(); // to point to value
+        }
+    }
+    p.setCurrentToken(t); // Reset current token
+    t = p.getCurrentToken();
     TokenBuffer tokens = new TokenBuffer(p);
     tokens.writeStartObject();
 
-        JsonToken t = p.getCurrentToken();
     for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {
         String propName = p.getCurrentName();
         p.nextToken(); // to point to value
         // creator property?
         SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
         if (creatorProp!= null) {
             // first: let's check to see if this might be part of value with external type id:
             // 11-Sep-2015, tatu: Important; do NOT pass buffer as last arg, but null,
             //   since it is not the bean
             if (ext.handlePropertyValue(p, ctxt, propName, buffer)) {
                 ;
             } else {
                 // Last creator property to set?
                 if (buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {
                     t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
                     Object bean;
                     try {
                         bean = creator.build(ctxt, buffer);
                     } catch (Exception e) {
                         wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                         continue; // never gets here
                     }
                     // if so, need to copy all remaining tokens into buffer
                     while (t == JsonToken.FIELD_NAME) {
                         p.nextToken(); // to skip name
                         tokens.copyCurrentStructure(p);
                         t = p.nextToken();
                     }
                     if (bean.getClass()!= _beanType.getRawClass()) {
                         //!!! 08-Jul-2011, tatu: Could theoretically support; but for now
                         //   it's too complicated, so bail out
                         throw ctxt.mappingException("Can not create polymorphic instances with unwrapped values");
                     }
                     return ext.complete(p, ctxt, bean);
                 }
             }
             continue;
         }
         // Object Id property?
         if (buffer.readIdProperty(propName)) {
             continue;
         }
         // regular property? needs buffering
         SettableBeanProperty prop = _beanProperties.find(propName);
         if (prop!= null) {
             buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
             continue;
         }
         // external type id (or property that depends on it)?
         if (ext.handlePropertyValue(p, ctxt, propName, null)) {
             continue;
         }
         /* As per [JACKSON-313], things marked as ignorable should not be
          * passed to any setter
          */
         if (_ignorableProps!= null && _ignorableProps.contains(propName)) {
             handleIgnoredProperty(p, ctxt, handledType(), propName);
             continue;
         }
         // "any property"?
         if (_anySetter!= null) {
             buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
         }
     }
 
     // We hit END_OBJECT; resolve the pieces:
     try {
         return ext.complete(p, ctxt, buffer, creator);
     } catch (Exception e) {
         wrapInstantiationProblem(e, ctxt);
         return null; // never gets here
     }
 }
\ No newline at end of file
