diff --git a/tmp/0ee08717-fac0-47a6-b541-107d9722bbbe_buggy.java b/tmp/957714d6-0b2c-46dd-a64d-1f94b7f2a385_fixed.java
index 19fe1b4..ba7e607 100644
--- a/tmp/0ee08717-fac0-47a6-b541-107d9722bbbe_buggy.java
+++ b/tmp/957714d6-0b2c-46dd-a64d-1f94b7f2a385_fixed.java
@@ -1,17 +1,33 @@
+/**
+ * Returns whether the given string is a valid JavaScript identifier.
+ * JavaScript identifiers are defined in section 7.6 of the ECMAScript standard.
+ * They are similar to Java identifiers, except they allow Unicode escape sequences.
+ *
+ * @param s the string to check
+ * @return whether the string is a valid JavaScript identifier
+ */
 public static boolean isJSIdentifier(String s) {
-      int length = s.length();
-
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+  // Check that the first character is a valid JavaScript identifier start character.
+  if (s.isEmpty() ||!isValidJSIdentifierStartChar(s.charAt(0))) {
     return false;
   }
 
-      for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+  // Check that all other characters are valid JavaScript identifier part characters.
+  for (int i = 1; i < s.length(); i++) {
+    if (!isValidJSIdentifierPartChar(s.charAt(i))) {
       return false;
     }
   }
 
   return true;
 }
+
+// JavaScript identifier start characters
+private static boolean isValidJSIdentifierStartChar(char c) {
+  return Character.isLetter(c) || c == '$' || c == '_';
+}
+
+// JavaScript identifier part characters
+private static boolean isValidJSIdentifierPartChar(char c) {
+  return Character.isLetterOrDigit(c) || c == '$' || c == '_';
+}
\ No newline at end of file
