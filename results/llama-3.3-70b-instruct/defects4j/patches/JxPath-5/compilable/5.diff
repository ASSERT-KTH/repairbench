diff --git a/tmp/2bfcdbe4-e0c8-4a83-978f-c7f9f13c170f_buggy.java b/tmp/804d9285-99ab-4ba9-86a5-c9950ea888c4_fixed.java
index 5f8ac1a..a2cbb16 100644
--- a/tmp/2bfcdbe4-e0c8-4a83-978f-c7f9f13c170f_buggy.java
+++ b/tmp/804d9285-99ab-4ba9-86a5-c9950ea888c4_fixed.java
@@ -1,34 +1,38 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
+    if (p1 == null && p2 == null) {
+        return 0;
+    }
+    if (p1.equals(p2)) {
+        return 0;
+    }
+    if (p1 == null || p2 == null) {
+        return p1 == null? -1 : 1;
+    }
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0? 1 : r;
     }
-        if (p1 == null && p2 == null) {
-            return 0;
+    if (p1.parent == null && p2.parent!= null) {
+        return -1;
     }
-
-        if (p1 != null && p1.equals(p2)) {
-            return 0;
+    if (p1.parent!= null && p2.parent == null) {
+        return 1;
     }
-
-        if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
+    if (p1.parent == null && p2.parent == null) {
+        return p1.compareChildNodePointers(p1, p2);
     }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r!= 0) {
         return r;
     }
-
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
