diff --git a/tmp/6281d469-e90e-4c04-af6a-bd2b5a3159da_buggy.java b/tmp/ee767148-45bc-4c69-b2fa-6caa71054bf8_fixed.java
index 5f8ac1a..65768de 100644
--- a/tmp/6281d469-e90e-4c04-af6a-bd2b5a3159da_buggy.java
+++ b/tmp/ee767148-45bc-4c69-b2fa-6caa71054bf8_fixed.java
@@ -1,34 +1,44 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
-        if (depth1 < depth2) {
-            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
-            return r == 0 ? -1 : r;
-        }
-        if (depth1 > depth2) {
-            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
-            return r == 0 ? 1 : r;
-        }
     if (p1 == null && p2 == null) {
         return 0;
     }
-
-        if (p1 != null && p1.equals(p2)) {
+    if (p1 == null) {
+        return -1;
+    }
+    if (p2 == null) {
+        return 1;
+    }
+    if (p1.equals(p2)) {
         return 0;
     }
-
-        if (depth1 == 1) {
+    if (p1.getDocument()!= p2.getDocument()) {
         throw new JXPathException(
                 "Cannot compare pointers that do not belong to the same tree: '"
                         + p1 + "' and '" + p2 + "'");
     }
-        int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
+
+    // Use absolute depth for comparison
+    int absDepth1 = p1.getDocument().getAbsoluteDepth(p1);
+    int absDepth2 = p2.getDocument().getAbsoluteDepth(p2);
+
+    if (absDepth1 < absDepth2) {
+        int r = compareNodePointers(p1, absDepth1, p2.parent, absDepth2 - 1);
+        return r == 0? -1 : r;
+    }
+    if (absDepth1 > absDepth2) {
+        int r = compareNodePointers(p1.parent, absDepth1 - 1, p2, absDepth2);
+        return r == 0? 1 : r;
+    }
+
+    int r = compareNodePointers(p1.parent, absDepth1 - 1, p2.parent, absDepth2 - 1);
     if (r!= 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
