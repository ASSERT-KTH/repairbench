diff --git a/tmp/818ac567-93d1-46ab-be1b-bbe3436b85fb_buggy.java b/tmp/ec83d52e-d900-46fa-82e0-32e1400f8367_fixed.java
index 5f8ac1a..de4470d 100644
--- a/tmp/818ac567-93d1-46ab-be1b-bbe3436b85fb_buggy.java
+++ b/tmp/ec83d52e-d900-46fa-82e0-32e1400f8367_fixed.java
@@ -1,34 +1,44 @@
 private int compareNodePointers(
     NodePointer p1,
     int depth1,
     NodePointer p2,
     int depth2) 
 {
+    if (p1 == null && p2 == null) {
+        return 0;
+    }
+
+    if (p1 == null || p2 == null) {
+        return p1 == null? -1 : 1;
+    }
+
+    if (p1.equals(p2)) {
+        return 0;
+    }
+
+    if (p1.isVariablePointer() || p2.isVariablePointer()) {
+        if (p1.isVariablePointer() &&!p2.isVariablePointer()) {
+            return -1;
+        } else if (!p1.isVariablePointer() && p2.isVariablePointer()) {
+            return 1;
+        } else {
+            return p1.toString().compareTo(p2.toString());
+        }
+    }
+
     if (depth1 < depth2) {
         int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
         return r == 0? -1 : r;
     }
     if (depth1 > depth2) {
         int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
         return r == 0? 1 : r;
     }
-        if (p1 == null && p2 == null) {
-            return 0;
-        }
 
-        if (p1 != null && p1.equals(p2)) {
-            return 0;
-        }
-
-        if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
-        }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r!= 0) {
         return r;
     }
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
\ No newline at end of file
