diff --git a/tmp/f0e447cd-03d1-4aef-9b6e-cfc946bd3db8_buggy.java b/tmp/2aa4bf8a-13e4-4198-aecb-d7db0e48e874_fixed.java
index 46817a7..e0d15ef 100644
--- a/tmp/f0e447cd-03d1-4aef-9b6e-cfc946bd3db8_buggy.java
+++ b/tmp/2aa4bf8a-13e4-4198-aecb-d7db0e48e874_fixed.java
@@ -1,16 +1,30 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
         if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+           !that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
                 getPropertyType(property))) {
+            return registry.createUnionType(this, that);
+        } else if (!that.toMaybeRecordType().hasProperty(property)) {
             builder.addProperty(property, getPropertyType(property),
                 getPropertyNode(property));
+        } else {
+            builder.addProperty(property, getPropertyType(property),
+                getPropertyNode(property));
+        }
+    }
+    for (String property : that.toMaybeRecordType().getProperties().keySet()) {
+        if (!this.hasProperty(property)) {
+            builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property),
+                that.toMaybeRecordType().getPropertyNode(property));
+        }
     }
+    if (builder.isEmpty()) {
+        return registry.createUnionType(this, that);
     }
     return builder.build();
 }
\ No newline at end of file
