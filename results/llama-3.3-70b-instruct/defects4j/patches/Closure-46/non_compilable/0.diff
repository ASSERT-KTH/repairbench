diff --git a/tmp/b5142e48-97ad-480a-97b5-afa8ef834a6d_buggy.java b/tmp/e5091870-efe6-4319-886a-dd1e371db3d5_fixed.java
index 46817a7..fcd9bcb 100644
--- a/tmp/b5142e48-97ad-480a-97b5-afa8ef834a6d_buggy.java
+++ b/tmp/e5091870-efe6-4319-886a-dd1e371db3d5_fixed.java
@@ -1,16 +1,28 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+    RecordType thisRecord = toMaybeRecordType();
+    RecordType thatRecord = that.toMaybeRecordType();
+    for (String property : thisRecord.getPropertyNames()) {
+        if (thisRecord.hasProperty(property) && thatRecord.hasProperty(property)) {
+            if (thisRecord.getPropertyType(property).isEquivalentTo(thatRecord.getPropertyType(property))) {
+                builder.addProperty(property, thisRecord.getPropertyType(property), thisRecord.getPropertyNode(property));
+            } else {
+                return super.getLeastSupertype(that);
             }
         }
+    }
+    // Add properties that are only in the other record
+    for (String property : thatRecord.getPropertyNames()) {
+        if (!thisRecord.hasProperty(property)) {
+            builder.addProperty(property, thatRecord.getPropertyType(property), thatRecord.getPropertyNode(property));
+        }
+    }
+    if (builder.getProperties().isEmpty()) {
+        return super.getLeastSupertype(that);
+    }
     return builder.build();
 }
\ No newline at end of file
