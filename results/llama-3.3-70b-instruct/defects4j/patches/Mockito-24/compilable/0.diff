diff --git a/tmp/1040227c-cb9d-442f-ade7-8b947079a0a5_buggy.java b/tmp/b2971692-46f4-42bb-9688-a2138b31f1d8_fixed.java
index 47915ed..0b1dfcf 100644
--- a/tmp/1040227c-cb9d-442f-ade7-8b947079a0a5_buggy.java
+++ b/tmp/b2971692-46f4-42bb-9688-a2138b31f1d8_fixed.java
@@ -1,22 +1,27 @@
 /* (non-Javadoc)
  * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
  */
 public Object answer(InvocationOnMock invocation) {
     if (methodsGuru.isToString(invocation.getMethod())) {
         Object mock = invocation.getMock();
         MockName name = mockUtil.getMockName(mock);
         if (name.isDefault()) {
-                return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
+            return "Mock for " + mockUtil.getMockName(invocation.getMock()) + ", hashCode: " + mock.hashCode();
         } else {
             return name.toString();
         }
     } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
+        // Check if the object is being compared to itself
+        Object arg0 = invocation.getArguments()[0];
+        if (invocation.getMock().equals(arg0)) {
+            // If the object is being compared to itself, return 0
+            return 0;
+        } else {
+            // If the object is being compared to a different object, return a value other than 0
             return 1;
         }
+    }
     
     Class<?> returnType = invocation.getMethod().getReturnType();
     return returnValueFor(returnType);
 }
\ No newline at end of file
