diff --git a/tmp/3e6598db-0ace-411b-bea7-90a49c4eb4d3_buggy.java b/tmp/3dcca453-dfbc-4d17-8da2-f63420f0b4b6_fixed.java
index 373b1e8..86a551c 100644
--- a/tmp/3e6598db-0ace-411b-bea7-90a49c4eb4d3_buggy.java
+++ b/tmp/3dcca453-dfbc-4d17-8da2-f63420f0b4b6_fixed.java
@@ -1,37 +1,40 @@
 private static boolean looksLikeUtf8(byte[] input) {
     int i = 0;
     // BOM:
     if (input.length >= 3 && (input[0] & 0xFF) == 0xEF
-                && (input[1] & 0xFF) == 0xBB & (input[2] & 0xFF) == 0xBF) {
+        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {
         i = 3;
     }
 
     int end;
-            for (int j = input.length; i < j; ++i) {
+    for (int j = i; i < input.length; ++i) {
         int o = input[i];
         if ((o & 0x80) == 0) {
             continue; // ASCII
         }
 
         // UTF-8 leading:
         if ((o & 0xE0) == 0xC0) {
-                    end = i + 1;
-                } else if ((o & 0xF0) == 0xE0) {
             end = i + 2;
-                } else if ((o & 0xF8) == 0xF0) {
+        } else if ((o & 0xF0) == 0xE0) {
             end = i + 3;
+        } else if ((o & 0xF8) == 0xF0) {
+            end = i + 4;
         } else {
             return false;
         }
 
+        if (end > input.length) {
+            return false;
+        }
 
-                while (i < end) {
-                    i++;
-                    o = input[i];
+        for (int k = i + 1; k < end; ++k) {
+            o = input[k];
             if ((o & 0xC0)!= 0x80) {
                 return false;
             }
         }
+        i = end - 1; // continue with the next character
     }
     return true;
 }
\ No newline at end of file
