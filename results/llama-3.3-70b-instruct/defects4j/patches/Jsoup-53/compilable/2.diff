diff --git a/tmp/4c01d8f8-7fbb-4be0-9410-d428405b156e_buggy.java b/tmp/16ed2087-b0d1-4c8b-9d81-c9ba48a5f71d_fixed.java
index fecb896..db5e5a3 100644
--- a/tmp/4c01d8f8-7fbb-4be0-9410-d428405b156e_buggy.java
+++ b/tmp/16ed2087-b0d1-4c8b-9d81-c9ba48a5f71d_fixed.java
@@ -1,34 +1,48 @@
 /**
  * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
  * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
  * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
  * contains text strings; use unescape for that.
  * @param open opener
  * @param close closer
  * @return data matched from the queue
  */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
+    char quote = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
-            if (last == 0 || last != ESC) {
+        if (last == ESC) {
+            last = c;
+            continue;
+        }
+        if (quote!= 0) {
+            if (c.equals(quote)) {
+                quote = 0;
+            }
+            last = c;
+            continue;
+        } else if (c.equals('\'') || c.equals('"')) {
+            quote = c;
+            last = c;
+            continue;
+        }
+
         if (c.equals(open)) {
             depth++;
             if (start == -1)
                 start = pos;
-                }
-                else if (c.equals(close))
+        } else if (c.equals(close))
             depth--;
-            }
 
         if (depth > 0 && last!= 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
-        } while (depth > 0);
+    } while (depth > 0 || quote!= 0);
     return (end >= 0)? queue.substring(start, end) : "";
 }
\ No newline at end of file
