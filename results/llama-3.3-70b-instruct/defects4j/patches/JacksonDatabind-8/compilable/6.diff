diff --git a/tmp/ee709488-88d3-4ff9-aba9-1019978cf7ed_buggy.java b/tmp/17530be5-9804-42b3-8faf-5609eb83c887_fixed.java
index c9da1b7..3b8c4bb 100644
--- a/tmp/ee709488-88d3-4ff9-aba9-1019978cf7ed_buggy.java
+++ b/tmp/17530be5-9804-42b3-8faf-5609eb83c887_fixed.java
@@ -1,33 +1,34 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
     // already had an explicitly marked one?
     if (oldOne!= null) {
 
         if ((_explicitCreators & mask)!= 0) { // already had explicitly annotated, leave as-is
             // but skip, if new one not annotated
             if (!explicit) {
                 return;
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
         }
 
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+            // Allow overriding of old creator with new one if it has the same class
+            _creators[typeIndex] = _fixAccess(newOne);
+            if (explicit) {
+                _explicitCreators |= mask;
             }
+            return;
         }
+    }
+    // If we reach here, then oldOne is null or oldOne's class is not the same as newOne's class
+    _creators[typeIndex] = _fixAccess(newOne);
     if (explicit) {
         _explicitCreators |= mask;
     }
-        _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file
