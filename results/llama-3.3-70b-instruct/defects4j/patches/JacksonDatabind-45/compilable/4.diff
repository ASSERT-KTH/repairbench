diff --git a/tmp/ac7ae910-9c9b-4cb1-beb6-75e2d4ae4942_buggy.java b/tmp/19f694e7-3794-462e-b508-694b2b9b1602_fixed.java
index 0dbce00..ca8a09e 100644
--- a/tmp/ac7ae910-9c9b-4cb1-beb6-75e2d4ae4942_buggy.java
+++ b/tmp/19f694e7-3794-462e-b508-694b2b9b1602_fixed.java
@@ -1,33 +1,40 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
         	// Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            if (format.getShape() == JsonFormat.Shape.STRING
+                    || format.hasPattern() || format.hasLocale() || format.getTimeZone()!= null) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
+            } else {
+                // If shape is ANY, default to user config
+                return withFormat(Boolean.valueOf(serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)), null);
             }
+        } else {
+            // If no @JsonFormat is found, default to user config
+            return withFormat(Boolean.valueOf(serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)), null);
         }
     }
     return this;
 }
\ No newline at end of file
