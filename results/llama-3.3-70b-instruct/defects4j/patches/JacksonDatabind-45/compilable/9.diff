diff --git a/tmp/7cdf3599-6282-4f15-b332-83ddd7a9eb3a_buggy.java b/tmp/9ce905f4-f0ab-4fbb-b582-d22527fecd96_fixed.java
index 0dbce00..518ecf0 100644
--- a/tmp/7cdf3599-6282-4f15-b332-83ddd7a9eb3a_buggy.java
+++ b/tmp/9ce905f4-f0ab-4fbb-b582-d22527fecd96_fixed.java
@@ -1,33 +1,57 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
+            } else if (shape == JsonFormat.Shape.ANY) {
+                // @JsonFormat with Shape.ANY and pattern => STRING shape, regardless of user config
+                if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                    TimeZone tz = format.getTimeZone();
+                    final String pattern = format.hasPattern()
+                                   ? format.getPattern()
+                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    final Locale loc = format.hasLocale()
+                                   ? format.getLocale()
+                                    : serializers.getLocale();
+                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    if (tz == null) {
+                        tz = serializers.getTimeZone();
                     }
+                    df.setTimeZone(tz);
+                    return withFormat(Boolean.FALSE, df);
                 }
             }
-        return this;
+        }
+    }
+    // No @JsonFormat => default to user config
+    if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+        return withFormat(Boolean.TRUE, null);
+    } else {
+        SimpleDateFormat df = new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale());
+        df.setTimeZone(serializers.getTimeZone());
+        return withFormat(Boolean.FALSE, df);
+    }
 }
\ No newline at end of file
