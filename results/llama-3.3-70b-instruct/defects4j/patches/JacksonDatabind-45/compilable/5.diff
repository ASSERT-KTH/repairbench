diff --git a/tmp/7e19267c-de5c-4e51-96ff-ab7348e6335e_buggy.java b/tmp/1ce14ad4-d7bb-4407-b486-8f16c633cc37_fixed.java
index 0dbce00..011956d 100644
--- a/tmp/7e19267c-de5c-4e51-96ff-ab7348e6335e_buggy.java
+++ b/tmp/1ce14ad4-d7bb-4407-b486-8f16c633cc37_fixed.java
@@ -1,33 +1,43 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+            // If no explicit shape, and WRITE_DATES_AS_TIMESTAMPS is enabled, serialize as numeric timestamp
+            if (shape == JsonFormat.Shape.ANY && serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                return withFormat(Boolean.TRUE, null);
+            }
+
+            if (format.getShape() == JsonFormat.Shape.STRING 
+                    || (format.getShape() == JsonFormat.Shape.ANY 
+                            && (format.hasPattern() || format.hasLocale() || format.hasTimeZone()))) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
         }
     }
-        return this;
+    // If neither of the above, use the default behavior based on SerializationFeature.WRITE_DATES_AS_TIMESTAMPS
+    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS) 
+           ? withFormat(Boolean.TRUE, null) 
+            : withFormat(Boolean.FALSE, null);
 }
\ No newline at end of file
