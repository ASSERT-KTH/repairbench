diff --git a/tmp/e7a597bc-c038-409e-b0ad-9aad5a7be800_buggy.java b/tmp/2b347816-39f5-43f9-a90b-669042b86d9a_fixed.java
index 0dbce00..2b9aa93 100644
--- a/tmp/e7a597bc-c038-409e-b0ad-9aad5a7be800_buggy.java
+++ b/tmp/2b347816-39f5-43f9-a90b-669042b86d9a_fixed.java
@@ -1,33 +1,72 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
-
-            	// Simple case first: serialize as numeric timestamp?
+            // If format has shape, use it
             JsonFormat.Shape shape = format.getShape();
+            if (shape!= null) {
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                if (shape == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                    ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                    ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
+            // If format has pattern, locale, or timezone but no shape, use string shape
+            else if (format.hasPattern() || format.hasLocale() || format.getTimeZone()!= null) {
+                TimeZone tz = format.getTimeZone();
+                final String pattern = format.hasPattern()
+                               ? format.getPattern()
+                                : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                final Locale loc = format.hasLocale()
+                               ? format.getLocale()
+                                : serializers.getLocale();
+                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                if (tz == null) {
+                    tz = serializers.getTimeZone();
+                }
+                df.setTimeZone(tz);
+                return withFormat(Boolean.FALSE, df);
+            }
+            // If format has no shape, pattern, locale, or timezone, use user config
+            else {
+                if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                    return withFormat(Boolean.TRUE, null);
+                } else {
+                    final String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                    final Locale loc = serializers.getLocale();
+                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    df.setTimeZone(serializers.getTimeZone());
+                    return withFormat(Boolean.FALSE, df);
+                }
+            }
+        } else {
+            // If no format annotation, use user config
+            if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {
+                return withFormat(Boolean.TRUE, null);
+            } else {
+                final String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                final Locale loc = serializers.getLocale();
+                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                df.setTimeZone(serializers.getTimeZone());
+                return withFormat(Boolean.FALSE, df);
+            }
+        }
     }
     return this;
 }
\ No newline at end of file
