diff --git a/tmp/69579670-0800-402a-ac2d-6ea2cacc789b_buggy.java b/tmp/06f8f40b-b426-41ec-bf0c-bbd844296681_fixed.java
index 0dbce00..dac0357 100644
--- a/tmp/69579670-0800-402a-ac2d-6ea2cacc789b_buggy.java
+++ b/tmp/06f8f40b-b426-41ec-bf0c-bbd844296681_fixed.java
@@ -1,33 +1,54 @@
 @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
+public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException
 {
     if (property!= null) {
         JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
         if (format!= null) {
 
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
+            if (shape == JsonFormat.Shape.NUMERIC) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             if (format.getShape() == JsonFormat.Shape.STRING) {
                 TimeZone tz = format.getTimeZone();
                 final String pattern = format.hasPattern()
                                ? format.getPattern()
                                 : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                 final Locale loc = format.hasLocale()
                                ? format.getLocale()
                                 : serializers.getLocale();
                 SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
+
+            // if shape is JsonFormat.Shape.ANY, it defaults to STRING shape, 
+            // regardless of user config if pattern, locale or timezone is specified
+            if (shape == JsonFormat.Shape.ANY && (format.hasPattern() || format.hasLocale() || format.getTimeZone()!= null)) {
+                final String pattern = format.hasPattern()
+                               ? format.getPattern()
+                                : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                final Locale loc = format.hasLocale()
+                               ? format.getLocale()
+                                : serializers.getLocale();
+                TimeZone tz = format.getTimeZone();
+                if (tz == null) {
+                    tz = serializers.getTimeZone();
                 }
+                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                df.setTimeZone(tz);
+                return withFormat(Boolean.FALSE, df);
             }
-        return this;
+        }
+    }
+    // if @JsonFormat is not present or shape is JsonFormat.Shape.ANY without pattern, locale or timezone,
+    // default to user config
+    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
+           ? withFormat(Boolean.TRUE, null)
+            : withFormat(Boolean.FALSE, null);
 }
\ No newline at end of file
