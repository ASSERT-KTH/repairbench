diff --git a/tmp/df299748-1640-4682-872a-8e4560c79846_buggy.java b/tmp/8baff974-a0f8-42af-81c0-05b9269951e1_fixed.java
index 2d9cf24..956fcb0 100644
--- a/tmp/df299748-1640-4682-872a-8e4560c79846_buggy.java
+++ b/tmp/8baff974-a0f8-42af-81c0-05b9269951e1_fixed.java
@@ -1,33 +1,37 @@
 public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
 {
     // There are certain nasty classes that could cause problems, mostly
     // via default typing -- catch them here.
     final Class<?> raw = type.getRawClass();
+    if (raw == null) {
+        throw JsonMappingException.from(ctxt,
+                String.format("Raw class of type (%s) is null", type));
+    }
     String full = raw.getName();
 
     main_check:
     do {
         if (_cfgIllegalClassNames.contains(full)) {
             break;
         }
 
         // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
         //    for some Spring framework types
         // 05-Jan-2017, tatu:... also, only applies to classes, not interfaces
         if (full.startsWith(PREFIX_STRING)) {
             for (Class<?> cls = raw; cls!= Object.class; cls = cls.getSuperclass()) {
                 String name = cls.getSimpleName();
                 // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
                 if ("AbstractPointcutAdvisor".equals(name)
                         // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                         || "AbstractApplicationContext".equals(name)) {
                     break main_check;
                 }
             }
         }
         return;
     } while (false);
 
     throw JsonMappingException.from(ctxt,
             String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
 }
\ No newline at end of file
