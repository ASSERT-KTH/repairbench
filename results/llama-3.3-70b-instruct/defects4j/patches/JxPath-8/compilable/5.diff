diff --git a/tmp/03f4d9c9-3222-404a-bb3e-9b774df0aa5f_buggy.java b/tmp/80932e7a-7f88-43bb-8ef7-00e7b75df0cb_fixed.java
index 98d89dc..49db25f 100644
--- a/tmp/03f4d9c9-3222-404a-bb3e-9b774df0aa5f_buggy.java
+++ b/tmp/80932e7a-7f88-43bb-8ef7-00e7b75df0cb_fixed.java
@@ -1,23 +1,29 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+    
+    // Check for NaN before comparing
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
         return evaluateCompare(ld == rd? 0 : ld < rd? -1 : 1);
     }
+    
+    return evaluateCompare(ld < rd? -1 : ld > rd? 1 : 0);
+}
\ No newline at end of file
