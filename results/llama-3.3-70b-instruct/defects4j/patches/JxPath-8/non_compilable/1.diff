diff --git a/tmp/c462bf88-071b-4093-8db3-54e9769b6a83_buggy.java b/tmp/cfa6ced9-cadf-4002-8f6e-e249d09e8c11_fixed.java
index 98d89dc..f563cec 100644
--- a/tmp/c462bf88-071b-4093-8db3-54e9769b6a83_buggy.java
+++ b/tmp/cfa6ced9-cadf-4002-8f6e-e249d09e8c11_fixed.java
@@ -1,23 +1,33 @@
 private boolean compute(Object left, Object right) {
     left = reduce(left);
     right = reduce(right);
 
     if (left instanceof InitialContext) {
         ((InitialContext) left).reset();
     }
     if (right instanceof InitialContext) {
         ((InitialContext) right).reset();
     }
     if (left instanceof Iterator && right instanceof Iterator) {
         return findMatch((Iterator) left, (Iterator) right);
     }
     if (left instanceof Iterator) {
         return containsMatch((Iterator) left, right);
     }
     if (right instanceof Iterator) {
         return containsMatch((Iterator) right, left);
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    // Check for NaN before comparison
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        if (ld == rd) { // NaN is not equal to anything, including itself, but in XPath, NaN is equal to NaN
+            return evaluateCompare(0);
+        } else {
+            return evaluateCompare(Double.NaN); // This will result in false for all comparisons
+        }
+    }
+
     return evaluateCompare(ld == rd? 0 : ld < rd? -1 : 1);
 }
\ No newline at end of file
