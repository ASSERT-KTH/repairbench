diff --git a/tmp/4f1a84a1-bb10-42a0-b815-3321111df28e_buggy.java b/tmp/b7c126b6-cf0d-4cd7-95bc-137af2aca112_fixed.java
index 9353941..3579d34 100644
--- a/tmp/4f1a84a1-bb10-42a0-b815-3321111df28e_buggy.java
+++ b/tmp/b7c126b6-cf0d-4cd7-95bc-137af2aca112_fixed.java
@@ -1,30 +1,34 @@
 /**
  * Give an expression and a variable. It returns READ, if the first
  * reference of that variable is a read. It returns KILL, if the first
  * reference of that variable is an assignment. It returns MAY_LIVE otherwise.
  */
 private VariableLiveness isVariableReadBeforeKill(
     Node n, String variable) {
+  if (n == null) {
+    return VariableLiveness.MAYBE_LIVE;
+  }
+
   if (NodeUtil.isName(n) && variable.equals(n.getString())) {
     if (NodeUtil.isLhs(n, n.getParent())) {
       // The expression to which the assignment is made is evaluated before
       // the RHS is evaluated (normal left to right evaluation) but the KILL
       // occurs after the RHS is evaluated.
       return VariableLiveness.KILL;
     } else {
       return VariableLiveness.READ;
     }
   }
 
   // Expressions are evaluated left-right, depth first.
   for (Node child = n.getFirstChild();
       child!= null; child = child.getNext()) {
     if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
       VariableLiveness state = isVariableReadBeforeKill(child, variable);
       if (state!= VariableLiveness.MAYBE_LIVE) {
         return state;
       }
     }
   }
   return VariableLiveness.MAYBE_LIVE;
 }
\ No newline at end of file
