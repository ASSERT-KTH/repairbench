diff --git a/tmp/af9174a5-3719-4cde-b0c6-8e01542b1e82_buggy.java b/tmp/4d9c21a4-f51a-4020-9b49-f6cd28d8beb7_fixed.java
index 19fd63e..6d9ecb5 100644
--- a/tmp/af9174a5-3719-4cde-b0c6-8e01542b1e82_buggy.java
+++ b/tmp/4d9c21a4-f51a-4020-9b49-f6cd28d8beb7_fixed.java
@@ -1,24 +1,38 @@
 /**
  * @return Whether the node is a block with a single statement that is
-   *     an expression.
+ *     an expression, except for event handler properties.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
       // IE has a bug where event handlers behave differently when
       // their return value is used vs. when their return value is in
       // an EXPR_RESULT. It's pretty freaking weird. See:
       // http://code.google.com/p/closure-compiler/issues/detail?id=291
       // We try to detect this case, and not fold EXPR_RESULTs
       // into other expressions.
 
       // We only have to worry about methods with an implicit 'this'
       // param, or this doesn't happen.
 
-          return NodeUtil.isExpressionNode(maybeExpr);
+      if (NodeUtil.isExpressionNode(maybeExpr) 
+          && maybeExpr.getType()!= Token.GETPROP 
+          && maybeExpr.getType()!= Token.GET_ELEM 
+          &&!isEventHandlerProperty(maybeExpr)) {
+        return true;
+      }
     }
   }
 
   return false;
 }
+
+// Helper function to check if a node represents an event handler property
+private boolean isEventHandlerProperty(Node n) {
+  if (n.getType()!= Token.GETPROP && n.getType()!= Token.GET_ELEM) {
+    return false;
+  }
+  String propName = n.getString();
+  return propName.startsWith("on");
+}
\ No newline at end of file
