diff --git a/tmp/bdf7a2a7-fae0-4489-8ca7-8a41c364b7f8_buggy.java b/tmp/efdfd815-844a-44fa-a19a-1764de5d1a54_fixed.java
index 800e6e1..a5f596d 100644
--- a/tmp/bdf7a2a7-fae0-4489-8ca7-8a41c364b7f8_buggy.java
+++ b/tmp/efdfd815-844a-44fa-a19a-1764de5d1a54_fixed.java
@@ -1,32 +1,34 @@
 /**
  * Visit a node in a local scope, and add any local variables or catch
  * parameters into the local symbol table.
  *
  * @param t The node traversal.
  * @param n The node being visited.
  * @param parent The parent of n
  */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
   if (n.getType() == Token.LP && parent == scope.getRootNode()) {
     handleFunctionInputs(parent);
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
-          if (parent.getType() == Token.NAME) {
+      if (parent.getType() == Token.NAME && n.getParent().getType() == Token.BLOCK) {
+        defineStubFunction(n, parent);
+      } else if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file
