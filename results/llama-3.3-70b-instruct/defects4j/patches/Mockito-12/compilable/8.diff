diff --git a/tmp/3d8cc09f-8986-4e6b-9009-66d1d3acf617_buggy.java b/tmp/76b8286c-21ff-4dcf-8a79-e7f20bd03da9_fixed.java
index bada2b6..60e5f95 100644
--- a/tmp/3d8cc09f-8986-4e6b-9009-66d1d3acf617_buggy.java
+++ b/tmp/76b8286c-21ff-4dcf-8a79-e7f20bd03da9_fixed.java
@@ -1,16 +1,26 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
 public Class getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic!= null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        // handle nested generics
+        if (actual instanceof ParameterizedType) {
+            return Object.class; // cannot resolve nested generics
+        } else {
+            try {
+                // attempt to cast the type to a Class
                 return (Class) actual;
-                //in case of nested generics we don't go deep
+            } catch (ClassCastException e) {
+                // if the cast fails, return Object.class
+                return Object.class;
+            }
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
