diff --git a/tmp/d059ca0b-02c7-4119-a8f4-e5174ecbcfc7_buggy.java b/tmp/81e1f017-c373-4dbd-9a1f-8df25a126dd4_fixed.java
index bada2b6..7b879a1 100644
--- a/tmp/d059ca0b-02c7-4119-a8f4-e5174ecbcfc7_buggy.java
+++ b/tmp/81e1f017-c373-4dbd-9a1f-8df25a126dd4_fixed.java
@@ -1,16 +1,19 @@
 /**
  * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
  * 
  * @param field
  * @return
  */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic!= null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file
