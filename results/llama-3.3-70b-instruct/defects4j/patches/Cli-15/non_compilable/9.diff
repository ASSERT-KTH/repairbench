diff --git a/tmp/10a7316e-5751-468e-909b-dc53d55f97ea_buggy.java b/tmp/2751f360-159e-4584-9be4-993d6223d9da_fixed.java
index 4e8b037..010ede4 100644
--- a/tmp/10a7316e-5751-468e-909b-dc53d55f97ea_buggy.java
+++ b/tmp/2751f360-159e-4584-9be4-993d6223d9da_fixed.java
@@ -1,20 +1,39 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
     // grab the correct default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
     // augment the list with the default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
+
+    // if there are more default values as specified, add them to the list
+    if (valueList!= null &&!valueList.isEmpty()) {
         // copy the list first
+        Listaug = new ArrayList<>(valueList);
+        List defaults = (List) this.defaultValues.get(option);
+        if (defaults!= null) {
+            int max = ((Argument) option.getArgument()).getMaximum();
+            int min = ((Argument) option.getArgument()).getMinimum();
+            int size = valueList.size();
+            int add = Math.max(0, min - size);
+
+            // Ensure we don't add more defaults than the maximum argument count allows
+            int maxAdd = Math.max(0, max - size);
+
+            for (int i = 0; i < Math.min(add, maxAdd); i++) {
+                if (i < defaults.size()) {
+                    aug.add(defaults.get(i));
+                }
+            }
+            valueList = aug;
+        }
+    }
 
     return valueList == null? Collections.EMPTY_LIST : valueList;
 }
\ No newline at end of file
