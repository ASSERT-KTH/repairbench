diff --git a/tmp/73d7decd-a106-4ad2-92b7-6843ebeaedc3_buggy.java b/tmp/ba83a028-78b0-4cba-8d4e-959e66d0881b_fixed.java
index 4e8b037..8e085dd 100644
--- a/tmp/73d7decd-a106-4ad2-92b7-6843ebeaedc3_buggy.java
+++ b/tmp/ba83a028-78b0-4cba-8d4e-959e66d0881b_fixed.java
@@ -1,20 +1,41 @@
-    public List getValues(final Option option,
-                          List defaultValues) {
+public List getValues(final Option option, List defaultValues) {
     // initialize the return list
     List valueList = (List) values.get(option);
 
     // grab the correct default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = defaultValues;
     }
 
     // augment the list with the default values
     if ((valueList == null) || valueList.isEmpty()) {
         valueList = (List) this.defaultValues.get(option);
     }
-                // if there are more default values as specified, add them to
-                // the list.
-                    // copy the list first
 
-        return valueList == null ? Collections.EMPTY_LIST : valueList;
+    if (valueList!= null &&!valueList.isEmpty()) {
+        List defaultList = (List) this.defaultValues.get(option);
+        if (defaultList!= null &&!defaultList.isEmpty()) {
+            // calculate how many default values to add
+            int numToAdd = option.getArgument().getMaximum() - valueList.size();
+            int numInDefault = defaultList.size();
+            int startAt = 0;
+            List dl = new ArrayList(defaultList);
+            // remove all arguments that were already found
+            for (Object o : valueList) {
+                if (dl.contains(o)) {
+                    dl.remove(o);
+                }
+            }
+            numInDefault = dl.size();
+            if (numToAdd > numInDefault) {
+                numToAdd = numInDefault;
+            }
+            // add the default values to the end of the list
+            for (int i = 0; i < numToAdd; i++) {
+                valueList.add(defaultList.get(startAt + i));
+            }
+        }
+    }
+
+    return valueList == null? Collections.emptyList() : valueList;
 }
\ No newline at end of file
