diff --git a/tmp/a4708e44-0b20-4cef-bd5e-89493419469b_buggy.java b/tmp/73f0dab2-ce5b-4a70-a567-11862c6173a0_fixed.java
index 4bbd561..11ae95f 100644
--- a/tmp/a4708e44-0b20-4cef-bd5e-89493419469b_buggy.java
+++ b/tmp/73f0dab2-ce5b-4a70-a567-11862c6173a0_fixed.java
@@ -1,37 +1,47 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    // Protect from ArrayIndexOutOfBounds
+    if(index + 1 < input.length() && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
+        if(start < input.length()) {
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
 
             int end = start;
-            while(input.charAt(end) != ';') {
+            while(end < input.length() && input.charAt(end)!= ';') {
                 end++;
             }
 
+            if (end < input.length()) {
                 int entityValue;
                 try {
                     if(isHex) {
                         entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                     } else {
                         entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                     }
                 } catch(NumberFormatException nfe) {
                     return 0;
                 }
 
+                if (entityValue > 0xFFFF) {
+                    out.write(((entityValue >> 10) + 0xD800));
+                    out.write(((entityValue & 0x3FF) + 0xDC00));
+                } else {
                     out.write(entityValue);
+                }
                 return 2 + (end - start) + (isHex? 1 : 0) + 1;
             }
+        }
+        return 0;
+    }
     return 0;
 }
\ No newline at end of file
