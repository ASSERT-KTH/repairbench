diff --git a/tmp/c4c37a79-e095-48a3-b2ff-70b810995b99_buggy.java b/tmp/15899614-d9f7-48c8-a54f-288c243123ee_fixed.java
index 4bbd561..9291fda 100644
--- a/tmp/c4c37a79-e095-48a3-b2ff-70b810995b99_buggy.java
+++ b/tmp/15899614-d9f7-48c8-a54f-288c243123ee_fixed.java
@@ -1,37 +1,47 @@
 /**
  * {@inheritDoc}
  */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    // Protect from ArrayIndexOutOfBounds
+    if (index + 1 < input.length() && input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
         int start = index + 2;
         boolean isHex = false;
 
+        if (start < input.length()) {
             char firstChar = input.charAt(start);
             if (firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
+        }
 
         int end = start;
-            while(input.charAt(end) != ';') {
+        while (end < input.length() && input.charAt(end)!= ';') {
             end++;
         }
 
+        if (end < input.length()) {
             int entityValue;
             try {
                 if (isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
-            } catch(NumberFormatException nfe) {
-                return 0;
-            }
 
+                if (entityValue > 0xFFFF) {
+                    // Unicode supplementary character
+                    out.write(Character.toChars(entityValue));
+                } else {
                     out.write(entityValue);
+                }
+            } catch (NumberFormatException nfe) {
+                return 0;
+            }
+
             return 2 + (end - start) + (isHex? 1 : 0) + 1;
         }
+    }
     return 0;
 }
\ No newline at end of file
