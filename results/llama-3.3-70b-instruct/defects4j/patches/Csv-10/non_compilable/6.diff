diff --git a/tmp/315b7e54-b095-41c2-bdff-353ee812bdee_buggy.java b/tmp/9baae4e1-c743-47a4-abe0-6cc972dda49f_fixed.java
index 97f28e5..af3206f 100644
--- a/tmp/315b7e54-b095-41c2-bdff-353ee812bdee_buggy.java
+++ b/tmp/9baae4e1-c743-47a4-abe0-6cc972dda49f_fixed.java
@@ -1,26 +1,30 @@
 /**
  * Creates a printer that will print values to the given stream following the CSVFormat.
  * <p>
  * Currently, only a pure encapsulation format or a pure escaping format is supported. Hybrid formats (encapsulation
  * and escaping with a different character) are not supported.
  * </p>
  * 
  * @param out
  *        stream to which to print. Must not be null.
  * @param format
  *        the CSV format. Must not be null.
  * @throws IOException
  *         thrown if the optional header cannot be printed.
  * @throws IllegalArgumentException
  *         thrown if the parameters of the format are inconsistent or if either out or format are null.
  */
 public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {
     Assertions.notNull(out, "out");
     Assertions.notNull(format, "format");
 
     this.out = out;
     this.format = format;
     this.format.validate();
-        // TODO: Is it a good idea to do this here instead of on the first call to a print method?
-        // It seems a pain to have to track whether the header has already been printed or not.
+    // Print header if present
+    if (this.format.getHeader()!= null) {
+        printHeader(this.format.getHeader());
     }
+}
+
+// Assuming printHeader function is already implemented to handle printing of headers.
\ No newline at end of file
