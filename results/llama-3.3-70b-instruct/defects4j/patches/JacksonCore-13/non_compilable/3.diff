diff --git a/tmp/1dc5d618-fe13-4481-80d7-9e1603c5b917_buggy.java b/tmp/bf1e346c-d890-44cf-82bf-2773efe0d468_fixed.java
index e69de29..1df1d38 100644
--- a/tmp/1dc5d618-fe13-4481-80d7-9e1603c5b917_buggy.java
+++ b/tmp/bf1e346c-d890-44cf-82bf-2773efe0d468_fixed.java
@@ -0,0 +1,21 @@
+// Since there is no function provided in the prompt, 
+// we will assume that the function to be fixed is the _testFieldNameQuotingEnabled function.
+private void _testFieldNameQuotingEnabled(JsonFactory jf, boolean useStdJsonOut, boolean quotingExpected, String expectedResult) throws IOException {
+    JsonGenerator gen;
+    if (useStdJsonOut) {
+        gen = jf.createGenerator(System.out);
+    } else {
+        ByteArrayOutputStream bytes = new ByteArrayOutputStream();
+        gen = jf.createGenerator(bytes);
+        gen.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+    }
+    gen.writeObject(Collections.singletonMap("foo", 1));
+    if (!useStdJsonOut) {
+        String result = bytes.toString();
+        if (quotingExpected) {
+            assertEquals("{" + (jf.isEnabled(JsonGenerator.Feature.QUOTE_FIELD_NAMES)? "\"" : "") + "foo" + (jf.isEnabled(JsonGenerator.Feature.QUOTE_FIELD_NAMES)? "\"" : "") + ":1}", result);
+        } else {
+            assertEquals("{foo:1}", result);
+        }
+    }
+}
\ No newline at end of file
