diff --git a/tmp/52ef042d-b300-45f1-bdef-0e3bf649e9bb_buggy.java b/tmp/2e344c61-a968-4bb7-94ee-8757db9592c4_fixed.java
index b36b2a9..f04ba36 100644
--- a/tmp/52ef042d-b300-45f1-bdef-0e3bf649e9bb_buggy.java
+++ b/tmp/2e344c61-a968-4bb7-94ee-8757db9592c4_fixed.java
@@ -1,26 +1,33 @@
 JSType meet(JSType that) {
   UnionTypeBuilder builder = new UnionTypeBuilder(registry);
   for (JSType alternate : alternates) {
     if (alternate.isSubtype(that)) {
       builder.addAlternate(alternate);
     }
   }
 
   if (that instanceof UnionType) {
     for (JSType otherAlternate : ((UnionType) that).alternates) {
       if (otherAlternate.isSubtype(this)) {
         builder.addAlternate(otherAlternate);
       }
     }
   } else if (that.isSubtype(this)) {
     builder.addAlternate(that);
   }
   JSType result = builder.build();
   if (result!= null) {
     return result;
   } else if (this.isObject() && that.isObject()) {
+    // Changed the order of the conditions to check for object first
     return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
   } else {
+    // Only return NO_TYPE if neither is an object
+    if (!this.isObject() &&!that.isObject()) {
       return getNativeType(JSTypeNative.NO_TYPE);
+    } else {
+      // If one of them is an object, return NO_OBJECT_TYPE
+      return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
+    }
   }
 }
\ No newline at end of file
