diff --git a/tmp/c70e710e-61a7-4744-ba83-0c96e4effc1b_buggy.java b/tmp/5579db09-52fc-455b-845e-1d3091f90fc1_fixed.java
index ec6c9ee..34f8565 100644
--- a/tmp/c70e710e-61a7-4744-ba83-0c96e4effc1b_buggy.java
+++ b/tmp/5579db09-52fc-455b-845e-1d3091f90fc1_fixed.java
@@ -1,21 +1,32 @@
-    //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
+        if (size == 2) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+            Object field = elementPairs.get(1);
+            if (field instanceof PeriodPrinter) {
+                sep = sep.finish((PeriodPrinter) field, null);
+                return new PeriodFormatter(sep, sep);
+            } else {
+                sep = sep.finish(null, (PeriodParser) field);
+                return new PeriodFormatter(sep, sep);
+            }
+        } else {
+            Separator sep = (Separator) elementPairs.get(0);
+            PeriodFormatter f = toFormatter(elementPairs.subList(1, size), notPrinter, notParser);
             sep = sep.finish(f.getPrinter(), f.getParser());
             return new PeriodFormatter(sep, sep);
         }
+    }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
