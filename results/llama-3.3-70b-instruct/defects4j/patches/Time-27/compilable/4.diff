diff --git a/tmp/fb1daf4e-e05c-4f02-bd4b-31d2a3060ba7_buggy.java b/tmp/7057b706-4db1-4a9b-b7c0-f5f0cda65525_fixed.java
index ec6c9ee..9cf8b03 100644
--- a/tmp/fb1daf4e-e05c-4f02-bd4b-31d2a3060ba7_buggy.java
+++ b/tmp/7057b706-4db1-4a9b-b7c0-f5f0cda65525_fixed.java
@@ -1,21 +1,27 @@
-    //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
     }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
+    } else {
+        // Handle null values in the composite array
+        if (comp[0] == null) {
+            return new PeriodFormatter(null, (PeriodParser) comp[1]);
+        } else if (comp[1] == null) {
+            return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
+}
\ No newline at end of file
