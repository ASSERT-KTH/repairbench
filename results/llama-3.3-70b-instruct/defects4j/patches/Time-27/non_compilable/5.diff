diff --git a/tmp/c2b0fc4f-3589-4cca-b6d4-fb1cc9afeabb_buggy.java b/tmp/8de7ef2a-da9f-4952-b0b3-7080d0bd7089_fixed.java
index ec6c9ee..58c0b1a 100644
--- a/tmp/c2b0fc4f-3589-4cca-b6d4-fb1cc9afeabb_buggy.java
+++ b/tmp/8de7ef2a-da9f-4952-b0b3-7080d0bd7089_fixed.java
@@ -1,21 +1,29 @@
-    //-----------------------------------------------------------------------
 private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
     if (notPrinter && notParser) {
         throw new IllegalStateException("Builder has created neither a printer nor a parser");
     }
     int size = elementPairs.size();
     if (size >= 2 && elementPairs.get(0) instanceof Separator) {
         Separator sep = (Separator) elementPairs.get(0);
         PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
         sep = sep.finish(f.getPrinter(), f.getParser());
         return new PeriodFormatter(sep, sep);
     }
+    // Fixed the code by changing the index in subList to 1
+    if (size >= 2 && elementPairs.get(1) instanceof Separator) {
+        Separator sep = (Separator) elementPairs.get(1);
+        PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+        sep = sep.finish(f.getPrinter(), f.getParser());
+        Object[] comp = createComposite(elementPairs.subList(0, 1));
+        return new PeriodFormatter(new CompositePeriodPrinter((PeriodPrinter) comp[0], sep), 
+                                   new CompositePeriodParser((PeriodParser) comp[0], sep));
+    }
     Object[] comp = createComposite(elementPairs);
     if (notPrinter) {
         return new PeriodFormatter(null, (PeriodParser) comp[1]);
     } else if (notParser) {
         return new PeriodFormatter((PeriodPrinter) comp[0], null);
     } else {
         return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
     }
 }
\ No newline at end of file
