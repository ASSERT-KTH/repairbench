diff --git a/tmp/e7e3e86e-4b5b-43d6-9fa9-7e3288627b35_buggy.java b/tmp/73d1a289-b9f8-4b5c-ba81-108f6b712a9a_fixed.java
index eea9e73..479d23a 100644
--- a/tmp/e7e3e86e-4b5b-43d6-9fa9-7e3288627b35_buggy.java
+++ b/tmp/73d1a289-b9f8-4b5c-ba81-108f6b712a9a_fixed.java
@@ -1,41 +1,42 @@
 /**
  * <p>Checks if the CharSequence contains any character in the given
  * set of characters.</p>
  *
  * <p>A <code>null</code> CharSequence will return <code>false</code>.
  * A <code>null</code> or zero length search array will return <code>false</code>.</p>
  *
  * <pre>
  * StringUtils.containsAny(null, *)                = false
  * StringUtils.containsAny("", *)                  = false
  * StringUtils.containsAny(*, null)                = false
  * StringUtils.containsAny(*, [])                  = false
  * StringUtils.containsAny("zzabyycdxx",['z','a']) = true
  * StringUtils.containsAny("zzabyycdxx",['b','y']) = true
  * StringUtils.containsAny("aba", ['z'])           = false
  * </pre>
  *
  * @param cs  the CharSequence to check, may be null
  * @param searchChars  the chars to search for, may be null
  * @return the <code>true</code> if any of the chars are found,
  * <code>false</code> if no match or null input
  * @since 2.4
  */
 public static boolean containsAny(CharSequence cs, char[] searchChars) {
     if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
         return false;
     }
     int csLength = cs.length();
-		int searchLength = searchChars.length;
     for (int i = 0; i < csLength; i++) {
-			char ch = cs.charAt(i);
-			for (int j = 0; j < searchLength; j++) {
-				if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+        int cp = cs.codePointAt(i);
+        for (char c : searchChars) {
+            if (cp == c) {
                 return true;
             }
         }
+        // If the character is a supplementary character, we need to skip the next code unit.
+        if (Character.isSupplementaryCodePoint(cp)) {
+            i++;
+        }
     }
     return false;
 }
\ No newline at end of file
