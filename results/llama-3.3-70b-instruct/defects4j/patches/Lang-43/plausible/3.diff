diff --git a/tmp/108f28c1-d6cc-4c77-9732-8b339f1962d9_buggy.java b/tmp/4978c3d2-6ec6-4336-87c2-3f42d0def100_fixed.java
index b6b11b6..e2bd0fb 100644
--- a/tmp/108f28c1-d6cc-4c77-9732-8b339f1962d9_buggy.java
+++ b/tmp/4978c3d2-6ec6-4336-87c2-3f42d0def100_fixed.java
@@ -1,38 +1,37 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
     if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+        if (appendTo!= null) {
+            appendTo.append(QUOTE);
+        }
+        next(pos);
+        return appendTo;
     }
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+        if (escapingOn && i + ESCAPED_QUOTE.length() - 1 < pattern.length()) {
+            if (pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
+                if (appendTo!= null) {
+                    appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);
+                }
                 pos.setIndex(i + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
                 continue;
             }
-            switch (c[pos.getIndex()]) {
+        }
+        switch (pattern.charAt(pos.getIndex())) {
         case QUOTE:
             next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
+            if (appendTo!= null) {
+                appendTo.append(c, lastHold, pos.getIndex() - lastHold);
+            }
+            return appendTo;
         default:
             next(pos);
         }
     }
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file
