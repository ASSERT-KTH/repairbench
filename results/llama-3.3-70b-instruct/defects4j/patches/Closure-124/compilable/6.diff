diff --git a/tmp/df911aa5-86db-4270-9710-c7aa4fb8735d_buggy.java b/tmp/09185dda-d270-430c-8f5b-b4dbbbf0592b_fixed.java
index 2573d30..25973dd 100644
--- a/tmp/df911aa5-86db-4270-9710-c7aa4fb8735d_buggy.java
+++ b/tmp/09185dda-d270-430c-8f5b-b4dbbbf0592b_fixed.java
@@ -1,20 +1,25 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  // Check for node chains (e.g., a.b.c) and verify that none of the names
+  // have been assigned to the replacement.
+  Node currentNode = node;
+  while (currentNode.isGetProp()) {
+    Node propNameNode = currentNode.getFirstChild();
+    if (propNameNode.isName() && isNameAssignedTo(propNameNode.getString(), replacement)) {
       return false;
     }
+    currentNode = propNameNode.getNext();
+  }
 
   return true;
 }
\ No newline at end of file
