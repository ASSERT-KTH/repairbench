diff --git a/tmp/24c5cd3e-73f5-4545-92a0-cfa30edb1f6d_buggy.java b/tmp/d93a8edb-52e5-43f8-8d6d-67762c22b07d_fixed.java
index 2573d30..d0dd866 100644
--- a/tmp/24c5cd3e-73f5-4545-92a0-cfa30edb1f6d_buggy.java
+++ b/tmp/d93a8edb-52e5-43f8-8d6d-67762c22b07d_fixed.java
@@ -1,20 +1,27 @@
 /**
  * Checks name referenced in node to determine if it might have
  * changed.
  * @return Whether the replacement can be made.
  */
 private boolean isSafeReplacement(Node node, Node replacement) {
   // No checks are needed for simple names.
   if (node.isName()) {
     return true;
   }
   Preconditions.checkArgument(node.isGetProp());
 
   node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+  if (node.isName() && isNameAssignedTo(node.getString(), replacement)) {
     return false;
   }
+  // Traverse the property access chain to check for assignments
+  Node tempNode = node;
+  while (tempNode.getParent()!= null && tempNode.getParent().isGetProp()) {
+    if (isNameAssignedTo(tempNode.getParent().getString(), replacement)) {
+      return false;
+    }
+    tempNode = tempNode.getParent();
+  }
 
   return true;
 }
\ No newline at end of file
