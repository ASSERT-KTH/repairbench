diff --git a/tmp/6fd2ab7d-5036-4d62-97d9-5f710061d049_buggy.java b/tmp/e977f02e-8e67-42e0-9f77-4f97a98f155a_fixed.java
index cc69d41..e111fc8 100644
--- a/tmp/6fd2ab7d-5036-4d62-97d9-5f710061d049_buggy.java
+++ b/tmp/e977f02e-8e67-42e0-9f77-4f97a98f155a_fixed.java
@@ -1,29 +1,32 @@
 /**
  * Create an Option using the current settings and with
  * the specified Option <code>char</code>.
  *
  * @param opt the <code>java.lang.String</code> representation
  * of the Option
  * @return the Option instance
  * @throws IllegalArgumentException if <code>opt</code> is not
  * a valid character.  See Option.
  */
 public static Option create(String opt) throws IllegalArgumentException
 {
-            // create the option
     Option option = new Option(opt, description);
-
-            // set the option properties
     option.setLongOpt(longopt);
     option.setRequired(required);
     option.setOptionalArg(optionalArg);
     option.setArgs(numberOfArgs);
     option.setType(type);
     option.setValueSeparator(valuesep);
     option.setArgName(argName);
-            // reset the OptionBuilder properties
-            OptionBuilder.reset();
-
-        // return the Option instance
+    // reset the OptionBuilder properties after creating the Option
+    OptionBuilder reset = OptionBuilder.reset();
+    description = reset.getDescription();
+    longopt = reset.getLongOpt();
+    required = reset.isRequired();
+    optionalArg = reset.isOptionalArg();
+    numberOfArgs = reset.getArgs();
+    type = reset.getType();
+    valuesep = reset.getValueSeparator();
+    argName = reset.getArgName();
     return option;
 }
\ No newline at end of file
