diff --git a/tmp/983f67f1-b0e8-4c33-9353-b61cdf7d2385_buggy.java b/tmp/bfd73095-926e-4c66-9c7e-8ae62c67cf38_fixed.java
index cae5e03..192fd19 100644
--- a/tmp/983f67f1-b0e8-4c33-9353-b61cdf7d2385_buggy.java
+++ b/tmp/bfd73095-926e-4c66-9c7e-8ae62c67cf38_fixed.java
@@ -1,33 +1,36 @@
 /*
  * (non-Javadoc)
  * 
  * @see java.io.InputStream#read(byte[], int, int)
  */
 @Override
 public int read(final byte[] dest, final int offs, final int len)
     throws IOException {
     if (offs < 0) {
         throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
     }
     if (len < 0) {
         throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
     }
     if (offs + len > dest.length) {
         throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                             + len + ") > dest.length(" + dest.length + ").");
     }
     if (this.in == null) {
         throw new IOException("stream closed");
     }
+    if (len == 0) {
+        return 0; // immediately return if len is 0
+    }
 
     final int hi = offs + len;
     int destOffs = offs;
     int b;
     while (destOffs < hi && ((b = read0()) >= 0)) {
         dest[destOffs++] = (byte) b;
         count(1);
     }
 
     int c = (destOffs == offs)? -1 : (destOffs - offs);
     return c;
 }
\ No newline at end of file
