diff --git a/tmp/e625224f-7bc1-4952-9481-b2ad91457a4c_buggy.java b/tmp/44c12ed8-2b8a-4698-b1a8-cfc50559ca3a_fixed.java
index 39dd8e7..a8f5cd8 100644
--- a/tmp/e625224f-7bc1-4952-9481-b2ad91457a4c_buggy.java
+++ b/tmp/44c12ed8-2b8a-4698-b1a8-cfc50559ca3a_fixed.java
@@ -1,30 +1,32 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") &&!tq.matchesWhitespace() &&!tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
     if (key.length()!= 0)
         return Attribute.createFromEncoded(key, value);
     else {
-            tq.consume();
-                
+        if (tq.isEmpty()) return null; // Consume the first character if there's no key
+        char c = tq.consume();
+        if (Character.isWhitespace(c)) return null;
+        tq.unconsume(c); // Put back the character if it's not whitespace
         return null;
     }
 }
\ No newline at end of file
