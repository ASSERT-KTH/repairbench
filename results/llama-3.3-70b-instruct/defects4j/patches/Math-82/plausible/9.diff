diff --git a/tmp/45829e06-b1ef-4561-a267-2422330e8c1e_buggy.java b/tmp/02b1f4b0-a8f8-46a6-9ad6-71fe32fbf767_fixed.java
index 220820e..639c334 100644
--- a/tmp/45829e06-b1ef-4561-a267-2422330e8c1e_buggy.java
+++ b/tmp/02b1f4b0-a8f8-46a6-9ad6-71fe32fbf767_fixed.java
@@ -1,22 +1,22 @@
 /**
  * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
  * @param tableau simple tableau for the problem
  * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
  * @return row with the minimum ratio
  */
 private Integer getPivotRow(final int col, final SimplexTableau tableau) {
     double minRatio = Double.MAX_VALUE;
     Integer minRatioPos = null;
     for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
         final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
         final double entry = tableau.getEntry(i, col);
-            if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
+        if (MathUtils.compareTo(entry, 0, epsilon) > 0) { // Changed >= to >
             final double ratio = rhs / entry;
-                if (ratio < minRatio) {
+            if (MathUtils.compareTo(ratio, minRatio, epsilon) < 0) { // Changed simple comparison to compareTo
                 minRatio = ratio;
                 minRatioPos = i;
             }
         }
     }
     return minRatioPos;
 }
\ No newline at end of file
