diff --git a/tmp/9828b40e-3022-43ee-b636-31c5390efea8_buggy.java b/tmp/9584d3f0-a42b-46be-a9ee-726ad9104156_fixed.java
index 139579d..28f0389 100644
--- a/tmp/9828b40e-3022-43ee-b636-31c5390efea8_buggy.java
+++ b/tmp/9584d3f0-a42b-46be-a9ee-726ad9104156_fixed.java
@@ -1,43 +1,13 @@
 // performance sensitive
 public boolean hasClass(String className) {
     final String classAttr = attributes.get("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
+    if (classAttr == null) return false;
 
-        if (len == 0 || len < wantLen) {
-            return false;
-        }
-
-        // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
-        }
-
-        // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+    final String[] classes = classAttr.split("\\s+");
+    for (String cls : classes) {
+        if (cls.equalsIgnoreCase(className)) {
             return true;
         }
-                    inClass = false;
     }
-            } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
-                }
-            }
-        }
-
-        // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
-        }
-
     return false;
 }
\ No newline at end of file
