diff --git a/tmp/a6f5cff8-fd50-463c-932d-e25c8eabfaec_buggy.java b/tmp/b2dca589-16b7-4db6-9ce8-6361f49a0d4c_fixed.java
index 08a41cf..4173634 100644
--- a/tmp/a6f5cff8-fd50-463c-932d-e25c8eabfaec_buggy.java
+++ b/tmp/b2dca589-16b7-4db6-9ce8-6361f49a0d4c_fixed.java
@@ -1,12 +1,18 @@
 /**
  * Overloaded version of {@link #readValue(InputStream)}.
  */
 public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
     throws IOException, JsonProcessingException
 {
     if (_dataFormatReaders!= null) {
         return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
     }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
+    // Validate encoding before creating a parser
+    try {
+        new String(src, offset, length, "UTF-8");
+    } catch (Exception e) {
+        throw new JsonProcessingException("Invalid UTF-8 encoding", e);
+    }
+    return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),
             true));
 }
\ No newline at end of file
