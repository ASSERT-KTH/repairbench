diff --git a/tmp/12ae455f-7fa8-409c-a32e-5d730f5ebd87_buggy.java b/tmp/00265cb4-6a5f-4561-a493-d5213e769651_fixed.java
index 08a41cf..8c1af31 100644
--- a/tmp/12ae455f-7fa8-409c-a32e-5d730f5ebd87_buggy.java
+++ b/tmp/00265cb4-6a5f-4561-a493-d5213e769651_fixed.java
@@ -1,12 +1,15 @@
 /**
  * Overloaded version of {@link #readValue(InputStream)}.
  */
 public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
     throws IOException, JsonProcessingException
 {
     if (_dataFormatReaders!= null) {
-            return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
+        return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false, _parserFactory.createParser(src, offset, length));
     }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
-                true));
+    JsonParser p = _considerFilter(_parserFactory.createParser(src, offset, length), true);
+    if (!p.canUseSchema(JsonFormatSchema.class)) {
+        throw new JsonParseException(p, "Can not read JSON with unadorned char array; encapsulate in JsonArray or other structure.");
+    }
+    return _bindAndReadValues(p);
 }
\ No newline at end of file
