diff --git a/tmp/c9e1def1-6359-4d18-b5cf-d57eef152713_buggy.java b/tmp/ba6676a9-176e-4225-a325-7ee66376ac98_fixed.java
index dc93be3..df435cb 100644
--- a/tmp/c9e1def1-6359-4d18-b5cf-d57eef152713_buggy.java
+++ b/tmp/ba6676a9-176e-4225-a325-7ee66376ac98_fixed.java
@@ -1,14 +1,18 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+    if (startTag.isSelfClosing() &&!Tag.isKnownTag(startTag.name())) {
         Element el = insertEmpty(startTag);
         stack.add(el);
         tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+    if (startTag.isSelfClosing() && Tag.isKnownTag(startTag.name())) {
+        insertEmpty(el);
+    } else {
         insert(el);
+    }
     return el;
 }
\ No newline at end of file
