diff --git a/tmp/4d106b5e-95ce-413d-809c-fddafff6a466_buggy.java b/tmp/037330d5-c572-4157-87b1-d5108eacba8c_fixed.java
index dc93be3..d156baa 100644
--- a/tmp/4d106b5e-95ce-413d-809c-fddafff6a466_buggy.java
+++ b/tmp/037330d5-c572-4157-87b1-d5108eacba8c_fixed.java
@@ -1,14 +1,21 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
+        Tag tag = Tag.valueOf(startTag.name());
+        Element el;
+        if (tag.isKnown() &&!tag.isSelfClosing()) {
+            el = new Element(tag, baseUri, startTag.attributes);
+            insert(el);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(tag.toString()));
+        } else {
+            el = insertEmpty(startTag);
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file
