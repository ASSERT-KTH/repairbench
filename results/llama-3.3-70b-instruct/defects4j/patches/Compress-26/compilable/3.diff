diff --git a/tmp/59610091-c7a2-463b-b800-04293b772a4b_buggy.java b/tmp/96225619-8a62-4d3f-b5ec-2fc3df518639_fixed.java
index 4b163f6..74990c6 100644
--- a/tmp/59610091-c7a2-463b-b800-04293b772a4b_buggy.java
+++ b/tmp/96225619-8a62-4d3f-b5ec-2fc3df518639_fixed.java
@@ -1,28 +1,34 @@
 /**
  * Skips the given number of bytes by repeatedly invoking skip on
  * the given input stream if necessary.
  *
  * <p>In a case where the stream's skip() method returns 0 before
  * the requested number of bytes has been skip this implementation
  * will fall back to using the read() method.</p>
  *
  * <p>This method will only skip less than the requested number of
  * bytes if the end of the input stream has been reached.</p>
  *
  * @param input stream to skip bytes in
  * @param numToSkip the number of bytes to skip
  * @return the number of bytes actually skipped
  * @throws IOException
  */
 public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+    long skipped = 0;
     while (numToSkip > 0) {
-            long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
+        long skip = input.skip(numToSkip);
+        if (skip > 0) {
+            skipped += skip;
+            numToSkip -= skip;
+        } else {
+            int ch = input.read();
+            if (ch == -1) {
                 break;
             }
-            numToSkip -= skipped;
+            skipped++;
+            numToSkip--;
         }
-            
-        return available - numToSkip;
+    }
+    return skipped;
 }
\ No newline at end of file
