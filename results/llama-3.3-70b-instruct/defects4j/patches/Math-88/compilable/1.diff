diff --git a/tmp/6827cff8-0789-4917-8efc-98eca7326f94_buggy.java b/tmp/d3dd6fcf-6e05-43ce-9a90-6778089ece44_fixed.java
index 544303b..4272646 100644
--- a/tmp/6827cff8-0789-4917-8efc-98eca7326f94_buggy.java
+++ b/tmp/d3dd6fcf-6e05-43ce-9a90-6778089ece44_fixed.java
@@ -1,29 +1,24 @@
 /**
  * Get the current solution.
  * <p>
  * {@link #solve} should be called first for this to be the optimal solution.
  * </p>
  * @return current solution
  */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
-            basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
+        Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+        coefficients[i] = basicRow == null? 0 : getEntry(basicRow, getRhsOffset());
+        if (restrictToNonNegative) {
             if (basicRow!= null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
+                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + coefficients.length; j++) {
+                    if (tableau.getEntry(basicRow, j) == 1 && j!= getNumObjectiveFunctions() + i) {
                         coefficients[i] = 0;
                     }
                 }
             }
         }
+    }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file
