diff --git a/tmp/1a49dec3-0d35-4f3e-bf8d-b5d008687ee9_buggy.java b/tmp/82862579-d982-4662-8d71-1d2beb9b7cae_fixed.java
index 5c5286c..bdddffe 100644
--- a/tmp/1a49dec3-0d35-4f3e-bf8d-b5d008687ee9_buggy.java
+++ b/tmp/82862579-d982-4662-8d71-1d2beb9b7cae_fixed.java
@@ -1,6 +1,22 @@
 public <T> void resetMock(T mock) {
     MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
     MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
+    MethodInterceptorFilter oldFilter = ((Factory) mock).getCallback(0);
+    if (oldFilter!= null) {
+        InvocationListeners invocationListeners = oldFilter.getInvocationListeners();
+        InvocationListener[] listeners = invocationListeners.getInvocationListeners();
+        if (listeners!= null && listeners.length > 0) {
+            MockSettingsImpl newSettings = (MockSettingsImpl) org.mockito.Mockito.withSettings()
+                   .invocationListeners(listeners)
+                   .defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS);
+            MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, newSettings);
+            ((Factory) mock).setCallback(0, newFilter);
+        } else {
             MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
             ((Factory) mock).setCallback(0, newFilter);
         }
+    } else {
+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
+        ((Factory) mock).setCallback(0, newFilter);
+    }
+}
\ No newline at end of file
