diff --git a/tmp/fb0bc86e-a17c-45fe-9cf1-55fc4c752eec_buggy.java b/tmp/43643fc5-2b35-49a9-99f9-6c0c8c906a6f_fixed.java
index 904dba7..8a55c9b 100644
--- a/tmp/fb0bc86e-a17c-45fe-9cf1-55fc4c752eec_buggy.java
+++ b/tmp/43643fc5-2b35-49a9-99f9-6c0c8c906a6f_fixed.java
@@ -1,46 +1,50 @@
 private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName!= null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
 
     b.append(getLevelName(warning? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt!= null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
 
       // padding equal to the excerpt and arrow at the end
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) { // Modified here
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {
             b.append(c);
           } else {
             b.append(' ');
           }
         }
+        if(charno == sourceExcerpt.length()) { // Added condition to print '^' when error is at the end of the line
+            b.append("^");
+        } else {
             b.append("^\n");
         }
       }
+    }
     return b.toString();
 }
\ No newline at end of file
