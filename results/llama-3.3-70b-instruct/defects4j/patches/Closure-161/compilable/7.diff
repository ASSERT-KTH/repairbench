diff --git a/tmp/cf45bbf2-31ad-41a7-b7b1-a1bd51767770_buggy.java b/tmp/ee6043e9-bd84-4a4e-96d9-7ef2fcc331dc_fixed.java
index 1303a19..0b97a04 100644
--- a/tmp/cf45bbf2-31ad-41a7-b7b1-a1bd51767770_buggy.java
+++ b/tmp/ee6043e9-bd84-4a4e-96d9-7ef2fcc331dc_fixed.java
@@ -1,45 +1,55 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
 
     if (right.getType()!= Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into
       // arrays, or strings to index into array methods.
       return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex!= index) {
       error(INVALID_GETELEM_INDEX_ERROR, right);
       return n;
     }
 
     if (intIndex < 0) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
     Node elem = left.getFirstChild();
-    for (int i = 0; elem != null && i < intIndex; i++) {
+    int childCount = 0;
+    while (elem!= null && childCount < intIndex) {
       elem = elem.getNext();
+      childCount++;
     }
 
     if (elem == null) {
+      // Check if there are enough children in the array
+      if (childCount <= left.getChildCount()) {
+        // If there are enough children, but the last child is not yet processed, 
+        // it's likely that the index is within bounds.
+        // This fixes the issue where the index is 1 when the array has at least 2 elements.
+        elem = left.getChildAtIndex(intIndex);
+      } else {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
       }
+    }
 
     if (elem.getType() == Token.EMPTY) {
       elem = NodeUtil.newUndefinedNode(elem);
     } else {
       left.removeChild(elem);
     }
 
     // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
 }
\ No newline at end of file
