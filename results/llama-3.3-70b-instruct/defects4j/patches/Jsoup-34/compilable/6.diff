diff --git a/tmp/b8fbfc81-46cf-4a97-98d4-f8e47ada52ff_buggy.java b/tmp/8e74bcbe-ca52-4463-833c-a2a022ba8341_fixed.java
index 21f64c6..abfac25 100644
--- a/tmp/b8fbfc81-46cf-4a97-98d4-f8e47ada52ff_buggy.java
+++ b/tmp/8e74bcbe-ca52-4463-833c-a2a022ba8341_fixed.java
@@ -1,23 +1,22 @@
 /**
  * Returns the number of characters between the current position and the next instance of the input sequence
  *
  * @param seq scan target
  * @return offset between current position and next instance of target. -1 if not found.
  */
 int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
     char startChar = seq.charAt(0);
     for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
+        if (startChar == input[offset]) {
             int i = offset + 1;
             int last = i + seq.length() - 1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            if (last < length) {
+                int j = 1;
+                for (; i < last && j < seq.length() && seq.charAt(j) == input[i]; i++, j++);
+                if (j == seq.length()) // found full sequence
                     return offset - pos;
             }
         }
+    }
     return -1;
 }
\ No newline at end of file
