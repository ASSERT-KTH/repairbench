diff --git a/tmp/659fba80-1afd-4015-a231-7c43441ae5be_buggy.java b/tmp/85241489-c673-4818-a5d6-c9751a76a079_fixed.java
index be2af16..fa2d338 100644
--- a/tmp/659fba80-1afd-4015-a231-7c43441ae5be_buggy.java
+++ b/tmp/85241489-c673-4818-a5d6-c9751a76a079_fixed.java
@@ -1,29 +1,32 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase())!= null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+            long julianInstant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
+            if (julianInstant < iCutoverMillis) {
+                // Okay, it's Julian.
+                instant = julianInstant;
+            } else if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
\ No newline at end of file
