diff --git a/tmp/61181994-7730-476c-bbf1-4661a044ba99_buggy.java b/tmp/2d3a667e-35dd-403e-8037-cabf0687d87d_fixed.java
index e4d90e7..0db8c7c 100644
--- a/tmp/61181994-7730-476c-bbf1-4661a044ba99_buggy.java
+++ b/tmp/2d3a667e-35dd-403e-8037-cabf0687d87d_fixed.java
@@ -1,45 +1,62 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
   } else if (prettyPrint) {
     // Don't pretty print recursively.
     prettyPrint = false;
 
     // Use a tree set so that the properties are sorted.
     Set<String> propertyNames = Sets.newTreeSet();
     for (ObjectType current = this;
          current!= null &&!current.isNativeObjectType() &&
              propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
 
     StringBuilder sb = new StringBuilder();
     sb.append("{");
 
     int i = 0;
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
 
       sb.append(property);
       sb.append(": ");
       sb.append(getPropertyType(property).toString());
 
       ++i;
       if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
-          sb.append(", ...");
+        // instead of just printing "...", print the remaining properties
+        sb.append(",... [");
+        int remaining = 0;
+        for (String remainingProperty : propertyNames) {
+          if (sb.indexOf(remainingProperty) == -1) {
+            if (remaining > 0) {
+              sb.append(", ");
+            }
+            sb.append(remainingProperty);
+            sb.append(": ");
+            sb.append(getPropertyType(remainingProperty).toString());
+            remaining++;
+            if (remaining == 2) {
+              break;
+            }
+          }
+        }
+        sb.append("]");
         break;
       }
     }
 
     sb.append("}");
 
     prettyPrint = true;
     return sb.toString();
   } else {
     return "{...}";
   }
 }
\ No newline at end of file
