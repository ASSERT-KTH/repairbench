diff --git a/tmp/87d60218-2216-40ef-9907-0d8c31d48362_buggy.java b/tmp/811d4d5b-5305-48df-a27f-7b9dfa6456a6_fixed.java
index e4d90e7..52b1e13 100644
--- a/tmp/87d60218-2216-40ef-9907-0d8c31d48362_buggy.java
+++ b/tmp/811d4d5b-5305-48df-a27f-7b9dfa6456a6_fixed.java
@@ -1,45 +1,66 @@
 @Override
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
   } else if (prettyPrint) {
     // Don't pretty print recursively.
     prettyPrint = false;
 
     // Use a tree set so that the properties are sorted.
     Set<String> propertyNames = Sets.newTreeSet();
     for (ObjectType current = this;
          current!= null &&!current.isNativeObjectType() &&
              propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
 
     StringBuilder sb = new StringBuilder();
     sb.append("{");
 
     int i = 0;
     for (String property : propertyNames) {
       if (i > 0) {
         sb.append(", ");
       }
 
       sb.append(property);
       sb.append(": ");
-        sb.append(getPropertyType(property).toString());
+      JSType propertyType = getPropertyType(property);
+      if (propertyType instanceof RecordType) {
+        sb.append(propertyType.toStringHelper(false));
+      } else {
+        sb.append(propertyType.toString());
+      }
 
       ++i;
       if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
         sb.append(",...");
+        if (propertyNames.size() > MAX_PRETTY_PRINTED_PROPERTIES) {
+          sb.append(" [");
+          int count = 0;
+          for (String remainingProperty : propertyNames) {
+            if (count >= MAX_PRETTY_PRINTED_PROPERTIES) {
+              sb.append(remainingProperty);
+              sb.append(": ");
+              sb.append(getPropertyType(remainingProperty).toString());
+              count++;
+              if (count == MAX_PRETTY_PRINTED_PROPERTIES + 2) {
+                break;
+              }
+            }
+          }
+          sb.append("]");
+        }
         break;
       }
     }
 
     sb.append("}");
 
     prettyPrint = true;
     return sb.toString();
   } else {
     return "{...}";
   }
 }
\ No newline at end of file
