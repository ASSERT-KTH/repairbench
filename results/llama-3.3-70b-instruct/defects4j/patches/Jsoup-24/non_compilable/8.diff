diff --git a/tmp/3b458502-00e9-4ba1-b51e-ef8da373a0f8_buggy.java b/tmp/16261e60-bc35-4106-a43d-f8c24545b2fd_fixed.java
index b2d53db..c3d4190 100644
--- a/tmp/3b458502-00e9-4ba1-b51e-ef8da373a0f8_buggy.java
+++ b/tmp/16261e60-bc35-4106-a43d-f8c24545b2fd_fixed.java
@@ -1,34 +1,53 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
         r.advance();
         return;
     }
 
     if (t.isAppropriateEndTagToken() &&!r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
             default:
+                if (!t.tagPending.isEmpty()) {
                     t.dataBuffer.append(c);
                     anythingElse(t, r);
                     break;
+                } else {
+                    t.dataBuffer.append(c);
+                    anythingElse(t, r);
+                    break;
+                }
+        }
+    } else {
+        if (!r.isEmpty() && (r.current() == '/' || r.current() == '>')) {
+            char c = r.consume();
+            switch (c) {
+                case '/':
+                    t.transition(SelfClosingStartTag);
+                    break;
+                case '>':
+                    t.emitTagPending();
+                    t.transition(Data);
+                    break;
             }
         } else {
             anythingElse(t, r);
         }
     }
+}
\ No newline at end of file
