diff --git a/tmp/c38b06b6-10b3-4715-9dec-7ab422d44745_buggy.java b/tmp/a82810f7-39a2-431c-b1a4-1a4023622c65_fixed.java
index 66e3d01..fa201e7 100644
--- a/tmp/c38b06b6-10b3-4715-9dec-7ab422d44745_buggy.java
+++ b/tmp/a82810f7-39a2-431c-b1a4-1a4023622c65_fixed.java
@@ -1,34 +1,39 @@
 /**
  * Determines whether the given value may be assigned to a define.
  *
  * @param val The value being assigned.
  * @param defines The list of names of existing defines.
  */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
       // Binary operators are only valid if both children are valid.
+      case Token.ADD:
       case Token.BITAND:
-      case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
 
       // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
+        if (val.getType() == Token.ADD) {
+          // String concatenation is valid if both children are valid.
+          return isValidDefineValue(val.getFirstChild(), defines) && isValidDefineValue(val.getSecondChild(), defines);
+        } else {
           return isValidDefineValue(val.getFirstChild(), defines);
+        }
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
 }
\ No newline at end of file
