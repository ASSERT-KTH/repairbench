diff --git a/tmp/f46bc7f0-17c6-4ed7-911b-6d8c96e8b38f_buggy.java b/tmp/03b26738-ec59-46cd-9b2a-dbd938267d03_fixed.java
index 66e3d01..ab4b369 100644
--- a/tmp/f46bc7f0-17c6-4ed7-911b-6d8c96e8b38f_buggy.java
+++ b/tmp/03b26738-ec59-46cd-9b2a-dbd938267d03_fixed.java
@@ -1,34 +1,36 @@
 /**
  * Determines whether the given value may be assigned to a define.
  *
  * @param val The value being assigned.
  * @param defines The list of names of existing defines.
  */
 static boolean isValidDefineValue(Node val, Set<String> defines) {
   switch (val.getType()) {
     case Token.STRING:
     case Token.NUMBER:
     case Token.TRUE:
     case Token.FALSE:
       return true;
 
     // Binary operators are only valid if both children are valid.
     case Token.BITAND:
     case Token.BITNOT:
     case Token.BITOR:
     case Token.BITXOR:
+    case Token.ADD:
+      return isValidDefineValue(val.getFirstChild(), defines) && isValidDefineValue(val.getSecondChild(), defines);
 
     // Uniary operators are valid if the child is valid.
     case Token.NOT:
     case Token.NEG:
       return isValidDefineValue(val.getFirstChild(), defines);
 
     // Names are valid if and only if they are defines themselves.
     case Token.NAME:
     case Token.GETPROP:
       if (val.isQualifiedName()) {
         return defines.contains(val.getQualifiedName());
       }
   }
   return false;
 }
\ No newline at end of file
