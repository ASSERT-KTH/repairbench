diff --git a/tmp/2aa3535b-341d-4412-92aa-f2a4c2eb0e8b_buggy.java b/tmp/40b9a151-989a-4b2d-b2a2-bf19d1fd69b5_fixed.java
index b529d33..20d596c 100644
--- a/tmp/2aa3535b-341d-4412-92aa-f2a4c2eb0e8b_buggy.java
+++ b/tmp/40b9a151-989a-4b2d-b2a2-bf19d1fd69b5_fixed.java
@@ -1,29 +1,29 @@
 /**
  * Used internally by the Soundex algorithm.
  *
  * Consonants from the same code group separated by W or H are treated as one.
  *
  * @param str
  *                  the cleaned working string to encode (in upper case).
  * @param index
  *                  the character position to encode
  * @return Mapping code for a particular character
  * @throws IllegalArgumentException
  *                  if the character is not mapped
  */
 private char getMappingCode(final String str, final int index) {
     // map() throws IllegalArgumentException
     final char mappedChar = this.map(str.charAt(index));
     // HW rule check
     if (index > 1 && mappedChar!= '0') {
         final char hwChar = str.charAt(index - 1);
         if ('H' == hwChar || 'W' == hwChar) {
             final char preHWChar = str.charAt(index - 2);
             final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
-                    return 0;
+            if (firstCode == mappedChar) {
+                return '0';
             }
         }
     }
     return mappedChar;
 }
\ No newline at end of file
