diff --git a/tmp/c71068fc-71c2-4ebb-a42f-9ebe614a95fe_buggy.java b/tmp/50781820-1267-40c2-a65c-d485fd45f03f_fixed.java
index 877a1a1..061f5f8 100644
--- a/tmp/c71068fc-71c2-4ebb-a42f-9ebe614a95fe_buggy.java
+++ b/tmp/50781820-1267-40c2-a65c-d485fd45f03f_fixed.java
@@ -1,14 +1,19 @@
 /**
  * Returns the percentage of values that are equal to v
  * (as a proportion between 0 and 1).
  * <p>
  * Returns <code>Double.NaN</code> if no values have been added.</p>
  *
  * @param v the value to lookup
  * @return the proportion of values equal to v
  * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
  */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    // The original implementation calls getCumPct which calculates the cumulative percentage.
+    // However, getPct should return the percentage of values equal to v, not the cumulative percentage.
+    // We need to implement the correct logic to calculate the percentage of values equal to v.
+    return getFrequency((Comparable<?>) v) / getTotalCount();
 }
+
+// Assuming getFrequency and getTotalCount are existing methods that return the frequency of a value and the total count of values respectively.
\ No newline at end of file
