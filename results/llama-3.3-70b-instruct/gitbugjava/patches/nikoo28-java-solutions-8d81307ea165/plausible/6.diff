diff --git a/tmp/a3aac264-69e8-4511-908a-517b64f37af0_buggy.java b/tmp/33e18150-889e-428b-9f1a-487349a7e992_fixed.java
index 9739964..cd223fd 100644
--- a/tmp/a3aac264-69e8-4511-908a-517b64f37af0_buggy.java
+++ b/tmp/33e18150-889e-428b-9f1a-487349a7e992_fixed.java
@@ -1,27 +1,36 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
           && prices[indexStack.peek()] <= prices[i])
         indexStack.pop();
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
       if (indexStack.isEmpty())
         spans[i] = i + 1;
       else
         spans[i] = i - indexStack.peek();
 
       indexStack.push(i);
     }
 
+    // The issue is that when the price stays the same, 
+    // the span is still incremented in the original code. 
+    // This loop corrects that by checking if the current 
+    // price is the same as the previous one.
+    for (int i = 1; i < prices.length; i++) {
+      if (prices[i] == prices[i - 1]) {
+        spans[i] = 1;
+      }
+    }
+
     return spans;
 }
\ No newline at end of file
