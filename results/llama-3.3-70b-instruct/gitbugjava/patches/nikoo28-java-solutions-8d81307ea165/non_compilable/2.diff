diff --git a/tmp/abe7b113-0ff9-40b3-a799-c2879efe6c42_buggy.java b/tmp/0cc55091-b8c9-45ab-a4ea-1b36d9e5d27d_fixed.java
index 9739964..5e93d56 100644
--- a/tmp/abe7b113-0ff9-40b3-a799-c2879efe6c42_buggy.java
+++ b/tmp/0cc55091-b8c9-45ab-a4ea-1b36d9e5d27d_fixed.java
@@ -1,27 +1,30 @@
 public int[] calculateSpans(int[] prices) {
-
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
           && prices[indexStack.peek()] <= prices[i])
         indexStack.pop();
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
       if (indexStack.isEmpty())
         spans[i] = i + 1;
       else
         spans[i] = i - indexStack.peek();
 
+      // If current price is equal to the price at the top of the stack, 
+      // do not pop the stack, only push the current index
+      if (indexStack.isEmpty() || prices[indexStack.peek()] < prices[i]) {
         indexStack.push(i);
       }
+    }
 
     return spans;
 }
\ No newline at end of file
