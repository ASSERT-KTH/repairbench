diff --git a/tmp/8d005384-7d07-4391-99ae-6e141b6c22b0_buggy.java b/tmp/a812d2f3-0405-47fd-881e-9935394c27d4_fixed.java
index 855afa5..b8d657d 100644
--- a/tmp/8d005384-7d07-4391-99ae-6e141b6c22b0_buggy.java
+++ b/tmp/a812d2f3-0405-47fd-881e-9935394c27d4_fixed.java
@@ -1,13 +1,14 @@
 static URL encodeUrl(URL u) {
     u = punyUrl(u);
     try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+        // encode urls
+        URI uri = new URI(u.getProtocol(), u.getUserInfo(), u.getHost(), u.getPort(), u.getPath(), u.getQuery(), u.getRef());
+        String encodedPath = uri.getRawPath().replace(" ", "%20");
+        encodedPath = encodedPath.replace("[", "%5B").replace("]", "%5D");
+        String encodedQuery = uri.getRawQuery().replace(" ", "%20");
+        return new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), encodedPath, encodedQuery, uri.getFragment()).toURL();
     } catch (URISyntaxException | MalformedURLException e) {
         // give up and return the original input
         return u;
     }
 }
\ No newline at end of file
