diff --git a/tmp/1525af92-a6db-4c4c-a06b-87a9ead2be16_buggy.java b/tmp/7fe7c5ce-922c-459b-b04e-d090ad6e185c_fixed.java
index d87dd79..3350a55 100644
--- a/tmp/1525af92-a6db-4c4c-a06b-87a9ead2be16_buggy.java
+++ b/tmp/7fe7c5ce-922c-459b-b04e-d090ad6e185c_fixed.java
@@ -1,47 +1,50 @@
 @Override
 protected Object decode(
         ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
     int endIndex = -1;
     for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
     }
 
     if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
+        ByteBuf frame = Unpooled.copiedBuffer(buf, buf.readerIndex(), endIndex - buf.readerIndex());
+        buf.readerIndex(endIndex); // update the reader index of the original buffer
+        ByteBuf newFrame = Unpooled.buffer();
+        while (frame.isReadable()) {
+            byte b1 = frame.readByte();
             if (b1 == '}') {
-                    byte b2 = buf.readByte();
+                byte b2 = frame.readByte();
                 switch (b2) {
                     case 0x01:
-                            frame.writeByte('}');
+                        newFrame.writeByte('}');
                         break;
                     case 0x02:
-                            frame.writeByte('[');
+                        newFrame.writeByte('[');
                         break;
                     case 0x03:
-                            frame.writeByte(']');
+                        newFrame.writeByte(']');
                         break;
                     case 0x04:
-                            frame.writeByte(',');
+                        newFrame.writeByte(',');
                         break;
                     case 0x05:
-                            frame.writeByte('*');
+                        newFrame.writeByte('*');
                         break;
                     default:
                         throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                "unexpected byte at %d: 0x%02x", frame.readerIndex() - 1, b2));
                 }
             } else {
-                    frame.writeByte(b1);
+                newFrame.writeByte(b1);
             }
         }
-            return frame;
+        frame.release(); // release the copied buffer
+        return newFrame;
     }
 
-        return null;
+    return Unpooled.EMPTY_BUFFER; // return an empty buffer instead of null
 }
\ No newline at end of file
