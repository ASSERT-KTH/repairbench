diff --git a/tmp/3f456d30-3078-40ea-af53-12cd70de9030_buggy.java b/tmp/15bf18f0-9deb-4170-86dd-ddaeedf35b4c_fixed.java
index c9c77a4..2a9a250 100644
--- a/tmp/3f456d30-3078-40ea-af53-12cd70de9030_buggy.java
+++ b/tmp/15bf18f0-9deb-4170-86dd-ddaeedf35b4c_fixed.java
@@ -1,35 +1,23 @@
 URL build() {
     try {
         // use the URI class to encode non-ascii in path
         URI uri = new URI(
             u.getProtocol(),
             u.getUserInfo(),
-                IDN.toASCII(decodePart(u.getHost())), // puny-code
+            IDN.toASCII(u.getHost()), // puny-code
             u.getPort(),
             decodePart(u.getPath()),
-                null, null // query and fragment appended later so as not to encode
+            u.getQuery(), 
+            u.getRef()
         );
 
         String normUrl = uri.toASCIIString();
-            if (q != null || u.getRef() != null) {
-                StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
-                if (q != null) {
-                    sb.append('?');
-                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);
-                }
-                if (u.getRef() != null) {
-                    sb.append('#');
-                    appendToAscii(u.getRef(), false, sb);
-                }
-                normUrl = StringUtil.releaseBuilder(sb);
-            }
         u = new URL(normUrl);
         return u;
-        } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
+    } catch (MalformedURLException | URISyntaxException e) {
         // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
         // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
         assert Validate.assertFail(e.toString());
         return u;
     }
 }
\ No newline at end of file
