diff --git a/tmp/50008a94-364c-4d6c-910a-c1eaf65cd46b_buggy.java b/tmp/05c2268a-506d-4616-91d4-1bbd640529ce_fixed.java
index b8e3fa3..96e1aa4 100644
--- a/tmp/50008a94-364c-4d6c-910a-c1eaf65cd46b_buggy.java
+++ b/tmp/05c2268a-506d-4616-91d4-1bbd640529ce_fixed.java
@@ -1,65 +1,72 @@
 /**
  * Builds the {@link BackOffPolicy} with the given parameters.
  * @return the {@link BackOffPolicy} instance
  */
 public BackOffPolicy build() {
     if (this.multiplier!= null && this.multiplier > 0 || this.multiplierSupplier!= null) {
         ExponentialBackOffPolicy policy;
         if (Boolean.TRUE.equals(this.random)) {
             policy = new ExponentialRandomBackOffPolicy();
         }
         else {
             policy = new ExponentialBackOffPolicy();
         }
         if (this.delay!= null) {
             policy.setInitialInterval(this.delay);
         }
         if (this.delaySupplier!= null) {
             policy.initialIntervalSupplier(this.delaySupplier);
         }
         if (this.multiplier!= null) {
             policy.setMultiplier(this.multiplier);
         }
         if (this.multiplierSupplier!= null) {
             policy.multiplierSupplier(this.multiplierSupplier);
         }
         if (this.maxDelay!= null && this.delay!= null) {
             policy.setMaxInterval(
                     this.maxDelay > this.delay? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
         }
         if (this.maxDelaySupplier!= null) {
             policy.maxIntervalSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper!= null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
     if (this.maxDelay!= null && this.delay!= null && this.maxDelay > this.delay) {
         UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
         if (this.delay!= null) {
             policy.setMinBackOffPeriod(this.delay);
         }
         if (this.delaySupplier!= null) {
             policy.minBackOffPeriodSupplier(this.delaySupplier);
         }
         if (this.maxDelay!= null) {
             policy.setMaxBackOffPeriod(this.maxDelay);
         }
         if (this.maxDelaySupplier!= null) {
             policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
         }
         if (this.sleeper!= null) {
             policy.setSleeper(this.sleeper);
         }
         return policy;
     }
-		FixedBackOffPolicy policy = new FixedBackOffPolicy();
     if (this.delay!= null) {
+        FixedBackOffPolicy policy = new FixedBackOffPolicy();
         policy.setBackOffPeriod(this.delay);
+        if (this.sleeper!= null) {
+            policy.setSleeper(this.sleeper);
+        }
+        return policy;
     }
+    // Default backoff policy when no delay is provided
+    FixedBackOffPolicy policy = new FixedBackOffPolicy();
+    policy.setBackOffPeriod(0L); // Default backoff period
     if (this.sleeper!= null) {
         policy.setSleeper(this.sleeper);
     }
     return policy;
 }
\ No newline at end of file
