diff --git a/tmp/1068e29b-d10a-490c-b6e5-5a7ad9a17a48_buggy.java b/tmp/4b4e11b0-1c04-4f87-8f6e-4cc07b2b6d48_fixed.java
index ae12a4d..fa837ba 100644
--- a/tmp/1068e29b-d10a-490c-b6e5-5a7ad9a17a48_buggy.java
+++ b/tmp/4b4e11b0-1c04-4f87-8f6e-4cc07b2b6d48_fixed.java
@@ -1,3 +1,25 @@
 private boolean isFormatAsBlock(Document.OutputSettings out) {
+    if (out.indentAmount == 0) {
+        // when pretty printing, inline elements that contain block elements should not be formatted as a block,
+        // unless the parent element is also a block element
+        if (tag.formatAsBlock() || (parent()!= null && parent().tag().formatAsBlock())) {
+            return true;
+        }
+        // however when printing to a string, inline elements containing block elements should be formatted as a block
+        // unless they're wrapped in a block element
+        if (parent() == null ||!parent().tag().formatAsBlock()) {
+            return hasBlockElementChildren();
+        }
+    }
     return tag.formatAsBlock() || (parent()!= null && parent().tag().formatAsBlock()) || out.outline();
 }
+
+// assuming the existence of a hasBlockElementChildren() function
+private boolean hasBlockElementChildren() {
+    for (Node child : childNodes()) {
+        if (child instanceof Element && ((Element) child).isFormatAsBlock(new Document.OutputSettings())) {
+            return true;
+        }
+    }
+    return false;
+}
\ No newline at end of file
