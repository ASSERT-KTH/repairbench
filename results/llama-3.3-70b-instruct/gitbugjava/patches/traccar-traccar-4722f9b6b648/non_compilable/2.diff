diff --git a/tmp/a19cb13c-e692-47f4-85d9-b43fe333882d_buggy.java b/tmp/622cf456-ceab-41c9-b354-c6474617d133_fixed.java
index c84c989..bc39862 100644
--- a/tmp/a19cb13c-e692-47f4-85d9-b43fe333882d_buggy.java
+++ b/tmp/622cf456-ceab-41c9-b354-c6474617d133_fixed.java
@@ -1,27 +1,32 @@
 private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
     buf.readUnsignedShortLE(); // length
 
     buf.skipBytes(3); // identification header
     buf.readUnsignedIntLE(); // index
 
     DeviceSession deviceSession = getDeviceSession(
             channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
     if (deviceSession == null) {
         return null;
     }
 
     Position position = new Position(getProtocolName());
     position.setDeviceId(deviceSession.getDeviceId());
 
     buf.readUnsignedByte(); // session status
     buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+    int dateTime = buf.readUnsignedIntLE(); // date and time
+
+    // Ensure the date and time is within a valid range to prevent incorrect timezone conversions.
+    int days = dateTime >> 16;
+    int time = dateTime & 0xffff;
+    position.setTime(new Date(System.currentTimeMillis() / 1000 * 1000 - (time % 86400) * 1000 - (days % 365) * 86400 * 1000));
 
     buf.skipBytes(23); // coordinates block
 
     buf.skipBytes(3); // data tag header
     decodeMinimalDataSet(position, buf);
 
     return position;
 }
\ No newline at end of file
