diff --git a/tmp/abc3d102-15ab-404a-960d-687a19556cc2_buggy.java b/tmp/3cbee71f-ecc7-40a0-86c5-d0c0863a790c_fixed.java
index 23f078d..4967293 100644
--- a/tmp/abc3d102-15ab-404a-960d-687a19556cc2_buggy.java
+++ b/tmp/3cbee71f-ecc7-40a0-86c5-d0c0863a790c_fixed.java
@@ -1,14 +1,16 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
+        int numChars = Character.charCount(c);
         if (c == ' ') {
             sb.append(spaceAsPlus? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            String str = s.substring(i, i + numChars);
+            sb.append(URLEncoder.encode(str, UTF_8.name()));
+            i += numChars - 1; // increment by number of chars in the codepoint - 1 (since i++ will be executed)
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
