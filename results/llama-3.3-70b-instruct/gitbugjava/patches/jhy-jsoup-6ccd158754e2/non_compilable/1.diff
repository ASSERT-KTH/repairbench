diff --git a/tmp/d8f86c49-3374-43f5-90c6-fee6eed97a8e_buggy.java b/tmp/ccae4c81-3646-42e0-8675-1818af9d0e20_fixed.java
index 23f078d..05d8f19 100644
--- a/tmp/d8f86c49-3374-43f5-90c6-fee6eed97a8e_buggy.java
+++ b/tmp/ccae4c81-3646-42e0-8675-1818af9d0e20_fixed.java
@@ -1,14 +1,13 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+        } else if (c > 127 || Character.isSupplementaryCodePoint(c)) { // out of ascii range or supplementary codepoint
+            sb.append(String.format("%%%02X", c));
         } else {
             sb.append((char) c);
         }
     }
 }
\ No newline at end of file
