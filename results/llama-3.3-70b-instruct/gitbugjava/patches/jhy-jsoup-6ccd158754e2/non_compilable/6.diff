diff --git a/tmp/ce30af45-1953-45d5-8806-c9d3b6fdcdc5_buggy.java b/tmp/1586cc3b-6d22-438f-90e9-7faa87ac2c3b_fixed.java
index 23f078d..028b89b 100644
--- a/tmp/ce30af45-1953-45d5-8806-c9d3b6fdcdc5_buggy.java
+++ b/tmp/1586cc3b-6d22-438f-90e9-7faa87ac2c3b_fixed.java
@@ -1,14 +1,15 @@
 private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
     // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
     for (int i = 0; i < s.length(); i++) {
         int c = s.codePointAt(i);
         if (c == ' ') {
             sb.append(spaceAsPlus? '+' : "%20");
         } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            sb.append(URLEncoder.encode(new String(Character.toChars(c)), StandardCharsets.UTF_8.name()));
         } else {
             sb.append((char) c);
         }
+        // increment by the number of code units of the current code point
+        i += Character.charCount(c) - 1;
     }
 }
\ No newline at end of file
