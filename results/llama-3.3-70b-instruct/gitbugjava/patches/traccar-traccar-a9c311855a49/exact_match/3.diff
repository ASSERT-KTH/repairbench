diff --git a/tmp/5f4d9b6f-f65b-43da-b7a1-6bba07743930_buggy.java b/tmp/3124ec52-d8cb-42ee-a3c0-50b7893fa32f_fixed.java
index ff397b6..5eafa73 100644
--- a/tmp/5f4d9b6f-f65b-43da-b7a1-6bba07743930_buggy.java
+++ b/tmp/3124ec52-d8cb-42ee-a3c0-50b7893fa32f_fixed.java
@@ -1,35 +1,36 @@
 @Override
 protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
     JsonObject json;
     try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
         json = Json.createReader(inputStream).readObject();
     }
 
     String type = json.getString("rpt");
     switch (type) {
         case "hf":
         case "loc":
             Position position = new Position(getProtocolName());
             position.setDeviceId(deviceSession.getDeviceId());
 
             position.setValid(true);
 
-                DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
+            // Changed the date format to match the pattern in the test data
+            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
             position.setTime(dateFormat.parse(json.getString("ts")));
 
             JsonObject location = json.getJsonObject("location");
             position.setLatitude(location.getJsonNumber("lat").doubleValue());
             position.setLongitude(location.getJsonNumber("lon").doubleValue());
 
             position.setCourse(json.getInt("bear"));
             position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
 
             position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
 
             return position;
 
         default:
             return null;
     }
 }
\ No newline at end of file
