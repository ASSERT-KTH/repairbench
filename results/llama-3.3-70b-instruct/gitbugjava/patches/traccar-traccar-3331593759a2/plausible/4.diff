diff --git a/tmp/355acc51-58b2-4e5a-a4dc-746c57cb2118_buggy.java b/tmp/8d02f03e-cf0e-4fe6-bcbe-4f09026d5fa0_fixed.java
index 2189af9..fec5eab 100644
--- a/tmp/355acc51-58b2-4e5a-a4dc-746c57cb2118_buggy.java
+++ b/tmp/8d02f03e-cf0e-4fe6-bcbe-4f09026d5fa0_fixed.java
@@ -1,113 +1,134 @@
 private Position decodeTransparent(DeviceSession deviceSession, ByteBuf buf) {
-
     int type = buf.readUnsignedByte();
     
     if (type == 0xF0) {
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
         
         Date time = readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE));
         
         if (buf.readUnsignedByte() > 0) {
             position.set(Position.KEY_ARCHIVE, true);
         }
         
         buf.readUnsignedByte(); // vehicle type
         
         int count;
         int subtype = buf.readUnsignedByte();
         switch (subtype) {
             case 0x01:
                 count = buf.readUnsignedByte();
                 for (int i = 0; i < count; i++) {
                     int id = buf.readUnsignedShort();
                     int length = buf.readUnsignedByte();
                     switch (id) {
                         case 0x0102:
                         case 0x0528:
                         case 0x0546:
                             position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);
                             break;
                         case 0x0103:
                             position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedInt() * 0.01);
                             break;
                         case 0x052A:
                             position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.01);
                             break;
                         case 0x0105:
                         case 0x052C:
                             position.set(Position.KEY_FUEL_USED, buf.readUnsignedInt() * 0.01);
                             break;
                         case 0x014A:
                         case 0x0537:
                         case 0x0538:
                         case 0x0539:
                             position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.01);
                             break;
                         default:
                             switch (length) {
                                 case 1:
                                     position.set(Position.PREFIX_IO + id, buf.readUnsignedByte());
                                     break;
                                 case 2:
                                     position.set(Position.PREFIX_IO + id, buf.readUnsignedShort());
                                     break;
                                 case 4:
                                     position.set(Position.PREFIX_IO + id, buf.readUnsignedInt());
                                     break;
                                 default:
                                     buf.skipBytes(length);
                                     break;
                             }
                             break;
                     }
                 }
-                    decodeCoordinates(position, buf);
+                // Validate the latitude before setting it
+                double latitude = buf.readUnsignedShort() * 0.0001;
+                if (Math.abs(latitude) > 90) {
+                    latitude = Math.signum(latitude) * 90; // Cap the latitude at 90 degrees
+                }
+                position.setLatitude(latitude);
+                // Validate the longitude before setting it
+                double longitude = buf.readUnsignedShort() * 0.0001;
+                if (Math.abs(longitude) > 180) {
+                    longitude = Math.signum(longitude) * 180; // Cap the longitude at 180 degrees
+                }
+                position.setLongitude(longitude);
                 position.setTime(time);
                 break;
             case 0x03:
                 count = buf.readUnsignedByte();
                 for (int i = 0; i < count; i++) {
                     int id = buf.readUnsignedShort();
                     int length = buf.readUnsignedByte();
                     switch (id) {
                         case 0x1A:
                             position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);
                             break;
                         case 0x1B:
                             position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);
                             break;
                         case 0x1C:
                             position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);
                             break;
                         case 0x1D:
                         case 0x1E:
                         case 0x1F:
                             position.set(Position.KEY_ALARM, Position.ALARM_LANE_CHANGE);
                             break;
                         case 0x23:
                             position.set(Position.KEY_ALARM, Position.ALARM_FATIGUE_DRIVING);
                             break;
                         default:
                             break;
                     }
                     buf.skipBytes(length);
                 }
-                    decodeCoordinates(position, buf);
+                // Validate the latitude before setting it
+                double latitude2 = buf.readUnsignedShort() * 0.0001;
+                if (Math.abs(latitude2) > 90) {
+                    latitude2 = Math.signum(latitude2) * 90; // Cap the latitude at 90 degrees
+                }
+                position.setLatitude(latitude2);
+                // Validate the longitude before setting it
+                double longitude2 = buf.readUnsignedShort() * 0.0001;
+                if (Math.abs(longitude2) > 180) {
+                    longitude2 = Math.signum(longitude2) * 180; // Cap the longitude at 180 degrees
+                }
+                position.setLongitude(longitude2);
                 position.setTime(time);
                 break;
             case 0x0B:
                 if (buf.readUnsignedByte() > 0) {
                     position.set(Position.KEY_VIN, buf.readCharSequence(17, StandardCharsets.US_ASCII).toString());
                 }
                 getLastLocation(position, time);
                 break;
             default:
                 return null;
         }
         
         return position;
     }
     
     return null;
 }
\ No newline at end of file
