diff --git a/tmp/dad4383e-5fc6-4d4b-ba42-30d601a6259a_buggy.java b/tmp/d52f7d89-f1ba-4913-a2ac-e1dbc2f9b9cd_fixed.java
index 593602f..94b3608 100644
--- a/tmp/dad4383e-5fc6-4d4b-ba42-30d601a6259a_buggy.java
+++ b/tmp/d52f7d89-f1ba-4913-a2ac-e1dbc2f9b9cd_fixed.java
@@ -1,6 +1,24 @@
     @Override
     public String toString() {
+        if (rangesList.isEmpty()) {
+            return "";
+        }
+        if (rangesList.size() == 1) {
+            // If there's only one 'Ranges' object in the list, format it directly.
+            // It's assumed that the 'toString()' method of the 'Ranges' object itself
+            // provides the correct string representation (e.g., ">=3.0.0 and <=3.0.1")
+            // without any extraneous outer parentheses. This avoids adding parentheses
+            // that 'RangesList::formatRanges' might include for grouping when multiple
+            // 'Ranges' objects are joined by OR.
+            return rangesList.get(0).toString();
+        } else {
+            // For multiple 'Ranges' objects, stream and format each one,
+            // then join them using the OR_JOINER. 'RangesList::formatRanges' is
+            // expected to correctly format each individual 'Ranges' object,
+            // potentially adding parentheses around them if they need grouping
+            // when part of an 'OR' expression.
             return rangesList.stream()
                 .map(RangesList::formatRanges)
                 .collect(joining(OR_JOINER));
         }
+    }
\ No newline at end of file
