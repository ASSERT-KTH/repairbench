diff --git a/tmp/65e646c7-e938-45a8-b685-d13cf4d44edc_buggy.java b/tmp/f7b979f1-cd80-411e-87dd-d867262be2a6_fixed.java
index 862c60c..3fab459 100644
--- a/tmp/65e646c7-e938-45a8-b685-d13cf4d44edc_buggy.java
+++ b/tmp/f7b979f1-cd80-411e-87dd-d867262be2a6_fixed.java
@@ -1,25 +1,43 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = this.nextSibling();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank()) return;
 
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
+            // Determine if an indent should be applied before this text node.
+            // Existing conditions:
+            // 1. If it's the first child of a block-formatted parent, and it's not blank.
+            // 2. If outlining is enabled and there are siblings, and it's not blank.
+            boolean indentHere = (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
+                                 (out.outline() && siblingNodes().size() > 0 && !isBlank());
+
+            // Add a new condition for indentation: if the previous sibling is a <br> tag,
+            // and this text node is not blank, and its parent is a block tag (for proper HTML formatting context).
+            // This ensures text following a <br> in a pretty-printed block element starts on a new line.
+            if (!indentHere) {
+                Node prev = this.previousSibling();
+                if (prev instanceof Element && ((Element) prev).tag().getName().equals("br") && !isBlank() &&
+                    parent != null && parent.tag().isBlock()) {
+                    indentHere = true;
+                }
+            }
+
+            if (indentHere) {
                 indent(accum, depth, out);
             }
+        }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
