diff --git a/tmp/155d52f7-0e20-435a-8964-622261bcbc0c_buggy.java b/tmp/4f383b5b-085b-4750-833e-f13ac4ca6644_fixed.java
index 23f078d..c2b17c2 100644
--- a/tmp/155d52f7-0e20-435a-8964-622261bcbc0c_buggy.java
+++ b/tmp/4f383b5b-085b-4750-833e-f13ac4ca6644_fixed.java
@@ -1,14 +1,17 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
-        for (int i = 0; i < s.length(); i++) {
+        // The loop should advance its index by the number of 'char's consumed by codePointAt,
+        // which can be 1 or 2 for supplementary characters.
+        for (int i = 0; i < s.length(); ) { // Removed i++ from here
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
+            i += Character.charCount(c); // Advance i by the number of characters consumed
         }
     }
\ No newline at end of file
