diff --git a/tmp/ad002c5d-ad27-4cf8-9bc5-ce7f7db98299_buggy.java b/tmp/6ea4da3b-0782-4921-a29f-a7f1f6210177_fixed.java
index 8bae155..66b073a 100644
--- a/tmp/ad002c5d-ad27-4cf8-9bc5-ce7f7db98299_buggy.java
+++ b/tmp/6ea4da3b-0782-4921-a29f-a7f1f6210177_fixed.java
@@ -1,5 +1,31 @@
     @Override
     public String asStringLiteral()
     {
-        return '"' + this.value + '"';
+        boolean containsSingleQuote = this.value.indexOf('\'') >= 0;
+        boolean containsDoubleQuote = this.value.indexOf('"') >= 0;
+
+        // If the value contains double quotes but no single quotes,
+        // use single quotes as delimiters to avoid escaping the double quotes.
+        // Example: For value `ba"r`, return `'ba"r'`
+        if (containsDoubleQuote && !containsSingleQuote) {
+            return "'" + this.value + "'";
+        }
+
+        // Otherwise (value contains single quotes, or both, or neither),
+        // use double quotes as delimiters.
+        // Internal double quotes must be escaped with backslashes.
+        // Example: For value `wal'do`, return `"wal'do"`
+        // Example: For value `foo`, return `"foo"`
+        // Example: For value `it's a "test"`, return `"it's a \"test\""`
+        StringBuilder sb = new StringBuilder();
+        sb.append('"');
+        for (int i = 0; i < this.value.length(); i++) {
+            char c = this.value.charAt(i);
+            if (c == '"') {
+                sb.append('\\'); // Escape internal double quotes
+            }
+            sb.append(c);
+        }
+        sb.append('"');
+        return sb.toString();
     }
\ No newline at end of file
