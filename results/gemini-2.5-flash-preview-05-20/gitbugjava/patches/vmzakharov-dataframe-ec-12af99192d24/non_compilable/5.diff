diff --git a/tmp/3b1ef27a-9298-4e3e-9069-fdd9b4931af4_buggy.java b/tmp/a037eb58-1d05-4055-ab55-1118fed15b7e_fixed.java
index 8bae155..e34fdb1 100644
--- a/tmp/3b1ef27a-9298-4e3e-9069-fdd9b4931af4_buggy.java
+++ b/tmp/a037eb58-1d05-4055-ab55-1118fed15b7e_fixed.java
@@ -1,5 +1,32 @@
     @Override
     public String asStringLiteral()
     {
-        return '"' + this.value + '"';
+        String value = this.value;
+
+        boolean containsDoubleQuote = value.contains("\"");
+        boolean containsSingleQuote = value.contains("'");
+
+        // Determine the most appropriate delimiter based on the content of the string.
+        // This avoids issues with nested quotes in the pretty-printed output.
+        //
+        // Strategy:
+        // 1. If the string contains a double quote (") but no single quote ('),
+        //    use single quotes as delimiters (e.g., 'he"llo').
+        //    This avoids needing to escape the double quote within the string.
+        // 2. Otherwise (i.e., contains a single quote, or both, or neither quote type),
+        //    use double quotes as delimiters (e.g., "hello", "hel'lo", "he\"l'lo").
+        //    If double quotes are used as delimiters, any existing double quotes within
+        //    the string must be escaped (e.g., transforming `"` to `\"`).
+
+        if (containsDoubleQuote && !containsSingleQuote) {
+            // The value contains " but not ', so enclose it in single quotes.
+            // No need to escape anything within the value itself.
+            return "'" + value + "'";
+        } else {
+            // The value contains ' (and potentially ") or neither.
+            // Enclose it in double quotes.
+            // Any double quotes within the value must be escaped.
+            String escapedValue = value.replace("\"", "\\\"");
+            return "\"" + escapedValue + "\"";
+        }
     }
\ No newline at end of file
