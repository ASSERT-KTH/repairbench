diff --git a/tmp/06c1f827-7bdb-4096-ad66-0aaf0f81fe24_buggy.java b/tmp/8a553fdc-0bbb-4c06-b531-3c22219744ff_fixed.java
index 8bae155..2595a44 100644
--- a/tmp/06c1f827-7bdb-4096-ad66-0aaf0f81fe24_buggy.java
+++ b/tmp/8a553fdc-0bbb-4c06-b531-3c22219744ff_fixed.java
@@ -1,5 +1,19 @@
     @Override
     public String asStringLiteral()
     {
-        return '"' + this.value + '"';
+        // If the string value contains a double quote but no single quotes,
+        // it's more readable and avoids complex escaping to enclose the literal in single quotes.
+        // For example, a value of `ba"r` becomes `'ba"r'` instead of `"ba\"r"`.
+        if (this.value.contains("\"") && !this.value.contains("'")) {
+            return "'" + this.value + "'";
+        } else {
+            // Otherwise (if it contains no double quotes, or contains single quotes, or contains both),
+            // enclose the literal in double quotes.
+            // Any internal double quotes and backslashes must be escaped to form a valid literal.
+            // Common escape sequences like \n, \t etc. are assumed to be handled by the context
+            // that populates `this.value` or are not required for this pretty-printing scope.
+            // We specifically escape `\` and `"` characters.
+            String escapedValue = this.value.replace("\\", "\\\\").replace("\"", "\\\"");
+            return "\"" + escapedValue + "\"";
+        }
     }
\ No newline at end of file
