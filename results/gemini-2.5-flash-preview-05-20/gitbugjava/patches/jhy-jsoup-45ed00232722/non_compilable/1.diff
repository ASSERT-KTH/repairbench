diff --git a/tmp/4c16b12b-18c1-4166-b997-b5cde71717c9_buggy.java b/tmp/68c434e7-0a1e-4ba2-be5b-14b286ee7dcf_fixed.java
index 855afa5..231e9d7 100644
--- a/tmp/4c16b12b-18c1-4166-b997-b5cde71717c9_buggy.java
+++ b/tmp/68c434e7-0a1e-4ba2-be5b-14b286ee7dcf_fixed.java
@@ -1,13 +1,30 @@
     static URL encodeUrl(URL u) {
 	    u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
+            // Extract components from the URL. These components are in their *raw* form,
+            // meaning special characters like space, [, ] are not yet percent-encoded.
+            String protocol = u.getProtocol();
+            String userInfo = u.getUserInfo();
+            String host = u.getHost();
+            int port = u.getPort(); // -1 if not specified
+            String path = u.getPath();
+            String query = u.getQuery();
+            String fragment = u.getRef(); // getRef() returns the fragment
+
+            // Construct a URI from its components.
+            // The URI constructor automatically applies percent-encoding to characters
+            // that are illegal or reserved in the path, query, and fragment components
+            // as per RFC 2396 / RFC 3986 rules. This is the key to correctly encoding
+            // characters like spaces, [, and ] in the path or query.
+            URI uri = new URI(protocol, userInfo, host, port, path, query, fragment);
+
+            // Convert the URI to its ASCII string form (which is percent-encoded)
+            // and then create a new URL from this correctly encoded string.
             return new URL(uri.toASCIIString());
         } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+            // If there's an issue constructing the URI or URL (e.g., highly malformed
+            // components that even the URI constructor can't handle),
+            // give up and return the original input URL.
             return u;
         }
     }
\ No newline at end of file
