diff --git a/tmp/63bf8364-8d7d-45ab-95ae-82f7d4c7ac06_buggy.java b/tmp/a74f7775-ea19-47f4-b1b8-552af011b06d_fixed.java
index 855afa5..9cb04b7 100644
--- a/tmp/63bf8364-8d7d-45ab-95ae-82f7d4c7ac06_buggy.java
+++ b/tmp/a74f7775-ea19-47f4-b1b8-552af011b06d_fixed.java
@@ -1,13 +1,37 @@
     static URL encodeUrl(URL u) {
 	    u = punyUrl(u);
         try {
-            //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+            // First, try to convert URL to URI directly.
+            // This is the simplest and most correct way if the URL string
+            // already conforms to URI syntax (e.g., no unencoded spaces or brackets).
+            return u.toURI().toURL();
         } catch (URISyntaxException | MalformedURLException e) {
-            // give up and return the original input
+            // If the direct conversion fails (e.g., URISyntaxException due to unencoded
+            // characters like ' ', '[', ']' in the URL path/query/fragment),
+            // then we need to reconstruct the URI by encoding its components.
+            try {
+                String protocol = u.getProtocol();
+                String host = u.getHost();
+                int port = u.getPort(); // -1 if not specified
+                String path = u.getPath();
+                String query = u.getQuery();
+                String fragment = u.getRef();
+                String userInfo = u.getUserInfo(); // Can be null
+
+                URI uri;
+                // Use the URI constructor that takes components.
+                // This constructor correctly encodes characters in path, query, and fragment.
+                // For example, "foo bar/[One]" in path will be encoded to "foo%20bar/%5BOne%5D".
+                if (port == -1) {
+                    uri = new URI(protocol, userInfo, host, path, query, fragment);
+                } else {
+                    uri = new URI(protocol, userInfo, host, port, path, query, fragment);
+                }
+                return new URL(uri.toASCIIString());
+            } catch (URISyntaxException | MalformedURLException e2) {
+                // If even the component-based construction fails,
+                // give up and return the original input URL, as per original logic.
                 return u;
             }
         }
+    }
\ No newline at end of file
