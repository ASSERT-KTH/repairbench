diff --git a/tmp/3d9a5d5f-90ab-4181-adba-1515db5e8dd3_buggy.java b/tmp/b03f12db-e263-41d7-ae7e-1118d74130d2_fixed.java
index ae12a4d..c88ec76 100644
--- a/tmp/3d9a5d5f-90ab-4181-adba-1515db5e8dd3_buggy.java
+++ b/tmp/b03f12db-e263-41d7-ae7e-1118d74130d2_fixed.java
@@ -1,3 +1,9 @@
     private boolean isFormatAsBlock(Document.OutputSettings out) {
-        return tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline();
+        // This is the pretty-printer's block detection. For an element to be formatted as block,
+        // its own computed display must be block, or its parent must be formatted as block.
+        // The latter case handles where for instance <p>A<span>B</span>C</p> -- A and C will be output
+        // to new lines, if their parent is block. This also handles elements like <p style="display:inline;">
+        // inside a block parent, which should still be output on new lines for pretty printing.
+        // The `isBlock()` method correctly considers the 'display' CSS property, unlike tag.formatAsBlock().
+        return isBlock() || (parent() instanceof Element && ((Element) parent()).isFormatAsBlock(out)) || out.outline();
     }
\ No newline at end of file
