diff --git a/tmp/f5b6f4ce-c580-4684-8888-8a4db7083a24_buggy.java b/tmp/45894cdc-8d9a-4852-91eb-3cc8851200e5_fixed.java
index ae12a4d..b2d6b6a 100644
--- a/tmp/f5b6f4ce-c580-4684-8888-8a4db7083a24_buggy.java
+++ b/tmp/45894cdc-8d9a-4852-91eb-3cc8851200e5_fixed.java
@@ -1,3 +1,23 @@
     private boolean isFormatAsBlock(Document.OutputSettings out) {
-        return tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline();
+        // This method determines if an element should be formatted as a block (i.e., with newlines and indentation)
+        // by the pretty printer.
+        //
+        // The original logic was:
+        // return tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline();
+        //
+        // Issues with the original logic:
+        // 1. `tag.formatAsBlock()`: This uses the Tag's default formatting behavior, which does not account
+        //    for CSS `display` properties set on the Element (e.g., `<p style="display:inline;">`).
+        //    The `Element.isBlock()` method correctly considers these CSS overrides.
+        // 2. `(parent() != null && parent().tag().formatAsBlock())`: This part caused inline elements
+        //    (even those explicitly styled as `display:inline`) to be formatted as blocks if their parent
+        //    was a block element. This contradicts the desired behavior for pretty printing, where an
+        //    element explicitly inline should not force a new line after itself, regardless of its parent.
+        //    This was the primary issue fixed by https://github.com/jhy/jsoup/issues/1926.
+        //
+        // The corrected logic simplifies this to:
+        // - If `out.outline()` is true, all elements are treated as blocks for outlining.
+        // - Otherwise, only if the current element itself `isBlock()` (which correctly considers
+        //   both its tag type and any CSS `display` property), it should be formatted as a block.
+        return isBlock() || out.outline();
     }
\ No newline at end of file
