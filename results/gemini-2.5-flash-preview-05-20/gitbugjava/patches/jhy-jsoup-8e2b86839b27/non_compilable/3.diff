diff --git a/tmp/57a5f6eb-4af0-44cf-a5af-9be8388803cc_buggy.java b/tmp/ecdae720-f0ea-437a-b534-1454ea8750fd_fixed.java
index ae12a4d..ed5a227 100644
--- a/tmp/57a5f6eb-4af0-44cf-a5af-9be8388803cc_buggy.java
+++ b/tmp/ecdae720-f0ea-437a-b534-1454ea8750fd_fixed.java
@@ -1,3 +1,36 @@
     private boolean isFormatAsBlock(Document.OutputSettings out) {
-        return tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline();
+        // If the element's tag is inherently a block-level element, it should be formatted as a block.
+        if (tag.formatAsBlock()) {
+            return true;
+        }
+
+        // If the parent element is a block-level element, its children are often formatted as blocks.
+        // This helps maintain proper indentation for lists, table cells, etc.
+        if (parent() != null && parent().tag().formatAsBlock()) {
+            return true;
+        }
+
+        // If outlining is enabled in the output settings, all elements are formatted as blocks.
+        if (out.outline()) {
+            return true;
+        }
+
+        // Fix for Issue 1926: An element (even an inherently inline one, or one with `display:inline`)
+        // should be formatted as a block if it contains any child element that is formatted as a block.
+        // This ensures that containers like `<td>` correctly indent their contents and wrap closing tags,
+        // even if child block elements have `display:inline` styles.
+        if (this instanceof Element) {
+            for (Node child : childNodes()) {
+                if (child instanceof Element) {
+                    // Recursively check if the child element is formatted as a block.
+                    // If any child is, then this element should also be treated as a block for formatting.
+                    if (((Element) child).isFormatAsBlock(out)) {
+                        return true;
+                    }
+                }
+            }
+        }
+
+        // Otherwise, the element is not formatted as a block.
+        return false;
     }
\ No newline at end of file
