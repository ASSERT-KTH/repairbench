diff --git a/tmp/95856895-422f-43bb-a3da-79a8137455a8_buggy.java b/tmp/52b40d28-20c3-41c5-82b2-9fb8eea95748_fixed.java
index f86a1bd..f0bee5a 100644
--- a/tmp/95856895-422f-43bb-a3da-79a8137455a8_buggy.java
+++ b/tmp/52b40d28-20c3-41c5-82b2-9fb8eea95748_fixed.java
@@ -1,11 +1,23 @@
     @Override
     public String constructUrlFromEndpointPortDatabase(String endpoint, String port, String dbname) {
-        String url = "jdbc:postgresql://" + endpoint;
+        // Start building the URL with the base and endpoint.
+        StringBuilder urlBuilder = new StringBuilder("jdbc:postgresql://").append(endpoint);
+
+        // Append port if it's not null or empty.
+        // Assuming StringUtils.isNullOrEmpty works as expected for 'port' (i.e., returns true for null or empty strings).
         if (!StringUtils.isNullOrEmpty(port)) {
-            url += ":" + port;
+            urlBuilder.append(":").append(port);
         }
-        if (!StringUtils.isNullOrEmpty(dbname)) {
-            url += "/" + dbname;
+
+        // Append database name if it's not null or empty.
+        // The original code failed for `test_constructUrlNullDatabase` by adding a trailing slash ('/').
+        // This implies that either `StringUtils.isNullOrEmpty(null)` returns `false` in the test environment,
+        // or that appending `"/" + null` results in just `/` instead of `/null` (which is non-standard Java behavior).
+        // To fix this, we explicitly check if `dbname` is non-null and non-empty. This ensures
+        // that the leading slash and the database name are only appended when a valid database name is provided.
+        if (dbname != null && !dbname.isEmpty()) {
+            urlBuilder.append("/").append(dbname);
         }
-        return url;
+
+        return urlBuilder.toString();
     }
\ No newline at end of file
