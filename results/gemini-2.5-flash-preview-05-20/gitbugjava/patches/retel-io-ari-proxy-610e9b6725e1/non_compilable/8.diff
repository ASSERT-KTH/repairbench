diff --git a/tmp/7e757fdc-4825-4c16-a41b-042ce1157c6e_buggy.java b/tmp/aaf9179b-8983-4a5d-9183-7b6e5cbd517d_fixed.java
index eb0a5c8..ffb337e 100644
--- a/tmp/7e757fdc-4825-4c16-a41b-042ce1157c6e_buggy.java
+++ b/tmp/aaf9179b-8983-4a5d-9183-7b6e5cbd517d_fixed.java
@@ -1,27 +1,36 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
+    final AriCommandType commandType = ariCommand.extractCommandType();
+
+    // Explicitly handle DELETE commands to prevent call context registration.
+    // This addresses the failing test where DELETE requests were incorrectly processed.
+    if (commandType.isDeleteCommand()) {
+      return Try.success(Done.done());
+    }
+
+    // Original check: If it's not a creation command (and not DELETE, handled above), return.
+    if (!commandType.isCreationCommand()) {
       return Try.success(Done.done());
     }
 
     final Option<AriResource> maybeResource =
         ariCommand
             .extractResourceRelations()
             .find(AriResourceRelation::isCreated)
             .map(AriResourceRelation::getResource);
 
     if (maybeResource.isEmpty()) {
       return Try.failure(
           new RuntimeException(
               String.format(
                   "Failed to extract resourceId from command '%s'", ariCommand.toString())));
     }
 
     final AriResource resource = maybeResource.get();
 
     callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
     return Try.success(Done.done());
   }
\ No newline at end of file
