diff --git a/tmp/9a96905e-bd25-4d25-8fbb-5549ac04a6dc_buggy.java b/tmp/55ebfab0-fa2e-473c-89f4-dc5a5ebcd4ef_fixed.java
index acd5eb5..4f56f42 100644
--- a/tmp/9a96905e-bd25-4d25-8fbb-5549ac04a6dc_buggy.java
+++ b/tmp/55ebfab0-fa2e-473c-89f4-dc5a5ebcd4ef_fixed.java
@@ -1,32 +1 @@
-    @Override
-    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
-        final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
-        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
-        final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
-        boolean trimLeading = false, trimTrailing = false;
-
-        if (normaliseWhite) {
-            trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
-            trimTrailing = trimLikeBlock && nextSibling() == null;
-
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
-            Node next = nextSibling();
-            Node prev = previousSibling();
-            boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
 || (prev instanceof Element && ((Element) prev).isBlock())
\ No newline at end of file
-                ;
-            if (couldSkip && isBlank) return;
-
-            if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && isNode(prev, "br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
-                indent(accum, depth, out);
-        }
-
-        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
-    }
