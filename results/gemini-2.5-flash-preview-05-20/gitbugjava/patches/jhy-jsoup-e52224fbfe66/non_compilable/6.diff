diff --git a/tmp/a9accdc7-095a-4d47-acb0-df30857e52a9_buggy.java b/tmp/bc11324e-6965-408c-8eff-14193d7d03d0_fixed.java
index acd5eb5..a4814ca 100644
--- a/tmp/a9accdc7-095a-4d47-acb0-df30857e52a9_buggy.java
+++ b/tmp/bc11324e-6965-408c-8eff-14193d7d03d0_fixed.java
@@ -1,32 +1,53 @@
     @Override
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
         final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
         boolean trimLeading = false, trimTrailing = false;
 
         if (normaliseWhite) {
             trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
             trimTrailing = trimLikeBlock && nextSibling() == null;
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             Node prev = previousSibling();
             boolean isBlank = isBlank();
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting
                 || (prev instanceof Element && ((Element) prev).isBlock())
                 ;
+            
+            // Fix 1: If the previous node is <br>, we should not skip this text node,
+            // even if it's blank. <br> itself doesn't add a newline, it breaks the line,
+            // so subsequent whitespace might be meaningful for formatting.
+            if (prev instanceof Element && ((Element) prev).tagName().equals("br")) {
+                couldSkip = false;
+            }
+
             if (couldSkip && isBlank) return;
 
+            boolean needsIndent = false;
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && isNode(prev, "br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+            ) {
+                needsIndent = true;
+            }
+
+            // Fix 2: If this text node is blank, will be trimmed (due to trimTrailing),
+            // and is the last child in a block, don't add an indent here.
+            // The parent's closing tag (outerHtmlTail) will handle the newline.
+            if (isBlank && trimTrailing && nextSibling() == null && parent != null && parent.tag().isBlock()) {
+                needsIndent = false;
+            }
+
+            if (needsIndent) {
                 indent(accum, depth, out);
             }
+        }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
