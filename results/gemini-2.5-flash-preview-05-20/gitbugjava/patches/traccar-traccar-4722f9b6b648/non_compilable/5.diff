diff --git a/tmp/d11e3fed-8299-4c89-9160-8172425eb662_buggy.java b/tmp/ac10cf21-9216-481f-a1d5-cfafdaa8f980_fixed.java
index c84c989..53fb335 100644
--- a/tmp/d11e3fed-8299-4c89-9160-8172425eb662_buggy.java
+++ b/tmp/ac10cf21-9216-481f-a1d5-cfafdaa8f980_fixed.java
@@ -1,27 +1,31 @@
     private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {
 
         buf.readUnsignedShortLE(); // length
 
         buf.skipBytes(3); // identification header
         buf.readUnsignedIntLE(); // index
 
         DeviceSession deviceSession = getDeviceSession(
                 channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));
         if (deviceSession == null) {
             return null;
         }
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         buf.readUnsignedByte(); // session status
         buf.skipBytes(4); // reserved
-        buf.readUnsignedIntLE(); // date and time
+        // The following line reads the timestamp, but it was not being used to set the position's time.
+        // This is a common bug where a relevant piece of data is read but then discarded.
+        // The fix is to store this timestamp and set it on the position object.
+        long timestampSeconds = buf.readUnsignedIntLE(); // date and time
+        position.setTime(new Date(timestampSeconds * 1000L)); // Set the device time in milliseconds
 
         buf.skipBytes(23); // coordinates block
 
         buf.skipBytes(3); // data tag header
         decodeMinimalDataSet(position, buf);
 
         return position;
     }
\ No newline at end of file
