diff --git a/tmp/89cebb7b-f67f-4fc7-bfa4-4f4731acd243_buggy.java b/tmp/0a7555cb-35a9-4248-861f-e4f948f81bc4_fixed.java
index 0583946..edf7fd1 100644
--- a/tmp/89cebb7b-f67f-4fc7-bfa4-4f4731acd243_buggy.java
+++ b/tmp/0a7555cb-35a9-4248-861f-e4f948f81bc4_fixed.java
@@ -1,30 +1,36 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
+            // FIX: If the text node is blank but contains a newline, it's likely an intentional
+            // line break for pretty-printing, so don't trim trailing whitespace.
+            if (trimTrailing && isBlank() && coreValue().indexOf('\n') >= 0) {
+                trimTrailing = false;
+            }
+
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
-            boolean isBlank = isBlank();
+            boolean isBlank = isBlank(); // re-evaluate isBlank here if needed, but it's fine as called earlier
             boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
             )
                 indent(accum, depth, out);
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file
