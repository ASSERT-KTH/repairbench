diff --git a/tmp/d4707e5a-b8c5-4a9d-8d2a-0df63d41a2c3_buggy.java b/tmp/37cfc77f-764d-4de0-91b5-3ae12a6daff0_fixed.java
index c9c2b44..524cf4d 100644
--- a/tmp/d4707e5a-b8c5-4a9d-8d2a-0df63d41a2c3_buggy.java
+++ b/tmp/37cfc77f-764d-4de0-91b5-3ae12a6daff0_fixed.java
@@ -1,13 +1,29 @@
         @Override
         public boolean matches(Element root, Element element) {
-            // evaluate from last to first
+            // evaluate from last to first (e.g., for selector "A B C", it checks C on element, B on element.parent(), A on element.parent().parent())
             for (int i = evaluators.size() -1; i >= 0; --i) {
+                // If element becomes null (e.g., reached document root and went beyond), then no match
                 if (element == null)
                     return false;
+
+                // Check if the current element matches the evaluator
                 Evaluator eval = evaluators.get(i);
                 if (!eval.matches(root, element))
                     return false;
+
+                // Move to the parent for the next evaluator in the chain (moving from right to left in the selector)
+                Element prevElement = element; // Keep track of the element that just matched
                 element = element.parent();
+
+                // Crucial check: If the current 'element' (which is the parent of the previously matched element)
+                // is now an ancestor of the 'root' context (but not the 'root' itself),
+                // then this path is outside the specified selection context and should fail.
+                // This ensures that the entire matched chain of elements remains within the subtree of the 'root' element.
+                // (Unless 'element' is the 'root' itself, which is a valid match point for an evaluator).
+                if (element != null && element != root && !root.isAncestorOf(element)) {
+                    // element is not null, not the root, and root is not an ancestor of element (meaning element is an ancestor of root, but not root itself)
+                    return false;
+                }
             }
             return true;
         }
\ No newline at end of file
