diff --git a/tmp/d5fd8e77-f5a7-4a35-8e66-c5037d286a31_buggy.java b/tmp/9bc14645-0c98-4e2f-bc53-9bc2afe4b36f_fixed.java
index c9c2b44..a7192b8 100644
--- a/tmp/d5fd8e77-f5a7-4a35-8e66-c5037d286a31_buggy.java
+++ b/tmp/9bc14645-0c98-4e2f-bc53-9bc2afe4b36f_fixed.java
@@ -1,13 +1,25 @@
         @Override
         public boolean matches(Element root, Element element) {
             // evaluate from last to first
             for (int i = evaluators.size() -1; i >= 0; --i) {
                 if (element == null)
                     return false;
+
+                // Added condition: If the current 'element' in the parent traversal
+                // is no longer a descendant of 'root' and is not 'root' itself,
+                // then this path is outside the selection scope defined by 'root'.
+                // Jsoup's Element.contains(Element) checks if 'this' element contains 'other' element,
+                // i.e., if 'other' is a descendant of 'this'. It does not count itself.
+                // So, if 'element' is not contained by 'root' AND 'element' is not 'root' itself,
+                // it implies 'element' is an ancestor of 'root' (or unrelated), thus out of scope.
+                if (!root.contains(element) && element != root) {
+                    return false;
+                }
+
                 Evaluator eval = evaluators.get(i);
                 if (!eval.matches(root, element))
                     return false;
                 element = element.parent();
             }
             return true;
         }
