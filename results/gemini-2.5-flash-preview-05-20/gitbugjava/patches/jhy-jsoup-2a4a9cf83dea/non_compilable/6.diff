diff --git a/tmp/fcb43350-b227-489d-930f-5f05f58dea67_buggy.java b/tmp/f27d813c-b5db-4a16-86ae-c3bd6a5bc83b_fixed.java
index c9c2b44..02da75e 100644
--- a/tmp/fcb43350-b227-489d-930f-5f05f58dea67_buggy.java
+++ b/tmp/f27d813c-b5db-4a16-86ae-c3bd6a5bc83b_fixed.java
@@ -1,13 +1,22 @@
         @Override
         public boolean matches(Element root, Element element) {
+            // If the element being matched is the root (context) itself,
+            // and this selector involves checking parents (i.e., has more than one evaluator in the chain),
+            // then it should not match. This prevents `root.select("A > B")` from matching `root`
+            // when `A` is an ancestor of `root` (and thus outside `root`'s direct descendants).
+            // This addresses the specific case where li2.select("ul > li") was matching li2 itself.
+            if (element == root && evaluators.size() > 1) {
+                return false;
+            }
+
             // evaluate from last to first
             for (int i = evaluators.size() -1; i >= 0; --i) {
                 if (element == null)
                     return false;
                 Evaluator eval = evaluators.get(i);
                 if (!eval.matches(root, element))
                     return false;
                 element = element.parent();
             }
             return true;
         }
\ No newline at end of file
