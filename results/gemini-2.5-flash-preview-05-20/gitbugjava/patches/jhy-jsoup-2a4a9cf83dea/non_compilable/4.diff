diff --git a/tmp/4ac1aaaf-bf8a-4fc9-a4c2-357602cfe7d0_buggy.java b/tmp/60d7cf1d-83e3-4098-ae4b-3d3f4f458bc9_fixed.java
index c9c2b44..e11f645 100644
--- a/tmp/4ac1aaaf-bf8a-4fc9-a4c2-357602cfe7d0_buggy.java
+++ b/tmp/60d7cf1d-83e3-4098-ae4b-3d3f4f458bc9_fixed.java
@@ -1,13 +1,24 @@
         @Override
         public boolean matches(Element root, Element element) {
             // evaluate from last to first
             for (int i = evaluators.size() -1; i >= 0; --i) {
                 if (element == null)
                     return false;
                 Evaluator eval = evaluators.get(i);
                 if (!eval.matches(root, element))
                     return false;
+                
+                // Move to parent for the next evaluator in the chain (e.g., if checking "A B",
+                // we first check B against 'element', then A against 'element.parent()').
                 element = element.parent();
+
+                // If the element has gone above the root context, then it's not a match within this context.
+                // The root is the search context. If the current 'element' being checked for an ancestor
+                // relationship is no longer a descendant of the original 'root' (and is not 'root' itself),
+                // then the selector chain extends outside the root's scope.
+                if (element != null && element != root && !root.contains(element)) {
+                    return false;
+                }
             }
             return true;
         }
