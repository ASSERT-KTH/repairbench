diff --git a/tmp/3d43a370-9aef-43b0-b601-1b8bbd49bbe7_buggy.java b/tmp/ff38fa4b-6066-47eb-8a36-0852b46dfdb9_fixed.java
index 3ecd591..65d6840 100644
--- a/tmp/3d43a370-9aef-43b0-b601-1b8bbd49bbe7_buggy.java
+++ b/tmp/ff38fa4b-6066-47eb-8a36-0852b46dfdb9_fixed.java
@@ -1,6 +1,34 @@
     private boolean isInlineable(Document.OutputSettings out) {
-        return tag().isInline()
-            && (parent() == null || parent().isBlock())
-            && previousSibling() != null
-            && !out.outline();
+        // If outline mode is enabled in output settings, no element is considered inlineable for rendering purposes.
+        if (out.outline()) {
+            return false;
+        }
+
+        // According to the Javadoc: "this element itself is a block" -> is inlineable.
+        // This implies that if the element is a block tag, it's considered "inlineable" in the sense
+        // that it can be placed in the flow, even if it forces a line break.
+        if (!tag().isInline()) {
+            return true;
+        }
+
+        // At this point, `this` element is an inline tag.
+        // Now, apply the Javadoc's specific rules for inline elements:
+        // "if it has a block parent, it is ok if there's no previous sibling (it's the first child),
+        // or if it has a previous sibling, that it is also inline"
+        if (parent() != null && parent().isBlock()) {
+            Node prev = previousSibling();
+            // It's inlineable if:
+            // 1. It's the first child (no previous sibling).
+            // 2. Its previous sibling is a TextNode (which is always inline content).
+            // 3. Its previous sibling is an Element and that element's tag is inline.
+            return prev == null
+                || prev.isTextNode()
+                || (prev instanceof Element && ((Element) prev).tag().isInline());
+        }
+
+        // Javadoc: "If it has an inline parent, this means it needs to be inline."
+        // We are already in the `!tag().isInline()` (false) branch, meaning `this` element *is* inline.
+        // If the parent is inline (or if there's no parent, i.e., it's a root or standalone node),
+        // and this element is inline, then it's considered inlineable.
+        return true;
     }
\ No newline at end of file
