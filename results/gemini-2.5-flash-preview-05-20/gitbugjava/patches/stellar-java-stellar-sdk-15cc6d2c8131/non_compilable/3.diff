diff --git a/tmp/c4a21351-1408-43b7-9b9b-df9ab4b26ee0_buggy.java b/tmp/f72cafc2-4fcf-4171-98cf-5ee2c6298c06_fixed.java
index 7be2eb0..d24a774 100644
--- a/tmp/c4a21351-1408-43b7-9b9b-df9ab4b26ee0_buggy.java
+++ b/tmp/f72cafc2-4fcf-4171-98cf-5ee2c6298c06_fixed.java
@@ -1,11 +1,35 @@
+import java.util.Arrays;
+
   @Override
   public boolean equals(Object object) {
+    if (this == object) {
+      return true;
+    }
     if (!(object instanceof KeyPair)) {
       return false;
     }
 
     KeyPair other = (KeyPair) object;
-    return this.mPrivateKey.equals(other.mPrivateKey) &&
-            this.mPublicKey.equals(other.mPublicKey);
 
+    // Compare mPrivateKey, which can be null. Use Arrays.equals for byte arrays.
+    boolean privateKeysEqual;
+    if (this.mPrivateKey == null && other.mPrivateKey == null) {
+        privateKeysEqual = true;
+    } else if (this.mPrivateKey != null && other.mPrivateKey != null) {
+        privateKeysEqual = Arrays.equals(this.mPrivateKey, other.mPrivateKey);
+    } else {
+        privateKeysEqual = false; // One is null, the other is not
+    }
+
+    // Compare mPublicKey, which is also a byte array. Use Arrays.equals.
+    boolean publicKeysEqual;
+    if (this.mPublicKey == null && other.mPublicKey == null) {
+        publicKeysEqual = true;
+    } else if (this.mPublicKey != null && other.mPublicKey != null) {
+        publicKeysEqual = Arrays.equals(this.mPublicKey, other.mPublicKey);
+    } else {
+        publicKeysEqual = false; // One is null, the other is not
+    }
+
+    return privateKeysEqual && publicKeysEqual;
   }
\ No newline at end of file
