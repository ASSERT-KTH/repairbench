diff --git a/tmp/bb56a280-0aa2-432b-9b58-15ededcaf2c0_buggy.java b/tmp/6ef1ae1a-bb76-4ac8-ba96-28bb003a93ab_fixed.java
index 7be2eb0..752c4ca 100644
--- a/tmp/bb56a280-0aa2-432b-9b58-15ededcaf2c0_buggy.java
+++ b/tmp/6ef1ae1a-bb76-4ac8-ba96-28bb003a93ab_fixed.java
@@ -1,11 +1,24 @@
   @Override
   public boolean equals(Object object) {
+    // Check for self-reference first for optimization and null-safety
+    if (this == object) {
+      return true;
+    }
+
+    // Check if the object is an instance of KeyPair
     if (!(object instanceof KeyPair)) {
       return false;
     }
 
+    // Cast the object to KeyPair
     KeyPair other = (KeyPair) object;
-    return this.mPrivateKey.equals(other.mPrivateKey) &&
-            this.mPublicKey.equals(other.mPublicKey);
 
+    // Use java.util.Objects.equals for null-safe comparison of fields.
+    // mPrivateKey can be null if the KeyPair was created from an account ID
+    // (representing a public key only), while mPublicKey should always be non-null.
+    // Objects.equals correctly handles cases where both are null (returns true),
+    // or one is null and the other is not (returns false),
+    // or both are non-null (calls the equals method on the objects).
+    return java.util.Objects.equals(this.mPrivateKey, other.mPrivateKey) &&
+           java.util.Objects.equals(this.mPublicKey, other.mPublicKey);
   }
\ No newline at end of file
