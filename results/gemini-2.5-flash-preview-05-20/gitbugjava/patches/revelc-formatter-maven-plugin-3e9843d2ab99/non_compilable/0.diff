diff --git a/tmp/48fcd040-3854-46dc-b651-10264476571b_buggy.java b/tmp/eb375263-8d26-4ec6-aa3e-0db3f6d64b1c_fixed.java
index 1098336..83e7ad9 100644
--- a/tmp/48fcd040-3854-46dc-b651-10264476571b_buggy.java
+++ b/tmp/eb375263-8d26-4ec6-aa3e-0db3f6d64b1c_fixed.java
@@ -1,16 +1,20 @@
     @Override
     protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
         final var source = new InputSource(new StringReader(code));
         final var parser = new CSSOMParser(new SACParserCSS3());
         final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
         var formattedCode = sheet.getCssText(this.formatter);
 
-        // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
-        formattedCode = formattedCode.replace("\t;", "\\9;");
+        // The following line was a patch to convert tabs generated by cssparser back to '\9' for IE 7,8, and 9 hacks.
+        // However, this patch can inadvertently convert legitimate tab characters (e.g., for indentation)
+        // into '\9;', leading to incorrect formatting, especially if the underlying cssparser
+        // library has been updated to handle '\9' correctly or if the input does not contain the IE hack.
+        // Removing this specific replacement as it is likely causing the checksum mismatch in general CSS formatting tests.
+        // formattedCode = formattedCode.replace("\t;", "\\9;");
 
         if (code.equals(formattedCode)) {
             return null;
         }
         return formattedCode;
     }
\ No newline at end of file
