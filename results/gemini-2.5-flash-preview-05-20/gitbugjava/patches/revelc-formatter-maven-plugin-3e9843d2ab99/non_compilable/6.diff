diff --git a/tmp/910332f6-92fc-4b88-b498-89218a5571b5_buggy.java b/tmp/ceb67067-370f-4b75-a7d9-6b7ff6a711ef_fixed.java
index 1098336..b654466 100644
--- a/tmp/910332f6-92fc-4b88-b498-89218a5571b5_buggy.java
+++ b/tmp/ceb67067-370f-4b75-a7d9-6b7ff6a711ef_fixed.java
@@ -1,16 +1,35 @@
     @Override
     protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
+        // Configure the formatter for line endings based on the 'ending' parameter.
+        // This addresses the "FIXME Handle linux vs windows since this formatter does not accept line endings"
+        // by overriding the hardcoded LF setting from the CssFormatter constructor.
+        if (ending == LineEnding.LF) {
+            this.formatter.setForceLF(true);
+            // Ensure CRLF is off if LF is forced (though setForceLF should handle this internally)
+            this.formatter.setForceCRLF(false);
+        } else if (ending == LineEnding.CRLF) {
+            this.formatter.setForceCRLF(true);
+            // Ensure LF is off if CRLF is forced (though setForceCRLF should handle this internally)
+            this.formatter.setForceLF(false);
+        } else {
+            // For other LineEnding types (e.g., SYSTEM, MIXED),
+            // revert to the formatter's default behavior (which might be LF or platform dependent).
+            // Explicitly setting both to false ensures no forcing is applied.
+            this.formatter.setForceLF(false);
+            this.formatter.setForceCRLF(false);
+        }
+
         final var source = new InputSource(new StringReader(code));
         final var parser = new CSSOMParser(new SACParserCSS3());
         final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
         var formattedCode = sheet.getCssText(this.formatter);
 
         // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
         formattedCode = formattedCode.replace("\t;", "\\9;");
 
         if (code.equals(formattedCode)) {
             return null;
         }
         return formattedCode;
     }
