diff --git a/tmp/69742ec2-cf80-47be-bb6f-a968ba71ac6a_buggy.java b/tmp/593cfeb8-6b95-4ef9-9276-1f9365f03926_fixed.java
index 1098336..002d0bf 100644
--- a/tmp/69742ec2-cf80-47be-bb6f-a968ba71ac6a_buggy.java
+++ b/tmp/593cfeb8-6b95-4ef9-9276-1f9365f03926_fixed.java
@@ -1,16 +1,26 @@
     @Override
     protected String doFormat(final String code, final LineEnding ending) throws IOException {
 
         final var source = new InputSource(new StringReader(code));
         final var parser = new CSSOMParser(new SACParserCSS3());
         final var sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);
         var formattedCode = sheet.getCssText(this.formatter);
 
         // Patch converted 'tab' back to '\9' for IE 7,8, and 9 hack. Cssparser switches it to 'tab'.
         formattedCode = formattedCode.replace("\t;", "\\9;");
 
-        if (code.equals(formattedCode)) {
+        // Normalize line endings of the formatted code to the desired ending.
+        // The CSSOMParser might produce fixed line endings (e.g., LF),
+        // so we need to convert them to what is expected.
+        formattedCode = ending.normalize(formattedCode);
+
+        // Normalize original code to the same line ending for a fair comparison.
+        // If the original code already has the desired formatting AND line endings,
+        // we should return null to indicate no change is needed.
+        final String normalizedOriginalCode = ending.normalize(code);
+
+        if (normalizedOriginalCode.equals(formattedCode)) {
             return null;
         }
         return formattedCode;
     }
\ No newline at end of file
