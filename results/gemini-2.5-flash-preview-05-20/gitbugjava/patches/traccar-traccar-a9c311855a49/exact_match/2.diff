diff --git a/tmp/7a55e41d-6b9b-4ad8-8782-1ef8d01e70e8_buggy.java b/tmp/6b287715-6caa-4ff4-98ab-089fabd4a92b_fixed.java
index ff397b6..753bf2a 100644
--- a/tmp/7a55e41d-6b9b-4ad8-8782-1ef8d01e70e8_buggy.java
+++ b/tmp/6b287715-6caa-4ff4-98ab-089fabd4a92b_fixed.java
@@ -1,35 +1,37 @@
     @Override
     protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
         JsonObject json;
         try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
             json = Json.createReader(inputStream).readObject();
         }
 
         String type = json.getString("rpt");
         switch (type) {
             case "hf":
             case "loc":
                 Position position = new Position(getProtocolName());
                 position.setDeviceId(deviceSession.getDeviceId());
 
                 position.setValid(true);
 
-                DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
+                // The original pattern was "yyyyMMdd'T'HHmmss.SSS'Z'", which does not match the input "2023-06-01T03:09:51.362Z".
+                // The correct pattern must include hyphens for the date and colons for the time.
+                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
                 position.setTime(dateFormat.parse(json.getString("ts")));
 
                 JsonObject location = json.getJsonObject("location");
                 position.setLatitude(location.getJsonNumber("lat").doubleValue());
                 position.setLongitude(location.getJsonNumber("lon").doubleValue());
 
                 position.setCourse(json.getInt("bear"));
                 position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
 
                 position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
 
                 return position;
 
             default:
                 return null;
         }
     }
\ No newline at end of file
