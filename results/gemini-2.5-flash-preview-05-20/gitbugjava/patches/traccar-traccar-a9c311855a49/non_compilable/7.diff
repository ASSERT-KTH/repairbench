diff --git a/tmp/2aa3c852-bae1-47dc-af4d-ab8b77cb050d_buggy.java b/tmp/fd0d567a-3bca-4520-87e5-82c11afc3513_fixed.java
index ff397b6..bc61cd7 100644
--- a/tmp/2aa3c852-bae1-47dc-af4d-ab8b77cb050d_buggy.java
+++ b/tmp/fd0d567a-3bca-4520-87e5-82c11afc3513_fixed.java
@@ -1,35 +1,42 @@
     @Override
     protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
         JsonObject json;
         try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
             json = Json.createReader(inputStream).readObject();
         }
 
         String type = json.getString("rpt");
         switch (type) {
             case "hf":
             case "loc":
                 Position position = new Position(getProtocolName());
                 position.setDeviceId(deviceSession.getDeviceId());
 
                 position.setValid(true);
 
-                DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
+                // The original SimpleDateFormat pattern "yyyyMMdd'T'HHmmss.SSS'Z'"
+                // does not match the input date format "2023-06-01T03:09:51.362Z"
+                // due to missing hyphens in the date part and colons in the time part.
+                // It also implicitly expects 'Z' to be handled as a literal or RFC 822 timezone.
+                // Changed to match the ISO 8601 format precisely.
+                // Also setting TimeZone to UTC to correctly interpret 'Z'.
+                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
+                dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
                 position.setTime(dateFormat.parse(json.getString("ts")));
 
                 JsonObject location = json.getJsonObject("location");
                 position.setLatitude(location.getJsonNumber("lat").doubleValue());
                 position.setLongitude(location.getJsonNumber("lon").doubleValue());
 
                 position.setCourse(json.getInt("bear"));
                 position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
 
                 position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
 
                 return position;
 
             default:
                 return null;
         }
     }
\ No newline at end of file
