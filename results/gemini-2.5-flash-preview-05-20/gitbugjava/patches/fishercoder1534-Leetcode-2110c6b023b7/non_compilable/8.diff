diff --git a/tmp/647d097b-7ff5-45c3-a313-44924ae291a7_buggy.java b/tmp/5c426279-e2ad-4498-8050-11b1eff9bcc0_fixed.java
index dd3b100..8180f3f 100644
--- a/tmp/647d097b-7ff5-45c3-a313-44924ae291a7_buggy.java
+++ b/tmp/5c426279-e2ad-4498-8050-11b1eff9bcc0_fixed.java
@@ -1,12 +1,28 @@
+/**
+ * Definition for a binary tree node.
+ * public class TreeNode {
+ *     int val;
+ *     TreeNode left;
+ *     TreeNode right;
+ *     TreeNode(int x) { val = x; }
+ * }
+ */
+class Solution {
     public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
-            if (root == null || p == root || q == root) {
-                return root;
-            }
-            if ((root.val - p.val) * (root.val - q.val) > 0) {
-                if (root.val - p.val > 0) {
+        // If both p and q are smaller than the current root,
+        // their LCA must be in the left subtree.
+        if (p.val < root.val && q.val < root.val) {
             return lowestCommonAncestor(root.left, p, q);
         }
+        // If both p and q are larger than the current root,
+        // their LCA must be in the right subtree.
+        else if (p.val > root.val && q.val > root.val) {
             return lowestCommonAncestor(root.right, p, q);
         }
+        // If one is smaller and the other is larger, or one of them is
+        // equal to the current root, then the current root is the LCA.
+        else {
             return root;
         }
+    }
+}
\ No newline at end of file
