diff --git a/tmp/2766fd65-3588-40dd-903e-f5bd953fa14b_buggy.java b/tmp/08cde3c6-76ef-48cb-afb0-a47398d19895_fixed.java
index abd3198..9f8271e 100644
--- a/tmp/2766fd65-3588-40dd-903e-f5bd953fa14b_buggy.java
+++ b/tmp/08cde3c6-76ef-48cb-afb0-a47398d19895_fixed.java
@@ -1,28 +1,30 @@
     @Override
     protected Object encodeCommand(Command command) {
 
         ByteBuf content = Unpooled.buffer();
 
         switch (command.getType()) {
             case Command.TYPE_POSITION_SINGLE:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
             case Command.TYPE_ENGINE_STOP:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
             case Command.TYPE_ENGINE_RESUME:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
             case Command.TYPE_SET_SPEED_LIMIT:
                 content.writeByte(command.getInteger(Command.KEY_DATA));
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
             case Command.TYPE_SET_ODOMETER:
                 content.writeShort(command.getInteger(Command.KEY_DATA));
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
             case Command.TYPE_POSITION_PERIODIC:
                 String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
-                content.writeShort(Integer.valueOf(data[0]));
-                content.writeShort(Integer.valueOf(data[1]));
-                content.writeShort(Integer.valueOf(data[2]));
+                content.writeShort(Integer.valueOf(data[0])); // first value (interval in seconds)
+                content.writeShort(Integer.valueOf(data[1])); // second value (upload interval)
+                // The third value (upload time or timeout) should be a single byte.
+                // The original code used writeShort, causing an extra byte (0x00) to be prepended to 0x78.
+                content.writeByte(Integer.valueOf(data[2])); 
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);
             default:
                 return null;
         }
     }
\ No newline at end of file
