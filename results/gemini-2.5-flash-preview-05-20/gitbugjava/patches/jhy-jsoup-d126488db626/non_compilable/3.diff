diff --git a/tmp/09ac6e4d-043d-46e6-93c4-aefc54c316d0_buggy.java b/tmp/bae2070f-cc50-4c2c-95e2-fde6fc9737dd_fixed.java
index 5bf31b1..e2ed74c 100644
--- a/tmp/09ac6e4d-043d-46e6-93c4-aefc54c316d0_buggy.java
+++ b/tmp/bae2070f-cc50-4c2c-95e2-fde6fc9737dd_fixed.java
@@ -1,17 +1,19 @@
     private String consumeSubQuery() {
         StringBuilder sq = StringUtil.borrowBuilder();
         while (!tq.isEmpty()) {
             if (tq.matches("("))
                 sq.append("(").append(tq.chompBalanced('(', ')')).append(")");
             else if (tq.matches("["))
                 sq.append("[").append(tq.chompBalanced('[', ']')).append("]");
-            else if (tq.matchesAny(Combinators))
-                if (sq.length() > 0)
+            // Only break on space or comma. Other combinators (>, +, ~) are part of the subquery.
+            else if (tq.matches(" ") || tq.matches(",")) { // These are the subquery terminators
+                if (sq.length() > 0) // If we have content, this is the end of the subquery
                     break;
-                else
+                else // If it's a leading space or comma, consume it (e.g. leading space, or comma for new query part)
                     tq.consume();
-            else
+            }
+            else // Any other character, including relational combinators (>, +, ~), tag name, id, class, etc.
                 sq.append(tq.consume());
         }
         return StringUtil.releaseBuilder(sq);
     }
\ No newline at end of file
