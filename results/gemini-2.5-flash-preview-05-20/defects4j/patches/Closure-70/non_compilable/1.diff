diff --git a/tmp/d4af667a-5eef-420d-a2a2-eded7858cd53_buggy.java b/tmp/74b694b0-c844-4542-9203-ed8645897079_fixed.java
index 1530b34..6335e84 100644
--- a/tmp/d4af667a-5eef-420d-a2a2-eded7858cd53_buggy.java
+++ b/tmp/74b694b0-c844-4542-9203-ed8645897079_fixed.java
@@ -1,23 +1,44 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
-      Node body = astParameters.getNext();
+      // Node body = astParameters.getNext(); // 'body' is not used in this method, so it's safe to leave as is or remove.
       FunctionType functionType = (FunctionType) functionNode.getJSType();
+
+      Node jsDocParameters = null;
       if (functionType != null) {
-        Node jsDocParameters = functionType.getParametersNode();
-        if (jsDocParameters != null) {
-          Node jsDocParameter = jsDocParameters.getFirstChild();
+        // Retrieve the JSDoc parameters node, which can be null if no @param tags are present.
+        jsDocParameters = functionType.getParametersNode();
+      }
+
+      // Get the first JSDoc parameter, if available.
+      Node jsDocParameter = (jsDocParameters != null) ? jsDocParameters.getFirstChild() : null;
+
+      // Iterate through all AST parameters. Each AST parameter must be declared.
       for (Node astParameter : astParameters.children()) {
+        JSType paramType = null;
+
+        // Try to get the type from JSDoc first, if a corresponding JSDoc parameter exists.
         if (jsDocParameter != null) {
-              defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+          paramType = jsDocParameter.getJSType();
+          // Move to the next JSDoc parameter for the next AST parameter.
           jsDocParameter = jsDocParameter.getNext();
-            } else {
-              defineSlot(astParameter, functionNode, null, true);
         }
+
+        // If no type was found from JSDoc (or JSDoc's type was null),
+        // try to use the type already set on the AST node (e.g., from an initial pass).
+        // If that's also null, fall back to the UNKNOWN type.
+        if (paramType == null) {
+          paramType = astParameter.getJSType();
+          if (paramType == null) {
+             // Fallback to UNKNOWN if no specific type is available from JSDoc or the AST node.
+             // This assumes that the enclosing class (e.g., TypeCheck) provides getUnknownType().
+             paramType = super.getUnknownType();
           }
         }
+        // Define the slot for the argument in the function's scope.
+        // 'true' indicates it's a local variable.
+        defineSlot(astParameter, functionNode, paramType, true);
       }
     } // end declareArguments
