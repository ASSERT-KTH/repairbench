diff --git a/tmp/89ecf570-8c19-4152-8fe2-15766c1ab78b_buggy.java b/tmp/ddc308b8-e80a-4769-8c44-f6d9d52b7854_fixed.java
index 1530b34..137b34d 100644
--- a/tmp/89ecf570-8c19-4152-8fe2-15766c1ab78b_buggy.java
+++ b/tmp/ddc308b8-e80a-4769-8c44-f6d9d52b7854_fixed.java
@@ -1,23 +1,29 @@
     /**
      * Declares all of a function's arguments.
      */
     private void declareArguments(Node functionNode) {
       Node astParameters = functionNode.getFirstChild().getNext();
-      Node body = astParameters.getNext();
+      Node body = astParameters.getNext(); // This variable is not used.
       FunctionType functionType = (FunctionType) functionNode.getJSType();
       if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
           Node jsDocParameter = jsDocParameters.getFirstChild();
           for (Node astParameter : astParameters.children()) {
             if (jsDocParameter != null) {
+              // The fourth argument 'isArguments' should be true only for the special
+              // 'arguments' object, not for general function parameters.
+              // Setting it to false allows the compiler to correctly identify
+              // duplicate variable declarations if a local variable with the same
+              // name is declared later in the function body.
               defineSlot(astParameter, functionNode,
-                  jsDocParameter.getJSType(), true);
+                  jsDocParameter.getJSType(), false);
               jsDocParameter = jsDocParameter.getNext();
             } else {
-              defineSlot(astParameter, functionNode, null, true);
+              // Same reasoning: formal parameters are not the special 'arguments' object.
+              defineSlot(astParameter, functionNode, null, false);
             }
           }
         }
       }
     } // end declareArguments
\ No newline at end of file
