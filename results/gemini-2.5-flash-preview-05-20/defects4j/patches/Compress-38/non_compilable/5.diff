diff --git a/tmp/081999ab-6654-433c-a1f5-20502509dd2c_buggy.java b/tmp/34bb9a92-d0cb-47b7-9785-8a074a1dd6ce_fixed.java
index 192e83d..c3b6ed9 100644
--- a/tmp/081999ab-6654-433c-a1f5-20502509dd2c_buggy.java
+++ b/tmp/34bb9a92-d0cb-47b7-9785-8a074a1dd6ce_fixed.java
@@ -1,21 +1,31 @@
-    /**
-     * Return whether or not this entry represents a directory.
-     *
-     * @return True if this entry is a directory.
-     */
     @Override
     public boolean isDirectory() {
         if (file != null) {
             return file.isDirectory();
         }
 
+        // Explicit directory type flag (POSIX standard)
         if (linkFlag == LF_DIR) {
             return true;
         }
 
+        // Explicit non-directory type flags should always return false, regardless of name.
+        // This includes PAX headers, hard links, symbolic links, character/block devices, FIFOs, and contiguous files.
+        // LF_NORMAL (0) is specifically omitted here because it's ambiguous and
+        // can be used for directories with trailing slashes in old tar formats (e.g., macOS tar).
+        if (linkFlag == LF_PAX_EXTENDED_HEADER || linkFlag == LF_PAX_GLOBAL_EXTENDED_HEADER ||
+            linkFlag == LF_LINK || linkFlag == LF_SYMLINK || linkFlag == LF_CHR ||
+            linkFlag == LF_BLK || linkFlag == LF_FIFO || linkFlag == LF_CONTIG) {
+            return false;
+        }
+
+        // For ambiguous or older tar formats (e.g., LF_NORMAL where LF_DIR wasn't used),
+        // rely on the name ending with a slash as a heuristic for directories.
+        // This is necessary to support cases like macOS tar which uses type=0 for directories
+        // and relies on the trailing slash in the name.
         if (getName().endsWith("/")) {
             return true;
         }
 
         return false;
     }
\ No newline at end of file
