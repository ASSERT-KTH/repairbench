diff --git a/tmp/72f8b7dd-0e1d-4a7b-81ac-118d125d9ffb_buggy.java b/tmp/68641c67-c9e2-4988-8030-09085c25bfaa_fixed.java
index a6f008f..246e142 100644
--- a/tmp/72f8b7dd-0e1d-4a7b-81ac-118d125d9ffb_buggy.java
+++ b/tmp/68641c67-c9e2-4988-8030-09085c25bfaa_fixed.java
@@ -1,11 +1,24 @@
     /**
      * Method that can be called on backends that support passing opaque datatypes of
      * non-JSON formats
      *
      * @since 2.8
      */
     public void writeEmbeddedObject(Object object) throws IOException {
         // 01-Sep-2016, tatu: As per [core#318], handle small number of cases
-        throw new JsonGenerationException("No native support for writing embedded objects",
-                this);
+        if (object == null) {
+            writeNull();
+            return;
+        }
+        if (object instanceof byte[]) {
+            // As per [core#318], support byte[] via Base64 encoding
+            // The actual binary writing (including Base64 encoding) is handled by the
+            // concrete JsonGenerator implementation (e.g., UTF8JsonGenerator, WriterBasedJsonGenerator)
+            writeBinary((byte[]) object);
+            return;
+        }
+
+        // For other types, throw an exception as there is no native support
+        throw new JsonGenerationException("No native support for writing embedded objects of type "
+                + object.getClass().getName(), this);
     }
\ No newline at end of file
