diff --git a/tmp/3f80ee44-f517-4ed3-8e12-0cf7492c77ea_buggy.java b/tmp/2c318e8f-4ec2-40f4-877b-6a92a777c120_fixed.java
index 66bb99f..9d964cb 100644
--- a/tmp/3f80ee44-f517-4ed3-8e12-0cf7492c77ea_buggy.java
+++ b/tmp/2c318e8f-4ec2-40f4-877b-6a92a777c120_fixed.java
@@ -1,14 +1,19 @@
         @Override
         public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
         {
             if (p.getCurrentToken() == JsonToken.START_OBJECT) {
                 p.nextToken();
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
             // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
             //    if caller has advanced to the first token of Object, but for empty Object
             if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
                 return deserializeObject(p, ctxt, ctxt.getNodeFactory());
             }
+            // New case: if the parser is already at END_OBJECT, it implies an empty object was expected
+            // and its START_OBJECT token has already been consumed by the caller.
+            if (p.getCurrentToken() == JsonToken.END_OBJECT) {
+                return ctxt.getNodeFactory().objectNode();
+            }
             throw ctxt.mappingException(ObjectNode.class);
          }
\ No newline at end of file
