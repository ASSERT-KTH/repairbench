diff --git a/tmp/95e47db0-88c3-4628-922d-f56ab723f7cc_buggy.java b/tmp/902e1e2d-4a91-49c4-b70e-39ca0487fcf0_fixed.java
index 0722547..cebe10c 100644
--- a/tmp/95e47db0-88c3-4628-922d-f56ab723f7cc_buggy.java
+++ b/tmp/902e1e2d-4a91-49c4-b70e-39ca0487fcf0_fixed.java
@@ -1,26 +1,30 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
+        // _origBufferLen holds length of PREVIOUS buffer
         _currInputProcessed += _origBufferLen;
 
         // Also need to adjust row start, to work as if it extended into the past wrt new buffer
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
+        // FIX: The _inputStart variable, used for calculating relative offsets within the current buffer,
+        // must be updated to reflect the start of the current logical buffer segment.
+        _inputStart = start;
     }
\ No newline at end of file
