diff --git a/tmp/66dc66d6-0166-41e2-95e8-aca189f69d91_buggy.java b/tmp/02fe5c37-3dc4-4656-b6d1-8f3b27211c8b_fixed.java
index 47915ed..d661937 100644
--- a/tmp/66dc66d6-0166-41e2-95e8-aca189f69d91_buggy.java
+++ b/tmp/02fe5c37-3dc4-4656-b6d1-8f3b27211c8b_fixed.java
@@ -1,22 +1,33 @@
     /* (non-Javadoc)
      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
      */
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
             //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
+            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same.
             //Only for compareTo() method by the Comparable interface
+            
+            // Check if the mock is being compared to itself (same instance)
+            Object[] arguments = invocation.getArguments();
+            if (arguments != null && arguments.length == 1) {
+                Object self = invocation.getMock();
+                Object other = arguments[0];
+                if (self == other) {
+                    return 0; // Return 0 if comparing to self
+                }
+            }
+            // If not comparing to self, return 1 (anything but 0 is good)
             return 1;
         }
         
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
\ No newline at end of file
