diff --git a/tmp/b3d1016f-172e-4b8d-adda-554fa94bebab_buggy.java b/tmp/5ea9f28d-c23a-4ab5-ad95-04cba94b81bc_fixed.java
index 98dde53..a3d301b 100644
--- a/tmp/b3d1016f-172e-4b8d-adda-554fa94bebab_buggy.java
+++ b/tmp/5ea9f28d-c23a-4ab5-ad95-04cba94b81bc_fixed.java
@@ -1,34 +1,51 @@
         public void head(org.jsoup.nodes.Node source, int depth) {
             namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
             if (source instanceof org.jsoup.nodes.Element) {
                 org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
+                // updateNamespaces updates the current namespace stack based on xmlns attributes
+                // and returns the prefix of sourceEl's tag name.
                 String prefix = updateNamespaces(sourceEl);
+                // Get the resolved namespace URI for the element's prefix from the current stack.
+                // This will be null if the prefix is not declared in the current scope.
                 String namespace = namespacesStack.peek().get(prefix);
-                String tagName = sourceEl.tagName();
                 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
+                String tagName = sourceEl.tagName(); // Jsoup's tag name, e.g., "fb:like" or "div"
+
+                Element el;
+                // The W3C DOM's createElementNS method throws a NAMESPACE_ERR if the
+                // namespaceURI is null or empty, and the qualifiedName (tagName) contains a colon.
+                // This occurs when a prefix is used without being declared (e.g., <fb:like> without xmlns:fb).
+                // In such cases, the element should be created without a namespace URI,
+                // and the qualifiedName should serve as the nodeName, with the localName derived from it.
+                // doc.createElement(tagName) handles this correctly by treating the entire tagName
+                // as the qualified name for an element without a namespace.
+                if (namespace == null || namespace.isEmpty()) {
+                    el = doc.createElement(tagName);
+                } else {
+                    el = doc.createElementNS(namespace, tagName);
+                }
+
                 copyAttributes(sourceEl, el);
                 if (dest == null) { // sets up the root
                     doc.appendChild(el);
                 } else {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
             } else if (source instanceof org.jsoup.nodes.TextNode) {
                 org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
                 dest.appendChild(text);
             } else if (source instanceof org.jsoup.nodes.Comment) {
                 org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
                 Comment comment = doc.createComment(sourceComment.getData());
                 dest.appendChild(comment);
             } else if (source instanceof org.jsoup.nodes.DataNode) {
                 org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
                 Text node = doc.createTextNode(sourceData.getWholeData());
                 dest.appendChild(node);
             } else {
                 // unhandled
             }
         }
\ No newline at end of file
