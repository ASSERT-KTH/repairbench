diff --git a/tmp/12d4d333-c162-4cea-89c7-28eb9584e9fd_buggy.java b/tmp/bed89152-95e7-44e1-9a71-61e32c8a8864_fixed.java
index 98dde53..c7256eb 100644
--- a/tmp/12d4d333-c162-4cea-89c7-28eb9584e9fd_buggy.java
+++ b/tmp/bed89152-95e7-44e1-9a71-61e32c8a8864_fixed.java
@@ -1,34 +1,45 @@
         public void head(org.jsoup.nodes.Node source, int depth) {
             namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
             if (source instanceof org.jsoup.nodes.Element) {
                 org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
-                String prefix = updateNamespaces(sourceEl);
-                String namespace = namespacesStack.peek().get(prefix);
-                String tagName = sourceEl.tagName();
+                String prefix = updateNamespaces(sourceEl); // This populates namespacesStack and returns the prefix of sourceEl
+                String namespace = namespacesStack.peek().get(prefix); // Gets the W3C namespace URI for that prefix
+                String tagName = sourceEl.tagName(); // The full tag name (e.g., "fb:like" or "div")
+
+                Element el;
+                // If the namespace is null AND the tag name contains a prefix (colon),
+                // it indicates an undeclared namespace. In strict DOM implementations,
+                // createElementNS(null, "prefix:name") throws NAMESPACE_ERR.
+                // The workaround is to create it as a regular element without a namespace,
+                // which prevents the error but might affect localName (it becomes the full tagName).
+                // However, it preserves the nodeName and avoids the crash.
+                if (namespace == null && tagName.contains(":")) {
+                    el = doc.createElement(tagName);
+                } else {
+                    el = doc.createElementNS(namespace, tagName);
+                }
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
                 copyAttributes(sourceEl, el);
                 if (dest == null) { // sets up the root
                     doc.appendChild(el);
                 } else {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
             } else if (source instanceof org.jsoup.nodes.TextNode) {
                 org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
                 dest.appendChild(text);
             } else if (source instanceof org.jsoup.nodes.Comment) {
                 org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
                 Comment comment = doc.createComment(sourceComment.getData());
                 dest.appendChild(comment);
             } else if (source instanceof org.jsoup.nodes.DataNode) {
                 org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
                 Text node = doc.createTextNode(sourceData.getWholeData());
                 dest.appendChild(node);
             } else {
                 // unhandled
             }
         }
\ No newline at end of file
