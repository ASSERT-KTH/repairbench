diff --git a/tmp/29abe570-8b53-4eb7-9ec3-8f6a4bb10927_buggy.java b/tmp/3a97c231-b696-4dfd-a16a-f571d28a27d6_fixed.java
index 98dde53..cc6d014 100644
--- a/tmp/29abe570-8b53-4eb7-9ec3-8f6a4bb10927_buggy.java
+++ b/tmp/3a97c231-b696-4dfd-a16a-f571d28a27d6_fixed.java
@@ -1,34 +1,43 @@
         public void head(org.jsoup.nodes.Node source, int depth) {
             namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack
             if (source instanceof org.jsoup.nodes.Element) {
                 org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;
 
                 String prefix = updateNamespaces(sourceEl);
-                String namespace = namespacesStack.peek().get(prefix);
-                String tagName = sourceEl.tagName();
+                String namespace = namespacesStack.peek().get(prefix); // This will be null for undeclared prefixes
+                String tagName = sourceEl.tagName(); // e.g., "fb:like"
+
+                Element el;
+                // If a namespace is null (meaning undeclared) and the tagName contains a prefix (e.g., "fb:like"),
+                // calling createElementNS(null, "fb:like") would throw a NAMESPACE_ERR in a namespace-aware W3C DOM.
+                // In such cases, we create the element as a non-namespace-aware element to avoid the error,
+                // preserving the full tagName as the node name.
+                if (namespace == null && tagName.contains(":")) {
+                    el = doc.createElement(tagName);
+                } else {
+                    el = doc.createElementNS(namespace, tagName);
+                }
 
-                Element el =
-                    doc.createElementNS(namespace, tagName);
                 copyAttributes(sourceEl, el);
                 if (dest == null) { // sets up the root
                     doc.appendChild(el);
                 } else {
                     dest.appendChild(el);
                 }
                 dest = el; // descend
             } else if (source instanceof org.jsoup.nodes.TextNode) {
                 org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;
                 Text text = doc.createTextNode(sourceText.getWholeText());
                 dest.appendChild(text);
             } else if (source instanceof org.jsoup.nodes.Comment) {
                 org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;
                 Comment comment = doc.createComment(sourceComment.getData());
                 dest.appendChild(comment);
             } else if (source instanceof org.jsoup.nodes.DataNode) {
                 org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;
                 Text node = doc.createTextNode(sourceData.getWholeData());
                 dest.appendChild(node);
             } else {
                 // unhandled
             }
         }
