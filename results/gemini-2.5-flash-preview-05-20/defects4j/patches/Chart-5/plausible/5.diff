diff --git a/tmp/2988f88e-99a7-4b69-ab16-efacca612260_buggy.java b/tmp/27487fce-2596-48f9-b580-1f7c9d84660d_fixed.java
index fd8eae5..1a951f5 100644
--- a/tmp/2988f88e-99a7-4b69-ab16-efacca612260_buggy.java
+++ b/tmp/27487fce-2596-48f9-b580-1f7c9d84660d_fixed.java
@@ -1,47 +1,54 @@
     /**
      * Adds or updates an item in the series and sends a
      * {@link SeriesChangeEvent} to all registered listeners.
      *
      * @param x  the x-value (<code>null</code> not permitted).
      * @param y  the y-value (<code>null</code> permitted).
      *
      * @return A copy of the overwritten data item, or <code>null</code> if no
      *         item was overwritten.
      */
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
 
-        // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
-        int index = indexOf(x);
+        int index = indexOf(x); // Find index based on x-value
+
+        // If 'x' is found AND duplicate X-values are NOT allowed, then update the existing item.
         if (index >= 0 && !this.allowDuplicateXValues) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
             }
             catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
         }
+        // Otherwise (either 'x' is not found, OR duplicate X-values are allowed), add a new item.
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+            XYDataItem newItem = new XYDataItem(x, y);
             if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+                // If auto-sorting is enabled, determine the correct insertion point.
+                // 'indexOf(x)' returns:
+                //   - A non-negative index if 'x' was found (meaning an item with this x-value exists).
+                //     If duplicates are allowed, we insert the new item *after* the found one.
+                //   - A negative value (-(insertion point) - 1) if 'x' was not found.
+                //     We use this to get the correct insertion point.
+                int insertionPoint = (index < 0) ? (-index - 1) : (index + 1);
+                this.data.add(insertionPoint, newItem);
             }
             else {
-                this.data.add(new XYDataItem(x, y));
+                // If not auto-sorting, just append the new item to the end of the list.
+                this.data.add(newItem);
             }
-            // check if this addition will exceed the maximum item count...
+            // Check if this addition exceeds the maximum item count and remove the oldest item if so.
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }
         }
         fireSeriesChanged();
         return overwritten;
     }
