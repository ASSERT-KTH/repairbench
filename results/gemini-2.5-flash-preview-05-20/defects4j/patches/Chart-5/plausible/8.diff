diff --git a/tmp/d9ae78fb-bcae-4e82-95dc-959bdf175bc1_buggy.java b/tmp/3e30fef1-ad07-4fb1-9eda-2c9bc835944b_fixed.java
index fd8eae5..9a07396 100644
--- a/tmp/d9ae78fb-bcae-4e82-95dc-959bdf175bc1_buggy.java
+++ b/tmp/3e30fef1-ad07-4fb1-9eda-2c9bc835944b_fixed.java
@@ -1,47 +1,67 @@
     /**
      * Adds or updates an item in the series and sends a
      * {@link SeriesChangeEvent} to all registered listeners.
      *
      * @param x  the x-value (<code>null</code> not permitted).
      * @param y  the y-value (<code>null</code> permitted).
      *
      * @return A copy of the overwritten data item, or <code>null</code> if no
      *         item was overwritten.
      */
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
 
-        // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
+
+        // Case 1: Update an existing item
+        // This path is taken if an item with 'x' is found AND duplicates are NOT allowed.
         if (index >= 0 && !this.allowDuplicateXValues) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
             }
             catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
         }
+        // Case 2: Add a new item
+        // This path is taken if:
+        // a) Duplicates ARE allowed (regardless of whether 'x' exists).
+        // b) Duplicates are NOT allowed AND 'x' is not found (index < 0).
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
             if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+                int insertionPoint;
+                if (index < 0) {
+                    // Item with 'x' was not found (binarySearch returned negative value).
+                    // The insertion point is derived directly from the negative 'index'.
+                    insertionPoint = -index - 1;
+                } else {
+                    // Item with 'x' was found at 'index' (binarySearch returned non-negative value).
+                    // This implies that 'this.allowDuplicateXValues' must be true for this
+                    // 'else' block to be reached (otherwise, it would have gone to the 'if' block to update).
+                    // When duplicates are allowed and auto-sorting, the new item should be
+                    // inserted AFTER all existing items with the same x-value to maintain order
+                    // and reflect insertion order for duplicates.
+                    insertionPoint = index; // Start checking from where it was found
+                    while (insertionPoint < this.data.size()
+                           && ((XYDataItem) this.data.get(insertionPoint)).getX().equals(x)) {
+                        insertionPoint++;
                     }
-            else {
+                }
+                this.data.add(insertionPoint, new XYDataItem(x, y));
+            } else {
+                // If not auto-sorting, just append the new item to the end of the list.
                 this.data.add(new XYDataItem(x, y));
             }
-            // check if this addition will exceed the maximum item count...
+            // Check if this addition will exceed the maximum item count...
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }
         }
         fireSeriesChanged();
         return overwritten;
     }
\ No newline at end of file
