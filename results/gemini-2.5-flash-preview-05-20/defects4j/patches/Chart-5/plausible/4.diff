diff --git a/tmp/f0cda8e4-174a-474b-ba3c-622d4a2313e9_buggy.java b/tmp/20d7ebd4-3db6-46c8-b60f-c4d0b3ca0d63_fixed.java
index fd8eae5..8110fd1 100644
--- a/tmp/f0cda8e4-174a-474b-ba3c-622d4a2313e9_buggy.java
+++ b/tmp/20d7ebd4-3db6-46c8-b60f-c4d0b3ca0d63_fixed.java
@@ -1,47 +1,68 @@
     /**
      * Adds or updates an item in the series and sends a
      * {@link SeriesChangeEvent} to all registered listeners.
      *
      * @param x  the x-value (<code>null</code> not permitted).
      * @param y  the y-value (<code>null</code> permitted).
      *
      * @return A copy of the overwritten data item, or <code>null</code> if no
      *         item was overwritten.
      */
     public XYDataItem addOrUpdate(Number x, Number y) {
         if (x == null) {
             throw new IllegalArgumentException("Null 'x' argument.");
         }
 
-        // if we get to here, we know that duplicate X values are not permitted
         XYDataItem overwritten = null;
         int index = indexOf(x);
+
+        // If an item with the same x-value is found AND duplicate x-values are NOT allowed,
+        // then we update the existing item.
         if (index >= 0 && !this.allowDuplicateXValues) {
             XYDataItem existing = (XYDataItem) this.data.get(index);
             try {
                 overwritten = (XYDataItem) existing.clone();
             }
             catch (CloneNotSupportedException e) {
                 throw new SeriesException("Couldn't clone XYDataItem!");
             }
             existing.setY(y);
         }
+        // Otherwise (either the item was not found, OR duplicate x-values ARE allowed),
+        // we add a new item to the series.
         else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+            int insertionIndex;
             if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+                // If autoSort is true:
+                //   - If index < 0, it means 'x' was not found, and 'index' is -(insertionPoint) - 1.
+                //     So, the insertion point is -index - 1.
+                //   - If index >= 0, it means 'x' was found. Since we are in this 'else' block,
+                //     it implies that 'allowDuplicateXValues' is true. We need to insert the
+                //     new item after all existing items with the same x-value to maintain
+                //     sorted order by x-value.
+                if (index < 0) {
+                    insertionIndex = -index - 1;
+                } else {
+                    // 'x' was found (at 'index'), and duplicates are allowed.
+                    // Find the position *after* all existing items with the same x-value.
+                    insertionIndex = index;
+                    while (insertionIndex < this.data.size() &&
+                           x.equals(((XYDataItem) this.data.get(insertionIndex)).getX())) {
+                        insertionIndex++;
+                    }
+                }
+                this.data.add(insertionIndex, new XYDataItem(x, y));
             }
             else {
+                // If autoSort is false, just append the new item.
                 this.data.add(new XYDataItem(x, y));
             }
-            // check if this addition will exceed the maximum item count...
+
+            // Check if this addition will exceed the maximum item count...
             if (getItemCount() > this.maximumItemCount) {
                 this.data.remove(0);
             }
         }
         fireSeriesChanged();
         return overwritten;
     }
\ No newline at end of file
