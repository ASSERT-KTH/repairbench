diff --git a/tmp/4d40ded6-1de9-4c16-b219-5e2c654ad04a_buggy.java b/tmp/2e43a74d-bad4-471f-be38-ef249ae30e07_fixed.java
index 98d89dc..1daa99a 100644
--- a/tmp/4d40ded6-1de9-4c16-b219-5e2c654ad04a_buggy.java
+++ b/tmp/2e43a74d-bad4-471f-be38-ef249ae30e07_fixed.java
@@ -1,23 +1,39 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
-        return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
+
+        int cmpResult;
+        if (Double.isNaN(ld) && Double.isNaN(rd)) {
+            // XPath: NaN = NaN is TRUE; NaN < NaN, NaN > NaN are FALSE.
+            // Returning 0 ensures evaluateCompare works correctly for "=" (true)
+            // and for "<", ">" (false, as 0 != -1 and 0 != 1).
+            cmpResult = 0;
+        } else if (Double.isNaN(ld) || Double.isNaN(rd)) {
+            // XPath: If one operand is NaN and the other is not, all comparisons are FALSE.
+            // Returning 2 (or any other value not 0, -1, 1) ensures evaluateCompare
+            // returns false for all standard relational operations.
+            cmpResult = 2;
+        } else {
+            // Both are normal numbers; use standard Java comparison.
+            cmpResult = (ld == rd ? 0 : (ld < rd ? -1 : 1));
+        }
+        return evaluateCompare(cmpResult);
     }
\ No newline at end of file
