diff --git a/tmp/6f81fdf1-4c42-4848-a727-bed92e7a3f2c_buggy.java b/tmp/652a93d2-c068-4b66-8d9c-80f74bd34b0c_fixed.java
index 1650d36..6ae3e3c 100644
--- a/tmp/6f81fdf1-4c42-4848-a727-bed92e7a3f2c_buggy.java
+++ b/tmp/652a93d2-c068-4b66-8d9c-80f74bd34b0c_fixed.java
@@ -1,25 +1,29 @@
     /**
      * <p>Checks if two calendar objects represent the same local time.</p>
      *
      * <p>This method compares the values of the fields of the two objects.
      * In addition, both calendars must be the same of the same type.</p>
      * 
      * @param cal1  the first calendar, not altered, not null
      * @param cal2  the second calendar, not altered, not null
      * @return true if they represent the same millisecond instant
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
     public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
         if (cal1 == null || cal2 == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
+        // The original code used Calendar.HOUR, which represents the hour in a 12-hour clock (0-11).
+        // This causes issues when comparing 4 AM (hour=4) and 4 PM (hour=4) on the same day,
+        // as they would incorrectly be considered the same local time.
+        // To correctly compare local time in a 24-hour format, Calendar.HOUR_OF_DAY (0-23) should be used.
         return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
                 cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
                 cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
+                cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY) &&
                 cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
                 cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                 cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
                 cal1.getClass() == cal2.getClass());
     }
\ No newline at end of file
