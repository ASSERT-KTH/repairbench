diff --git a/tmp/4bfb2aee-e76e-4250-84e1-55e32bd1e8a6_buggy.java b/tmp/b3a13617-428d-4160-a13a-06b9f4adaa0a_fixed.java
index 1650d36..597276e 100644
--- a/tmp/4bfb2aee-e76e-4250-84e1-55e32bd1e8a6_buggy.java
+++ b/tmp/b3a13617-428d-4160-a13a-06b9f4adaa0a_fixed.java
@@ -1,25 +1,27 @@
     /**
      * <p>Checks if two calendar objects represent the same local time.</p>
      *
      * <p>This method compares the values of the fields of the two objects.
      * In addition, both calendars must be the same of the same type.</p>
      * 
      * @param cal1  the first calendar, not altered, not null
      * @param cal2  the second calendar, not altered, not null
      * @return true if they represent the same millisecond instant
      * @throws IllegalArgumentException if either date is <code>null</code>
      * @since 2.1
      */
     public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {
         if (cal1 == null || cal2 == null) {
             throw new IllegalArgumentException("The date must not be null");
         }
+        // LANG-677: The old implementation used Calendar.HOUR, which is a 12-hour field
+        // and does not differentiate AM/PM. Using Calendar.HOUR_OF_DAY fixes this.
         return (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&
                 cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) &&
                 cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) &&
-                cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&
+                cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY) &&
                 cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) &&
                 cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &&
                 cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) &&
                 cal1.getClass() == cal2.getClass());
     }
\ No newline at end of file
