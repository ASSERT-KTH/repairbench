diff --git a/tmp/34705f99-92c8-4ea3-9edd-ca685cbb9cde_buggy.java b/tmp/a934e9d3-461e-43ac-9b3a-2dd0c0a7e7dd_fixed.java
index 62e8ec8..b51ffa0 100644
--- a/tmp/34705f99-92c8-4ea3-9edd-ca685cbb9cde_buggy.java
+++ b/tmp/a934e9d3-461e-43ac-9b3a-2dd0c0a7e7dd_fixed.java
@@ -1,26 +1,35 @@
     /**
      * <p>If an {@link Option} exists for <code>token</code> then
      * set the current option and add the token to the processed
      * list.</p>
      *
      * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
      * is set then ignore the current token and add the remaining tokens
      * to the processed tokens list directly.</p>
      *
      * @param token The current option token
      * @param stopAtNonOption Specifies whether flattening should halt
      * at the first non option.
+     * @throws UnrecognizedOptionException if an {@link Option} does not exist
+     * and <code>stopAtNonOption</code> is false.
      */
-    private void processOptionToken(String token, boolean stopAtNonOption)
+    private void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException
     {
         if (options.hasOption(token))
         {
             currentOption = options.getOption(token);
             tokens.add(token);
         }
         else if (stopAtNonOption)
         {
             eatTheRest = true;
             tokens.add(token);
         }
+        else // Case: Option does not exist and stopAtNonOption is false
+        {
+            // According to PosixParser behavior, if a token starts with '-',
+            // but is not a recognized option, and stopAtNonOption is false,
+            // an UnrecognizedOptionException should be thrown.
+            throw new UnrecognizedOptionException("Unrecognized option: " + token, token);
+        }
     }
\ No newline at end of file
