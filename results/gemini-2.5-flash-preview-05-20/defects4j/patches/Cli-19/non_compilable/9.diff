diff --git a/tmp/5d0defd8-e306-4660-8254-5695c199eeea_buggy.java b/tmp/bfd01505-1ab9-4e01-8584-6fae94826390_fixed.java
index 62e8ec8..dc6b3a7 100644
--- a/tmp/5d0defd8-e306-4660-8254-5695c199eeea_buggy.java
+++ b/tmp/bfd01505-1ab9-4e01-8584-6fae94826390_fixed.java
@@ -1,26 +1,34 @@
     /**
      * <p>If an {@link Option} exists for <code>token</code> then
      * set the current option and add the token to the processed 
      * list.</p>
      *
      * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
      * is set then ignore the current token and add the remaining tokens
      * to the processed tokens list directly.</p>
      *
      * @param token The current option token
      * @param stopAtNonOption Specifies whether flattening should halt
      * at the first non option.
+     * @throws UnrecognizedOptionException if an option does not exist and stopAtNonOption is false.
      */
-    private void processOptionToken(String token, boolean stopAtNonOption)
+    private void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException
     {
         if (options.hasOption(token))
         {
             currentOption = options.getOption(token);
             tokens.add(token);
         }
         else if (stopAtNonOption)
         {
             eatTheRest = true;
             tokens.add(token);
         }
+        else // Option does not exist AND stopAtNonOption is false
+        {
+            // This is the case where an unrecognized option token is encountered,
+            // and the parser is not instructed to stop at non-options by treating it as such.
+            // In this scenario, an UnrecognizedOptionException should be thrown.
+            throw new UnrecognizedOptionException("Unrecognized option: " + token, token);
+        }
     }
\ No newline at end of file
