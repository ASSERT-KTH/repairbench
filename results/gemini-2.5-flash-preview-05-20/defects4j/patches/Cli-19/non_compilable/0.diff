diff --git a/tmp/feb3107d-acc8-4508-9091-6eff677fcaf8_buggy.java b/tmp/9783fa16-e9e0-4081-8840-9ddfe308d3db_fixed.java
index 62e8ec8..dcc74bb 100644
--- a/tmp/feb3107d-acc8-4508-9091-6eff677fcaf8_buggy.java
+++ b/tmp/9783fa16-e9e0-4081-8840-9ddfe308d3db_fixed.java
@@ -1,26 +1,43 @@
     /**
      * <p>If an {@link Option} exists for <code>token</code> then
      * set the current option and add the token to the processed 
      * list.</p>
      *
      * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>
      * is set then ignore the current token and add the remaining tokens
      * to the processed tokens list directly.</p>
      *
      * @param token The current option token
      * @param stopAtNonOption Specifies whether flattening should halt
      * at the first non option.
      */
     private void processOptionToken(String token, boolean stopAtNonOption)
     {
+        // If an Option exists for 'token', process it as a recognized option
         if (options.hasOption(token))
         {
             currentOption = options.getOption(token);
             tokens.add(token);
         }
-        else if (stopAtNonOption)
+        // If an Option does NOT exist for 'token'
+        else
+        {
+            // If 'stopAtNonOption' is true, treat this unrecognized option-like token
+            // as a non-option, effectively stopping further option processing.
+            if (stopAtNonOption)
             {
                 eatTheRest = true;
                 tokens.add(token);
             }
+            // If 'stopAtNonOption' is false, and the token is an unrecognized option,
+            // then an UnrecognizedOptionException should be thrown.
+            // In the original code, this 'else' branch (where Option does not exist and stopAtNonOption is false)
+            // implicitly did nothing, which allowed unrecognized options to be silently ignored or
+            // lead to incorrect parsing behavior, such as infinite recursion in PosixParser.processShortOption
+            // when it recursively calls flatten with stopAtNonOption=true for an unrecognized token.
+            else
+            {
+                throw new UnrecognizedOptionException("Unrecognized option: " + token, token);
+            }
+        }
     }
\ No newline at end of file
