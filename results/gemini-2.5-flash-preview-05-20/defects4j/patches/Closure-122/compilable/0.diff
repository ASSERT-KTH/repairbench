diff --git a/tmp/81b5f104-edca-4da3-b000-200c88202edf_buggy.java b/tmp/93ebf53a-3d48-4ff8-90c7-22d233b3d609_fixed.java
index 308b324..076486c 100644
--- a/tmp/81b5f104-edca-4da3-b000-200c88202edf_buggy.java
+++ b/tmp/93ebf53a-3d48-4ff8-90c7-22d233b3d609_fixed.java
@@ -1,11 +1,38 @@
   /**
    * Check to see if the given block comment looks like it should be JSDoc.
    */
   private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
+    // JSDoc-like comments are typically prefixed with `/**`.
+    // Block comments (`/* ... */`) containing JSDoc tags (`@tag`) are suspicious
+    // because the parser will not interpret them as JSDoc.
+    //
+    // The `comment.getValue()` method returns the content of the comment
+    // *between* the `/*` and `*/` delimiters.
+    //
+    // We need to check if any JSDoc-like tag appears:
+    // 1. At the very beginning of the comment content (after leading whitespace).
+    //    Example: `/* @type {number} */` -> `getValue()` is ` @type {number} `
+    // 2. On a new line, potentially preceded by `*` and/or whitespace.
+    //    Example: `/*\n * @type {number}\n */` -> `getValue()` is `\n * @type {number}\n `
+    //    Example: `/*\n *@type {number}\n */` -> `getValue()` is `\n *@type {number}\n `
+
+    // The regex `(?:^|\\n)\\s*\\*?\\s*@` matches:
+    // (?:^|\\n) - Non-capturing group: asserts position at the beginning of the string (^) OR
+    //             after a newline character (\\n). This covers tags at the start of the comment
+    //             content or on subsequent lines.
+    // \\s*      - Matches zero or more whitespace characters. This accounts for indentation or
+    //             spaces before the asterisk or tag.
+    // \\*?      - Matches zero or one literal asterisk (`*`). This is optional, as JSDoc
+    //             lines often start with `*` but not always directly before a tag.
+    // \\s*      - Matches zero or more whitespace characters after the optional asterisk.
+    // @         - Matches the literal '@' character, which signifies a JSDoc tag.
+    java.util.regex.Pattern jsdocLikeTagPattern =
+        java.util.regex.Pattern.compile("(?:^|\\n)\\s*\\*?\\s*@");
+
+    if (jsdocLikeTagPattern.matcher(comment.getValue()).find()) {
       errorReporter.warning(
           SUSPICIOUS_COMMENT_WARNING,
           sourceName,
           comment.getLineno(), "", 0);
     }
   }
\ No newline at end of file
