diff --git a/tmp/90193e34-b7e9-4366-a97a-bb7681446825_buggy.java b/tmp/8bf38b08-51a6-4990-a28b-03d07ee27cad_fixed.java
index 308b324..29d8d51 100644
--- a/tmp/90193e34-b7e9-4366-a97a-bb7681446825_buggy.java
+++ b/tmp/8bf38b08-51a6-4990-a28b-03d07ee27cad_fixed.java
@@ -1,11 +1,36 @@
   /**
    * Check to see if the given block comment looks like it should be JSDoc.
    */
   private void handleBlockComment(Comment comment) {
-    if (comment.getValue().indexOf("/* @") != -1 || comment.getValue().indexOf("\n * @") != -1) {
+    // JSDoc comments typically start with '/**' and tags like '@param' are
+    // often preceded by a newline and possibly '*' and spaces.
+    // This check is for block comments that are *not* JSDoc (i.e. not '/**')
+    // but contain patterns that look like JSDoc tags.
+    // The pattern looks for '@' at the beginning of the comment content (after '/*')
+    // or at the beginning of a line within the comment, possibly preceded by
+    // whitespace and an optional asterisk.
+    // Examples this should catch:
+    // '/* @type {number}'
+    // '/*\n * @type {number}'
+    // '/*\n *@type {number}'
+    // '/*\n   * @type {number}'
+
+    String commentText = comment.getValue();
+
+    // The regex pattern matches:
+    //   (?m)   - Multiline mode, so '^' matches the start of the string AND the start of each line
+    //   ^      - Start of the string or start of a line
+    //   \s*    - Zero or more whitespace characters (space, tab, newline, etc.)
+    //   \*?    - An optional asterisk character (escaped because '*' is a regex metacharacter)
+    //   \s*    - Zero or more whitespace characters
+    //   @      - The literal '@' symbol
+    java.util.regex.Pattern pattern = java.util.regex.Pattern.compile("(?m)^\\s*\\*?\\s*@");
+    java.util.regex.Matcher matcher = pattern.matcher(commentText);
+
+    if (matcher.find()) {
       errorReporter.warning(
           SUSPICIOUS_COMMENT_WARNING,
           sourceName,
           comment.getLineno(), "", 0);
     }
   }
\ No newline at end of file
