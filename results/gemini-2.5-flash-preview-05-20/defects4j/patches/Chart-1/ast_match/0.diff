diff --git a/tmp/150c5f62-ab68-4f34-a988-7a670959b7d3_buggy.java b/tmp/19b6831d-29e8-43ec-a457-972c57e6a9bd_fixed.java
index 114ff20..713fd06 100644
--- a/tmp/150c5f62-ab68-4f34-a988-7a670959b7d3_buggy.java
+++ b/tmp/19b6831d-29e8-43ec-a457-972c57e6a9bd_fixed.java
@@ -1,41 +1,46 @@
     /**
      * Returns a (possibly empty) collection of legend items for the series
      * that this renderer is responsible for drawing.
      *
      * @return The legend item collection (never <code>null</code>).
      *
      * @see #getLegendItem(int, int)
      */
     public LegendItemCollection getLegendItems() {
         LegendItemCollection result = new LegendItemCollection();
         if (this.plot == null) {
             return result;
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        // The original code had a logical error here:
+        // if (dataset != null) { return result; }
+        // This incorrectly returned an empty result if the dataset existed,
+        // and would lead to a NullPointerException later if the dataset was null.
+        // The correct logic is to return an empty result if the dataset is null.
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();
-        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
+        if (plot.getRowRenderingOrder().equals(org.jfree.chart.util.SortOrder.ASCENDING)) {
             for (int i = 0; i < seriesCount; i++) {
                 if (isSeriesVisibleInLegend(i)) {
                     LegendItem item = getLegendItem(index, i);
                     if (item != null) {
                         result.add(item);
                     }
                 }
             }
         }
         else {
             for (int i = seriesCount - 1; i >= 0; i--) {
                 if (isSeriesVisibleInLegend(i)) {
                     LegendItem item = getLegendItem(index, i);
                     if (item != null) {
                         result.add(item);
                     }
                 }
             }
         }
         return result;
     }
\ No newline at end of file
