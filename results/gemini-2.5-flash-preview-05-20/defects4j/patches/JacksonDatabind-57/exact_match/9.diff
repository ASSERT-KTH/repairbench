diff --git a/tmp/e4e11a09-843f-486e-8949-22f9200c8149_buggy.java b/tmp/2d712066-11f7-4367-84a3-67468a98580a_fixed.java
index 08a41cf..7fb06c6 100644
--- a/tmp/e4e11a09-843f-486e-8949-22f9200c8149_buggy.java
+++ b/tmp/2d712066-11f7-4367-84a3-67468a98580a_fixed.java
@@ -1,12 +1,15 @@
     /**
      * Overloaded version of {@link #readValue(InputStream)}.
      */
     public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)
         throws IOException, JsonProcessingException
     {
         if (_dataFormatReaders != null) {
             return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);
         }
-        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),
+        // When _dataFormatReaders is null, we need to explicitly use offset and length
+        // to create the parser, otherwise the parser will read from the beginning
+        // of the byte array (src) potentially leading to invalid data parsing.
+        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src, offset, length),
                 true));
     }
\ No newline at end of file
