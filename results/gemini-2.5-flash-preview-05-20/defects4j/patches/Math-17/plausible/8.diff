diff --git a/tmp/93045d5c-7fe2-46b5-8c71-b506b7daadc6_buggy.java b/tmp/f18b905b-1fc6-4362-9326-68d1c555f030_fixed.java
index 10da689..0511414 100644
--- a/tmp/93045d5c-7fe2-46b5-8c71-b506b7daadc6_buggy.java
+++ b/tmp/f18b905b-1fc6-4362-9326-68d1c555f030_fixed.java
@@ -1,7 +1,18 @@
     /** Multiply this by a single digit x.
      * @param x multiplicand
      * @return product of this and x
      */
     public Dfp multiply(final int x) {
-            return multiplyFast(x);
+            // The original implementation was:
+            // return multiplyFast(x);
+            // This method (multiplyFast) is likely an optimization for specific,
+            // small integer values (e.g., single digits 0-9) and might not
+            // correctly handle larger integers like 10000 or 1000000, as
+            // indicated by the failing test case "Multiply #37".
+            //
+            // The robust and general solution is to convert the integer 'x'
+            // into a Dfp object and then use the existing Dfp-to-Dfp
+            // multiplication method, which is expected to handle all cases
+            // correctly.
+            return multiply(field.newDfp(x));
     }
\ No newline at end of file
