diff --git a/tmp/8c36d743-3051-418a-8f97-453602cfc240_buggy.java b/tmp/3c43ad83-86f4-43ce-8392-5931c39200db_fixed.java
index 800e6e1..c6303e2 100644
--- a/tmp/8c36d743-3051-418a-8f97-453602cfc240_buggy.java
+++ b/tmp/3c43ad83-86f4-43ce-8392-5931c39200db_fixed.java
@@ -1,32 +1,42 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
+          // This condition is likely dead code, as a FUNCTION node's direct
+          // parent is typically not a NAME node (e.g., it's a BLOCK, SCRIPT, ASSIGN, or CALL).
+          // However, keeping it as-is to avoid unintended side effects from refactoring.
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.GETPROP:
+          // Handle property stubs like `goog.foo;` or `this.foo;` that might
+          // have JSDoc annotations indicating a declared type.
+          // The defineDeclaredProperty method is responsible for checking
+          // if n has relevant JSDoc and defining the property accordingly.
+          defineDeclaredProperty(n);
+          break;
       }
     }
\ No newline at end of file
