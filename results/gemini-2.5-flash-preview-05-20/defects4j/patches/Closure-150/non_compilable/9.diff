diff --git a/tmp/2ed589bb-c1c4-4065-bb0a-f5fd85c947e4_buggy.java b/tmp/2c20785c-fb0a-452a-98e9-be4cf3c3c35f_fixed.java
index 800e6e1..ce5bf69 100644
--- a/tmp/2ed589bb-c1c4-4065-bb0a-f5fd85c947e4_buggy.java
+++ b/tmp/2c20785c-fb0a-452a-98e9-be4cf3c3c35f_fixed.java
@@ -1,32 +1,45 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.EXPR_RESULT: // Handle expressions that declare types via JSDoc, e.g., `/** @type {number} */ goog.foo;`
+          JSDocInfo info = n.getJSDocInfo();
+          if (info != null) {
+            Node target = n.getFirstChild();
+            // A qualified name (NAME or GETPROP) can be explicitly declared with JSDoc.
+            if (target != null && target.isQualifiedName()) {
+                // This method (defineDeclaredNameOrProperty) is assumed to exist in the TypedScopeCreator
+                // and handles the creation of a symbol (variable or property) based on the JSDocInfo.
+                // It would internally distinguish between NAME and GETPROP to correctly register the symbol.
+                defineDeclaredNameOrProperty(target, parent, info);
+            }
+          }
+          break;
       }
     }
\ No newline at end of file
