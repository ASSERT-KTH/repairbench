diff --git a/tmp/48095ec4-dcf3-4aac-8099-32c55511578a_buggy.java b/tmp/58229df4-6a37-437a-989c-e11b81c316b8_fixed.java
index aa351ad..721e93f 100644
--- a/tmp/48095ec4-dcf3-4aac-8099-32c55511578a_buggy.java
+++ b/tmp/58229df4-6a37-437a-989c-e11b81c316b8_fixed.java
@@ -1,41 +1,47 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            if (el.hasAttr("disabled")) continue; // skip disabled form inputs
+            // Check if the element is submittable and not disabled
+            if (!el.tag().isFormSubmittable()) continue;
+            if (el.hasAttr("disabled")) continue;
             String name = el.attr("name");
-            if (name.length() == 0) continue;
+            if (name.length() == 0) continue; // Skip elements without a name
+
             String type = el.attr("type");
 
-
             if ("select".equals(el.normalName())) {
                 Elements options = el.select("option[selected]");
-                boolean set = false;
-                for (Element option: options) {
-                    data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
-                }
-                if (!set) {
+                if (options.isEmpty()) {
+                    // If no option is explicitly selected, default to the first option
                     Element option = el.select("option").first();
-                    if (option != null)
+                    if (option != null) {
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                     }
+                } else {
+                    // If options are explicitly selected, add all of them
+                    // This handles both single-selects with multiple 'selected' (as per test expectation)
+                    // and multi-selects.
+                    for (Element option: options) {
+                        data.add(HttpConnection.KeyVal.create(name, option.val()));
+                    }
+                }
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
+                // Only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
                     final String val = el.val().length() >  0 ? el.val() : "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
             } else {
+                // For other form elements (text, textarea, hidden, etc.), add their name and value
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }
