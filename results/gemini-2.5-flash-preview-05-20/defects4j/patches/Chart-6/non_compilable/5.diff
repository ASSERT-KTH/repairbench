diff --git a/tmp/41ff4293-bcb6-4453-8f12-61ecd5d0f1ec_buggy.java b/tmp/d068c3a8-cb7e-4f32-a665-714e5b110adb_fixed.java
index 351a97a..61313d6 100644
--- a/tmp/41ff4293-bcb6-4453-8f12-61ecd5d0f1ec_buggy.java
+++ b/tmp/d068c3a8-cb7e-4f32-a665-714e5b110adb_fixed.java
@@ -1,18 +1,36 @@
+import java.awt.Shape;
+import java.util.Objects;
+
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
 
+        ShapeList that = (ShapeList) obj;
+
+        // Compare sizes first
+        if (this.size() != that.size()) {
+            return false;
+        }
+
+        // Iterate and compare each element
+        for (int i = 0; i < this.size(); i++) {
+            // Assuming ShapeList has a getShape(int index) method
+            // Objects.equals handles null values correctly
+            if (!Objects.equals(this.getShape(i), that.getShape(i))) {
+                return false;
+            }
+        }
+        return true;
     }
