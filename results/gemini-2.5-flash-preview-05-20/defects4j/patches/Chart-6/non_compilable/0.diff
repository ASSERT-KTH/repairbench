diff --git a/tmp/523e7dd2-6ebb-4105-acaa-9c8ba5390055_buggy.java b/tmp/9225a81e-d5ae-49db-82e4-f44a323b5645_fixed.java
index 351a97a..1a57c94 100644
--- a/tmp/523e7dd2-6ebb-4105-acaa-9c8ba5390055_buggy.java
+++ b/tmp/9225a81e-d5ae-49db-82e4-f44a323b5645_fixed.java
@@ -1,18 +1,26 @@
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
+        // Cast to ShapeList to access its specific fields.
+        ShapeList that = (ShapeList) obj;
+
+        // Assuming ShapeList internally stores its shapes in a List field named 'data'.
+        // The List.equals() method provides the correct element-wise comparison.
+        // This is necessary if ShapeList does not extend ArrayList directly
+        // or if its superclass's equals method does not compare contents.
+        // Given the test failures, this is the most likely scenario.
+        return this.data.equals(that.data);
 
     }
