diff --git a/tmp/0b71a544-3d6a-46e7-865c-6ad9a4d54a45_buggy.java b/tmp/b03b8ef7-84ef-4039-a2c0-b9374637c74d_fixed.java
index 351a97a..bada38b 100644
--- a/tmp/0b71a544-3d6a-46e7-865c-6ad9a4d54a45_buggy.java
+++ b/tmp/b03b8ef7-84ef-4039-a2c0-b9374637c74d_fixed.java
@@ -1,18 +1,34 @@
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
-        if (!(obj instanceof ShapeList)) {
+        if (!(obj instanceof ShapeList)) { // Ensure the other object is also a ShapeList
             return false;
         }
-        return super.equals(obj);
 
+        ShapeList that = (ShapeList) obj;
+
+        // Compare sizes
+        if (this.size() != that.size()) {
+            return false;
+        }
+
+        // Compare elements one by one
+        for (int i = 0; i < this.size(); i++) {
+            java.awt.Shape s1 = this.getShape(i);
+            java.awt.Shape s2 = that.getShape(i);
+            // Use Objects.equals for null-safe comparison of shapes
+            if (!java.util.Objects.equals(s1, s2)) {
+                return false;
+            }
+        }
+        return true;
     }
