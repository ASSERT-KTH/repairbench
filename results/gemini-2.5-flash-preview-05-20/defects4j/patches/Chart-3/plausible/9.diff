diff --git a/tmp/f36a248a-8bc8-4933-ac92-8c883640f557_buggy.java b/tmp/bd6941ac-3449-4ea7-9e03-e665c4f7a695_fixed.java
index 388771b..576ae65 100644
--- a/tmp/f36a248a-8bc8-4933-ac92-8c883640f557_buggy.java
+++ b/tmp/bd6941ac-3449-4ea7-9e03-e665c4f7a695_fixed.java
@@ -1,37 +1,50 @@
     /**
      * Creates a new timeseries by copying a subset of the data in this time
      * series.
      *
      * @param start  the index of the first time period to copy.
      * @param end  the index of the last time period to copy.
      *
      * @return A series containing a copy of this times series from start until
      *         end.
      *
      * @throws CloneNotSupportedException if there is a cloning problem.
      */
     public TimeSeries createCopy(int start, int end)
             throws CloneNotSupportedException {
         if (start < 0) {
             throw new IllegalArgumentException("Requires start >= 0.");
         }
         if (end < start) {
             throw new IllegalArgumentException("Requires start <= end.");
         }
         TimeSeries copy = (TimeSeries) super.clone();
+        
+        // Reset the data list for the copy.
         copy.data = new java.util.ArrayList();
+        
+        // BUG FIX: The minY and maxY fields are shallow copied and retain
+        // the values from the original series. They need to be reset
+        // to their default 'empty series' values before adding new data items,
+        // so that the add() method correctly recalculates them for the new subset.
+        copy.minY = Double.POSITIVE_INFINITY;
+        copy.maxY = Double.NEGATIVE_INFINITY;
+
         if (this.data.size() > 0) {
+            // It's assumed that 'start' and 'end' are valid indices
+            // for 'this.data', or an IndexOutOfBoundsException will occur
+            // during data.get(index), which is outside the scope of this fix.
             for (int index = start; index <= end; index++) {
                 TimeSeriesDataItem item
                         = (TimeSeriesDataItem) this.data.get(index);
                 TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
                 try {
                     copy.add(clone);
                 }
                 catch (SeriesException e) {
                     e.printStackTrace();
                 }
             }
         }
         return copy;
     }
