diff --git a/tmp/63a89dc1-b490-49e3-b77d-bbacd2f4c407_buggy.java b/tmp/106b4698-efdf-4c06-9f4f-68024ae4e358_fixed.java
index c222270..0851adf 100644
--- a/tmp/63a89dc1-b490-49e3-b77d-bbacd2f4c407_buggy.java
+++ b/tmp/106b4698-efdf-4c06-9f4f-68024ae4e358_fixed.java
@@ -1,7 +1,23 @@
     public Object generateId(Object forPojo) {
         // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of
         //    id being generated for "alwaysAsId", but not being written as POJO; regardless,
         //    need to use existing id if there is one:
-            id = generator.generateId(forPojo);
+        Object id;
+        if (forPojo == null) {
+            id = null;
+        } else {
+            // PropertyGenerator must ensure that the delegate generator always
+            // provides the same id for a given POJO. This means first trying
+            // to retrieve an existing id, and only generating a new one if needed.
+            // The original bug was calling `generator.generateId(forPojo)` which
+            // always creates a new id according to SimpleObjectIdGenerator's contract.
+            
+            // Try to find an existing id for this POJO from the delegate generator
+            id = generator.key(forPojo);
+            // If no existing id is found, generate a new one and associate it
+            if (id == null) {
+                 id = generator.newId(forPojo);
+            }
+        }
         return id;
     }
\ No newline at end of file
