diff --git a/tmp/2962a1c9-aea6-455a-8475-c523148073bc_buggy.java b/tmp/af78876a-6b81-45ea-bb12-5fbbc6ca4958_fixed.java
index d6662c7..7d1b536 100644
--- a/tmp/2962a1c9-aea6-455a-8475-c523148073bc_buggy.java
+++ b/tmp/af78876a-6b81-45ea-bb12-5fbbc6ca4958_fixed.java
@@ -1,23 +1,30 @@
     /**
      * Parse an entry name from a buffer.
      * Parsing stops when a NUL is found
      * or the buffer length is reached.
      *
      * @param buffer The buffer from which to parse.
      * @param offset The offset into the buffer from which to parse.
      * @param length The maximum number of bytes to parse.
      * @return The entry name.
      */
     public static String parseName(byte[] buffer, final int offset, final int length) {
         StringBuffer result = new StringBuffer(length);
         int          end = offset + length;
 
         for (int i = offset; i < end; ++i) {
             if (buffer[i] == 0) {
                 break;
             }
-            result.append((char) buffer[i]);
+            // The original code `(char) buffer[i]` incorrectly converts negative byte
+            // values (which represent byte values > 127) into characters in higher
+            // Unicode planes (e.g., U+FFxx).
+            // To correctly interpret the bytes as 8-bit characters (like ISO-8859-1,
+            // where byte values 0-255 directly map to Unicode code points U+0000-U+00FF),
+            // the byte must be masked with 0xFF to treat it as an unsigned value
+            // before casting to char.
+            result.append((char) (buffer[i] & 0xFF));
         }
 
         return result.toString();
     }
\ No newline at end of file
