diff --git a/tmp/64ddfe71-66b1-4305-909f-464f3f0a02d6_buggy.java b/tmp/8057193e-d713-42d1-9958-b78e465d0bcc_fixed.java
index d6662c7..cff9028 100644
--- a/tmp/64ddfe71-66b1-4305-909f-464f3f0a02d6_buggy.java
+++ b/tmp/8057193e-d713-42d1-9958-b78e465d0bcc_fixed.java
@@ -1,23 +1,35 @@
+import java.nio.charset.StandardCharsets;
+
+public class TarUtils {
     /**
      * Parse an entry name from a buffer.
      * Parsing stops when a NUL is found
      * or the buffer length is reached.
      *
      * @param buffer The buffer from which to parse.
      * @param offset The offset into the buffer from which to parse.
      * @param length The maximum number of bytes to parse.
      * @return The entry name.
      */
     public static String parseName(byte[] buffer, final int offset, final int length) {
-        StringBuffer result = new StringBuffer(length);
+        int effectiveLength = 0;
         int end = offset + length;
 
+        // Find the effective length of the string, up to the first NUL byte or the specified length.
         for (int i = offset; i < end; ++i) {
             if (buffer[i] == 0) {
-                break;
+                break; // NUL byte found, stop here
             }
-            result.append((char) buffer[i]);
+            effectiveLength++; // Increment effective length for each non-NUL byte
         }
 
-        return result.toString();
+        // Construct the String from the byte array using ISO-8859-1 encoding.
+        // This encoding is chosen because TarUtils.formatName, which creates
+        // the byte array for names, effectively truncates characters to 8 bits,
+        // which corresponds to ISO-8859-1 (Latin-1) for characters within that range.
+        // The original code's character-by-character casting can lead to issues
+        // if the default platform encoding is not compatible (e.g., UTF-8 for non-ASCII bytes),
+        // causing misinterpretations like the observed U+FFB1 for 0xB1.
+        return new String(buffer, offset, effectiveLength, StandardCharsets.ISO_8859_1);
+    }
 }
\ No newline at end of file
