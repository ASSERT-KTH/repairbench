diff --git a/tmp/34045b59-e043-4f54-a919-7a2daf87882a_buggy.java b/tmp/7d3dbe5c-27eb-4ef8-8082-9685c20ac0ed_fixed.java
index e69de29..e550244 100644
--- a/tmp/34045b59-e043-4f54-a919-7a2daf87882a_buggy.java
+++ b/tmp/7d3dbe5c-27eb-4ef8-8082-9685c20ac0ed_fixed.java
@@ -0,0 +1,54 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+
+    // Instead of iterating over a potentially stale 'elements' internal list,
+    // dynamically select form controls from the live DOM tree.
+    // This ensures that elements removed from the form are no longer included
+    // in the form data.
+    Elements controls = select("input[name], textarea[name], select[name], button[name]");
+
+    for (Element el : controls) {
+        // Skip disabled elements and elements without a name attribute
+        if (!el.hasAttr("name") || el.hasAttr("disabled")) {
+            continue;
+        }
+
+        String name = el.attr("name");
+        String tagName = el.tagName();
+
+        if ("input".equals(tagName)) {
+            String type = el.attr("type").toLowerCase();
+            if ("radio".equals(type) || "checkbox".equals(type)) {
+                // Only add checked radio and checkboxes
+                if (!el.hasAttr("checked")) {
+                    continue;
+                }
+            } else if ("file".equals(type)) {
+                // File inputs cannot be represented by a simple KeyVal, skip
+                continue;
+            }
+            // For other input types (text, password, hidden, submit, etc.),
+            // fall through to be added to data
+        } else if ("select".equals(tagName)) {
+            Elements options = el.select("option[selected]");
+            boolean found = false;
+            for (Element option : options) {
+                data.add(Connection.KeyVal.create(name, option.val()));
+                found = true;
+            }
+            // If no option is selected (e.g., first option not marked selected),
+            // and it's not a multiple select, submit the first option's value.
+            // This is standard HTML form behavior.
+            if (!found) {
+                Element firstOption = el.selectFirst("option");
+                if (firstOption != null) {
+                    data.add(Connection.KeyVal.create(name, firstOption.val()));
+                }
+            }
+            continue; // Handled select element, move to the next control
+        }
+        // Add other form controls (textareas, buttons, non-file inputs)
+        data.add(Connection.KeyVal.create(name, el.val()));
+    }
+    return data;
+}
\ No newline at end of file
