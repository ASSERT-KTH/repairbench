diff --git a/tmp/d42554f7-a13a-4813-8d06-eb4927eac08c_buggy.java b/tmp/46fa3a4e-4bdb-4c25-94a0-32d3b944575c_fixed.java
index e69de29..1bc70f3 100644
--- a/tmp/d42554f7-a13a-4813-8d06-eb4927eac08c_buggy.java
+++ b/tmp/46fa3a4e-4bdb-4c25-94a0-32d3b944575c_fixed.java
@@ -0,0 +1,51 @@
+public List<Connection.KeyVal> formData() {
+    ArrayList<Connection.KeyVal> data = new ArrayList<>();
+
+    // Fix: Instead of iterating over a potentially stale 'elements' field,
+    // query the live DOM for submittable form controls that are currently
+    // children of this form element. This ensures that elements removed
+    // from the form are no longer included.
+    Elements formControls = this.select("input[name], textarea[name], select[name], button[name]");
+
+    for (Element el : formControls) {
+        // The following logic is largely retained from the original formData() method,
+        // now applied to the live set of form controls.
+
+        // Check if the element's tag is submittable (this check is robust,
+        // even if the selector already implies it for standard tags).
+        if (!el.tag().isFormSubmittable()) continue;
+
+        String name = el.attr("name");
+        if (name.length() == 0) continue; // Skip elements without a name
+
+        // Check for disabled attribute
+        if (el.attr("disabled").equals("disabled")) continue;
+
+        String type = el.attr("type");
+        // Handle radio and checkbox inputs: only include if 'checked'
+        if ("radio".equalsIgnoreCase(type) || "checkbox".equalsIgnoreCase(type)) {
+            if (!el.attr("checked").equals("checked")) continue;
+        }
+
+        // Handle select elements
+        if (el.tagName().equals("select")) {
+            Elements options = el.select("option[selected]");
+            if (options.isEmpty()) {
+                // According to HTML spec, if no option is selected, use the value of the first option
+                Element firstOption = el.select("option").first();
+                if (firstOption != null) {
+                    data.add(Connection.KeyVal.create(name, firstOption.val()));
+                }
+            } else {
+                // Add all selected options (for multiple select)
+                for (Element option : options) {
+                    data.add(Connection.KeyVal.create(name, option.val()));
+                }
+            }
+        } else {
+            // For other input types (text, password, hidden, submit, button, textarea)
+            data.add(Connection.KeyVal.create(name, el.val()));
+        }
+    }
+    return data;
+}
\ No newline at end of file
