diff --git a/tmp/cd332831-c21c-463f-96e0-c7329e162111_buggy.java b/tmp/39ef4a26-9b47-45e9-b990-4e110b7102f7_fixed.java
index 6c0aa19..e0919ad 100644
--- a/tmp/cd332831-c21c-463f-96e0-c7329e162111_buggy.java
+++ b/tmp/39ef4a26-9b47-45e9-b990-4e110b7102f7_fixed.java
@@ -1,20 +1,29 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+        // In the original Apache Commons Compress ZipArchiveInputStream,
+        // the PushbackInputStream is initialized with a fixed, standard buffer size
+        // (typically 512 bytes), independent of any 'buf' field used for other purposes.
+        // Using 'buf.capacity()' might lead to issues if 'buf' (which is likely a ByteBuffer)
+        // is not initialized with an appropriate capacity for the PushbackInputStream,
+        // or if its capacity is too small, potentially causing read failures
+        // (like returning 0 bytes when data is expected).
+        // A common and robust size for the PushbackInputStream's internal buffer is 512.
+        final int PUSHBACK_BUFFER_SIZE = 512;
+        in = new PushbackInputStream(inputStream, PUSHBACK_BUFFER_SIZE);
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
     }
\ No newline at end of file
