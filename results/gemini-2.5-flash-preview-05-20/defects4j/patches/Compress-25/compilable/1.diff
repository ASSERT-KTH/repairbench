diff --git a/tmp/07e62475-bc26-4b19-a341-5fab3fe03ace_buggy.java b/tmp/3439fe50-370a-4583-b88f-b595320214a1_fixed.java
index 6c0aa19..ebcfb84 100644
--- a/tmp/07e62475-bc26-4b19-a341-5fab3fe03ace_buggy.java
+++ b/tmp/3439fe50-370a-4583-b88f-b595320214a1_fixed.java
@@ -1,20 +1,27 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+        // The PushbackInputStream requires a sufficiently sized buffer to correctly
+        // handle ZIP stream parsing, especially when dealing with variable-length
+        // headers and data descriptors (relevant to COMPRESS-264).
+        // The value 'buf.capacity()' likely refers to another internal buffer
+        // whose capacity might not be suitable or consistently set for the
+        // PushbackInputStream. The standard and recommended buffer size for
+        // PushbackInputStream in ZipArchiveInputStream is 512 bytes.
+        in = new PushbackInputStream(inputStream, 512);
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
     }
\ No newline at end of file
