diff --git a/tmp/81996eee-2c81-42f8-bb97-7b04dac020c2_buggy.java b/tmp/a360427c-6430-4d9b-a795-f96569501a81_fixed.java
index 6c0aa19..9a7e47d 100644
--- a/tmp/81996eee-2c81-42f8-bb97-7b04dac020c2_buggy.java
+++ b/tmp/a360427c-6430-4d9b-a795-f96569501a81_fixed.java
@@ -1,20 +1,24 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+        // Wrap the input stream with a BufferedInputStream. This is a common
+        // practice to improve I/O performance and can sometimes resolve
+        // subtle issues with stream interactions, especially when combined
+        // with PushbackInputStream.
+        in = new PushbackInputStream(new BufferedInputStream(inputStream), buf.capacity());
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
     }
