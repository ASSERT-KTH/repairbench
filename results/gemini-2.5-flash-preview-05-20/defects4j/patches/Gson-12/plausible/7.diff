diff --git a/tmp/b2a0a4f8-0f10-4eef-8c19-90185d9f5f74_buggy.java b/tmp/55424214-4f43-4e2e-ad28-d5c3dafe5f1a_fixed.java
index 6e155da..2095170 100644
--- a/tmp/b2a0a4f8-0f10-4eef-8c19-90185d9f5f74_buggy.java
+++ b/tmp/55424214-4f43-4e2e-ad28-d5c3dafe5f1a_fixed.java
@@ -1,10 +1,26 @@
   @Override public void skipValue() throws IOException {
     if (peek() == JsonToken.NAME) {
       nextName();
+      // The pathNames[stackSize - 2] access needs to be guarded.
+      // If stackSize is 0 or 1, stackSize - 2 will be negative.
+      // This line is executed after nextName(), which pushes a value onto the stack,
+      // so stackSize is at least 1 (for the initial JsonElement) + 1 (for the value).
+      // Thus, stackSize will be at least 2 for this line to be meaningful (stackSize - 2 >= 0).
+      if (stackSize > 1) {
         pathNames[stackSize - 2] = "null";
+      }
     } else {
+      // For non-NAME tokens (e.g., BEGIN_OBJECT, STRING, NUMBER, etc.), pop the current value.
       popStack();
+      // After popStack(), stackSize might be 0.
+      // The original code accessed pathNames[stackSize - 1] here, leading to AIOOBE if stackSize was 0.
+      if (stackSize > 0) {
         pathNames[stackSize - 1] = "null";
       }
+    }
+    // This line was originally outside the if/else block, meaning it always executed.
+    // It also needs to be guarded as stackSize might be 0 after popStack() in the else branch.
+    if (stackSize > 0) {
       pathIndices[stackSize - 1]++;
     }
+  }
\ No newline at end of file
