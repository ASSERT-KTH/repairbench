diff --git a/tmp/d0056d10-64a1-4809-a712-38419c60dc5d_buggy.java b/tmp/ffd65412-5ced-4e19-b273-ec26129629dc_fixed.java
index 70cafe0..51a6a56 100644
--- a/tmp/d0056d10-64a1-4809-a712-38419c60dc5d_buggy.java
+++ b/tmp/ffd65412-5ced-4e19-b273-ec26129629dc_fixed.java
@@ -1,18 +1,35 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
             if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 if (row == null) {
                     row = i;
                 } else {
+                    // Found a second non-zero entry in this column within the constraint rows.
+                    // A basic column must have exactly one non-zero entry (a 1.0)
+                    // in the constraint rows. Since we found two, it's not basic.
                     return null;
                 }
             }
         }
-        return row;
+
+        // After iterating through all constraint rows:
+        // If 'row' is null, it means no non-zero entry was found in this column in the constraint rows.
+        // Therefore, this column cannot be basic.
+        // If 'row' is not null, it means exactly one non-zero entry was found at (row, col) in the constraint rows.
+        // For a column to be truly basic in a standard simplex tableau:
+        // 1. That single non-zero entry must be approximately 1.0.
+        // 2. Its entry in the objective function row (row 0, assuming one objective function) must be 0.0.
+        if (row != null &&
+            MathUtils.equals(getEntry(row, col), 1.0, epsilon) &&
+            MathUtils.equals(getEntry(0, col), 0.0, epsilon)) { // Check objective row coefficient
+            return row; // Column 'col' is basic, and its '1' is in 'row'
+        } else {
+            return null; // Column 'col' is not basic
+        }
     }
\ No newline at end of file
