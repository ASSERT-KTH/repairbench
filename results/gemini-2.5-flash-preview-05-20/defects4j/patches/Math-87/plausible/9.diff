diff --git a/tmp/b8b4d3a2-df70-46e7-b033-7e5e835d4795_buggy.java b/tmp/25567b1f-9ac1-4689-b2bd-19ca70617e61_fixed.java
index 70cafe0..68a4762 100644
--- a/tmp/b8b4d3a2-df70-46e7-b033-7e5e835d4795_buggy.java
+++ b/tmp/25567b1f-9ac1-4689-b2bd-19ca70617e61_fixed.java
@@ -1,18 +1,33 @@
     /**
      * Checks whether the given column is basic.
+     * A column is basic if it contains exactly one entry that is approximately 1.0,
+     * and all other entries in that column (excluding objective rows) are approximately 0.0.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
-        Integer row = null;
+        Integer basicRow = null;
+        // Iterate through rows, starting from the first constraint row
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
+            final double entry = getEntry(i, col);
+            if (MathUtils.equals(entry, 1.0, epsilon)) {
+                // Found an entry that is approximately 1.0
+                if (basicRow == null) {
+                    // This is the first 1.0 found in this column
+                    basicRow = i;
                 } else {
+                    // Found a second 1.0 in the column, which means this column is not basic
                     return null;
                 }
+            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {
+                // Found a non-zero entry that is not 1.0.
+                // This column cannot be basic according to Simplex tableau rules.
+                return null;
             }
+            // If entry is 0.0 (within epsilon), it's consistent with a basic column, so continue.
         }
-        return row;
+        // If we reach here, it means either:
+        // 1. No 1.0 was found (basicRow is null).
+        // 2. Exactly one 1.0 was found, and all other entries were 0.0 (basicRow holds the row index).
+        return basicRow;
     }
\ No newline at end of file
