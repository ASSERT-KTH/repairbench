diff --git a/tmp/dac784ba-9d54-4917-9603-034391cacd22_buggy.java b/tmp/240c3793-d7f8-4794-8c19-ffbaa1ddf2ed_fixed.java
index 70cafe0..72fc71b 100644
--- a/tmp/dac784ba-9d54-4917-9603-034391cacd22_buggy.java
+++ b/tmp/240c3793-d7f8-4794-8c19-ffbaa1ddf2ed_fixed.java
@@ -1,18 +1,37 @@
     /**
      * Checks whether the given column is basic.
+     * A column is basic if it contains exactly one non-zero entry in the constraint rows,
+     * and that non-zero entry is approximately 1.0. All other entries in the constraint
+     * rows for that column must be approximately 0.0.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
+        // Iterate through constraint rows (skipping objective function rows)
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
+            final double entry = getEntry(i, col);
+            if (MathUtils.equals(entry, 1.0, epsilon)) {
+                // Found an entry that is approximately 1.0
                 if (row == null) {
+                    // This is the first 1.0 found in this column (within constraint rows)
                     row = i;
                 } else {
-                return null;
+                    // Found a second 1.0 in this column (within constraint rows).
+                    // A basic column must have exactly one 1.0.
+                    return null; // Not basic
                 }
+            } else if (!MathUtils.equals(entry, 0.0, epsilon)) {
+                // Found a non-zero entry that is not 1.0.
+                // A basic column must have 1.0 at its basic row and 0.0 elsewhere.
+                return null; // Not basic
             }
+            // If entry is approximately 0.0, continue checking other rows.
         }
+        // After checking all constraint rows:
+        // If 'row' is not null, it means exactly one 1.0 was found and all other
+        // constraint entries in this column were 0.0. Thus, it's a basic column.
+        // If 'row' is null, it means no 1.0 was found (and no other non-zero entries
+        // caused an early 'null' return). So, it's not a basic column.
         return row;
     }
\ No newline at end of file
