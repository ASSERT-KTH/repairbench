diff --git a/tmp/9a940717-7d50-472a-9570-3f0727044258_buggy.java b/tmp/00d30dd1-8996-44e2-b246-813629862a33_fixed.java
index 57c40b2..7a3a392 100644
--- a/tmp/9a940717-7d50-472a-9570-3f0727044258_buggy.java
+++ b/tmp/00d30dd1-8996-44e2-b246-813629862a33_fixed.java
@@ -1,27 +1,34 @@
   /**
    * Visits a GETPROP node.
    *
    * @param t The node traversal object that supplies context, such as the
    * scope chain to use in name lookups as well as error reporting.
    * @param n The node being visited.
    * @param parent The parent of <code>n</code>
    */
   private void visitGetProp(NodeTraversal t, Node n, Node parent) {
     // obj.prop or obj.method()
     // Lots of types can appear on the left, a call to a void function can
     // never be on the left. getPropertyType will decide what is acceptable
     // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
     JSType childType = getJSType(objNode);
 
     if (childType.isDict()) {
       report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
     } else if (validator.expectNotNullOrUndefined(t, n, childType,
         "No properties on this expression", getNativeType(OBJECT_TYPE))) {
+      // If expectNotNullOrUndefined returns true, it means childType was not null/undefined,
+      // so it's safe to check for the property access on it.
       checkPropertyAccess(childType, property.getString(), t, n);
     }
+    // The previously existing 'else if (n.getJSType() != null && parent.isAssign()) { return; }'
+    // was problematic as it prematurely exited the function, preventing crucial checks
+    // like `expectNotNullOrUndefined` on the object itself (childType) and
+    // `checkPropertyAccess` for property existence. This caused issues like not
+    // reporting errors for property access on null or undefined, or for undefined properties
+    // on objects, especially when the GETPROP node was on the LHS of an assignment
+    // and its type was already 'UNKNOWN' or similar.
     ensureTyped(t, n);
   }
\ No newline at end of file
