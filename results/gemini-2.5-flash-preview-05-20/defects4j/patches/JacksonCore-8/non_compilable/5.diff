diff --git a/tmp/874cab7f-9b25-463c-89fb-1bb8d045d6e0_buggy.java b/tmp/bf224532-a172-48ea-b192-b92519008c1d_fixed.java
index 9c4508f..3b26aad 100644
--- a/tmp/874cab7f-9b25-463c-89fb-1bb8d045d6e0_buggy.java
+++ b/tmp/bf224532-a172-48ea-b192-b92519008c1d_fixed.java
@@ -1,13 +1,24 @@
     public char[] getTextBuffer()
     {
         // Are we just using shared input buffer?
         if (_inputStart >= 0) return _inputBuffer;
         if (_resultArray != null)  return _resultArray;
         if (_resultString != null) {
             return (_resultArray = _resultString.toCharArray());
         }
         // Nope; but does it fit in just one segment?
-        if (!_hasSegments)  return _currentSegment;
+        // If _hasSegments is false, it means all the content (if any) is within _currentSegment.
+        // For an empty buffer (e.g., after resetWithEmpty()), _currentSegment might be null.
+        // In such a case, returning a null _currentSegment would lead to a NullPointerException
+        // if its .length is accessed. We should return an empty char array.
+        if (!_hasSegments)  {
+            // If _currentSegment is null, it means no content has been accumulated yet
+            // and no segment has been allocated, implying the buffer is empty.
+            if (_currentSegment == null) {
+                return com.fasterxml.jackson.core.util.CharTypes.EMPTY_CHAR_ARRAY;
+            }
+            return _currentSegment;
+        }
         // Nope, need to have/create a non-segmented array and return it
         return contentsAsArray();
     }
\ No newline at end of file
