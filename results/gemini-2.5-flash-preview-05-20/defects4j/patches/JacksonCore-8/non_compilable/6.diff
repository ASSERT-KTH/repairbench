diff --git a/tmp/97b69886-a3b1-4a18-9073-9c2487e1cbeb_buggy.java b/tmp/a3fc6438-f3e8-48d1-9cab-89ed72a00480_fixed.java
index 9c4508f..58d3b52 100644
--- a/tmp/97b69886-a3b1-4a18-9073-9c2487e1cbeb_buggy.java
+++ b/tmp/a3fc6438-f3e8-48d1-9cab-89ed72a00480_fixed.java
@@ -1,13 +1,25 @@
     public char[] getTextBuffer()
     {
+        // [Core#182]: If the buffer logically contains no content,
+        // it should return a zero-length character array. This prevents
+        // NullPointerException if _currentSegment is null, and ensures
+        // that calling .length on the returned buffer correctly reflects
+        // the empty content, even if the underlying allocated buffer
+        // (_currentSegment or _inputBuffer) is non-empty.
+        if (getTextLength() == 0) {
+            // com.fasterxml.jackson.core.util.CoreConstants.EMPTY_CHAR_ARRAY
+            // is a static final char[0] available in Jackson Core.
+            return com.fasterxml.jackson.core.util.CoreConstants.EMPTY_CHAR_ARRAY;
+        }
+
         // Are we just using shared input buffer?
         if (_inputStart >= 0) return _inputBuffer;
         if (_resultArray != null)  return _resultArray;
         if (_resultString != null) {
             return (_resultArray = _resultString.toCharArray());
         }
         // Nope; but does it fit in just one segment?
         if (!_hasSegments)  return _currentSegment;
         // Nope, need to have/create a non-segmented array and return it
         return contentsAsArray();
     }
\ No newline at end of file
