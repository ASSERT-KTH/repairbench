diff --git a/tmp/516a8cdd-2057-48c7-8f87-31131b18b8c4_buggy.java b/tmp/c188659d-a0e8-4e41-a66a-ed18c1bd5a40_fixed.java
index 9c4508f..f91cf4a 100644
--- a/tmp/516a8cdd-2057-48c7-8f87-31131b18b8c4_buggy.java
+++ b/tmp/c188659d-a0e8-4e41-a66a-ed18c1bd5a40_fixed.java
@@ -1,13 +1,25 @@
     public char[] getTextBuffer()
     {
         // Are we just using shared input buffer?
         if (_inputStart >= 0) return _inputBuffer;
         if (_resultArray != null)  return _resultArray;
         if (_resultString != null) {
             return (_resultArray = _resultString.toCharArray());
         }
         // Nope; but does it fit in just one segment?
-        if (!_hasSegments)  return _currentSegment;
+        if (!_hasSegments) {
+            // If TextBuffer is empty (size 0) and _currentSegment is null,
+            // we should return an empty char array rather than null, to avoid NPE.
+            // If _currentSegment is non-null but has _currentSegmentPtr == 0,
+            // returning _currentSegment is fine, as getTextLength() will report 0.
+            if (_currentSegment == null) {
+                // In a full class, this would typically return a shared static `NO_CHARS`
+                // (e.g., private final static char[] NO_CHARS = new char[0];).
+                // Since we can only modify this function, we create a new empty array.
+                return new char[0];
+            }
+            return _currentSegment;
+        }
         // Nope, need to have/create a non-segmented array and return it
         return contentsAsArray();
     }
\ No newline at end of file
