diff --git a/tmp/85174a57-e1ab-4b92-95f5-8afc55940d0e_buggy.java b/tmp/30eb2c6e-60a8-449a-be94-f9cb41a1089b_fixed.java
index 9c4508f..b55223a 100644
--- a/tmp/85174a57-e1ab-4b92-95f5-8afc55940d0e_buggy.java
+++ b/tmp/30eb2c6e-60a8-449a-be94-f9cb41a1089b_fixed.java
@@ -1,13 +1,22 @@
     public char[] getTextBuffer()
     {
         // Are we just using shared input buffer?
         if (_inputStart >= 0) return _inputBuffer;
         if (_resultArray != null)  return _resultArray;
         if (_resultString != null) {
             return (_resultArray = _resultString.toCharArray());
         }
         // Nope; but does it fit in just one segment?
-        if (!_hasSegments)  return _currentSegment;
+        // If _hasSegments is false, _currentSegment should contain the content.
+        // However, if the buffer is empty (e.g., after resetWithEmpty()), _currentSegment might be null.
+        // In such a case, we should return an empty character array to avoid NullPointerException.
+        if (!_hasSegments) {
+            if (_currentSegment == null) {
+                // If it's not segmented and the current segment is null, it means the buffer is logically empty.
+                return new char[0]; // Return a zero-length char array.
+            }
+            return _currentSegment;
+        }
         // Nope, need to have/create a non-segmented array and return it
         return contentsAsArray();
     }
\ No newline at end of file
