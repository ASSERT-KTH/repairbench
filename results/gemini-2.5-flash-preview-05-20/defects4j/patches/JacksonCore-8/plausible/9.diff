diff --git a/tmp/25be215d-f98d-4559-8411-46c62d756b98_buggy.java b/tmp/546ec11f-61f3-4af9-a49d-ad5c88c53a60_fixed.java
index 9c4508f..bb57a30 100644
--- a/tmp/25be215d-f98d-4559-8411-46c62d756b98_buggy.java
+++ b/tmp/546ec11f-61f3-4af9-a49d-ad5c88c53a60_fixed.java
@@ -1,13 +1,22 @@
     public char[] getTextBuffer()
     {
         // Are we just using shared input buffer?
         if (_inputStart >= 0) return _inputBuffer;
         if (_resultArray != null)  return _resultArray;
         if (_resultString != null) {
             return (_resultArray = _resultString.toCharArray());
         }
         // Nope; but does it fit in just one segment?
-        if (!_hasSegments)  return _currentSegment;
+        if (!_hasSegments) {
+            // If _currentSegment is null, it means the buffer is logically empty
+            // and no segment has been allocated yet (e.g., after resetWithEmpty()
+            // which sets _currentSegment to null). In this case, we should
+            // return an empty char array to satisfy the contract (e.g., .length == 0).
+            if (_currentSegment == null) {
+                return new char[0];
+            }
+            return _currentSegment;
+        }
         // Nope, need to have/create a non-segmented array and return it
         return contentsAsArray();
     }
\ No newline at end of file
