diff --git a/tmp/23765e2e-3859-4aff-8c98-9f0bd7045845_buggy.java b/tmp/da483449-30c4-425c-937b-5ad0cd176737_fixed.java
index 0e18f59..3642ca6 100644
--- a/tmp/23765e2e-3859-4aff-8c98-9f0bd7045845_buggy.java
+++ b/tmp/da483449-30c4-425c-937b-5ad0cd176737_fixed.java
@@ -1,13 +1,24 @@
         @Override
         InputStream decode(final InputStream in, final Coder coder,
                 byte[] password) throws IOException {
             byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
+            // Dictionary size is a 4-byte little-endian integer starting at properties[1].
+            // Each byte needs to be treated as unsigned to prevent sign extension issues
+            // when combining them into a long.
+            long dictSize = coder.properties[1] & 0xFFL; // Start with the least significant byte, unsigned
             for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
+                // Shift the next byte (properties[i+1]) into position.
+                // Mask with 0xFFL to ensure it's treated as an unsigned value before shifting.
+                dictSize |= (coder.properties[i + 1] & 0xFFL) << (8 * i);
             }
+            // LZMAInputStream.DICT_SIZE_MAX represents the maximum dictionary size
+            // supported by the tukaani.xz LZMAInputStream, which is Integer.MAX_VALUE (approx. 2 GiB).
+            // The constructor for LZMAInputStream takes an 'int' for dictionarySize,
+            // so dictSize (long) must fit within an int.
             if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
-                throw new IOException("Dictionary larger than 4GiB maximum size");
+                // The original exception message incorrectly stated "4GiB maximum size".
+                // The actual maximum supported by tukaani.xz LZMAInputStream is 2GiB.
+                throw new IOException("Dictionary larger than 2GiB maximum size");
             }
             return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
         }
\ No newline at end of file
