diff --git a/tmp/170e3e86-981b-49d5-917e-2ab2163949b3_buggy.java b/tmp/fbd9f098-985c-4069-8333-5bd3259e4859_fixed.java
index 0e18f59..1fb8b5d 100644
--- a/tmp/170e3e86-981b-49d5-917e-2ab2163949b3_buggy.java
+++ b/tmp/fbd9f098-985c-4069-8333-5bd3259e4859_fixed.java
@@ -1,13 +1,20 @@
         @Override
         InputStream decode(final InputStream in, final Coder coder,
                 byte[] password) throws IOException {
             byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
+            // The dictionary size is a 4-byte little-endian integer stored in coder.properties[1] to coder.properties[4].
+            // Each byte must be treated as an unsigned value during the reconstruction.
+            long dictSize = coder.properties[1] & 0xFF; // Start with the least significant byte
             for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
+                // Shift subsequent bytes and OR them into dictSize, treating each byte as unsigned.
+                dictSize |= ((long)coder.properties[i + 1] & 0xFF) << (8 * i);
             }
-            if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
-                throw new IOException("Dictionary larger than 4GiB maximum size");
+            // The LZMAInputStream from org.tukaani.xz library has a strict maximum dictionary size limit
+            // (LZMAInputStream.DICT_SIZE_MAX is 64 MiB). The current code passes dictSize to it.
+            // The previous calculation could produce an incorrect, very large value due to sign extension
+            // when byte values were negative, causing it to exceed this limit prematurely.
+            if (dictSize > org.tukaani.xz.LZMAInputStream.DICT_SIZE_MAX) {
+                throw new IOException("Dictionary larger than " + org.tukaani.xz.LZMAInputStream.DICT_SIZE_MAX + " bytes");
             }
-            return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
+            return new org.tukaani.xz.LZMAInputStream(in, -1, propsByte, (int) dictSize);
         }
\ No newline at end of file
