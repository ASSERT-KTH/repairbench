diff --git a/tmp/70463d0b-dda8-42f4-a6f2-9fcf7e0270f9_buggy.java b/tmp/eb4ae0fe-79e6-4570-a664-bed0c60926b2_fixed.java
index 8afddc6..cdcdd11 100644
--- a/tmp/70463d0b-dda8-42f4-a6f2-9fcf7e0270f9_buggy.java
+++ b/tmp/eb4ae0fe-79e6-4570-a664-bed0c60926b2_fixed.java
@@ -1,22 +1,23 @@
   @Override
   protected CompilerOptions createOptions() {
     CompilerOptions options = new CompilerOptions();
     options.setCodingConvention(new ClosureCodingConvention());
     CompilationLevel level = flags.compilation_level;
     level.setOptionsForCompilationLevel(options);
     if (flags.debug) {
       level.setDebugOptionsForCompilationLevel(options);
     }
 
     WarningLevel wLevel = flags.warning_level;
     wLevel.setOptionsForWarningLevel(options);
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
-    if (flags.process_closure_primitives) {
-      options.closurePass = true;
-    }
+    // Bug fix: Directly set options.closurePass based on the flag.
+    // The previous code only handled the 'true' case and was redundant
+    // with initOptionsFromFlags, potentially leading to confusion or bugs.
+    options.closurePass = flags.process_closure_primitives;
 
     initOptionsFromFlags(options);
     return options;
   }
\ No newline at end of file
