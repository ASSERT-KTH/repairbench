diff --git a/tmp/7a591da2-575e-407e-b12c-3fe8b9bbc714_buggy.java b/tmp/34dae69e-4cf5-4c97-ad74-327a1dd09bb1_fixed.java
index e8705ac..8cdc23b 100644
--- a/tmp/7a591da2-575e-407e-b12c-3fe8b9bbc714_buggy.java
+++ b/tmp/34dae69e-4cf5-4c97-ad74-327a1dd09bb1_fixed.java
@@ -1,24 +1,33 @@
     /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
+     * There are two types of calls we are interested in: calls without explicit
+     * "this" values (what we are call "free" calls) and direct calls to eval.
      */
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
+      Node first = n.getFirstChild(); // This is the callee node (e.g., GETPROP, GETELEM, NAME, CAST, COMMA).
+
+      // Unwrap cast nodes to find the true callee.
+      // The "this" context and directness of eval calls depend on the expression
+      // *inside* the cast, not the cast itself.
+      Node callee = first;
+      if (callee.isCast()) {
+        callee = callee.getFirstChild();
+      }
+
+      // Keep track of the "this" context of a call.  A call without an
       // explicit "this" is a free call.
-      Node first = n.getFirstChild();
-
-      // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+      // Free calls are those where the callee is not a GETPROP or GETELEM.
+      // This applies to calls like "foo()" or "(0,foo)()" but not "obj.foo()" or "obj['foo']()".
+      if (!NodeUtil.isGet(callee)) {
         n.putBooleanProp(Node.FREE_CALL, true);
       }
 
       // Keep track of the context in which eval is called. It is important
       // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
-        first.putBooleanProp(Node.DIRECT_EVAL, true);
+      // We are interested in "direct" calls to eval, which means the callee
+      // itself is the 'eval' name, potentially wrapped in a cast.
+      if (callee.isName() && "eval".equals(callee.getString())) {
+        callee.putBooleanProp(Node.DIRECT_EVAL, true);
       }
     }
\ No newline at end of file
