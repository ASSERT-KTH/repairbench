diff --git a/tmp/1725a44e-6b8a-4dca-96f8-8a27caf908bb_buggy.java b/tmp/3d0185e9-200f-4a80-8233-36aa4e707d78_fixed.java
index 50f3e2e..f9f7405 100644
--- a/tmp/1725a44e-6b8a-4dca-96f8-8a27caf908bb_buggy.java
+++ b/tmp/3d0185e9-200f-4a80-8233-36aa4e707d78_fixed.java
@@ -1,7 +1,17 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
-        final Line reverted = new Line(zero, zero.subtract(direction));
+        // A line is defined by a point (zero) and a normalized direction vector (direction).
+        // To revert the line's direction, we should create a new line passing through the
+        // same point 'zero' but with the negated direction vector.
+        // The Line constructor takes a point and a direction vector, and it internally
+        // normalizes the provided direction vector. Since 'this.direction' is already
+        // a normalized vector, 'this.direction.negate()' will also be a normalized vector.
+        // Using 'direction.negate()' directly avoids unnecessary arithmetic operations
+        // involving the 'zero' point (like zero.subtract(direction)) before normalization,
+        // which can sometimes introduce tiny floating-point inaccuracies, leading to test failures
+        // like the one observed due to precision differences.
+        final Line reverted = new Line(zero, direction.negate());
         return reverted;
     }
\ No newline at end of file
