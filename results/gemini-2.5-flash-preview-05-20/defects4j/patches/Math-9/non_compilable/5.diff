diff --git a/tmp/b35bd560-8c1f-48ce-84d8-bc7e9eece6dd_buggy.java b/tmp/35f23e9c-f001-4dce-bef2-5c4cee5d6c3f_fixed.java
index 50f3e2e..dd553a4 100644
--- a/tmp/b35bd560-8c1f-48ce-84d8-bc7e9eece6dd_buggy.java
+++ b/tmp/35f23e9c-f001-4dce-bef2-5c4cee5d6c3f_fixed.java
@@ -1,7 +1,14 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
-        final Line reverted = new Line(zero, zero.subtract(direction));
+        // The current 'direction' field is a normalized vector representing the line's orientation.
+        // To revert the line's direction, we need a new line with the same 'zero' point
+        // but with the direction vector negated.
+        // The Line constructor 'Line(Vector3D p, Vector3D direction, double tolerance)'
+        // is the most appropriate for this purpose. It takes a point on the line
+        // and a direction vector, which it then normalizes internally.
+        // Using 'this.tolerance' ensures consistency with the original line's precision settings.
+        final Line reverted = new Line(this.zero, this.direction.negate(), this.tolerance);
         return reverted;
     }
\ No newline at end of file
