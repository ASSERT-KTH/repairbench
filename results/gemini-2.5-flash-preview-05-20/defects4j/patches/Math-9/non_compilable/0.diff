diff --git a/tmp/663deb23-b29b-40a3-aa23-20707c946b53_buggy.java b/tmp/5f043f68-39d2-429b-84de-c27094f4e893_fixed.java
index 50f3e2e..e60a880 100644
--- a/tmp/663deb23-b29b-40a3-aa23-20707c946b53_buggy.java
+++ b/tmp/5f043f68-39d2-429b-84de-c27094f4e893_fixed.java
@@ -1,7 +1,17 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
-        final Line reverted = new Line(zero, zero.subtract(direction));
+        // A Line object is constructed using two points (p1, p2) and a tolerance.
+        // The constructor calculates its internal direction as (p2 - p1).normalize().
+        // To revert the line's direction, we want the new line's direction to be -this.direction.
+        //
+        // We can choose 'this.zero' (the current line's origin) as p1 for the new line.
+        // To get a direction of -this.direction, p2 must be 'this.zero.subtract(this.direction)'.
+        // This is because ( (this.zero - this.direction) - this.zero ).normalize() simplifies to (-this.direction).normalize().
+        //
+        // The original code was missing the 'tolerance' argument required by the Line constructor.
+        // This is the primary fix. We pass 'this.tolerance' to the constructor.
+        final Line reverted = new Line(zero, zero.subtract(direction), tolerance);
         return reverted;
     }
\ No newline at end of file
