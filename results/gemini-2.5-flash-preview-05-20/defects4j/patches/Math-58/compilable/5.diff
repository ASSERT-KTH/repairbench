diff --git a/tmp/77045491-659e-4c40-9f13-9aeab17e1931_buggy.java b/tmp/67de10dd-30ec-4930-b07e-fe70cba9bfed_fixed.java
index 3002587..cfbe4b6 100644
--- a/tmp/77045491-659e-4c40-9f13-9aeab17e1931_buggy.java
+++ b/tmp/67de10dd-30ec-4930-b07e-fe70cba9bfed_fixed.java
@@ -1,10 +1,21 @@
     /**
      * Fits a Gaussian function to the observed points.
      *
      * @return the parameters of the Gaussian function that best fits the
      * observed points (in the same order as above).
      */
     public double[] fit() {
         final double[] guess = (new ParameterGuesser(getObservations())).guess();
+        try {
+            // Attempt to fit the Gaussian function using the initial guess.
+            // The underlying optimization process might try parameter values
+            // (like negative sigma) that are mathematically invalid for a Gaussian.
             return fit(new Gaussian.Parametric(), guess);
+        } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) {
+            // As per the test description (testMath519), if the optimizer
+            // tries negative sigma values and raises an exception (specifically
+            // NotStrictlyPositiveException in this context), the GaussianFitter
+            // should catch it and return NaN values for the parameters.
+            return new double[] { Double.NaN, Double.NaN, Double.NaN };
+        }
     }
\ No newline at end of file
