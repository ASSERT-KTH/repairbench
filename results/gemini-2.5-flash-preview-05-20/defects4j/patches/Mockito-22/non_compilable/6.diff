diff --git a/tmp/2d10922a-fc6e-4ba9-bc0d-496b18d1cba5_buggy.java b/tmp/d3408c93-ce07-4d47-82d2-f647f29dc621_fixed.java
index 111ba5e..ada292c 100644
--- a/tmp/2d10922a-fc6e-4ba9-bc0d-496b18d1cba5_buggy.java
+++ b/tmp/d3408c93-ce07-4d47-82d2-f647f29dc621_fixed.java
@@ -1,9 +1,37 @@
+import java.lang.reflect.Array;
+
 public static boolean areEqual(Object o1, Object o2) {
+    if (o1 == o2) {
+        return true;
+    }
     if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
-            return isArray(o2) && areArraysEqual(o1, o2);
+        return false;
+    }
+
+    boolean o1IsArray = o1.getClass().isArray();
+    boolean o2IsArray = o2.getClass().isArray();
+
+    if (o1IsArray && o2IsArray) {
+        int length1 = Array.getLength(o1);
+        int length2 = Array.getLength(o2);
+
+        if (length1 != length2) {
+            return false;
+        }
+
+        for (int i = 0; i < length1; i++) {
+            Object element1 = Array.get(o1, i);
+            Object element2 = Array.get(o2, i);
+            if (!areEqual(element1, element2)) { // Recursive call to compare elements
+                return false;
+            }
+        }
+        return true;
+    } else if (o1IsArray != o2IsArray) {
+        // One is an array, the other is not. They cannot be equal.
+        return false;
     } else {
+        // Neither is an array, use standard equals method
         return o1.equals(o2);
     }
 }
\ No newline at end of file
