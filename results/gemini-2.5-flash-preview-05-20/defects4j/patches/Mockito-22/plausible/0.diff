diff --git a/tmp/3de5e174-e2aa-40c2-a776-df6cb1b7c64c_buggy.java b/tmp/5110f7f2-cad4-4893-ae45-55cc529842a3_fixed.java
index 111ba5e..670fbac 100644
--- a/tmp/3de5e174-e2aa-40c2-a776-df6cb1b7c64c_buggy.java
+++ b/tmp/5110f7f2-cad4-4893-ae45-55cc529842a3_fixed.java
@@ -1,9 +1,26 @@
     public static boolean areEqual(Object o1, Object o2) {
+        if (o1 == o2) { // Handles (null, null) and (obj, obj) cases
+            return true;
+        }
+        // At this point, o1 and o2 are not the same instance.
+        // So if one is null, the other is not, meaning they are not equal.
         if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
+            return false;
+        }
+
+        // Both o1 and o2 are non-null and distinct instances.
+        if (isArray(o1)) {
+            // If o1 is an array, o2 must also be an array for them to be equal.
             return isArray(o2) && areArraysEqual(o1, o2);
         } else {
+            // For non-array objects, try to use their equals method.
+            // Wrap in try-catch to handle potential RuntimeExceptions from broken equals implementations.
+            try {
                 return o1.equals(o2);
+            } catch (RuntimeException e) {
+                // If o1.equals(o2) throws an exception, consider the objects unequal
+                // as the comparison itself failed.
+                return false;
+            }
         }
     }
\ No newline at end of file
