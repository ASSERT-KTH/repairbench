diff --git a/tmp/281e1d18-584d-4475-b09c-c81837a01606_buggy.java b/tmp/eb041b2f-05c9-488d-8609-6cdf686291d6_fixed.java
index 111ba5e..d7b68f2 100644
--- a/tmp/281e1d18-584d-4475-b09c-c81837a01606_buggy.java
+++ b/tmp/eb041b2f-05c9-488d-8609-6cdf686291d6_fixed.java
@@ -1,9 +1,25 @@
     public static boolean areEqual(Object o1, Object o2) {
+        // If both objects are the same instance, they are equal.
+        // This also handles the case where both are null.
+        if (o1 == o2) {
+            return true;
+        }
+
+        // At this point, o1 and o2 are not the same instance.
+        // If one is null and the other is not, they cannot be equal.
         if (o1 == null || o2 == null) {
-            return o1 == null && o2 == null;
-        } else if (isArray(o1)) {
+            return false; // One is null, the other is not (since o1 == o2 was false)
+        } 
+        
+        // If neither is null, proceed with type-specific comparisons.
+        else if (isArray(o1)) {
+            // If o1 is an array, then o2 must also be an array for them to be equal.
+            // If o2 is also an array, compare their contents.
             return isArray(o2) && areArraysEqual(o1, o2);
         } else {
+            // If o1 is not an array, use its custom equals method.
+            // This implicitly handles the case where o2 might be an array but o1 is not.
+            // In such a scenario, o1.equals(o2) would typically return false.
             return o1.equals(o2);
         }
     }
\ No newline at end of file
