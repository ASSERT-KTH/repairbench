diff --git a/tmp/8182fa53-a77d-4112-8e4b-bd29d414a840_buggy.java b/tmp/9cf6bb63-48f1-4d39-93b5-440dc3e942dd_fixed.java
index ef76662..c462d3d 100644
--- a/tmp/8182fa53-a77d-4112-8e4b-bd29d414a840_buggy.java
+++ b/tmp/9cf6bb63-48f1-4d39-93b5-440dc3e942dd_fixed.java
@@ -1,17 +1,24 @@
         void read(Tokeniser t, CharacterReader r) {
             char c = r.consume();
             switch (c) {
                 case '>':
                     t.tagPending.selfClosing = true;
                     t.emitTagPending();
                     t.transition(Data);
                     break;
-                case eof:
+                case CharacterReader.EOF: // Use CharacterReader.EOF for consistency with Jsoup's internal constant
                     t.eofError(this);
                     t.transition(Data);
                     break;
                 default:
+                    // This state is reached after consuming a '/' (e.g. <img /onerror)
+                    // The character `c` is the one *after* the '/'.
+                    // Per HTML5 spec, the '/' should be an error, and we should re-process `c`
+                    // in the BeforeAttributeName state. The character `c` must be unconsumed
+                    // so BeforeAttributeName can properly consume it as the start of an attribute name.
                     t.error(this);
+                    r.unconsume(); // Put 'c' back into the reader
                     t.transition(BeforeAttributeName);
+                    break;
             }
         }
\ No newline at end of file
