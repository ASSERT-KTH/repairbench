diff --git a/tmp/0e41412f-2ce8-4df0-a688-83db188b2edd_buggy.java b/tmp/1024de4b-2d36-4543-a2f5-59d31e2c8d08_fixed.java
index 66e3d01..0bee1f6 100644
--- a/tmp/0e41412f-2ce8-4df0-a688-83db188b2edd_buggy.java
+++ b/tmp/1024de4b-2d36-4543-a2f5-59d31e2c8d08_fixed.java
@@ -1,34 +1,46 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
-      // Binary operators are only valid if both children are valid.
-      case Token.BITAND:
-      case Token.BITNOT:
-      case Token.BITOR:
-      case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
-      case Token.NOT:
-      case Token.NEG:
+      // Unary operators are valid if the child is valid.
+      case Token.NOT: // !x
+      case Token.NEG: // -x (unary minus)
+      case Token.BITNOT: // ~x (bitwise NOT)
         return isValidDefineValue(val.getFirstChild(), defines);
 
+      // Binary operators are valid if both children are valid.
+      case Token.ADD: // x + y
+      case Token.SUB: // x - y
+      case Token.MUL: // x * y
+      case Token.DIV: // x / y
+      case Token.MOD: // x % y
+      case Token.BITAND: // x & y
+      case Token.BITOR: // x | y
+      case Token.BITXOR: // x ^ y
+      case Token.LSH: // x << y
+      case Token.RSH: // x >> y
+      case Token.URSH: // x >>> y
+        return isValidDefineValue(val.getFirstChild(), defines)
+            && isValidDefineValue(val.getLastChild(), defines);
+
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
+        // Fall through to false if it's not a qualified name
+        // (e.g., an invalid GETPROP or a simple NAME that is not a define itself).
     }
     return false;
   }
\ No newline at end of file
