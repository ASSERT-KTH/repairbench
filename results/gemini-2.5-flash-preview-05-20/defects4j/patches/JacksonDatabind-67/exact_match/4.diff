diff --git a/tmp/36352e09-0c72-45b9-a7b0-633741b3d1e5_buggy.java b/tmp/d977ac9f-33d5-484e-a8b3-9712dacf5d93_fixed.java
index bc80637..4fe41b9 100644
--- a/tmp/36352e09-0c72-45b9-a7b0-633741b3d1e5_buggy.java
+++ b/tmp/d977ac9f-33d5-484e-a8b3-9712dacf5d93_fixed.java
@@ -1,33 +1,41 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+                // Bug: Original code had 'return _createEnumKeyDeserializer(ctxt, type);' here,
+                // which caused the function to exit early, bypassing any registered
+                // BeanDeserializerModifiers.
+                // Fix: Assign the created deserializer to 'deser' and allow the
+                // post-processing (modifier application) to happen.
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
+        }
         // and then post-processing
+        // This block will now correctly be reached for enum key deserializers as well,
+        // allowing BeanDeserializerModifiers to modify them.
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
