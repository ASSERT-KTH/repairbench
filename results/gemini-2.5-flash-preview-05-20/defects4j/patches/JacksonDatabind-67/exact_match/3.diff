diff --git a/tmp/99ed799d-a65f-4517-9032-72316d0e837e_buggy.java b/tmp/1c5b2ec6-6d0d-40c0-bc46-d9d8385a84d0_fixed.java
index bc80637..da68a33 100644
--- a/tmp/99ed799d-a65f-4517-9032-72316d0e837e_buggy.java
+++ b/tmp/1c5b2ec6-6d0d-40c0-bc46-d9d8385a84d0_fixed.java
@@ -1,33 +1,41 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
-        // the only non-standard thing is this:
+        // The core issue is that for enum types, if no custom KeyDeserializer is found
+        // via _factoryConfig.keyDeserializers(), the function would directly return
+        // the default enum key deserializer from _createEnumKeyDeserializer().
+        // This bypasses the subsequent post-processing step where BeanDeserializerModifiers
+        // are applied.
+        // To fix this, we assign the result of _createEnumKeyDeserializer() to 'deser'
+        // instead of returning directly, and ensure that StdKeyDeserializers is only
+        // checked if it's not an enum type.
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
-            }
+                deser = _createEnumKeyDeserializer(ctxt, type);
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
+        }
         // and then post-processing
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }
\ No newline at end of file
