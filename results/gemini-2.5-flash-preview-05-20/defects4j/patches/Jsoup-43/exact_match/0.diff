diff --git a/tmp/16514ea9-ca03-4bf4-a026-8e53be36c023_buggy.java b/tmp/2c8108ea-4e4b-438b-bcbc-13252f4087f4_fixed.java
index a5093b1..49e3656 100644
--- a/tmp/16514ea9-ca03-4bf4-a026-8e53be36c023_buggy.java
+++ b/tmp/2c8108ea-4e4b-438b-bcbc-13252f4087f4_fixed.java
@@ -1,11 +1,16 @@
     private static <E extends Element> Integer indexInList(Element search, List<E> elements) {
         Validate.notNull(search);
         Validate.notNull(elements);
 
         for (int i = 0; i < elements.size(); i++) {
             E element = elements.get(i);
-            if (element.equals(search))
+            // The problem is that Element.equals() might compare based on content/structure,
+            // which can lead to finding an element with the same content but a different
+            // object instance and an earlier index, causing incorrect sibling indices.
+            // For finding an element's own index in a list of siblings, we need to
+            // check for object identity, not value equality.
+            if (element == search)
                 return i;
         }
         return null;
     }
\ No newline at end of file
