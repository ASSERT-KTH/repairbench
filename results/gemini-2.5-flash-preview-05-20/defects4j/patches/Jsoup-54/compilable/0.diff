diff --git a/tmp/1e69895e-4f50-43b4-8d36-719f7d3d525f_buggy.java b/tmp/faace51d-eaa7-4062-b133-c4031fe2cd90_fixed.java
index d5b3da9..d350de6 100644
--- a/tmp/1e69895e-4f50-43b4-8d36-719f7d3d525f_buggy.java
+++ b/tmp/faace51d-eaa7-4062-b133-c4031fe2cd90_fixed.java
@@ -1,7 +1,35 @@
         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
-                    el.setAttribute(key, attribute.getValue());
+                String key = attribute.getKey();
+
+                // 1. Remove characters not allowed in XML attribute names (XML NameChar production).
+                //    Allowed NameChar in basic XML: letters, digits, '_', '-', '.', ':'
+                //    This regex keeps only these characters, effectively removing any illegal characters
+                //    like quotes, spaces, etc., that might appear in a Jsoup-parsed attribute key.
+                String sanitizedKey = key.replaceAll("[^a-zA-Z0-9_\\-.:]", "");
+
+                // 2. If the key becomes empty after sanitization, it's invalid for XML. Skip this attribute.
+                //    An empty string is not a valid XML attribute name, and attempting to set it will throw DOMException.
+                if (sanitizedKey.isEmpty()) {
+                    continue;
+                }
+
+                // 3. Ensure the key starts with a valid XML NameStartChar production.
+                //    XML NameStartChar in basic XML: letters, '_', ':' (and some unicode ranges).
+                //    If the first character of the sanitized key is not a valid NameStartChar
+                //    (e.g., it's a digit, hyphen, or dot), prepend an underscore to make it valid.
+                char firstChar = sanitizedKey.charAt(0);
+                if (!((firstChar >= 'a' && firstChar <= 'z') ||
+                      (firstChar >= 'A' && firstChar <= 'Z') ||
+                      firstChar == '_' ||
+                      firstChar == ':')) {
+                    sanitizedKey = "_" + sanitizedKey;
+                }
+                
+                // Set the attribute with the sanitized and validated key.
+                // If the key is still invalid after these steps (e.g., extremely unusual cases or
+                // more complex XML validity rules not covered by basic sanitization),
+                // the DOMException might still occur, but this covers common scenarios.
+                el.setAttribute(sanitizedKey, attribute.getValue());
             }
         }
\ No newline at end of file
