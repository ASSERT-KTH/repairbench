diff --git a/tmp/1b83489a-f21b-4647-9c32-f8d7e9e6b0cd_buggy.java b/tmp/1ce375f4-43f7-4911-95d4-246396c5a040_fixed.java
index d5b3da9..914d53c 100644
--- a/tmp/1b83489a-f21b-4647-9c32-f8d7e9e6b0cd_buggy.java
+++ b/tmp/1ce375f4-43f7-4911-95d4-246396c5a040_fixed.java
@@ -1,7 +1,32 @@
         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
                 // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
-                    el.setAttribute(key, attribute.getValue());
+                String key = attribute.getKey();
+
+                // 1. Remove characters not allowed anywhere in an XML name.
+                // The regex `[^-a-zA-Z0-9_:.]` correctly filters out characters that are not
+                // letters, digits, colon, underscore, period, or hyphen.
+                String sanitizedKey = key.replaceAll("[^-a-zA-Z0-9_:.]", "");
+
+                // 2. Handle cases where the sanitized key is empty or starts with an invalid character.
+                if (sanitizedKey.isEmpty()) {
+                    // If the key becomes empty after sanitization (e.g., original was just '"'),
+                    // we must provide a valid default to avoid DOMException.
+                    sanitizedKey = "_js_empty_attr"; // A valid XML name
+                } else {
+                    // Check if the first character is valid for an XML name start.
+                    // Valid XML name start characters are letters, '_', or ':'.
+                    char firstChar = sanitizedKey.charAt(0);
+                    if (!Character.isLetter(firstChar) && firstChar != '_' && firstChar != ':') {
+                        // If it starts with a digit or hyphen (which are valid NameChar but not NameStartChar),
+                        // or any other filtered character that was allowed to pass due to initial regex,
+                        // prefix it to make it a valid XML name.
+                        sanitizedKey = "_" + sanitizedKey;
+                    }
+                }
+
+                // Attempt to set the attribute with the sanitized key.
+                // This ensures that the key passed to setAttribute always conforms to XML naming rules.
+                el.setAttribute(sanitizedKey, attribute.getValue());
             }
         }
\ No newline at end of file
