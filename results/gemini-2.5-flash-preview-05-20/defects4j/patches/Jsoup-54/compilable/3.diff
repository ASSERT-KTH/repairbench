diff --git a/tmp/111e5da4-d7cd-47f8-97ea-971d3f00f85e_buggy.java b/tmp/a823c79e-3bf6-469c-ab39-cb129db44008_fixed.java
index d5b3da9..f4f3bf5 100644
--- a/tmp/111e5da4-d7cd-47f8-97ea-971d3f00f85e_buggy.java
+++ b/tmp/a823c79e-3bf6-469c-ab39-cb129db44008_fixed.java
@@ -1,7 +1,32 @@
         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
-                    el.setAttribute(key, attribute.getValue());
+                String key = attribute.getKey();
+                String value = attribute.getValue();
+
+                // XML attribute names must start with a letter, _, or :
+                // Subsequent characters can be letters, digits, ., -, _, or :
+                // The regex `[^-a-zA-Z0-9_:.]` removes any characters that are NOT
+                // allowed in *any* part of an XML attribute name (i.e., not a NameChar).
+                String cleanedKey = key.replaceAll("[^-a-zA-Z0-9_:.]", "");
+
+                // Ensure the cleaned key is a valid XML Name.
+                // 1. If the key became empty after cleaning, assign a default valid name.
+                // 2. If the key starts with a character not allowed as a NameStartChar
+                //    (e.g., a digit, '.', or '-'), prepend a valid NameStartChar.
+                if (cleanedKey.isEmpty()) {
+                    cleanedKey = "_invalid_attr"; // Fallback for completely invalid or empty names
+                } else {
+                    char firstChar = cleanedKey.charAt(0);
+                    // Check if the first character is NOT a valid XML NameStartChar: [a-zA-Z_:]
+                    if (!((firstChar >= 'a' && firstChar <= 'z') ||
+                          (firstChar >= 'A' && firstChar <= 'Z') ||
+                          firstChar == '_' || firstChar == ':')) {
+                        // Prepend a valid NameStartChar to make the key conform to XML rules
+                        cleanedKey = "_" + cleanedKey;
+                    }
+                }
+
+                // Set the attribute with the cleaned and validated key
+                el.setAttribute(cleanedKey, value);
             }
         }
\ No newline at end of file
