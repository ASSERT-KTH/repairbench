diff --git a/tmp/26ed8de3-99fc-4c28-b164-34233a205e9e_buggy.java b/tmp/ce45aa37-5b70-4cd6-a742-acdc564d4203_fixed.java
index d5b3da9..a05231e 100644
--- a/tmp/26ed8de3-99fc-4c28-b164-34233a205e9e_buggy.java
+++ b/tmp/ce45aa37-5b70-4cd6-a742-acdc564d4203_fixed.java
@@ -1,7 +1,29 @@
         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
-                // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
-                String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
-                    el.setAttribute(key, attribute.getValue());
+                String key = attribute.getKey();
+
+                // 1. Clean the attribute key by removing characters that are not valid XML NameChars.
+                // The regex `[^-a-zA-Z0-9_:.]` matches any character that is NOT a hyphen,
+                // a letter (a-z, A-Z), a digit (0-9), an underscore (_), a colon (:), or a dot (.).
+                // These are generally the allowed characters for XML NameChar (excluding extended unicode).
+                String cleanedKey = key.replaceAll("[^-a-zA-Z0-9_:.]", "");
+
+                // 2. If the cleaned key is empty, it means the original key consisted solely of invalid characters.
+                // In this case, we cannot form a valid XML attribute name, so we skip this attribute.
+                if (cleanedKey.isEmpty()) {
+                    continue;
+                }
+
+                // 3. Ensure the first character of the cleaned key is a valid XML NameStartChar.
+                // According to XML 1.0 (and common simplified rules), a NameStartChar must be a letter,
+                // an underscore (_), or a colon (:). It cannot be a digit, hyphen, or dot.
+                char firstChar = cleanedKey.charAt(0);
+                if (!Character.isLetter(firstChar) && firstChar != '_' && firstChar != ':') {
+                    // If the first character is not a valid NameStartChar (e.g., '1', '-', '.'),
+                    // prepend a valid NameStartChar (like '_') to make it valid.
+                    cleanedKey = "_" + cleanedKey;
+                }
+
+                el.setAttribute(cleanedKey, attribute.getValue());
             }
         }
\ No newline at end of file
