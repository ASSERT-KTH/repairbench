diff --git a/tmp/127c521a-410e-48b7-bba1-dc9c5ac954ab_buggy.java b/tmp/04285fd7-4acc-4a18-b867-54e5cea091ad_fixed.java
index d5b3da9..a69ba34 100644
--- a/tmp/127c521a-410e-48b7-bba1-dc9c5ac954ab_buggy.java
+++ b/tmp/04285fd7-4acc-4a18-b867-54e5cea091ad_fixed.java
@@ -1,7 +1,26 @@
         private void copyAttributes(org.jsoup.nodes.Node source, Element el) {
             for (Attribute attribute : source.attributes()) {
                 // valid xml attribute names are: ^[a-zA-Z_:][-a-zA-Z0-9_:.]
+                // First, remove any characters that are not valid XML NameChar (subsequent characters)
                 String key = attribute.getKey().replaceAll("[^-a-zA-Z0-9_:.]", "");
+
+                // Now, ensure the key is not empty and starts with a valid XML NameStartChar.
+                // If it's empty or starts with an invalid character, prepend a valid one.
+                if (key.length() > 0) {
+                    char firstChar = key.charAt(0);
+                    // Check if the first character is NOT a valid XML NameStartChar
+                    // Valid NameStartChar: [a-zA-Z_:]
+                    if (!((firstChar >= 'a' && firstChar <= 'z') ||
+                          (firstChar >= 'A' && firstChar <= 'Z') ||
+                          firstChar == '_' || firstChar == ':')) {
+                        // Prepend a valid char if the first char is invalid
+                        key = "_" + key;
+                    }
+                } else {
+                    // If the key became empty after sanitization, use a default valid name
+                    key = "_";
+                }
+
                 el.setAttribute(key, attribute.getValue());
             }
         }
\ No newline at end of file
