diff --git a/tmp/56670ed7-fa19-432a-80b6-976a668361ed_buggy.java b/tmp/74063d1a-a319-4ef5-8c26-0e1c3400af62_fixed.java
index c1f30a5..e0a2c5d 100644
--- a/tmp/56670ed7-fa19-432a-80b6-976a668361ed_buggy.java
+++ b/tmp/74063d1a-a319-4ef5-8c26-0e1c3400af62_fixed.java
@@ -1,15 +1,23 @@
     /**
      * <p>Formats a <code>Calendar</code> object into the
      * supplied <code>StringBuffer</code>.</p>
      * 
      * @param calendar  the calendar to format
      * @param buf  the buffer to format into
      * @return the specified string buffer
      */
     public StringBuffer format(Calendar calendar, StringBuffer buf) {
         if (mTimeZoneForced) {
+            // LANG-538:
+            // This bug occurs if the calendar's fields are set, but the internal time
+            // (milliseconds since epoch) is not yet computed. If setTimeZone() is then
+            // called, the calendar will interpret the existing field values in the new
+            // timezone, instead of converting the point in time to the new timezone.
+            // To fix this, we force the calendar to compute its internal time
+            // before setting the new timezone.
             calendar = (Calendar) calendar.clone();
+            calendar.getTimeInMillis(); // Force computation of time in original timezone
             calendar.setTimeZone(mTimeZone);
         }
         return applyRules(calendar, buf);
     }
\ No newline at end of file
