diff --git a/tmp/90e27a28-573e-4692-91aa-be00ec5fc05b_buggy.java b/tmp/2b4831b1-5d66-4871-ab2d-9603f7c188ad_fixed.java
index 562001a..64ab735 100644
--- a/tmp/90e27a28-573e-4692-91aa-be00ec5fc05b_buggy.java
+++ b/tmp/2b4831b1-5d66-4871-ab2d-9603f7c188ad_fixed.java
@@ -1,29 +1,46 @@
     /**
      * <p>Checks if String contains a search String irrespective of case,
      * handling <code>null</code>. Case-insensitivity is defined as by
      * {@link String#equalsIgnoreCase(String)}.
      *
      * <p>A <code>null</code> String will return <code>false</code>.</p>
      *
      * <pre>
      * StringUtils.contains(null, *) = false
      * StringUtils.contains(*, null) = false
      * StringUtils.contains("", "") = true
      * StringUtils.contains("abc", "") = true
      * StringUtils.contains("abc", "a") = true
      * StringUtils.contains("abc", "z") = false
      * StringUtils.contains("abc", "A") = true
      * StringUtils.contains("abc", "Z") = false
      * </pre>
      *
      * @param str  the String to check, may be null
      * @param searchStr  the String to find, may be null
      * @return true if the String contains the search String irrespective of
      * case or false if not or <code>null</code> string input
      */
     public static boolean containsIgnoreCase(String str, String searchStr) {
         if (str == null || searchStr == null) {
             return false;
         }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+        final int length = str.length();
+        final int searchLength = searchStr.length();
+        if (searchLength == 0) {
+            return true; // An empty string is contained in any string.
+        }
+        if (searchLength > length) {
+            return false; // Search string is longer than the string to search within.
+        }
+        // Iterate through the main string
+        for (int i = 0; i <= length - searchLength; i++) {
+            // Use regionMatches with ignoreCase=true to check for case-insensitive match
+            // This aligns with String.equalsIgnoreCase's behavior regarding locale-independent
+            // case folding, which simple toUpperCase() or toLowerCase() does not guarantee.
+            if (str.regionMatches(true, i, searchStr, 0, searchLength)) {
+                return true;
+            }
+        }
+        return false;
     }
\ No newline at end of file
