diff --git a/tmp/483bc134-43f1-4b86-92f5-82fe9d44881a_buggy.java b/tmp/c497c617-5a09-40e7-a2f8-3eea8c57e9b4_fixed.java
index ae6c2b1..cead8d9 100644
--- a/tmp/483bc134-43f1-4b86-92f5-82fe9d44881a_buggy.java
+++ b/tmp/c497c617-5a09-40e7-a2f8-3eea8c57e9b4_fixed.java
@@ -1,10 +1,24 @@
         public int parseInto(DateTimeParserBucket bucket, String text, int position) {
             String str = text.substring(position);
+            String bestId = null;
+            int bestLength = 0;
+
+            // Iterate through all known time zone IDs to find the longest matching one.
+            // This is necessary because some IDs are prefixes of others (e.g., "America/Dawson" and "America/Dawson_Creek").
+            // To ensure the correct ID is parsed, we must pick the longest possible match.
             for (String id : ALL_IDS) {
                 if (str.startsWith(id)) {
-                    bucket.setZone(DateTimeZone.forID(id));
-                    return position + id.length();
+                    if (id.length() > bestLength) {
+                        bestId = id;
+                        bestLength = id.length();
                     }
                 }
-            return ~position;
+            }
+
+            if (bestId != null) {
+                bucket.setZone(DateTimeZone.forID(bestId));
+                return position + bestLength;
+            } else {
+                return ~position; // No matching ID found
+            }
         }
\ No newline at end of file
