diff --git a/tmp/b5265ebf-53f4-4e67-b1c5-cbf40fc787a8_buggy.java b/tmp/74b4644f-5466-4403-b056-688fefb94ee7_fixed.java
index 3127f85..ca9d57a 100644
--- a/tmp/b5265ebf-53f4-4e67-b1c5-cbf40fc787a8_buggy.java
+++ b/tmp/74b4644f-5466-4403-b056-688fefb94ee7_fixed.java
@@ -1,24 +1,37 @@
     /**
      * For this distribution, {@code X}, this method returns {@code P(X < x)}.
      * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
      * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
      *
      * @param x Value at which the CDF is evaluated.
      * @return CDF evaluated at {@code x}.
      * @throws MathException if the algorithm fails to converge
      */
     public double cumulativeProbability(double x) throws MathException {
+        // Handle infinite values explicitly to prevent divergence errors in Erf.erf
+        if (Double.isInfinite(x)) {
+            if (x == Double.POSITIVE_INFINITY) {
+                return 1.0;
+            } else { // x == Double.NEGATIVE_INFINITY
+                return 0.0;
+            }
+        }
+
         final double dev = x - mean;
         try {
             return 0.5 * (1.0 + Erf.erf((dev) /
                     (standardDeviation * FastMath.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
+            // This block handles cases where the Erf computation itself fails
+            // for very large finite arguments (e.g., due to numerical precision).
+            // These thresholds (20 standard deviations) are intended to catch values
+            // that are practically 0 or 1 but cause numerical issues in the Erf calculation.
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1;
             } else {
-                throw ex;
+                throw ex; // Re-throw if it's not an extreme case covered by thresholds
             }
         }
     }
\ No newline at end of file
