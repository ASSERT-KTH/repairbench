diff --git a/tmp/51af9eff-6431-4847-8b43-44e1c657e8e7_buggy.java b/tmp/02559767-572d-444c-91c2-6d48a33b795a_fixed.java
index 3127f85..4333256 100644
--- a/tmp/51af9eff-6431-4847-8b43-44e1c657e8e7_buggy.java
+++ b/tmp/02559767-572d-444c-91c2-6d48a33b795a_fixed.java
@@ -1,24 +1,39 @@
     /**
      * For this distribution, {@code X}, this method returns {@code P(X < x)}.
      * If {@code x}is more than 40 standard deviations from the mean, 0 or 1 is returned,
      * as in these cases the actual value is within {@code Double.MIN_VALUE} of 0 or 1.
      *
      * @param x Value at which the CDF is evaluated.
      * @return CDF evaluated at {@code x}.
      * @throws MathException if the algorithm fails to converge
      */
     public double cumulativeProbability(double x) throws MathException {
+        // Handle infinite values explicitly to prevent numerical issues and
+        // ConvergenceException when passing infinity to Erf.erf.
+        if (Double.isInfinite(x)) {
+            if (x == Double.POSITIVE_INFINITY) {
+                return 1.0;
+            } else { // x == Double.NEGATIVE_INFINITY
+                return 0.0;
+            }
+        }
+
         final double dev = x - mean;
         try {
         return 0.5 * (1.0 + Erf.erf((dev) /
                     (standardDeviation * FastMath.sqrt(2.0))));
         } catch (MaxIterationsExceededException ex) {
+            // This block handles cases where the Erf.erf computation might exceed
+            // its iteration limit for very extreme but finite values of x.
+            // The current threshold of 20 standard deviations is retained from the original code.
             if (x < (mean - 20 * standardDeviation)) { // JDK 1.5 blows at 38
                 return 0;
             } else if (x > (mean + 20 * standardDeviation)) {
                 return 1;
             } else {
+                // If the value is not considered "extreme enough" to be top-coded,
+                // rethrow the original exception.
                 throw ex;
             }
         }
     }
\ No newline at end of file
