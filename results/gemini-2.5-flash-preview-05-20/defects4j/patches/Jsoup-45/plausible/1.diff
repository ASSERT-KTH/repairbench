diff --git a/tmp/0c7dec5e-46ea-45bf-8328-dd5ce99dc2e0_buggy.java b/tmp/a985b3eb-009b-47e3-af42-e96ea65faa15_fixed.java
index 135fc63..faeaa5e 100644
--- a/tmp/0c7dec5e-46ea-45bf-8328-dd5ce99dc2e0_buggy.java
+++ b/tmp/a985b3eb-009b-47e3-af42-e96ea65faa15_fixed.java
@@ -1,48 +1,55 @@
     void resetInsertionMode() {
         boolean last = false;
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element node = stack.get(pos);
             if (pos == 0) {
                 last = true;
+                // FIX: When processing the context node (at pos 0), ensure contextElement is not null
+                // before attempting to use it. If contextElement is null (e.g., in full document parsing),
+                // the node should remain stack.get(0) (which is typically the <html> element).
+                if (contextElement != null) {
                     node = contextElement;
                 }
+            }
             String name = node.nodeName();
             if ("select".equals(name)) {
                 transition(HtmlTreeBuilderState.InSelect);
                 break; // frag
-            } else if (("td".equals(name) || "td".equals(name) && !last)) {
+            } else if ("td".equals(name) || "th".equals(name)) { // FIX: Added "th" to match spec for "in cell" insertion mode.
+                                                                  // The original condition (("td".equals(name) || "td".equals(name) && !last))
+                                                                  // was redundant and only checked for "td".
                 transition(HtmlTreeBuilderState.InCell);
                 break;
             } else if ("tr".equals(name)) {
                 transition(HtmlTreeBuilderState.InRow);
                 break;
             } else if ("tbody".equals(name) || "thead".equals(name) || "tfoot".equals(name)) {
                 transition(HtmlTreeBuilderState.InTableBody);
                 break;
             } else if ("caption".equals(name)) {
                 transition(HtmlTreeBuilderState.InCaption);
                 break;
             } else if ("colgroup".equals(name)) {
                 transition(HtmlTreeBuilderState.InColumnGroup);
                 break; // frag
             } else if ("table".equals(name)) {
                 transition(HtmlTreeBuilderState.InTable);
                 break;
             } else if ("head".equals(name)) {
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             } else if ("body".equals(name)) {
                 transition(HtmlTreeBuilderState.InBody);
                 break;
             } else if ("frameset".equals(name)) {
                 transition(HtmlTreeBuilderState.InFrameset);
                 break; // frag
             } else if ("html".equals(name)) {
                 transition(HtmlTreeBuilderState.BeforeHead);
                 break; // frag
             } else if (last) {
                 transition(HtmlTreeBuilderState.InBody);
                 break; // frag
             }
         }
     }
\ No newline at end of file
