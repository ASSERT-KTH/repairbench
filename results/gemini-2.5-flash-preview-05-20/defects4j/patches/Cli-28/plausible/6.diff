diff --git a/tmp/436fbaea-9571-4a88-b111-ba750757bd40_buggy.java b/tmp/1af4a43d-0796-4e66-9f61-48d7983f426f_fixed.java
index a7549f0..e015c8c 100644
--- a/tmp/436fbaea-9571-4a88-b111-ba750757bd40_buggy.java
+++ b/tmp/1af4a43d-0796-4e66-9f61-48d7983f426f_fixed.java
@@ -1,50 +1,70 @@
     /**
      * Sets the values of Options using the values in <code>properties</code>.
      *
      * @param properties The value properties to be processed.
      */
     protected void processProperties(Properties properties)
     {
         if (properties == null)
         {
             return;
         }
 
         for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)
         {
-            String option = e.nextElement().toString();
+            String optionName = e.nextElement().toString();
 
-            if (!cmd.hasOption(option))
+            // If the option is already present in the CommandLine, skip it.
+            if (cmd.hasOption(optionName))
             {
-                Option opt = getOptions().getOption(option);
+                continue;
+            }
+
+            Option opt = getOptions().getOption(optionName);
+
+            // If the option is not defined in the parser's options, skip it.
+            if (opt == null)
+            {
+                continue;
+            }
 
             // get the value from the properties instance
-                String value = properties.getProperty(option);
+            String value = properties.getProperty(optionName);
 
             if (opt.hasArg())
             {
+                // If the option does not already have values assigned (e.g., from CLI args)
+                // then add the value from properties.
                 if (opt.getValues() == null || opt.getValues().length == 0)
                 {
                     try
                     {
+                        // Add the value to the Option object.
+                        // This prepares the option to be added to the CommandLine with its value.
                         opt.addValueForProcessing(value);
                     }
                     catch (RuntimeException exp)
                     {
                         // if we cannot add the value don't worry about it
+                        // In this case, we shouldn't add the option to the CommandLine
+                        continue;
                     }
                 }
+                // If an argument was successfully processed (or already existed), add the option to cmd.
+                cmd.addOption(opt);
             }
-                else if (!("yes".equalsIgnoreCase(value)
+            else // Option is a flag (does not take an argument)
+            {
+                // For flag options, we only add them to the CommandLine if their value is affirmative.
+                if ("yes".equalsIgnoreCase(value)
                     || "true".equalsIgnoreCase(value)
-                        || "1".equalsIgnoreCase(value)))
+                    || "1".equalsIgnoreCase(value))
                 {
-                    // if the value is not yes, true or 1 then don't add the
-                    // option to the CommandLine
-                    break;
-                }
-
                     cmd.addOption(opt);
                 }
+                // If the value is not affirmative (e.g., "false", "no", "0"),
+                // we do nothing, meaning the flag is not considered present.
+                // In both cases (added or not added), we continue to the next property.
+            }
         }
     }
\ No newline at end of file
