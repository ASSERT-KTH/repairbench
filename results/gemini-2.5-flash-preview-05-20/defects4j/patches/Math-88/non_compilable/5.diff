diff --git a/tmp/92c6444d-e74d-4935-a6c2-6cd2c5e61df8_buggy.java b/tmp/8eae5e96-cd13-410e-9517-fe863feee150_fixed.java
index 544303b..8c0bb62 100644
--- a/tmp/92c6444d-e74d-4935-a6c2-6cd2c5e61df8_buggy.java
+++ b/tmp/8eae5e96-cd13-410e-9517-fe863feee150_fixed.java
@@ -1,29 +1,7 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
-    protected RealPointValuePair getSolution() {
-        double[] coefficients = new double[getOriginalNumDecisionVariables()];
-        Integer basicRow =
-            getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
-        double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
-        for (int i = 0; i < coefficients.length; i++) {
-            basicRow = getBasicRow(getNumObjectiveFunctions() + i);
-                // if multiple variables can take a given value 
-                // then we choose the first and set the rest equal to 0
-                coefficients[i] =
-                    (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
-                    (restrictToNonNegative ? 0 : mostNegative);
             if (basicRow != null) {
                 for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
                     if (tableau.getEntry(basicRow, j) == 1) {
                          coefficients[i] = 0;
                     }
                 }
             }
\ No newline at end of file
-        }
-        return new RealPointValuePair(coefficients, f.getValue(coefficients));
-    }
