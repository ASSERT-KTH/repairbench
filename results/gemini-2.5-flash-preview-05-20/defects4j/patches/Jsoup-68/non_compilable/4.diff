diff --git a/tmp/3516ace5-06fa-40fe-8fc5-d1ab03908d67_buggy.java b/tmp/294d19be-1877-4d0d-9c19-1596ad2e0ee4_fixed.java
index 511560e..a5c4c99 100644
--- a/tmp/3516ace5-06fa-40fe-8fc5-d1ab03908d67_buggy.java
+++ b/tmp/294d19be-1877-4d0d-9c19-1596ad2e0ee4_fixed.java
@@ -1,21 +1,7 @@
-    private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
-        // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
         int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
-
-        for (int pos = bottom; pos >= top; pos--) {
-            final String elName = stack.get(pos).nodeName();
-            if (inSorted(elName, targetNames))
-                return true;
-            if (inSorted(elName, baseTypes))
-                return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
-                return false;
-        }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
-        return false;
+        if (bottom > MaxScopeSearchDepth) { // If stack is deeper than MaxScopeSearchDepth
+            bottom = MaxScopeSearchDepth; // Cap the starting search index at MaxScopeSearchDepth
         }
+        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0; // This condition will always be false after 'bottom' is capped
+        // Therefore, 'top' will always be 0.
+        // Resulting search range: [min(stack.size()-1, MaxScopeSearchDepth), 0]
\ No newline at end of file
