diff --git a/tmp/37c781be-ca2b-4549-a2fc-5cfd9808c835_buggy.java b/tmp/8f2a1013-a23c-4212-8a87-b2b6ee3cf093_fixed.java
index 511560e..82138d9 100644
--- a/tmp/37c781be-ca2b-4549-a2fc-5cfd9808c835_buggy.java
+++ b/tmp/8f2a1013-a23c-4212-8a87-b2b6ee3cf093_fixed.java
@@ -1,21 +1,28 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
-        int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
+
+        // The actual index of the top element on the stack (highest index).
+        final int bottom = stack.size() - 1;
+
+        // Calculate the lowest index to search (the 'top' of the search range).
+        // MaxScopeSearchDepth specifies the maximum number of elements to check from the 'bottom' (current element).
+        // If MaxScopeSearchDepth is 1, we check only the 'bottom' element.
+        // If MaxScopeSearchDepth is N, we check N elements: bottom, bottom-1, ..., bottom-(N-1).
+        // So, the lowest index to check is bottom - (MaxScopeSearchDepth - 1).
+        // This value must not be less than 0.
+        final int top = Math.max(0, bottom - (MaxScopeSearchDepth - 1));
+
         // don't walk too far up the tree
-
+        // The loop correctly iterates from the actual top of the stack down to the calculated 'top' boundary.
         for (int pos = bottom; pos >= top; pos--) {
             final String elName = stack.get(pos).nodeName();
             if (inSorted(elName, targetNames))
                 return true;
             if (inSorted(elName, baseTypes))
                 return false;
             if (extraTypes != null && inSorted(elName, extraTypes))
                 return false;
         }
         //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
         return false;
     }
