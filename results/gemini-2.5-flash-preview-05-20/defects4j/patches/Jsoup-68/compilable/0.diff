diff --git a/tmp/1c14eb55-94a5-4081-b20b-e3c536f67ce1_buggy.java b/tmp/2fb94757-9948-472a-ab21-18cbab4944e0_fixed.java
index 511560e..88986d7 100644
--- a/tmp/1c14eb55-94a5-4081-b20b-e3c536f67ce1_buggy.java
+++ b/tmp/2fb94757-9948-472a-ab21-18cbab4944e0_fixed.java
@@ -1,21 +1,19 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
-        int bottom = stack.size() -1;
-        if (bottom > MaxScopeSearchDepth) {
-            bottom = MaxScopeSearchDepth;
-        }
-        final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
-        // don't walk too far up the tree
+        final int startIndex = stack.size() - 1; // Top of the stack (most recently opened element)
+        // Don't walk too far up the tree: limit search depth from the current position.
+        // The search should go from startIndex down to Math.max(0, startIndex - MaxScopeSearchDepth).
+        final int endIndex = Math.max(0, startIndex - MaxScopeSearchDepth); 
 
-        for (int pos = bottom; pos >= top; pos--) {
+        for (int pos = startIndex; pos >= endIndex; pos--) {
             final String elName = stack.get(pos).nodeName();
             if (inSorted(elName, targetNames))
                 return true;
             if (inSorted(elName, baseTypes))
                 return false;
             if (extraTypes != null && inSorted(elName, extraTypes))
                 return false;
         }
         //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
         return false;
     }
