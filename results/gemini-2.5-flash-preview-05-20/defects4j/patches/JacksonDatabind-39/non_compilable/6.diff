diff --git a/tmp/1e6efdd4-93a0-4a6c-8dc2-630d531684a7_buggy.java b/tmp/f096cbf0-c839-489f-b75d-39e0454d1bf4_fixed.java
index ec709bd..69b8db9 100644
--- a/tmp/1e6efdd4-93a0-4a6c-8dc2-630d531684a7_buggy.java
+++ b/tmp/f096cbf0-c839-489f-b75d-39e0454d1bf4_fixed.java
@@ -1,8 +1,42 @@
     @Override
     public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
     {
         // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit
         //    special unfortunately
-            p.skipChildren();
+
+        // Get current token. If it's a FIELD_NAME, we need to advance to its value
+        // before attempting to skip the value itself.
+        JsonToken t = p.getCurrentToken();
+        if (t == JsonToken.FIELD_NAME) {
+            t = p.nextToken();
+        }
+
+        // If the current token is null (end of stream) or a structure end token,
+        // it means there's nothing more to skip for the current value.
+        if (t == null || t == JsonToken.END_OBJECT || t == JsonToken.END_ARRAY) {
+            return null;
+        }
+
+        // If it's a structured token (object or array), skip all its children.
+        if (t.isStructStart()) { // START_OBJECT or START_ARRAY
+            int nesting = 1;
+            while (p.nextToken() != null) {
+                t = p.currentToken();
+                if (t.isStructStart()) {
+                    nesting++;
+                } else if (t.isStructEnd()) {
+                    nesting--;
+                }
+                // Break if we've found the matching end token for the initial structure
+                if (nesting == 0) {
+                    break;
+                }
+            }
+        } else {
+            // It's a scalar value (STRING, NUMBER, BOOLEAN, NULL).
+            // We've already moved past FIELD_NAME if it was there.
+            // The parser is currently on the scalar token; we need to advance past it.
+            p.nextToken();
+        }
         return null;
     }
\ No newline at end of file
