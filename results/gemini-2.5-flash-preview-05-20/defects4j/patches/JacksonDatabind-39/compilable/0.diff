diff --git a/tmp/f1522bac-dab2-4cfb-a8e8-5f23ff79879f_buggy.java b/tmp/0560fb1a-afec-423d-9e95-844083c3b112_fixed.java
index ec709bd..2e7e6ed 100644
--- a/tmp/f1522bac-dab2-4cfb-a8e8-5f23ff79879f_buggy.java
+++ b/tmp/0560fb1a-afec-423d-9e95-844083c3b112_fixed.java
@@ -1,8 +1,28 @@
     @Override
     public Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
     {
         // 29-Jan-2016, tatu: Simple skipping for all other tokens, but FIELD_NAME bit
         //    special unfortunately
+
+        // If the current token is a FIELD_NAME, we need to advance to its value token.
+        // This is typically handled by the caller of deserialize, but if this method
+        // is called directly from a context where FIELD_NAME is the current token,
+        // it must be handled here.
+        if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
+            p.nextToken();
+        }
+
+        // Now, the parser is at the actual value token (START_OBJECT, START_ARRAY, or scalar).
+        // We need to consume this value entirely.
+        JsonToken currentToken = p.getCurrentToken();
+        if (currentToken == JsonToken.START_OBJECT || currentToken == JsonToken.START_ARRAY) {
+            // For container types (objects or arrays), skipChildren() consumes the entire structure.
             p.skipChildren();
+        } else {
+            // For scalar types (string, number, boolean, null), the current token *is* the value.
+            // We need to advance the parser past this token so the caller doesn't re-read it.
+            // Calling nextToken() here moves the parser to the token *after* the current value.
+            p.nextToken();
+        }
         return null;
     }
\ No newline at end of file
