diff --git a/tmp/8344fbe6-5968-401c-a67b-0fe03cb4e916_buggy.java b/tmp/8bee5953-7f57-4157-8750-5cf907afba1d_fixed.java
index 9033e1c..325441f 100644
--- a/tmp/8344fbe6-5968-401c-a67b-0fe03cb4e916_buggy.java
+++ b/tmp/8bee5953-7f57-4157-8750-5cf907afba1d_fixed.java
@@ -1,11 +1,17 @@
     /**
      * Returns true iff they are equal as defined by
      * {@link #equals(double,double,int) equals(x, y, 1)}.
      *
      * @param x first value
      * @param y second value
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
-        return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
+        // The original implementation returned true for (NaN, NaN).
+        // The failing test `assertFalse(MathUtils.equals(new double[] { Double.NaN }, ...))`
+        // indicates that NaN should not be considered equal to NaN in this context.
+        // The standard '==' operator for doubles already treats Double.NaN == Double.NaN as false.
+        // Relying on '==' directly makes NaN != NaN, while correctly handling other double comparisons
+        // (e.g., 0.0 == -0.0 is true, infinity == infinity is true).
+        return x == y;
     }
\ No newline at end of file
