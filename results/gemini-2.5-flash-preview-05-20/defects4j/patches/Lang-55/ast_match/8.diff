diff --git a/tmp/2d94ab2e-8c72-4b76-88d6-a664c1d8ce38_buggy.java b/tmp/041a5bf8-9c5c-446c-ac00-fbe4dee133e4_fixed.java
index cce9d1e..f29c234 100644
--- a/tmp/2d94ab2e-8c72-4b76-88d6-a664c1d8ce38_buggy.java
+++ b/tmp/041a5bf8-9c5c-446c-ac00-fbe4dee133e4_fixed.java
@@ -1,14 +1,22 @@
     /**
      * <p>Stop the stopwatch.</p>
      * 
      * <p>This method ends a new timing session, allowing the time to be retrieved.</p>
      *
      * @throws IllegalStateException if the StopWatch is not running.
      */
     public void stop() {
         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {
             throw new IllegalStateException("Stopwatch is not running. ");
         }
+        // The original code unconditionally set stopTime to System.currentTimeMillis().
+        // If the stopwatch was suspended, setting stopTime to the current time
+        // would incorrectly include the time spent while suspended when getTime() is called.
+        // The testLang315 expects that time accumulated while suspended is *not* counted.
+        // Therefore, stopTime should only be updated if the stopwatch was actively running.
+        // If it was suspended, the accumulated time should retain its value from the point of suspension.
+        if (this.runningState == STATE_RUNNING) {
             stopTime = System.currentTimeMillis();
+        }
         this.runningState = STATE_STOPPED;
     }
\ No newline at end of file
