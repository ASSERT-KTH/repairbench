diff --git a/tmp/a01e8dde-34ee-4ea1-961a-287982c8c0a6_buggy.java b/tmp/6e72d5ba-d408-42ab-bd70-93a4de0f320a_fixed.java
index cce9d1e..47b4f4a 100644
--- a/tmp/a01e8dde-34ee-4ea1-961a-287982c8c0a6_buggy.java
+++ b/tmp/6e72d5ba-d408-42ab-bd70-93a4de0f320a_fixed.java
@@ -1,14 +1,23 @@
     /**
      * <p>Stop the stopwatch.</p>
      * 
      * <p>This method ends a new timing session, allowing the time to be retrieved.</p>
      *
      * @throws IllegalStateException if the StopWatch is not running.
      */
     public void stop() {
         if(this.runningState != STATE_RUNNING && this.runningState != STATE_SUSPENDED) {
             throw new IllegalStateException("Stopwatch is not running. ");
         }
+        // When stopping a running stopwatch, update stopTime to current time.
+        // However, if the stopwatch is suspended, its 'stopTime' should conceptually
+        // remain the time it was suspended, as any time passed while suspended
+        // should not contribute to the total elapsed time.
+        // The test testLang315 implies that getTime() should return the same value
+        // after suspend() and after stop() if no resume() occurred.
+        // This means stopTime should only be updated if the stopwatch was actively running.
+        if (this.runningState == STATE_RUNNING) {
             stopTime = System.currentTimeMillis();
+        }
         this.runningState = STATE_STOPPED;
     }
\ No newline at end of file
