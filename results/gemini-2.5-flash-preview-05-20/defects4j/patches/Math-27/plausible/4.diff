diff --git a/tmp/2f2fe531-feb9-4863-8b16-9755887602cb_buggy.java b/tmp/a5c581a8-23f5-4134-9faa-138909c76647_fixed.java
index 490e9f7..9cbfa7f 100644
--- a/tmp/2f2fe531-feb9-4863-8b16-9755887602cb_buggy.java
+++ b/tmp/a5c581a8-23f5-4134-9faa-138909c76647_fixed.java
@@ -1,11 +1,19 @@
     /**
      * <p>
      * Gets the fraction percentage as a <tt>double</tt>. This calculates the
      * fraction as the numerator divided by denominator multiplied by 100.
      * </p>
      *
      * @return the fraction percentage as a <tt>double</tt>.
      */
     public double percentageValue() {
-        return multiply(100).doubleValue();
+        // The original implementation calculated `multiply(100)` which creates a new
+        // Fraction object. If the numerator multiplied by 100 exceeds Integer.MAX_VALUE,
+        // it would cause an integer overflow before converting to a double, leading
+        // to an incorrect (often negative) result.
+        //
+        // To fix this, we should convert the fraction to a double first using doubleValue(),
+        // and then multiply by 100. This ensures all intermediate calculations are
+        // performed using floating-point precision, preventing integer overflow.
+        return doubleValue() * 100.0;
     }
\ No newline at end of file
