diff --git a/tmp/a82c622a-4079-4cfc-8c19-977b94929a84_buggy.java b/tmp/35b40404-cef3-4d55-bd6b-3531ebe08ef4_fixed.java
index 1c53d31..810c172 100644
--- a/tmp/a82c622a-4079-4cfc-8c19-977b94929a84_buggy.java
+++ b/tmp/35b40404-cef3-4d55-bd6b-3531ebe08ef4_fixed.java
@@ -1,20 +1,31 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      Class<TypeAdapterFactory> typeAdapterFactoryClass = (Class<TypeAdapterFactory>) value;
+      TypeAdapterFactory factory = constructorConstructor.get(TypeToken.get(typeAdapterFactoryClass))
+          .construct();
+      typeAdapter = factory.create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+    // TypeAdapter.nullSafe() can only be called on a non-null TypeAdapter instance.
+    // If `typeAdapter` is null at this point (e.g., if the TypeAdapterFactory.create method
+    // returned null, or if the constructorConstructor failed to instantiate the adapter/factory),
+    // calling `nullSafe()` would result in a NullPointerException.
+    // The explicit @JsonAdapter annotation implies that an adapter should be found.
+    // However, to prevent the NPE, we must check for null. If typeAdapter is null,
+    // it signifies that the specified TypeAdapter or TypeAdapterFactory could not
+    // produce a TypeAdapter for the given fieldType. In such cases, Gson's calling context
+    // typically handles `null` by falling back to other adapter discovery mechanisms.
+    if (typeAdapter != null) {
       typeAdapter = typeAdapter.nullSafe();
+    }
     return typeAdapter;
   }
\ No newline at end of file
