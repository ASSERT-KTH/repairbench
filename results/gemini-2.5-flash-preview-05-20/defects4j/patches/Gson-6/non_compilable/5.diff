diff --git a/tmp/7de86868-985e-4252-b10e-88cac5f852d7_buggy.java b/tmp/bc83b3cf-2613-41d4-9f0a-85a1e6351bc1_fixed.java
index 1c53d31..04ee72e 100644
--- a/tmp/7de86868-985e-4252-b10e-88cac5f852d7_buggy.java
+++ b/tmp/bc83b3cf-2613-41d4-9f0a-85a1e6351bc1_fixed.java
@@ -1,20 +1,24 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
           .construct()
           .create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+    // Only apply nullSafe() if the annotation specifies it (default is true).
+    // If nullSafe=false, the user's adapter is responsible for null handling.
+    if (annotation.nullSafe()) {
       typeAdapter = typeAdapter.nullSafe();
+    }
     return typeAdapter;
   }
\ No newline at end of file
