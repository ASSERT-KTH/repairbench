diff --git a/tmp/6807216e-638d-4cb4-ab02-e47875d83558_buggy.java b/tmp/6fa84d03-93c2-461f-91a6-45941c6a9930_fixed.java
index 1c53d31..ed229fe 100644
--- a/tmp/6807216e-638d-4cb4-ab02-e47875d83558_buggy.java
+++ b/tmp/6fa84d03-93c2-461f-91a6-45941c6a9930_fixed.java
@@ -1,20 +1,36 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
           .construct()
           .create(gson, fieldType);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
+
+    // The NullPointerException likely occurs here if 'typeAdapter' is null,
+    // which can happen if 'constructorConstructor.get(...).construct()' or
+    // 'TypeAdapterFactory.create()' returns null.
+    // While TypeAdapterFactory.create() can legitimately return null to indicate
+    // it doesn't handle a type, for an adapter specified via @JsonAdapter,
+    // it is expected to provide a concrete TypeAdapter.
+    // If it returns null, it indicates a misconfiguration or an issue with the
+    // provided TypeAdapter/TypeAdapterFactory.
+    if (typeAdapter == null) {
+      throw new IllegalStateException(
+          "TypeAdapter or TypeAdapterFactory specified by @JsonAdapter "
+          + "for " + fieldType + " returned null. "
+          + "This is not supported; you must return a non-null TypeAdapter.");
+    }
+
     typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
   }
\ No newline at end of file
