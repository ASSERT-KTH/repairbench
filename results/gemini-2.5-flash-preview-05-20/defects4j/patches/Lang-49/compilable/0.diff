diff --git a/tmp/e1237f0b-1f21-4b00-ac4d-acb170969c75_buggy.java b/tmp/56b2cba6-8c09-4912-ae91-416ba7eff4d6_fixed.java
index 08e51e4..1bc3176 100644
--- a/tmp/e1237f0b-1f21-4b00-ac4d-acb170969c75_buggy.java
+++ b/tmp/56b2cba6-8c09-4912-ae91-416ba7eff4d6_fixed.java
@@ -1,16 +1,25 @@
     /**
      * <p>Reduce the fraction to the smallest values for the numerator and
      * denominator, returning the result.</p>
      * 
      * <p>For example, if this fraction represents 2/4, then the result
      * will be 1/2.</p>
      *
      * @return a new reduced fraction instance, or this if no simplification possible
      */
     public Fraction reduce() {
+        if (numerator == 0) {
+            // 0/X always reduces to 0/1. Check if already 0/1 to return 'this'.
+            if (denominator == 1) {
+                return this;
+            }
+            return Fraction.getFraction(0, 1);
+        }
+        
+        // Assume denominator is always positive due to Fraction.getFraction normalization
         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
         if (gcd == 1) {
             return this;
         }
         return Fraction.getFraction(numerator / gcd, denominator / gcd);
     }
\ No newline at end of file
