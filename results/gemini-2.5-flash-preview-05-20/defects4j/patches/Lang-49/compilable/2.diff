diff --git a/tmp/ba51b37b-ff37-43ca-9281-e9cf8871d911_buggy.java b/tmp/cbde25a8-0848-4b87-8547-8414de6977ae_fixed.java
index 08e51e4..e1e7a30 100644
--- a/tmp/ba51b37b-ff37-43ca-9281-e9cf8871d911_buggy.java
+++ b/tmp/cbde25a8-0848-4b87-8547-8414de6977ae_fixed.java
@@ -1,16 +1,26 @@
     /**
      * <p>Reduce the fraction to the smallest values for the numerator and
      * denominator, returning the result.</p>
      *
      * <p>For example, if this fraction represents 2/4, then the result
      * will be 1/2.</p>
      *
      * @return a new reduced fraction instance, or this if no simplification possible
      */
     public Fraction reduce() {
+        // Handle zero numerator case: 0/X always reduces to 0/1.
+        // The denominator is guaranteed to be positive by Fraction.getFraction.
+        if (numerator == 0) {
+            if (denominator == 1) {
+                return this; // Already 0/1
+            }
+            return Fraction.getFraction(0, 1);
+        }
+
+        // Original logic for non-zero numerators
         int gcd = greatestCommonDivisor(Math.abs(numerator), denominator);
         if (gcd == 1) {
             return this;
         }
         return Fraction.getFraction(numerator / gcd, denominator / gcd);
     }
\ No newline at end of file
