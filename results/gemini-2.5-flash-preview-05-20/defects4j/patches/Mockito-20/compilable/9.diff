diff --git a/tmp/c1e8961b-2259-4727-9916-183e49dedd84_buggy.java b/tmp/b9bb2a08-f862-456b-a3fa-c0a197c6fb47_fixed.java
index f9a9b5b..d37cabb 100644
--- a/tmp/c1e8961b-2259-4727-9916-183e49dedd84_buggy.java
+++ b/tmp/b9bb2a08-f862-456b-a3fa-c0a197c6fb47_fixed.java
@@ -1,30 +1,40 @@
     public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
             throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
         }
         Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
                 settings.getTypeToMock(),
                 settings.getExtraInterfaces()
         );
         T mockInstance = null;
         try {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
             return ensureMockIsAssignableToMockedType(settings, mockInstance);
         } catch (ClassCastException cce) {
+            // Improve error message for ClassCastException for better diagnostics.
+            // Describe the requested type and the generated proxy type more clearly.
             throw new MockitoException(join(
                     "ClassCastException occurred while creating the mockito mock :",
-                    "  class to mock : " + describeClass(mockedProxyType),
-                    "  created class : " + describeClass(settings.getTypeToMock()),
+                    "  class to mock (requested) : " + describeClass(settings.getTypeToMock()),
+                    "  generated proxy type      : " + describeClass(mockedProxyType),
                     "  proxy instance class      : " + describeClass(mockInstance),
                     "  instance creation by      : " + classInstantiator.getClass().getSimpleName(),
                     "",
                     "You might experience classloading issues, please ask the mockito mailing-list.",
                     ""
             ),cce);
         } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+            // Improve error message for InstantiationException to include more details
+            // from the underlying cause (e.g., constructor message like "hey!" or "0-arg constructor not found").
+            // Also, use the original typeToMock for clarity in the message.
+            String message = "Unable to create mock instance of type '" + settings.getTypeToMock().getSimpleName() + "'";
+            if (e.getMessage() != null && !e.getMessage().isEmpty()) {
+                // Append the InstantiationException's message, which often contains specific constructor details.
+                message += ". " + e.getMessage();
+            }
+            throw new MockitoException(message, e);
         }
     }
\ No newline at end of file
