diff --git a/tmp/b4bc9809-57dc-4246-8f5d-db47b248ed4c_buggy.java b/tmp/d286d063-5e02-437b-8af4-80488f64619f_fixed.java
index 6ea5795..99fd689 100644
--- a/tmp/b4bc9809-57dc-4246-8f5d-db47b248ed4c_buggy.java
+++ b/tmp/d286d063-5e02-437b-8af4-80488f64619f_fixed.java
@@ -1,37 +1,41 @@
     /**
      * Appends the usage clause for an Option to a StringBuffer.  
      *
      * @param buff the StringBuffer to append to
      * @param option the Option to append
      * @param required whether the Option is required or not
      */
     private static void appendOption(final StringBuffer buff, 
                                      final Option option, 
                                      final boolean required)
     {
         if (!required)
         {
             buff.append("[");
         }
 
         if (option.getOpt() != null)
         {
             buff.append("-").append(option.getOpt());
         }
         else
         {
             buff.append("--").append(option.getLongOpt());
         }
 
         // if the Option has a value
-        if (option.hasArg() && (option.getArgName() != null))
+        // The original condition `option.getArgName() != null` was not sufficient
+        // because `option.getArgName()` could return an empty string, leading
+        // to an unwanted "<>" in the usage string.
+        // We use StringUtils.isEmpty() to correctly handle both null and empty strings.
+        if (option.hasArg() && !org.apache.commons.lang.StringUtils.isEmpty(option.getArgName()))
         {
             buff.append(" <").append(option.getArgName()).append(">");
         }
 
         // if the Option is not a required option
         if (!required)
         {
             buff.append("]");
         }
     }
\ No newline at end of file
