diff --git a/tmp/1f59beca-56f1-4826-937a-96b065493f0b_buggy.java b/tmp/8e89a0c4-4470-45bf-b234-e0be018a7f60_fixed.java
index 40f74f7..f1a5302 100644
--- a/tmp/1f59beca-56f1-4826-937a-96b065493f0b_buggy.java
+++ b/tmp/8e89a0c4-4470-45bf-b234-e0be018a7f60_fixed.java
@@ -1,50 +1,71 @@
     public static boolean testNode(Node node, NodeTest test) {
         if (test == null) {
             return true;
         }
         if (test instanceof NodeNameTest) {
             if (node.getNodeType() != Node.ELEMENT_NODE) {
                 return false;
             }
 
             NodeNameTest nodeNameTest = (NodeNameTest) test;
             QName testName = nodeNameTest.getNodeName();
             String namespaceURI = nodeNameTest.getNamespaceURI();
-            boolean wildcard = nodeNameTest.isWildcard();
-            String testPrefix = testName.getPrefix();
+            boolean wildcard = nodeNameTest.isWildcard(); // true if testName.getLocalName() is "*"
+            String testPrefix = testName.getPrefix(); // Prefix from XPath
+
+            // Case 1: XPath is '*'
+            // nodeNameTest.getNodeName() is QName(null, "*")
+            // wildcard is true, testPrefix is null
             if (wildcard && testPrefix == null) {
                 return true;
             }
-            if (wildcard
-                || testName.getName()
-                        .equals(DOMNodePointer.getLocalName(node))) {
+
+            // Case 2: XPath is 'prefix:*'
+            // nodeNameTest.getNodeName() is QName("prefix", "*")
+            // wildcard is true, testPrefix is "prefix"
+            if (wildcard) {
+                String nodeNS = DOMNodePointer.getNamespaceURI(node);
+                return equalStrings(namespaceURI, nodeNS);
+            }
+
+            // Case 3: XPath is '*:localName'
+            // nodeNameTest.getNodeName() is QName("*", "localName")
+            // wildcard is false, testPrefix is "*"
+            if ("*".equals(testPrefix)) {
+                return testName.getName().equals(DOMNodePointer.getLocalName(node));
+            }
+
+            // Case 4: XPath is 'prefix:localName' or 'localName' (no prefix)
+            // nodeNameTest.getNodeName() is QName("prefix", "localName") or QName(null, "localName")
+            // wildcard is false, testPrefix is "prefix" or null
+            if (testName.getName().equals(DOMNodePointer.getLocalName(node))) {
                 String nodeNS = DOMNodePointer.getNamespaceURI(node);
                 return equalStrings(namespaceURI, nodeNS);
             }
             return false;
         }
         if (test instanceof NodeTypeTest) {
             int nodeType = node.getNodeType();
             switch (((NodeTypeTest) test).getNodeType()) {
                 case Compiler.NODE_TYPE_NODE :
                     return nodeType == Node.ELEMENT_NODE
                             || nodeType == Node.DOCUMENT_NODE;
                 case Compiler.NODE_TYPE_TEXT :
                     return nodeType == Node.CDATA_SECTION_NODE
                         || nodeType == Node.TEXT_NODE;
                 case Compiler.NODE_TYPE_COMMENT :
                     return nodeType == Node.COMMENT_NODE;
                 case Compiler.NODE_TYPE_PI :
                     return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
             }
             return false;
         }
         if (test instanceof ProcessingInstructionTest) {
             if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
                 String testPI = ((ProcessingInstructionTest) test).getTarget();
                 String nodePI = ((ProcessingInstruction) node).getTarget();
                 return testPI.equals(nodePI);
             }
         }
         return false;
     }
