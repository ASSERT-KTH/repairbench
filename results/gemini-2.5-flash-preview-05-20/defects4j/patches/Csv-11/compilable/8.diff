diff --git a/tmp/5d4fd447-dba9-4289-af2d-ce88edd07901_buggy.java b/tmp/b335e1f2-7c69-4e5f-b7e9-80cf073cdb8d_fixed.java
index 784bbab..3c3eb54 100644
--- a/tmp/5d4fd447-dba9-4289-af2d-ce88edd07901_buggy.java
+++ b/tmp/b335e1f2-7c69-4e5f-b7e9-80cf073cdb8d_fixed.java
@@ -1,42 +1,66 @@
     /**
      * Initializes the name to index mapping if the format defines a header.
      *
      * @return null if the format has no header.
      * @throws IOException if there is a problem reading the header or skipping the first record
      */
     private Map<String, Integer> initializeHeader() throws IOException {
         Map<String, Integer> hdrMap = null;
-        final String[] formatHeader = this.format.getHeader();
-        if (formatHeader != null) {
-            hdrMap = new LinkedHashMap<String, Integer>();
-
         String[] headerRecord = null;
-            if (formatHeader.length == 0) {
-                // read the header from the first line of the file
+
+        final String[] formatHeader = this.format.getHeader();
+
+        // Determine the source of the header record:
+        // 1. If formatHeader is null (e.g., CSVFormat.withHeader() was called without arguments),
+        //    the header should be read from the first line of the file.
+        // 2. If formatHeader is an empty array (e.g., CSVFormat.withHeader(new String[0]) was called),
+        //    the header should also be read from the first line of the file.
+        // 3. Otherwise (formatHeader is a non-empty array), the header is predefined in the format.
+
+        if (formatHeader == null || formatHeader.length == 0) {
+            // Cases 1 & 2: Read header from the first record in the file
             final CSVRecord nextRecord = this.nextRecord();
             if (nextRecord != null) {
                 headerRecord = nextRecord.values();
+            } else {
+                // No record found (e.g., empty file), so no header.
+                // As per Javadoc, return null if the format has no header.
+                return null;
             }
         } else {
+            // Case 3: Header is predefined in the format.
             if (this.format.getSkipHeaderRecord()) {
+                // If a header is defined in the format AND we are supposed to skip the first record,
+                // it means the first record in the file is ignored.
+                // (Note: CSVFormat.withHeader(String...) usually sets skipHeaderRecord to false,
+                // so this branch is typically taken only if skipHeaderRecord was explicitly set true).
                 this.nextRecord();
             }
             headerRecord = formatHeader;
         }
 
-            // build the name to index mappings
-            if (headerRecord != null) {
+        // At this point, headerRecord should be populated if a header was found or defined.
+        // If headerRecord is null, it means no records were found when expected (handled above by returning null).
+        // If we reach here, headerRecord is expected to be non-null.
+
+        // Build the name to index mappings
+        if (headerRecord != null) { // This check is mostly for robustness, should be true if we didn't return null above
+            hdrMap = new LinkedHashMap<String, Integer>();
             for (int i = 0; i < headerRecord.length; i++) {
                 final String header = headerRecord[i];
                 final boolean containsHeader = hdrMap.containsKey(header);
                 final boolean emptyHeader = header.trim().isEmpty();
+
+                // Check for duplicate headers. If ignoreEmptyHeaders is true, allow duplicate empty headers.
+                // This condition correctly prevents throwing IllegalArgumentException for duplicate empty headers
+                // when ignoreEmptyHeaders is true.
                 if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
                     throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                             "\" in " + Arrays.toString(headerRecord));
                 }
                 hdrMap.put(header, Integer.valueOf(i));
             }
         }
-        }
+        // If headerRecord was null (which should have been handled by returning null earlier), hdrMap would remain null.
         return hdrMap;
     }
\ No newline at end of file
