diff --git a/tmp/cd2fe469-d5fe-413c-90ee-69da0bb4909b_buggy.java b/tmp/f6f293dd-ec0c-410c-bb8d-3add0bee9337_fixed.java
index 784bbab..be9698b 100644
--- a/tmp/cd2fe469-d5fe-413c-90ee-69da0bb4909b_buggy.java
+++ b/tmp/f6f293dd-ec0c-410c-bb8d-3add0bee9337_fixed.java
@@ -1,42 +1,60 @@
     /**
      * Initializes the name to index mapping if the format defines a header.
      *
      * @return null if the format has no header.
      * @throws IOException if there is a problem reading the header or skipping the first record
      */
     private Map<String, Integer> initializeHeader() throws IOException {
         Map<String, Integer> hdrMap = null;
         final String[] formatHeader = this.format.getHeader();
         if (formatHeader != null) {
             hdrMap = new LinkedHashMap<String, Integer>();
 
             String[] headerRecord = null;
             if (formatHeader.length == 0) {
                 // read the header from the first line of the file
                 final CSVRecord nextRecord = this.nextRecord();
                 if (nextRecord != null) {
                     headerRecord = nextRecord.values();
                 }
             } else {
                 if (this.format.getSkipHeaderRecord()) {
                     this.nextRecord();
                 }
                 headerRecord = formatHeader;
             }
 
             // build the name to index mappings
             if (headerRecord != null) {
                 for (int i = 0; i < headerRecord.length; i++) {
                     final String header = headerRecord[i];
-                    final boolean containsHeader = hdrMap.containsKey(header);
+
+                    // Per CSVFormat.withHeader(String...), headers are not validated for null by the format.
+                    // A null header name would cause NullPointerException when calling methods like trim() or isEmpty().
+                    // It's an invalid state, so throw IllegalArgumentException.
+                    if (header == null) {
+                        throw new IllegalArgumentException("Header contains a null name at index " + i +
+                                " in " + Arrays.toString(headerRecord));
+                    }
+
                     final boolean emptyHeader = header.trim().isEmpty();
-                    if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
+
+                    // If empty headers are configured to be ignored, and this is an empty header,
+                    // then we skip processing it entirely. It will not be added to the header map,
+                    // and it won't trigger duplicate checks.
+                    if (emptyHeader && this.format.getIgnoreEmptyHeaders()) {
+                        continue;
+                    }
+
+                    // For non-empty headers, or for empty headers that are NOT ignored,
+                    // check if the header name already exists in the map (i.e., it's a duplicate).
+                    if (hdrMap.containsKey(header)) {
                         throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                                 "\" in " + Arrays.toString(headerRecord));
                     }
                     hdrMap.put(header, Integer.valueOf(i));
                 }
             }
         }
         return hdrMap;
     }
\ No newline at end of file
