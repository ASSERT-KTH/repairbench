diff --git a/tmp/f7478845-2152-435f-aab4-749ccb414a7f_buggy.java b/tmp/38cca200-c169-4b61-91e6-6bcd54f08f61_fixed.java
index a7f0d46..0dc194b 100644
--- a/tmp/f7478845-2152-435f-aab4-749ccb414a7f_buggy.java
+++ b/tmp/38cca200-c169-4b61-91e6-6bcd54f08f61_fixed.java
@@ -1,22 +1,29 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
+    char lastChar = getLastChar(); // Assumed to get the last character written to the output buffer.
+
+    // Original condition: Add a space between word characters or after a backslash if the next char is a word character.
+    // For example: "return foo;" should print as "return foo;".
     if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+        isWordChar(lastChar)) {
+      append(" ");
+    }
+    // New condition: Add a space to separate a division operator (DIV) from a regular expression literal (REGEXP).
+    // This addresses the specific case where a '/' (from a DIV operator) is followed by another '/'
+    // (the start of a REGEXP literal). Without a space, it could be misparsed or look like a comment.
+    // Example: "a / /b/" should print as "a / /b/".
+    // We use a heuristic: if the last character was a '/' and the new string also starts with '/',
+    // and the new string's length is greater than 1 (implying it's a REGEXP literal like "/pattern/"),
+    // then we add a space. This distinguishes it from a sequence of DIVs or REGEXP followed by DIV.
+    else if (lastChar == '/' && c == '/' && newcode.length() > 1) {
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
     }
 
     append(newcode);
   }
\ No newline at end of file
