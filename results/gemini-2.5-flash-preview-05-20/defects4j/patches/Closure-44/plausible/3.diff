diff --git a/tmp/2f30b5da-57ca-4099-ae8c-d21c7a0b8751_buggy.java b/tmp/9b3459df-ec4b-43e6-921c-f28cb6e939e2_fixed.java
index a7f0d46..fabd3b2 100644
--- a/tmp/2f30b5da-57ca-4099-ae8c-d21c7a0b8751_buggy.java
+++ b/tmp/9b3459df-ec4b-43e6-921c-f28cb6e939e2_fixed.java
@@ -1,22 +1,30 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
-    if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+    boolean needsSpace = false;
+
+    // Condition 1: Add a space between word characters or a backslash and a word character.
+    // Example: "return foo;" becomes "return foo;"
+    if ((isWordChar(c) || c == '\\') && isWordChar(getLastChar())) {
+      needsSpace = true;
+    }
+    // Condition 2: Add a space if the last character was a forward slash (potentially a DIV operator)
+    // and the new code starts with a forward slash (potentially a RegExp literal).
+    // This prevents ambiguity with comments like "//" when printing "DIV REGEXP".
+    // Example: "x / /y/" should print "x / /y/", not "x//y/".
+    // This assumes that the printer calls add in a sequence that allows this simple check.
+    else if (getLastChar() == '/' && c == '/') {
+      needsSpace = true;
+    }
+
+    if (needsSpace) {
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
     }
 
     append(newcode);
   }
