diff --git a/tmp/4734ee01-5f86-4445-af1c-a9f04b06fdca_buggy.java b/tmp/570ba9b8-8994-44ee-9c58-08b077832242_fixed.java
index a7f0d46..f8c1535 100644
--- a/tmp/4734ee01-5f86-4445-af1c-a9f04b06fdca_buggy.java
+++ b/tmp/570ba9b8-8994-44ee-9c58-08b077832242_fixed.java
@@ -1,22 +1,31 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
-    if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+    char lastChar = getLastChar();
+
+    // The current CodePrinter rules sometimes fail to add a space between a
+    // division operator (/) and a subsequent regular expression literal (which
+    // also starts with /). This is problematic for sequences like 'a / / b'
+    // where the middle '/' is a DIV and the third '/' starts a REGEXP.
+    // The test case `alert(/ / / / /);` demonstrates this, where the output
+    // `alert(/ //[]/ /)` is missing a space between the second and third slashes.
+    // The expected output `alert(/ // / /)` shows spaces in such contexts.
+    // This condition addresses specifically when both the last character printed
+    // and the first character of the new code segment are forward slashes.
+    // This applies to both "DIV REGEXP" and "REGEXP DIV" sequences of single '/' tokens
+    // which need separation in the context of the given test case.
+    if (lastChar == '/' && c == '/') {
+      append(" ");
+    } else if ((isWordChar(c) || c == '\\') &&
+        isWordChar(lastChar)) {
+      // original condition for separating word characters or backslashes
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
     }
 
     append(newcode);
   }
\ No newline at end of file
