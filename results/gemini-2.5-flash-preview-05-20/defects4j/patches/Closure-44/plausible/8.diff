diff --git a/tmp/9126c75a-2d6b-4a75-bc01-0960bf73edfd_buggy.java b/tmp/dcc1556d-e054-4231-82d8-7444f5f5862f_fixed.java
index a7f0d46..239aee6 100644
--- a/tmp/9126c75a-2d6b-4a75-bc01-0960bf73edfd_buggy.java
+++ b/tmp/dcc1556d-e054-4231-82d8-7444f5f5862f_fixed.java
@@ -1,22 +1,29 @@
   void add(String newcode) {
     maybeEndStatement();
 
     if (newcode.length() == 0) {
       return;
     }
 
     char c = newcode.charAt(0);
-    if ((isWordChar(c) || c == '\\') &&
-        isWordChar(getLastChar())) {
-      // need space to separate. This is not pretty printing.
-      // For example: "return foo;"
+    char lastChar = getLastChar();
+
+    // Original condition: Add a space if the new code starts with a word character or backslash,
+    // and the last character printed was a word character. This separates words.
+    if ((isWordChar(c) || c == '\\') && isWordChar(lastChar)) {
+      append(" ");
+    }
+    // New condition: Add a space if the last character printed was a forward slash (likely a DIV operator),
+    // and the new code also starts with a forward slash (likely a REGEXP literal).
+    // This prevents "DIVREGEXP" from being parsed as a comment or concatenated unexpectedly,
+    // as described in the original comment: "Do not allow a forward slash to appear after a DIV."
+    // For example, "REGEXP / REGEXP" is valid and should print as "/ // / /", where a space
+    // separates the division operator from the subsequent regular expression literal.
+    // The failing test case `alert(/ / / / /);` expecting `alert(/ // / /)`
+    // demonstrates the need for a space when `lastChar` is '/' (from a DIV) and `c` is '/' (starting a REGEXP).
+    else if (c == '/' && lastChar == '/') {
       append(" ");
-      // Do not allow a forward slash to appear after a DIV.
-      // For example,
-      // REGEXP DIV REGEXP
-      // is valid and should print like
-      // / // / /
     }
 
     append(newcode);
   }
\ No newline at end of file
