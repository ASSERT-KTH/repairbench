diff --git a/tmp/032c6bb1-8af1-4bf3-b5a3-09c061df215c_buggy.java b/tmp/074f6d6b-47ae-4d78-908a-a73852bfbf05_fixed.java
index 516fad7..bfa3177 100644
--- a/tmp/032c6bb1-8af1-4bf3-b5a3-09c061df215c_buggy.java
+++ b/tmp/074f6d6b-47ae-4d78-908a-a73852bfbf05_fixed.java
@@ -1,8 +1,20 @@
     /**
      * If the property contains a collection, then the length of that
      * collection, otherwise - 1.
      * @return int length
      */
     public int getLength() {
-        return ValueUtils.getLength(getBaseValue());
+        Object baseValue = getBaseValue();
+        if (baseValue == null) {
+            // According to the failing test cases (e.g., testNull, testMapValueEquality),
+            // when a property evaluates to null, it should still be treatable as a
+            // single node that can be indexed at [1]. This is consistent with JXPath's
+            // treatment of other non-collection atomic values (like String, Integer)
+            // which also have a length of 1 for indexing purposes.
+            // If ValueUtils.getLength(null) (which returns 0) were used directly,
+            // expressions like "$testnull/nothing[1]" would result in an empty iterator
+            // instead of an iterator containing null.
+            return 1;
+        }
+        return ValueUtils.getLength(baseValue);
     }
\ No newline at end of file
