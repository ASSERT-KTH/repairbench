diff --git a/tmp/a4e837a7-05e4-4329-a175-b4691d1b4628_buggy.java b/tmp/d0cdab75-ed69-402c-b6cc-82d36ca0a547_fixed.java
index 516fad7..f88b642 100644
--- a/tmp/a4e837a7-05e4-4329-a175-b4691d1b4628_buggy.java
+++ b/tmp/d0cdab75-ed69-402c-b6cc-82d36ca0a547_fixed.java
@@ -1,8 +1,29 @@
     /**
      * If the property contains a collection, then the length of that
      * collection, otherwise - 1.
      * @return int length
      */
     public int getLength() {
-        return ValueUtils.getLength(getBaseValue());
+        Object baseValue = getBaseValue();
+        // According to the Javadoc: "If the property contains a collection, then the length of that
+        // collection, otherwise - 1."
+
+        // The ValueUtils.getLength(Object) method in JXPath returns:
+        // - 0 for null
+        // - size() for Collection
+        // - Array.getLength() for arrays
+        // - 1 for any other single object (e.g., String, Number, custom object)
+
+        // This `getLength()` method's contract specifically requires -1 for non-collection types.
+        // Therefore, we need to check if the baseValue is a collection or array
+        // and only then use ValueUtils.getLength. Otherwise, return -1.
+        if (ValueUtils.isCollection(baseValue) || ValueUtils.isArray(baseValue)) {
+            // If baseValue is a Collection or an array, return its actual length.
+            // ValueUtils.getLength will correctly handle these types.
+            return ValueUtils.getLength(baseValue);
+        } else {
+            // If baseValue is null or any other single non-collection object,
+            // according to the Javadoc, the length should be -1.
+            return -1;
+        }
     }
\ No newline at end of file
