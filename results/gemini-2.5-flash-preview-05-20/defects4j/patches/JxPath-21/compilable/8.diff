diff --git a/tmp/9bb9638a-e189-40ef-9d11-624c782ecd7e_buggy.java b/tmp/5b356edd-8c42-46bf-8c47-1aa0f0374d36_fixed.java
index 516fad7..2de5766 100644
--- a/tmp/9bb9638a-e189-40ef-9d11-624c782ecd7e_buggy.java
+++ b/tmp/5b356edd-8c42-46bf-8c47-1aa0f0374d36_fixed.java
@@ -1,8 +1,30 @@
     /**
      * If the property contains a collection, then the length of that
      * collection, otherwise - 1.
      * @return int length
      */
     public int getLength() {
-        return ValueUtils.getLength(getBaseValue());
+        Object value = getBaseValue();
+
+        if (value == null) {
+            // As per Javadoc: "otherwise - 1" when the property does not contain a collection.
+            // A null value certainly does not contain a collection.
+            return -1;
+        }
+
+        // Check if the value is a known collection type (Collection, Array, Iterator, Enumeration, Map).
+        // ValueUtils.getLength handles these types correctly by returning their actual size/count.
+        if (value instanceof java.util.Collection
+            || value.getClass().isArray()
+            || value instanceof java.util.Iterator
+            || value instanceof java.util.Enumeration
+            || value instanceof java.util.Map)
+        {
+            // It's a collection type; return its actual length.
+            return ValueUtils.getLength(value);
+        } else {
+            // It's a single value (non-collection object).
+            // As per Javadoc: "otherwise - 1".
+            return -1;
+        }
     }
\ No newline at end of file
