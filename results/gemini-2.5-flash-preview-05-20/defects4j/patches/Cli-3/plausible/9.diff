diff --git a/tmp/be8db2e5-fa7c-4fc0-b641-99c2d96515c6_buggy.java b/tmp/3b388b6b-faed-478a-88eb-fa2dded6a074_fixed.java
index d9b400d..3c35b53 100644
--- a/tmp/be8db2e5-fa7c-4fc0-b641-99c2d96515c6_buggy.java
+++ b/tmp/3b388b6b-faed-478a-88eb-fa2dded6a074_fixed.java
@@ -1,21 +1,32 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
+        if (str == null) {
+            return null;
+        }
+
         try
         {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+            // As per Javadoc: "If a . is present, it creates a Double"
+            if (str.indexOf('.') != -1) {
+                return Double.valueOf(str);
+            } else {
+                // As per Javadoc: "otherwise a Long."
+                return Long.valueOf(str);
+            }
         }
         catch (NumberFormatException nfe)
         {
+            // Keep the original error reporting behavior
             System.err.println(nfe.getMessage());
         }
 
         return null;
     }
\ No newline at end of file
