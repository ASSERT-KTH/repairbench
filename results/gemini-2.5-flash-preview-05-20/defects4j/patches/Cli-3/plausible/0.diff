diff --git a/tmp/7e3181ff-085b-43b6-a75c-8d20380bad17_buggy.java b/tmp/d8b5b48b-d664-4622-98cf-a7ef6958532c_fixed.java
index d9b400d..f2065b0 100644
--- a/tmp/7e3181ff-085b-43b6-a75c-8d20380bad17_buggy.java
+++ b/tmp/d8b5b48b-d664-4622-98cf-a7ef6958532c_fixed.java
@@ -1,21 +1,35 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
+        if (str == null)
+        {
+            return null;
+        }
+
         try
         {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+            // According to the Javadoc, if a '.' is present, it creates a Double, otherwise a Long.
+            if (str.indexOf('.') != -1)
+            {
+                return Double.valueOf(str);
+            }
+            else
+            {
+                return Long.valueOf(str);
+            }
         }
         catch (NumberFormatException nfe)
         {
+            // Log the exception message, as per original code's behavior
             System.err.println(nfe.getMessage());
         }
 
         return null;
     }
\ No newline at end of file
