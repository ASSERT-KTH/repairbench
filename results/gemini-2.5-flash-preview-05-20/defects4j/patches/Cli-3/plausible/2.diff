diff --git a/tmp/05ad7d90-e1df-42c2-882d-4ade43d45804_buggy.java b/tmp/7f121fe3-3d2c-4367-bac4-c2249b21287d_fixed.java
index d9b400d..3d7ab6c 100644
--- a/tmp/05ad7d90-e1df-42c2-882d-4ade43d45804_buggy.java
+++ b/tmp/7f121fe3-3d2c-4367-bac4-c2249b21287d_fixed.java
@@ -1,21 +1,36 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
+        if (str == null || str.isEmpty()) {
+            return null;
+        }
+
         try
         {
-            return org.apache.commons.lang.math.NumberUtils.createNumber(str);
+            // Adhering strictly to the Javadoc:
+            // "If a . is present, it creates a Double, otherwise a Long."
+            if (str.indexOf('.') != -1) // Check for the presence of a decimal point
+            {
+                return Double.valueOf(str);
+            }
+            else // No decimal point found, parse as a Long
+            {
+                return Long.valueOf(str);
+            }
         }
         catch (NumberFormatException nfe)
         {
+            // Keep the original behavior of printing the error message
             System.err.println(nfe.getMessage());
         }
 
+        // If parsing fails or input was invalid, return null
         return null;
     }
\ No newline at end of file
