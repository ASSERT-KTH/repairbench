diff --git a/tmp/427140a1-0991-4b76-9419-8e7c5fc04c81_buggy.java b/tmp/e74d105a-b85e-4048-8d62-1d93e0e62ecb_fixed.java
index 98b456f..c32cdd2 100644
--- a/tmp/427140a1-0991-4b76-9419-8e7c5fc04c81_buggy.java
+++ b/tmp/e74d105a-b85e-4048-8d62-1d93e0e62ecb_fixed.java
@@ -1,17 +1,22 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
             // collapse checked=null, checked="", checked=checked; write out others
+            // For HTML syntax, if it's a boolean attribute and its value is null, empty, or equals the key,
+            // then only the key should be outputted (e.g., <input checked>).
+            // Otherwise, output as key="value".
+            final boolean isBooleanAttribute = Attribute.isBooleanAttribute(key);
             if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+                && isBooleanAttribute
+                && (val == null || val.isEmpty() || val.equals(key)))) { // Added val.isEmpty() and restructured for clarity
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
         }
     }
\ No newline at end of file
