diff --git a/tmp/9df8ea02-bfb3-4c1a-8ef3-519df22b0e75_buggy.java b/tmp/4245cc5c-ee97-4a64-b2ed-ed0bc9f2842c_fixed.java
index 98b456f..11b2323 100644
--- a/tmp/9df8ea02-bfb3-4c1a-8ef3-519df22b0e75_buggy.java
+++ b/tmp/4245cc5c-ee97-4a64-b2ed-ed0bc9f2842c_fixed.java
@@ -1,17 +1,21 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
             // collapse checked=null, checked="", checked=checked; write out others
+            // In HTML, boolean attributes with empty string values (e.g., `checked=""`) or
+            // values equal to their key (e.g., `checked="checked"`) should be output
+            // as just the attribute name (e.g., `checked`).
+            // Attributes with other values (e.g., `checked="false"`) should retain their value.
             if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+                && (val == null || val.equals("") || (val.equals(key) && Attribute.isBooleanAttribute(key))))) {
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
         }
     }
\ No newline at end of file
