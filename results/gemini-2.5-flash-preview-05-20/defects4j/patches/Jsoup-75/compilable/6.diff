diff --git a/tmp/6bfd403e-3916-46e7-89c3-aa97e7727e57_buggy.java b/tmp/b7f59093-9d36-4ef4-a25f-ab96908b80f6_fixed.java
index 98b456f..b23ffb2 100644
--- a/tmp/6bfd403e-3916-46e7-89c3-aa97e7727e57_buggy.java
+++ b/tmp/b7f59093-9d36-4ef4-a25f-ab96908b80f6_fixed.java
@@ -1,17 +1,34 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
-            final String val = vals[i];
+            final String val = vals[i]; // val can be null
+
             accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            final boolean isHtmlSyntax = out.syntax() == Document.OutputSettings.Syntax.html;
+            final boolean isBooleanAttr = Attribute.isBooleanAttribute(key);
+
+            if (isHtmlSyntax && isBooleanAttr) {
+                // This is an HTML boolean attribute. Collapse if value is null, empty string, or equals key.
+                // Examples to collapse: `checked`, `checked=null`, `checked=""`, `checked=checked`
+                // Examples to not collapse (i.e., render as key="value"): `autofocus="false"`
+                if (val == null || val.equals(key) || (val != null && val.isEmpty())) {
+                    // Collapse: do not append ="value". The attribute name itself is enough.
+                } else {
+                    // It's a boolean attribute with a value that is NOT null, empty, or equal to key.
+                    // Render as key="value".
+                    accum.append("=\"");
+                    Entities.escape(accum, val, out, true, false, false); // val is guaranteed not null here
+                    accum.append('"');
+                }
+            } else {
+                // Not HTML syntax OR not a boolean attribute. Always write out value.
+                // e.g., <foo:bar checked="true"> or <img src="foo">
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
         }
     }
\ No newline at end of file
