diff --git a/tmp/d53c6257-8d1a-428c-893f-39878ac8d213_buggy.java b/tmp/31f3077a-94a3-4bdc-a4ca-65fea61d14ec_fixed.java
index 98b456f..f72a0a3 100644
--- a/tmp/d53c6257-8d1a-428c-893f-39878ac8d213_buggy.java
+++ b/tmp/31f3077a-94a3-4bdc-a4ca-65fea61d14ec_fixed.java
@@ -1,17 +1,21 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
             // collapse checked=null, checked="", checked=checked; write out others
+            // The condition below determines if the value should *not* be written.
+            // If it's HTML syntax AND it's a boolean attribute AND its value is null, empty, or equals the key,
+            // then we collapse it (don't write ="value"). Otherwise, we write ="value".
             if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+                && Attribute.isBooleanAttribute(key) // must be a boolean attribute
+                && (val == null || val.isEmpty() || val.equals(key)))) { // and its value indicates true/collapsed
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
         }
     }
\ No newline at end of file
