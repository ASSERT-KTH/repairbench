diff --git a/tmp/f133f06c-bd64-443d-9c70-aa3e7faa9e62_buggy.java b/tmp/bb8de9e7-b965-468e-823e-6f5a4be6e48c_fixed.java
index 98b456f..a1227ee 100644
--- a/tmp/f133f06c-bd64-443d-9c70-aa3e7faa9e62_buggy.java
+++ b/tmp/bb8de9e7-b965-468e-823e-6f5a4be6e48c_fixed.java
@@ -1,17 +1,22 @@
     final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
         final int sz = size;
         for (int i = 0; i < sz; i++) {
             // inlined from Attribute.html()
             final String key = keys[i];
             final String val = vals[i];
             accum.append(' ').append(key);
 
-            // collapse checked=null, checked="", checked=checked; write out others
-            if (!(out.syntax() == Document.OutputSettings.Syntax.html
-                && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
+            // In HTML syntax, collapse boolean attributes if their value is null, empty string, or equal to the key.
+            // For example, "checked=null", "checked=''", "checked=checked" should render as "checked".
+            // Attributes like "autofocus=false" should still render with the value.
+            final boolean shouldCollapse = out.syntax() == Document.OutputSettings.Syntax.html
+                && Attribute.isBooleanAttribute(key)
+                && (val == null || val.equals("") || val.equals(key));
+
+            if (!shouldCollapse) {
                 accum.append("=\"");
                 Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
                 accum.append('"');
             }
         }
     }
\ No newline at end of file
