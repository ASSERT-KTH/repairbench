diff --git a/tmp/bd07f0ff-6f50-42d2-b108-f5f21b6b64a7_buggy.java b/tmp/92896dff-9dc3-4975-bca5-61565380701a_fixed.java
index 9a3a9db..55d3097 100644
--- a/tmp/bd07f0ff-6f50-42d2-b108-f5f21b6b64a7_buggy.java
+++ b/tmp/92896dff-9dc3-4975-bca5-61565380701a_fixed.java
@@ -1,27 +1,35 @@
     /**
      * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
      * found, skips.
      *
      * @param endTag tag to close
      */
     private void popStackToClose(Token.EndTag endTag) {
-        String elName = endTag.name();
+        // In HTML, tag names are case-insensitive. The `nodeName()` of an Element is
+        // typically normalized (e.g., to lowercase for HTML). The `endTag.name()`
+        // comes directly from the input and may have a different casing (e.g., "DIV" for <div>).
+        // For a correct comparison, we should normalize the end tag name to lowercase.
+        String elNameLower = endTag.name().toLowerCase();
         Element firstFound = null;
 
+        // Find the first occurrence of the element to be closed, scanning from the top of the stack downwards.
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
-            if (next.nodeName().equals(elName)) {
+            // Compare the normalized node name of the element on the stack with the normalized end tag name.
+            if (next.nodeName().equals(elNameLower)) {
                 firstFound = next;
                 break;
             }
         }
         if (firstFound == null)
             return; // not found, skip
 
+        // Pop elements from the stack until the `firstFound` element is reached (inclusive).
+        // This ensures all elements above the target closing tag are also removed (e.g., implicitly closed).
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             stack.remove(pos);
             if (next == firstFound)
                 break;
         }
     }
\ No newline at end of file
