diff --git a/tmp/663ad150-4f1b-43b6-96a7-53db288ccaa5_buggy.java b/tmp/bf52d8fd-c1be-4837-829e-a80a92be9beb_fixed.java
index 9a3a9db..9bbbdfa 100644
--- a/tmp/663ad150-4f1b-43b6-96a7-53db288ccaa5_buggy.java
+++ b/tmp/bf52d8fd-c1be-4837-829e-a80a92be9beb_fixed.java
@@ -1,27 +1,35 @@
     /**
      * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
      * found, skips.
      *
      * @param endTag tag to close
      */
     private void popStackToClose(Token.EndTag endTag) {
         String elName = endTag.name();
         Element firstFound = null;
 
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
-            if (next.nodeName().equals(elName)) {
+            // In HTML parsing, tag names are case-insensitive. While Jsoup typically normalizes
+            // both endTag.name() and Element.nodeName() to lowercase based on ParseSettings,
+            // issues can arise in mixed configurations (like XmlParser with HtmlParseSettings)
+            // where element names on the stack might retain their original case unexpectedly,
+            // leading to a failure in comparison. Using equalsIgnoreCase ensures robustness
+            // against such potential case discrepancies when finding the target element.
+            if (next.nodeName().equalsIgnoreCase(elName)) {
                 firstFound = next;
                 break;
             }
         }
         if (firstFound == null)
             return; // not found, skip
 
+        // The second loop correctly removes elements from the top of the stack
+        // down to and including the 'firstFound' element.
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             stack.remove(pos);
             if (next == firstFound)
                 break;
         }
     }
\ No newline at end of file
