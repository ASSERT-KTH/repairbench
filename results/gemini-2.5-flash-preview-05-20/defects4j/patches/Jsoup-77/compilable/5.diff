diff --git a/tmp/6d3ceaec-5cbb-4d6f-9e88-a363384b3eae_buggy.java b/tmp/ba687bb6-a118-4add-a901-4198f34aac7c_fixed.java
index 9a3a9db..e072056 100644
--- a/tmp/6d3ceaec-5cbb-4d6f-9e88-a363384b3eae_buggy.java
+++ b/tmp/ba687bb6-a118-4add-a901-4198f34aac7c_fixed.java
@@ -1,27 +1,37 @@
     /**
      * If the stack contains an element with this tag's name, pop up the stack to remove the first occurrence. If not
      * found, skips.
      *
      * @param endTag tag to close
      */
     private void popStackToClose(Token.EndTag endTag) {
         String elName = endTag.name();
+        // When ParseSettings.htmlDefault is used, tag names are case-insensitive.
+        // Element node names are typically stored in lowercase by Jsoup for HTML documents.
+        // To correctly match an end tag (which might have different casing, e.g., </DIV>)
+        // with its corresponding element on the stack (e.g., <div>), we need to normalize
+        // the end tag's name to lowercase for comparison.
+        String elNameLower = elName.toLowerCase();
+
         Element firstFound = null;
 
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
-            if (next.nodeName().equals(elName)) {
+            // Compare the element's node name (already lowercase) with the normalized end tag name.
+            if (next.nodeName().equals(elNameLower)) {
                 firstFound = next;
                 break;
             }
         }
         if (firstFound == null)
             return; // not found, skip
 
+        // This loop correctly pops elements from the stack until the firstFound element is removed.
+        // This implicitly closes any elements that were opened after firstFound but before its closing tag.
         for (int pos = stack.size() -1; pos >= 0; pos--) {
             Element next = stack.get(pos);
             stack.remove(pos);
             if (next == firstFound)
                 break;
         }
     }
\ No newline at end of file
