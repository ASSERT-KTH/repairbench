diff --git a/tmp/d4ab7136-dd72-47d7-8bba-10b20b20b8bc_buggy.java b/tmp/6ce7c74a-c96f-42d7-9173-5c342b5f342e_fixed.java
index ba2718f..66f5079 100644
--- a/tmp/d4ab7136-dd72-47d7-8bba-10b20b20b8bc_buggy.java
+++ b/tmp/6ce7c74a-c96f-42d7-9173-5c342b5f342e_fixed.java
@@ -1,7 +1,32 @@
   /**
    * ContextTypeExpression := BasicTypeExpression | '?'
    * For expressions on the right hand side of a this: or new:
    */
   private Node parseContextTypeExpression(JsDocToken token) {
+    // According to the JSDoc grammar comment, ContextTypeExpression can be a BasicTypeExpression
+    // or a '?'. The provided tests also indicate that '*' should be handled in this context.
+    // The original implementation only called parseTypeName, which likely fails
+    // when the token is '?' or '*'.
+
+    if (token.getTokenType() == JsDocToken.QMARK) {
+      // If the token is '?', it represents the JSDoc unknown type.
+      // We create a Node.UNKNOWN_TYPE node, capturing its source position.
+      Node unknownTypeNode = createNode(Node.UNKNOWN_TYPE, token.getStartPosition(), token.getEndPosition());
+      // Advance the parser's current position past the '?' token.
+      this.currentPosition = token.getEndPosition();
+      return unknownTypeNode;
+    } else if (token.getTokenType() == JsDocToken.STAR) {
+      // If the token is '*', it represents the JSDoc "any" type.
+      // In Closure Compiler's AST, this is often mapped to Node.VOID_TYPE.
+      // We create a Node.VOID_TYPE node, capturing its source position.
+      Node anyTypeNode = createNode(Node.VOID_TYPE, token.getStartPosition(), token.getEndPosition());
+      // Advance the parser's current position past the '*' token.
+      this.currentPosition = token.getEndPosition();
+      return anyTypeNode;
+    } else {
+      // If the token is neither '?' nor '*', it should be a standard type name
+      // (a BasicTypeExpression). The parseTypeName method is responsible for
+      // parsing this type name and advancing the parser's position accordingly.
       return parseTypeName(token);
     }
+  }
\ No newline at end of file
