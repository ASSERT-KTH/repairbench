diff --git a/tmp/766bb32e-f412-4037-aa42-e24aeee04c47_buggy.java b/tmp/23b36893-4f3b-444b-96da-b257679837bf_fixed.java
index ba2718f..7a7d5db 100644
--- a/tmp/766bb32e-f412-4037-aa42-e24aeee04c47_buggy.java
+++ b/tmp/23b36893-4f3b-444b-96da-b257679837bf_fixed.java
@@ -1,7 +1,18 @@
   /**
    * ContextTypeExpression := BasicTypeExpression | '?'
    * For expressions on the right hand side of a this: or new:
    */
   private Node parseContextTypeExpression(JsDocToken token) {
+    if (token == JsDocToken.QUESTION) {
+      // ContextTypeExpression can be '?'
+      next(); // Consume the '?' token
+      return createNode(Token.QMARK); // Represent '?' as a QMARK node
+    } else if (token == JsDocToken.STAR) {
+      // While not explicitly in the ContextTypeExpression grammar in the comment,
+      // tests show '*' is also allowed and needs special handling here.
+      next(); // Consume the '*' token
+      return createNode(Token.STAR); // Represent '*' as a STAR node
+    }
+    // For other types, delegate to parseTypeName
     return parseTypeName(token);
   }
\ No newline at end of file
