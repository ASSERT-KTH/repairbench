diff --git a/tmp/2341840a-e34c-4fa0-a856-75ab4b9c9464_buggy.java b/tmp/bd70a167-9279-4887-8c64-5dda076db8df_fixed.java
index 2b35d23..95afa70 100644
--- a/tmp/2341840a-e34c-4fa0-a856-75ab4b9c9464_buggy.java
+++ b/tmp/bd70a167-9279-4887-8c64-5dda076db8df_fixed.java
@@ -1,8 +1,17 @@
     /** Compute the maximum of two values
      * @param a first value
      * @param b second value
      * @return b if a is lesser or equal to b, a otherwise
      */
     public static float max(final float a, final float b) {
-        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);
+        // The original logic was: return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);
+        // This was incorrect when 'a' was greater than 'b' and neither was NaN.
+        // In that case, it incorrectly returned 'b' instead of 'a'.
+        // The condition (Float.isNaN(a + b) ? Float.NaN : X) correctly handles NaN propagation:
+        // if either a or b is NaN, (a + b) will be NaN, and it returns NaN.
+        // If neither is NaN, (a + b) will not be NaN.
+        // So, if (a <= b) is false (meaning a > b), we should return 'a'
+        // unless the NaN check indicates NaN, in which case we return NaN.
+        // The fix replaces the final 'b' with 'a'.
+        return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : a);
     }
\ No newline at end of file
