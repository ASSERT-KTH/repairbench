diff --git a/tmp/895e94ec-7756-4751-a809-d5d237374180_buggy.java b/tmp/ff2b0da6-db4b-44b2-a685-ebaacba8828e_fixed.java
index e31352b..9f51307 100644
--- a/tmp/895e94ec-7756-4751-a809-d5d237374180_buggy.java
+++ b/tmp/ff2b0da6-db4b-44b2-a685-ebaacba8828e_fixed.java
@@ -1,15 +1,27 @@
     /**
      * Returns a paint for the specified value.
      * 
      * @param value  the value (must be within the range specified by the
      *         lower and upper bounds for the scale).
      * 
      * @return A paint for the specified value.
      */
     public Paint getPaint(double value) {
+        // Clamp the value to be within the specified lower and upper bounds.
+        // This ensures that the calculated grayscale 'g' will be within [0, 255].
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound
+
+        // Calculate the grayscale value based on the clamped 'v'.
+        // The previous bug was using the original 'value' instead of the clamped 'v',
+        // which could lead to 'g' being outside the [0, 255] range if 'value'
+        // was outside the bounds.
+        int g = (int) ((v - this.lowerBound) / (this.upperBound
                 - this.lowerBound) * 255.0);
+        
+        // Ensure g is within the valid range [0, 255] just in case of floating point
+        // inaccuracies near the bounds, although clamping 'v' should primarily handle this.
+        g = Math.max(0, Math.min(255, g));
+
         return new Color(g, g, g);
     }
\ No newline at end of file
