diff --git a/tmp/94c0f479-c1d0-4973-9b0f-e44fd356022b_buggy.java b/tmp/d5c14a36-8903-498f-bc28-7e07cc3fede2_fixed.java
index e31352b..1f358bf 100644
--- a/tmp/94c0f479-c1d0-4973-9b0f-e44fd356022b_buggy.java
+++ b/tmp/d5c14a36-8903-498f-bc28-7e07cc3fede2_fixed.java
@@ -1,15 +1,32 @@
     /**
      * Returns a paint for the specified value.
      * 
      * @param value  the value (must be within the range specified by the
      *         lower and upper bounds for the scale).
      * 
      * @return A paint for the specified value.
      */
     public Paint getPaint(double value) {
+        // Clamp the value to the range [lowerBound, upperBound]
         double v = Math.max(value, this.lowerBound);
         v = Math.min(v, this.upperBound);
-        int g = (int) ((value - this.lowerBound) / (this.upperBound
+
+        // Calculate the grayscale component based on the clamped value 'v'
+        // and scale it to the range [0, 255].
+        // Handle the case where upperBound == lowerBound to avoid division by zero
+        // and ensure g stays within [0, 255].
+        int g = 0;
+        if (this.upperBound > this.lowerBound) {
+            g = (int) ((v - this.lowerBound) / (this.upperBound
                     - this.lowerBound) * 255.0);
+            // Ensure g is within [0, 255] after calculation, due to floating point
+            // inaccuracies or if v is exactly at the bounds.
+            g = Math.max(0, g);
+            g = Math.min(255, g);
+        } else {
+            // If lowerBound == upperBound, all values map to black (0).
+            // 'g' remains 0 from initialization.
+        }
+        
         return new Color(g, g, g);
     }
\ No newline at end of file
