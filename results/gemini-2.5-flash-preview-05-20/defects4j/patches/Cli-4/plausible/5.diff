diff --git a/tmp/ef9143cb-4e25-44c0-adb0-c911ad1b2852_buggy.java b/tmp/c4838cc9-2656-463e-b4b3-d1faff514725_fixed.java
index 9c25814..817d1dc 100644
--- a/tmp/ef9143cb-4e25-44c0-adb0-c911ad1b2852_buggy.java
+++ b/tmp/c4838cc9-2656-463e-b4b3-d1faff514725_fixed.java
@@ -1,27 +1,38 @@
     /**
      * <p>Throws a {@link MissingOptionException} if all of the
      * required options are no present.</p>
      *
      * @throws MissingOptionException if any of the required Options
      * are not present.
      */
     private void checkRequiredOptions()
         throws MissingOptionException
     {
         // if there are required options that have not been
         // processsed
         if (requiredOptions.size() > 0)
         {
+            // Build the message string as expected by the tests.
+            // The tests expect a prefix "Missing required option(s): "
+            // and then the concatenated option characters without commas.
+            StringBuffer buff = new StringBuffer("Missing required option");
+
+            // Add 's' if there's more than one missing option
+            if (requiredOptions.size() > 1)
+            {
+                buff.append("s");
+            }
+            buff.append(": ");
+
+            // Iterate through the missing options and append their string representation.
+            // Assuming Option.toString() provides the short option character (e.g., "f").
             Iterator iter = requiredOptions.iterator();
-            StringBuffer buff = new StringBuffer();
-
-
-            // loop through the required options
             while (iter.hasNext())
             {
                 buff.append(iter.next());
             }
 
+            // Throw the exception with the custom-built message.
             throw new MissingOptionException(buff.toString());
         }
     }
\ No newline at end of file
