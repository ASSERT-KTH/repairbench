diff --git a/tmp/4cac8151-63d2-4768-9caa-223a6ceba286_buggy.java b/tmp/afb6893a-985f-4154-bf5d-6bd947d178db_fixed.java
index 9c25814..d5d721f 100644
--- a/tmp/4cac8151-63d2-4768-9caa-223a6ceba286_buggy.java
+++ b/tmp/afb6893a-985f-4154-bf5d-6bd947d178db_fixed.java
@@ -1,27 +1,41 @@
     /**
      * <p>Throws a {@link MissingOptionException} if all of the
      * required options are no present.</p>
      *
      * @throws MissingOptionException if any of the required Options
      * are not present.
      */
     private void checkRequiredOptions()
         throws MissingOptionException
     {
         // if there are required options that have not been
-        // processsed
+        // processed
         if (requiredOptions.size() > 0)
         {
-            Iterator iter = requiredOptions.iterator();
+            // requiredOptions is expected to contain String (option names) based on test failures.
+            // Collect the missing option names to construct the message.
+            // Using a List and sorting ensures consistent message ordering for multiple missing options.
+            java.util.List<String> missingOptionNames = new java.util.ArrayList<>(requiredOptions);
+            java.util.Collections.sort(missingOptionNames);
+
             StringBuffer buff = new StringBuffer();
 
-
-            // loop through the required options
-            while (iter.hasNext())
+            // Determine the appropriate message prefix based on the number of missing options.
+            if (missingOptionNames.size() == 1)
             {
-                buff.append(iter.next());
+                buff.append("Missing required option: ");
+                buff.append(missingOptionNames.get(0));
+            }
+            else // requiredOptions.size() > 1
+            {
+                buff.append("Missing required options: ");
+                // Concatenate all missing option names directly as per expected test output (e.g., "fx").
+                for (String optionName : missingOptionNames)
+                {
+                    buff.append(optionName);
+                }
             }
 
             throw new MissingOptionException(buff.toString());
         }
     }
\ No newline at end of file
