diff --git a/tmp/d313e16f-b8c0-4ebb-9dae-21daa5b98a87_buggy.java b/tmp/d8488467-a127-46a6-9a6e-64125a57c497_fixed.java
index 4b7f469..d02be69 100644
--- a/tmp/d313e16f-b8c0-4ebb-9dae-21daa5b98a87_buggy.java
+++ b/tmp/d8488467-a127-46a6-9a6e-64125a57c497_fixed.java
@@ -1,10 +1,40 @@
   static boolean isSimpleNumber(String s) {
-    int len = s.length();
-    for (int index = 0; index < len; index++) {
-      char c = s.charAt(index);
-      if (c < '0' || c > '9') {
+    // A null or empty string is not a simple number.
+    if (s == null || s.isEmpty()) {
+      return false;
+    }
+
+    // Attempt to parse the string as a JavaScript numeric literal.
+    // JavaScript numeric literals can be decimal, octal (legacy), hexadecimal, or floating-point.
+    // We try to parse it as an integer first, then as a double.
+
+    // 1. Try parsing as an integer (decimal, octal, hexadecimal).
+    // Long.decode() handles all these forms:
+    // - "123" (decimal)
+    // - "010" (octal, evaluates to 8)
+    // - "0x10" or "0X10" (hexadecimal, evaluates to 16)
+    // It also handles optional signs (+/-).
+    try {
+      Long.decode(s); 
+      return true;
+    } catch (NumberFormatException e) {
+      // If it's not a valid integer literal (including octal/hex formats recognized by Long.decode),
+      // then it might be a floating-point number.
+      
+      // 2. Try parsing as a floating-point number.
+      // Double.parseDouble() handles:
+      // - "1.23" (decimal with fraction)
+      // - ".23" (fractional part only)
+      // - "123." (integer part only, still float)
+      // - "1e5", "1.2e-3" (scientific notation)
+      // It also handles optional signs.
+      try {
+          Double.parseDouble(s);
+          return true;
+      } catch (NumberFormatException e2) {
+          // If it's neither a recognizable integer nor a floating-point number,
+          // then it's not considered a "simple number" by this definition.
           return false;
       }
     }
-    return len > 0;
   }
\ No newline at end of file
