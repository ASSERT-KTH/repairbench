diff --git a/tmp/8eaadd85-7fc6-4a39-aeaf-b983e61a1c37_buggy.java b/tmp/c0716e43-8a6d-4bad-857f-dc8de1fb11c3_fixed.java
index 4b7f469..07352ad 100644
--- a/tmp/8eaadd85-7fc6-4a39-aeaf-b983e61a1c37_buggy.java
+++ b/tmp/c0716e43-8a6d-4bad-857f-dc8de1fb11c3_fixed.java
@@ -1,10 +1,28 @@
   static boolean isSimpleNumber(String s) {
     int len = s.length();
+    if (len == 0) {
+      return false;
+    }
+
+    // A "simple number" in this context likely refers to a base-10 integer
+    // without leading zeros (unless it's just "0").
+    // JavaScript object keys interpret strings like "010" as octal (value 8)
+    // if treated as a number literal, but they are often preserved as strings
+    // when used as property names to avoid unintended conversions.
+    // This condition ensures that strings starting with '0' (but not "0" itself)
+    // are not considered "simple numbers", forcing them to be treated as strings.
+    if (len > 1 && s.charAt(0) == '0') {
+      return false;
+    }
+
     for (int index = 0; index < len; index++) {
       char c = s.charAt(index);
       if (c < '0' || c > '9') {
         return false;
       }
     }
-    return len > 0;
+    // If the loop completes, all characters are digits and
+    // the string passed the leading zero check.
+    // Since len > 0 was checked at the beginning, we can simply return true.
+    return true;
   }
\ No newline at end of file
