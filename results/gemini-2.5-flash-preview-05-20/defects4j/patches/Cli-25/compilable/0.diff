diff --git a/tmp/e797492b-abd8-46c6-8ba8-75765dfa3dce_buggy.java b/tmp/7909349b-c2a1-4fb6-a647-73cc0242fdfe_fixed.java
index 875b31b..6643144 100644
--- a/tmp/e797492b-abd8-46c6-8ba8-75765dfa3dce_buggy.java
+++ b/tmp/7909349b-c2a1-4fb6-a647-73cc0242fdfe_fixed.java
@@ -1,54 +1,62 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         if (nextLineTabStop >= width)
         {
             // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             }
             
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+            // Fix for CLI-162 related issue:
+            // When wrapping a line, if the calculated wrap position is just before
+            // the width boundary (meaning the last character would be at width-1),
+            // and the text is still longer than the specified width, it's better
+            // to wrap at the full width. This prevents very short lines or
+            // incorrect wrapping.
+            // Original condition: (pos == nextLineTabStop - 1)
+            // Corrected condition: (pos == width - 1)
+            if ( (text.length() > width) && (pos == width - 1) ) 
             {
                 pos = width;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file
