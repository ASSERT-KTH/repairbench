diff --git a/tmp/faeb87e9-9182-4966-bbf8-b31561db1b48_buggy.java b/tmp/c236b3ed-a1c6-41ec-a915-87a9c1158e7a_fixed.java
index 4d0be80..22f02d8 100644
--- a/tmp/faeb87e9-9182-4966-bbf8-b31561db1b48_buggy.java
+++ b/tmp/c236b3ed-a1c6-41ec-a915-87a9c1158e7a_fixed.java
@@ -1,10 +1,15 @@
     @Override
     Node processForInLoop(ForInLoop loopNode) {
+        // The "for each" language extension is not supported by the compiler
+        // and should result in an error during parsing/AST conversion.
+        if (loopNode.isForEach()) {
+            throw new IllegalStateException("unsupported language extension: for each");
+        }
 
-        // Return the bare minimum to put the AST in a valid state.
+        // Return the bare minimum to put the AST in a valid state for standard for...in loops.
       return newNode(
           Token.FOR,
           transform(loopNode.getIterator()),
           transform(loopNode.getIteratedObject()),
           transformBlock(loopNode.getBody()));
     }
\ No newline at end of file
