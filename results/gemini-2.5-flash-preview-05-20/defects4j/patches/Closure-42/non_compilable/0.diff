diff --git a/tmp/39ea96e6-7863-46f8-9e0d-220efaf71460_buggy.java b/tmp/a6370776-ff1b-4169-bbd2-9ff5e0f01a9a_fixed.java
index 4d0be80..48ce6df 100644
--- a/tmp/39ea96e6-7863-46f8-9e0d-220efaf71460_buggy.java
+++ b/tmp/a6370776-ff1b-4169-bbd2-9ff5e0f01a9a_fixed.java
@@ -1,10 +1,21 @@
     @Override
     Node processForInLoop(ForInLoop loopNode) {
+        if (loopNode.isForEach()) {
+            // "for each" is an unsupported language extension (Mozilla E4X).
+            // Report an error using the class's error reporting mechanism.
+            // This 'report' method is assumed to be available in the class containing
+            // this function (e.g., AstToNodeTranslator) and is expected to throw
+            // a JSError or similar exception in test configurations.
+            report(DiagnosticType.UNSUPPORTED_LANGUAGE_FEATURE, loopNode, "for each");
+            // The line below should ideally be unreachable if 'report' throws,
+            // which is expected for fatal errors in a test setup.
+            return null; // Return null to satisfy method signature, although control flow should exit via exception.
+        }
 
-        // Return the bare minimum to put the AST in a valid state.
+        // Return the bare minimum to put the AST in a valid state for standard for...in loops.
       return newNode(
           Token.FOR,
           transform(loopNode.getIterator()),
           transform(loopNode.getIteratedObject()),
           transformBlock(loopNode.getBody()));
     }
\ No newline at end of file
