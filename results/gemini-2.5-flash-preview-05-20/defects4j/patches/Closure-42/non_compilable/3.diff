diff --git a/tmp/101a367f-a916-4da9-8469-cb8dcf15d344_buggy.java b/tmp/3b6ff1d2-d922-4d73-a5ec-661fb3eed711_fixed.java
index 4d0be80..852c6b9 100644
--- a/tmp/101a367f-a916-4da9-8469-cb8dcf15d344_buggy.java
+++ b/tmp/3b6ff1d2-d922-4d73-a5ec-661fb3eed711_fixed.java
@@ -1,10 +1,19 @@
     @Override
     Node processForInLoop(ForInLoop loopNode) {
+        // According to testForEach, "for each" is an unsupported language extension.
+        // We must throw a ParserException if we encounter a "for each" loop.
+        if (loopNode.isForEach()) {
+            throw new com.google.javascript.jscomp.parsing.Parser.ParserException(
+                "unsupported language extension: for each",
+                loopNode.getAstRoot().getSourceName(),
+                loopNode.getLineno(),
+                loopNode.getCharno());
+        }
 
-        // Return the bare minimum to put the AST in a valid state.
+        // Return the bare minimum to put the AST in a valid state for a regular 'for...in' loop.
       return newNode(
           Token.FOR,
           transform(loopNode.getIterator()),
           transform(loopNode.getIteratedObject()),
           transformBlock(loopNode.getBody()));
     }
\ No newline at end of file
