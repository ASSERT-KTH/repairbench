diff --git a/tmp/b98cff31-3eb9-4c12-ab7a-e1fe6b53c467_buggy.java b/tmp/1f32712c-bbbd-4fa2-9713-59c81f78511e_fixed.java
index fd32990..4e8c5fb 100644
--- a/tmp/b98cff31-3eb9-4c12-ab7a-e1fe6b53c467_buggy.java
+++ b/tmp/1f32712c-bbbd-4fa2-9713-59c81f78511e_fixed.java
@@ -1,20 +1,35 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index == null) {
+            return null;
+        }
+
+        // The Javadoc states: "throws IllegalArgumentException if the record is inconsistent".
+        // An ArrayIndexOutOfBoundsException occurs when the mapped index is greater than or
+        // equal to the number of available values, indicating an inconsistent record.
+        // This check prevents the ArrayIndexOutOfBoundsException and throws the specified
+        // IllegalArgumentException instead.
+        if (index.intValue() >= values.length) {
+            throw new IllegalArgumentException(
+                    String.format("The record is inconsistent, as the header mapping references an index %d which is out of bounds for the %d values.",
+                            index.intValue(), values.length));
+        }
+
+        return values[index.intValue()];
     }
\ No newline at end of file
