diff --git a/tmp/f2836344-4a64-4864-9cb8-60dac5052cef_buggy.java b/tmp/068dd331-c22f-4344-aace-db149ddbe261_fixed.java
index fd32990..622c720 100644
--- a/tmp/f2836344-4a64-4864-9cb8-60dac5052cef_buggy.java
+++ b/tmp/068dd331-c22f-4344-aace-db149ddbe261_fixed.java
@@ -1,20 +1,31 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index != null) {
+            // Check if the mapped index is within the bounds of the actual values array.
+            // An index out of bounds indicates an inconsistent record, as per Javadoc.
+            if (index.intValue() >= values.length) {
+                throw new IllegalArgumentException(
+                        "The record is inconsistent: requested column '" + name + "' with index " + index.intValue() +
+                        " is out of bounds for the " + values.length + " values in this record.");
+            }
+            return values[index.intValue()];
+        } else {
+            return null; // Column name not found
+        }
     }
\ No newline at end of file
