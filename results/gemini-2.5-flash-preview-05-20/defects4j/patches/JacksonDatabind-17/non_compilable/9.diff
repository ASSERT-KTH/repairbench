diff --git a/tmp/a3f2f75c-b0f8-4ca6-a111-60e45be13df1_buggy.java b/tmp/1f6574e3-6342-4c48-ab07-51731799e98b_fixed.java
index 01967cc..91687f2 100644
--- a/tmp/a3f2f75c-b0f8-4ca6-a111-60e45be13df1_buggy.java
+++ b/tmp/1f6574e3-6342-4c48-ab07-51731799e98b_fixed.java
@@ -1,35 +1,38 @@
         /**
          * Method called to check if the default type handler should be
          * used for given type.
          * Note: "natural types" (String, Boolean, Integer, Double) will never
          * use typing; that is both due to them being concrete and final,
          * and since actual serializers and deserializers will also ignore any
          * attempts to enforce typing.
          */
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // fall through
             case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
                 // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                // If the type is a JsonNode (or subtype of TreeNode), we should NEVER apply default typing.
+                // This is because JsonNode types are internally handled by the tree model itself
+                // and adding external type information to them is problematic and unnecessary.
+                if (com.fasterxml.jackson.databind.node.TreeNode.class.isAssignableFrom(t.getRawClass())) {
+                    return false;
+                }
+                // For other types, apply if it's java.lang.Object or a non-concrete type.
+                return (t.getRawClass() == Object.class) || !t.isConcrete();
 
             case NON_FINAL:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+                return !t.isFinal() && !com.fasterxml.jackson.databind.node.TreeNode.class.isAssignableFrom(t.getRawClass());
             default:
             //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
                 return (t.getRawClass() == Object.class);
             }
         }
\ No newline at end of file
