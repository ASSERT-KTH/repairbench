diff --git a/tmp/ac636cc4-0320-47d4-8b6e-22ef003c56a5_buggy.java b/tmp/135013f9-ec8d-454c-9d00-d5fdf8f8c698_fixed.java
index 01967cc..674b782 100644
--- a/tmp/ac636cc4-0320-47d4-8b6e-22ef003c56a5_buggy.java
+++ b/tmp/135013f9-ec8d-454c-9d00-d5fdf8f8c698_fixed.java
@@ -1,35 +1,36 @@
         /**
          * Method called to check if the default type handler should be
          * used for given type.
          * Note: "natural types" (String, Boolean, Integer, Double) will never
          * use typing; that is both due to them being concrete and final,
          * and since actual serializers and deserializers will also ignore any
          * attempts to enforce typing.
          */
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // fall through
             case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                // Original logic: return (t.getRawClass() == Object.class) || (!t.isConcrete() || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                // The problem was that `|| TreeNode.class.isAssignableFrom(t.getRawClass())` would cause default typing
+                // to be applied to JsonNode types (which implement TreeNode), even though the comment
+                // "// [databind#88] Should not apply to JSON tree models:" indicates the opposite.
+                // The fix changes the OR condition to an AND NOT condition for TreeNode types.
+                return (t.getRawClass() == Object.class || !t.isConcrete())
+                        && !TreeNode.class.isAssignableFrom(t.getRawClass());
 
             case NON_FINAL:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
                 // [Issue#88] Should not apply to JSON tree models:
                 return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
             default:
             //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
                 return (t.getRawClass() == Object.class);
             }
         }
\ No newline at end of file
