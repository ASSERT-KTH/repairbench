diff --git a/tmp/bc9d13ac-caa9-4bb6-9dce-b1cab2decb69_buggy.java b/tmp/a42faa5a-525a-487f-8e78-475f80b687f9_fixed.java
index 4aff4e4..5957ab1 100644
--- a/tmp/bc9d13ac-caa9-4bb6-9dce-b1cab2decb69_buggy.java
+++ b/tmp/a42faa5a-525a-487f-8e78-475f80b687f9_fixed.java
@@ -1,15 +1,48 @@
     private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
-        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
-        // rels without a baseuri get removed
-        String value = el.absUrl(attr.getKey());
-        if (!preserveRelativeLinks)
-            attr.setValue(value);
+        String originalValue = attr.getValue();
+        // Get the absolute URL. For standard schemes (http, https, etc.) and relative URLs, this will
+        // resolve correctly. For custom schemes (cid:, data:) that Jsoup's internal URL parser
+        // does not understand, this might return an empty string if there's no base URI,
+        // or attempt to resolve it relative to the base URI if one exists.
+        String absValue = el.absUrl(attr.getKey());
 
+        // Determine which value to use for protocol validation.
+        // If absValue is blank but originalValue is not, it implies that absUrl failed to
+        // process a non-empty original value (e.g., a custom protocol like "cid:").
+        // In such cases, we should validate against the original value.
+        // Otherwise (for relative URLs resolved to abs, or standard absolute URLs), use absValue.
+        String valueForValidation;
+        if (org.jsoup.internal.StringUtil.isBlank(absValue) && !org.jsoup.internal.StringUtil.isBlank(originalValue)) {
+            valueForValidation = originalValue;
+        } else {
+            valueForValidation = absValue;
+        }
+
+        boolean valid = false;
         for (Protocol protocol : protocols) {
             String prot = protocol.toString() + ":";
-            if (value.toLowerCase().startsWith(prot)) {
+            if (valueForValidation.toLowerCase().startsWith(prot)) {
+                valid = true;
+                break;
+            }
+        }
+
+        if (valid) {
+            // If the protocol is valid, and preserveRelativeLinks is false,
+            // we should update the attribute value to its absolute form.
+            // Again, if absValue was blank but originalValue was valid (a custom protocol),
+            // use originalValue for the final attribute value to avoid stripping it.
+            // Otherwise, use the absValue (for relative URLs resolved to abs, or standard absolute URLs).
+            if (!preserveRelativeLinks) {
+                if (org.jsoup.internal.StringUtil.isBlank(absValue) && !org.jsoup.internal.StringUtil.isBlank(originalValue)) {
+                    attr.setValue(originalValue);
+                } else {
+                    attr.setValue(absValue);
+                }
+            }
+            // If preserveRelativeLinks is true, the attribute value remains its original form,
+            // which is already set initially, so no explicit action is needed here.
             return true;
         }
-        }
         return false;
     }
\ No newline at end of file
