diff --git a/tmp/2bbb0fbb-fd90-4ec6-810a-a3c3cc2323a9_buggy.java b/tmp/3ba9e018-42f2-4a46-a2bf-54f2cafcddb5_fixed.java
index 39dd8e7..61529f6 100644
--- a/tmp/2bbb0fbb-fd90-4ec6-810a-a3c3cc2323a9_buggy.java
+++ b/tmp/3ba9e018-42f2-4a46-a2bf-54f2cafcddb5_fixed.java
@@ -1,30 +1,39 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
+            // If the key was empty, it signifies a malformed attribute.
+            // We need to advance the TokenQueue past the character that caused the empty key,
+            // to prevent an infinite loop in the attribute parsing loop.
+            // This problematic character might be a '>', '/', or a leading '=' that was
+            // not part of a valid attribute value.
+            // However, if the value parsing logic (e.g., in the 'else' block for unquoted values)
+            // already consumed characters and potentially emptied the queue,
+            // we must not attempt to consume another character from an empty queue.
+            if (!tq.isEmpty()) {
                 tq.consume();
-                
+            }
             return null;
         }
     }
\ No newline at end of file
