diff --git a/tmp/49d78017-15df-47bb-aa01-d4b5b05f4b21_buggy.java b/tmp/bc825b8a-3125-4998-ad3b-34f5422e30a5_fixed.java
index 7dc89ed..075e199 100644
--- a/tmp/49d78017-15df-47bb-aa01-d4b5b05f4b21_buggy.java
+++ b/tmp/bc825b8a-3125-4998-ad3b-34f5422e30a5_fixed.java
@@ -1,20 +1,24 @@
         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
             String name = t.asEndTag().normalName();
             ArrayList<Element> stack = tb.getStack();
             for (int pos = stack.size() -1; pos >= 0; pos--) {
                 Element node = stack.get(pos);
                 if (node.nodeName().equals(name)) {
                     tb.generateImpliedEndTags(name);
                     if (!name.equals(tb.currentElement().nodeName()))
                         tb.error(this);
                     tb.popStackToClose(name);
-                    break;
+                    return true; // Successfully handled: found and popped the matching tag
                 } else {
                     if (tb.isSpecial(node)) {
                         tb.error(this);
+                        return false; // Cannot pop through a special node
+                    }
+                }
+            }
+            // If the loop completes, it means the matching tag 'name' was not found on the stack.
+            // In HTML5, if a matching end tag is not found, it's a parse error and the token should be ignored.
+            // Returning 'false' here will cause HtmlTreeBuilder.processEndTag() to ignore the token,
+            // which aligns with the HTML5 parsing algorithm.
             return false;
         }
-                }
-            }
-            return true;
-        }
