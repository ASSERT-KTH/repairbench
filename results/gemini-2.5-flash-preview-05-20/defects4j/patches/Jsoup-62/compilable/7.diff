diff --git a/tmp/79cd2c60-2b34-465e-8486-87d4dec5a3a4_buggy.java b/tmp/cf3903e6-5331-4bc1-8441-b46e43a0ea99_fixed.java
index 7dc89ed..ae4622f 100644
--- a/tmp/79cd2c60-2b34-465e-8486-87d4dec5a3a4_buggy.java
+++ b/tmp/cf3903e6-5331-4bc1-8441-b46e43a0ea99_fixed.java
@@ -1,20 +1,34 @@
         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
             String name = t.asEndTag().normalName();
             ArrayList<Element> stack = tb.getStack();
             for (int pos = stack.size() -1; pos >= 0; pos--) {
                 Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
+                // HTML tag names are case-insensitive for matching purposes, even when
+                // ParseSettings.preserveCase is enabled for DOM representation.
+                // The normalName from the token might be lowercased by CharacterReader,
+                // while node.nodeName() preserves the original case.
+                // Using equalsIgnoreCase ensures correct matching regardless of case differences.
+                if (node.nodeName().equalsIgnoreCase(name)) {
                     tb.generateImpliedEndTags(name);
+                    // This error check compares the normalized name of the end tag (which might be lowercase)
+                    // with the nodeName of the current element (which preserves original case).
+                    // If cases differ (e.g., 'x' vs 'X'), it still triggers an error,
+                    // as it signifies a deviation from perfect case matching as might be desired
+                    // by ParseSettings.preserveCase, but the tag is still considered found for closing.
                     if (!name.equals(tb.currentElement().nodeName()))
                         tb.error(this);
                     tb.popStackToClose(name);
                     break;
                 } else {
                     if (tb.isSpecial(node)) {
                         tb.error(this);
                         return false;
                     }
                 }
             }
+            // If the loop completes without finding a matching tag by equalsIgnoreCase,
+            // or without encountering a special tag that returns false,
+            // it implies the end tag should be ignored (as per HTML5 spec for unmatched end tags),
+            // which is signaled by returning true here, indicating it was "handled" by ignoring.
             return true;
         }
\ No newline at end of file
