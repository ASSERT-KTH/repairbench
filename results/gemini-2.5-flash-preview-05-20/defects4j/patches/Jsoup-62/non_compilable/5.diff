diff --git a/tmp/3ec37d33-9a74-4e8c-9fab-fdf3da93a643_buggy.java b/tmp/3e1ffeab-66fc-4a7b-bec7-d3793981b266_fixed.java
index 7dc89ed..5c17990 100644
--- a/tmp/3ec37d33-9a74-4e8c-9fab-fdf3da93a643_buggy.java
+++ b/tmp/3e1ffeab-66fc-4a7b-bec7-d3793981b266_fixed.java
@@ -1,20 +1,27 @@
         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
+            // The `normalName()` of the end tag token is always lowercase.
             String name = t.asEndTag().normalName();
             ArrayList<Element> stack = tb.getStack();
             for (int pos = stack.size() -1; pos >= 0; pos--) {
                 Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
+                // When comparing element names for matching, use `normalName()` to ensure
+                // consistent case-insensitive comparison, especially when `ParseSettings.preserveCase`
+                // is true, as `node.nodeName()` would return the original case while `name` is lowercase.
+                if (node.normalName().equals(name)) { // FIX: Changed node.nodeName() to node.normalName()
                     tb.generateImpliedEndTags(name);
-                    if (!name.equals(tb.currentElement().nodeName()))
+                    // This error check should also use normalName() for consistency in comparison
+                    if (!name.equals(tb.currentElement().normalName())) // FIX: Changed tb.currentElement().nodeName() to tb.currentElement().normalName()
                         tb.error(this);
                     tb.popStackToClose(name);
                     break;
                 } else {
+                    // If a "special" element (like p, div, table, etc.) is encountered before the matching tag,
+                    // it indicates a parsing error according to HTML5 rules for certain contexts.
                     if (tb.isSpecial(node)) {
                         tb.error(this);
                         return false;
                     }
                 }
             }
             return true;
         }
\ No newline at end of file
