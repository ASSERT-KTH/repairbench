diff --git a/tmp/f31e3c74-9cca-43ee-8a69-4034beccaf71_buggy.java b/tmp/40355ac6-885d-4704-8b07-946173fdba64_fixed.java
index 7dc89ed..d304d7a 100644
--- a/tmp/f31e3c74-9cca-43ee-8a69-4034beccaf71_buggy.java
+++ b/tmp/40355ac6-885d-4704-8b07-946173fdba64_fixed.java
@@ -1,20 +1,26 @@
         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
-            String name = t.asEndTag().normalName();
+            // When ParseSettings.preserveCase is enabled, Element.nodeName() returns the original case.
+            // However, t.asEndTag().normalName() always returns the lowercase name.
+            // This mismatch causes the comparison 'node.nodeName().equals(name)' to fail
+            // if the original tag name contains uppercase characters (e.g., 'X' vs 'x').
+            // To ensure correct matching for case-sensitive parsing, we should use the original
+            // tag name from the end tag token for comparison.
+            String name = t.asEndTag().tagName(); 
             ArrayList<Element> stack = tb.getStack();
             for (int pos = stack.size() -1; pos >= 0; pos--) {
                 Element node = stack.get(pos);
                 if (node.nodeName().equals(name)) {
                     tb.generateImpliedEndTags(name);
                     if (!name.equals(tb.currentElement().nodeName()))
                         tb.error(this);
                     tb.popStackToClose(name);
                     break;
                 } else {
                     if (tb.isSpecial(node)) {
                         tb.error(this);
                         return false;
                     }
                 }
             }
             return true;
         }
\ No newline at end of file
