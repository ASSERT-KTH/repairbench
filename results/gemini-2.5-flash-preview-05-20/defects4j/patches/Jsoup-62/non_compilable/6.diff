diff --git a/tmp/d79bb52f-b2fb-47a9-b04d-2b2fb5982203_buggy.java b/tmp/1620dc67-794c-41f4-99c9-7a67b9186909_fixed.java
index 7dc89ed..10fec04 100644
--- a/tmp/d79bb52f-b2fb-47a9-b04d-2b2fb5982203_buggy.java
+++ b/tmp/1620dc67-794c-41f4-99c9-7a67b9186909_fixed.java
@@ -1,20 +1,28 @@
         boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {
-            String name = t.asEndTag().normalName();
+            String name = t.asEndTag().normalName(); // 'name' is always lowercase (e.g., "x")
             ArrayList<Element> stack = tb.getStack();
             for (int pos = stack.size() -1; pos >= 0; pos--) {
                 Element node = stack.get(pos);
-                if (node.nodeName().equals(name)) {
+                // Original: if (node.nodeName().equals(name)) {
+                // Bug: node.nodeName() returns the original case name (e.g., "X"), while 'name' is lowercase ("x").
+                // This comparison ("X".equals("x")) would incorrectly return false.
+                // Fix: Compare normal (lowercase) names to ensure correct case-insensitive matching,
+                // consistent with HtmlTreeBuilder's internal operations like popStackToClose.
+                if (node.normalName().equals(name)) {
                     tb.generateImpliedEndTags(name);
-                    if (!name.equals(tb.currentElement().nodeName()))
+                    // Original: if (!name.equals(tb.currentElement().nodeName()))
+                    // Bug: Similar inconsistent comparison as above.
+                    // Fix: Compare 'name' (lowercase) with currentElement's normalName (lowercase) for consistency.
+                    if (!name.equals(tb.currentElement().normalName()))
                         tb.error(this);
-                    tb.popStackToClose(name);
+                    tb.popStackToClose(name); // This function expects normalName (lowercase)
                     break;
                 } else {
                     if (tb.isSpecial(node)) {
                         tb.error(this);
                         return false;
                     }
                 }
             }
             return true;
         }
