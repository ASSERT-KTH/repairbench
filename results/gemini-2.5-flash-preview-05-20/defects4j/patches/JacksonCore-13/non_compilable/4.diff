diff --git a/tmp/e9ca9cc0-b4bf-4b7c-8c5e-33cd250226bb_buggy.java b/tmp/ef31e2d7-691c-4bdb-abef-717e94916f95_fixed.java
index e69de29..c57d1a0 100644
--- a/tmp/e9ca9cc0-b4bf-4b7c-8c5e-33cd250226bb_buggy.java
+++ b/tmp/ef31e2d7-691c-4bdb-abef-717e94916f95_fixed.java
@@ -0,0 +1,39 @@
+    private void _testFieldNameQuotingEnabled(JsonFactory f, boolean autoCloseJsonContent, boolean quoteFieldNames, String expected) throws IOException
+    {
+        ByteArrayOutputStream bout = new ByteArrayOutputStream();
+        JsonGenerator g = f.createGenerator(bout, JsonEncoding.UTF8);
+        
+        // Configure AUTO_CLOSE_JSON_CONTENT based on the second boolean argument
+        if (autoCloseJsonContent) {
+            g.enable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);
+        } else {
+            g.disable(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT);
+        }
+
+        // Configure QUOTE_FIELD_NAMES based on the third boolean argument.
+        // This parameter is likely intended to control field name quoting for the test,
+        // overriding the factory's default if necessary.
+        if (quoteFieldNames) {
+            g.enable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+        } else {
+            g.disable(JsonGenerator.Feature.QUOTE_FIELD_NAMES);
+        }
+        
+        // Note: The original signature might have named the third boolean argument 'autoCloseTarget'.
+        // However, given the context of 'testFieldNameQuotingEnabled' and the expected outputs,
+        // it's highly probable this argument is repurposed or intended to control field name quoting.
+        // The AUTO_CLOSE_TARGET feature itself typically doesn't affect the JSON string output for simple cases.
+
+        // Write a simple JSON object to test field naming
+        g.writeStartObject();
+        g.writeFieldName("foo");
+        g.writeNumber(1);
+        g.writeEndObject();
+        
+        // Close the generator to ensure all content is flushed to the output stream
+        g.close();
+
+        // Get the generated string and compare it with the expected output
+        String actual = bout.toString("UTF-8");
+        assertEquals(expected, actual);
+    }
\ No newline at end of file
