diff --git a/tmp/378fd6c5-1a74-48bf-9238-1cb85cad43df_buggy.java b/tmp/59f80b1d-8e05-4766-bc88-71805e956ae2_fixed.java
index e69de29..9b1a080 100644
--- a/tmp/378fd6c5-1a74-48bf-9238-1cb85cad43df_buggy.java
+++ b/tmp/59f80b1d-8e05-4766-bc88-71805e956ae2_fixed.java
@@ -0,0 +1,32 @@
+@Override
+public void writeFieldName(String name) throws IOException
+{
+    // 1. Context validation: ensures we are in an object and expect a field name.
+    //    Also handles writing the object entry separator (e.g., '{' for first entry, ',' for subsequent).
+    int status = _writeContext.writeFieldName(name);
+    if (status == JsonWriteContext.STATUS_EXPECT_VALUE) {
+        // 2. Write field name-value separator (e.g., ':')
+        _writeContext.writeValueSeparator();
+        
+        // 3. Main logic for quoting based on the QUOTE_FIELD_NAMES feature.
+        // The bug is typically that this feature is not correctly respected,
+        // leading to field names always being quoted or unquoted incorrectly.
+        if (isEnabled(JsonGenerator.Feature.QUOTE_FIELD_NAMES)) {
+            // Feature enabled: write the field name with quotes.
+            // In UTF8JsonGenerator, _writeFieldName is typically the method
+            // responsible for writing quoted field names, handling JSON string escaping.
+            _writeFieldName(name);
+        } else {
+            // FIX: Feature disabled: write the field name WITHOUT quotes.
+            // This requires calling a specific internal method that writes the raw
+            // field name bytes without adding quotation marks.
+            // In UTF8JsonGenerator, _writeRawFieldName is used for this purpose.
+            _writeRawFieldName(name);
+        }
+        return;
+    }
+    
+    // Handle invalid states for writing field names (e.g., not inside an object,
+    // or trying to write a field name when a value is expected).
+    _reportError("Can not write field name, current in: "+_writeContext.typeDesc());
+}
\ No newline at end of file
