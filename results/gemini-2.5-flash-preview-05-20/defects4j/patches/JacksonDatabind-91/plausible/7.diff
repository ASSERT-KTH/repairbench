diff --git a/tmp/7d5287a4-bc1f-462a-a679-c889030a0b18_buggy.java b/tmp/1f92f12a-ce39-45ba-ad21-1ede0b733746_fixed.java
index a5ff4fc..f6d2276 100644
--- a/tmp/7d5287a4-bc1f-462a-a679-c889030a0b18_buggy.java
+++ b/tmp/1f92f12a-ce39-45ba-ad21-1ede0b733746_fixed.java
@@ -1,17 +1,31 @@
     /**
      * Helper method used to prevent both caching and cache lookups for structured
      * types that have custom value handlers
      *
      * @since 2.8.11
      */
     private boolean _hasCustomHandlers(JavaType t) {
+        // First: check if the type 't' itself has a custom handler (value or type handler)
+        if (t.getValueHandler() != null || t.getTypeHandler() != null) {
+            return true;
+        }
+
+        // Second: if 't' is a container type, check its content type and key type (if applicable)
         if (t.isContainerType()) {
-            // First: value types may have both value and type handlers
+            // For collection-like, map-like, and reference types: check content type
             JavaType ct = t.getContentType();
             if (ct != null) {
-                return (ct.getValueHandler() != null) || (ct.getTypeHandler() != null);
-            // Second: map(-like) types may have value handler for key (but not type; keys are untyped)
+                if (ct.getValueHandler() != null || ct.getTypeHandler() != null) {
+                    return true;
+                }
+            }
+            // For map-like types: check key type's value handler (keys do not typically have type handlers)
+            JavaType kt = t.getKeyType();
+            if (kt != null) {
+                if (kt.getValueHandler() != null) {
+                    return true;
+                }
             }
         }
         return false;
     }
\ No newline at end of file
