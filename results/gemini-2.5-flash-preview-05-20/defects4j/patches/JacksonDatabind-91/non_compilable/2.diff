diff --git a/tmp/84c84d87-bb6a-4f6d-8bca-649843264391_buggy.java b/tmp/67ec1a0d-fe00-4403-b868-a2c928edaad4_fixed.java
index a5ff4fc..7e764eb 100644
--- a/tmp/84c84d87-bb6a-4f6d-8bca-649843264391_buggy.java
+++ b/tmp/67ec1a0d-fe00-4403-b868-a2c928edaad4_fixed.java
@@ -1,17 +1,49 @@
     /**
      * Helper method used to prevent both caching and cache lookups for structured
      * types that have custom value handlers
      *
      * @since 2.8.11
      */
     private boolean _hasCustomHandlers(JavaType t) {
-        if (t.isContainerType()) {
-            // First: value types may have both value and type handlers
+        if (!t.isContainerType()) {
+            return false;
+        }
+
+        // 1. Check if this container type has a custom deserializer/serializer specified for its content.
+        // This covers cases where annotations like @JsonDeserialize(contentUsing=...) or @JsonSerialize(contentUsing=...)
+        // are used directly on the property that holds this container type.
+        if (t.getContentDeserializer() != null) { // or getContentSerializer() != null for serialization
+            return true;
+        }
+
+        // 2. For Map-like types, check if a custom deserializer/serializer is specified for keys.
+        // This is crucial for the failing test case which uses @JsonDeserialize(keyUsing=...).
+        if (t.isMapLikeType()) {
+            if (t.getKeyDeserializer() != null) { // or getKeySerializer() != null for serialization
+                return true;
+            }
+        }
+
+        // 3. Check the content (value) type itself for value or type handlers.
+        // This was the logic present in the original code.
         JavaType ct = t.getContentType();
         if (ct != null) {
-                return (ct.getValueHandler() != null) || (ct.getTypeHandler() != null);
-            // Second: map(-like) types may have value handler for key (but not type; keys are untyped)
+            if ((ct.getValueHandler() != null) || (ct.getTypeHandler() != null)) {
+                return true;
             }
         }
+
+        // 4. For Map-like types, check the key type itself for value handlers.
+        // This implements the "Second" part of the original method's comment.
+        if (t.isMapLikeType()) {
+            JavaType kt = t.getKeyType();
+            if (kt != null) {
+                // As per comment, keys are generally untyped, so only value handlers are relevant.
+                if (kt.getValueHandler() != null) {
+                    return true;
+                }
+            }
+        }
+
         return false;
     }
\ No newline at end of file
