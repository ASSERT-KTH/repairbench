diff --git a/tmp/efe81cc9-46c4-4573-9bf3-fe0d4b2235f8_buggy.java b/tmp/a197a060-9902-491d-be27-9b05cc1889b0_fixed.java
index d68a69c..3cfae6f 100644
--- a/tmp/efe81cc9-46c4-4573-9bf3-fe0d4b2235f8_buggy.java
+++ b/tmp/a197a060-9902-491d-be27-9b05cc1889b0_fixed.java
@@ -1,9 +1,19 @@
     public void captureArgumentsFrom(Invocation i) {
+        Object[] actualArguments = i.getArguments();
         int k = 0;
         for (Matcher m : matchers) {
             if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(i.getArguments()[k]);
+                // Ensure that the index 'k' is within the bounds of the actual arguments array.
+                // This is crucial for scenarios where:
+                // 1. The number of matchers exceeds the number of actual arguments.
+                // 2. A vararg matcher (like AnyVararg) is used, but the actual invocation
+                //    has an empty vararg list (e.g., mock.foo() matching anyVararg()).
+                // In these cases, there is no corresponding actual argument at index 'k'
+                // to capture, so we skip the capture operation to prevent ArrayIndexOutOfBoundsException.
+                if (k < actualArguments.length) {
+                    ((CapturesArguments) m).captureFrom(actualArguments[k]);
+                }
             }
             k++;
         }
     }
\ No newline at end of file
