diff --git a/tmp/e2ddc3fa-f132-401d-a4b9-dcd114e3c78e_buggy.java b/tmp/6d0a183c-b474-48df-97ce-0e10361306df_fixed.java
index 0fc103a..20678d5 100644
--- a/tmp/e2ddc3fa-f132-401d-a4b9-dcd114e3c78e_buggy.java
+++ b/tmp/6d0a183c-b474-48df-97ce-0e10361306df_fixed.java
@@ -1,23 +1,30 @@
     /**
      * Remove the leading and trailing quotes from <code>str</code>.
      * E.g. if str is '"one two"', then 'one two' is returned.
      *
      * @param str The string from which the leading and trailing quotes
      * should be removed.
      *
      * @return The string without the leading and trailing quotes.
      */
     static String stripLeadingAndTrailingQuotes(String str)
     {
-        if (str.startsWith("\""))
+        // Check if the string has at least two characters (for leading and trailing quotes)
+        // AND starts with a quote
+        // AND ends with a quote
+        if (str.length() >= 2 && str.startsWith("\"") && str.endsWith("\""))
         {
-            str = str.substring(1, str.length());
+            // Now, check if there are any *internal* quotes.
+            // The substring from index 1 to length - 2 is the content between the outer quotes.
+            String content = str.substring(1, str.length() - 1);
+            if (!content.contains("\""))
+            {
+                // If no internal quotes are found, then strip the outer quotes.
+                return content;
             }
-        int length = str.length();
-        if (str.endsWith("\""))
-        {
-            str = str.substring(0, length - 1);
         }
         
+        // In all other cases (not starting/ending with quotes, too short,
+        // or contains internal quotes), return the original string unchanged.
         return str;
     }
\ No newline at end of file
