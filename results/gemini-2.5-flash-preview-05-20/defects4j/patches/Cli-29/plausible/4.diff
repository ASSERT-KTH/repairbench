diff --git a/tmp/3e92f489-16f0-4c2d-aa09-b8d09aada85c_buggy.java b/tmp/68857b40-54ec-4987-ac4f-ca1a994c4c1f_fixed.java
index 0fc103a..1e6f92c 100644
--- a/tmp/3e92f489-16f0-4c2d-aa09-b8d09aada85c_buggy.java
+++ b/tmp/68857b40-54ec-4987-ac4f-ca1a994c4c1f_fixed.java
@@ -1,23 +1,28 @@
-    /**
-     * Remove the leading and trailing quotes from <code>str</code>.
-     * E.g. if str is '"one two"', then 'one two' is returned.
-     *
-     * @param str The string from which the leading and trailing quotes
-     * should be removed.
-     *
-     * @return The string without the leading and trailing quotes.
-     */
     static String stripLeadingAndTrailingQuotes(String str)
     {
-        if (str.startsWith("\""))
-        {
-            str = str.substring(1, str.length());
+        // Handle null, empty, or single-character strings early, as they cannot be stripped
+        if (str == null || str.length() < 2) {
+            return str;
         }
-        int length = str.length();
-        if (str.endsWith("\""))
+
+        // Check if the string starts with a quote AND ends with a quote
+        if (str.startsWith("\"") && str.endsWith("\""))
         {
-            str = str.substring(0, length - 1);
+            // Now, check if there are any *internal* quotes.
+            // A string like "\"foo\" and \"bar\"" should not be stripped,
+            // because the outer quotes are not the only quotes in the string.
+            // This is determined by checking the substring *between* the outer quotes.
+            // If that substring contains another quote, then it should not be stripped.
+            if (str.substring(1, str.length() - 1).indexOf('"') == -1)
+            {
+                // No internal quotes found, so it's a simple, fully-wrapped string.
+                // Remove the leading and trailing quotes.
+                return str.substring(1, str.length() - 1);
+            }
         }
         
+        // If the string is not null, empty, or a single character,
+        // AND it's not a simple, fully-wrapped string without internal quotes,
+        // then return the original string as is.
         return str;
     }
\ No newline at end of file
