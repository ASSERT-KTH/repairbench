diff --git a/tmp/1f72267f-66d7-418c-9d9a-4b3868700f43_buggy.java b/tmp/eb9de08b-0c46-4420-ba25-c805bb8fe8ac_fixed.java
index 0fc103a..22aeb7a 100644
--- a/tmp/1f72267f-66d7-418c-9d9a-4b3868700f43_buggy.java
+++ b/tmp/eb9de08b-0c46-4420-ba25-c805bb8fe8ac_fixed.java
@@ -1,23 +1,36 @@
     /**
      * Remove the leading and trailing quotes from <code>str</code>.
      * E.g. if str is '"one two"', then 'one two' is returned.
      *
      * @param str The string from which the leading and trailing quotes
      * should be removed.
      *
      * @return The string without the leading and trailing quotes.
      */
     static String stripLeadingAndTrailingQuotes(String str)
     {
-        if (str.startsWith("\""))
-        {
-            str = str.substring(1, str.length());
+        // If the string is null or too short to have both leading and trailing quotes,
+        // or if it's just a single quote, return it as is.
+        if (str == null || str.length() < 2) {
+            return str;
+        }
+
+        // Check if the string starts with a quote and ends with a quote.
+        if (str.startsWith("\"") && str.endsWith("\"")) {
+            // Get the content between the potential leading and trailing quotes.
+            String content = str.substring(1, str.length() - 1);
+
+            // Crucially, only strip the quotes if the content itself does not
+            // contain any quotes. This handles cases like:
+            // "\"foo\"" -> "foo" (stripped)
+            // "\"foo\" and \"bar\"" -> "\"foo\" and \"bar\"" (not stripped because of internal quotes)
+            if (content.indexOf('"') == -1) {
+                return content;
             }
-        int length = str.length();
-        if (str.endsWith("\""))
-        {
-            str = str.substring(0, length - 1);
         }
         
+        // If the string doesn't start and end with quotes,
+        // or if it contains internal quotes (and thus is not a simple quoted literal),
+        // return the original string.
         return str;
     }
\ No newline at end of file
