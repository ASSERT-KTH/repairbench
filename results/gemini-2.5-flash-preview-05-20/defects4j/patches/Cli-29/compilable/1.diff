diff --git a/tmp/a0e9ed7d-64fe-47d1-9310-7820851174bc_buggy.java b/tmp/db48b16a-6710-4c9a-b37f-f099c1f4ee38_fixed.java
index 0fc103a..4a41387 100644
--- a/tmp/a0e9ed7d-64fe-47d1-9310-7820851174bc_buggy.java
+++ b/tmp/db48b16a-6710-4c9a-b37f-f099c1f4ee38_fixed.java
@@ -1,23 +1,31 @@
     /**
      * Remove the leading and trailing quotes from <code>str</code>.
      * E.g. if str is '"one two"', then 'one two' is returned.
      *
      * @param str The string from which the leading and trailing quotes
      * should be removed.
      *
      * @return The string without the leading and trailing quotes.
      */
     static String stripLeadingAndTrailingQuotes(String str)
     {
-        if (str.startsWith("\""))
-        {
-            str = str.substring(1, str.length());
-        }
-        int length = str.length();
-        if (str.endsWith("\""))
+        // According to the Javadoc example (""one two"" -> "one two") and the provided failing tests,
+        // the function should remove leading and trailing double quotes ONLY if they both exist
+        // and enclose the entire string.
+
+        // Check if the string has at least two characters (a single quote like '"' should not be modified).
+        // Then, check if it starts with a double quote (") and ends with a double quote (").
+        if (str.length() >= 2 && str.startsWith("\"") && str.endsWith("\""))
         {
-            str = str.substring(0, length - 1);
+            // If all conditions are met, remove the first character (the leading quote)
+            // and the last character (the trailing quote).
+            // substring(1, str.length() - 1) achieves this by starting at index 1
+            // and ending just before the last character.
+            return str.substring(1, str.length() - 1);
         }
         
+        // If the string does not meet the criteria (e.g., it's too short,
+        // doesn't start with a quote, or doesn't end with a quote),
+        // return the original string unmodified.
         return str;
     }
\ No newline at end of file
