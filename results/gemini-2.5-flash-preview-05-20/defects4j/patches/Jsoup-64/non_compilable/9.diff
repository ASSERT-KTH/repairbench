diff --git a/tmp/0926ee10-29a2-4f0e-af03-e67c6e4a128f_buggy.java b/tmp/c36e6492-aa1f-42e7-9542-84a67922244c_fixed.java
index 5eedc11..15467b0 100644
--- a/tmp/0926ee10-29a2-4f0e-af03-e67c6e4a128f_buggy.java
+++ b/tmp/c36e6492-aa1f-42e7-9542-84a67922244c_fixed.java
@@ -1,6 +1,19 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
-        tb.insert(startTag);
-        tb.tokeniser.transition(TokeniserState.Rawtext);
-        tb.markInsertionMode();
-        tb.transition(Text);
+        tb.insert(startTag); // Inserts the start tag (e.g., <style> or <noframes>) and adds it to the stack.
+
+        if (startTag.isSelfClosing()) {
+            // If the rawtext-expecting element is self-closing (e.g., <style />),
+            // it means it should be treated as an empty element and immediately closed.
+            // The `insert` method pushes it onto the stack, so we need to pop it immediately
+            // to simulate its immediate closure.
+            tb.pop(); // Remove the element from the stack of open elements.
+            tb.ackSelfClosingFlag(); // Acknowledge the self-closing flag, as per HTML5 spec.
+            // No need to transition to Rawtext mode or Text insertion mode, as there's no raw text content expected.
+        } else {
+            // If it's a regular start tag (e.g., <style> without the />),
+            // it means content is expected, and the parser should enter rawtext mode.
+            tb.tokeniser.transition(TokeniserState.Rawtext); // Switch tokeniser to Rawtext mode.
+            tb.markInsertionMode(); // Mark the current insertion mode to return to later.
+            tb.transition(Text); // Transition the tree builder to Text insertion mode for raw content.
+        }
     }
\ No newline at end of file
