diff --git a/tmp/38cd37c7-d01d-4b8b-8e98-a13915329f8b_buggy.java b/tmp/f9e3e69c-1364-4e5c-8295-ab59b02973aa_fixed.java
index 5eedc11..4e31961 100644
--- a/tmp/38cd37c7-d01d-4b8b-8e98-a13915329f8b_buggy.java
+++ b/tmp/f9e3e69c-1364-4e5c-8295-ab59b02973aa_fixed.java
@@ -1,6 +1,19 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
         tb.insert(startTag);
+        if (startTag.isSelfClosing()) {
+            // For rawtext elements (like <style>, <script>, <noframes>) that are encountered with a
+            // self-closing flag (e.g., <style />), the HTML5 parsing specification dictates that
+            // these are considered parse errors, and the element should be immediately popped
+            // from the stack of open elements. This effectively treats them as an empty tag,
+            // like <style></style>.
+            // Crucially, we do *not* transition the tokeniser to Rawtext state or the insertion
+            // mode to Text, as there is no content to parse as raw text.
+            tb.pop();
+        } else {
+            // For regular rawtext elements (e.g., <style>...</style>), where content is expected,
+            // transition the tokeniser to Rawtext mode and the tree builder to Text insertion mode.
             tb.tokeniser.transition(TokeniserState.Rawtext);
             tb.markInsertionMode();
             tb.transition(Text);
         }
+    }
\ No newline at end of file
