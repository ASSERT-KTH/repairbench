diff --git a/tmp/1b2a3781-6c81-4cdd-940e-b92dda50b1f5_buggy.java b/tmp/46605812-913f-4689-9e83-205ac26b630e_fixed.java
index 5eedc11..34a526c 100644
--- a/tmp/1b2a3781-6c81-4cdd-940e-b92dda50b1f5_buggy.java
+++ b/tmp/46605812-913f-4689-9e83-205ac26b630e_fixed.java
@@ -1,6 +1,20 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
+        // According to HTML5 parsing rules for non-void elements (like style, script, noframes),
+        // a self-closing flag (e.g., <style />) is generally treated as a parse error and ignored.
+        // However, Jsoup tests expect <style /> to be parsed as <style></style>.
+        // If a rawtext element is self-closing, it means it has no content.
+        // In this case, we should insert the start tag and immediately close it,
+        // without transitioning the tokeniser or insertion mode to handle raw text content.
+        if (startTag.isSelfClosing()) {
+            tb.insert(startTag); // Inserts the start tag (e.g., <style>)
+            tb.pop(); // Immediately closes the element (e.g., </style>)
+            return; // No need to transition to Rawtext mode or Text insertion mode
+        }
+
+        // Original logic for elements that are not self-closing or
+        // are expected to contain raw text content.
         tb.insert(startTag);
         tb.tokeniser.transition(TokeniserState.Rawtext);
         tb.markInsertionMode();
         tb.transition(Text);
     }
\ No newline at end of file
