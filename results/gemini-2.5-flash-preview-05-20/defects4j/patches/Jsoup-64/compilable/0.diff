diff --git a/tmp/f6b09280-6128-49c4-8700-f87729bf4bcb_buggy.java b/tmp/1df256c5-fc05-430d-be5c-7e4f73afb580_fixed.java
index 5eedc11..b788fe2 100644
--- a/tmp/f6b09280-6128-49c4-8700-f87729bf4bcb_buggy.java
+++ b/tmp/1df256c5-fc05-430d-be5c-7e4f73afb580_fixed.java
@@ -1,6 +1,22 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
         tb.insert(startTag);
+        if (startTag.isSelfClosing()) {
+            // If the start tag is self-closing (e.g., <style />),
+            // it implies an immediately closed element.
+            // According to HTML5 spec, rawtext elements like style/script
+            // should always require an explicit end tag, even if a self-closing
+            // flag is present. However, Jsoup's tests indicate it should
+            // handle `<style />` as `<style></style>`.
+            // Therefore, if it's explicitly self-closing, immediately close the element.
+            tb.pop();
+            // Do not transition the tokeniser or parser, as there's no raw text content to capture.
+        } else {
+            // For a regular rawtext start tag (e.g., <style>),
+            // transition the tokeniser to Rawtext state to capture all content
+            // until the corresponding end tag. Also, change the insertion mode
+            // to Text for parsing the element's content.
             tb.tokeniser.transition(TokeniserState.Rawtext);
-        tb.markInsertionMode();
-        tb.transition(Text);
+            tb.markInsertionMode(); // Save the current insertion mode to restore later.
+            tb.transition(Text); // Switch to Text insertion mode for raw text content.
+        }
     }
\ No newline at end of file
