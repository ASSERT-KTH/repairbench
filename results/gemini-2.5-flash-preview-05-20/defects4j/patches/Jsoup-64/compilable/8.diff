diff --git a/tmp/b4477aaf-b011-4538-bf33-45a1848fa382_buggy.java b/tmp/c503fcc4-570a-4193-bf7f-b2802e5e1e5b_fixed.java
index 5eedc11..5974f43 100644
--- a/tmp/b4477aaf-b011-4538-bf33-45a1848fa382_buggy.java
+++ b/tmp/c503fcc4-570a-4193-bf7f-b2802e5e1e5b_fixed.java
@@ -1,6 +1,19 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
+        if (startTag.isSelfClosing()) {
+            // If a rawtext element (like <style>, <script>, <textarea>) is self-closing,
+            // it means it has no raw text content. In this case, it should be treated
+            // as an empty element (e.g., <style></style>), and the tokeniser should
+            // not transition to Rawtext state.
+            tb.insertEmpty(startTag);
+        } else {
+            // For non-self-closing rawtext elements, proceed with normal rawtext handling:
+            // 1. Insert the start tag.
+            // 2. Transition the tokeniser to Rawtext state to collect raw text content.
+            // 3. Mark the current insertion mode (to return to it after the rawtext element closes).
+            // 4. Transition to Text insertion mode to process the raw text content.
             tb.insert(startTag);
             tb.tokeniser.transition(TokeniserState.Rawtext);
             tb.markInsertionMode();
             tb.transition(Text);
         }
+    }
\ No newline at end of file
