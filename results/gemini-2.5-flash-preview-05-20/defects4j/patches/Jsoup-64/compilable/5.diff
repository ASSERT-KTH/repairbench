diff --git a/tmp/3d45cb44-a349-4b36-96e1-eabe8d2190f6_buggy.java b/tmp/19979141-bb63-413c-a54e-53f9e1482dce_fixed.java
index 5eedc11..7ae50fb 100644
--- a/tmp/3d45cb44-a349-4b36-96e1-eabe8d2190f6_buggy.java
+++ b/tmp/19979141-bb63-413c-a54e-53f9e1482dce_fixed.java
@@ -1,6 +1,24 @@
     private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
+        // For elements like <style>, <script>, <noframes>, <textarea>, <title>,
+        // if they are self-closing (e.g., <style />), they should be treated as
+        // empty elements and not cause the tokeniser to switch to Rawtext state
+        // or the tree builder to transition to Text mode.
+        // The `tb.insert(startTag)` call for a self-closing tag already handles
+        // inserting the element and popping it from the stack.
+        if (startTag.isSelfClosing()) {
+            tb.insert(startTag);
+            // No further rawtext handling is needed for self-closing tags,
+            // as they don't contain raw text content.
+            return;
+        }
+
+        // If it's not self-closing, then proceed with the standard rawtext handling:
+        // insert the start tag, switch the tokeniser to rawtext mode to parse content
+        // as plain text until the corresponding end tag, mark the original insertion
+        // mode to return to later, and transition the builder to Text mode to handle
+        // the raw text content.
         tb.insert(startTag);
         tb.tokeniser.transition(TokeniserState.Rawtext);
         tb.markInsertionMode();
         tb.transition(Text);
     }
\ No newline at end of file
