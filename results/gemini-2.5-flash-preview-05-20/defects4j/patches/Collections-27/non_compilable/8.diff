diff --git a/tmp/028fa9eb-5b91-4fd3-94ea-f25e527c6fc1_buggy.java b/tmp/c21b549a-66f9-4a47-8f71-f8e43b243210_fixed.java
index e69de29..f38b5a5 100644
--- a/tmp/028fa9eb-5b91-4fd3-94ea-f25e527c6fc1_buggy.java
+++ b/tmp/c21b549a-66f9-4a47-8f71-f8e43b243210_fixed.java
@@ -0,0 +1,14 @@
+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
+        in.defaultReadObject();
+
+        // Validate the deserialized 'collectionClass' to prevent unsafe deserialization.
+        // The 'collectionClass' field must represent a type that is a Collection.
+        // If a malicious stream replaces it with an arbitrary or unsafe class (e.g., String.class),
+        // this check will throw an exception, preventing potential abuse.
+        if (collectionClass != null && !Collection.class.isAssignableFrom(collectionClass)) {
+            throw new UnsupportedOperationException(
+                "The deserialized collectionClass must be a Collection type for MultiValueMap to ensure safe deserialization. " +
+                "Attempted to deserialize with an unsafe collection type: " + collectionClass
+            );
+        }
+    }
\ No newline at end of file
