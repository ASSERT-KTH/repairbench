diff --git a/tmp/193cd154-c318-4935-959c-13f792702675_buggy.java b/tmp/f75e80ea-4cb5-4107-913d-d69a92f9daaa_fixed.java
index a7e6997..b7fa59c 100644
--- a/tmp/193cd154-c318-4935-959c-13f792702675_buggy.java
+++ b/tmp/f75e80ea-4cb5-4107-913d-d69a92f9daaa_fixed.java
@@ -1,12 +1,38 @@
     /**
      * Tells if the token looks like a short option.
      *
-     * @param token
+     * @param token The token to check.
+     * @return true if the token is a short option, false otherwise.
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        // Short options must start with a single hyphen and have at least one character after the hyphen.
+        if (!token.startsWith("-") || token.length() < 2)
+        {
+            return false;
+        }
+
+        // According to Option.Builder.option(String opt) and Options.addOption(String opt, ...),
+        // short option names can be multi-character (though conventionally they are single-character).
+        // This method needs to handle both cases:
+        // 1. The entire string after the hyphen is a multi-character short option name (e.g., "-t1" where "t1" is the option name).
+        // 2. The first character after the hyphen is a single-character short option name (e.g., "-tV" where "t" is the option name and "V" is a value).
+        // The order is important: try to match the full name first to avoid misinterpreting "t1" as "t" with "1" as value.
+
+        // Check if the entire string after the leading hyphen matches a defined short option.
+        // This handles multi-character short option names (e.g., -t1, -last).
+        if (options.hasShortOption(token.substring(1)))
+        {
+            return true;
+        }
+
+        // Check if the first character after the leading hyphen matches a defined short option.
+        // This handles single-character short options, including those with attached values (e.g., -S, -SV, -S=V).
+        // This is still needed because the previous check `token.substring(1)` would fail for "-Svalue" if "Svalue" is not a short option.
+        if (options.hasShortOption(token.substring(1, 2)))
+        {
+            return true;
+        }
 
-        // remove leading "-" and "=value"
+        return false;
     }
\ No newline at end of file
