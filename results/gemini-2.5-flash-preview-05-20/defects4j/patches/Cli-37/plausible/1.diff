diff --git a/tmp/2acfd208-ebbf-4dfb-bd39-16d16a587408_buggy.java b/tmp/b739fcec-702f-406c-b8bb-bd85cc585d13_fixed.java
index a7e6997..19d56c1 100644
--- a/tmp/2acfd208-ebbf-4dfb-bd39-16d16a587408_buggy.java
+++ b/tmp/b739fcec-702f-406c-b8bb-bd85cc585d13_fixed.java
@@ -1,12 +1,32 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        // This method checks if the token could be a short option in various forms,
+        // including multi-character short option names (as per CLI-265).
+        if (!token.startsWith("-") || token.length() < 2)
+        {
+            return false;
+        }
+
+        // Check if the entire string after the hyphen corresponds to a short option.
+        // This covers multi-character short options like "-t1" or "-last" (CLI-265 fix).
+        if (options.hasShortOption(token.substring(1)))
+        {
+            return true;
+        }
+
+        // Check if the first character after the hyphen corresponds to a short option.
+        // This covers traditional single-character short options, which might be followed
+        // by a value (e.g., -SV, -S=V) or part of bundled options (e.g., -S1S2 where S is a single option).
+        if (options.hasShortOption(token.substring(1, 2)))
+        {
+            return true;
+        }
 
-        // remove leading "-" and "=value"
+        return false;
     }
\ No newline at end of file
