diff --git a/tmp/4b2ab699-0719-46d7-a145-499ed6b373bd_buggy.java b/tmp/1b5b8c65-1d5b-44be-9f29-b9f0842a4f40_fixed.java
index a7e6997..bd90376 100644
--- a/tmp/4b2ab699-0719-46d7-a145-499ed6b373bd_buggy.java
+++ b/tmp/1b5b8c65-1d5b-44be-9f29-b9f0842a4f40_fixed.java
@@ -1,12 +1,31 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        if (!token.startsWith("-") || token.length() < 2) {
+            return false;
+        }
+
+        // remove leading "-"
+        String optNameCandidate = token.substring(1);
+
+        // Check if the token (or part before '=') matches a defined short option.
+        // This handles multi-character short option names like "-t1" or "-last".
+        int equalSignIndex = optNameCandidate.indexOf('=');
+        String potentialShortOptionName = (equalSignIndex == -1) ? optNameCandidate : optNameCandidate.substring(0, equalSignIndex);
+
+        if (options.hasShortOption(potentialShortOptionName)) {
+            return true;
+        }
 
-        // remove leading "-" and "=value"
+        // If the full potential name doesn't match, check if just the first character
+        // is a defined short option. This covers cases like:
+        // - "-SV" where 'S' is the short option and 'V' is its attached value.
+        // - "-S1S2" where 'S1' is the first short option in a combined sequence.
+        // (The `token.length() >= 2` check ensures `optNameCandidate` has at least one character.)
+        return options.hasShortOption(optNameCandidate.substring(0, 1));
     }
\ No newline at end of file
