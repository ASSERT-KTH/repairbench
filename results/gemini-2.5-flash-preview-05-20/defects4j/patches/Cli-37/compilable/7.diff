diff --git a/tmp/eabe71a8-18f2-447a-9530-22e578b83199_buggy.java b/tmp/b4f827a4-00f2-4502-9120-64761785a65a_fixed.java
index a7e6997..3487f52 100644
--- a/tmp/eabe71a8-18f2-447a-9530-22e578b83199_buggy.java
+++ b/tmp/b4f827a4-00f2-4502-9120-64761785a65a_fixed.java
@@ -1,12 +1,29 @@
     /**
      * Tells if the token looks like a short option.
      *
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        return token.startsWith("-") && token.length() >= 2 && options.hasShortOption(token.substring(1, 2));
+        if (!token.startsWith("-") || token.length() < 2)
+        {
+            return false;
+        }
+
+        // The name of the option, without the leading dash.
+        String optName = token.substring(1);
+
+        // If the entire 'optName' corresponds to a defined long option,
+        // then this token should be treated as a long option, not a short one.
+        // This gives precedence to long options that happen to start with a single hyphen,
+        // preventing them from being misidentified as short options potentially with values or bundled options.
+        if (options.hasLongOption(optName))
+        {
+            return false;
+        }
 
-        // remove leading "-" and "=value"
+        // Otherwise, it's a short option if its first character is a registered short option.
+        // This covers traditional short options like -S, -SV, -S=V, -S1S2.
+        return options.hasShortOption(optName.substring(0, 1));
     }
\ No newline at end of file
