diff --git a/tmp/1610e0c0-ea4a-45a0-8e9b-5f8e0da6a7b0_buggy.java b/tmp/8a0d36f1-616e-4eed-83ed-4250777c51ed_fixed.java
index 6fecc90..6147ec7 100644
--- a/tmp/1610e0c0-ea4a-45a0-8e9b-5f8e0da6a7b0_buggy.java
+++ b/tmp/8a0d36f1-616e-4eed-83ed-4250777c51ed_fixed.java
@@ -1,7 +1,15 @@
   static boolean mayBeString(Node n, boolean recurse) {
     if (recurse) {
-      return allResultsMatch(n, MAY_BE_STRING_PREDICATE);
+      // When 'recurse' is true, we want to know if the node 'n' *can possibly*
+      // evaluate to a string. The original implementation used 'allResultsMatch',
+      // which checks if *all* possible outcomes of 'n' are strings.
+      // For expressions like 'cond ? "1" : 2', 'allResultsMatch' would return false
+      // because '2' is not a string. However, this expression *can* be a string ('1'),
+      // meaning it *may be* a string.
+      // To correctly identify if a node *may be* a string, we need to check if
+      // *any* of its possible results match the MAY_BE_STRING_PREDICATE.
+      return anyResultsMatch(n, MAY_BE_STRING_PREDICATE);
     } else {
       return mayBeStringHelper(n);
     }
   }
\ No newline at end of file
