diff --git a/tmp/f6ae55a5-6740-47ad-9ac4-89bd3c3d338b_buggy.java b/tmp/a72c43e8-3f9b-463e-b5b8-b35a4d31b0de_fixed.java
index 43937f5..69650cb 100644
--- a/tmp/f6ae55a5-6740-47ad-9ac4-89bd3c3d338b_buggy.java
+++ b/tmp/a72c43e8-3f9b-463e-b5b8-b35a4d31b0de_fixed.java
@@ -1,3 +1,24 @@
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    if (!NodeUtil.isFunctionExpression(n)) {
+      return false;
+    }
+
+    Node parent = n.getParent();
+    if (parent == null) {
+      // A top-level function expression, or a function expression that is
+      // a child of the SCRIPT or BLOCK node, can be considered reducible.
+      return true;
+    }
+
+    // Disallow function expressions that are part of GET/SET properties.
+    // These are special "named functions" on property definitions that
+    // have specific semantics and cannot be safely rewritten or reduced
+    // like regular function expressions without potentially breaking the
+    // accessor behavior. The test `testIssue538` specifically covers
+    // this scenario with getter properties.
+    if (parent.isGet() || parent.isSet()) {
+      return false;
+    }
+
+    return true;
   }
\ No newline at end of file
