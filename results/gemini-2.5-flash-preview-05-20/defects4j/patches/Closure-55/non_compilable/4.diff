diff --git a/tmp/b28cdae5-df5d-463d-8b9c-7349141860d5_buggy.java b/tmp/bf60fd77-fcf7-43ff-889a-4eb3e313b669_fixed.java
index 43937f5..b69aa3b 100644
--- a/tmp/b28cdae5-df5d-463d-8b9c-7349141860d5_buggy.java
+++ b/tmp/bf60fd77-fcf7-43ff-889a-4eb3e313b669_fixed.java
@@ -1,3 +1,19 @@
   private static boolean isReduceableFunctionExpression(Node n) {
-    return NodeUtil.isFunctionExpression(n);
+    // A function expression is "reduceable" if it's a FUNCTION node and
+    // it's not the body of a getter or setter definition.
+    // Getter and setter functions are special and usually not intended for
+    // general function rewriting/reduction, as they are intrinsically tied
+    // to property definitions and their transformation might break semantics.
+    if (!NodeUtil.isFunctionExpression(n)) {
+      return false;
+    }
+
+    Node parent = n.getParent();
+    // If the function's parent is a GETTER_DEF or SETTER_DEF, it's a getter/setter body.
+    // These should not be considered "reduceable" by the FunctionRewriter.
+    if (parent != null && (parent.isGetterDef() || parent.isSetterDef())) {
+      return false;
+    }
+
+    return true;
   }
\ No newline at end of file
