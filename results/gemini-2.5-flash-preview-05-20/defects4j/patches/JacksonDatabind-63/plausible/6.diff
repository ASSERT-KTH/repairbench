diff --git a/tmp/b917bb11-6150-41a2-92d6-95489a22a21c_buggy.java b/tmp/dcb3ab37-4a38-4974-ab52-423bd27e5340_fixed.java
index f955f47..5aa5c85 100644
--- a/tmp/b917bb11-6150-41a2-92d6-95489a22a21c_buggy.java
+++ b/tmp/dcb3ab37-4a38-4974-ab52-423bd27e5340_fixed.java
@@ -1,34 +1,39 @@
         public String getDescription() {
             if (_desc == null) {
                 StringBuilder sb = new StringBuilder();
 
                 if (_from == null) { // can this ever occur?
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
-                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
-                    if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
-                    }
+                    // As per [databind#1403], `getSimpleName()` is not good as it drops enclosing class
+                    // for inner classes. `getName()` provides the full name including package and
+                    // '$'-separated enclosing class names (e.g., `com.example.Outer$Inner`).
+                    // However, `getName()` produces "ugly" names for arrays (e.g., `[Ljava.lang.String;`).
+                    // `getSimpleName()` on the other hand provides better names for arrays (e.g., `String[]`).
+                    // So, we use a conditional approach:
+                    if (cls.isArray()) {
+                        // For array types, simpleName gives a readable format (e.g., "String[]")
+                        // ClassUtil.getPackageName(cls) would typically be null for array types, so no package prefix.
                         sb.append(cls.getSimpleName());
+                    } else {
+                        // For non-array types, getName() provides the complete class name, including
+                        // package and handling of inner classes correctly (e.g., "com.example.Outer$Inner").
+                        sb.append(cls.getName());
+                    }
                 }
                 sb.append('[');
                 if (_fieldName != null) {
                     sb.append('"');
                     sb.append(_fieldName);
                     sb.append('"');
                 } else if (_index >= 0) {
                     sb.append(_index);
                 } else {
                     sb.append('?');
                 }
                 sb.append(']');
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file
