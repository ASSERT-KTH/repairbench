diff --git a/tmp/729c19a4-e9d8-4e34-9785-4d511123f92a_buggy.java b/tmp/f342d9e3-8378-4936-9e0d-dda98811437b_fixed.java
index 3cb9232..defd912 100644
--- a/tmp/729c19a4-e9d8-4e34-9785-4d511123f92a_buggy.java
+++ b/tmp/f342d9e3-8378-4936-9e0d-dda98811437b_fixed.java
@@ -1,26 +1,32 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
+        // If JsonUnwrapped is present, it implies the property itself has no external name,
+        // but its contents should be merged into the parent. Thus, an empty name.
+        if (_hasAnnotation(a, JsonUnwrapped.class)) {
+            return PropertyName.construct("");
+        }
+
         String name = null;
 
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
                 /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
                  *   it's actually bit tricky to do it more efficiently (meta-annotations
                  *   add more lookups; AnnotationMap costs etc)
                  */
             } else if (_hasAnnotation(a, JsonSerialize.class)
                     || _hasAnnotation(a, JsonView.class)
                     || _hasAnnotation(a, JsonRawValue.class)) {
                 name = "";
             } else {
                 return null;
             }
         }
         return PropertyName.construct(name);
     }
\ No newline at end of file
