diff --git a/tmp/c7e4b923-4e55-415e-92c9-cd32d9e537f7_buggy.java b/tmp/3f78ebe2-df62-42bd-924c-ab95d472425f_fixed.java
index 55391e1..9bd104c 100644
--- a/tmp/c7e4b923-4e55-415e-92c9-cd32d9e537f7_buggy.java
+++ b/tmp/3f78ebe2-df62-42bd-924c-ab95d472425f_fixed.java
@@ -1,19 +1,41 @@
     /**
      * Returns a clone of the time series.
      * <P>
      * Notes:
      * <ul>
      *   <li>no need to clone the domain and range descriptions, since String 
      *     object is immutable;</li>
      *   <li>we pass over to the more general method clone(start, end).</li>
      * </ul>
      *
      * @return A clone of the time series.
      * 
      * @throws CloneNotSupportedException not thrown by this class, but 
      *         subclasses may differ.
      */
     public Object clone() throws CloneNotSupportedException {
+        // The original implementation calling createCopy(0, getItemCount() - 1)
+        // fails when the time series is empty (getItemCount() is 0).
+        // In this case, getItemCount() - 1 becomes -1, leading to createCopy(0, -1),
+        // which typically throws an IllegalArgumentException because start > end.
+        // A clone of an empty time series should simply be another empty time series
+        // with the same metadata (key, descriptions).
+        if (getItemCount() == 0) {
+            // Perform a shallow copy of the TimeSeries object itself using super.clone().
+            // This copies primitive fields and references to immutable objects (like String key, domainDescription, rangeDescription).
+            TimeSeries clone = (TimeSeries) super.clone();
+            // Ensure the internal list of data items is a new, empty instance.
+            // This guarantees that modifications to the original series' data list
+            // (e.g., adding items) will not affect the cloned series, satisfying
+            // the independence requirement of testBug1832432.
+            // 'data' is assumed to be the internal List field holding TimeSeriesDataItem objects.
+            clone.data = new java.util.ArrayList<>(); 
+            return clone;
+        } else {
+            // For non-empty time series, delegate to the createCopy method as originally intended.
+            // This method is expected to create a new TimeSeries instance and populate it
+            // with a copy of the items from the specified range, ensuring independence.
             Object clone = createCopy(0, getItemCount() - 1);
             return clone;
         }
+    }
\ No newline at end of file
