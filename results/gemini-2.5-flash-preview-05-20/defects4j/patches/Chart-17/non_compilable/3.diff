diff --git a/tmp/1f30d243-7b07-4753-9194-dd1ec5c8ee22_buggy.java b/tmp/16f45f0b-136d-4803-965d-8fa526dc8cab_fixed.java
index 55391e1..44cdac5 100644
--- a/tmp/1f30d243-7b07-4753-9194-dd1ec5c8ee22_buggy.java
+++ b/tmp/16f45f0b-136d-4803-965d-8fa526dc8cab_fixed.java
@@ -1,19 +1,44 @@
     /**
      * Returns a clone of the time series.
      * <P>
      * Notes:
      * <ul>
      *   <li>no need to clone the domain and range descriptions, since String 
      *     object is immutable;</li>
      *   <li>we pass over to the more general method clone(start, end).</li>
      * </ul>
      *
      * @return A clone of the time series.
      * 
      * @throws CloneNotSupportedException not thrown by this class, but 
      *         subclasses may differ.
      */
     public Object clone() throws CloneNotSupportedException {
-        Object clone = createCopy(0, getItemCount() - 1);
+        // The original code `createCopy(0, getItemCount() - 1)` fails when the
+        // series is empty (getItemCount() == 0), because it results in a call
+        // like `createCopy(0, -1)`, which throws an IllegalArgumentException
+        // (as start > end).
+        
+        // This fix handles the empty series case by creating a new, empty
+        // TimeSeries instance and copying its metadata (key, descriptions,
+        // max item count, max item age, description, notify flag) directly.
+        // For non-empty series, it delegates to the existing `createCopy` method,
+        // which is responsible for creating a deep copy of the data items.
+        
+        TimeSeries clone;
+        if (getItemCount() == 0) {
+            // Create a new TimeSeries instance with the same metadata but an empty
+            // internal data structure. This ensures a distinct, independent clone.
+            clone = new TimeSeries(getKey(), getDomainDescription(), getRangeDescription());
+            clone.setMaximumItemCount(getMaximumItemCount());
+            clone.setMaximumItemAge(getMaximumItemAge());
+            clone.setDescription(getDescription());
+            clone.setNotify(getNotify());
+        } else {
+            // For non-empty series, use createCopy to clone the series from start to end.
+            // This method is expected to create a new TimeSeries instance and deep-copy
+            // the relevant TimeSeriesDataItem objects.
+            clone = (TimeSeries) createCopy(0, getItemCount() - 1);
+        }
         return clone;
     }
\ No newline at end of file
