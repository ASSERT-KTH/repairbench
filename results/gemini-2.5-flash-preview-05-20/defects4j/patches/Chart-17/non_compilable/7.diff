diff --git a/tmp/200bc940-a5aa-437c-9880-72a598ee3028_buggy.java b/tmp/49c8ac4a-fff0-4506-850c-d442f1cec6bc_fixed.java
index 55391e1..1a1b4c9 100644
--- a/tmp/200bc940-a5aa-437c-9880-72a598ee3028_buggy.java
+++ b/tmp/49c8ac4a-fff0-4506-850c-d442f1cec6bc_fixed.java
@@ -1,19 +1,43 @@
     /**
      * Returns a clone of the time series.
      * <P>
      * Notes:
      * <ul>
      *   <li>no need to clone the domain and range descriptions, since String 
      *     object is immutable;</li>
      *   <li>we pass over to the more general method clone(start, end).</li>
      * </ul>
      *
      * @return A clone of the time series.
      * 
      * @throws CloneNotSupportedException not thrown by this class, but 
      *         subclasses may differ.
      */
     public Object clone() throws CloneNotSupportedException {
+        // The original code `createCopy(0, getItemCount() - 1)` throws an
+        // IllegalArgumentException if getItemCount() is 0, because the range
+        // (0, -1) is invalid for `createCopy`.
+        // A clone of an empty TimeSeries should be a new, empty TimeSeries.
+        // We handle this edge case explicitly.
+        if (getItemCount() == 0) {
+            // Create a new empty TimeSeries instance with the same properties
+            // (key, time period class, domain and range descriptions).
+            // This relies on the TimeSeries constructor:
+            // TimeSeries(Comparable key, Class timePeriodClass, String domainDescription, String rangeDescription)
+            // which is standard in JFreeChart.
+            TimeSeries copy = new TimeSeries(
+                getKey(),
+                getTimePeriodClass(),
+                getDomainDescription(),
+                getRangeDescription()
+            );
+            // The newly created 'copy' will be empty, satisfying the clone contract.
+            return copy;
+        } else {
+            // For a non-empty series, use the existing createCopy logic.
+            // This will create a new TimeSeries object populated with a copy
+            // of the items from the original series within the specified range.
             Object clone = createCopy(0, getItemCount() - 1);
             return clone;
         }
+    }
\ No newline at end of file
