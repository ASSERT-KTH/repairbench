diff --git a/tmp/22a3a705-5ca7-4a53-b720-aca410598df5_buggy.java b/tmp/dab97c37-eff9-4864-aee9-827fccf27045_fixed.java
index 6e238e7..e196bd7 100644
--- a/tmp/22a3a705-5ca7-4a53-b720-aca410598df5_buggy.java
+++ b/tmp/dab97c37-eff9-4864-aee9-827fccf27045_fixed.java
@@ -1,15 +1,27 @@
     /**
      * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
      *
      * @param p1 the first point
      * @param p2 the second point
      * @return the L<sub>2</sub> distance between the two points
+     * @throws IllegalArgumentException if p1 or p2 are null, or if they have different dimensions.
      */
     public static double distance(int[] p1, int[] p2) {
+      // Prevent NullPointerException if either point array is null.
+      if (p1 == null || p2 == null) {
+          throw new IllegalArgumentException("Points cannot be null.");
+      }
+
+      // Ensure points have the same dimension for Euclidean distance calculation.
+      // This also prevents potential ArrayIndexOutOfBoundsException if p2.length < p1.length.
+      if (p1.length != p2.length) {
+          throw new IllegalArgumentException("Points must have the same dimension.");
+      }
+
       int sum = 0;
       for (int i = 0; i < p1.length; i++) {
           final int dp = p1[i] - p2[i];
           sum += dp * dp;
       }
       return Math.sqrt(sum);
     }
\ No newline at end of file
