diff --git a/tmp/abfac14a-e781-4bd1-9007-db5518d6cab1_buggy.java b/tmp/86b19776-f971-48be-9568-62c3a47d086f_fixed.java
index 25c13b3..8553e26 100644
--- a/tmp/abfac14a-e781-4bd1-9007-db5518d6cab1_buggy.java
+++ b/tmp/86b19776-f971-48be-9568-62c3a47d086f_fixed.java
@@ -1,15 +1,26 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
+        if (d > 2.0) {
+            // use mean (valid only for d > 2)
             ret = d / (d - 2.0);
+        } else {
+            // For d <= 2, the mean is undefined or negative.
+            // Use a heuristic based on p, similar to what's found in
+            // Apache Commons Math's FDistribution implementation for robustness.
+            if (p < 0.5) {
+                ret = 1.0 / (1.0 + (1.0 / d));
+            } else {
+                ret = d + 1.0;
+            }
+        }
         return ret;
     }
\ No newline at end of file
