diff --git a/tmp/eb817076-a0f0-4bec-8995-78ec839e3572_buggy.java b/tmp/8fd51283-ffde-4031-a0d5-20067ca93701_fixed.java
index 25c13b3..f594b66 100644
--- a/tmp/eb817076-a0f0-4bec-8995-78ec839e3572_buggy.java
+++ b/tmp/8fd51283-ffde-4031-a0d5-20067ca93701_fixed.java
@@ -1,15 +1,23 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
-        double ret;
         double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
-        return ret;
+        // The mean of the F-distribution is defined as d / (d - 2.0) only for d > 2.0.
+        // If d <= 2.0, the mean is undefined or infinite, and the formula
+        // results in a non-positive or division-by-zero value, which is not
+        // a valid initial guess for a domain that starts at 0.
+        if (d > 2.0) {
+            return d / (d - 2.0);
+        } else {
+            // For d <= 2.0, return a reasonable positive default value.
+            // 1.0 is a common default initial guess in similar distributions
+            // when the mean is not applicable or leads to an invalid value.
+            return 1.0;
+        }
     }
\ No newline at end of file
