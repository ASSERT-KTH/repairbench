diff --git a/tmp/a38f3fa1-769d-4f2d-adf4-d9ffae3907f3_buggy.java b/tmp/4f2e2e5a-e51c-4ce9-be47-239624c472ba_fixed.java
index 229b3e7..d291194 100644
--- a/tmp/a38f3fa1-769d-4f2d-adf4-d9ffae3907f3_buggy.java
+++ b/tmp/4f2e2e5a-e51c-4ce9-be47-239624c472ba_fixed.java
@@ -1,55 +1,57 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         if (nextLineTabStop >= width)
         {
             // stops infinite loop happening
             throw new IllegalStateException("Total width is less than the width of the argument and indent " +
                                             "- no room for the description");
         }
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             }
             
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+            // This line was changed in the fix for CLI-162 from 'pos == width - 1' to 'pos == nextLineTabStop - 1'.
+            // Reverting this change as it appears to have introduced a regression, leading to incorrect wrapping or exceptions.
+            if ( (text.length() > width) && (pos == width - 1) ) 
             {
                 pos = width;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
