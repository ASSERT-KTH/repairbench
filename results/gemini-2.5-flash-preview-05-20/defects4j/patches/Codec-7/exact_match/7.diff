diff --git a/tmp/2e594018-eca2-46f7-85d2-95fe0055b548_buggy.java b/tmp/c17400df-c0f9-442c-8e37-77d539703b96_fixed.java
index 31c6a4b..b52fe5f 100644
--- a/tmp/2e594018-eca2-46f7-85d2-95fe0055b548_buggy.java
+++ b/tmp/c17400df-c0f9-442c-8e37-77d539703b96_fixed.java
@@ -1,11 +1,19 @@
     /**
      * Encodes binary data using the base64 algorithm into 76 character blocks separated by CRLF.
      *
      * @param binaryData
      *            binary data to encode
      * @return String containing Base64 characters.
      * @since 1.4
      */    
     public static String encodeBase64String(byte[] binaryData) {
-        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));
+        // The current implementation passes 'true' for the 'isChunked' parameter,
+        // which causes the output to be broken into 76-character blocks with CRLF.
+        // However, the provided tests, especially testRfc4648Section10Encode,
+        // expect the output to *not* contain CRLF for standard Base64 encoding.
+        // To pass these tests, the encoding should not chunk the output.
+        // Changing 'true' to 'false' ensures no line wrapping.
+        // Alternatively, calling encodeBase64(binaryData) without the boolean parameter
+        // would also work, as that method defaults to unchunked output.
+        return StringUtils.newStringUtf8(encodeBase64(binaryData, false));
     }
\ No newline at end of file
