diff --git a/tmp/e7e7da27-f60e-4774-9dbb-e02d9b3e0003_buggy.java b/tmp/2e2c8ca6-0a50-44ab-8771-4c3e70655af7_fixed.java
index 072c672..df8816e 100644
--- a/tmp/e7e7da27-f60e-4774-9dbb-e02d9b3e0003_buggy.java
+++ b/tmp/2e2c8ca6-0a50-44ab-8771-4c3e70655af7_fixed.java
@@ -1,20 +1,25 @@
       @Override
       public int parseArguments(Parameters params) throws CmdLineException {
         String param = params.getParameter(0);
 
         if (param == null) {
+          // No value specified, like "--flag". Default to true.
           setter.addValue(true);
-          return 0;
+          return 0; // Consumes 0 parameters
         } else {
+          // Value specified, like "--flag=value".
           String lowerParam = param.toLowerCase();
           if (TRUES.contains(lowerParam)) {
             setter.addValue(true);
           } else if (FALSES.contains(lowerParam)) {
             setter.addValue(false);
           } else {
-            setter.addValue(true);
-            return 0;
+            // If the value is not "true" or "false" (case-insensitive),
+            // it's an invalid boolean value. Throw a CmdLineException.
+            // The original code incorrectly defaulted to true and consumed 0 parameters,
+            // leaving the invalid value unparsed, which could lead to further errors.
+            throw new CmdLineException(owner, "\"" + param + "\" is not a legal boolean value");
           }
-          return 1;
+          return 1; // Consumes 1 parameter (the value)
         }
       }
\ No newline at end of file
