diff --git a/tmp/72cbcb78-337c-485e-aa4f-e8c11772555f_buggy.java b/tmp/6fc05819-0136-406a-93ad-5c79902390a1_fixed.java
index 072c672..323f8f2 100644
--- a/tmp/72cbcb78-337c-485e-aa4f-e8c11772555f_buggy.java
+++ b/tmp/6fc05819-0136-406a-93ad-5c79902390a1_fixed.java
@@ -1,20 +1,27 @@
       @Override
       public int parseArguments(Parameters params) throws CmdLineException {
         String param = params.getParameter(0);
 
         if (param == null) {
+          // If no explicit value is provided (e.g., just --myflag), default to true.
+          // This consumes 0 arguments after the flag itself.
           setter.addValue(true);
           return 0;
         } else {
+          // An explicit value is provided (e.g., --myflag=true or --myflag true).
           String lowerParam = param.toLowerCase();
           if (TRUES.contains(lowerParam)) {
             setter.addValue(true);
           } else if (FALSES.contains(lowerParam)) {
             setter.addValue(false);
           } else {
-            setter.addValue(true);
-            return 0;
+            // If the provided parameter is not a recognized boolean string,
+            // it indicates an invalid argument. Throw an exception to signal this error.
+            // Previously, it would set value to true and return 0, which meant the
+            // invalid parameter was re-parsed, leading to unexpected behavior.
+            throw new CmdLineException("Expected a boolean value for this option, but got: " + param);
           }
+          // Consumed 1 argument (the explicit boolean string).
           return 1;
         }
       }
\ No newline at end of file
