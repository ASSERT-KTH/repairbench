diff --git a/tmp/92989d0f-8661-4d3b-b670-e8cbfa197a57_buggy.java b/tmp/af5a7a4c-2f99-4dd1-b4a2-ae5e91e3c173_fixed.java
index e3e3ec4..4a47096 100644
--- a/tmp/92989d0f-8661-4d3b-b670-e8cbfa197a57_buggy.java
+++ b/tmp/af5a7a4c-2f99-4dd1-b4a2-ae5e91e3c173_fixed.java
@@ -1,9 +1,16 @@
     /**
      * {@inheritDoc}
      *
      * For population size {@code N}, number of successes {@code m}, and sample
      * size {@code n}, the mean is {@code n * m / N}.
      */
     public double getNumericalMean() {
-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();
+        // The mean of the hypergeometric distribution is n * m / N.
+        // The original calculation was (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize().
+        // If getSampleSize() * getNumberOfSuccesses() results in a value that exceeds Integer.MAX_VALUE,
+        // an integer overflow would occur before the cast to double. This could lead to a
+        // negative intermediate product, and thus a negative mean, which is incorrect for this distribution.
+        // To prevent this potential integer overflow, one of the operands is cast to double
+        // before multiplication, ensuring the multiplication itself is performed using double precision.
+        return ((double) getSampleSize() * getNumberOfSuccesses()) / getPopulationSize();
     }
\ No newline at end of file
