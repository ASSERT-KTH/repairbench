diff --git a/tmp/5bc64233-31b2-4cff-a7b6-310d28c0c2a7_buggy.java b/tmp/28aa13db-54f3-4283-acfa-910711eb9457_fixed.java
index ce3d60f..8c461ec 100644
--- a/tmp/5bc64233-31b2-4cff-a7b6-310d28c0c2a7_buggy.java
+++ b/tmp/28aa13db-54f3-4283-acfa-910711eb9457_fixed.java
@@ -1,16 +1,27 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
-        int shift = 7;
+        int shift = 7; // Represents the bit position (0-7) for the current byte, 7 being the most significant bit.
         for (int i = 0; i < length; i++) {
+            // Get the i-th bit from the BitSet. If true, it's 1, else 0.
+            // Shift this bit to the 'shift' position in the 'cache' byte.
             cache |= ((bits.get(i) ? 1 : 0) << shift);
-            --shift;
-            if (shift == 0) {
-                header.write(cache);
-                shift = 7;
-                cache = 0;
+            --shift; // Move to the next lower bit position for the *next* bit.
+
+            // If shift becomes -1, it means the current byte is full (all 8 bits, from 7 down to 0, have been processed).
+            if (shift == -1) {
+                header.write(cache); // Write the full byte.
+                shift = 7; // Reset shift for the next byte.
+                cache = 0; // Reset cache.
             }
         }
-        if (length > 0 && shift > 0) {
+        // After the loop, check if there are any remaining bits in 'cache' that haven't been written.
+        // If 'shift' is still 7, it implies one of two scenarios:
+        // 1. 'length' was 0, so no bits were processed.
+        // 2. The last byte was perfectly filled (length was a multiple of 8), and 'shift' was reset to 7.
+        // In both these cases, we don't need to write anything more.
+        // If 'shift' is anything other than 7 (i.e., it's between 0 and 6 inclusive),
+        // it means we have a partial byte in 'cache' that needs to be written.
+        if (shift != 7) {
             header.write(cache);
         }
     }
\ No newline at end of file
