diff --git a/tmp/823c19c5-bf6b-4c0d-9ee7-dfa4abde76d1_buggy.java b/tmp/cb0ec9ad-dce1-437f-a99e-9c8c1e484b7f_fixed.java
index ce3d60f..751a66e 100644
--- a/tmp/823c19c5-bf6b-4c0d-9ee7-dfa4abde76d1_buggy.java
+++ b/tmp/cb0ec9ad-dce1-437f-a99e-9c8c1e484b7f_fixed.java
@@ -1,16 +1,20 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
         int shift = 7;
         for (int i = 0; i < length; i++) {
             cache |= ((bits.get(i) ? 1 : 0) << shift);
             --shift;
-            if (shift == 0) {
+            if (shift < 0) { // Correct condition: byte is full after shift became -1
                 header.write(cache);
                 shift = 7;
                 cache = 0;
             }
         }
-        if (length > 0 && shift > 0) {
+        // After the loop, write any remaining bits in cache.
+        // This should only happen if length is not a multiple of 8,
+        // AND length > 0 (to prevent writing an empty byte for length=0).
+        // The condition `shift != 7` correctly identifies if `cache` has unwritten bits.
+        if (length > 0 && shift != 7) { // Correct condition for final write
             header.write(cache);
         }
     }
