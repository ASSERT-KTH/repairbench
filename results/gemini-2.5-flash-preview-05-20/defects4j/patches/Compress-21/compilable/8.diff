diff --git a/tmp/c3bc7179-10a9-4db0-8f15-641e47f85e39_buggy.java b/tmp/4a60167e-fcdb-41f0-8484-5a7592f7f7cf_fixed.java
index ce3d60f..ce01884 100644
--- a/tmp/c3bc7179-10a9-4db0-8f15-641e47f85e39_buggy.java
+++ b/tmp/4a60167e-fcdb-41f0-8484-5a7592f7f7cf_fixed.java
@@ -1,16 +1,23 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
         int shift = 7;
         for (int i = 0; i < length; i++) {
+            // Place the current bit into the cache at the 'shift' position
             cache |= ((bits.get(i) ? 1 : 0) << shift);
-            --shift;
-            if (shift == 0) {
+            --shift; // Move to the next lower bit position for the next bit
+
+            // If shift goes below 0, it means we have just written the 8th bit (position 0),
+            // so the current byte is full and should be written.
+            if (shift < 0) {
                 header.write(cache);
-                shift = 7;
-                cache = 0;
+                shift = 7; // Reset for the next byte
+                cache = 0; // Clear cache for the next byte
             }
         }
-        if (length > 0 && shift > 0) {
+        // After the loop, if there are any remaining bits in the cache (i.e., shift is not 7,
+        // which means the last byte was not completely filled), write them.
+        // Also ensure length > 0 to prevent writing a byte if no bits were processed at all.
+        if (shift < 7 && length > 0) {
             header.write(cache);
         }
     }
\ No newline at end of file
