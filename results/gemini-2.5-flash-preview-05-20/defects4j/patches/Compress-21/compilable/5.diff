diff --git a/tmp/022ad1bf-cae1-4d54-9248-c0538c272fe1_buggy.java b/tmp/6f2c3f63-53e5-4990-90c4-c3c99b043497_fixed.java
index ce3d60f..57cf237 100644
--- a/tmp/022ad1bf-cae1-4d54-9248-c0538c272fe1_buggy.java
+++ b/tmp/6f2c3f63-53e5-4990-90c4-c3c99b043497_fixed.java
@@ -1,16 +1,21 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
         int shift = 7;
         for (int i = 0; i < length; i++) {
             cache |= ((bits.get(i) ? 1 : 0) << shift);
             --shift;
-            if (shift == 0) {
+            // A byte is full when shift becomes -1 (meaning bits 7 down to 0 have been placed).
+            if (shift < 0) {
                 header.write(cache);
-                shift = 7;
-                cache = 0;
+                shift = 7; // Reset shift for the next byte
+                cache = 0; // Clear cache for the next byte
             }
         }
-        if (length > 0 && shift > 0) {
+        // After the loop, if there are any remaining bits in cache (shift < 7),
+        // and length > 0 (to avoid writing an empty byte for length 0),
+        // write the final partial byte.
+        // If shift is 7, it means either length was 0, or the last byte was perfectly filled and written in the loop.
+        if (length > 0 && shift < 7) {
             header.write(cache);
         }
     }
