diff --git a/tmp/2495672c-cd05-4a59-a407-be1632880345_buggy.java b/tmp/2b56101d-01d3-44c2-b33b-ea648eb128d5_fixed.java
index ce3d60f..a3d22c6 100644
--- a/tmp/2495672c-cd05-4a59-a407-be1632880345_buggy.java
+++ b/tmp/2b56101d-01d3-44c2-b33b-ea648eb128d5_fixed.java
@@ -1,16 +1,24 @@
     private void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {
         int cache = 0;
-        int shift = 7;
+        int shift = 7; // Represents the current bit position (0-7) within the byte being assembled, starting from MSB (7)
         for (int i = 0; i < length; i++) {
+            // Get the i-th bit from the BitSet and shift it into the current cache byte.
+            // If bits.get(i) is true, it's 1, otherwise 0.
             cache |= ((bits.get(i) ? 1 : 0) << shift);
-            --shift;
-            if (shift == 0) {
+            --shift; // Prepare for the next bit, moving towards LSB
+            // If shift becomes -1, it means the bit just processed was placed at position 0,
+            // completing a full 8-bit byte. This byte should now be written.
+            if (shift == -1) {
                 header.write(cache);
-                shift = 7;
-                cache = 0;
+                shift = 7; // Reset shift for the next byte
+                cache = 0; // Reset cache for the next byte
             }
         }
-        if (length > 0 && shift > 0) {
+        // After the loop, check if there are any remaining bits in `cache` that haven't been written.
+        // This is true if `length` was greater than 0 (meaning bits were processed) AND
+        // `shift` is not 7 (its initial value or reset value after a full byte was written).
+        // If `shift` is not 7, it means `cache` contains a partial byte.
+        if (length > 0 && shift != 7) {
             header.write(cache);
         }
     }
\ No newline at end of file
