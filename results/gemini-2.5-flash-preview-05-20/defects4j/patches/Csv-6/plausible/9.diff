diff --git a/tmp/e0cff354-37b8-41e1-b15e-4eb7a82bc46d_buggy.java b/tmp/22d5cf15-93b6-46f9-9ec5-1699f2c4fb87_fixed.java
index 163b2e1..1a24a42 100644
--- a/tmp/e0cff354-37b8-41e1-b15e-4eb7a82bc46d_buggy.java
+++ b/tmp/22d5cf15-93b6-46f9-9ec5-1699f2c4fb87_fixed.java
@@ -1,13 +1,28 @@
     /**
      * Puts all values of this record into the given Map.
      *
      * @param map The Map to populate.
      * @return the given map.
      */
     <M extends Map<String, String>> M putIn(final M map) {
+        // 'mapping' is typically a Map<String, Integer> where key is header name and value is its column index.
+        // 'values' is a String[] containing the actual fields of the current CSV record.
         for (final Entry<String, Integer> entry : mapping.entrySet()) {
-            final int col = entry.getValue().intValue();
-                map.put(entry.getKey(), values[col]);
+            final String headerName = entry.getKey();
+            final int col = entry.getValue().intValue(); // The column index derived from the header definition.
+
+            // The actual number of values in this record (values.length) might be less
+            // than the number of defined headers. If 'col' is greater than or equal to
+            // values.length, it means this record does not have a value for this header.
+            // According to CSVFormat.withHeader() behavior for short records, missing
+            // columns should be represented as null values.
+            if (col < values.length) {
+                map.put(headerName, values[col]);
+            } else {
+                // If the column index is out of bounds for the actual record values,
+                // it implies a missing value for this header. Put null as its value.
+                map.put(headerName, null);
+            }
         }
         return map;
     }
\ No newline at end of file
