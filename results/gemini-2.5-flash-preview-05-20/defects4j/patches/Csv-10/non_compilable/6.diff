diff --git a/tmp/dd56102a-4207-46d8-83e9-1b45ba638a5b_buggy.java b/tmp/607216a0-a6bb-46f5-819d-16d73216a718_fixed.java
index 97f28e5..4ef56c2 100644
--- a/tmp/dd56102a-4207-46d8-83e9-1b45ba638a5b_buggy.java
+++ b/tmp/607216a0-a6bb-46f5-819d-16d73216a718_fixed.java
@@ -1,26 +1,36 @@
     /**
      * Creates a printer that will print values to the given stream following the CSVFormat.
      * <p>
      * Currently, only a pure encapsulation format or a pure escaping format is supported. Hybrid formats (encapsulation
      * and escaping with a different character) are not supported.
      * </p>
      * 
      * @param out
      *        stream to which to print. Must not be null.
      * @param format
      *        the CSV format. Must not be null.
      * @throws IOException
      *         thrown if the optional header cannot be printed.
      * @throws IllegalArgumentException
      *         thrown if the parameters of the format are inconsistent or if either out or format are null.
      */
     public CSVPrinter(final Appendable out, final CSVFormat format) throws IOException {
         Assertions.notNull(out, "out");
         Assertions.notNull(format, "format");
 
         this.out = out;
         this.format = format;
         this.format.validate();
-        // TODO: Is it a good idea to do this here instead of on the first call to a print method?
-        // It seems a pain to have to track whether the header has already been printed or not.
+
+        // Print the header if it is present in the format.
+        // This addresses the "TODO" comment regarding whether to print the header in the constructor
+        // or later, and resolves the test failure where the header is missing.
+        final String[] header = format.getHeader();
+        if (header != null) {
+            // Re-use printRecord to ensure proper quoting, delimiters, and line separators are applied to the header.
+            this.printRecord(header);
+            // Mark that the header has been printed to prevent re-printing by other methods later.
+            // Assumes 'headerPrinted' is a boolean field of the CSVPrinter class.
+            this.headerPrinted = true;
+        }
     }
\ No newline at end of file
