diff --git a/tmp/eda04cfb-3f8c-4566-83af-806cf7888991_buggy.java b/tmp/5755e6ef-29b6-4511-aee2-aaf4c1a01497_fixed.java
index 42b58d0..45b0f51 100644
--- a/tmp/eda04cfb-3f8c-4566-83af-806cf7888991_buggy.java
+++ b/tmp/5755e6ef-29b6-4511-aee2-aaf4c1a01497_fixed.java
@@ -1,19 +1,25 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
         TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
-            if (actualTypeArgument instanceof WildcardType) {
-                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
+            // Original:
+            // if (actualTypeArgument instanceof WildcardType) {
+            //     contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
+            // } else {
+            //     contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
+            // }
+
+            // Fix: Store the WildcardType directly instead of its resolved bound.
+            // This defers the resolution of the wildcard bounds, potentially breaking recursive cycles.
             contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
-            }
+            
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }
\ No newline at end of file
