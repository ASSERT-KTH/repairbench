diff --git a/tmp/7e2866af-2dd0-4b9e-9061-9f7839000f9e_buggy.java b/tmp/ca1d2de7-b7f9-4266-b48a-233ed6465a06_fixed.java
index 1bd0d7e..98fcb95 100644
--- a/tmp/7e2866af-2dd0-4b9e-9061-9f7839000f9e_buggy.java
+++ b/tmp/ca1d2de7-b7f9-4266-b48a-233ed6465a06_fixed.java
@@ -1,31 +1,39 @@
     /**
      * Get the ns uri of the specified node.
      * @param node Node to check
      * @return String ns uri
      */
     public static String getNamespaceURI(Node node) {
         if (node instanceof Document) {
             node = ((Document) node).getDocumentElement();
         }
 
+        // Assuming 'node' is an Element or DocumentElement here.
+        // If node could be other types like Attr, Text etc., a ClassCastException would occur.
+        // The current test failure points to a logical error, not a ClassCastException.
         Element element = (Element) node; 
 
         String uri = element.getNamespaceURI();
         if (uri == null) {
-            String prefix = getPrefix(node);
+            // If the standard DOM getNamespaceURI returns null,
+            // we try to find an explicit xmlns declaration up the hierarchy.
+            String prefix = getPrefix(node); // This gets the prefix of the 'node' itself.
             String qname = prefix == null ? "xmlns" : "xmlns:" + prefix;
     
-            Node aNode = node;
+            Node aNode = node; // Start searching from the current node
             while (aNode != null) {
                 if (aNode.getNodeType() == Node.ELEMENT_NODE) {
                     Attr attr = ((Element) aNode).getAttributeNode(qname);
                     if (attr != null) {
-                        return attr.getValue();
+                        String value = attr.getValue();
+                        // If the declared value is an empty string (e.g., from xmlns=""),
+                        // return null to conform with DOM's getNamespaceURI behavior for "no namespace".
+                        return "".equals(value) ? null : value;
                     }
                 }
                 aNode = aNode.getParentNode();
             }
-            return null;
+            return null; // No matching namespace declaration found in ancestors
         }
-        return uri;
+        return uri; // Return the URI obtained from the standard DOM method
     }
\ No newline at end of file
