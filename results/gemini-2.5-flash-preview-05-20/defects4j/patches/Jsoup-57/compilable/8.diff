diff --git a/tmp/27fc781b-e1e3-4d29-8470-7f127b601280_buggy.java b/tmp/839cccbe-d45c-4edb-8080-5e686341f2a1_fixed.java
index ae3784d..db0ad2b 100644
--- a/tmp/27fc781b-e1e3-4d29-8470-7f127b601280_buggy.java
+++ b/tmp/839cccbe-d45c-4edb-8080-5e686341f2a1_fixed.java
@@ -1,14 +1,26 @@
     /**
      Remove an attribute by key. <b>Case insensitive.</b>
      @param key attribute key to remove
      */
     public void removeIgnoreCase(String key) {
         Validate.notEmpty(key);
         if (attributes == null)
             return;
+
+        // The original code caused a ConcurrentModificationException because it
+        // modified the 'attributes' map directly (attributes.remove(attrKey))
+        // while iterating over its keySet.
+        // To safely remove elements during iteration, the Iterator's own remove()
+        // method must be used.
         for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {
             String attrKey = it.next();
-            if (attrKey.equalsIgnoreCase(key))
-                attributes.remove(attrKey);
+            if (attrKey.equalsIgnoreCase(key)) {
+                it.remove(); // Safely removes the current entry from the underlying map
+                // In Jsoup's Attributes class, attribute keys are canonicalized to lowercase
+                // upon insertion, meaning there will only be one entry in the map
+                // that matches a given key case-insensitively.
+                // Therefore, we can break the loop once the matching attribute is found and removed.
+                break;
+            }
         }
     }
\ No newline at end of file
