diff --git a/tmp/23921558-e960-4337-aad3-bfece34df4a3_buggy.java b/tmp/ac5f0a25-ca6f-4b79-9ee0-9c5eb110650e_fixed.java
index 4cce784..57e03f9 100644
--- a/tmp/23921558-e960-4337-aad3-bfece34df4a3_buggy.java
+++ b/tmp/ac5f0a25-ca6f-4b79-9ee0-9c5eb110650e_fixed.java
@@ -1,11 +1,23 @@
     /**
      * Compares this object to another based on size.
      * @param object the object to compare to
      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
      *         than <tt>object</tt>, 0 if they are equal.
      */
     public int compareTo(Fraction object) {
-        double nOd = doubleValue();
-        double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+        // Compare fractions by cross-multiplication to maintain precision.
+        // For n1/d1 vs n2/d2, compare n1*d2 vs n2*d1.
+        // Numerators and denominators are typically int, so cast to long before multiplying
+        // to prevent potential overflow of intermediate products.
+        long n1 = (long) getNumerator();
+        long d1 = (long) getDenominator();
+        long n2 = (long) object.getNumerator();
+        long d2 = (long) object.getDenominator();
+
+        // Calculate the cross-products.
+        long term1 = n1 * d2;
+        long term2 = n2 * d1;
+
+        // Use Long.compare for a concise and correct comparison.
+        return Long.compare(term1, term2);
     }
\ No newline at end of file
