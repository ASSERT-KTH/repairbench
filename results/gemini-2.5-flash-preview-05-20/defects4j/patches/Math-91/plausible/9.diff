diff --git a/tmp/3da016b8-b03a-4e23-a036-271cf977cd95_buggy.java b/tmp/c16dd208-8054-4cd6-853a-650f30c6ea88_fixed.java
index 4cce784..727ff4b 100644
--- a/tmp/3da016b8-b03a-4e23-a036-271cf977cd95_buggy.java
+++ b/tmp/c16dd208-8054-4cd6-853a-650f30c6ea88_fixed.java
@@ -1,11 +1,26 @@
     /**
      * Compares this object to another based on size.
      * @param object the object to compare to
      * @return -1 if this is less than <tt>object</tt>, +1 if this is greater
      *         than <tt>object</tt>, 0 if they are equal.
      */
     public int compareTo(Fraction object) {
-        double nOd = doubleValue();
-        double dOn = object.doubleValue();
-        return (nOd < dOn) ? -1 : ((nOd > dOn) ? +1 : 0);
+        // Compare fractions by cross-multiplying to avoid floating-point precision issues.
+        // For a/b and c/d, compare a*d and c*b.
+        // Use long to prevent potential overflow during multiplication if numerators/denominators are large.
+        long n1 = getNumerator();
+        long d1 = getDenominator();
+        long n2 = object.getNumerator();
+        long d2 = object.getDenominator();
+
+        long val1 = n1 * d2;
+        long val2 = n2 * d1;
+
+        if (val1 < val2) {
+            return -1;
+        } else if (val1 > val2) {
+            return 1;
+        } else {
+            return 0;
+        }
     }
\ No newline at end of file
