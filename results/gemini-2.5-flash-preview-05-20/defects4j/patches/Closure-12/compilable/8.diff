diff --git a/tmp/2f30e0f2-2cf0-483d-83c8-211400f52f37_buggy.java b/tmp/b96532d2-c184-42c9-acb0-76534f9b9482_fixed.java
index 22640dd..2c25cc5 100644
--- a/tmp/2f30e0f2-2cf0-483d-83c8-211400f52f37_buggy.java
+++ b/tmp/b96532d2-c184-42c9-acb0-76534f9b9482_fixed.java
@@ -1,3 +1,33 @@
   private boolean hasExceptionHandler(Node cfgNode) {
+    // Start from the current node and traverse up the parent chain
+    // to find if it is enclosed within a try-catch block.
+    Node current = cfgNode;
+    while (current != null) {
+      if (current.isTry()) {
+        // If 'current' is a TRY node, check if it has an associated CATCH clause.
+        // A TRY node typically has the following children:
+        // 0: The BLOCK representing the 'try' body.
+        // 1: The CATCH node (if a catch clause is present).
+        // 2: The BLOCK representing the 'finally' body (if a finally clause is present).
+        // We are interested in the CATCH node.
+        Node catchNode = current.getChildAtIndex(1);
+
+        if (catchNode != null && catchNode.isCatch()) {
+          // This TRY block has a CATCH handler, so an exception within its try body
+          // would be caught by this handler.
+          return true;
+        }
+        // If a TRY node doesn't have a CATCH (e.g., it only has a finally block),
+        // it doesn't "handle" exceptions in the sense of catching them.
+      } else if (current.isCatch()) {
+        // If 'current' is a CATCH node itself, it is an exception handler.
+        return true;
+      }
+      // Move up to the parent node.
+      current = current.getParent();
+    }
+    // If no TRY node with a CATCH handler or a CATCH node itself was found
+    // in the ancestry, then this cfgNode does not have an exception handler
+    // that would catch exceptions originating from it.
     return false;
   }
\ No newline at end of file
