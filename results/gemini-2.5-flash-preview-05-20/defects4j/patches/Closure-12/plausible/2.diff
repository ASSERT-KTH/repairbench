diff --git a/tmp/c8e9ad3f-bc5a-4543-8686-4f177e799fe1_buggy.java b/tmp/6d45ebe4-9dd3-4315-99d5-8d9c4f996ac2_fixed.java
index 22640dd..0c7b0de 100644
--- a/tmp/c8e9ad3f-bc5a-4543-8686-4f177e799fe1_buggy.java
+++ b/tmp/6d45ebe4-9dd3-4315-99d5-8d9c4f996ac2_fixed.java
@@ -1,3 +1,18 @@
   private boolean hasExceptionHandler(Node cfgNode) {
+    // Traverse up the AST from the given node.
+    // We are looking for an enclosing TRY statement.
+    for (Node current = cfgNode; current != null; current = current.getParent()) {
+      // If we find an ancestor that is a TRY node, it means the code at 'cfgNode'
+      // is inside a try block.
+      // In JavaScript (and represented in Closure Compiler's AST), a TRY statement
+      // must always be accompanied by either a CATCH block or a FINALLY block (or both).
+      // This means that if 'cfgNode' is an ancestor of a TRY node, any exception
+      // thrown by the code represented by 'cfgNode' would be handled by that TRY statement.
+      if (current.isTry()) {
+        return true;
+      }
+    }
+    // No TRY ancestor was found, so this code is not within an explicit
+    // try-catch/finally block, meaning it does not have a local exception handler.
     return false;
   }
\ No newline at end of file
