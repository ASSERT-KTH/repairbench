diff --git a/tmp/4b03a109-e4ff-459e-ba72-1cb76f8b560a_buggy.java b/tmp/0971a4d2-1a69-46dd-a126-4a6ce7c4926b_fixed.java
index 22640dd..e37cb3c 100644
--- a/tmp/4b03a109-e4ff-459e-ba72-1cb76f8b560a_buggy.java
+++ b/tmp/0971a4d2-1a69-46dd-a126-4a6ce7c4926b_fixed.java
@@ -1,3 +1,22 @@
   private boolean hasExceptionHandler(Node cfgNode) {
+    // Traverse up the AST from the given node to its ancestors.
+    for (Node current = cfgNode; current != null; current = current.getParent()) {
+      // If the current node is a TRY block, we need to check if it has a CATCH handler.
+      if (current.isTry()) {
+        // A TRY node in Closure Compiler has the following structure for its children:
+        // 1. The BLOCK node representing the 'try' body. (getFirstChild())
+        // 2. The CATCH node (if a 'catch' block is present). (getSecondChild())
+        // 3. The FINALLY BLOCK node (if a 'finally' block is present). (getThirdChild())
+        //
+        // To determine if there's an exception handler, we check if the second child exists
+        // and is specifically a CATCH node.
+        Node catchOrFinallyNode = current.getSecondChild();
+        if (catchOrFinallyNode != null && catchOrFinallyNode.isCatch()) {
+          return true; // Found a TRY block with an associated CATCH handler.
+        }
+      }
+    }
+    // If no TRY block with a CATCH handler was found in the ancestry,
+    // this node does not have an exception handler associated with it.
     return false;
   }
\ No newline at end of file
