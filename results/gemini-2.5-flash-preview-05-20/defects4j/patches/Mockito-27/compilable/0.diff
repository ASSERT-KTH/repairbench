diff --git a/tmp/c4a9e5d5-8e3a-46f2-9818-b3c6a72526ec_buggy.java b/tmp/f8f0dbd4-7b28-4cac-97b7-b1c1b54f1561_fixed.java
index 5c5286c..487e352 100644
--- a/tmp/c4a9e5d5-8e3a-46f2-9818-b3c6a72526ec_buggy.java
+++ b/tmp/f8f0dbd4-7b28-4cac-97b7-b1c1b54f1561_fixed.java
@@ -1,6 +1,16 @@
     public <T> void resetMock(T mock) {
         MockHandlerInterface<T> oldMockHandler = getMockHandler(mock);
+        // Create a new MockHandler from the old one.
+        // The MockHandler constructor typically copies the MockSettingsImpl (including listeners)
+        // from the old handler to the new one.
         MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler);
-        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, (MockSettingsImpl) org.mockito.Mockito.withSettings().defaultAnswer(org.mockito.Mockito.RETURNS_DEFAULTS));
+
+        // The original bug was in this line: it created a new MethodInterceptorFilter
+        // using default mock settings, effectively discarding any custom settings
+        // like InvocationListeners that were associated with the original mock.
+        // We need to use the mock settings that are already associated with the
+        // newMockHandler (which were correctly copied from oldMockHandler).
+        MethodInterceptorFilter newFilter = new MethodInterceptorFilter(newMockHandler, newMockHandler.getMockSettings());
+        
         ((Factory) mock).setCallback(0, newFilter);
     }
\ No newline at end of file
