diff --git a/tmp/e2d64342-4af6-4d02-a2ad-8a7385194ef4_buggy.java b/tmp/fa637221-7903-4ad3-a645-4dd7e655cd86_fixed.java
index 6c5e87f..66e5cff 100644
--- a/tmp/e2d64342-4af6-4d02-a2ad-8a7385194ef4_buggy.java
+++ b/tmp/fa637221-7903-4ad3-a645-4dd7e655cd86_fixed.java
@@ -1,12 +1,23 @@
     /**
      * Build a sparse matrix with the supplied row and column dimensions.
      *
      * @param rowDimension Number of rows of the matrix.
      * @param columnDimension Number of columns of the matrix.
      */
     public OpenMapRealMatrix(int rowDimension, int columnDimension) {
         super(rowDimension, columnDimension);
+
+        // The OpenMapRealMatrix uses a flattened integer key (row * columns + column) for its internal map.
+        // This means the total number of possible entries (rowDimension * columnDimension)
+        // must not exceed the maximum value for an integer (Integer.MAX_VALUE).
+        // If it does, calculating the key would overflow, or the map would be unable to uniquely address elements.
+        // We cast to long before multiplication to prevent overflow during the check itself.
+        if (((long) rowDimension * columnDimension) > Integer.MAX_VALUE) {
+            throw new NumberIsTooLargeException(
+                    (long) rowDimension * columnDimension, Integer.MAX_VALUE, false);
+        }
+
         this.rows = rowDimension;
         this.columns = columnDimension;
         this.entries = new OpenIntToDoubleHashMap(0.0);
     }
\ No newline at end of file
