diff --git a/tmp/85b31485-dab9-440f-9632-7f4eba3c446a_buggy.java b/tmp/e1047a3f-0cb5-44d6-81fd-160fc1051eea_fixed.java
index 0878b6b..472a2cd 100644
--- a/tmp/85b31485-dab9-440f-9632-7f4eba3c446a_buggy.java
+++ b/tmp/e1047a3f-0cb5-44d6-81fd-160fc1051eea_fixed.java
@@ -1,3 +1,22 @@
   public final boolean isEmptyType() {
-    return isNoType() || isNoObjectType() || isNoResolvedType();
+    // This method identifies "empty" or "bottom" types that carry no specific
+    // type information. These typically include:
+    // 1. NoType: Represents the bottom type, often used for unknown or uninferable types.
+    // 2. NoObjectType: Represents an unknown object type.
+    // 3. NoResolvedType: Represents a type that could not be resolved.
+    //
+    // The failing test `FunctionTypeTest::testEmptyFunctionTypes` indicates that
+    // LEAST_FUNCTION_TYPE (which is the type of the global Function constructor)
+    // should also be considered an "empty" type. This is because the global
+    // Function constructor type represents the most general function, providing
+    // no specific signature (parameters, return type, etc.). In this sense, it
+    // provides no more specific information than a "NoType" for functions.
+    //
+    // GREATEST_FUNCTION_TYPE (Function.prototype) should NOT be considered empty.
+    //
+    // The added condition `isFunctionType() && ((FunctionType) this).isGlobalFunction()`
+    // checks if the current type is a function type and specifically the global
+    // Function constructor type.
+    return isNoType() || isNoObjectType() || isNoResolvedType() ||
+           (isFunctionType() && ((FunctionType) this).isGlobalFunction());
   }
\ No newline at end of file
