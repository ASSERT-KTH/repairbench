diff --git a/tmp/17c879a4-2992-457a-93b5-f282d137a24c_buggy.java b/tmp/f80039b0-d856-4f3c-955b-c50ccf40b296_fixed.java
index 2573d30..cb99a22 100644
--- a/tmp/17c879a4-2992-457a-93b5-f282d137a24c_buggy.java
+++ b/tmp/f80039b0-d856-4f3c-955b-c50ccf40b296_fixed.java
@@ -1,20 +1,28 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
-      node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    // Traverse down the GETPROP chain to find the root object name.
+    // For example, if 'node' is 'a.b.c', this loop will find 'a'.
+    Node current = node;
+    while (current.isGetProp()) {
+      current = current.getFirstChild();
+    }
+
+    // Now, 'current' should be the base name (e.g., 'a' in 'a.b.c').
+    // If it's a simple name, check if it's assigned to in the replacement.
+    if (current.isName()
+        && isNameAssignedTo(current.getString(), replacement)) {
       return false;
     }
 
     return true;
   }
\ No newline at end of file
