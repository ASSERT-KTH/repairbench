diff --git a/tmp/2405e2a1-f188-4392-8e45-204c25071616_buggy.java b/tmp/bd120b19-070d-4c81-a2a9-4ab078c47d2f_fixed.java
index 1bec4d6..0406c43 100644
--- a/tmp/2405e2a1-f188-4392-8e45-204c25071616_buggy.java
+++ b/tmp/bd120b19-070d-4c81-a2a9-4ab078c47d2f_fixed.java
@@ -1,14 +1,22 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        // Properties conceptually store String keys and String values.
+        // Explicitly handle java.util.Properties to ensure correct type parameterization.
+        if (rawClass == java.util.Properties.class) {
+            // _fromClass(String.class) is used to get the JavaType for String,
+            // consistent with how _unknownType() gets JavaType for Object.
+            return MapType.construct(rawClass, _fromClass(String.class), _fromClass(String.class));
+        }
+
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
