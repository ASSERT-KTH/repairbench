diff --git a/tmp/18f7e403-b51a-49c8-a195-9a4ba80521f8_buggy.java b/tmp/e827cdc7-e12a-4276-ad19-a3970083e572_fixed.java
index 1bec4d6..d6debfa 100644
--- a/tmp/18f7e403-b51a-49c8-a195-9a4ba80521f8_buggy.java
+++ b/tmp/e827cdc7-e12a-4276-ad19-a3970083e572_fixed.java
@@ -1,14 +1,22 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
-        JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
+        //   -> Should be handled as <String,String>
+        if (rawClass == java.util.Properties.class) {
+            // Properties specifically use String for both keys and values.
+            // Assuming _stringType() is a method accessible here that returns the JavaType for String.
+            // This aligns with the pattern used by _unknownType().
+            return MapType.construct(rawClass, _stringType(), _stringType());
+        }
+
+        JavaType[] typeParams = findTypeParameters(rawClass, java.util.Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
