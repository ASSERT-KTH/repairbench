diff --git a/tmp/b40aede4-823b-4fd6-a0f7-4bd1e027a5d3_buggy.java b/tmp/7ca4750d-65e3-4fe3-9787-a7b89c82465a_fixed.java
index 1bec4d6..91bd507 100644
--- a/tmp/b40aede4-823b-4fd6-a0f7-4bd1e027a5d3_buggy.java
+++ b/tmp/7ca4750d-65e3-4fe3-9787-a7b89c82465a_fixed.java
@@ -1,14 +1,21 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        // For java.util.Properties, we want to treat it as Map<String, String>
+        if (rawClass == java.util.Properties.class) {
+            // Assuming _fromClass(Class) is available to get JavaType from a Class
+            // _unknownType() returns _fromClass(Object.class), so this is consistent.
+            return MapType.construct(rawClass, _fromClass(String.class), _fromClass(String.class));
+        }
+
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
