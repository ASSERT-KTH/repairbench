diff --git a/tmp/9fbbd4d0-67ea-46b1-8de3-6b620ed86125_buggy.java b/tmp/aace386f-fb26-43d0-a11f-b48f4d0f44c3_fixed.java
index 1bec4d6..a7e9a32 100644
--- a/tmp/9fbbd4d0-67ea-46b1-8de3-6b620ed86125_buggy.java
+++ b/tmp/aace386f-fb26-43d0-a11f-b48f4d0f44c3_fixed.java
@@ -1,14 +1,21 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
+        // If rawClass is Properties.class, we should explicitly treat it as Map<String, String>
+        if (rawClass == java.util.Properties.class) {
+            // Properties are special: always treated as Map<String,String> for conversion purposes.
+            // _stringType() is expected to be available in TypeFactory, where this method resides.
+            return MapType.construct(rawClass, _stringType(), _stringType());
+        }
+
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
         return MapType.construct(rawClass, typeParams[0], typeParams[1]);
     }
\ No newline at end of file
