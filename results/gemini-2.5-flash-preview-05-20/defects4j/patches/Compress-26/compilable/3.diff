diff --git a/tmp/44e5944f-c152-4d51-ad25-1b3a91a4025d_buggy.java b/tmp/6584a767-5884-4226-9edd-790f7600b59d_fixed.java
index 4b163f6..cf0aa54 100644
--- a/tmp/44e5944f-c152-4d51-ad25-1b3a91a4025d_buggy.java
+++ b/tmp/6584a767-5884-4226-9edd-790f7600b59d_fixed.java
@@ -1,28 +1,41 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
-        while (numToSkip > 0) {
-            long skipped = input.skip(numToSkip);
+        if (numToSkip <= 0) {
+            return 0;
+        }
+
+        long totalSkipped = 0;
+        while (totalSkipped < numToSkip) {
+            long remaining = numToSkip - totalSkipped;
+            long skipped = input.skip(remaining);
+
             if (skipped == 0) {
+                // If skip() returned 0, it means either the stream has no more data
+                // or it cannot skip using its native mechanism (e.g., if the underlying
+                // stream's skip method is not implemented or returns 0 for other reasons).
+                // We fall back to reading byte by byte.
+                int readByte = input.read();
+                if (readByte == -1) { // End of stream has been reached
                     break;
                 }
-            numToSkip -= skipped;
+                skipped = 1; // Successfully read one byte
             }
-            
-        return available - numToSkip;
+            totalSkipped += skipped;
+        }
+        return totalSkipped;
     }
\ No newline at end of file
