diff --git a/tmp/dffd7fd5-7fff-4e72-b26b-0791029e0ea4_buggy.java b/tmp/bb71b88c-9654-46c1-a6e2-8eef9330720a_fixed.java
index 29d025a..4fdc45f 100644
--- a/tmp/dffd7fd5-7fff-4e72-b26b-0791029e0ea4_buggy.java
+++ b/tmp/bb71b88c-9654-46c1-a6e2-8eef9330720a_fixed.java
@@ -1,13 +1,24 @@
     private void _verifySharing()
     {
         if (_hashShared) {
             _hashArea = Arrays.copyOf(_hashArea, _hashArea.length);
             _names = Arrays.copyOf(_names, _names.length);
             _hashShared = false;
             // 09-Sep-2015, tatu: As per [jackson-core#216], also need to ensure
             //    we rehash as needed, as need-rehash flag is not copied from parent
+            // If this instance was shared (and now unshares), it means it inherited
+            // the _nSymbols and _hashSize from the parent. If the parent was already
+            // in a state requiring rehash, this child instance also requires it,
+            // even if its _needRehash flag is false (due to explicit setting in constructor).
+            // The condition below reflects the threshold used to determine if a rehash is needed.
+            if (_nSymbols >= (_hashSize - (_hashSize >> 3))) { // common rehash threshold (approx. 87.5% load factor)
+                rehash();
             }
+        }
+        // This check handles cases where the current (non-shared) instance grew
+        // and its _needRehash flag was set. If rehash() was called in the block above,
+        // _needRehash will be reset to false by rehash() itself, preventing double rehash.
         if (_needRehash) {
             rehash();
         }
     }
