diff --git a/tmp/315c0e64-53c8-4625-b694-e835c4ead059_buggy.java b/tmp/22348cbd-c10f-4643-a77a-cfcd1db76c11_fixed.java
index 1a63a66..fae8994 100644
--- a/tmp/315c0e64-53c8-4625-b694-e835c4ead059_buggy.java
+++ b/tmp/22348cbd-c10f-4643-a77a-cfcd1db76c11_fixed.java
@@ -1,21 +1,27 @@
     @Override
     @Deprecated
     protected JavaType _narrow(Class<?> subclass)
     {
         if (_class == subclass) {
             return this;
         }
         // Should we check that there is a sub-class relationship?
         // 15-Jan-2016, tatu: Almost yes, but there are some complications with
         //    placeholder values (`Void`, `NoClass`), so can not quite do yet.
         // TODO: fix in 2.8
             /*
             throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
                     +_class.getName());
                     */
+            // 15-Jan-2016, tatu: As per [databind#1085], may need to
+            //   re-evaluate _typeHandler and _valueHandler; for now,
+            //   simplest is to just NOT pass them.
+            //   However, if handlers are class-specific, they would
+            //   fail anyway. So let's clear them to be safe.
+            //   _asStatic is always inherited.
             return new SimpleType(subclass, _bindings, this, _superInterfaces,
-                    _valueHandler, _typeHandler, _asStatic);
+                    null, null, _asStatic); // Clear handlers for the new type
         // Otherwise, stitch together the hierarchy. First, super-class
         // if not found, try a super-interface
         // should not get here but...
     }
