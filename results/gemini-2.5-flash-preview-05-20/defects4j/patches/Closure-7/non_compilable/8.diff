diff --git a/tmp/62a0f729-2d54-4efb-9a89-c1c10c4d9292_buggy.java b/tmp/5fb614fc-ec7a-407b-9b88-23ebfb423aea_fixed.java
index a38ec6d..a8c2a7e 100644
--- a/tmp/62a0f729-2d54-4efb-9a89-c1c10c4d9292_buggy.java
+++ b/tmp/5fb614fc-ec7a-407b-9b88-23ebfb423aea_fixed.java
@@ -1,10 +1,13 @@
     @Override
     public JSType caseObjectType(ObjectType type) {
       if (value.equals("function")) {
         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
+        // If the comparison is true (e.g., `typeof x == 'function'` is true)
+        // and the current type 'type' can potentially be a function (i.e., 'type' is a supertype of 'Function'
+        // or a union type containing 'Function'), then refine 'type' to 'Function'.
+        // Otherwise, if the comparison is false (or if 'type' cannot be a function),
+        // return null, indicating no specific refinement can be made by this method for ObjectType.
+        return resultEqualsValue && type.isSupertype(ctorType) ? ctorType : null;
       }
       return matchesExpectation("object") ? type : null;
     }
\ No newline at end of file
