diff --git a/tmp/1e3b9bfe-267f-4da2-b388-ebba2f9bd498_buggy.java b/tmp/49c782d9-cecd-41ad-a0c3-8f87c8f635d1_fixed.java
index ec6c9ee..afcb6f7 100644
--- a/tmp/1e3b9bfe-267f-4da2-b388-ebba2f9bd498_buggy.java
+++ b/tmp/49c782d9-cecd-41ad-a0c3-8f87c8f635d1_fixed.java
@@ -1,21 +1,24 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+                // A Separator at the beginning of the list should consume the *next* element(s)
+                // to form its "after" formatter. The previous code was skipping elementPairs.get(1).
+                // It should take the sublist starting from index 1.
+                PeriodFormatter f = toFormatter(elementPairs.subList(1, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file
