diff --git a/tmp/443f6553-fc08-4cd5-adef-7aff0acbcaf0_buggy.java b/tmp/11257037-0f50-4494-b2b8-b5d4650df176_fixed.java
index ec6c9ee..8d07268 100644
--- a/tmp/443f6553-fc08-4cd5-adef-7aff0acbcaf0_buggy.java
+++ b/tmp/11257037-0f50-4494-b2b8-b5d4650df176_fixed.java
@@ -1,21 +1,23 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+                // BUG FIX: The recursive call should process elements from index 1,
+                // as the Separator at index 0 wraps the subsequent elements.
+                PeriodFormatter f = toFormatter(elementPairs.subList(1, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
