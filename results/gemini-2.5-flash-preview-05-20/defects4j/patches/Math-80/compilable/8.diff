diff --git a/tmp/48185a92-2fde-4e78-bc78-69884ddf6992_buggy.java b/tmp/9ff0bcd7-d9b4-4ea5-ae7f-0292a8a0e341_fixed.java
index fbd0884..f132082 100644
--- a/tmp/48185a92-2fde-4e78-bc78-69884ddf6992_buggy.java
+++ b/tmp/9ff0bcd7-d9b4-4ea5-ae7f-0292a8a0e341_fixed.java
@@ -1,23 +1,37 @@
     /**
      * Flip qd array if warranted.
      * @param n number of rows in the block
      * @param step within the array (1 for flipping all elements, 2 for flipping
      * only every other element)
      * @return true if qd array was flipped
      */
     private boolean flipIfWarranted(final int n, final int step) {
         if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {
             // flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
+                // The original code swapped work[i+k] with work[j-k], which effectively
+                // reversed the entire block. The intention is to reverse only the order
+                // of blocks, not the elements within each block.
+                //
+                // The 'i' index points to the start of the current 4-element block from the
+                // beginning of the array.
+                // The 'j' index points to the end of the current 4-element block from the
+                // end of the array.
+                //
+                // To swap elements while preserving their relative order within the 4-element block,
+                // we need to swap work[i+k] with work[start_of_block_at_j_side + k].
+                // Since 'j' points to the last element of the block from the end, the start
+                // of that block is 'j - 3'.
+                // So, work[i+k] should be swapped with work[(j - 3) + k].
                 for (int k = 0; k < 4; k += step) {
                     final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
+                    work[i + k] = work[j - 3 + k];
+                    work[j - 3 + k] = tmp;
                 }
                 j -= 4;
             }
             return true;
         }
         return false;
     }
\ No newline at end of file
