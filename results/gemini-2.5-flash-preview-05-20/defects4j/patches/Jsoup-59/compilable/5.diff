diff --git a/tmp/31e801f8-02d5-4f5a-a385-52861d1d9d6b_buggy.java b/tmp/08af9857-8294-4d69-956c-05b2e6b10ef9_fixed.java
index 7de6748..60e9413 100644
--- a/tmp/31e801f8-02d5-4f5a-a385-52861d1d9d6b_buggy.java
+++ b/tmp/08af9857-8294-4d69-956c-05b2e6b10ef9_fixed.java
@@ -1,23 +1,28 @@
         final void newAttribute() {
             if (attributes == null)
                 attributes = new Attributes();
 
             if (pendingAttributeName != null) {
                 // the tokeniser has skipped whitespace control chars, but trimming could collapse to empty for other control codes, so verify here
                 pendingAttributeName = pendingAttributeName.trim();
+                // If, after trimming, the attribute name is empty, it's not a valid attribute name.
+                // This can happen if the original pendingAttributeName consisted solely of control characters
+                // (e.g., "\06" from the test case). In such cases, we should not create an attribute.
+                if (!pendingAttributeName.isEmpty()) {
                     Attribute attribute;
                     if (hasPendingAttributeValue)
                         attribute = new Attribute(pendingAttributeName,
                             pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS);
                     else if (hasEmptyAttributeValue)
                         attribute = new Attribute(pendingAttributeName, "");
                     else
                         attribute = new BooleanAttribute(pendingAttributeName);
                     attributes.put(attribute);
                 }
+            }
             pendingAttributeName = null;
             hasEmptyAttributeValue = false;
             hasPendingAttributeValue = false;
             reset(pendingAttributeValue);
             pendingAttributeValueS = null;
         }
\ No newline at end of file
