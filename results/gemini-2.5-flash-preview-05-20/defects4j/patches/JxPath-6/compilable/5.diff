diff --git a/tmp/4d90eac8-0bd9-42ad-91dd-4ea854c2e09c_buggy.java b/tmp/680bdcc9-362d-4a9e-b2a9-14e570ed5686_fixed.java
index f650982..83792de 100644
--- a/tmp/4d90eac8-0bd9-42ad-91dd-4ea854c2e09c_buggy.java
+++ b/tmp/680bdcc9-362d-4a9e-b2a9-14e570ed5686_fixed.java
@@ -1,42 +1,62 @@
     /**
      * Compares two values
      */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
 
 //        System.err.println("COMPARING: " +
 //            (l == null ? "null" : l.getClass().getName()) + " " +
 //            (r == null ? "null" : r.getClass().getName()));
 
-        if (l instanceof InitialContext || l instanceof SelfContext) {
-            l = ((EvalContext) l).getSingleNodePointer();
+        // XPath comparisons operate on values, not pointers.
+        // Unwrap any Pointers to get to their underlying values before type-based comparison logic.
+        if (l instanceof org.apache.commons.jxpath.Pointer) {
+            l = ((org.apache.commons.jxpath.Pointer) l).getValue();
         }
-
-        if (r instanceof InitialContext || r instanceof SelfContext) {
-            r = ((EvalContext) r).getSingleNodePointer();
+        if (r instanceof org.apache.commons.jxpath.Pointer) {
+            r = ((org.apache.commons.jxpath.Pointer) r).getValue();
         }
         
+        // EvalContext (including InitialContext and SelfContext) implements Iterator.
+        // According to XPath node-set comparison rules, a node-set (represented by EvalContext)
+        // should be handled by the Iterator logic. The original conversion to a SingleNodePointer
+        // is generally incorrect for node-set equality, as it only compares the first node.
+        // By removing this block, EvalContexts will correctly be treated as Iterators.
+        // (No change needed here, as the block is removed).
+        // if (l instanceof InitialContext || l instanceof SelfContext) {
+        //     l = ((EvalContext) l).getSingleNodePointer();
+        // }
+        // if (r instanceof InitialContext || r instanceof SelfContext) {
+        //     r = ((EvalContext) r).getSingleNodePointer();
+        // }
+
+        // If a value is a Collection, convert it to an Iterator for node-set comparison.
         if (l instanceof Collection) {
             l = ((Collection) l).iterator();
         }
 
         if (r instanceof Collection) {
             r = ((Collection) r).iterator();
         }
 
+        // Now, perform comparison based on whether values are Iterators (node-sets).
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
             return contains((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
             return contains((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
+        
+        // For all other types (primitives, Strings, Booleans, etc.),
+        // delegate to the static equal helper method. This helper is
+        // responsible for XPath type coercions and standard equality.
         return equal(l, r);
     }
\ No newline at end of file
