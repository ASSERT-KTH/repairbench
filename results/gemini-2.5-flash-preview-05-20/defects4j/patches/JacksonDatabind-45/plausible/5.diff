diff --git a/tmp/f1e84d6e-fde0-40f3-826a-141953e119cc_buggy.java b/tmp/7b85fdac-f245-4b2a-b509-6ce95c6033bf_fixed.java
index 0dbce00..7d36a18 100644
--- a/tmp/f1e84d6e-fde0-40f3-826a-141953e119cc_buggy.java
+++ b/tmp/7b85fdac-f245-4b2a-b509-6ce95c6033bf_fixed.java
@@ -1,33 +1,46 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+
+                // Case 1: Explicitly numeric format
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // Case 2: Explicitly string format OR implicitly string format (due to pattern/locale/timezone with Shape.ANY)
+                boolean asString = false;
+                if (shape == JsonFormat.Shape.STRING) {
+                    asString = true;
+                } else if (shape == JsonFormat.Shape.ANY) {
+                    // If shape is ANY, consider it string if pattern, locale or timezone is specified
+                    if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                        asString = true;
+                    }
+                }
+
+                if (asString) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
         }
+        // If no specific format determined by @JsonFormat, return 'this'
+        // to let global configuration (e.g., SerializationFeature.WRITE_DATES_AS_TIMESTAMPS) apply.
         return this;
     }
\ No newline at end of file
