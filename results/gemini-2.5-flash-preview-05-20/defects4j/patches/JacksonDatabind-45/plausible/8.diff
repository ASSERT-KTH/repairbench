diff --git a/tmp/a8b3d524-d1d2-4abb-9a9f-8da7ef09dd93_buggy.java b/tmp/2a800ad2-0d6d-41a1-84e3-a0b25339089c_fixed.java
index 0dbce00..5a27603 100644
--- a/tmp/a8b3d524-d1d2-4abb-9a9f-8da7ef09dd93_buggy.java
+++ b/tmp/2a800ad2-0d6d-41a1-84e3-a0b25339089c_fixed.java
@@ -1,33 +1,39 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+
+                // Simple case first: serialize as numeric timestamp?
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                // Or, serialize as String?
+                // This happens if explicitly STRING, OR if ANY and a pattern/locale/timezone is specified
+                if (shape == JsonFormat.Shape.STRING
+                        || (shape == JsonFormat.Shape.ANY
+                                && (format.hasPattern() || format.hasLocale() || format.hasTimeZone()))) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
         }
+        // If no @JsonFormat or if shape is ANY without other formatting properties,
+        // revert to default behavior (configured via SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)
         return this;
     }
\ No newline at end of file
