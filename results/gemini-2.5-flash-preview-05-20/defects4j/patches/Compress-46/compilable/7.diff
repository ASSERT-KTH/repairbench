diff --git a/tmp/94fd3e14-1896-4286-9dc0-422c3b0551af_buggy.java b/tmp/ee720799-25fc-49fc-8ac8-ae8093c490d8_fixed.java
index 084a224..e94e185 100644
--- a/tmp/94fd3e14-1896-4286-9dc0-422c3b0551af_buggy.java
+++ b/tmp/ee720799-25fc-49fc-8ac8-ae8093c490d8_fixed.java
@@ -1,7 +1,17 @@
     private static ZipLong unixTimeToZipLong(long l) {
-        final long TWO_TO_32 = 0x100000000L;
-        if (l >= TWO_TO_32) {
+        // X5455 timestamps must fit in a signed 32 bit integer.
+        // The maximum positive value for a signed 32-bit integer is 2^31 - 1 (0x7FFFFFFF).
+        // Therefore, any value equal to or greater than 2^31 (0x80000000L) is too large.
+        final long MAX_TIMESTAMP_PLUS_ONE = 0x80000000L; // Represents 2^31
+
+        if (l >= MAX_TIMESTAMP_PLUS_ONE) {
             throw new IllegalArgumentException("X5455 timestamps must fit in a signed 32 bit integer: " + l);
         }
+        // Unix timestamps are conventionally non-negative.
+        // Also, ZipLong implicitly handles its 4 bytes as an unsigned integer.
+        // A negative input would be incorrectly interpreted as a large positive unsigned value.
+        if (l < 0) {
+            throw new IllegalArgumentException("X5455 timestamps must be non-negative: " + l);
+        }
         return new ZipLong(l);
     }
