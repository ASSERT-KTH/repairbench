diff --git a/tmp/cb441d99-426a-4f85-80a1-8af918ac00aa_buggy.java b/tmp/cdf002ec-32f5-4e75-a70b-2cd9e83c34fa_fixed.java
index 57f69c5..b5a8581 100644
--- a/tmp/cb441d99-426a-4f85-80a1-8af918ac00aa_buggy.java
+++ b/tmp/cdf002ec-32f5-4e75-a70b-2cd9e83c34fa_fixed.java
@@ -1,12 +1,21 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
-        // For labels with block children, we need to ensure that a
-        // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-        // are skipped. 
-          // Either a empty statement or an block with more than one child,
-          // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    // If the node itself is a FUNCTION or DO.
+    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+      return true;
+    }
+    // Check if it's a LABEL node whose immediate child is a FUNCTION or DO.
+    // A LABEL node has two children: the label name (child 0) and the
+    // labeled statement (child 1).
+    if (n.getType() == Token.LABEL) {
+      // Ensure the LABEL node has a child for the labeled statement.
+      if (n.getChildCount() >= 2) {
+        Node labeledStatement = n.getChildAtIndex(1);
+        return (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO);
+      }
+    }
+    return false;
   }
\ No newline at end of file
