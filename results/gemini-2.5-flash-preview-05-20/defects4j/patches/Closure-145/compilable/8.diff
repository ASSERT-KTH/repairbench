diff --git a/tmp/46353f40-beae-4ebc-ad3f-a7eece83d0b8_buggy.java b/tmp/b1fa9b5a-4a1e-4068-af28-9553c70bae1a_fixed.java
index 57f69c5..2dc70c5 100644
--- a/tmp/46353f40-beae-4ebc-ad3f-a7eece83d0b8_buggy.java
+++ b/tmp/b1fa9b5a-4a1e-4068-af28-9553c70bae1a_fixed.java
@@ -1,12 +1,29 @@
   /**
    * @return Whether the Node is a DO or FUNCTION (with or without
    * labels).
    */
   private boolean isOneExactlyFunctionOrDo(Node n) {
     // For labels with block children, we need to ensure that a
     // labeled FUNCTION or DO isn't generated when extraneous BLOCKs
     // are skipped.
     // Either a empty statement or an block with more than one child,
     // way it isn't a FUNCTION or DO.
-      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+
+    // Check if the node itself is a FUNCTION or DO.
+    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+      return true;
+    }
+
+    // If the node is a LABEL, check if its immediate child is a FUNCTION or DO.
+    // This handles cases like `A: function foo() {}` or `A: do {} while (x);`.
+    if (n.getType() == Token.LABEL) {
+      if (n.hasChildren()) {
+        Node labeledStatement = n.getFirstChild();
+        if (labeledStatement.getType() == Token.FUNCTION || labeledStatement.getType() == Token.DO) {
+          return true;
+        }
+      }
+    }
+
+    return false;
   }
\ No newline at end of file
