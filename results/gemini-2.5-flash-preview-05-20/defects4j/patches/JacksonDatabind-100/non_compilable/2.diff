diff --git a/tmp/574fa23c-a006-44c9-b24d-ce3f80aedbeb_buggy.java b/tmp/b15395e7-916d-4015-89b0-9f850a2e248b_fixed.java
index fc8c302..f097ebe 100644
--- a/tmp/574fa23c-a006-44c9-b24d-ce3f80aedbeb_buggy.java
+++ b/tmp/b15395e7-916d-4015-89b0-9f850a2e248b_fixed.java
@@ -1,23 +1,38 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
-        if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        if (n == null) {
+            return null;
+        }
+
+        // [databind#2096]: `JsonParser.getBinaryValue(Base64Variant)` should
+        // correctly use the provided variant when coercing a TextNode.
+        // The original implementation first called `n.binaryValue()` which
+        // for TextNodes defaults to `Base64Variants.getDefaultVariant()`,
+        // leading to errors if the TextNode was encoded with a different variant.
+        if (n.isTextual()) {
+            return n.getBinaryValue(b64variant);
+        }
+
+        // For other node types (like BinaryNode which directly stores byte[],
+        // or other custom nodes), try their default `binaryValue()` method.
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+
+        // As a fallback for POJONode, check if the POJO itself is a byte array.
+        // (POJONode.binaryValue() generally returns null unless overridden,
+        // so this check is still necessary).
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
-        }
-        // otherwise return null to mark we have no binary content
+        
+        // If no binary content is found or coercible, return null.
         return null;
     }
\ No newline at end of file
