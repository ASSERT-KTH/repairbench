diff --git a/tmp/0bda2fde-2c24-4ff9-874a-e978066c6568_buggy.java b/tmp/e7451747-fe61-452d-865d-482b9ab3bdf2_fixed.java
index fc8c302..4d4d081 100644
--- a/tmp/0bda2fde-2c24-4ff9-874a-e978066c6568_buggy.java
+++ b/tmp/e7451747-fe61-452d-865d-482b9ab3bdf2_fixed.java
@@ -1,23 +1,35 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+            // [databind#2096]: coercion from TextNode requires variant.
+            // For BinaryNode, `binaryValue()` is fine as it returns actual bytes.
+            // For POJONode, we check explicitly.
+
+            // If the current node is a TextNode, we must use the provided Base64Variant
+            // to correctly decode its contents, as it might not be encoded with the default MIME variant.
+            if (n.isTextual()) {
+                return n.getBinaryValue(b64variant);
+            }
+            
+            // For other node types (like BinaryNode) or embedded binary values
+            // (e.g., POJONode wrapping byte[]), we can try the general binaryValue() method.
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+            
+            // As a fallback, or if binaryValue() didn't handle it for POJONode,
+            // check if it's a POJONode wrapping a byte array directly.
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
