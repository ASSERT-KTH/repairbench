diff --git a/tmp/4047ebd6-29ed-43c0-b14d-d3b14063802a_buggy.java b/tmp/278f8589-7ad7-4496-9432-0b7cc9533d80_fixed.java
index fc8c302..f4397cb 100644
--- a/tmp/4047ebd6-29ed-43c0-b14d-d3b14063802a_buggy.java
+++ b/tmp/278f8589-7ad7-4496-9432-0b7cc9533d80_fixed.java
@@ -1,23 +1,35 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+            // [databind#2096]: For TextNodes, coercion to binary requires using
+            // the provided Base64Variant. TextNode.binaryValue() by default
+            // uses Base64Variants.MIME, which might be incorrect for other variants.
+            // Therefore, if the node is textual, we should directly call its
+            // getBinaryValue(Base64Variant) method.
+            if (n.isTextual()) {
+                return n.getBinaryValue(b64variant);
+            }
+            
+            // For other node types (e.g., BinaryNode) or if the textual node
+            // cannot be decoded by its specific method (though it should throw
+            // an exception in that case), try the generic binaryValue() method.
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+
+            // Finally, check if it's a POJONode that holds a byte array
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
