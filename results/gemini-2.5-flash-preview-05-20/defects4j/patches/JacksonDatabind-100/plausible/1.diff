diff --git a/tmp/d4621195-b3b3-489f-aed3-4784cc567b6a_buggy.java b/tmp/180d9631-c8c2-4b31-b23c-adc709bf0217_fixed.java
index fc8c302..00abb68 100644
--- a/tmp/d4621195-b3b3-489f-aed3-4784cc567b6a_buggy.java
+++ b/tmp/180d9631-c8c2-4b31-b23c-adc709bf0217_fixed.java
@@ -1,23 +1,29 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+            // [databind#2096]: coercion from TextNode requires variant.
+            // For BinaryNode or POJONode, `binaryValue()` (or POJO check) is sufficient.
+            if (n.isTextual()) {
+                // If it's a TextNode, we MUST use the provided b64variant for decoding.
+                // TextNode's binaryValue() uses Base64Variants.getDefaultVariant(), which may not be correct.
+                return ((TextNode) n).getBinaryValue(b64variant);
+            }
+            // For other nodes (like BinaryNode), try their default binary representation
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+            // As a fallback, check if it's a POJONode wrapping a byte array
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
