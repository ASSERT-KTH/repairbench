diff --git a/tmp/32a91294-d790-4df8-8e3e-b6cd6d22bc78_buggy.java b/tmp/ef4b4a20-5b6e-416e-9ede-e1dffe9a0dc5_fixed.java
index fc8c302..a3bf3a3 100644
--- a/tmp/32a91294-d790-4df8-8e3e-b6cd6d22bc78_buggy.java
+++ b/tmp/ef4b4a20-5b6e-416e-9ede-e1dffe9a0dc5_fixed.java
@@ -1,23 +1,31 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+            // [databind#2096]: coercion from TextNode may require variant.
+            // If the current node is a TextNode, its value is a Base64-encoded string.
+            // We must use the provided Base64Variant to decode it.
+            if (n.isTextual()) {
+                return ((TextNode) n).getBinaryValue(b64variant);
+            }
+            // For other node types (like BinaryNode or POJONode), or if the TextNode
+            // had its internal binary representation directly set (less common for string-backed),
+            // we try the generic binaryValue() method first.
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+            // Lastly, check if it's a POJONode that holds a byte array.
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
