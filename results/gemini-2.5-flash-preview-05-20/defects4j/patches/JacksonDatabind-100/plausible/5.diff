diff --git a/tmp/c1ee6da7-7cea-4255-a99c-75206d1e3c5d_buggy.java b/tmp/fd5891a8-816f-4e81-87c7-fb8111c65d1e_fixed.java
index fc8c302..f2d8c4d 100644
--- a/tmp/c1ee6da7-7cea-4255-a99c-75206d1e3c5d_buggy.java
+++ b/tmp/fd5891a8-816f-4e81-87c7-fb8111c65d1e_fixed.java
@@ -1,23 +1,36 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+            // [databind#2096]: `binaryValue()` on a TextNode may not use the specific
+            // Base64Variant provided to this method. Coercion from TextNode MUST use
+            // the provided variant to ensure correct decoding.
+            if (n.isTextual()) {
+                // If it's a TextNode, explicitly use the provided b64variant for decoding.
+                return ((TextNode) n).getBinaryValue(b64variant);
+            }
+            
+            // For other node types (like BinaryNode or POJONode containing byte[]),
+            // the default `binaryValue()` method on the node itself is usually sufficient
+            // and does not require an explicit variant (as they are already binary or
+            // designed to handle a default binary representation).
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+            
+            // Fallback for POJONode if its `binaryValue()` didn't return `byte[]` directly.
+            // (Note: Current POJONode.binaryValue() does handle `byte[]` directly,
+            // so this block might be redundant but harmless).
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file
