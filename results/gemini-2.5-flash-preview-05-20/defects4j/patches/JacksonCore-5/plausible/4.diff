diff --git a/tmp/2ad5c5d7-3d80-4b82-bff6-67081458f9bc_buggy.java b/tmp/e5aa2c0b-a2f2-4d68-9b35-65f7e425135f_fixed.java
index 39c4220..a0d50bc 100644
--- a/tmp/2ad5c5d7-3d80-4b82-bff6-67081458f9bc_buggy.java
+++ b/tmp/e5aa2c0b-a2f2-4d68-9b35-65f7e425135f_fixed.java
@@ -1,21 +1,31 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
+        // An index must be non-empty and not excessively long (over 10 digits for int MAX_VALUE)
         if (len == 0 || len > 10) {
             return -1;
         }
+
+        // Validate all characters are digits.
+        // Fix: The original code had `char c = str.charAt(i++);` which was incorrect,
+        // incrementing `i` twice per loop iteration and skipping characters.
         for (int i = 0; i < len; ++i) {
-            char c = str.charAt(i++);
+            char c = str.charAt(i); // Correctly access the character at current index i
             if (c > '9' || c < '0') {
-                return -1;
+                return -1; // Not a digit
             }
         }
-        if (len == 10) {
+
+        // At this point, `str` consists solely of digits, and its length is between 1 and 10.
+        // We need to parse it and ensure it fits within a non-negative int range (0 to Integer.MAX_VALUE).
+        // Parsing as a long first is the safest way to detect potential overflow
+        // without throwing NumberFormatException.
         long l = NumberInput.parseLong(str);
-            if (l > Integer.MAX_VALUE) {
-                return -1;
+
+        // An index must be non-negative and fit within Integer.MAX_VALUE.
+        if (l < 0 || l > Integer.MAX_VALUE) {
+            return -1; // Value is negative or too large for an int index
         }
-        }
-        return NumberInput.parseInt(str);
+        return (int) l; // If valid, cast to int and return
     }
\ No newline at end of file
