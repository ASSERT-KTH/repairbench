diff --git a/tmp/c4412a58-39b5-4efa-bbac-235113339894_buggy.java b/tmp/1bbca4b0-b669-45d8-9ca2-1c44911d10eb_fixed.java
index b12de99..762e9df 100644
--- a/tmp/c4412a58-39b5-4efa-bbac-235113339894_buggy.java
+++ b/tmp/1bbca4b0-b669-45d8-9ca2-1c44911d10eb_fixed.java
@@ -1,52 +1,6 @@
-    @Override public void visit(NodeTraversal t, Node n, Node parent) {
-      if (t.inGlobalScope()) {
-        return;
-      }
-
-      if (n.isReturn() && n.getFirstChild() != null) {
-        data.get(t.getScopeRoot()).recordNonEmptyReturn();
-      }
-
-      if (t.getScopeDepth() <= 2) {
-        // The first-order function analyzer looks at two types of variables:
-        //
-        // 1) Local variables that are assigned in inner scopes ("escaped vars")
-        //
-        // 2) Local variables that are assigned more than once.
-        //
-        // We treat all global variables as escaped by default, so there's
-        // no reason to do this extra computation for them.
-        return;
-      }
-
-      if (n.isName() && NodeUtil.isLValue(n) &&
-          // Be careful of bleeding functions, which create variables
-          // in the inner scope, not the scope where the name appears.
-          !NodeUtil.isBleedingFunctionName(n)) {
-        String name = n.getString();
-        Scope scope = t.getScope();
-        Var var = scope.getVar(name);
-        if (var != null) {
-          Scope ownerScope = var.getScope();
-          if (ownerScope.isLocal()) {
-            data.get(ownerScope.getRootNode()).recordAssignedName(name);
-          }
-
-          if (scope != ownerScope && ownerScope.isLocal()) {
-            data.get(ownerScope.getRootNode()).recordEscapedVarName(name);
-          }
-        }
-      } else if (n.isGetProp() && n.isUnscopedQualifiedName() &&
-          NodeUtil.isLValue(n)) {
-        String name = NodeUtil.getRootOfQualifiedName(n).getString();
-        Scope scope = t.getScope();
-        Var var = scope.getVar(name);
-        if (var != null) {
-          Scope ownerScope = var.getScope();
-          if (scope != ownerScope && ownerScope.isLocal()) {
-            data.get(ownerScope.getRootNode())
-                .recordEscapedQualifiedName(n.getQualifiedName());
-          }
-        }
-      }
-    }
+Foo.prototype.getDeferredBar = function() { // Scope Depth 1
+  var self = this;
+  return function() { // Scope Depth 2
+    self.bar(true); // 'self' is used here
+  };
+};
\ No newline at end of file
