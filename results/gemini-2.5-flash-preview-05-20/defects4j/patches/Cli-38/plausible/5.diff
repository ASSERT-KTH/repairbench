diff --git a/tmp/ab1db817-5988-42bd-8c85-4ac746d67e6d_buggy.java b/tmp/63497a2c-031a-40a9-a6ab-321b59eaacae_fixed.java
index 81a6e8b..a8feaaa 100644
--- a/tmp/ab1db817-5988-42bd-8c85-4ac746d67e6d_buggy.java
+++ b/tmp/63497a2c-031a-40a9-a6ab-321b59eaacae_fixed.java
@@ -1,19 +1,35 @@
     /**
      * Tells if the token looks like a short option.
      *
-     * @param token
+     * @param token the token to check
+     * @return true if the token is a short option, false otherwise
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
         // remove leading "-" and "=value"
         int pos = token.indexOf("=");
         String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+
+        // if the option name is empty, it's not a valid short option (e.g., "-")
+        if (optName.length() == 0)
+        {
+            return false;
+        }
+
+        // is it a known short option, either as a single character (e.g., -S) or a multi-character name (e.g., -t1)
+        if (options.hasShortOption(optName))
+        {
+            return true;
+        }
+
+        // is it a concatenated short option? (e.g., -ab, -S1S2)
+        // Check if the first character of the potential option name is a defined short option.
+        // The parser will then determine if the subsequent characters are values or other concatenated options.
+        return options.hasShortOption(String.valueOf(optName.charAt(0)));
     }
\ No newline at end of file
