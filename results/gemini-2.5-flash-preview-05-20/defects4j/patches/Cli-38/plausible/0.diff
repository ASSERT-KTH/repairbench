diff --git a/tmp/dc0b64a3-4e3b-4e43-a14d-200433e8f33d_buggy.java b/tmp/971c3fdf-1ede-456f-b88d-d958904f8e21_fixed.java
index 81a6e8b..6a3a464 100644
--- a/tmp/dc0b64a3-4e3b-4e43-a14d-200433e8f33d_buggy.java
+++ b/tmp/971c3fdf-1ede-456f-b88d-d958904f8e21_fixed.java
@@ -1,19 +1,49 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
-        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
-        if (!token.startsWith("-") || token.length() == 1)
-        {
+        // A token is a short option if:
+        // 1. It starts with a single hyphen (e.g., "-a", not "a" or "--long")
+        // 2. It has more than one character (e.g., "-a", not "-")
+        if (token.length() == 1) {
+            return false; // "-" is not a short option by itself
+        }
+        if (!token.startsWith("-") || token.startsWith("--")) {
+            return false; // "foo" or "--long" are not short options
+        }
+
+        // token is now something like "-a", "-ab", "-a=b"
+
+        // Remove leading "-"
+        String optNameCandidate = token.substring(1); // e.g., "a", "ab", "a=b"
+
+        // Determine the potential single option name (before any '=' for value)
+        // For "-a", optName = "a"
+        // For "-ab", optName = "ab"
+        // For "-a=b", optName = "a"
+        int pos = optNameCandidate.indexOf("=");
+        String optName = pos == -1 ? optNameCandidate : optNameCandidate.substring(0, pos);
+
+        // Case 1: Check if the extracted `optName` itself is a registered short option.
+        // This covers -S, -SV (if SV is a single option), -S=V
+        if (options.hasShortOption(optName)) {
+            return true;
+        }
+
+        // Case 2: Check for concatenated short options like -ab.
+        // If optName (e.g., "ab") is not a registered option, but its first character
+        // (e.g., "a") is a registered option, then it's likely a concatenated form.
+        // This only applies if optName is longer than one character.
+        if (optName.length() > 1) {
+            // Check if the *first character* of optName is a short option.
+            // For "-ab", this checks if 'a' is an option.
+            if (options.hasShortOption(String.valueOf(optName.charAt(0)))) {
+                return true;
+            }
+        }
+
         return false;
     }
\ No newline at end of file
-
-        // remove leading "-" and "=value"
-        int pos = token.indexOf("=");
-        String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
-    }
