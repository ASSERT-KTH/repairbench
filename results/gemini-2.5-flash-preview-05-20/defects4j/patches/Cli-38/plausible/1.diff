diff --git a/tmp/7bf909f0-4f81-43a8-a56e-dbcbe7687307_buggy.java b/tmp/512dc37a-9f25-41bf-9d8a-67aefbf859ac_fixed.java
index 81a6e8b..9953bb9 100644
--- a/tmp/7bf909f0-4f81-43a8-a56e-dbcbe7687307_buggy.java
+++ b/tmp/512dc37a-9f25-41bf-9d8a-67aefbf859ac_fixed.java
@@ -1,19 +1,37 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
 
-        // remove leading "-" and "=value"
+        // remove leading "-" and "=value" if present
         int pos = token.indexOf("=");
         String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+
+        // Check if the extracted option name itself is a defined short option.
+        // This covers cases like "-t1" where "t1" is a multi-character short option,
+        // or "-a" where "a" is a single-character short option.
+        if (options.hasShortOption(optName))
+        {
+            return true;
+        }
+
+        // Check for several concatenated short options or short options with implicit values.
+        // For example, if token is "-ab" or "-avalue", and 'a' is a defined short option,
+        // then this token should be considered a short option (bundle or with implicit value).
+        // This is necessary because `optName` would be "ab" or "avalue", which are not themselves
+        // defined short options.
+        if (optName.length() > 0 && options.hasShortOption(String.valueOf(optName.charAt(0))))
+        {
+            return true;
+        }
+
+        return false;
     }
\ No newline at end of file
