diff --git a/tmp/228606de-16a7-48de-9782-4fda15049f22_buggy.java b/tmp/7b40cfd9-f41c-42fb-85d5-7eaf98ee6ab3_fixed.java
index b86b44d..9450d75 100644
--- a/tmp/228606de-16a7-48de-9782-4fda15049f22_buggy.java
+++ b/tmp/7b40cfd9-f41c-42fb-85d5-7eaf98ee6ab3_fixed.java
@@ -1,4 +1,28 @@
     public final Object computeValue(EvalContext context) {
-        return compute(args[0].computeValue(context), args[1].computeValue(context))
-                ? Boolean.TRUE : Boolean.FALSE;
+        Object value1 = args[0].computeValue(context);
+        Object value2 = args[1].computeValue(context);
+
+        // According to XPath 1.0 rules for comparisons involving node-sets:
+        // If one of the operands is an empty node-set, the comparison is always false.
+        // This applies to all comparison operators (=, !=, <, <=, >, >=).
+        // This check must happen before delegating to the 'compute' method,
+        // as 'compute' might not explicitly handle empty node-sets in this manner.
+        if (value1 instanceof org.apache.commons.jxpath.ri.axes.NodeSet) {
+            org.apache.commons.jxpath.ri.axes.NodeSet ns1 = (org.apache.commons.jxpath.ri.axes.NodeSet) value1;
+            if (!ns1.getIterator().hasNext()) { // Check if the node set is empty
+                return Boolean.FALSE;
+            }
+        }
+        if (value2 instanceof org.apache.commons.jxpath.ri.axes.NodeSet) {
+            org.apache.commons.jxpath.ri.axes.NodeSet ns2 = (org.apache.commons.jxpath.ri.axes.NodeSet) value2;
+            if (!ns2.getIterator().hasNext()) { // Check if the node set is empty
+                return Boolean.FALSE;
+            }
+        }
+        
+        // If neither operand is an empty node-set, proceed with the standard computation
+        // by delegating to the 'compute' method. The 'compute' method is expected to
+        // handle the actual comparison logic, including type conversions for numbers,
+        // booleans, strings, and non-empty node sets.
+        return compute(value1, value2) ? Boolean.TRUE : Boolean.FALSE;
     }
\ No newline at end of file
