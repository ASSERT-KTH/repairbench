diff --git a/tmp/aa317062-83fa-4c49-b2c1-c5ad53cc8203_buggy.java b/tmp/785db54d-e1b7-406b-b148-f864c423eb27_fixed.java
index d56e399..9a174c8 100644
--- a/tmp/aa317062-83fa-4c49-b2c1-c5ad53cc8203_buggy.java
+++ b/tmp/785db54d-e1b7-406b-b148-f864c423eb27_fixed.java
@@ -1,11 +1,20 @@
     /**
      * <p>Formats a <code>Date</code> object.</p>
      * 
      * @param date  the date to format
      * @return the formatted string
      */
     public String format(Date date) {
-        Calendar c = new GregorianCalendar(mTimeZone);
+        // The original code used `new GregorianCalendar(mTimeZone)`, which initializes
+        // the Calendar with the specified time zone but uses the system's default locale
+        // for properties like first day of the week and minimal days in the first week.
+        // This causes issues with locale-specific week numbering (e.g., ISO 8601 weeks
+        // as used in some European locales like 'sv_SE').
+        //
+        // To fix this, we must initialize the Calendar instance using the `mLocale` field
+        // which was set during the FastDateFormat construction, ensuring that locale-specific
+        // calendar rules (like the definition of week 1) are applied correctly.
+        Calendar c = Calendar.getInstance(mTimeZone, mLocale);
         c.setTime(date);
         return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();
     }
\ No newline at end of file
