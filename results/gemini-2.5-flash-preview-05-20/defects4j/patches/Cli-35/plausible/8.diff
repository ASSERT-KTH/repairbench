diff --git a/tmp/c51878ff-e61f-429a-83c8-116c8e0514b3_buggy.java b/tmp/d64e37b4-084d-4beb-9ccd-4a1bb47cca20_fixed.java
index c6b65da..6039e45 100644
--- a/tmp/c51878ff-e61f-429a-83c8-116c8e0514b3_buggy.java
+++ b/tmp/d64e37b4-084d-4beb-9ccd-4a1bb47cca20_fixed.java
@@ -1,25 +1,33 @@
     /**
      * Returns the options with a long name starting with the name specified.
      * 
      * @param opt the partial name of the option
      * @return the options matching the partial name specified, or an empty list if none matches
      * @since 1.3
      */
     public List<String> getMatchingOptions(String opt)
     {
         opt = Util.stripLeadingHyphens(opt);
         
-        List<String> matchingOpts = new ArrayList<String>();
-
         // for a perfect match return the single option only
+        // This addresses the ambiguity issue when an exact option name is provided.
+        if (longOpts.containsKey(opt))
+        {
+            List<String> matchingOpts = new ArrayList<String>();
+            matchingOpts.add(opt);
+            return matchingOpts;
+        }
 
+        List<String> matchingOpts = new ArrayList<String>();
+
+        // If no perfect match, then look for options that start with the partial name
         for (String longOpt : longOpts.keySet())
         {
             if (longOpt.startsWith(opt))
             {
                 matchingOpts.add(longOpt);
             }
         }
         
         return matchingOpts;
     }
\ No newline at end of file
