diff --git a/tmp/b0e70324-299a-4008-a617-bc754d0c6c7b_buggy.java b/tmp/e57b6fb8-5020-49b0-bdb4-837aa84ab903_fixed.java
index f47d784..b5e28f2 100644
--- a/tmp/b0e70324-299a-4008-a617-bc754d0c6c7b_buggy.java
+++ b/tmp/e57b6fb8-5020-49b0-bdb4-837aa84ab903_fixed.java
@@ -1,12 +1,31 @@
   @Override
   public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
+
+    // Fix for Issue 115:
+    // The 'arguments' keyword is a special, implicitly available variable in JavaScript
+    // functions (in non-strict mode). A 'var arguments' declaration within a function
+    // effectively shadows or reassigns this special object. Closure Compiler aims
+    // to normalize this to a simple assignment 'arguments = ...' when possible,
+    // especially during optimizations.
+    //
+    // The 'removeDuplicateDeclarations' pass is responsible for cleaning up redundant
+    // variable declarations. When 'var arguments' is encountered, if 'arguments'
+    // is already implicitly declared as a function parameter, 'removeDuplicateDeclarations'
+    // should recognize this as a "duplicate" in a semantic sense and remove the 'var' keyword.
+    //
+    // By moving 'removeDuplicateDeclarations' to run *before* 'MakeDeclaredNamesUnique',
+    // we ensure that the problematic 'var arguments' declaration is transformed into
+    // a simple assignment ('arguments = ...') early in the process. This prevents
+    // 'MakeDeclaredNamesUnique' from misinterpreting 'arguments' as a regular local variable
+    // that needs renaming or causing unexpected behavior related to its special nature.
+    removeDuplicateDeclarations(root);
+
     if (MAKE_LOCAL_NAMES_UNIQUE) {
       MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
       NodeTraversal t = new NodeTraversal(compiler, renamer);
       t.traverseRoots(externs, root);
     }
-    removeDuplicateDeclarations(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
   }
\ No newline at end of file
