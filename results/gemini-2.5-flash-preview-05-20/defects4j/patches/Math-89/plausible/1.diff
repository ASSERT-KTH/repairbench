diff --git a/tmp/c0d38d06-2b4e-4f1d-99ef-83759d7b0150_buggy.java b/tmp/e36c76cc-b5b1-46f1-93c6-745d5620bce0_fixed.java
index 42b7b48..baf2d91 100644
--- a/tmp/c0d38d06-2b4e-4f1d-99ef-83759d7b0150_buggy.java
+++ b/tmp/e36c76cc-b5b1-46f1-93c6-745d5620bce0_fixed.java
@@ -1,16 +1,24 @@
     /**
      * Adds 1 to the frequency count for v.
      * <p>
      * If other objects have already been added to this Frequency, v must
      * be comparable to those that have already been added.
      * </p>
      * 
      * @param v the value to add.
      * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
      *         or is not comparable with previous entries
      * @deprecated use {@link #addValue(Comparable)} instead
      */
     @Deprecated
     public void addValue(Object v) {
+        // The Javadoc states that an IllegalArgumentException should be thrown if v is not Comparable.
+        // The original code would throw a ClassCastException if v is not Comparable,
+        // which does not match the specified behavior.
+        if (!(v instanceof Comparable)) {
+            throw new IllegalArgumentException(
+                "Value must implement Comparable, but '" + v.getClass().getName() + "' does not."
+            );
+        }
         addValue((Comparable<?>) v);            
     }
\ No newline at end of file
