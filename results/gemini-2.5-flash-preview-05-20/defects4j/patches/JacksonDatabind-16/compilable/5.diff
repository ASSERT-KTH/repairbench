diff --git a/tmp/bfb9caf9-8583-4bce-bede-94463fb3f883_buggy.java b/tmp/f9863df2-f2df-405e-a68e-55cf22a4dc8a_fixed.java
index 27520a0..20e2ea7 100644
--- a/tmp/bfb9caf9-8583-4bce-bede-94463fb3f883_buggy.java
+++ b/tmp/f9863df2-f2df-405e-a68e-55cf22a4dc8a_fixed.java
@@ -1,7 +1,24 @@
     protected final boolean _add(Annotation ann) {
         if (_annotations == null) {
             _annotations = new HashMap<Class<? extends Annotation>,Annotation>();
         }
-        Annotation previous = _annotations.put(ann.annotationType(), ann);
-        return (previous != null) && previous.equals(ann);
+        Class<? extends Annotation> type = ann.annotationType();
+        
+        // Check if an annotation of this type already exists.
+        Annotation previous = _annotations.get(type);
+
+        if (previous != null) {
+            // An annotation of this type already exists.
+            // To implement "first-one-wins" (as implied by the test failure for mix-ins),
+            // we do NOT replace the existing annotation.
+            // The method's original return contract: returns true if the previous annotation
+            // was identical to the new one (i.e., the put would have been redundant).
+            return previous.equals(ann);
+        }
+        
+        // No annotation of this type exists, so add the new one.
+        _annotations.put(type, ann);
+        // A new annotation was genuinely added (not a duplicate of an existing one),
+        // so return false (as per the original method's logic for new additions/replacements).
+        return false;
     }
\ No newline at end of file
