diff --git a/tmp/61fd0906-35c1-4825-af47-966bf661d831_buggy.java b/tmp/0f32450d-a33e-4548-824c-1dc5ec313f24_fixed.java
index 6c87721..43a3f76 100644
--- a/tmp/61fd0906-35c1-4825-af47-966bf661d831_buggy.java
+++ b/tmp/0f32450d-a33e-4548-824c-1dc5ec313f24_fixed.java
@@ -1,11 +1,32 @@
     static boolean preserveWhitespace(Node node) {
         // looks only at this element and five levels up, to prevent recursion & needless stack searches
-        if (node != null && node instanceof Element) {
+        if (node == null || !(node instanceof Element)) {
+            return false;
+        }
+
         Element el = (Element) node;
-                if (el.tag.preserveWhitespace())
+
+        // Check if the current element itself preserves whitespace
+        if (el.tag.preserveWhitespace()) {
             return true;
-                else
-                    return el.parent() != null && el.parent().tag.preserveWhitespace();
+        }
+
+        // Traverse up the parent hierarchy for a limited depth (five levels up)
+        // If 'el' is the current node, we need to check its parent (1 level up),
+        // its grandparent (2 levels up), and so on, up to 5 levels.
+        Node current = el;
+        for (int i = 0; i < 5; i++) { // Iterate up to 5 times for parents
+            if (current.parent() != null && current.parent() instanceof Element) {
+                current = current.parent(); // Move up to the parent node
+                Element parentEl = (Element) current;
+                if (parentEl.tag.preserveWhitespace()) {
+                    return true;
+                }
+            } else {
+                // Reached the Document root, or a parent that is not an Element
+                // (e.g., a Document node itself), so stop traversing up.
+                break;
+            }
         }
         return false;
     }
\ No newline at end of file
