diff --git a/tmp/258503b5-dfde-407d-bc4c-562373d3d0fd_buggy.java b/tmp/6f8eb498-933a-4872-9a97-90cee938ff33_fixed.java
index 6c87721..6fc7a58 100644
--- a/tmp/258503b5-dfde-407d-bc4c-562373d3d0fd_buggy.java
+++ b/tmp/6f8eb498-933a-4872-9a97-90cee938ff33_fixed.java
@@ -1,11 +1,31 @@
     static boolean preserveWhitespace(Node node) {
         // looks only at this element and five levels up, to prevent recursion & needless stack searches
-        if (node != null && node instanceof Element) {
-            Element el = (Element) node;
-                if (el.tag.preserveWhitespace())
+        if (node == null) {
+            return false;
+        }
+
+        Node current = node;
+
+        // If the node itself is not an Element (e.g., a TextNode, Comment, CData, etc.),
+        // start checking from its parent element for whitespace preservation context.
+        // Whitespace preservation is determined by the containing Element's tag.
+        if (!(current instanceof Element)) {
+            current = current.parent();
+        }
+
+        int depth = 0;
+        final int MAX_DEPTH = 5; // Check the current element (or its parent if not an element) and up to 5 ancestors.
+
+        while (current != null && depth <= MAX_DEPTH) {
+            if (current instanceof Element) {
+                Element el = (Element) current;
+                if (el.tag.preserveWhitespace()) {
                     return true;
-                else
-                    return el.parent() != null && el.parent().tag.preserveWhitespace();
                 }
+            }
+            current = current.parent();
+            depth++;
+        }
+
         return false;
     }
\ No newline at end of file
