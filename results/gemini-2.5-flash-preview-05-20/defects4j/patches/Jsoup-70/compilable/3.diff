diff --git a/tmp/0f400ec2-85f1-4c3b-acec-5aba52b15f26_buggy.java b/tmp/a721f93b-ab3a-4afb-8c54-27878ce7d0e6_fixed.java
index 6c87721..0827b28 100644
--- a/tmp/0f400ec2-85f1-4c3b-acec-5aba52b15f26_buggy.java
+++ b/tmp/a721f93b-ab3a-4afb-8c54-27878ce7d0e6_fixed.java
@@ -1,11 +1,24 @@
     static boolean preserveWhitespace(Node node) {
         // looks only at this element and five levels up, to prevent recursion & needless stack searches
-        if (node != null && node instanceof Element) {
+        if (node == null || !(node instanceof Element)) {
+            return false;
+        }
+
         Element el = (Element) node;
-                if (el.tag.preserveWhitespace())
+        // The original comment suggests checking up to five levels up.
+        // We iterate through the element and its ancestors up to a certain depth.
+        // This ensures that if a parent element like <pre> or <textarea> is found
+        // within the hierarchy, whitespace is preserved for its descendants.
+        int depth = 0;
+        final int maxDepth = 5; // Limit as per comment
+
+        do {
+            if (el.tag.preserveWhitespace()) {
                 return true;
-                else
-                    return el.parent() != null && el.parent().tag.preserveWhitespace();
             }
+            el = el.parent();
+            depth++;
+        } while (el != null && depth <= maxDepth); // Continue as long as there's a parent and we haven't exceeded the depth limit
+
         return false;
     }
\ No newline at end of file
