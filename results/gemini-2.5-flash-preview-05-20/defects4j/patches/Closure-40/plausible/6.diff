diff --git a/tmp/30a415f6-b6cb-4f22-9330-2b50def7e37b_buggy.java b/tmp/17c62102-c945-449f-8b90-f20c0aab03ae_fixed.java
index 670114d..973cd2a 100644
--- a/tmp/30a415f6-b6cb-4f22-9330-2b50def7e37b_buggy.java
+++ b/tmp/17c62102-c945-449f-8b90-f20c0aab03ae_fixed.java
@@ -1,48 +1,64 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
+        Node callee = n.getFirstChild();
+        // Check if this is a goog.inherits call.
+        // The first argument of goog.inherits implicitly defines a class.
+        String qualifiedName = callee.getQualifiedName();
+        if ("goog.inherits".equals(qualifiedName)) {
+            Node targetClassNode = n.getChildAtIndex(1); // Get the first argument node
+            if (targetClassNode != null) {
+                // Create NameInformation for the target class name (e.g., ns.PageSelectionModel.ChangeEvent)
+                NameInformation nsClass = createNameInformation(t, targetClassNode, n);
+                if (nsClass != null && nsClass.name != null) {
+                    // Record it as a definition, similar to a var declaration or assignment.
+                    recordSet(nsClass.name, targetClassNode);
+                }
+            }
+        }
+
+        // Original logic: Record calls to functions that affect class definitions (e.g., goog.inherits itself)
+        NameInformation ns = createNameInformation(t, callee, n);
         if (ns != null && ns.onlyAffectsClassDef) {
           JsName name = getName(ns.name, false);
           if (name != null) {
           refNodes.add(new ClassDefiningFunctionNode(
               name, n, parent, parent.getParent()));
           }
         }
       }
     }
\ No newline at end of file
