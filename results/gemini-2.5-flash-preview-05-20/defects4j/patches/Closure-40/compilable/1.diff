diff --git a/tmp/47461b21-2644-4b9c-9508-7f2973b8d0ac_buggy.java b/tmp/ac35d16f-62fe-4531-8215-c67e4e8a4913_fixed.java
index 670114d..71066ca 100644
--- a/tmp/47461b21-2644-4b9c-9508-7f2973b8d0ac_buggy.java
+++ b/tmp/ac35d16f-62fe-4531-8215-c67e4e8a4913_fixed.java
@@ -1,48 +1,61 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
+            // For function declarations, nameNode.getString() gets the simple name.
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
+        // For call nodes, the first child is the function being called.
+        Node callTarget = n.getFirstChild();
+
+        NameInformation targetNs = createNameInformation(t, callTarget, n);
+        if (targetNs != null && targetNs.onlyAffectsClassDef) {
+          // If the target of the call is a function that affects class definitions
+          // (e.g., goog.inherits), the name being defined is typically the first argument
+          // of the call.
+          Node nameNodeToDefine = n.getChildAtIndex(1);
+          if (nameNodeToDefine != null) {
+            NameInformation definedClassNs = createNameInformation(t, nameNodeToDefine, n);
+            if (definedClassNs != null) {
+              JsName name = getName(definedClassNs.name, false);
               if (name != null) {
+                // This records the first argument as a class-defining entity.
                 refNodes.add(new ClassDefiningFunctionNode(
                     name, n, parent, parent.getParent()));
               }
             }
           }
         }
+      }
+    }
\ No newline at end of file
