diff --git a/tmp/a2926b0d-73d6-43b9-8446-eb21953fd4bb_buggy.java b/tmp/54d4ad35-d99f-4cad-9981-e2778bd6249b_fixed.java
index 670114d..e0c9a66 100644
--- a/tmp/a2926b0d-73d6-43b9-8446-eb21953fd4bb_buggy.java
+++ b/tmp/54d4ad35-d99f-4cad-9981-e2778bd6249b_fixed.java
@@ -1,48 +1,57 @@
     @Override
     public void visit(NodeTraversal t, Node n, Node parent) {
 
       // Record global variable and function declarations
       if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
           NameInformation ns = createNameInformation(t, n, parent);
           Preconditions.checkNotNull(ns);
           recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
           Node nameNode = n.getFirstChild();
           NameInformation ns = createNameInformation(t, nameNode, n);
           if (ns != null) {
             JsName nameInfo = getName(nameNode.getString(), true);
             recordSet(nameInfo.name, nameNode);
           }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
           NameInformation ns = createNameInformation(t, n, parent);
           if (ns != null) {
             recordSet(ns.name, n);
           }
         }
       }
 
       // Record assignments and call sites
       if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
           if (ns.isPrototype) {
             recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
           } else {
             recordSet(ns.name, nameNode);
           }
         }
       } else if (n.isCall()) {
-        Node nameNode = n.getFirstChild();
-        NameInformation ns = createNameInformation(t, nameNode, n);
-        if (ns != null && ns.onlyAffectsClassDef) {
-          JsName name = getName(ns.name, false);
+        Node callTarget = n.getFirstChild(); // The function being called (e.g., goog.inherits)
+        NameInformation callTargetInfo = createNameInformation(t, callTarget, n);
+        if (callTargetInfo != null && callTargetInfo.onlyAffectsClassDef) {
+          // If this call affects a class definition, the first argument is typically the class being defined.
+          Node classBeingDefinedNode = n.getChildAtIndex(1); // Get the first argument
+          if (classBeingDefinedNode != null) {
+            NameInformation classInfo = createNameInformation(t, classBeingDefinedNode, n);
+            if (classInfo != null && classInfo.name != null) {
+              // Get the JsName for the class being defined. Use 'false' to only get existing names.
+              // If the class is not recognized (e.g., not declared with @constructor), 'name' will be null.
+              JsName name = getName(classInfo.name, false);
               if (name != null) {
                 refNodes.add(new ClassDefiningFunctionNode(
                     name, n, parent, parent.getParent()));
               }
             }
           }
         }
+      }
+    }
\ No newline at end of file
