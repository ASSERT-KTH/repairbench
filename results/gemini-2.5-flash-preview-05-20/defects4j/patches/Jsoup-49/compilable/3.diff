diff --git a/tmp/cfb81ec3-9748-4c8f-8613-7a09637dcaf4_buggy.java b/tmp/745b301d-0d1a-46d1-a6b1-7f2477132029_fixed.java
index a37dc7a..f914483 100644
--- a/tmp/cfb81ec3-9748-4c8f-8613-7a09637dcaf4_buggy.java
+++ b/tmp/745b301d-0d1a-46d1-a6b1-7f2477132029_fixed.java
@@ -1,10 +1,32 @@
     protected void addChildren(int index, Node... children) {
         Validate.noNullElements(children);
         ensureChildNodes();
         for (int i = children.length - 1; i >= 0; i--) {
             Node in = children[i];
+
+            // If the node 'in' is already a child of 'this' (the current element),
+            // it needs to be removed from its current position before being re-added at 'index'.
+            // This prevents duplicates and correctly moves the node.
+            if (in.parent() == this) {
+                int currentPos = in.siblingIndex();
+                // Ensure the node is actually in the list at the reported siblingIndex.
+                // This check protects against potential inconsistencies, though siblingIndex should be reliable.
+                if (currentPos >= 0 && currentPos < childNodes.size() && childNodes.get(currentPos) == in) {
+                    childNodes.remove(currentPos);
+                    // If the node was removed from a position *before* the target insertion index,
+                    // the target index effectively shifts left by one. Adjust 'index' accordingly.
+                    if (currentPos < index) {
+                        index--;
+                    }
+                }
+            }
+            // Reparent the child (sets its parent reference).
+            // This method does not remove the child from its old parent if the old parent is 'this',
+            // which is why the explicit removal logic above is necessary for 'move' operations.
             reparentChild(in);
+            // Add the child at the specified (and potentially adjusted) index.
             childNodes.add(index, in);
         }
+        // Reindex children from the insertion point to update siblingIndex for all affected nodes.
         reindexChildren(index);
     }
\ No newline at end of file
