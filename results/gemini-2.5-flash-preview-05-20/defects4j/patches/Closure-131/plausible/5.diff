diff --git a/tmp/3568355d-a893-4883-b5d2-45642482ffae_buggy.java b/tmp/e67fdf88-a867-4bf1-bf84-6f38107333aa_fixed.java
index 19fe1b4..eff1ad5 100644
--- a/tmp/3568355d-a893-4883-b5d2-45642482ffae_buggy.java
+++ b/tmp/e67fdf88-a867-4bf1-bf84-6f38107333aa_fixed.java
@@ -1,17 +1,37 @@
     public static boolean isJSIdentifier(String s) {
       int length = s.length();
 
-      if (length == 0 ||
-          !Character.isJavaIdentifierStart(s.charAt(0))) {
+      if (length == 0) {
         return false;
       }
 
+      // For the purpose of converting property names to dotted notation,
+      // Closure Compiler uses a very strict definition of a JS identifier,
+      // typically restricted to ASCII letters, '$', and '_',
+      // followed by ASCII letters, digits, '$', or '_'.
+      // This is based on the ECMA-262, 3rd Edition, 7.6 rules for identifiers,
+      // and specifically the implementation used in NodeUtil.isValidIdentifier.
+
+      char firstChar = s.charAt(0);
+      // Check if the first character is a valid JS identifier start character
+      if (! (('a' <= firstChar && firstChar <= 'z')
+          || ('A' <= firstChar && firstChar <= 'Z')
+          || (firstChar == '$')
+          || (firstChar == '_'))) {
+        return false;
+      }
+
+      // Check if the remaining characters are valid JS identifier part characters
       for (int i = 1; i < length; i++) {
-        if (
-            !Character.isJavaIdentifierPart(s.charAt(i))) {
+        char c = s.charAt(i);
+        if (! ( (('a' <= c && c <= 'z')
+            || ('A' <= c && c <= 'Z')
+            || (c == '$')
+            || (c == '_'))
+            || ('0' <= c && c <= '9'))) {
           return false;
         }
       }
 
       return true;
     }
\ No newline at end of file
